{"number":27330,"comment_id":"1703917905","body":"Hi @rakleed! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327330). Thanks!","updated_at":"2023-09-02T19:23:17Z","created_at":"2023-09-02T19:23:17Z","creator_user_login":"facebook-github-bot"}
{"number":27330,"comment_id":"1703940132","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-09-02T21:03:45Z","created_at":"2023-09-02T21:03:45Z","creator_user_login":"facebook-github-bot"}
{"number":27311,"comment_id":"1699232565","body":"\r\nhttps://github.com/facebook/react/assets/112266194/d8f41211-3438-4b10-baa1-cf10bba648d2\r\n\r\n","updated_at":"2023-08-30T13:51:52Z","created_at":"2023-08-30T13:51:52Z","creator_user_login":"raghchawla131"}
{"number":27310,"comment_id":"1701161768","body":"Hey, I will get to it probably at the start of the next week, currently fixing potential next release.\r\n\r\nThanks for working on this! Let's think how we can use this data:\r\n- What is the main purpose for this? What this data can show me as a developer?\r\n- Maybe we can show this data in a different way? Like a piechart or something. Not important for now, just thinking ahead.","updated_at":"2023-08-31T14:28:59Z","created_at":"2023-08-31T14:28:59Z","creator_user_login":"hoxyq"}
{"number":27310,"comment_id":"1701294796","body":"> Hey, I will get to it probably at the start of the next week, currently fixing potential next release.\r\n> \r\n> Thanks for working on this! Let's think how we can use this data:\r\n> \r\n> * What is the main purpose for this? What this data can show me as a developer?\r\n> * Maybe we can show this data in a different way? Like a piechart or something. Not important for now, just thinking ahead.\r\n\r\nI understand, get back whenever its possible for you, i can answer the main purpose as far for now it indicates the number of instances a particular component is mounted at a particular render cycle.\r\nProbably can be used for performance analysis etc.\r\nand thanks for the suggestions may be we can refine the idea more, lets see.","updated_at":"2023-08-31T15:48:15Z","created_at":"2023-08-31T15:48:15Z","creator_user_login":"Biki-das"}
{"number":27312,"comment_id":"1699506365","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 2fba484cd095ea79b940364cea5107fa4ca9f0c8...24b7fc7ce513895e619255bb181ca4be0f50e48f\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/24b7fc7ce513895e619255bb181ca4be0f50e48f/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **=** | 165.63 kB | 165.63 kB | = | 51.88 kB | 51.88 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/24b7fc7ce513895e619255bb181ca4be0f50e48f/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **=** | 174.70 kB | 174.70 kB | = | 54.61 kB | 54.61 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/24b7fc7ce513895e619255bb181ca4be0f50e48f/files/facebook-www/ReactDOM-prod.classic.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **=** | 570.44 kB | 570.44 kB | = | 100.45 kB | 100.45 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/24b7fc7ce513895e619255bb181ca4be0f50e48f/files/facebook-www/ReactDOM-prod.modern.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **=** | 554.21 kB | 554.21 kB | = | 97.61 kB | 97.61 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 24b7fc7ce513895e619255bb181ca4be0f50e48f\n</p>\n","updated_at":"2023-08-30T16:35:44Z","created_at":"2023-08-30T16:35:44Z","creator_user_login":"react-sizebot"}
{"number":27308,"comment_id":"1698308424","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: ddff504695f33c19e8c0792bff82bd8f8b8f7c05...0349d56df3297d2c86bc1b88ce30cd31d78b30d6\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0349d56df3297d2c86bc1b88ce30cd31d78b30d6/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **=** | 165.63 kB | 165.63 kB | = | 51.88 kB | 51.88 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0349d56df3297d2c86bc1b88ce30cd31d78b30d6/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **=** | 174.70 kB | 174.70 kB | = | 54.61 kB | 54.61 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/0349d56df3297d2c86bc1b88ce30cd31d78b30d6/files/facebook-www/ReactDOM-prod.classic.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **=** | 570.44 kB | 570.44 kB | = | 100.45 kB | 100.45 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/0349d56df3297d2c86bc1b88ce30cd31d78b30d6/files/facebook-www/ReactDOM-prod.modern.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **=** | 554.21 kB | 554.21 kB | = | 97.61 kB | 97.61 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 0349d56df3297d2c86bc1b88ce30cd31d78b30d6\n</p>\n","updated_at":"2023-08-30T00:16:05Z","created_at":"2023-08-30T00:16:05Z","creator_user_login":"react-sizebot"}
{"number":27322,"comment_id":"1702241043","body":"Hi there! \r\n\r\nYou can get react working very simply by following these steps:\r\n\r\n1. `Install Node.js`\r\nInstall node.js, together with `npm` (the Node Package Manager)\r\n\r\n2. `create-react-app`\r\nOpen a terminal anywhere where you want to create your react project.\r\n\r\n- If you still need to make a folder, run the following command:\r\n`npm create-react-app  [your-app-name]`\r\n\r\n- If you are already in the folder where you want to create the react app, run the following command:\r\n`npm create-react-app .`\r\n\r\n3. After `create-react-app` is finished, run:\r\n`npm start`\r\n\r\n\r\nAfter all these steps you should see your React app live in a local development server.\r\n","updated_at":"2023-09-01T06:34:41Z","created_at":"2023-09-01T06:34:41Z","creator_user_login":"eben-vranken"}
{"number":27289,"comment_id":"1696655203","body":"Hello mshmyw, this behavior is indeed very weird. I will try to see what is happening and see if I can fix it","updated_at":"2023-08-29T01:55:36Z","created_at":"2023-08-29T01:55:36Z","creator_user_login":"MarceloSpessoto"}
{"number":27319,"comment_id":"1702687684","body":"Isn't this just how React normally processes and handles props?\r\n\r\nWhen you use React.createElement and pass props, React essentially serializes and deserializes them. In this process, non-serializable values like Symbols or functions will be lost, as you've noticed.","updated_at":"2023-09-01T12:43:29Z","created_at":"2023-09-01T12:43:29Z","creator_user_login":"eben-vranken"}
{"number":27319,"comment_id":"1702866899","body":"@eben-vranken  Thank you for your response. But with this scenario we are discussing here is not about passing props from a server component to a client component. i mean there is no process of serializing props via network, We are talking about the normal case of passing props between two React components. In this situation, passing functions (just like event handler) is obviously possible. Therefore, I would like to enhance it to allow the passing properties of symbols.","updated_at":"2023-09-01T14:43:01Z","created_at":"2023-09-01T14:43:01Z","creator_user_login":"misaka42"}
{"number":27287,"comment_id":"1694501082","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 9d4582dffdea5b4dcb6a6093ea848d15423c7701...d4b308a2141f571c03acb402242acaf53a4025ff\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d4b308a2141f571c03acb402242acaf53a4025ff/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=9d4582dffdea5b4dcb6a6093ea848d15423c7701) | **=** | 165.59 kB | 165.59 kB | = | 51.88 kB | 51.88 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d4b308a2141f571c03acb402242acaf53a4025ff/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=9d4582dffdea5b4dcb6a6093ea848d15423c7701) | **=** | 173.43 kB | 173.43 kB | = | 54.25 kB | 54.24 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/d4b308a2141f571c03acb402242acaf53a4025ff/files/facebook-www/ReactDOM-prod.classic.js?compare=9d4582dffdea5b4dcb6a6093ea848d15423c7701) | **=** | 569.92 kB | 569.92 kB | = | 100.38 kB | 100.38 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/d4b308a2141f571c03acb402242acaf53a4025ff/files/facebook-www/ReactDOM-prod.modern.js?compare=9d4582dffdea5b4dcb6a6093ea848d15423c7701) | **=** | 553.72 kB | 553.72 kB | = | 97.54 kB | 97.54 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against d4b308a2141f571c03acb402242acaf53a4025ff\n</p>\n","updated_at":"2023-08-26T21:03:32Z","created_at":"2023-08-26T21:03:32Z","creator_user_login":"react-sizebot"}
{"number":27293,"comment_id":"1694769345","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: b798223a620dad77077d27e53cc99cbd54312d99...a2eac2e5f567d1ce9aeb59a71777c3b152c9c978\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a2eac2e5f567d1ce9aeb59a71777c3b152c9c978/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 165.61 kB | 165.61 kB | = | 51.88 kB | 51.87 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a2eac2e5f567d1ce9aeb59a71777c3b152c9c978/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 173.44 kB | 173.44 kB | = | 54.25 kB | 54.24 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/a2eac2e5f567d1ce9aeb59a71777c3b152c9c978/files/facebook-www/ReactDOM-prod.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 569.80 kB | 569.80 kB | = | 100.39 kB | 100.39 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/a2eac2e5f567d1ce9aeb59a71777c3b152c9c978/files/facebook-www/ReactDOM-prod.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 553.60 kB | 553.60 kB | = | 97.54 kB | 97.54 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against a2eac2e5f567d1ce9aeb59a71777c3b152c9c978\n</p>\n","updated_at":"2023-08-27T22:08:44Z","created_at":"2023-08-27T21:47:18Z","creator_user_login":"react-sizebot"}
{"number":27298,"comment_id":"1702254745","body":"Can be closed....?","updated_at":"2023-09-01T06:48:43Z","created_at":"2023-09-01T06:48:43Z","creator_user_login":"eben-vranken"}
{"number":27298,"comment_id":"1703200567","body":"@Abelj08 \r\nSeems like you want to test the `issue` option. It is better to rename with \"Test: {what-you-want-to-name-it}\" and close the issue when you are satisfied with your exploration.","updated_at":"2023-09-01T19:00:00Z","created_at":"2023-09-01T19:00:00Z","creator_user_login":"tajpuriya27"}
{"number":27281,"comment_id":"1693720549","body":"Hello World","updated_at":"2023-08-25T17:40:53Z","created_at":"2023-08-25T17:40:53Z","creator_user_login":"Shiva-Hiremath786"}
{"number":27255,"comment_id":"1685466238","body":"I'd also like to add an example of another user experiencing difficulties setting up and debugging setupProxy.js:\r\n\r\nhttps://community.freshworks.dev/t/setupproxy-js-does-not-work-inside-react-app/3093/20","updated_at":"2023-08-21T00:59:06Z","created_at":"2023-08-21T00:59:06Z","creator_user_login":"erjoalgo"}
{"number":27254,"comment_id":"1685418891","body":"Sample demo from attaching to docker container running the react app:\r\n\r\n```\r\nroot@4c20b566b8b8:/ui# curl -I localhost:3001/index.html\r\nHTTP/1.1 200 OK\r\nX-Powered-By: Express\r\nAccept-Ranges: bytes\r\nCache-Control: public, max-age=0\r\nLast-Modified: Wed, 02 Aug 2023 21:30:56 GMT\r\nETag: W/\"5a7-189b8293880\"\r\nContent-Type: text/html; charset=UTF-8\r\nContent-Length: 1447\r\nVary: Accept-Encoding\r\nDate: Sun, 20 Aug 2023 23:00:57 GMT\r\nConnection: keep-alive\r\nKeep-Alive: timeout=5\r\n\r\nroot@4c20b566b8b8:/ui# curl -I localhost:3001/manifest.json\r\nHTTP/1.1 404 Not Found\r\nX-Powered-By: Express\r\ndate: Sun, 20 Aug 2023 23:01:03 GMT\r\ncontent-type: text/html; charset=UTF-8\r\nconnection: close\r\nserver: Jetty(9.2.21.v20170120)\r\nVary: Accept-Encoding\r\n\r\nroot@4c20b566b8b8:/ui# ls public/\r\n1089009.png  favicon.ico  index.html  manifest.json\r\nroot@4c20b566b8b8:/ui# \r\n```","updated_at":"2023-08-20T23:02:02Z","created_at":"2023-08-20T23:02:02Z","creator_user_login":"erjoalgo"}
{"number":27254,"comment_id":"1685468996","body":"I added some logging to `setupProxy.js`, but like another user experienced in https://stackoverflow.com/questions/63660384/how-to-display-console-logs-using-webpack-build, I couldn't find those logs in either the terminal or the browser console. And I couldn't find any documentation on where to find those logs.","updated_at":"2023-08-21T01:03:00Z","created_at":"2023-08-21T01:03:00Z","creator_user_login":"erjoalgo"}
{"number":27256,"comment_id":"1688485737","body":"Changes on ref does not trigger a rerender anyway.\r\n\r\nhttps://stackoverflow.com/questions/60476155/is-it-safe-to-use-ref-current-as-useeffects-dependency-when-ref-points-to-a-dom\r\n\r\nMaybe you can save that value in a state, or if you are interacting with dom you might use this: https://legacy.reactjs.org/docs/hooks-faq.html#how-can-i-measure-a-dom-node","updated_at":"2023-08-22T15:58:24Z","created_at":"2023-08-22T15:58:24Z","creator_user_login":"alimertcakar"}
{"number":27256,"comment_id":"1691411780","body":"Changing the value within a useRef variable doesn't result in the component re-rendering; the component's appearance remains unaffected by such modifications.\r\n","updated_at":"2023-08-24T10:19:58Z","created_at":"2023-08-24T10:19:58Z","creator_user_login":"zainbinshakoor"}
{"number":27235,"comment_id":"1685789644","body":"Workaround to disable the \"wheel\" listener: https://github.com/facebook/react/issues/20662#issuecomment-767517461","updated_at":"2023-08-21T07:23:19Z","created_at":"2023-08-21T07:23:19Z","creator_user_login":"turkey1zh"}
{"number":27213,"comment_id":"1674334892","body":"@acdlite, seems follow code is already call `enqueueConcurrentHookUpdate` when need update:\r\n\r\nhttps://github.com/facebook/react/pull/24663/files#diff-d0d3346ffbaafc7b47ed46f19ccdd179480fa697033bed903c60d8455a9ce8bbR2309\r\n\r\nThe `enqueueConcurrentHookUpdateAndEagerlyBailout` seems unecessary:\r\n\r\nhttps://github.com/facebook/react/pull/24663/files#diff-d0d3346ffbaafc7b47ed46f19ccdd179480fa697033bed903c60d8455a9ce8bbR2290","updated_at":"2023-08-11T07:43:15Z","created_at":"2023-08-11T07:43:15Z","creator_user_login":"zombieJ"}
{"number":27213,"comment_id":"1694684582","body":"I dont know if its related but in dev mode, the useEffect renders twice and in production mode, once..","updated_at":"2023-08-27T14:36:30Z","created_at":"2023-08-27T14:36:30Z","creator_user_login":"shahul01"}
{"number":27196,"comment_id":"1666697732","body":"As to not confuse someone into picking this up unnecessarily, I have created a PR with a fix for this: https://github.com/facebook/react/pull/27195","updated_at":"2023-08-06T03:35:43Z","created_at":"2023-08-06T03:35:43Z","creator_user_login":"MattEvanoff"}
{"number":27325,"comment_id":"1702955154","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 7022e8d6a3222c97d287dfa0f2361acc8a30683a...20e0d8b1a1f4c608569889688620102edf276525\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/20e0d8b1a1f4c608569889688620102edf276525/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **=** | 165.63 kB | 165.63 kB | = | 51.88 kB | 51.88 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/20e0d8b1a1f4c608569889688620102edf276525/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **=** | 174.70 kB | 174.70 kB | = | 54.61 kB | 54.61 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/20e0d8b1a1f4c608569889688620102edf276525/files/facebook-www/ReactDOM-prod.classic.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **=** | 570.44 kB | 570.44 kB | = | 100.45 kB | 100.45 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/20e0d8b1a1f4c608569889688620102edf276525/files/facebook-www/ReactDOM-prod.modern.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **=** | 554.21 kB | 554.21 kB | = | 97.61 kB | 97.61 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 20e0d8b1a1f4c608569889688620102edf276525\n</p>\n","updated_at":"2023-09-01T15:44:33Z","created_at":"2023-09-01T15:44:33Z","creator_user_login":"react-sizebot"}
{"number":27288,"comment_id":"1694539594","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: b798223a620dad77077d27e53cc99cbd54312d99...70559abfbc744a4253061b8a0b252b710ed03ee3\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/70559abfbc744a4253061b8a0b252b710ed03ee3/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 165.61 kB | 165.61 kB | = | 51.88 kB | 51.88 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/70559abfbc744a4253061b8a0b252b710ed03ee3/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 173.44 kB | 173.44 kB | = | 54.25 kB | 54.25 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/70559abfbc744a4253061b8a0b252b710ed03ee3/files/facebook-www/ReactDOM-prod.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 569.80 kB | 569.80 kB | = | 100.39 kB | 100.39 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/70559abfbc744a4253061b8a0b252b710ed03ee3/files/facebook-www/ReactDOM-prod.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 553.60 kB | 553.60 kB | = | 97.54 kB | 97.54 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 70559abfbc744a4253061b8a0b252b710ed03ee3\n</p>\n","updated_at":"2023-08-27T02:15:32Z","created_at":"2023-08-27T01:27:48Z","creator_user_login":"react-sizebot"}
{"number":27280,"comment_id":"1693314367","body":"Hello @liuhuakawaii ,\r\n\r\nI appreciate your effort in bringing this issue to attention. I've taken a look at the provided code snippet, but it seems that the error you're encountering might not directly stem from the code you've shared. React can sometimes exhibit unexpected behaviors that might be tied to different parts of your application.\r\n\r\nIn order to assist you better, could you kindly provide us with more context and details? This would help us gain a clearer understanding of the situation. If you could provide the following information, it would be immensely helpful:\r\n\r\n1. Additional Code Samples: If feasible, could you share any relevant sections of your code that are related to the \"mouseenter\" event and the manipulation of the <span> element?\r\n\r\n2. Complete Error Message: Sharing the complete error message you're receiving, along with any associated stack trace or logs, would provide us with valuable insights into the nature of the issue.\r\n\r\n3. Steps to Reproduce: Could you please describe the precise sequence of actions that lead to the error? This will allow us to recreate the problem on our end and better understand the context.\r\n\r\n\r\n","updated_at":"2023-08-25T12:54:27Z","created_at":"2023-08-25T12:54:27Z","creator_user_login":"mvaibhav77"}
{"number":27245,"comment_id":"1683407287","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 5623f2acf93d762b0b67dab76668b564a6f3b21e...457f2917152a191cc211c07ff860a84b1d2e689a\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/457f2917152a191cc211c07ff860a84b1d2e689a/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=5623f2acf93d762b0b67dab76668b564a6f3b21e) | **=** | 165.67 kB | 165.67 kB | = | 51.99 kB | 51.99 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/457f2917152a191cc211c07ff860a84b1d2e689a/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=5623f2acf93d762b0b67dab76668b564a6f3b21e) | **=** | 173.16 kB | 173.16 kB | = | 54.21 kB | 54.21 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/457f2917152a191cc211c07ff860a84b1d2e689a/files/facebook-www/ReactDOM-prod.classic.js?compare=5623f2acf93d762b0b67dab76668b564a6f3b21e) | **=** | 570.50 kB | 570.50 kB | = | 100.49 kB | 100.49 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/457f2917152a191cc211c07ff860a84b1d2e689a/files/facebook-www/ReactDOM-prod.modern.js?compare=5623f2acf93d762b0b67dab76668b564a6f3b21e) | **=** | 554.30 kB | 554.30 kB | = | 97.66 kB | 97.66 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 457f2917152a191cc211c07ff860a84b1d2e689a\n</p>\n","updated_at":"2023-08-18T06:16:37Z","created_at":"2023-08-18T06:16:37Z","creator_user_login":"react-sizebot"}
{"number":27303,"comment_id":"1696640556","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 456d153bb582798effa76c09bec2405ab2e392cf...307b6fea398471a7670c9a432aa6e8224a4fb5fe\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/307b6fea398471a7670c9a432aa6e8224a4fb5fe/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=456d153bb582798effa76c09bec2405ab2e392cf) | **=** | 165.61 kB | 165.61 kB | = | 51.88 kB | 51.87 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/307b6fea398471a7670c9a432aa6e8224a4fb5fe/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=456d153bb582798effa76c09bec2405ab2e392cf) | **=** | 174.69 kB | 174.69 kB | = | 54.61 kB | 54.61 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/307b6fea398471a7670c9a432aa6e8224a4fb5fe/files/facebook-www/ReactDOM-prod.classic.js?compare=456d153bb582798effa76c09bec2405ab2e392cf) | **=** | 570.39 kB | 570.39 kB | = | 100.44 kB | 100.44 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/307b6fea398471a7670c9a432aa6e8224a4fb5fe/files/facebook-www/ReactDOM-prod.modern.js?compare=456d153bb582798effa76c09bec2405ab2e392cf) | **=** | 554.19 kB | 554.19 kB | = | 97.61 kB | 97.61 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 307b6fea398471a7670c9a432aa6e8224a4fb5fe\n</p>\n","updated_at":"2023-08-29T01:41:32Z","created_at":"2023-08-29T01:32:12Z","creator_user_login":"react-sizebot"}
{"number":27203,"comment_id":"1675988587","body":"I have been facing a similar issue, it works sometimes, but not always.","updated_at":"2023-08-12T16:19:48Z","created_at":"2023-08-12T16:19:48Z","creator_user_login":"tahamukhtar20"}
{"number":27203,"comment_id":"1688581775","body":"which browser are you using ?","updated_at":"2023-08-22T16:55:08Z","created_at":"2023-08-22T16:55:08Z","creator_user_login":"faheem-cmd"}
{"number":27203,"comment_id":"1690080949","body":"I think it can come from fixed / absolute elements. I'll try to create an example.","updated_at":"2023-08-23T14:35:02Z","created_at":"2023-08-23T14:35:02Z","creator_user_login":"Aarbel"}
{"number":27211,"comment_id":"1682452432","body":"can I know if anyone is working on this issue?","updated_at":"2023-08-17T15:07:28Z","created_at":"2023-08-17T15:07:28Z","creator_user_login":"sandnb"}
{"number":27184,"comment_id":"1666417501","body":"Hi @alexgorbatchev I don't know why but it seems like when you add a name to your function only then it's detect the conditional hook usage\r\n![Screenshot (388)](https://github.com/facebook/react/assets/106861707/7e7cdd64-6a31-4ee5-a9b2-054d845f7e05).\r\n","updated_at":"2023-08-05T06:57:06Z","created_at":"2023-08-05T06:57:06Z","creator_user_login":"mr07s"}
{"number":27184,"comment_id":"1682949431","body":"Hey there! I can address and Fix this issue. Please consider assigning this issue to me.","updated_at":"2023-08-17T20:42:48Z","created_at":"2023-08-17T20:42:48Z","creator_user_login":"Atharvcreatives"}
{"number":27168,"comment_id":"1656714071","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 98f3f14d2e06fb785103296318204cd154d5d0ed...4ad8f61db25cc343b308274ec007d2c1de297911\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/4ad8f61db25cc343b308274ec007d2c1de297911/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=98f3f14d2e06fb785103296318204cd154d5d0ed) | **=** | 165.67 kB | 165.67 kB | = | 51.99 kB | 51.99 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/4ad8f61db25cc343b308274ec007d2c1de297911/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=98f3f14d2e06fb785103296318204cd154d5d0ed) | **=** | 173.16 kB | 173.16 kB | = | 54.21 kB | 54.21 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/4ad8f61db25cc343b308274ec007d2c1de297911/files/facebook-www/ReactDOM-prod.classic.js?compare=98f3f14d2e06fb785103296318204cd154d5d0ed) | **=** | 570.50 kB | 570.50 kB | = | 100.49 kB | 100.49 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/4ad8f61db25cc343b308274ec007d2c1de297911/files/facebook-www/ReactDOM-prod.modern.js?compare=98f3f14d2e06fb785103296318204cd154d5d0ed) | **=** | 554.30 kB | 554.30 kB | = | 97.66 kB | 97.66 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 4ad8f61db25cc343b308274ec007d2c1de297911\n</p>\n","updated_at":"2023-08-19T16:25:00Z","created_at":"2023-07-29T11:57:49Z","creator_user_login":"react-sizebot"}
{"number":27195,"comment_id":"1666688264","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 997f52fbb30ec4b777b66edcdd75f594d9fe0c55...d079590ee2574f1d0c006a52c07d222d64ce4bae\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d079590ee2574f1d0c006a52c07d222d64ce4bae/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **=** | 164.38 kB | 164.38 kB | = | 51.77 kB | 51.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d079590ee2574f1d0c006a52c07d222d64ce4bae/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **=** | 171.79 kB | 171.79 kB | = | 53.99 kB | 53.99 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/d079590ee2574f1d0c006a52c07d222d64ce4bae/files/facebook-www/ReactDOM-prod.classic.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **=** | 567.40 kB | 567.40 kB | = | 100.10 kB | 100.10 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/d079590ee2574f1d0c006a52c07d222d64ce4bae/files/facebook-www/ReactDOM-prod.modern.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **=** | 551.20 kB | 551.20 kB | = | 97.26 kB | 97.26 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against d079590ee2574f1d0c006a52c07d222d64ce4bae\n</p>\n","updated_at":"2023-08-06T02:51:18Z","created_at":"2023-08-06T02:51:18Z","creator_user_login":"react-sizebot"}
{"number":27182,"comment_id":"1663096906","body":"Hey @dunnbobcat, thanks for contributing!\r\n\r\nHave you tested that this really fixes the problem though? You can run `yarn build:chrome:local` from `/packages/react-devtools-extensions` to create a local build and test it.\r\n\r\nFrom my observations, most timeout cases are coming from dead service worker, this is mentioned in https://github.com/facebook/react/issues/27119. I am currently working on this, so things should get more reliable soon.\r\n\r\nI am happy to increase this timeout (to 10 seconds maybe), but I don't think that this really solves the problem.\r\n\r\n","updated_at":"2023-08-02T23:34:24Z","created_at":"2023-08-02T23:34:24Z","creator_user_login":"hoxyq"}
{"number":27194,"comment_id":"1676370713","body":"Pls add \"Steps To Reproduce\"","updated_at":"2023-08-13T14:06:56Z","created_at":"2023-08-13T14:06:56Z","creator_user_login":"ketanbaitule"}
{"number":27002,"comment_id":"1613615351","body":"Hi , can I work on this issue?","updated_at":"2023-06-29T18:34:38Z","created_at":"2023-06-29T18:34:38Z","creator_user_login":"martinyis"}
{"number":27002,"comment_id":"1615621423","body":"override in package.json and perform audit fix. \r\n\r\n  \"overrides\": {\r\n    \"semver\": \"~7.5.2\"\r\n  },\r\n  \r\nThis will leave the vulnerability as we speak, but I am still figuring out what is it exactly. For now it will solve your issue","updated_at":"2023-07-01T07:59:13Z","created_at":"2023-07-01T07:59:13Z","creator_user_login":"satkhan"}
{"number":27013,"comment_id":"1608696700","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: a1c62b8a7635c0bc51e477ba5437df9be5a9e64f...d42f8f24db750d22dde6216f83ef1e058e4c9c5c\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d42f8f24db750d22dde6216f83ef1e058e4c9c5c/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=a1c62b8a7635c0bc51e477ba5437df9be5a9e64f) | **+0.02%** | 164.32 kB | 164.35 kB | = | 51.75 kB | 51.75 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d42f8f24db750d22dde6216f83ef1e058e4c9c5c/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=a1c62b8a7635c0bc51e477ba5437df9be5a9e64f) | **+0.02%** | 171.73 kB | 171.76 kB | +0.01% | 53.97 kB | 53.97 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/d42f8f24db750d22dde6216f83ef1e058e4c9c5c/files/facebook-www/ReactDOM-prod.classic.js?compare=a1c62b8a7635c0bc51e477ba5437df9be5a9e64f) | **+0.02%** | 568.20 kB | 568.32 kB | +0.03% | 100.14 kB | 100.17 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/d42f8f24db750d22dde6216f83ef1e058e4c9c5c/files/facebook-www/ReactDOM-prod.modern.js?compare=a1c62b8a7635c0bc51e477ba5437df9be5a9e64f) | **+0.02%** | 552.00 kB | 552.12 kB | +0.03% | 97.29 kB | 97.32 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against d42f8f24db750d22dde6216f83ef1e058e4c9c5c\n</p>\n","updated_at":"2023-06-28T12:05:23Z","created_at":"2023-06-27T03:15:57Z","creator_user_login":"react-sizebot"}
{"number":27014,"comment_id":"1608934182","body":"+1","updated_at":"2023-06-27T07:18:36Z","created_at":"2023-06-27T07:18:36Z","creator_user_login":"finished-zin"}
{"number":27014,"comment_id":"1622950254","body":"Hi @nickmccurdy, \r\nI have started working on this, please correct me if I am wrong this will need to be fixed in every early versions (**React version: <18.3**) right? ","updated_at":"2023-07-06T04:21:28Z","created_at":"2023-07-06T04:18:28Z","creator_user_login":"jayagr26"}
{"number":27014,"comment_id":"1623119575","body":"Most JavaScript package managers pin to minor and patch updates by default, and React 17 doesn't support the new roots for streaming rendering anyway, so I think a single 18.2.x patch release should be enough to improve onboarding.","updated_at":"2023-07-06T07:17:00Z","created_at":"2023-07-06T07:17:00Z","creator_user_login":"nickmccurdy"}
{"number":26968,"comment_id":"1612324865","body":"HI @behnammodi, How did you install this project locally?\r\nI am getting errors like Type aliases can only be used in TypeScript files.\r\nBut All code is in javascript.","updated_at":"2023-06-29T02:04:24Z","created_at":"2023-06-29T02:04:24Z","creator_user_login":"adasarpan404"}
{"number":26937,"comment_id":"1592617225","body":"Can you explain what was the problem you were facing in the old version of code.\r\n","updated_at":"2023-06-15T08:39:47Z","created_at":"2023-06-15T08:39:47Z","creator_user_login":"AsheerAF911"}
{"number":26907,"comment_id":"1578006627","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: e6fae308e9300ca545003ac147cc7e4e541f561c...784904f0a22eef16be1eab5ccc5d0406da1f4468\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/784904f0a22eef16be1eab5ccc5d0406da1f4468/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 164.23 kB | 164.23 kB | = | 51.73 kB | 51.73 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/784904f0a22eef16be1eab5ccc5d0406da1f4468/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 171.67 kB | 171.67 kB | = | 53.97 kB | 53.97 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/784904f0a22eef16be1eab5ccc5d0406da1f4468/files/facebook-www/ReactDOM-prod.classic.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 570.12 kB | 570.12 kB | = | 100.58 kB | 100.58 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/784904f0a22eef16be1eab5ccc5d0406da1f4468/files/facebook-www/ReactDOM-prod.modern.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 553.90 kB | 553.90 kB | = | 97.75 kB | 97.75 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 784904f0a22eef16be1eab5ccc5d0406da1f4468\n</p>\n","updated_at":"2023-06-06T06:39:48Z","created_at":"2023-06-06T06:39:48Z","creator_user_login":"react-sizebot"}
{"number":26875,"comment_id":"1570254504","body":"Hello @PracticasSlope9, This is not an issue with the react native this because when we call the API then it is blocked by the browser and CORS policy. Because it is calling from one origin to another origin if any is mismatched then the browser will block it. You can Install a CORS browser extension that allows you to override CORS restrictions during development. These extensions modify the headers in your browser to bypass CORS restrictions temporarily by toggling the CORS.","updated_at":"2023-05-31T13:37:37Z","created_at":"2023-05-31T13:37:37Z","creator_user_login":"MeenuyD"}
{"number":26866,"comment_id":"1566755287","body":"需要时间翻译的呀","updated_at":"2023-05-29T08:29:02Z","created_at":"2023-05-29T08:29:02Z","creator_user_login":"exposir"}
{"number":26866,"comment_id":"1566803367","body":"react这个栈到顶了，这么多年了会的都会了不会的现在有更多现成的选择。(意思是完全没必要跟进新doc","updated_at":"2023-05-29T09:08:18Z","created_at":"2023-05-29T09:08:18Z","creator_user_login":"y0zong"}
{"number":26866,"comment_id":"1567653251","body":"我们会加快翻译速度的，请耐心等待。","updated_at":"2023-05-30T01:36:30Z","created_at":"2023-05-30T01:36:30Z","creator_user_login":"Brucia323"}
{"number":26900,"comment_id":"1575935898","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: a1f97589fd298cd71f97339a230f016139c7382f...88db2c5c902e39235c363d9b81a4df7bf7b284ba\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/88db2c5c902e39235c363d9b81a4df7bf7b284ba/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **=** | 164.23 kB | 164.23 kB | = | 51.77 kB | 51.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/88db2c5c902e39235c363d9b81a4df7bf7b284ba/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **=** | 171.67 kB | 171.67 kB | = | 54.01 kB | 54.01 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/88db2c5c902e39235c363d9b81a4df7bf7b284ba/files/facebook-www/ReactDOM-prod.classic.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **=** | 570.42 kB | 570.42 kB | = | 100.64 kB | 100.64 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/88db2c5c902e39235c363d9b81a4df7bf7b284ba/files/facebook-www/ReactDOM-prod.modern.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **=** | 554.16 kB | 554.16 kB | = | 97.82 kB | 97.82 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 88db2c5c902e39235c363d9b81a4df7bf7b284ba\n</p>\n","updated_at":"2023-06-05T02:09:09Z","created_at":"2023-06-05T02:09:09Z","creator_user_login":"react-sizebot"}
{"number":26848,"comment_id":"1562457340","body":"I would be happy to submit a pr if possible","updated_at":"2023-05-25T08:00:04Z","created_at":"2023-05-25T08:00:04Z","creator_user_login":"li-jia-nan"}
{"number":26848,"comment_id":"1570203591","body":"Hey @li-jia-nan, I would like to share my willingness to help and support you in this endeavor if confirmed. \r\n\r\nAs a fellow contributor, I understand the importance of having documentation available in different languages to reach a wider audience and provide a better user experience. Together, we can make a significant impact by bridging the language barrier and enabling more people to benefit from the project.\r\n\r\nWhether it's proofreading, reviewing, or translating specific sections, I am ready to contribute my language skills (**Italian** and **Spanish** mainly) and expertise to ensure the quality and accuracy of the translations.\r\n\r\nI believe that our collaborative efforts will not only enhance React's documentation accessibility but also foster a sense of inclusivity within the community.\r\n\r\nThank you once again for your valuable idea :) \r\n\r\nGianmarco\r\n","updated_at":"2023-05-31T13:09:45Z","created_at":"2023-05-31T13:07:48Z","creator_user_login":"Gianmarco-Dev"}
{"number":26814,"comment_id":"1546898323","body":"I'm not sure if it's described well in react-18 WG discussions (I think there was a tweet about it from Seb.), but the \"Sync\" is important. It's not `useExternalStore`. So, it's not a bug per se. It's a designed limitation. ","updated_at":"2023-05-14T13:15:14Z","created_at":"2023-05-14T13:15:14Z","creator_user_login":"dai-shi"}
{"number":26814,"comment_id":"1597399006","body":"I hit the same behavior and it was far from obvious in my case, because uSES wasn't the one that supposed to be triggering suspense. I created this sandbox https://codesandbox.io/s/upbeat-flower-2gnhm6 to show that the shim implementation (`use-sync-external-store` itself, before it got rerouted to the React hook implementation) didn't have this behavior and was working in the way I as a user would expect: when suspending render is triggered via useTransition, I can use `pending` flag instead of suspense boundary for UI feedback.\r\n\r\n\r\nhttps://github.com/facebook/react/assets/858295/28c030eb-10a1-433a-8151-6f93eff59c44\r\n\r\n","updated_at":"2023-06-19T15:39:40Z","created_at":"2023-06-19T15:39:07Z","creator_user_login":"alexeyraspopov"}
{"number":26869,"comment_id":"1585646605","body":"Is it joking?\r\nI want to remind that here is not your garden playground.","updated_at":"2023-06-10T12:27:10Z","created_at":"2023-06-10T12:27:10Z","creator_user_login":"PurpleMonkey729"}
{"number":26865,"comment_id":"1566516812","body":"can you provide some code on where you are having this error because in my opinion, it shouldnt be a bug because thats what React.Children.only are designed to do as they retrieve a single child element only.","updated_at":"2023-05-29T04:32:07Z","created_at":"2023-05-29T04:32:07Z","creator_user_login":"sharmaachintya08"}
{"number":26865,"comment_id":"1573750453","body":"It's looks like expected behavior if you are passing more than one child element, while `React.Children.only` only accepts one, isn't it?\r\n```js \r\n// it works\r\nconst child = React.Children.only(children);\r\n```\r\nCan you please provide more context","updated_at":"2023-06-02T13:40:51Z","created_at":"2023-06-02T13:38:47Z","creator_user_login":"scffs"}
{"number":26837,"comment_id":"1557260459","body":"Hello @vlad-karnauch I think so To ensure that the correct line number is displayed, you can make a small adjustment to your code by wrapping the content of the return statement in a <React.Fragment> or  <div> This will create a new wrapper element, allowing React to update the correct DOM node and associate it with the correct line number. By wrapping the content in a <React.Fragment> or a <div> the DOM node associated with the line number in DevTools will be correctly updated when React renders the component.","updated_at":"2023-05-22T13:51:42Z","created_at":"2023-05-22T13:51:42Z","creator_user_login":"MeenuyD"}
{"number":26837,"comment_id":"1557267122","body":"Hello, @MeenuyD , we're levereging devtools api to run user code, so unfortunatly, I don't have control over what code is being run.","updated_at":"2023-05-22T13:56:13Z","created_at":"2023-05-22T13:56:13Z","creator_user_login":"vlad-karnauch"}
{"number":26837,"comment_id":"1562920530","body":"Yes @vlad-karnauch you are correct the react developer tool does not work properly this issue is the proper line is also with me I thought it will be working.","updated_at":"2023-05-25T13:34:53Z","created_at":"2023-05-25T13:34:53Z","creator_user_login":"MeenuyD"}
{"number":26776,"comment_id":"1534232409","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 1cea384480a6dea80128e5e0ddb714df7bea1520...baaaf7dc5728480bd4d6580244f95ba09d1ad00a\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/baaaf7dc5728480bd4d6580244f95ba09d1ad00a/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=1cea384480a6dea80128e5e0ddb714df7bea1520) | **=** | 164.25 kB | 164.25 kB | = | 51.79 kB | 51.79 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/baaaf7dc5728480bd4d6580244f95ba09d1ad00a/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=1cea384480a6dea80128e5e0ddb714df7bea1520) | **=** | 171.69 kB | 171.69 kB | = | 54.02 kB | 54.02 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/baaaf7dc5728480bd4d6580244f95ba09d1ad00a/files/facebook-www/ReactDOM-prod.classic.js?compare=1cea384480a6dea80128e5e0ddb714df7bea1520) | **=** | 570.48 kB | 570.48 kB | = | 100.66 kB | 100.66 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/baaaf7dc5728480bd4d6580244f95ba09d1ad00a/files/facebook-www/ReactDOM-prod.modern.js?compare=1cea384480a6dea80128e5e0ddb714df7bea1520) | **=** | 554.22 kB | 554.22 kB | = | 97.84 kB | 97.84 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against baaaf7dc5728480bd4d6580244f95ba09d1ad00a\n</p>\n","updated_at":"2023-05-31T03:39:43Z","created_at":"2023-05-04T07:41:09Z","creator_user_login":"react-sizebot"}
{"number":26809,"comment_id":"1545956699","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: a389046a529c6d22ba5895dd7f5d4b0b8d17c345...50686fef163a9f74a2292e0cbf15ea1c91774ec8\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/50686fef163a9f74a2292e0cbf15ea1c91774ec8/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=a389046a529c6d22ba5895dd7f5d4b0b8d17c345) | **=** | 164.19 kB | 164.19 kB | = | 51.78 kB | 51.78 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/50686fef163a9f74a2292e0cbf15ea1c91774ec8/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=a389046a529c6d22ba5895dd7f5d4b0b8d17c345) | **=** | 171.55 kB | 171.55 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/50686fef163a9f74a2292e0cbf15ea1c91774ec8/files/facebook-www/ReactDOM-prod.classic.js?compare=a389046a529c6d22ba5895dd7f5d4b0b8d17c345) | **=** | 570.13 kB | 570.13 kB | = | 100.62 kB | 100.62 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/50686fef163a9f74a2292e0cbf15ea1c91774ec8/files/facebook-www/ReactDOM-prod.modern.js?compare=a389046a529c6d22ba5895dd7f5d4b0b8d17c345) | **=** | 553.87 kB | 553.87 kB | = | 97.80 kB | 97.80 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 50686fef163a9f74a2292e0cbf15ea1c91774ec8\n</p>\n","updated_at":"2023-05-12T16:41:12Z","created_at":"2023-05-12T15:54:51Z","creator_user_login":"react-sizebot"}
{"number":26792,"comment_id":"1537843651","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 559e83aebb2026035d47aa0ebf842f78d4cd6757...1fb16d0c5189dbc5c8962df8eb17a2b628d0c79a\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/1fb16d0c5189dbc5c8962df8eb17a2b628d0c79a/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.10%** | 164.18 kB | 164.35 kB | +0.04% | 51.78 kB | 51.80 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/1fb16d0c5189dbc5c8962df8eb17a2b628d0c79a/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.10%** | 171.57 kB | 171.74 kB | +0.07% | 53.99 kB | 54.03 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/1fb16d0c5189dbc5c8962df8eb17a2b628d0c79a/files/facebook-www/ReactDOM-prod.classic.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.07%** | 570.19 kB | 570.59 kB | = | 100.62 kB | 100.59 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/1fb16d0c5189dbc5c8962df8eb17a2b628d0c79a/files/facebook-www/ReactDOM-prod.modern.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.08%** | 553.93 kB | 554.40 kB | = | 97.80 kB | 97.78 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 1fb16d0c5189dbc5c8962df8eb17a2b628d0c79a\n</p>\n","updated_at":"2023-05-08T06:51:18Z","created_at":"2023-05-08T06:51:18Z","creator_user_login":"react-sizebot"}
{"number":26775,"comment_id":"1534229274","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 1cea384480a6dea80128e5e0ddb714df7bea1520...bc5704988b577e3c3701606842a5b5d93d25e428\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/bc5704988b577e3c3701606842a5b5d93d25e428/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=1cea384480a6dea80128e5e0ddb714df7bea1520) | **=** | 164.25 kB | 164.25 kB | = | 51.79 kB | 51.79 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/bc5704988b577e3c3701606842a5b5d93d25e428/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=1cea384480a6dea80128e5e0ddb714df7bea1520) | **=** | 171.69 kB | 171.69 kB | = | 54.02 kB | 54.02 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/bc5704988b577e3c3701606842a5b5d93d25e428/files/facebook-www/ReactDOM-prod.classic.js?compare=1cea384480a6dea80128e5e0ddb714df7bea1520) | **=** | 570.48 kB | 570.48 kB | = | 100.66 kB | 100.66 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/bc5704988b577e3c3701606842a5b5d93d25e428/files/facebook-www/ReactDOM-prod.modern.js?compare=1cea384480a6dea80128e5e0ddb714df7bea1520) | **=** | 554.22 kB | 554.22 kB | = | 97.84 kB | 97.84 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against bc5704988b577e3c3701606842a5b5d93d25e428\n</p>\n","updated_at":"2023-05-31T03:41:12Z","created_at":"2023-05-04T07:38:13Z","creator_user_login":"react-sizebot"}
{"number":26703,"comment_id":"1519164819","body":"A corresponding page doesn't yet exists on the new react.dev website.\r\nI've issued a PR to that repo with a new page, once it gets merged, I'll try to fix this as well.","updated_at":"2023-04-23T20:54:24Z","created_at":"2023-04-23T20:54:24Z","creator_user_login":"saadsawash"}
{"number":26950,"comment_id":"1591548046","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 4ddc019aca8e08fd59cb43de5e0032be77d6174e...a667cd4e0f14cf6ac2d073619b9c95ee4bbc2f6e\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a667cd4e0f14cf6ac2d073619b9c95ee4bbc2f6e/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=4ddc019aca8e08fd59cb43de5e0032be77d6174e) | **=** | 164.23 kB | 164.23 kB | = | 51.73 kB | 51.73 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a667cd4e0f14cf6ac2d073619b9c95ee4bbc2f6e/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=4ddc019aca8e08fd59cb43de5e0032be77d6174e) | **=** | 171.67 kB | 171.67 kB | = | 53.97 kB | 53.97 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/a667cd4e0f14cf6ac2d073619b9c95ee4bbc2f6e/files/facebook-www/ReactDOM-prod.classic.js?compare=4ddc019aca8e08fd59cb43de5e0032be77d6174e) | **=** | 570.12 kB | 570.12 kB | = | 100.58 kB | 100.58 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/a667cd4e0f14cf6ac2d073619b9c95ee4bbc2f6e/files/facebook-www/ReactDOM-prod.modern.js?compare=4ddc019aca8e08fd59cb43de5e0032be77d6174e) | **=** | 553.90 kB | 553.90 kB | = | 97.75 kB | 97.75 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against a667cd4e0f14cf6ac2d073619b9c95ee4bbc2f6e\n</p>\n","updated_at":"2023-06-14T16:02:11Z","created_at":"2023-06-14T16:02:11Z","creator_user_login":"react-sizebot"}
{"number":26946,"comment_id":"1593495851","body":"@EmielM Remove the quotes. They are unnecessary\r\n\r\n`createElement('style', {}, 'body { font-family: Comic Sans; }')`","updated_at":"2023-06-15T17:49:41Z","created_at":"2023-06-15T17:49:41Z","creator_user_login":"Shurtu-gal"}
{"number":26946,"comment_id":"1594191185","body":"@Shurtu-gal this is a synthetic/simplified example, there are cases when you really need a quote in your css, eg for `content: '\"'`, or selectors such as `a[href=\"https://…\"]`. In any case, react-dom should handle this correctly.","updated_at":"2023-06-17T11:23:05Z","created_at":"2023-06-16T06:48:28Z","creator_user_login":"EmielM"}
{"number":26946,"comment_id":"1658115997","body":"I think it is a problem on hydration on CSR. Although this is my first issue, I would like to have a try. Do you mind to assign it to me? Thank you :3 I will update immediately once I feel not okay to solve it.","updated_at":"2023-07-31T10:41:40Z","created_at":"2023-07-31T10:41:40Z","creator_user_login":"YantD729"}
{"number":26943,"comment_id":"1590190396","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: a7bf5ba614c6ddbd1eb3057c71f72efd1b6c21a9...2484f5c71676d03ad41377d5a77f938bc78d4746\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/2484f5c71676d03ad41377d5a77f938bc78d4746/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=a7bf5ba614c6ddbd1eb3057c71f72efd1b6c21a9) | **=** | 164.23 kB | 164.23 kB | = | 51.73 kB | 51.73 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/2484f5c71676d03ad41377d5a77f938bc78d4746/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=a7bf5ba614c6ddbd1eb3057c71f72efd1b6c21a9) | **=** | 171.67 kB | 171.67 kB | = | 53.97 kB | 53.97 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/2484f5c71676d03ad41377d5a77f938bc78d4746/files/facebook-www/ReactDOM-prod.classic.js?compare=a7bf5ba614c6ddbd1eb3057c71f72efd1b6c21a9) | **=** | 570.12 kB | 570.12 kB | = | 100.58 kB | 100.58 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/2484f5c71676d03ad41377d5a77f938bc78d4746/files/facebook-www/ReactDOM-prod.modern.js?compare=a7bf5ba614c6ddbd1eb3057c71f72efd1b6c21a9) | **=** | 553.90 kB | 553.90 kB | = | 97.75 kB | 97.75 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 2484f5c71676d03ad41377d5a77f938bc78d4746\n</p>\n","updated_at":"2023-06-13T23:29:28Z","created_at":"2023-06-13T23:29:28Z","creator_user_login":"react-sizebot"}
{"number":26956,"comment_id":"1593082390","body":"# screenshots : \r\n<img width=\"1280\" alt=\"Screenshot 2023-06-15 at 4 13 58 pm\" src=\"https://github.com/facebook/react/assets/46628415/8e37c3bf-8719-4ab2-b47b-fcc869df840e\">\r\n<img width=\"1280\" alt=\"Screenshot 2023-06-15 at 4 14 01 pm\" src=\"https://github.com/facebook/react/assets/46628415/9a91a6cc-f351-4199-8e10-cad7c5a081ec\">\r\n<img width=\"1280\" alt=\"Screenshot 2023-06-15 at 4 14 04 pm\" src=\"https://github.com/facebook/react/assets/46628415/ca4d8e68-3da9-4bc6-841c-17eb28c5f39c\">\r\n","updated_at":"2023-06-15T13:37:28Z","created_at":"2023-06-15T13:37:28Z","creator_user_login":"hamedpro"}
{"number":26956,"comment_id":"1593089633","body":"i don't have a reproduction sample which always causes the error but my code is here in this specific commit : \r\nhttps://github.com/hamedpro/freeflow/commit/36166b6da2162bf59c64e11d57cb8a9ff60ec282\r\n(branch beta -> commit 36166b6)","updated_at":"2023-06-15T13:42:01Z","created_at":"2023-06-15T13:42:01Z","creator_user_login":"hamedpro"}
{"number":26918,"comment_id":"1599052976","body":"It seems like a nice improvement. However, It would be better if you could provide more information comparing the outcome and the previous state. ","updated_at":"2023-06-20T15:45:59Z","created_at":"2023-06-20T15:45:59Z","creator_user_login":"subashcs"}
{"number":26918,"comment_id":"1605014452","body":"> It seems like a nice improvement. However, It would be better if you could provide more information comparing the outcome and the previous state.\r\n\r\nThanks for your feedback. I will do that :)","updated_at":"2023-06-23T21:42:14Z","created_at":"2023-06-23T21:42:14Z","creator_user_login":"koyuncuoglum95"}
{"number":26903,"comment_id":"1589032574","body":"@hoxyq Is it okay if I delete the Heroku app shared in the example above? I can always create a new one later on if needed.","updated_at":"2023-06-13T10:36:14Z","created_at":"2023-06-13T10:36:14Z","creator_user_login":"OliverJAsh"}
{"number":26903,"comment_id":"1589065129","body":"> @hoxyq Is it okay if I delete the Heroku app shared in the example above? I can always create a new one later on if needed.\r\n\r\nCan you put it somewhere like codesandbox, please? So it can stay for longer.\r\n\r\nThanks for reporting it, by the way.","updated_at":"2023-06-13T10:56:22Z","created_at":"2023-06-13T10:56:22Z","creator_user_login":"hoxyq"}
{"number":26903,"comment_id":"1589140522","body":"Unfortunately I wasn't able to create a reduced test case for it. The test case shared above is a review app for Unsplash.","updated_at":"2023-06-13T11:44:58Z","created_at":"2023-06-13T11:44:58Z","creator_user_login":"OliverJAsh"}
{"number":26600,"comment_id":"1503448640","body":"You can make another wrapper class","updated_at":"2023-04-11T14:17:15Z","created_at":"2023-04-11T14:17:15Z","creator_user_login":"urmybestfriend"}
{"number":26600,"comment_id":"1505093417","body":"@urmybestfriend What is the reason? I don't understand what should I do.","updated_at":"2023-04-12T11:15:25Z","created_at":"2023-04-12T11:15:25Z","creator_user_login":"peipei818"}
{"number":26504,"comment_id":"1488507459","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 1cea384480a6dea80128e5e0ddb714df7bea1520...1fad94ce066b64bb9fd7657c68e9aa67682f74b0\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/1fad94ce066b64bb9fd7657c68e9aa67682f74b0/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=1cea384480a6dea80128e5e0ddb714df7bea1520) | **=** | 164.25 kB | 164.25 kB | = | 51.79 kB | 51.79 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/1fad94ce066b64bb9fd7657c68e9aa67682f74b0/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=1cea384480a6dea80128e5e0ddb714df7bea1520) | **=** | 171.69 kB | 171.69 kB | = | 54.02 kB | 54.02 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/1fad94ce066b64bb9fd7657c68e9aa67682f74b0/files/facebook-www/ReactDOM-prod.classic.js?compare=1cea384480a6dea80128e5e0ddb714df7bea1520) | **=** | 570.48 kB | 570.48 kB | = | 100.66 kB | 100.66 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/1fad94ce066b64bb9fd7657c68e9aa67682f74b0/files/facebook-www/ReactDOM-prod.modern.js?compare=1cea384480a6dea80128e5e0ddb714df7bea1520) | **=** | 554.22 kB | 554.22 kB | = | 97.84 kB | 97.84 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 1fad94ce066b64bb9fd7657c68e9aa67682f74b0\n</p>\n","updated_at":"2023-05-31T03:38:56Z","created_at":"2023-03-29T12:25:30Z","creator_user_login":"react-sizebot"}
{"number":26517,"comment_id":"1491978768","body":"Hi!! My first time with open source, and very new to programming in general, sorry in advance if I'm no help! \r\n\r\nI was reading the chain of issues that you provided - from what I can infer, it's an issue on Firefox's side and there is no current solution (apart from some workarounds that don't seem viable long-term)? \r\n\r\nTherefore, for the documentation, would it be just \"**If you are using Firefox**, it is possible that a Content Security Policy (CSP) is blocking the loading of DevTools.\"? ","updated_at":"2023-03-31T14:05:21Z","created_at":"2023-03-31T14:05:21Z","creator_user_login":"sherphy"}
{"number":26517,"comment_id":"1491991256","body":"Hi @sherphy - yes, basically.  Just a call out that a CSP may also cause DevTools to fail to load.  I think knowing that this may be an issue is enough.\r\n\r\nThere may be folks who, like me, can relax their CSP in development so that they can use React Dev Tools during the development phase.  Not an ideal solution, but a possibility.  ☺️","updated_at":"2023-03-31T14:14:03Z","created_at":"2023-03-31T14:14:03Z","creator_user_login":"kfox112"}
{"number":26362,"comment_id":"1464131620","body":"You just need to use getDerivedStateFromError. This error message warns lack of `getDerivedStateFromError`.\r\n\r\n\r\n> There should be a way to catch only specific errors.\r\n\r\nI think there is.\r\n\r\nTo handle only specific error in a Error Boundary, you should check error type in getDerivedStateFromError like the code below.\r\n[Unhandled error will propagate to the closest error boundary above it. ](https://reactjs.org/docs/error-boundaries.html#:~:text=the%20error%20will%20propagate%20to%20the%20closest%20error%20boundary%20above%20it.) So keep in mind you should use other error boundary too.\r\n\r\n```\r\n  static getDerivedStateFromError(error: Error) {\r\n    return {\r\n      hasError: error instanceof UnauthorizedError\r\n    };\r\n  }\r\n```","updated_at":"2023-03-10T17:27:14Z","created_at":"2023-03-10T17:27:14Z","creator_user_login":"no-yan"}
{"number":26362,"comment_id":"1465469651","body":"As @no-yan  said, you just need to use `getDerivedStateFromError`. Correct me if I'm wrong but I also believe that the use of `componentDidCatch` should not be used in components after version 16.0.0 of React.\r\n\r\nIn that case you can add the method `getDerivedStateFromError` to update the component state when an error occurs inside child components.","updated_at":"2023-03-13T03:54:00Z","created_at":"2023-03-13T03:53:47Z","creator_user_login":"Kelvym115"}
{"number":26439,"comment_id":"1476529037","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 842bd787a55df9a93c4c6e0f9b003f100c564b5e...c1a12abcd97610bcdb95a079950f1adf2c936d9b\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/c1a12abcd97610bcdb95a079950f1adf2c936d9b/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=842bd787a55df9a93c4c6e0f9b003f100c564b5e) | **=** | 157.77 kB | 157.77 kB | = | 50.28 kB | 50.28 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/c1a12abcd97610bcdb95a079950f1adf2c936d9b/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=842bd787a55df9a93c4c6e0f9b003f100c564b5e) | **=** | 159.36 kB | 159.36 kB | = | 50.79 kB | 50.79 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/c1a12abcd97610bcdb95a079950f1adf2c936d9b/files/facebook-www/ReactDOM-prod.classic.js?compare=842bd787a55df9a93c4c6e0f9b003f100c564b5e) | **=** | 542.73 kB | 542.73 kB | = | 96.62 kB | 96.62 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/c1a12abcd97610bcdb95a079950f1adf2c936d9b/files/facebook-www/ReactDOM-prod.modern.js?compare=842bd787a55df9a93c4c6e0f9b003f100c564b5e) | **=** | 526.47 kB | 526.47 kB | = | 94.16 kB | 94.16 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against c1a12abcd97610bcdb95a079950f1adf2c936d9b\n</p>\n","updated_at":"2023-03-20T16:11:20Z","created_at":"2023-03-20T16:11:20Z","creator_user_login":"react-sizebot"}
{"number":26476,"comment_id":"1483746118","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 73b6435ca4e0c3ae3aac8126509a82420a84f0d7...c98cc70d58d0e36e83e64b407a8371562c33285b\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/c98cc70d58d0e36e83e64b407a8371562c33285b/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=73b6435ca4e0c3ae3aac8126509a82420a84f0d7) | **=** | 162.46 kB | 162.46 kB | = | 51.36 kB | 51.36 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/c98cc70d58d0e36e83e64b407a8371562c33285b/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=73b6435ca4e0c3ae3aac8126509a82420a84f0d7) | **=** | 164.20 kB | 164.20 kB | = | 51.87 kB | 51.87 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/c98cc70d58d0e36e83e64b407a8371562c33285b/files/facebook-www/ReactDOM-prod.classic.js?compare=73b6435ca4e0c3ae3aac8126509a82420a84f0d7) | **=** | 554.39 kB | 554.39 kB | = | 98.25 kB | 98.25 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/c98cc70d58d0e36e83e64b407a8371562c33285b/files/facebook-www/ReactDOM-prod.modern.js?compare=73b6435ca4e0c3ae3aac8126509a82420a84f0d7) | **=** | 538.12 kB | 538.12 kB | = | 95.82 kB | 95.82 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against c98cc70d58d0e36e83e64b407a8371562c33285b\n</p>\n","updated_at":"2023-03-25T06:59:31Z","created_at":"2023-03-25T06:59:31Z","creator_user_login":"react-sizebot"}
{"number":26612,"comment_id":"1647749303","body":"Hi @gaearon, it seems there is no active development on this issue right now. I would start working on it if possible. ","updated_at":"2023-07-24T11:42:06Z","created_at":"2023-07-24T11:42:06Z","creator_user_login":"quiteeasy"}
{"number":26533,"comment_id":"1493331236","body":"In this repro, only `pushEffect()` is called with the destroy function that's marked as \"already called\". I suspect this is an early indicator of incorrect behavior, but it doesn't actually call the second time `safelyCallDestroy`.","updated_at":"2023-04-02T13:23:09Z","created_at":"2023-04-02T13:23:09Z","creator_user_login":"kassens"}
{"number":26449,"comment_id":"1478120518","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 12a1d140e366aa8d95338e4412117f16da79a078...f0764e3c89035d5563abb858bee4ec809e838d40\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/f0764e3c89035d5563abb858bee4ec809e838d40/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=12a1d140e366aa8d95338e4412117f16da79a078) | **=** | 159.26 kB | 159.26 kB | = | 50.45 kB | 50.45 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/f0764e3c89035d5563abb858bee4ec809e838d40/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=12a1d140e366aa8d95338e4412117f16da79a078) | **=** | 161.00 kB | 161.00 kB | = | 50.96 kB | 50.96 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/f0764e3c89035d5563abb858bee4ec809e838d40/files/facebook-www/ReactDOM-prod.classic.js?compare=12a1d140e366aa8d95338e4412117f16da79a078) | **=** | 546.50 kB | 546.50 kB | = | 96.87 kB | 96.87 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/f0764e3c89035d5563abb858bee4ec809e838d40/files/facebook-www/ReactDOM-prod.modern.js?compare=12a1d140e366aa8d95338e4412117f16da79a078) | **=** | 530.21 kB | 530.21 kB | = | 94.42 kB | 94.42 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against f0764e3c89035d5563abb858bee4ec809e838d40\n</p>\n","updated_at":"2023-03-21T16:05:40Z","created_at":"2023-03-21T16:05:40Z","creator_user_login":"react-sizebot"}
{"number":26393,"comment_id":"1483916187","body":"Does this still occur on a fresh clone? Could you include the concrete steps you took to encounter this issue?","updated_at":"2023-03-25T20:34:07Z","created_at":"2023-03-25T20:34:07Z","creator_user_login":"eps1lon"}
{"number":26393,"comment_id":"1484053365","body":"yes occur on a fresh clone, here is the steps:\r\n- clone the repository.\r\n- install dependency using yarn.\r\n- yarn test.","updated_at":"2023-03-26T10:21:17Z","created_at":"2023-03-26T10:21:17Z","creator_user_login":"gitAzad"}
{"number":26396,"comment_id":"1501046860","body":"I guess there should be conflict in the version of app and library...Try deleting ur node-modules and package-lock.json and try installing packages again!","updated_at":"2023-04-09T05:38:42Z","created_at":"2023-04-09T05:38:42Z","creator_user_login":"pranshu05"}
{"number":26480,"comment_id":"1483836731","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 73b6435ca4e0c3ae3aac8126509a82420a84f0d7...0f58a9d41ac7f6d92e6ffa974382fcab26b49971\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0f58a9d41ac7f6d92e6ffa974382fcab26b49971/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=73b6435ca4e0c3ae3aac8126509a82420a84f0d7) | **=** | 162.46 kB | 162.46 kB | = | 51.36 kB | 51.36 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0f58a9d41ac7f6d92e6ffa974382fcab26b49971/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=73b6435ca4e0c3ae3aac8126509a82420a84f0d7) | **=** | 164.20 kB | 164.20 kB | = | 51.87 kB | 51.87 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/0f58a9d41ac7f6d92e6ffa974382fcab26b49971/files/facebook-www/ReactDOM-prod.classic.js?compare=73b6435ca4e0c3ae3aac8126509a82420a84f0d7) | **=** | 554.39 kB | 554.39 kB | = | 98.25 kB | 98.25 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/0f58a9d41ac7f6d92e6ffa974382fcab26b49971/files/facebook-www/ReactDOM-prod.modern.js?compare=73b6435ca4e0c3ae3aac8126509a82420a84f0d7) | **=** | 538.12 kB | 538.12 kB | = | 95.82 kB | 95.82 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 0f58a9d41ac7f6d92e6ffa974382fcab26b49971\n</p>\n","updated_at":"2023-03-25T14:31:26Z","created_at":"2023-03-25T14:23:25Z","creator_user_login":"react-sizebot"}
{"number":26378,"comment_id":"1474185777","body":"Agreed ","updated_at":"2023-03-17T17:37:45Z","created_at":"2023-03-17T17:37:45Z","creator_user_login":"abhisekadhikari"}
{"number":26378,"comment_id":"1537224506","body":"There is nothing wrong with sharing your experience with React but I don't think an issue is the appropriate place for this.","updated_at":"2023-05-06T21:13:56Z","created_at":"2023-05-06T21:13:56Z","creator_user_login":"tony1658"}
{"number":26212,"comment_id":"1446373172","body":"This might be something related to how Windows handles paths comparing to other platforms, but let me work on this since I have Windows platform available and I can further investigate.","updated_at":"2023-02-27T14:01:23Z","created_at":"2023-02-27T14:01:23Z","creator_user_login":"BartoszKlonowski"}
{"number":26212,"comment_id":"1446420913","body":"Sure, let me know if I can help as well!","updated_at":"2023-02-27T14:27:25Z","created_at":"2023-02-27T14:27:25Z","creator_user_login":"abhiram11"}
{"number":26212,"comment_id":"1448461298","body":"Sure @abhiram11, no worries! I already located the error with `spawnSync` for Windows OS (looks like the last change regarding migrating from jasmine was not set up correctly considering Windows) and I'm looking for a solution, thanks!","updated_at":"2023-02-28T16:14:58Z","created_at":"2023-02-28T16:14:58Z","creator_user_login":"BartoszKlonowski"}
{"number":26212,"comment_id":"1448486680","body":"Thank you for the update, I'll be happy to assist! 😄","updated_at":"2023-02-28T16:31:33Z","created_at":"2023-02-28T16:31:33Z","creator_user_login":"abhiram11"}
{"number":26170,"comment_id":"1432230606","body":"It's also worth noting that `--experimental-specifier-resolution=node` was dropped in Node 19 so there would have to be yet another workaround using `--experimental-loader` which is less than ideal.","updated_at":"2023-02-15T23:38:01Z","created_at":"2023-02-15T23:38:01Z","creator_user_login":"mkilpatrick"}
{"number":25967,"comment_id":"1373612639","body":"I've included the fix as a PR that was also included in the codesandbox that should resolve the issue.","updated_at":"2023-01-06T13:16:45Z","created_at":"2023-01-06T13:16:45Z","creator_user_login":"jellevoost"}
{"number":25958,"comment_id":"1373716483","body":"i was just messing with the sandbox you posted early, can you check this one if it does the job you want it to do:\r\n[sandbox](https://codesandbox.io/s/custom-hook-repro-forked-hidtdf?file=/src/index.tsx).\r\ni believe useMemo is used to store results of heavy computations, and when the dependancy array changes it re-run the callback you provide it with. Also i see no reason to use useMemo inside another function.","updated_at":"2023-01-06T14:47:45Z","created_at":"2023-01-06T14:34:50Z","creator_user_login":"sadiki-o"}
{"number":26035,"comment_id":"1401323519","body":"Aw, I figured it out!\r\nEffect for registering events needs to get memoized event callback in deps and return cleaner.\r\nIt works for me now, sorry you can close this one.","updated_at":"2023-01-24T02:38:07Z","created_at":"2023-01-24T02:38:07Z","creator_user_login":"WebKieth"}
{"number":26012,"comment_id":"1386520456","body":"no idea about this","updated_at":"2023-01-18T05:43:31Z","created_at":"2023-01-18T05:43:31Z","creator_user_login":"shreya-as"}
{"number":26020,"comment_id":"1396524225","body":"@facebook-github-bot what happened","updated_at":"2023-01-19T07:00:47Z","created_at":"2023-01-19T07:00:47Z","creator_user_login":"qiyx2019"}
{"number":26020,"comment_id":"1397478802","body":"> @facebook-github-bot what happened\r\n\r\nThey just assigned you the **CLA Signed** label.","updated_at":"2023-01-19T19:12:48Z","created_at":"2023-01-19T19:12:48Z","creator_user_login":"360macky"}
{"number":26020,"comment_id":"1649008620","body":"@gaearon @trueadm @acdlite @zpao can someone please merge this PR to main branch as all checks have passed now.","updated_at":"2023-07-25T03:31:08Z","created_at":"2023-07-25T03:31:08Z","creator_user_login":"qiyx2019"}
{"number":26031,"comment_id":"1411569772","body":"similar issue: https://github.com/facebook/react/issues/26089","updated_at":"2023-02-01T07:13:46Z","created_at":"2023-02-01T07:13:46Z","creator_user_login":"whatwg6"}
{"number":26031,"comment_id":"1412106108","body":"> similar issue: https://github.com/facebook/react/issues/26089\r\n\r\nGood find! I tried to reproduce this on the modern api, but it didn't work for me.\r\n\r\nI have sandboxed your example: https://codesandbox.io/s/green-dew-u87p53?file=/src/App.tsx\r\n\r\nSteps To Reproduce:\r\n1. Click the unmount button.\r\n2. Follow steps 3-8 from the first comment.","updated_at":"2023-02-01T14:01:02Z","created_at":"2023-02-01T14:01:02Z","creator_user_login":"Jeronimotio"}
{"number":26029,"comment_id":"1402596599","body":"Internal rollout hasn't finished quite yet.","updated_at":"2023-01-24T20:28:10Z","created_at":"2023-01-24T20:28:10Z","creator_user_login":"kassens"}
{"number":25919,"comment_id":"1384380354","body":"<--!test -->\r\ntest","updated_at":"2023-01-16T17:48:57Z","created_at":"2023-01-16T17:47:48Z","creator_user_login":"shreya-as"}
{"number":25960,"comment_id":"1371858140","body":"@eps1lon could you review?\r\n","updated_at":"2023-01-05T07:11:41Z","created_at":"2023-01-05T07:11:41Z","creator_user_login":"Biki-das"}
{"number":26009,"comment_id":"1386521390","body":"no idea about this ","updated_at":"2023-01-18T05:44:52Z","created_at":"2023-01-18T05:44:52Z","creator_user_login":"shreya-as"}
{"number":26009,"comment_id":"1397177773","body":"I went to the website link you provided, and didn't reproduce this bug. Does it only happen on dev mode?","updated_at":"2023-01-19T15:39:47Z","created_at":"2023-01-19T15:39:47Z","creator_user_login":"mondaychen"}
{"number":26009,"comment_id":"1474756403","body":"Hello @dmaretskyi - Please uninstall the React Developer tools extension and then re-install it. Re-launch your browser and try it again. I also faced this issue and it worked for me!!! \r\nI hope this will help. ","updated_at":"2023-03-18T07:12:19Z","created_at":"2023-03-18T07:12:19Z","creator_user_login":"sudarshan1933"}
{"number":25985,"comment_id":"1379293311","body":"test carefully","updated_at":"2023-01-11T18:11:50Z","created_at":"2023-01-11T18:11:50Z","creator_user_login":"shreya-as"}
{"number":25985,"comment_id":"1379296805","body":"1. **test ### `**`","updated_at":"2023-01-11T18:14:57Z","created_at":"2023-01-11T18:14:57Z","creator_user_login":"shreya-as"}
{"number":25985,"comment_id":"1384269254","body":"> Profile Section is not updated automatically after updating profile picture\r\n\r\nHey @shreya-as  can you provide me some more information about the issue?\r\n","updated_at":"2023-01-16T16:13:45Z","created_at":"2023-01-16T16:13:45Z","creator_user_login":"SoumyadeepOSD"}
{"number":25985,"comment_id":"1400945540","body":"> fully\r\n\r\ngive us more info or code. it seems to be a state update issue.","updated_at":"2023-01-23T20:35:40Z","created_at":"2023-01-23T20:35:40Z","creator_user_login":"mohammad-taheri1"}
{"number":25968,"comment_id":"1373614178","body":"Unfortunately I did not figure out a way to properly unit test this issue which is why I've included the sandbox to prove that the fix works as intended. If anyone has any idea on how to add a unit test to this I would be happy to add them!","updated_at":"2023-01-06T13:18:14Z","created_at":"2023-01-06T13:18:14Z","creator_user_login":"jellevoost"}
{"number":25968,"comment_id":"1379845694","body":"oh nice","updated_at":"2023-01-12T05:46:37Z","created_at":"2023-01-12T05:46:37Z","creator_user_login":"softstrong"}
{"number":25970,"comment_id":"1384516241","body":"Nit: I get that `renderIntoDocument` is supposed to mean that `document` is the container argument but it doesn't make sense unless you also consider the hydrateRoot API so it's a bit weird. It also doesn't provide a difference from `renderIntoContainer`. Like what if the container is the document?\r\n\r\nIf you just consider the SSR document it's more like you render the \"whole\" document.\r\n\r\n`renderDocument` or `renderWholeDocument` might make the distinction clearer.","updated_at":"2023-01-16T20:19:27Z","created_at":"2023-01-16T20:19:27Z","creator_user_login":"sebmarkbage"}
{"number":25970,"comment_id":"1387599843","body":"> Nit: I get that `renderIntoDocument` is supposed to mean that `document` is the container argument but it doesn't make sense unless you also consider the hydrateRoot API so it's a bit weird. It also doesn't provide a difference from `renderIntoContainer`. Like what if the container is the document?\r\n> \r\n> If you just consider the SSR document it's more like you render the \"whole\" document.\r\n> \r\n> `renderDocument` or `renderWholeDocument` might make the distinction clearer.\r\n\r\nI updated to `renderDocument`. rationale makes sense","updated_at":"2023-01-18T18:59:11Z","created_at":"2023-01-18T18:59:11Z","creator_user_login":"gnoff"}
{"number":26011,"comment_id":"1401361376","body":"Any reason this can't be rolled out? It's DEV only so not super risky.\r\n\r\nIt's only off because it's not technically necessary due to the other fork:\r\n\r\nhttps://github.com/facebook/react/blob/main/packages/shared/forks/invokeGuardedCallbackImpl.www.js\r\n\r\nWhich is really just an old legacy feature because there was a GK for UIEs to opt-out of catching errors but that behavior leads to incorrect semantics and is risky since it takes a different code path in prod.\r\n\r\nWould be better to just use what we use in OSS.\r\n\r\nBoth of these are DEV only or only if you're in that GK so should be fairly easy/safe to unfork.","updated_at":"2023-01-24T03:55:48Z","created_at":"2023-01-24T03:54:42Z","creator_user_login":"sebmarkbage"}
{"number":25920,"comment_id":"1363907927","body":"Why can't `jsdom-jscore-rn` implement `style` with an empty `CSSStyleDeclaration`? The problem here is precedent: Do we need to special case every single environment that has a partial implementation of the DOM?","updated_at":"2022-12-23T12:18:45Z","created_at":"2022-12-23T12:18:45Z","creator_user_login":"eps1lon"}
{"number":25738,"comment_id":"1559477348","body":"@gnoff any opinions on this?","updated_at":"2023-05-23T14:10:32Z","created_at":"2023-05-23T14:10:32Z","creator_user_login":"gaearon"}
{"number":25886,"comment_id":"1684374189","body":"Hi @gaearon, I would like to take this up.. as I've read from the comment this should be throwing an error right?\r\n\r\nCan I get some guidance on how to proceed if any?","updated_at":"2023-08-18T19:55:27Z","created_at":"2023-08-18T19:55:27Z","creator_user_login":"codingmickey"}
{"number":25912,"comment_id":"1435651417","body":"From what I understand with React 18 is that you can just wrap your \"outside of view\" components in Suspense and React will not prioritize their hydration: https://vercel.com/blog/improving-interaction-to-next-paint-with-react-18-and-suspense\r\n\r\nI do see however benefits in having more control over the hydration indeed. Perhaps stopping hydration all together until the user starts scrolling or something along those lines.","updated_at":"2023-02-18T11:50:50Z","created_at":"2023-02-18T11:50:50Z","creator_user_login":"lmatteis"}
{"number":25745,"comment_id":"1331144114","body":"There is no way of determining which deps were used inside of an effect. Consider using a truly reactive framework like Solid or a reactive state manager like MobX, react-solid-state, $mol_wire, etc.","updated_at":"2022-11-29T18:58:02Z","created_at":"2022-11-29T18:58:02Z","creator_user_login":"krulod"}
{"number":25745,"comment_id":"1336121867","body":"@rgsk You can use https://www.npmjs.com/package/hooks.macro for this. I used it a lot at my previous job, and it works great!","updated_at":"2022-12-03T09:26:40Z","created_at":"2022-12-03T09:26:40Z","creator_user_login":"Glinkis"}
{"number":25719,"comment_id":"1322350781","body":"With Fast Refresh the issue is that we shouldn't be counting Hooks after `return` as part of the signature. I think that's a bug that we should be able to fix.\r\n\r\nBut I wonder if we should remove this warning altogether. This was attempted in https://github.com/facebook/react/pull/24525 but never shipped. It always shows up when you have a conditional `useEffect`, as noted in https://github.com/facebook/react/issues/24391.\r\n\r\nThere was also https://github.com/facebook/react/pull/24535 and then https://github.com/facebook/react/pull/25216 but they are not shipped either. Maybe worth prioritizing?","updated_at":"2022-11-21T16:44:41Z","created_at":"2022-11-21T16:44:19Z","creator_user_login":"gaearon"}
{"number":25742,"comment_id":"1328055043","body":"Working on it:\r\n\r\n![image](https://user-images.githubusercontent.com/5390719/204093494-fc7b81a6-6440-4297-9a10-18f2429a9535.png)\r\n\r\n![image](https://user-images.githubusercontent.com/5390719/204093499-23e67b6e-078c-4c2f-b8ea-56f73271ab7f.png)\r\n","updated_at":"2023-06-10T09:17:14Z","created_at":"2022-11-26T14:21:24Z","creator_user_login":"Jack-Works"}
{"number":25648,"comment_id":"1308841505","body":"@MuhtasimMusfiqZarab \r\nIt seems obvious behavior (current) in _Incognito Mode_. **Not sure if it's relevant** but you can checkout [this](https://www.google.com/chrome/privacy/whitepaper.html#:~:text=The%20X%2DGeo%20header%20will%20never%20be%20sent%20in%20Incognito%20mode.):\r\n> The `X-Geo` header will never be sent in Incognito mode.\r\n\r\n`X-Timezone` seems _somewhat_ related to `X-Geo`","updated_at":"2022-11-12T09:56:45Z","created_at":"2022-11-09T14:23:39Z","creator_user_login":"Pranav-yadav"}
{"number":25648,"comment_id":"1309914287","body":"@Pranav-yadav I am one of the team members of the project. I have created this custom header X-Timezone. It's only provides the region from which the user is accessing the site. @Pranav-yadav X-Timezone is not related to X-Geo. I have tried to send a string in a custom header named X-Abc. It produces the same result. It is not shown inside incognito.","updated_at":"2022-11-10T08:06:17Z","created_at":"2022-11-10T08:06:17Z","creator_user_login":"MuhtasimMusfiqZarab"}
{"number":25636,"comment_id":"1305154656","body":"@eps1lon any confirmation? So that I can open a PR w/ changes :)\r\nEdit: @acdlite (?)","updated_at":"2022-11-09T13:29:04Z","created_at":"2022-11-07T06:45:34Z","creator_user_login":"Pranav-yadav"}
{"number":25636,"comment_id":"1371176185","body":"I guess this issue exists in ReactJSXElement.js too?\r\n\r\nhttps://github.com/facebook/react/blob/4bd245e9ee22458bcd5b68524c47eaaab2cf2058/packages/react/src/jsx/ReactJSXElement.js#L274-L280","updated_at":"2023-01-04T16:53:53Z","created_at":"2023-01-04T16:52:53Z","creator_user_login":"FrozenHearth"}
{"number":25572,"comment_id":"1296269881","body":"a good solution to splitting UI and business logic, see: https://github.com/hawx1993/hooks-view-model","updated_at":"2022-10-31T08:47:35Z","created_at":"2022-10-30T14:12:30Z","creator_user_login":"hawx1993"}
{"number":25814,"comment_id":"1509402662","body":"Per @acdlite and @sebmarkbage:\r\n* Any urgent update will interrupt the pending transition. This is why useTransition works, because under the hood it sets an isPending state variable outside the transition.\r\n* This only affects CPU suspense; if the render is blocked on a loading promise then it should work fine.\r\n* If the transitions are entangled it's a bug as pointed out here; if they're not then it's a bug that isPending interrupts it.\r\n","updated_at":"2023-04-15T00:00:05Z","created_at":"2023-04-14T23:55:10Z","creator_user_login":"sophiebits"}
{"number":25715,"comment_id":"1321111259","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: c08d8b8041a1fa2eba423cdb0398dfbc6402a5bc...50f4e0fb2dadb600390300352dd389fbd06a0aec\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/50f4e0fb2dadb600390300352dd389fbd06a0aec/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=c08d8b8041a1fa2eba423cdb0398dfbc6402a5bc) | **=** | 154.33 kB | 154.33 kB | = | 48.98 kB | 48.98 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/50f4e0fb2dadb600390300352dd389fbd06a0aec/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=c08d8b8041a1fa2eba423cdb0398dfbc6402a5bc) | **=** | 156.25 kB | 156.25 kB | = | 49.60 kB | 49.60 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/50f4e0fb2dadb600390300352dd389fbd06a0aec/files/facebook-www/ReactDOM-prod.classic.js?compare=c08d8b8041a1fa2eba423cdb0398dfbc6402a5bc) | **=** | 533.14 kB | 533.14 kB | = | 94.42 kB | 94.42 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/50f4e0fb2dadb600390300352dd389fbd06a0aec/files/facebook-www/ReactDOM-prod.modern.js?compare=c08d8b8041a1fa2eba423cdb0398dfbc6402a5bc) | **=** | 518.24 kB | 518.24 kB | = | 92.24 kB | 92.24 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/50f4e0fb2dadb600390300352dd389fbd06a0aec/files/facebook-www/ReactDOMForked-prod.classic.js?compare=c08d8b8041a1fa2eba423cdb0398dfbc6402a5bc) | **=** | 533.14 kB | 533.14 kB | = | 94.42 kB | 94.42 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 50f4e0fb2dadb600390300352dd389fbd06a0aec\n</p>\n","updated_at":"2022-11-20T11:49:10Z","created_at":"2022-11-20T11:49:10Z","creator_user_login":"sizebot"}
{"number":25725,"comment_id":"1342057627","body":"Since you're using Jotai, maybe @dai-shi can help entangle why this is happening.","updated_at":"2022-12-08T05:16:45Z","created_at":"2022-12-08T05:16:45Z","creator_user_login":"eps1lon"}
{"number":25725,"comment_id":"1342071638","body":"@eps1lon Hi, thanks for reaching out.\r\n\r\nI found the behavior in the process of working on this [Jotai's issue](https://github.com/pmndrs/jotai/issues/1498) and was wondering if it was an unexpected behavior in the `act` function or a problem that I should handle.","updated_at":"2022-12-08T05:29:38Z","created_at":"2022-12-08T05:29:38Z","creator_user_login":"manakuro"}
{"number":25646,"comment_id":"1306353905","body":"Thinking about this further, I suspect it is because I am passing the client moduleMap (react-client-manifest.json) in to the server render of `ReactServerDOMWriter.renderToPipeableStream`, and I need to find a way to pass something else so that the files are client component files loaded directly rather than via the chunks.","updated_at":"2022-11-07T23:17:23Z","created_at":"2022-11-07T23:17:23Z","creator_user_login":"penx"}
{"number":25646,"comment_id":"1306410518","body":"I have this working by passing a proxy object in as the moduleMap:\r\n\r\n\r\n```js\r\nlet proxy = new Proxy(\r\n  {},\r\n  {\r\n    get(_, id) {\r\n      return new Proxy(\r\n        {},\r\n        {\r\n          get(_, n) {\r\n            return {\r\n              id,\r\n              chunks: [],\r\n              name: n,\r\n            };\r\n          },\r\n        }\r\n      );\r\n    },\r\n  }\r\n);\r\n```\r\n\r\nand then setting \r\n\r\n```js\r\nglobalThis.__webpack_require__ = (name) =>\r\n  require(path.relative(__filename, new URL(name).pathname));\r\n```\r\n\r\n...though pretty sure this isn't the intended usage, so would be good to know if there's another way to get ReactDOMServer to render a component that has been created by ReactServerDOMReader.","updated_at":"2022-11-08T00:21:35Z","created_at":"2022-11-08T00:21:35Z","creator_user_login":"penx"}
{"number":25643,"comment_id":"1305444047","body":"I believe something in [here](https://github.com/facebook/react/blob/main/packages/react-dom-bindings/src/events/plugins/SelectEventPlugin.js) needs to be changed. There's a comment saying:\r\n```\r\n    // Firefox doesn't support selectionchange, so check selection status\r\n    // after each key entry. The selection changes after keydown and before\r\n    // keyup, but we check on keydown as well in the case of holding down a\r\n    // key, when multiple keydown events are fired but only one keyup is.\r\n    // This is also our approach for IE handling, for the reason above.\r\n```\r\nBut according to Firefox documentation it's not true: https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/selectionchange_event","updated_at":"2022-11-07T11:05:50Z","created_at":"2022-11-07T11:05:50Z","creator_user_login":"AndreasBBS"}
{"number":25643,"comment_id":"1312077308","body":"I've been trying to fix this and I can't get the event triggered on the input node to even reach the [SelectEventPlugin.js](https://github.com/facebook/react/blob/main/packages/react-dom-bindings/src/events/plugins/SelectEventPlugin.js)\r\n@gaearon @kassens  Sorry to bother but I noticed that you've been involved in the implementation of this plugin. Could you give me some directions on how you think that conceptually I could integrate the [behavior supported by Firefox](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/selectionchange_event) into this plugin?","updated_at":"2022-11-11T19:02:27Z","created_at":"2022-11-11T19:02:27Z","creator_user_login":"AndreasBBS"}
{"number":25653,"comment_id":"1308443590","body":"Back end Library Location Management System\r\n","updated_at":"2022-11-09T09:12:23Z","created_at":"2022-11-09T09:12:23Z","creator_user_login":"ataoll"}
{"number":25511,"comment_id":"1288538983","body":"Hi @timphillips, I think this is a bug, I'll try to fix it.\r\nThanks for report it!","updated_at":"2022-10-24T07:26:30Z","created_at":"2022-10-24T07:26:30Z","creator_user_login":"damianpumar"}
{"number":25517,"comment_id":"1285883390","body":"@paulmambu what do you mean by 'who needs to approve it?', can you elaborate on your issue? ","updated_at":"2022-10-20T17:06:13Z","created_at":"2022-10-20T17:06:13Z","creator_user_login":"Shrey00"}
{"number":25517,"comment_id":"1286318907","body":"Hi yes, exactly.  May I know who needs to approve it?  Thanks","updated_at":"2022-10-21T00:47:20Z","created_at":"2022-10-21T00:47:20Z","creator_user_login":"paulmambu"}
{"number":25351,"comment_id":"1263439135","body":"## Update: \r\n\r\nI am starting by studying the React source code structure mentioned here - https://reactjs.org/docs/codebase-overview.html\r\n\r\nHoping that this will give some insight regarding code structure.","updated_at":"2022-09-30T11:10:36Z","created_at":"2022-09-30T11:10:36Z","creator_user_login":"kinjal-basu"}
{"number":25351,"comment_id":"1285397403","body":"Would it be helpful if I use a note-taking app like obsidian or logseq to produce a graph structure of the entire react codebase where a note contains a function definition?","updated_at":"2022-10-20T11:54:55Z","created_at":"2022-10-20T11:54:55Z","creator_user_login":"kinjal-basu"}
{"number":25384,"comment_id":"1310762798","body":"can confirm this issue","updated_at":"2022-11-10T18:59:22Z","created_at":"2022-11-10T18:59:22Z","creator_user_login":"sKopheK"}
{"number":25384,"comment_id":"1481805612","body":"Thank you! In your second input in sunbox, you showing how do prevent entering a set of zeros","updated_at":"2023-03-23T19:52:55Z","created_at":"2023-03-23T19:52:55Z","creator_user_login":"andrewkazan"}
{"number":25367,"comment_id":"1419312506","body":"Just re-checked this: it remains a problem.","updated_at":"2023-02-06T15:55:08Z","created_at":"2023-02-06T15:55:08Z","creator_user_login":"nhusher"}
{"number":25340,"comment_id":"1275073497","body":"can you please assign me this project for hacktoberfest 2022 ? so that i could definitely resolve issue.\r\n","updated_at":"2022-10-11T17:59:41Z","created_at":"2022-10-11T17:59:41Z","creator_user_login":"anantnipunge"}
{"number":25340,"comment_id":"1281175514","body":"I get the same behavior.  \r\n\r\n\r\n\r\nGoogle Chrome | 105.0.5195.52 (Official Build) (x86_64)\r\n-- | --\r\nRevision | 412c95e518836d8a7d97250d62b29c2ae6a26a85-refs/branch-heads/5195@{#853}\r\nOS | macOS Version 12.6 (Build 21G115)\r\nJavaScript | V8 10.5.218.7\r\n\r\n","updated_at":"2022-10-17T17:00:35Z","created_at":"2022-10-17T17:00:35Z","creator_user_login":"andrewwatson"}
{"number":25292,"comment_id":"1251510256","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: e099e1dc0eeaef7ef1cb2b6430533b2e962f80a9...1f678a1c299fb47cfa22ae8e6a6c28ca287b3b02\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/1f678a1c299fb47cfa22ae8e6a6c28ca287b3b02/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=e099e1dc0eeaef7ef1cb2b6430533b2e962f80a9) | **=** | 135.04 kB | 135.04 kB | = | 43.33 kB | 43.33 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/1f678a1c299fb47cfa22ae8e6a6c28ca287b3b02/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=e099e1dc0eeaef7ef1cb2b6430533b2e962f80a9) | **=** | 142.50 kB | 142.50 kB | = | 45.51 kB | 45.51 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/1f678a1c299fb47cfa22ae8e6a6c28ca287b3b02/files/facebook-www/ReactDOM-prod.classic.js?compare=e099e1dc0eeaef7ef1cb2b6430533b2e962f80a9) | **=** | 489.88 kB | 489.88 kB | = | 87.20 kB | 87.21 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/1f678a1c299fb47cfa22ae8e6a6c28ca287b3b02/files/facebook-www/ReactDOM-prod.modern.js?compare=e099e1dc0eeaef7ef1cb2b6430533b2e962f80a9) | **=** | 475.17 kB | 475.17 kB | = | 85.01 kB | 85.01 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/1f678a1c299fb47cfa22ae8e6a6c28ca287b3b02/files/facebook-www/ReactDOMForked-prod.classic.js?compare=e099e1dc0eeaef7ef1cb2b6430533b2e962f80a9) | **=** | 489.88 kB | 489.88 kB | = | 87.21 kB | 87.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 1f678a1c299fb47cfa22ae8e6a6c28ca287b3b02\n</p>\n","updated_at":"2022-09-19T20:22:32Z","created_at":"2022-09-19T20:22:32Z","creator_user_login":"sizebot"}
{"number":25656,"comment_id":"1311283254","body":"I have managed to replicate this bug here [https://github.com/TomDo1234/ReactHookRuleBug](https://github.com/TomDo1234/ReactHookRuleBug)\r\n","updated_at":"2022-11-11T06:28:35Z","created_at":"2022-11-11T06:28:35Z","creator_user_login":"TomDo1234"}
{"number":24789,"comment_id":"1442806676","body":"Isn't doctype automatically emitted when you render `<html>`? I thought we did that.","updated_at":"2023-02-24T04:50:49Z","created_at":"2023-02-24T04:50:49Z","creator_user_login":"gaearon"}
{"number":25246,"comment_id":"1244832889","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: f2e4ff082dc273b1958423a5fce04833af43f855...86cb17faede8ffb145da26f4242d7c2d70e24067\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/86cb17faede8ffb145da26f4242d7c2d70e24067/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=f2e4ff082dc273b1958423a5fce04833af43f855) | **+0.07%** | 134.97 kB | 135.07 kB | +0.10% | 43.23 kB | 43.27 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/86cb17faede8ffb145da26f4242d7c2d70e24067/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=f2e4ff082dc273b1958423a5fce04833af43f855) | **+0.07%** | 141.69 kB | 141.79 kB | +0.10% | 45.23 kB | 45.27 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/86cb17faede8ffb145da26f4242d7c2d70e24067/files/facebook-www/ReactDOM-prod.classic.js?compare=f2e4ff082dc273b1958423a5fce04833af43f855) | **+0.03%** | 486.26 kB | 486.40 kB | +0.06% | 86.55 kB | 86.60 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/86cb17faede8ffb145da26f4242d7c2d70e24067/files/facebook-www/ReactDOM-prod.modern.js?compare=f2e4ff082dc273b1958423a5fce04833af43f855) | **+0.03%** | 471.57 kB | 471.71 kB | +0.06% | 84.32 kB | 84.37 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/86cb17faede8ffb145da26f4242d7c2d70e24067/files/facebook-www/ReactDOMForked-prod.classic.js?compare=f2e4ff082dc273b1958423a5fce04833af43f855) | **+0.03%** | 486.26 kB | 486.40 kB | +0.06% | 86.55 kB | 86.60 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 86cb17faede8ffb145da26f4242d7c2d70e24067\n</p>\n","updated_at":"2022-09-13T03:07:26Z","created_at":"2022-09-13T02:57:58Z","creator_user_login":"sizebot"}
{"number":25231,"comment_id":"1242717440","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 1e3e30dae2bcfbeb0abc686f2a37aec208eedb39...360fe3d2ef5b5699e6aa098f316f961016a702b9\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/360fe3d2ef5b5699e6aa098f316f961016a702b9/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=1e3e30dae2bcfbeb0abc686f2a37aec208eedb39) | **=** | 153.65 kB | 153.65 kB | = | 48.90 kB | 48.90 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/360fe3d2ef5b5699e6aa098f316f961016a702b9/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=1e3e30dae2bcfbeb0abc686f2a37aec208eedb39) | **=** | 155.57 kB | 155.57 kB | = | 49.51 kB | 49.51 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/360fe3d2ef5b5699e6aa098f316f961016a702b9/files/facebook-www/ReactDOM-prod.classic.js?compare=1e3e30dae2bcfbeb0abc686f2a37aec208eedb39) | **=** | 530.46 kB | 530.46 kB | = | 94.67 kB | 94.67 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/360fe3d2ef5b5699e6aa098f316f961016a702b9/files/facebook-www/ReactDOM-prod.modern.js?compare=1e3e30dae2bcfbeb0abc686f2a37aec208eedb39) | **=** | 515.71 kB | 515.71 kB | = | 92.49 kB | 92.49 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/360fe3d2ef5b5699e6aa098f316f961016a702b9/files/facebook-www/ReactDOMForked-prod.classic.js?compare=1e3e30dae2bcfbeb0abc686f2a37aec208eedb39) | **=** | 530.46 kB | 530.46 kB | = | 94.67 kB | 94.67 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 360fe3d2ef5b5699e6aa098f316f961016a702b9\n</p>\n","updated_at":"2022-11-09T19:45:57Z","created_at":"2022-09-10T12:20:51Z","creator_user_login":"sizebot"}
{"number":25233,"comment_id":"1242747050","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 3613284dceac38de4ef5a7c93c4897600ee6923b...d8e68b0f3b65b8cd2d413a96bed060170d8939b8\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d8e68b0f3b65b8cd2d413a96bed060170d8939b8/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=3613284dceac38de4ef5a7c93c4897600ee6923b) | **=** | 134.97 kB | 134.97 kB | = | 43.23 kB | 43.23 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d8e68b0f3b65b8cd2d413a96bed060170d8939b8/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=3613284dceac38de4ef5a7c93c4897600ee6923b) | **=** | 141.69 kB | 141.69 kB | = | 45.23 kB | 45.23 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/d8e68b0f3b65b8cd2d413a96bed060170d8939b8/files/facebook-www/ReactDOM-prod.classic.js?compare=3613284dceac38de4ef5a7c93c4897600ee6923b) | **=** | 486.26 kB | 486.26 kB | = | 86.55 kB | 86.55 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/d8e68b0f3b65b8cd2d413a96bed060170d8939b8/files/facebook-www/ReactDOM-prod.modern.js?compare=3613284dceac38de4ef5a7c93c4897600ee6923b) | **=** | 471.57 kB | 471.57 kB | = | 84.32 kB | 84.32 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/d8e68b0f3b65b8cd2d413a96bed060170d8939b8/files/facebook-www/ReactDOMForked-prod.classic.js?compare=3613284dceac38de4ef5a7c93c4897600ee6923b) | **=** | 486.26 kB | 486.26 kB | = | 86.55 kB | 86.55 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against d8e68b0f3b65b8cd2d413a96bed060170d8939b8\n</p>\n","updated_at":"2022-09-11T01:19:19Z","created_at":"2022-09-10T14:58:36Z","creator_user_login":"sizebot"}
{"number":25276,"comment_id":"1272280616","body":"this is because it is upto the browser which method they wanna use for filling up the fields\r\n## In your case it was\r\nfocus to el1 or clicking on el1;\r\nchanging data of el1;\r\nblur then moving up to the next autocomplete element.\r\nas you know it can have 1 focus at a time.\r\nthats the reason for this behaviour.\r\n","updated_at":"2022-10-08T09:50:28Z","created_at":"2022-10-08T09:50:28Z","creator_user_login":"devjs1000"}
{"number":25342,"comment_id":"1261501121","body":"I think the concern is perf here. If you make it an object, you'll have to create a new object and immediately discard it on every `onRender`. This puts a lot of pressure on the garbage collector. \r\n\r\nHave you tried implementing a custom `Profiler` component that just composes `React.Profiler` but works exactly how you describe? Try that in a large application. It may add considerable overhead to profiling which you probably don't want to have as a tradeoff to \"tedious to work with\".","updated_at":"2022-09-28T21:50:40Z","created_at":"2022-09-28T21:50:40Z","creator_user_login":"eps1lon"}
{"number":25279,"comment_id":"1287660351","body":"Agreed, would be interesting to hear smth. about it from react devs.","updated_at":"2022-10-22T07:31:54Z","created_at":"2022-10-22T07:31:54Z","creator_user_login":"Maverick17user"}
{"number":25227,"comment_id":"1242518316","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: d5ddc6543efb2d26303a8bc3f38a5ad5dfe0e4f7...33e0f947516e491a82ba6aded1f702a4b539b7b0\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/33e0f947516e491a82ba6aded1f702a4b539b7b0/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=d5ddc6543efb2d26303a8bc3f38a5ad5dfe0e4f7) | **=** | 134.97 kB | 134.97 kB | = | 43.23 kB | 43.23 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/33e0f947516e491a82ba6aded1f702a4b539b7b0/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=d5ddc6543efb2d26303a8bc3f38a5ad5dfe0e4f7) | **=** | 141.69 kB | 141.69 kB | = | 45.23 kB | 45.23 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/33e0f947516e491a82ba6aded1f702a4b539b7b0/files/facebook-www/ReactDOM-prod.classic.js?compare=d5ddc6543efb2d26303a8bc3f38a5ad5dfe0e4f7) | **=** | 486.24 kB | 486.24 kB | = | 86.55 kB | 86.55 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/33e0f947516e491a82ba6aded1f702a4b539b7b0/files/facebook-www/ReactDOM-prod.modern.js?compare=d5ddc6543efb2d26303a8bc3f38a5ad5dfe0e4f7) | **=** | 471.52 kB | 471.52 kB | = | 84.32 kB | 84.32 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/33e0f947516e491a82ba6aded1f702a4b539b7b0/files/facebook-www/ReactDOMForked-prod.classic.js?compare=d5ddc6543efb2d26303a8bc3f38a5ad5dfe0e4f7) | **=** | 486.24 kB | 486.24 kB | = | 86.55 kB | 86.55 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 33e0f947516e491a82ba6aded1f702a4b539b7b0\n</p>\n","updated_at":"2022-09-09T22:10:56Z","created_at":"2022-09-09T22:10:56Z","creator_user_login":"sizebot"}
{"number":25308,"comment_id":"1379707885","body":"I am seeing the same exact issue.  I can't believe more people are not reporting this.","updated_at":"2023-01-12T01:49:02Z","created_at":"2023-01-12T01:49:02Z","creator_user_login":"melloware"}
{"number":24834,"comment_id":"1173042766","body":"It doesn't look like this bug report has enough info for one of us to reproduce it.\r\n\r\nPlease provide a CodeSandbox (https://react.new), or a link to a repository on GitHub.\r\n\r\nHere are some tips for providing a minimal example: https://stackoverflow.com/help/mcve\r\n\r\n<!-- mui template next: https://material-ui.com/r/issue-template-next -->\r\n<!-- mui template stable: https://material-ui.com/r/issue-template-latest -->\r\n<!-- react template: https://react.new/ -->","updated_at":"2022-07-03T09:06:50Z","created_at":"2022-07-03T09:06:50Z","creator_user_login":"eps1lon"}
{"number":24834,"comment_id":"1193571826","body":"Try to create key with random number may be help You .","updated_at":"2022-07-25T04:42:40Z","created_at":"2022-07-25T04:42:40Z","creator_user_login":"RAJEEV2510"}
{"number":24770,"comment_id":"1162918858","body":"FWIW, This code is removed during the refactor of the effect list implement, see this pr: https://github.com/facebook/react/pull/20644","updated_at":"2022-06-22T10:20:29Z","created_at":"2022-06-22T10:20:29Z","creator_user_login":"F3n67u"}
{"number":24709,"comment_id":"1167955111","body":"Hi,\r\nI think the issue lies with the the setInterval function:\r\n\r\nBesides the memory heap issue aside, I got cpu usage 100% which is lit literally.\r\n\r\nSo, can you implement this useEffect in the below and see if that cpu percentage and memory leak doesn't occur 👍 \r\n\r\n  // Re-render this component every 100ms //causing the same effect but with optimized code:\r\n//so for each change in i value we have useEffect running once//\r\n\r\n  useEffect(() => {\r\n    setTimeOut() => {\r\n      setI((curI) => (curI += 1));\r\n    }, 100);\r\n  }, [i]);\r\n","updated_at":"2022-06-27T21:58:54Z","created_at":"2022-06-27T21:58:54Z","creator_user_login":"nikikalwar"}
{"number":24769,"comment_id":"1208901660","body":"Same. Any luck?","updated_at":"2022-08-09T04:34:21Z","created_at":"2022-08-09T04:34:21Z","creator_user_login":"devpascoe"}
{"number":24795,"comment_id":"1174991733","body":"@lunaruan fix the bug. https://github.com/facebook/react/pull/24797","updated_at":"2022-07-05T12:17:04Z","created_at":"2022-07-05T12:17:04Z","creator_user_login":"xlzy520"}
{"number":24795,"comment_id":"1245875911","body":" can I work on this issue ?","updated_at":"2022-09-13T19:40:49Z","created_at":"2022-09-13T19:40:49Z","creator_user_login":"iks1"}
{"number":24795,"comment_id":"1246154723","body":"@iks1 The PR fixed.https://github.com/facebook/react/pull/24797","updated_at":"2022-09-14T02:31:03Z","created_at":"2022-09-14T02:31:03Z","creator_user_login":"xlzy520"}
{"number":24791,"comment_id":"1169875658","body":"As a workaround you can do \r\n\r\n```jsx\r\nconst Ready = () => {}\r\nMyComponent.Ready = Ready\r\n```\r\nThis has the benefit of giving your component a name in devtools and component stacks.\r\n\r\n`export default () => {}` is also recognized as a component so \"anonymous component names\" are not supported does not seem like a sufficient argument to close this as \"working as expected\".","updated_at":"2022-06-29T11:39:02Z","created_at":"2022-06-29T11:39:02Z","creator_user_login":"eps1lon"}
{"number":24791,"comment_id":"1173128887","body":"I created a pull request that should resolve this issue (#24839). I think it should check the name of the property of the component instead of the name of the variable assigned to the anonymous function.","updated_at":"2022-07-03T16:12:09Z","created_at":"2022-07-03T16:12:09Z","creator_user_login":"cbclemmer"}
{"number":24832,"comment_id":"1171507297","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: e61fd91f5c523adb63a3b97375ac95ac657dc07f...3ea1640fc9f96cf5e29aebbcfbdb74ef6b2bd3e5\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/3ea1640fc9f96cf5e29aebbcfbdb74ef6b2bd3e5/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=e61fd91f5c523adb63a3b97375ac95ac657dc07f) | **=** | 131.75 kB | 131.75 kB | = | 42.39 kB | 42.39 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/3ea1640fc9f96cf5e29aebbcfbdb74ef6b2bd3e5/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=e61fd91f5c523adb63a3b97375ac95ac657dc07f) | **=** | 137.02 kB | 137.02 kB | = | 43.98 kB | 43.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/3ea1640fc9f96cf5e29aebbcfbdb74ef6b2bd3e5/files/facebook-www/ReactDOM-prod.classic.js?compare=e61fd91f5c523adb63a3b97375ac95ac657dc07f) | **=** | 456.45 kB | 456.45 kB | = | 83.13 kB | 83.13 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/3ea1640fc9f96cf5e29aebbcfbdb74ef6b2bd3e5/files/facebook-www/ReactDOM-prod.modern.js?compare=e61fd91f5c523adb63a3b97375ac95ac657dc07f) | **=** | 441.70 kB | 441.70 kB | = | 80.84 kB | 80.84 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/3ea1640fc9f96cf5e29aebbcfbdb74ef6b2bd3e5/files/facebook-www/ReactDOMForked-prod.classic.js?compare=e61fd91f5c523adb63a3b97375ac95ac657dc07f) | **=** | 457.23 kB | 457.23 kB | = | 83.21 kB | 83.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 3ea1640fc9f96cf5e29aebbcfbdb74ef6b2bd3e5\n</p>\n","updated_at":"2022-06-30T21:47:11Z","created_at":"2022-06-30T17:46:38Z","creator_user_login":"sizebot"}
{"number":23046,"comment_id":"1002857541","body":"Mahbhb","updated_at":"2021-12-30T03:29:17Z","created_at":"2021-12-30T03:29:17Z","creator_user_login":"7654mahbub54"}
{"number":23046,"comment_id":"1655987310","body":"I would love to work on this issue as first timer issue if it's still open. @eps1lon ","updated_at":"2023-07-28T16:50:34Z","created_at":"2023-07-28T16:41:03Z","creator_user_login":"itolimaesther"}
{"number":27135,"comment_id":"1645328187","body":"Hi guy, I can fix it, it's also bothering me. In fact, this is not related to the `React version`, This is a notorious problem, it's about `React controlled components` and  `CompositionEvent`.\r\n\r\nBy attempting to make the input an uncontrolled component and manual control of `CompositionEvent`, we can fix it, But sincerely, I recommend using other forms of interaction, For example, clicking a button or use `onBlur` event.\r\n\r\nFinally, the online example is https://codesandbox.io/s/react-kana-ime-controlled-component-input-forked-gc3ph2?file=/src/App.js, I hope I can help you.\r\n\r\n\r\n\r\n\r\n\r\n","updated_at":"2023-07-21T10:00:05Z","created_at":"2023-07-21T10:00:05Z","creator_user_login":"suchangv"}
{"number":27135,"comment_id":"1646807322","body":"Hey @suchangv , thanks for that workaround - very useful!\r\n\r\nFor context, I noticed this issue in a phone number input field that formats the input as it is entered, in real time. So this wouldn't be possible using the workaround, as the formatting would only happen on blur.\r\n\r\nI wonder if this is fixable on the React level? Or does it indicate a broader problem with IME compositions in general? 🤔 ","updated_at":"2023-07-23T10:47:17Z","created_at":"2023-07-23T10:47:17Z","creator_user_login":"eoghanmcilwaine"}
{"number":27183,"comment_id":"1665783807","body":"UPDATE - I see that this problem is with react `18.2.0` but `18.1.0` does not have this issue.","updated_at":"2023-08-04T15:24:30Z","created_at":"2023-08-04T15:24:30Z","creator_user_login":"sgore-godaddy"}
{"number":27183,"comment_id":"1665888759","body":"UPDATE2 - in `18.2.0` in `Production` mode there is no `data-msg` attribute on it but the `template` tag is still there. \r\nI think it is part of this commit - https://github.com/facebook/react/commit/aec575914a0fd76c9db8998ea62c3ee975de70d7\r\n\r\n@gnoff and @salazarm care to take a look ? \r\n\r\nI just want to confirm if this is expected behaviour or a bug ?","updated_at":"2023-08-04T16:31:55Z","created_at":"2023-08-04T16:31:55Z","creator_user_login":"sgore-godaddy"}
{"number":27141,"comment_id":"1647645488","body":"Actually, the differed value is not changing immediately. It is working as stated in the [docs.](https://react.dev/reference/react/useDeferredValue#returns) \r\n\r\n>  React will first attempt a re-render with the old value (so it will return the old value), and then try another re-render in background with the new value (so it will return the updated value).\r\n\r\nIn your example everything is working right as described in docs. There are not many operations happening in background in your example so after the first render with an old value the engine immediately performs another background re-render and after finishing the first render you see an old value and almost immediately a new deferred one as the next re-render happens.\r\n\r\nYou can have a look at my [code sample](https://codesandbox.io/s/nervous-thompson-5y96mf?file=/App.js). Please, open the console and pay attention to `isStale, query, deferredQuery` variables. When console shows `isStale` as true it means that the value of variable is being differed at the moment you can see values of each variable in console log at every moment of code execution.","updated_at":"2023-07-24T10:29:08Z","created_at":"2023-07-24T10:29:08Z","creator_user_login":"quiteeasy"}
{"number":27115,"comment_id":"1637181935","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 546fe4681c52de6a333a55cedb141c87b626425e...02de8924bda2d0e6a56758ab54368b7519641e8f\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/02de8924bda2d0e6a56758ab54368b7519641e8f/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 164.38 kB | 164.38 kB | = | 51.77 kB | 51.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/02de8924bda2d0e6a56758ab54368b7519641e8f/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 171.79 kB | 171.79 kB | = | 53.99 kB | 53.99 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/02de8924bda2d0e6a56758ab54368b7519641e8f/files/facebook-www/ReactDOM-prod.classic.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 567.27 kB | 567.27 kB | = | 100.05 kB | 100.05 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/02de8924bda2d0e6a56758ab54368b7519641e8f/files/facebook-www/ReactDOM-prod.modern.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 551.07 kB | 551.07 kB | = | 97.22 kB | 97.22 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 02de8924bda2d0e6a56758ab54368b7519641e8f\n</p>\n","updated_at":"2023-07-16T20:21:28Z","created_at":"2023-07-16T20:21:28Z","creator_user_login":"react-sizebot"}
{"number":27088,"comment_id":"1630465617","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...a5ba1f68713174bc38ba3d48c9de38bd72497cd1\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a5ba1f68713174bc38ba3d48c9de38bd72497cd1/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a5ba1f68713174bc38ba3d48c9de38bd72497cd1/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/a5ba1f68713174bc38ba3d48c9de38bd72497cd1/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/a5ba1f68713174bc38ba3d48c9de38bd72497cd1/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against a5ba1f68713174bc38ba3d48c9de38bd72497cd1\n</p>\n","updated_at":"2023-07-11T09:19:53Z","created_at":"2023-07-11T09:19:53Z","creator_user_login":"react-sizebot"}
{"number":27098,"comment_id":"1631768883","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 0a360642dcc08cab469da0a0e4f1050e56b0ef7e...56e780b4f3510689767d3129d789f1d1b2b9a01f\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/56e780b4f3510689767d3129d789f1d1b2b9a01f/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/56e780b4f3510689767d3129d789f1d1b2b9a01f/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/56e780b4f3510689767d3129d789f1d1b2b9a01f/files/facebook-www/ReactDOM-prod.classic.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/56e780b4f3510689767d3129d789f1d1b2b9a01f/files/facebook-www/ReactDOM-prod.modern.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 56e780b4f3510689767d3129d789f1d1b2b9a01f\n</p>\n","updated_at":"2023-07-12T02:45:57Z","created_at":"2023-07-12T02:45:57Z","creator_user_login":"react-sizebot"}
{"number":27083,"comment_id":"1630302827","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...f5755d7f3d4fae1af8b1afeaa15af655bdd03a0d\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/f5755d7f3d4fae1af8b1afeaa15af655bdd03a0d/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/f5755d7f3d4fae1af8b1afeaa15af655bdd03a0d/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/f5755d7f3d4fae1af8b1afeaa15af655bdd03a0d/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/f5755d7f3d4fae1af8b1afeaa15af655bdd03a0d/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against f5755d7f3d4fae1af8b1afeaa15af655bdd03a0d\n</p>\n","updated_at":"2023-07-11T07:33:52Z","created_at":"2023-07-11T07:33:52Z","creator_user_login":"react-sizebot"}
{"number":27086,"comment_id":"1630466422","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...8e5cc6b966a872aa374dfc3167c73680af1cf295\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/8e5cc6b966a872aa374dfc3167c73680af1cf295/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/8e5cc6b966a872aa374dfc3167c73680af1cf295/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/8e5cc6b966a872aa374dfc3167c73680af1cf295/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/8e5cc6b966a872aa374dfc3167c73680af1cf295/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 8e5cc6b966a872aa374dfc3167c73680af1cf295\n</p>\n","updated_at":"2023-07-11T09:20:26Z","created_at":"2023-07-11T09:20:26Z","creator_user_login":"react-sizebot"}
{"number":27097,"comment_id":"1631697487","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 0a360642dcc08cab469da0a0e4f1050e56b0ef7e...da105727523e1dc9ff63f9ae90882c23dd151733\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/da105727523e1dc9ff63f9ae90882c23dd151733/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/da105727523e1dc9ff63f9ae90882c23dd151733/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/da105727523e1dc9ff63f9ae90882c23dd151733/files/facebook-www/ReactDOM-prod.classic.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/da105727523e1dc9ff63f9ae90882c23dd151733/files/facebook-www/ReactDOM-prod.modern.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against da105727523e1dc9ff63f9ae90882c23dd151733\n</p>\n","updated_at":"2023-07-12T00:58:07Z","created_at":"2023-07-12T00:58:07Z","creator_user_login":"react-sizebot"}
{"number":27162,"comment_id":"1654653523","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 493f72b0a7111b601c16b8ad8bc2649d82c184a0...304d38207eddadedba35c7ff139e08682ac0f8c3\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/304d38207eddadedba35c7ff139e08682ac0f8c3/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=493f72b0a7111b601c16b8ad8bc2649d82c184a0) | **=** | 164.38 kB | 164.38 kB | = | 51.77 kB | 51.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/304d38207eddadedba35c7ff139e08682ac0f8c3/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=493f72b0a7111b601c16b8ad8bc2649d82c184a0) | **=** | 171.79 kB | 171.79 kB | = | 53.99 kB | 53.99 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/304d38207eddadedba35c7ff139e08682ac0f8c3/files/facebook-www/ReactDOM-prod.classic.js?compare=493f72b0a7111b601c16b8ad8bc2649d82c184a0) | **=** | 567.40 kB | 567.40 kB | = | 100.10 kB | 100.10 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/304d38207eddadedba35c7ff139e08682ac0f8c3/files/facebook-www/ReactDOM-prod.modern.js?compare=493f72b0a7111b601c16b8ad8bc2649d82c184a0) | **=** | 551.20 kB | 551.20 kB | = | 97.26 kB | 97.26 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 304d38207eddadedba35c7ff139e08682ac0f8c3\n</p>\n","updated_at":"2023-07-27T22:14:07Z","created_at":"2023-07-27T22:14:07Z","creator_user_login":"react-sizebot"}
{"number":27145,"comment_id":"1661064939","body":"have you tried to run with this command?\r\n\r\n`HOST=0.0.0.0 npm run start`","updated_at":"2023-08-01T20:43:44Z","created_at":"2023-08-01T20:43:44Z","creator_user_login":"blasko03"}
{"number":27145,"comment_id":"1665470399","body":"> have you tried to run with this command?\r\n> \r\n> `HOST=0.0.0.0 npm run start`\r\n\r\nno ","updated_at":"2023-08-04T11:38:46Z","created_at":"2023-08-04T11:38:46Z","creator_user_login":"randomusert"}
{"number":27101,"comment_id":"1632456943","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 0a360642dcc08cab469da0a0e4f1050e56b0ef7e...ae26ec3844fc470d154bbac765e314d63feeaae6\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/ae26ec3844fc470d154bbac765e314d63feeaae6/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/ae26ec3844fc470d154bbac765e314d63feeaae6/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/ae26ec3844fc470d154bbac765e314d63feeaae6/files/facebook-www/ReactDOM-prod.classic.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/ae26ec3844fc470d154bbac765e314d63feeaae6/files/facebook-www/ReactDOM-prod.modern.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against ae26ec3844fc470d154bbac765e314d63feeaae6\n</p>\n","updated_at":"2023-07-12T12:39:38Z","created_at":"2023-07-12T12:39:38Z","creator_user_login":"react-sizebot"}
{"number":27106,"comment_id":"1633490956","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 9377e10105b41976c77c7f664f2363cb8c41ac8a...5c080ea57f9e0f493119a6b6bf8849bc1e0ead3c\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5c080ea57f9e0f493119a6b6bf8849bc1e0ead3c/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=9377e10105b41976c77c7f664f2363cb8c41ac8a) | **=** | 164.38 kB | 164.38 kB | = | 51.77 kB | 51.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5c080ea57f9e0f493119a6b6bf8849bc1e0ead3c/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=9377e10105b41976c77c7f664f2363cb8c41ac8a) | **=** | 171.79 kB | 171.79 kB | = | 53.99 kB | 53.99 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/5c080ea57f9e0f493119a6b6bf8849bc1e0ead3c/files/facebook-www/ReactDOM-prod.classic.js?compare=9377e10105b41976c77c7f664f2363cb8c41ac8a) | **=** | 567.27 kB | 567.27 kB | = | 100.05 kB | 100.05 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/5c080ea57f9e0f493119a6b6bf8849bc1e0ead3c/files/facebook-www/ReactDOM-prod.modern.js?compare=9377e10105b41976c77c7f664f2363cb8c41ac8a) | **=** | 551.07 kB | 551.07 kB | = | 97.22 kB | 97.22 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 5c080ea57f9e0f493119a6b6bf8849bc1e0ead3c\n</p>\n","updated_at":"2023-07-13T03:25:42Z","created_at":"2023-07-13T03:25:42Z","creator_user_login":"react-sizebot"}
{"number":27099,"comment_id":"1631803345","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 0a360642dcc08cab469da0a0e4f1050e56b0ef7e...4306e482786c48494ce5a2978bacd614bcff032d\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/4306e482786c48494ce5a2978bacd614bcff032d/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/4306e482786c48494ce5a2978bacd614bcff032d/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/4306e482786c48494ce5a2978bacd614bcff032d/files/facebook-www/ReactDOM-prod.classic.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/4306e482786c48494ce5a2978bacd614bcff032d/files/facebook-www/ReactDOM-prod.modern.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 4306e482786c48494ce5a2978bacd614bcff032d\n</p>\n","updated_at":"2023-07-12T03:44:06Z","created_at":"2023-07-12T03:44:06Z","creator_user_login":"react-sizebot"}
{"number":27109,"comment_id":"1643898737","body":"+1 confirmed","updated_at":"2023-07-20T13:09:23Z","created_at":"2023-07-20T13:09:23Z","creator_user_login":"crrdean"}
{"number":27109,"comment_id":"1644508430","body":"I have opened a feature request to check this using Github's Dependabot as well: dependabot/dependabot-core#7603","updated_at":"2023-07-20T19:48:53Z","created_at":"2023-07-20T19:48:53Z","creator_user_login":"burdisal"}
{"number":27156,"comment_id":"1652725420","body":"original issue: https://github.com/vercel/next.js/discussions/53215#discussion-5442900","updated_at":"2023-07-27T00:28:48Z","created_at":"2023-07-27T00:28:48Z","creator_user_login":"ellemedit"}
{"number":27156,"comment_id":"1653414086","body":"expermenting test code:\r\n\r\n```\r\n\r\n  // @gate enableAsyncActions\r\n  it('transition should be commited for long async action', async () => {\r\n    let startTransition;\r\n    function App() {\r\n      const [isPending, _startTransition] = React.useTransition();\r\n      startTransition = _startTransition;\r\n      Scheduler.log(`isPending:${JSON.stringify(isPending)}`);\r\n      return null;\r\n    }\r\n    const root = ReactDOMClient.createRoot(container);\r\n    await act(async () => {\r\n      root.render(<App />);\r\n    });\r\n    assertLog(['isPending:false']);\r\n\r\n    let resolvePromise; \r\n    let promise = new Promise((resolve) => {\r\n      resolvePromise = resolve;\r\n    });\r\n    await act(() => {\r\n      startTransition(() => promise);\r\n    });\r\n    assertLog(['isPending:true']);\r\n\r\n    await act(async () => {  \r\n      Scheduler.unstable_advanceTime(5000);\r\n      resolvePromise();\r\n    });\r\n    assertLog(['isPending:false']);\r\n\r\n    await act(() => {\r\n      root.unmount();\r\n    });\r\n  })\r\n```","updated_at":"2023-07-27T11:18:17Z","created_at":"2023-07-27T11:18:17Z","creator_user_login":"ellemedit"}
{"number":27156,"comment_id":"1692572011","body":"@acdlite could you look this? I'm not sure this is bug or not. If this is bug, could you suggest correct patch direction to make PR?","updated_at":"2023-08-25T00:10:27Z","created_at":"2023-08-25T00:10:27Z","creator_user_login":"ellemedit"}
{"number":27085,"comment_id":"1630468603","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...68024af3fad6f0a51b964f53ce50b74c9bdd5bfc\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/68024af3fad6f0a51b964f53ce50b74c9bdd5bfc/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/68024af3fad6f0a51b964f53ce50b74c9bdd5bfc/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/68024af3fad6f0a51b964f53ce50b74c9bdd5bfc/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/68024af3fad6f0a51b964f53ce50b74c9bdd5bfc/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 68024af3fad6f0a51b964f53ce50b74c9bdd5bfc\n</p>\n","updated_at":"2023-07-11T09:21:58Z","created_at":"2023-07-11T09:21:58Z","creator_user_login":"react-sizebot"}
{"number":27084,"comment_id":"1630303608","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...d488a92c35e248ffb7113bfae64418eca1af797a\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d488a92c35e248ffb7113bfae64418eca1af797a/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d488a92c35e248ffb7113bfae64418eca1af797a/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/d488a92c35e248ffb7113bfae64418eca1af797a/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/d488a92c35e248ffb7113bfae64418eca1af797a/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against d488a92c35e248ffb7113bfae64418eca1af797a\n</p>\n","updated_at":"2023-07-11T07:34:27Z","created_at":"2023-07-11T07:34:27Z","creator_user_login":"react-sizebot"}
{"number":27108,"comment_id":"1661946979","body":"First I would say that this is not a React issue, but eventually a TypeScript one. Even so, let's first address the issues with the code above: why doing a cast? We can declare `myVar` as of that type from the beginning. If fields are missing, use `partial`. Then make sure to have consistent definition of what is required or not (can be undefined). The code above is not consistent at `myVar?...`. And last but not least, when you say error, it could be something from ESLint or from dependency plugin in vscode which is buggy (DO NOT ALWAYS follow its rules).","updated_at":"2023-08-02T10:20:22Z","created_at":"2023-08-02T10:19:51Z","creator_user_login":"ppaul"}
{"number":27110,"comment_id":"1651813183","body":"Note that this user opened very similar-looking issues on over 30 of the most common github repositories, likely just to promote their service.\r\n\r\nThey don't care that the claimed issues are all dev dependencies.\r\n\r\n![history](https://user-images.githubusercontent.com/1398469/255848277-f4783098-f69e-40ae-807b-5b0c11addbaf.png)\r\n![profile](https://user-images.githubusercontent.com/1398469/255848334-0415ca21-2655-40dc-b732-62175742d811.png)\r\n\r\n","updated_at":"2023-07-26T13:30:37Z","created_at":"2023-07-26T13:30:37Z","creator_user_login":"bdurrer"}
{"number":27161,"comment_id":"1655344532","body":"Haha, I think this is an expected result, because its name is \"UNSAFE,\" isn't it ? And there is some information from the new [doc](https://react.dev/reference/react/Component#unsafe_componentwillreceiveprops) of React.js  may be used for you . And it  is explicitly stated not to use in new projects  \r\n<img width=\"1045\" alt=\"image\" src=\"https://github.com/facebook/react/assets/68573559/9ce22998-82b7-43c9-8a2f-234484201373\">\r\n","updated_at":"2023-07-28T09:19:18Z","created_at":"2023-07-28T09:11:53Z","creator_user_login":"YqxLzx"}
{"number":27161,"comment_id":"1655839327","body":"> Haha, I think this is an expected result, because its name is \"UNSAFE,\" isn't it ? And there is some information from the new [doc](https://react.dev/reference/react/Component#unsafe_componentwillreceiveprops) of React.js may be used for you . And it is explicitly stated not to use in new projects\r\n\r\nFor new projects, this isn't a problem. Unfortunately for a mature codebase with tens of thousands of lines of code, it is not trivial to perform the necessary migration.\r\n\r\nThis isn't even just a matter of upgrading an existing codebase - all React dependencies in the codebase that use `componentWillReceiveProps` under the hood will have to be identified and upgraded, potentially involving changes in API. It is not practical to do that while maintaining an operational product.\r\n\r\n","updated_at":"2023-07-28T14:57:58Z","created_at":"2023-07-28T14:57:35Z","creator_user_login":"bengoh-retool"}
{"number":27089,"comment_id":"1632741888","body":"Looks like this might be a Safari issue https://bugs.webkit.org/show_bug.cgi?id=252413\r\n","updated_at":"2023-07-12T15:20:53Z","created_at":"2023-07-12T15:20:53Z","creator_user_login":"josephearl"}
{"number":27089,"comment_id":"1693913991","body":"Any solution for this? I ran into the same problem and the use of suspense is essential for my use case.","updated_at":"2023-08-25T20:49:13Z","created_at":"2023-08-25T20:49:13Z","creator_user_login":"dfiedlerx"}
{"number":27092,"comment_id":"1631081956","body":"Made a PR that fixes this issue - https://github.com/facebook/react/pull/27093","updated_at":"2023-07-11T15:55:13Z","created_at":"2023-07-11T15:55:13Z","creator_user_login":"SF97"}
{"number":27068,"comment_id":"1628502740","body":"@PanagiotisDrakatos \r\nyou import {HashBundle} from '../HashBundle' but never use in Test2","updated_at":"2023-07-10T08:37:05Z","created_at":"2023-07-10T08:37:05Z","creator_user_login":"RandeepSingh72"}
{"number":27068,"comment_id":"1628508793","body":"@RandeepSingh72 thats correct because i used this command `browserify src/HashFunction.js --save utf-8-validate --standalone mybundle > src/HashBundle.js` which means that i can use the mybundle constructor  from HashBundle.js","updated_at":"2023-07-10T08:41:23Z","created_at":"2023-07-10T08:41:23Z","creator_user_login":"PanagiotisDrakatos"}
{"number":27022,"comment_id":"1613615172","body":"Hi , can I work on this issue?","updated_at":"2023-06-29T18:34:28Z","created_at":"2023-06-29T18:34:28Z","creator_user_login":"martinyis"}
{"number":27022,"comment_id":"1619812403","body":"> \r\nof course\r\n","updated_at":"2023-07-04T08:45:26Z","created_at":"2023-07-04T08:45:26Z","creator_user_login":"noemiliva"}
{"number":27022,"comment_id":"1636062076","body":"I fix it. it was a problem with useNavigate(). Move it into the useEffect hook and everything will work out.","updated_at":"2023-07-14T15:59:28Z","created_at":"2023-07-14T15:59:28Z","creator_user_login":"noemiliva"}
{"number":27074,"comment_id":"1627804439","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...7c7f7cc0213eb94ae152954245d9bb7d6ca17c03\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7c7f7cc0213eb94ae152954245d9bb7d6ca17c03/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7c7f7cc0213eb94ae152954245d9bb7d6ca17c03/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/7c7f7cc0213eb94ae152954245d9bb7d6ca17c03/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/7c7f7cc0213eb94ae152954245d9bb7d6ca17c03/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 7c7f7cc0213eb94ae152954245d9bb7d6ca17c03\n</p>\n","updated_at":"2023-07-09T19:29:58Z","created_at":"2023-07-09T19:29:58Z","creator_user_login":"react-sizebot"}
{"number":27091,"comment_id":"1630661009","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...3d3e2e1ff2fccb9dd65a9985cbb1cf824ab8dd83\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/3d3e2e1ff2fccb9dd65a9985cbb1cf824ab8dd83/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/3d3e2e1ff2fccb9dd65a9985cbb1cf824ab8dd83/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/3d3e2e1ff2fccb9dd65a9985cbb1cf824ab8dd83/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/3d3e2e1ff2fccb9dd65a9985cbb1cf824ab8dd83/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 3d3e2e1ff2fccb9dd65a9985cbb1cf824ab8dd83\n</p>\n","updated_at":"2023-07-11T11:35:00Z","created_at":"2023-07-11T11:35:00Z","creator_user_login":"react-sizebot"}
{"number":27078,"comment_id":"1630158374","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...83bd8c25a6d3f22bca9041c01e0e2eed18a15f83\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/83bd8c25a6d3f22bca9041c01e0e2eed18a15f83/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/83bd8c25a6d3f22bca9041c01e0e2eed18a15f83/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/83bd8c25a6d3f22bca9041c01e0e2eed18a15f83/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/83bd8c25a6d3f22bca9041c01e0e2eed18a15f83/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 83bd8c25a6d3f22bca9041c01e0e2eed18a15f83\n</p>\n","updated_at":"2023-07-11T05:26:47Z","created_at":"2023-07-11T05:26:47Z","creator_user_login":"react-sizebot"}
{"number":27079,"comment_id":"1630159171","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...5baf16332602f9848c6a6e411d667961d130eb9d\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5baf16332602f9848c6a6e411d667961d130eb9d/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5baf16332602f9848c6a6e411d667961d130eb9d/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/5baf16332602f9848c6a6e411d667961d130eb9d/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/5baf16332602f9848c6a6e411d667961d130eb9d/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 5baf16332602f9848c6a6e411d667961d130eb9d\n</p>\n","updated_at":"2023-07-11T05:27:48Z","created_at":"2023-07-11T05:27:48Z","creator_user_login":"react-sizebot"}
{"number":27071,"comment_id":"1627395082","body":"Yeah, it would look nice to align them to the center on smartphones!","updated_at":"2023-07-08T16:30:33Z","created_at":"2023-07-08T16:30:33Z","creator_user_login":"bharathkalyans"}
{"number":27071,"comment_id":"1627629892","body":"I think it's not necessary. and it's alright there.","updated_at":"2023-07-09T07:13:52Z","created_at":"2023-07-09T07:13:52Z","creator_user_login":"preetlakra"}
{"number":27071,"comment_id":"1663858704","body":"https://github.com/reactjs/react.dev\r\n\r\nThis is the best repo for this kind of feedback, maybe you can just PR directly there.\r\n\r\nHere is the repo for React runtime.","updated_at":"2023-08-03T12:03:00Z","created_at":"2023-08-03T12:03:00Z","creator_user_login":"JSerZANP"}
{"number":27081,"comment_id":"1630302973","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...d22e8c2c1a5f583df32e9c9effff605896fc39c7\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d22e8c2c1a5f583df32e9c9effff605896fc39c7/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d22e8c2c1a5f583df32e9c9effff605896fc39c7/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/d22e8c2c1a5f583df32e9c9effff605896fc39c7/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/d22e8c2c1a5f583df32e9c9effff605896fc39c7/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against d22e8c2c1a5f583df32e9c9effff605896fc39c7\n</p>\n","updated_at":"2023-07-11T07:33:59Z","created_at":"2023-07-11T07:33:59Z","creator_user_login":"react-sizebot"}
{"number":27087,"comment_id":"1630465765","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...9b477710dfb97ec824c4a945561638d7b7032c46\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/9b477710dfb97ec824c4a945561638d7b7032c46/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/9b477710dfb97ec824c4a945561638d7b7032c46/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/9b477710dfb97ec824c4a945561638d7b7032c46/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/9b477710dfb97ec824c4a945561638d7b7032c46/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 9b477710dfb97ec824c4a945561638d7b7032c46\n</p>\n","updated_at":"2023-07-11T09:19:59Z","created_at":"2023-07-11T09:19:59Z","creator_user_login":"react-sizebot"}
{"number":27043,"comment_id":"1618443169","body":"I'm trying to add a minimum reproduce code but I can't","updated_at":"2023-07-03T14:28:13Z","created_at":"2023-07-03T14:28:13Z","creator_user_login":"himself65"}
{"number":27043,"comment_id":"1618472377","body":"Related: https://github.com/toeverything/AFFiNE/pull/2989","updated_at":"2023-07-03T14:36:55Z","created_at":"2023-07-03T14:36:55Z","creator_user_login":"himself65"}
{"number":27043,"comment_id":"1618484462","body":"\r\nhttps://github.com/facebook/react/assets/14026360/70ee8c1c-eb9a-469a-aee5-3a2245f3f5c2\r\n\r\n","updated_at":"2023-07-03T14:40:33Z","created_at":"2023-07-03T14:40:33Z","creator_user_login":"himself65"}
{"number":27062,"comment_id":"1624088767","body":"Hi @1proprogrammerchant! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327062). Thanks!","updated_at":"2023-07-06T17:49:38Z","created_at":"2023-07-06T17:49:38Z","creator_user_login":"facebook-github-bot"}
{"number":27080,"comment_id":"1630303363","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...699ead206af8ca2b15ff5c5ac432284c85a9d853\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/699ead206af8ca2b15ff5c5ac432284c85a9d853/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/699ead206af8ca2b15ff5c5ac432284c85a9d853/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/699ead206af8ca2b15ff5c5ac432284c85a9d853/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/699ead206af8ca2b15ff5c5ac432284c85a9d853/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 699ead206af8ca2b15ff5c5ac432284c85a9d853\n</p>\n","updated_at":"2023-07-11T07:34:17Z","created_at":"2023-07-11T07:34:17Z","creator_user_login":"react-sizebot"}
{"number":27077,"comment_id":"1630094070","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...9be0a786e1acb11fe266c66ed4cdedcde8d4028b\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/9be0a786e1acb11fe266c66ed4cdedcde8d4028b/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/9be0a786e1acb11fe266c66ed4cdedcde8d4028b/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/9be0a786e1acb11fe266c66ed4cdedcde8d4028b/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/9be0a786e1acb11fe266c66ed4cdedcde8d4028b/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 9be0a786e1acb11fe266c66ed4cdedcde8d4028b\n</p>\n","updated_at":"2023-07-11T04:26:41Z","created_at":"2023-07-11T04:26:41Z","creator_user_login":"react-sizebot"}
{"number":27065,"comment_id":"1637345307","body":"an solution according to me .\r\n","updated_at":"2023-07-17T04:04:34Z","created_at":"2023-07-17T04:04:34Z","creator_user_login":"xonx4l"}
{"number":27082,"comment_id":"1630302607","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...59ea72ecb033f4b2a1bf427e98e6be298cee25ed\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/59ea72ecb033f4b2a1bf427e98e6be298cee25ed/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/59ea72ecb033f4b2a1bf427e98e6be298cee25ed/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/59ea72ecb033f4b2a1bf427e98e6be298cee25ed/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/59ea72ecb033f4b2a1bf427e98e6be298cee25ed/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 59ea72ecb033f4b2a1bf427e98e6be298cee25ed\n</p>\n","updated_at":"2023-07-11T07:33:42Z","created_at":"2023-07-11T07:33:42Z","creator_user_login":"react-sizebot"}
{"number":27052,"comment_id":"1619995084","body":"It appears that there is an issue with the type definitions. If we examine line 953 of the react/index.d.ts file in the DefinitelyTyped repository (https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/react/index.d.ts), we can observe that the initializer argument is not optional. Curiously, on line 969, the initializer is marked as optional, even though both definitions share the same description: \"overload where dispatch could accept 0 arguments.\"\r\n\r\nSee: https://github.com/DefinitelyTyped/DefinitelyTyped/pull/47322","updated_at":"2023-07-04T10:38:11Z","created_at":"2023-07-04T10:35:18Z","creator_user_login":"TolgaYigit"}
{"number":27024,"comment_id":"1612722742","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 2153a29661e5998604225f81d93c8a20a1934adf...7e23144d92e9e95ae1a0eaff44a4ce750c84ba06\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7e23144d92e9e95ae1a0eaff44a4ce750c84ba06/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=2153a29661e5998604225f81d93c8a20a1934adf) | **+0.09%** | 164.32 kB | 164.46 kB | +0.11% | 51.75 kB | 51.80 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7e23144d92e9e95ae1a0eaff44a4ce750c84ba06/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=2153a29661e5998604225f81d93c8a20a1934adf) | **+0.08%** | 171.73 kB | 171.87 kB | +0.11% | 53.97 kB | 54.02 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/7e23144d92e9e95ae1a0eaff44a4ce750c84ba06/files/facebook-www/ReactDOM-prod.classic.js?compare=2153a29661e5998604225f81d93c8a20a1934adf) | **+0.06%** | 568.20 kB | 568.55 kB | +0.09% | 100.14 kB | 100.23 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/7e23144d92e9e95ae1a0eaff44a4ce750c84ba06/files/facebook-www/ReactDOM-prod.modern.js?compare=2153a29661e5998604225f81d93c8a20a1934adf) | **+0.06%** | 552.00 kB | 552.35 kB | +0.11% | 97.29 kB | 97.40 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 7e23144d92e9e95ae1a0eaff44a4ce750c84ba06\n</p>\n","updated_at":"2023-06-29T09:42:37Z","created_at":"2023-06-29T09:42:37Z","creator_user_login":"react-sizebot"}
{"number":27025,"comment_id":"1625378254","body":"Hey, is this issue open i want to work on this issue, can you assign me this issue","updated_at":"2023-07-07T12:57:12Z","created_at":"2023-07-07T12:57:12Z","creator_user_login":"PrathameshBhangre"}
{"number":27025,"comment_id":"1625402047","body":"> Hey, is this issue open i want to work on this issue, can you assign me this issue\r\n\r\nHey, feel free to work on this and to open a PR if you found a fix","updated_at":"2023-07-07T13:16:23Z","created_at":"2023-07-07T13:16:23Z","creator_user_login":"hoxyq"}
{"number":27012,"comment_id":"1608619607","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 6aacd3fa1567ed35c7ae4a69627ec1a1543df760...0a7124d0a98b48a8ce4305b1ba7c2047d1d98b3b\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0a7124d0a98b48a8ce4305b1ba7c2047d1d98b3b/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=6aacd3fa1567ed35c7ae4a69627ec1a1543df760) | **=** | 164.56 kB | 164.56 kB | = | 51.83 kB | 51.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0a7124d0a98b48a8ce4305b1ba7c2047d1d98b3b/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=6aacd3fa1567ed35c7ae4a69627ec1a1543df760) | **=** | 171.97 kB | 171.97 kB | = | 54.06 kB | 54.06 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/0a7124d0a98b48a8ce4305b1ba7c2047d1d98b3b/files/facebook-www/ReactDOM-prod.classic.js?compare=6aacd3fa1567ed35c7ae4a69627ec1a1543df760) | **=** | 571.74 kB | 571.74 kB | = | 100.83 kB | 100.83 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/0a7124d0a98b48a8ce4305b1ba7c2047d1d98b3b/files/facebook-www/ReactDOM-prod.modern.js?compare=6aacd3fa1567ed35c7ae4a69627ec1a1543df760) | **=** | 555.52 kB | 555.52 kB | = | 98.02 kB | 98.02 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 0a7124d0a98b48a8ce4305b1ba7c2047d1d98b3b\n</p>\n","updated_at":"2023-06-27T02:28:52Z","created_at":"2023-06-27T02:28:52Z","creator_user_login":"react-sizebot"}
{"number":27021,"comment_id":"1634174326","body":"Hi @chamerling , I'd like to check this, is this issue still open ?","updated_at":"2023-07-13T12:40:44Z","created_at":"2023-07-13T12:40:44Z","creator_user_login":"naveen8801"}
{"number":26992,"comment_id":"1603042077","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: c8deb5db660f3f6eeca30d29b4bd48d9e82b3792...0ab48286ea49084ba791b8c5c6bdb17cbb78e6e5\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0ab48286ea49084ba791b8c5c6bdb17cbb78e6e5/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=c8deb5db660f3f6eeca30d29b4bd48d9e82b3792) | **=** | 164.56 kB | 164.56 kB | = | 51.83 kB | 51.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0ab48286ea49084ba791b8c5c6bdb17cbb78e6e5/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=c8deb5db660f3f6eeca30d29b4bd48d9e82b3792) | **=** | 171.97 kB | 171.97 kB | = | 54.06 kB | 54.06 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/0ab48286ea49084ba791b8c5c6bdb17cbb78e6e5/files/facebook-www/ReactDOM-prod.classic.js?compare=c8deb5db660f3f6eeca30d29b4bd48d9e82b3792) | **=** | 571.74 kB | 571.74 kB | = | 100.83 kB | 100.83 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/0ab48286ea49084ba791b8c5c6bdb17cbb78e6e5/files/facebook-www/ReactDOM-prod.modern.js?compare=c8deb5db660f3f6eeca30d29b4bd48d9e82b3792) | **=** | 555.52 kB | 555.52 kB | = | 98.02 kB | 98.02 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 0ab48286ea49084ba791b8c5c6bdb17cbb78e6e5\n</p>\n","updated_at":"2023-06-22T23:07:43Z","created_at":"2023-06-22T17:20:01Z","creator_user_login":"react-sizebot"}
{"number":27326,"comment_id":"1703655102","body":"# Why it works how it does\r\n\r\nThis isn't actually a bug with the ternary operator, but rather how invoking functions works in React. When you create function such as \"loginForm()\" and \"noteForm()\" they are evaluated outside of Reacts context and whatever was returned is inserted into the JSX, without Reacts knowledge. Your functions in this case both return a `Togglable` component, which is stateful. Since the decision making of which component to render happened outside of React - it's almost as if you did the following\r\n\r\n```jsx\r\n<div>\r\n      <h1>Notes</h1>\r\n\r\n      {user === null ? loginForm() : noteForm()}\r\n\r\n    <Togglable buttonLabel={user === null ? \"Show Login Form\" : \"Show Note Form\"}>\r\n        {user === null ? <LoginForm {/* Whatever Props */} /> : <NoteForm {/* Whatever Props */} />}\r\n    </Togglable>\r\n    </div>\r\n```\r\n\r\n# Solution 1\r\n\r\nDon't use functions to return JSX elements inside of a Render - create a component. \r\n\r\n```jsx\r\n// imports\r\n\r\nconst App = () => {\r\n  // Other Stuff\r\n\r\n  const TLoginForm = () => {\r\n    return (\r\n      <Togglable buttonLabel=\"Show Login Form\">\r\n        <LoginForm\r\n          username={username}\r\n          handleUsernameChange={({ target }) => setUsername(target.value)}\r\n          handleSubmit={(event) => {\r\n            event.preventDefault();\r\n            setUser(username);\r\n          }}\r\n        />\r\n      </Togglable>\r\n    );\r\n  };\r\n\r\n  const TNoteForm = () => {\r\n    return (\r\n      <Togglable buttonLabel=\"Show Note Form\">\r\n        <NoteForm />\r\n      </Togglable>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n\r\n      {user === null ? <TLoginForm /> : <TNoteForm/>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n```\r\n\r\nYou can see this solution here https://codesandbox.io/p/github/tajpuriya27/react-bug/csb-fhvdw8/draft/wizardly-breeze\r\n\r\n# Solution 2 (Easier)\r\n\r\nAn easier solution is to simply add the `key` prop to each of your functions - React will read this and know that these are different instances of the component - and the state will no longer be shared. You can see this below\r\n\r\n```jsx\r\nconst loginForm = () => {\r\n    return (\r\n      <Togglable buttonLabel=\"Show Login Form\" key=\"login\">\r\n        <LoginForm\r\n          username={username}\r\n          handleUsernameChange={({ target }) => setUsername(target.value)}\r\n          handleSubmit={(event) => {\r\n            event.preventDefault();\r\n            setUser(username);\r\n          }}\r\n        />\r\n      </Togglable>\r\n    );\r\n  };\r\n\r\n  const noteForm = () => {\r\n    return (\r\n      <Togglable buttonLabel=\"Show Note Form\" key=\"note\">\r\n        <NoteForm />\r\n      </Togglable>\r\n    );\r\n  };\r\n```\r\n\r\nlink here https://codesandbox.io/p/github/tajpuriya27/react-bug/csb-j6nkk2/draft/brave-feather\r\n\r\n# Why does && work?\r\n\r\nTo understand why && works you have to understand how React handles &&. If the && condition isn't met it doesn't just \"not do anything\". The value is evaluated to `false` - and false doesn't get mounted in React. So by having two && statements you code switches between\r\n\r\n```jsx\r\n[\r\n  // other components\r\n  <Toggleable label=\"Show Login Form\">...</Toggleable>,\r\n  false,\r\n    // other components\r\n]\r\n```\r\n\r\nand\r\n\r\n```jsx\r\n[\r\n  // other components\r\n  false,\r\n  <Toggleable label=\"Show Note Form\">...</Toggleable>,\r\n   // other components\r\n]\r\n```\r\n\r\nNotice how the order in the array changes - which is enough for React to internally pick up it is a different instance of Toggleable.","updated_at":"2023-09-02T02:37:14Z","created_at":"2023-09-02T02:37:14Z","creator_user_login":"VladyslavKochetkov"}
{"number":27324,"comment_id":"1702871276","body":"Hi @misaka42! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327324). Thanks!","updated_at":"2023-09-01T14:45:27Z","created_at":"2023-09-01T14:45:27Z","creator_user_login":"facebook-github-bot"}
{"number":27324,"comment_id":"1702878297","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 7022e8d6a3222c97d287dfa0f2361acc8a30683a...f3917d8202270844462b537e466fa9cae2ecdf40\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/f3917d8202270844462b537e466fa9cae2ecdf40/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **=** | 165.63 kB | 165.63 kB | = | 51.88 kB | 51.88 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/f3917d8202270844462b537e466fa9cae2ecdf40/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **=** | 174.70 kB | 174.70 kB | = | 54.61 kB | 54.61 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/f3917d8202270844462b537e466fa9cae2ecdf40/files/facebook-www/ReactDOM-prod.classic.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **=** | 570.44 kB | 570.44 kB | = | 100.45 kB | 100.45 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/f3917d8202270844462b537e466fa9cae2ecdf40/files/facebook-www/ReactDOM-prod.modern.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **=** | 554.21 kB | 554.21 kB | = | 97.61 kB | 97.61 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against f3917d8202270844462b537e466fa9cae2ecdf40\n</p>\n","updated_at":"2023-09-01T14:50:20Z","created_at":"2023-09-01T14:50:20Z","creator_user_login":"react-sizebot"}
{"number":27276,"comment_id":"1691088794","body":"Hi @ulivz! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327276). Thanks!","updated_at":"2023-08-24T06:37:58Z","created_at":"2023-08-24T06:37:58Z","creator_user_login":"facebook-github-bot"}
{"number":27276,"comment_id":"1691094097","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: b4cdd3e8922713f8c9817b004a0dc51be47bc5df...925ab47bc95213bd803a5fb04ca29536de3f1972\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/925ab47bc95213bd803a5fb04ca29536de3f1972/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=b4cdd3e8922713f8c9817b004a0dc51be47bc5df) | **=** | 165.59 kB | 165.59 kB | = | 51.88 kB | 51.88 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/925ab47bc95213bd803a5fb04ca29536de3f1972/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=b4cdd3e8922713f8c9817b004a0dc51be47bc5df) | **=** | 173.43 kB | 173.43 kB | = | 54.24 kB | 54.25 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/925ab47bc95213bd803a5fb04ca29536de3f1972/files/facebook-www/ReactDOM-prod.classic.js?compare=b4cdd3e8922713f8c9817b004a0dc51be47bc5df) | **=** | 569.92 kB | 569.92 kB | = | 100.38 kB | 100.38 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/925ab47bc95213bd803a5fb04ca29536de3f1972/files/facebook-www/ReactDOM-prod.modern.js?compare=b4cdd3e8922713f8c9817b004a0dc51be47bc5df) | **=** | 553.72 kB | 553.72 kB | = | 97.54 kB | 97.54 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 925ab47bc95213bd803a5fb04ca29536de3f1972\n</p>\n","updated_at":"2023-08-24T06:42:59Z","created_at":"2023-08-24T06:42:59Z","creator_user_login":"react-sizebot"}
{"number":27272,"comment_id":"1688845235","body":"Hi @gabemanfroi! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327272). Thanks!","updated_at":"2023-08-22T20:01:34Z","created_at":"2023-08-22T20:01:34Z","creator_user_login":"facebook-github-bot"}
{"number":27272,"comment_id":"1688850718","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 856dc5e43352454b1d06c13e233d565ceda77e61...30512e59bef9ef8ed7f7d96345a55577d0e70956\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/30512e59bef9ef8ed7f7d96345a55577d0e70956/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=856dc5e43352454b1d06c13e233d565ceda77e61) | **+0.13%** | 165.59 kB | 165.81 kB | +0.11% | 51.88 kB | 51.94 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/30512e59bef9ef8ed7f7d96345a55577d0e70956/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=856dc5e43352454b1d06c13e233d565ceda77e61) | **+0.13%** | 173.15 kB | 173.37 kB | +0.10% | 54.20 kB | 54.26 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/30512e59bef9ef8ed7f7d96345a55577d0e70956/files/facebook-www/ReactDOM-prod.classic.js?compare=856dc5e43352454b1d06c13e233d565ceda77e61) | **+0.01%** | 569.82 kB | 569.90 kB | +0.03% | 100.37 kB | 100.40 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/30512e59bef9ef8ed7f7d96345a55577d0e70956/files/facebook-www/ReactDOM-prod.modern.js?compare=856dc5e43352454b1d06c13e233d565ceda77e61) | **=** | 553.62 kB | 553.67 kB | = | 97.53 kB | 97.54 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 30512e59bef9ef8ed7f7d96345a55577d0e70956\n</p>\n","updated_at":"2023-08-24T15:06:06Z","created_at":"2023-08-22T20:06:14Z","creator_user_login":"react-sizebot"}
{"number":27214,"comment_id":"1675668121","body":"**### To Fix this problem use**\r\n\r\n`key={Math.random()}`","updated_at":"2023-08-12T03:59:31Z","created_at":"2023-08-12T03:59:31Z","creator_user_login":"rumon5h"}
{"number":27214,"comment_id":"1676891718","body":"Thanks rumon5h, but a uuid might be safer? But if something (relatively) random is good enough, why doesn't React just do that automatically? In the meantime, it would be good to have the keys visible in React Programmer Tools.","updated_at":"2023-08-14T08:18:46Z","created_at":"2023-08-14T08:18:46Z","creator_user_login":"richardoptibrium"}
{"number":27214,"comment_id":"1684903223","body":"\r\n> Hi, Would be really great if you offered the feature of displaying key for components to help us debug when something does not have a unique key.\r\n\r\n\r\nKeys are visible via React's DevTools. Also if the element misses the key, the React DevTools will allow you to inspect the node that doesn't have it.\r\n\r\n![image](https://github.com/facebook/react/assets/77862767/8f451c83-a195-4d70-a06b-689365abeca3)\r\n\r\n\r\n> `key={Math.random()}`\r\n\r\nThis function will be invoked for every re-render meaning that the keys will change with every re-render. Same with uuid that @richardoptibrium mentioned, or generally any function that generates something \"random\" on the fly.\r\n\r\nMy solutions to making keys predictable and persistent across re-renders is to:\r\n- use some sort of ID that doesn't change (ex.: ID of an item from a database),\r\n- make a string-and-index-based key when mapping over elements, like so:\r\n```ts\r\nitems.map((item, idx) => (\r\n  <div key={`item-${idx}`} />\r\n))","updated_at":"2023-08-19T09:26:14Z","created_at":"2023-08-19T09:26:14Z","creator_user_login":"jkazimierczak"}
{"number":27328,"comment_id":"1703690432","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: d23b8b5dbf72cd0a3a1a85e22af19772b32feacd...a8339722bfa4ba450aab74df315ad51b04efb722\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **=** | 165.63 kB | 165.63 kB | = | 51.88 kB | 51.88 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **=** | 174.70 kB | 174.70 kB | = | 54.61 kB | 54.61 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/facebook-www/ReactDOM-prod.classic.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **=** | 570.44 kB | 570.44 kB | = | 100.45 kB | 100.45 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/facebook-www/ReactDOM-prod.modern.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **=** | 554.21 kB | 554.21 kB | = | 97.61 kB | 97.61 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.88%** | 25.32 kB | 25.54 kB | +0.68% | 8.62 kB | 8.68 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.88%** | 25.32 kB | 25.54 kB | +0.68% | 8.62 kB | 8.68 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.87%** | 25.64 kB | 25.87 kB | +0.72% | 8.72 kB | 8.79 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.87%** | 25.64 kB | 25.87 kB | +0.72% | 8.72 kB | 8.79 kB\n| [oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.85%** | 25.50 kB | 25.72 kB | +0.95% | 8.72 kB | 8.81 kB\n| [oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.85%** | 25.50 kB | 25.72 kB | +0.95% | 8.72 kB | 8.81 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.84%** | 26.53 kB | 26.76 kB | +0.69% | 8.92 kB | 8.99 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.84%** | 26.58 kB | 26.81 kB | +0.73% | 9.06 kB | 9.13 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.84%** | 26.58 kB | 26.81 kB | +0.73% | 9.06 kB | 9.13 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.83%** | 26.85 kB | 27.08 kB | +0.73% | 9.02 kB | 9.09 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.83%** | 27.11 kB | 27.33 kB | +0.68% | 9.22 kB | 9.28 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.83%** | 27.11 kB | 27.33 kB | +0.68% | 9.22 kB | 9.28 kB\n| [oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.81%** | 26.72 kB | 26.93 kB | +0.96% | 9.03 kB | 9.11 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.81%** | 27.74 kB | 27.96 kB | +0.69% | 9.34 kB | 9.41 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.79%** | 28.27 kB | 28.49 kB | +0.63% | 9.51 kB | 9.57 kB\n| [oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.35%** | 103.79 kB | 104.15 kB | +0.55% | 24.00 kB | 24.13 kB\n| [oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.35%** | 103.79 kB | 104.15 kB | +0.55% | 24.00 kB | 24.13 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.34%** | 98.15 kB | 98.49 kB | +0.52% | 23.63 kB | 23.75 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.34%** | 98.15 kB | 98.49 kB | +0.52% | 23.63 kB | 23.75 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.34%** | 98.56 kB | 98.90 kB | +0.51% | 23.74 kB | 23.86 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.34%** | 98.56 kB | 98.90 kB | +0.51% | 23.74 kB | 23.86 kB\n| [oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.34%** | 108.89 kB | 109.25 kB | +0.52% | 24.88 kB | 25.01 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.development.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.development.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.33%** | 101.86 kB | 102.20 kB | +0.50% | 24.21 kB | 24.33 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.development.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.development.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.33%** | 101.86 kB | 102.20 kB | +0.50% | 24.21 kB | 24.33 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.33%** | 103.01 kB | 103.35 kB | +0.49% | 24.52 kB | 24.64 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.32%** | 103.42 kB | 103.76 kB | +0.49% | 24.65 kB | 24.77 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.32%** | 103.90 kB | 104.24 kB | +0.49% | 24.82 kB | 24.95 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.32%** | 103.90 kB | 104.24 kB | +0.49% | 24.82 kB | 24.95 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.development.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.development.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.32%** | 106.27 kB | 106.61 kB | +0.51% | 24.97 kB | 25.10 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js](https://react-builds.vercel.app/commits/a8339722bfa4ba450aab74df315ad51b04efb722/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js?compare=d23b8b5dbf72cd0a3a1a85e22af19772b32feacd) | **+0.31%** | 108.32 kB | 108.66 kB | +0.50% | 25.56 kB | 25.69 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against a8339722bfa4ba450aab74df315ad51b04efb722\n</p>\n","updated_at":"2023-09-02T04:32:48Z","created_at":"2023-09-02T04:32:48Z","creator_user_login":"react-sizebot"}
{"number":27292,"comment_id":"1694764959","body":"Hi @flooklnw2499! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327292). Thanks!","updated_at":"2023-08-27T21:22:17Z","created_at":"2023-08-27T21:22:17Z","creator_user_login":"facebook-github-bot"}
{"number":27292,"comment_id":"1694765652","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 98f3f14d2e06fb785103296318204cd154d5d0ed...cac256f6013fa363f4fc68daf9b47793e50ecda2\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/cac256f6013fa363f4fc68daf9b47793e50ecda2/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=98f3f14d2e06fb785103296318204cd154d5d0ed) | **=** | 165.67 kB | 165.67 kB | = | 51.99 kB | 51.99 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/cac256f6013fa363f4fc68daf9b47793e50ecda2/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=98f3f14d2e06fb785103296318204cd154d5d0ed) | **=** | 173.16 kB | 173.16 kB | = | 54.21 kB | 54.21 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/cac256f6013fa363f4fc68daf9b47793e50ecda2/files/facebook-www/ReactDOM-prod.classic.js?compare=98f3f14d2e06fb785103296318204cd154d5d0ed) | **=** | 570.50 kB | 570.50 kB | = | 100.49 kB | 100.49 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/cac256f6013fa363f4fc68daf9b47793e50ecda2/files/facebook-www/ReactDOM-prod.modern.js?compare=98f3f14d2e06fb785103296318204cd154d5d0ed) | **=** | 554.30 kB | 554.30 kB | = | 97.66 kB | 97.66 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against cac256f6013fa363f4fc68daf9b47793e50ecda2\n</p>\n","updated_at":"2023-08-27T21:26:02Z","created_at":"2023-08-27T21:26:02Z","creator_user_login":"react-sizebot"}
{"number":27206,"comment_id":"1670657908","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 3808b01b3a6d116151b5de742866360ed70450c7...59c3063d3cd82dfd088038606c7ddd31e8bf6881\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/59c3063d3cd82dfd088038606c7ddd31e8bf6881/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=3808b01b3a6d116151b5de742866360ed70450c7) | **=** | 165.63 kB | 165.59 kB | = | 51.88 kB | 51.84 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/59c3063d3cd82dfd088038606c7ddd31e8bf6881/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=3808b01b3a6d116151b5de742866360ed70450c7) | **=** | 174.70 kB | 174.67 kB | = | 54.61 kB | 54.57 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/59c3063d3cd82dfd088038606c7ddd31e8bf6881/files/facebook-www/ReactDOM-prod.classic.js?compare=3808b01b3a6d116151b5de742866360ed70450c7) | **=** | 570.44 kB | 570.45 kB | = | 100.45 kB | 100.43 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/59c3063d3cd82dfd088038606c7ddd31e8bf6881/files/facebook-www/ReactDOM-prod.modern.js?compare=3808b01b3a6d116151b5de742866360ed70450c7) | **=** | 554.21 kB | 554.23 kB | = | 97.61 kB | 97.59 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/59c3063d3cd82dfd088038606c7ddd31e8bf6881/files/oss-experimental/react-server/cjs/react-server.development.js?compare=3808b01b3a6d116151b5de742866360ed70450c7) | **=** | 154.42 kB | 153.98 kB | = | 38.71 kB | 38.55 kB\n| [oss-stable-semver/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/59c3063d3cd82dfd088038606c7ddd31e8bf6881/files/oss-stable-semver/react-server/cjs/react-server.development.js?compare=3808b01b3a6d116151b5de742866360ed70450c7) | **=** | 148.43 kB | 147.99 kB | = | 36.97 kB | 36.82 kB\n| [oss-stable/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/59c3063d3cd82dfd088038606c7ddd31e8bf6881/files/oss-stable/react-server/cjs/react-server.development.js?compare=3808b01b3a6d116151b5de742866360ed70450c7) | **=** | 148.43 kB | 147.99 kB | = | 36.97 kB | 36.82 kB\n| [oss-experimental/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/59c3063d3cd82dfd088038606c7ddd31e8bf6881/files/oss-experimental/react-server/cjs/react-server.production.min.js?compare=3808b01b3a6d116151b5de742866360ed70450c7) | **=** | 26.36 kB | 26.28 kB | = | 8.96 kB | 8.91 kB\n| [oss-stable-semver/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/59c3063d3cd82dfd088038606c7ddd31e8bf6881/files/oss-stable-semver/react-server/cjs/react-server.production.min.js?compare=3808b01b3a6d116151b5de742866360ed70450c7) | **=** | 25.52 kB | 25.44 kB | = | 8.67 kB | 8.61 kB\n| [oss-stable/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/59c3063d3cd82dfd088038606c7ddd31e8bf6881/files/oss-stable/react-server/cjs/react-server.production.min.js?compare=3808b01b3a6d116151b5de742866360ed70450c7) | **=** | 25.52 kB | 25.44 kB | = | 8.67 kB | 8.61 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 59c3063d3cd82dfd088038606c7ddd31e8bf6881\n</p>\n","updated_at":"2023-08-31T05:57:56Z","created_at":"2023-08-09T04:58:22Z","creator_user_login":"react-sizebot"}
{"number":27246,"comment_id":"1683641767","body":"Hey! @ahuet67 ,\r\nIt seems you are facing problem while loading the page as it takes longer time in loading css. okay one of the approach is that you can wrapped your component in a `<Suspense>` component. The `fallback` prop of `<Suspense>` specifies what should be rendered while the asynchronous content is loading. Hope this helps.\r\n\r\n `<Suspense fallback={<div>Loading...</div>}>\r\n      <App url={url} context={context} assets={assets} helmet={helmet} />\r\n    </Suspense>`","updated_at":"2023-08-18T09:38:45Z","created_at":"2023-08-18T09:36:55Z","creator_user_login":"vrun1208"}
{"number":27246,"comment_id":"1683677410","body":"Thank you @vrun1208  for you answer.\r\nActually, I already use Suspense/React.lazy at the router level.\r\nLike that : \r\n```javascript\r\nimport { Suspense, lazy } from 'react';\r\nimport { Route, Routes } from 'react-router-dom';\r\n\r\nconst HomepageV2 = lazy(() =>\r\n  import(/* webpackChunkName: \"homepage_v2\" */ '../components/pages/homepage-v2/Homepage'),\r\n);\r\n\r\n<Suspense fallback={<Loader />}>\r\n      <Routes>\r\n        <Route path={PublicRoutes.HOMEPAGE} element={<HomepageV2 />} />\r\n      </Routes>\r\n    </Suspense>\r\n```\r\n\r\nTo be sure, I've tested what you suggested but it doesn't solve my issue.\r\n","updated_at":"2023-08-18T10:03:59Z","created_at":"2023-08-18T10:03:59Z","creator_user_login":"ahuet67"}
{"number":27246,"comment_id":"1690202461","body":"We've found a workaround. We've disabled the chunks for the css. This way, we have only 1 CSS which is loaded before main.js and we don't have transitions anymore.\r\nI was surprised to see that it decreased the loading time of the app. This should be because we do less requests (even if the css file is heavier).\r\n\r\nI keep this issue open because the solution is not ideal. We load more CSS than it is required.\r\n","updated_at":"2023-08-23T15:46:46Z","created_at":"2023-08-23T15:46:20Z","creator_user_login":"ahuet67"}
{"number":27246,"comment_id":"1690457825","body":"Hi @ahuet67, your solution is impressive but as you mentioned there are lots of css files to load. My idea is,\r\n-> You can bundle up you css files into one which reduces the multiple requests, or\r\n-> You can use critical-css which include in the html directly, which ensures the content is styled while the css loads.\r\nYou can get more info about critical css  [here](https://web.dev/extract-critical-css)","updated_at":"2023-08-23T18:42:45Z","created_at":"2023-08-23T18:42:45Z","creator_user_login":"vrun1208"}
{"number":27246,"comment_id":"1694719497","body":"Hi @vrun1208, Thank you so much for sharing this article. After considering various options, I've decided to go with [Penthouse](https://web.dev/extract-critical-css/#penthouse) for optimizing the loading performance of my website. Since I have a significant number of styles to load, I believe that Penthouse's ability to automate the generation of critical CSS will be a more suitable solution for my specific needs.","updated_at":"2023-08-27T17:23:05Z","created_at":"2023-08-27T17:22:27Z","creator_user_login":"Noushad-web"}
{"number":27197,"comment_id":"1666899900","body":"having the same issue with react-server-dom-webpack. Looks like 2 days ago (8/4) a publish was made by @sebmarkbage for a version 0.0.1 which shows up as latest version to npm and only has an empty index.js and a package.json file in it. \r\n`https://www.npmjs.com/package/react-server-dom-webpack?activeTab=code `\r\n\r\nNow I'm getting this error while running build in a nextjs app. This didn't happen before.\r\n\r\n> Warning Babel parse has failed: This experimental syntax requires enabling one of the following parser plugin(s): \"flow\", \"typescript\". (13:7)","updated_at":"2023-08-06T15:41:16Z","created_at":"2023-08-06T15:41:16Z","creator_user_login":"keithbrewer1337"}
{"number":27197,"comment_id":"1667060351","body":"Not sure what the source of that error is specifically, but Next's app router already supports RSCs, so you don't need this package unless you're integrating a supplemental tool (like a test framework or story generator).","updated_at":"2023-08-07T01:39:20Z","created_at":"2023-08-07T01:39:20Z","creator_user_login":"nickmccurdy"}
{"number":27197,"comment_id":"1681593407","body":"I later realized [`react-server-dom-webpack`](https://www.npmjs.com/package/react-server-dom-webpack) has working releases in its experimental and canary channels. If you're using [`react-server-dom-webpack`](https://www.npmjs.com/package/react-server-dom-webpack), install `react-server-dom-webpack@canary`. The issue still remains for [`react-server-dom-esm`](https://www.npmjs.com/package/react-server-dom-esm).","updated_at":"2023-08-17T04:26:52Z","created_at":"2023-08-17T04:26:52Z","creator_user_login":"nickmccurdy"}
{"number":27244,"comment_id":"1683423101","body":"@nandkishorakangire  this error occurs if you are trying to call forEach for an undefined value can you provide the source code or the snippet where you re getting this error\r\n","updated_at":"2023-08-18T06:36:18Z","created_at":"2023-08-18T06:36:00Z","creator_user_login":"tusharrana786"}
{"number":27244,"comment_id":"1695763118","body":"sometimes it's as easy as updating your system. if you are using styled components then see the updated documentation","updated_at":"2023-08-28T14:05:46Z","created_at":"2023-08-28T14:05:46Z","creator_user_login":"Senseijacoby"}
{"number":27244,"comment_id":"1697121845","body":"Thanks for reporting this!\r\n\r\nThis seems like a really rare case, it fails [here](https://github.com/facebook/react/blob/main/packages/react-devtools-extensions/src/backendManager.js#L60-L62). If global hook is not registered yet, it probably means that `installHook` content script was not executed or has failed to execute for some reason.\r\n\r\nWe could add some explicit check before calling `hook.renderers.forEach`, contributions are welcomed.\r\nBut this won't fix the source of the problem, need to figure out why `__REACT_DEVTOOLS_GLOBAL_HOOK__` was not injected.\r\n\r\nAny other logs / reproducible steps that can be shared?","updated_at":"2023-08-29T09:51:59Z","created_at":"2023-08-29T09:51:59Z","creator_user_login":"hoxyq"}
{"number":27193,"comment_id":"1666438944","body":"@Biki-das: We're sorry you've seen this error. ❤️\n\nIt looks like you forgot to specify a valid URL. (This means that we will not be able to reproduce the problem you're reporting.)\n\nPlease help us by providing a link to a CodeSandbox (https://codesandbox.io/s/new), a repository on GitHub, or a minimal code example that reproduces the problem. (Screenshots or videos can also be helpful if they help provide context on how to repro the bug.)\n\nHere are some tips for providing a minimal example: https://stackoverflow.com/help/mcve\n\nIssues without repros are automatically closed but we will re-open if you update with repro info.","updated_at":"2023-08-05T08:23:46Z","created_at":"2023-08-05T08:23:46Z","creator_user_login":"github-actions[bot]"}
{"number":27193,"comment_id":"1667483432","body":"Hey @Biki-das, thanks for reporting this!\r\n\r\nI believe the problem with Windows related to not having build files ready, try running `yarn build-for-devtools` before building extensions.\r\n\r\nAre you interested in investigating what's going wrong for Linux?","updated_at":"2023-08-07T09:07:17Z","created_at":"2023-08-07T09:07:17Z","creator_user_login":"hoxyq"}
{"number":27193,"comment_id":"1667485827","body":"> Reference\r\n\r\n@hoxyq even running build-for-devtools it fails actually in windows ","updated_at":"2023-08-07T09:08:52Z","created_at":"2023-08-07T09:08:52Z","creator_user_login":"Biki-das"}
{"number":27193,"comment_id":"1667554967","body":"> > Reference\r\n> \r\n> @hoxyq even running build-for-devtools it fails actually in windows\r\n\r\nNot good. Are you interested in fixing this, maybe?","updated_at":"2023-08-07T09:55:21Z","created_at":"2023-08-07T09:55:21Z","creator_user_login":"hoxyq"}
{"number":27193,"comment_id":"1667577736","body":"> > > Reference\n> > \n> > @hoxyq even running build-for-devtools it fails actually in windows\n> \n> Not good. Are you interested in fixing this, maybe?\n\nYup let me investigate what's breaking and what can i interpret from it and get back to you! ","updated_at":"2023-08-07T10:10:32Z","created_at":"2023-08-07T10:10:32Z","creator_user_login":"Biki-das"}
{"number":27186,"comment_id":"1665351049","body":"//The error message \"Node 24 was removed before its children\" means that a React component was removed from the DOM before its child components were removed. This can happen if the parent component is removed by code, or if the user navigates away from the page.\r\n\r\n//In your case, the main tag is being removed from the page, which means that the entire React app is being removed. This could be caused by a number of things, such as a bug in your code, a problem with your React configuration, or a problem with your hosting environment.\r\n\r\nTo troubleshoot this issue, you can try the following::::\r\n\r\n* Check your code for any errors that could be causing the main tag to be removed.\r\n* Check your React configuration to make sure that it is set up correctly.\r\n* Check your hosting environment to make sure that it is compatible with React.\r\n\r\nIf you are still unable to resolve the issue, you can try searching the React documentation or Stack Overflow for more information. You can also file an issue on the React GitHub repository.\r\n\r\nHere are some GitHub issues that I found that match your search criteria:\r\n\r\n* https://github.com/facebook/react/issues/23202\r\n* https://github.com/facebook/react/issues/21563\r\n* https://github.com/facebook/react/issues/25884\r\n* https://github.com/facebook/react/issues/24818\r\n","updated_at":"2023-08-04T09:58:23Z","created_at":"2023-08-04T09:58:23Z","creator_user_login":"abhinav-nav"}
{"number":27186,"comment_id":"1674896155","body":"Hey @anmol-fzr, thanks for reporting this issue.\r\n\r\n> main tag is automatically removed in from the page\r\n\r\nWhat do you mean by this?\r\n\r\nCan you please try to provide small reproducible example of this error?","updated_at":"2023-08-11T14:35:47Z","created_at":"2023-08-11T14:35:40Z","creator_user_login":"hoxyq"}
{"number":27240,"comment_id":"1682998213","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: e50531692010bbda2a4627b07c7c810c3770a52a...5949944c1c4c96b111d52f3930cd70d61b48587e\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+0.03%** | 165.67 kB | 165.72 kB | = | 51.99 kB | 51.99 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+0.03%** | 173.16 kB | 173.20 kB | = | 54.21 kB | 54.21 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/facebook-www/ReactDOM-prod.classic.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **=** | 570.50 kB | 570.55 kB | = | 100.49 kB | 100.49 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/facebook-www/ReactDOM-prod.modern.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **=** | 554.30 kB | 554.35 kB | = | 97.66 kB | 97.65 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-stable-semver/react-dom/cjs/react-dom-server-rendering-stub.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+3.53%** | 1.28 kB | 1.32 kB | = | 0.71 kB | 0.71 kB\n| [oss-stable/react-dom/cjs/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-stable/react-dom/cjs/react-dom-server-rendering-stub.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+3.46%** | 1.30 kB | 1.35 kB | = | 0.73 kB | 0.73 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-experimental/react-dom/cjs/react-dom-server-rendering-stub.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+3.16%** | 1.43 kB | 1.47 kB | = | 0.78 kB | 0.78 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-stable-semver/react-dom/umd/react-dom-server-rendering-stub.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+3.03%** | 1.48 kB | 1.53 kB | = | 0.83 kB | 0.83 kB\n| [oss-stable/react-dom/umd/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-stable/react-dom/umd/react-dom-server-rendering-stub.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+2.98%** | 1.51 kB | 1.55 kB | = | 0.85 kB | 0.85 kB\n| [oss-experimental/react-dom/umd/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-experimental/react-dom/umd/react-dom-server-rendering-stub.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+2.73%** | 1.65 kB | 1.70 kB | = | 0.90 kB | 0.90 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable-semver/react-dom/cjs/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-stable-semver/react-dom/cjs/react-dom-server-rendering-stub.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+3.53%** | 1.28 kB | 1.32 kB | = | 0.71 kB | 0.71 kB\n| [oss-stable/react-dom/cjs/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-stable/react-dom/cjs/react-dom-server-rendering-stub.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+3.46%** | 1.30 kB | 1.35 kB | = | 0.73 kB | 0.73 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-experimental/react-dom/cjs/react-dom-server-rendering-stub.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+3.16%** | 1.43 kB | 1.47 kB | = | 0.78 kB | 0.78 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-stable-semver/react-dom/umd/react-dom-server-rendering-stub.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+3.03%** | 1.48 kB | 1.53 kB | = | 0.83 kB | 0.83 kB\n| [oss-stable/react-dom/umd/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-stable/react-dom/umd/react-dom-server-rendering-stub.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+2.98%** | 1.51 kB | 1.55 kB | = | 0.85 kB | 0.85 kB\n| [oss-experimental/react-dom/umd/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-experimental/react-dom/umd/react-dom-server-rendering-stub.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+2.73%** | 1.65 kB | 1.70 kB | = | 0.90 kB | 0.90 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler-reflection.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-experimental/react-reconciler/cjs/react-reconciler-reflection.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+1.68%** | 2.69 kB | 2.73 kB | = | 1.14 kB | 1.14 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler-reflection.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-stable-semver/react-reconciler/cjs/react-reconciler-reflection.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+1.68%** | 2.69 kB | 2.73 kB | = | 1.14 kB | 1.14 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler-reflection.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-stable/react-reconciler/cjs/react-reconciler-reflection.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+1.68%** | 2.69 kB | 2.73 kB | = | 1.14 kB | 1.14 kB\n| [oss-stable-semver/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-stable-semver/react/cjs/react.shared-subset.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+0.57%** | 7.92 kB | 7.96 kB | = | 3.29 kB | 3.28 kB\n| [oss-stable/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-stable/react/cjs/react.shared-subset.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+0.57%** | 7.94 kB | 7.99 kB | = | 3.32 kB | 3.31 kB\n| [oss-experimental/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-experimental/react/cjs/react.shared-subset.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+0.53%** | 8.46 kB | 8.51 kB | = | 3.47 kB | 3.46 kB\n| [oss-stable-semver/react-client/cjs/react-client-flight.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-stable-semver/react-client/cjs/react-client-flight.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+0.49%** | 9.15 kB | 9.19 kB | = | 3.60 kB | 3.60 kB\n| [oss-stable/react-client/cjs/react-client-flight.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-stable/react-client/cjs/react-client-flight.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+0.49%** | 9.15 kB | 9.19 kB | = | 3.60 kB | 3.60 kB\n| [oss-experimental/react-client/cjs/react-client-flight.production.min.js](https://react-builds.vercel.app/commits/5949944c1c4c96b111d52f3930cd70d61b48587e/files/oss-experimental/react-client/cjs/react-client-flight.production.min.js?compare=e50531692010bbda2a4627b07c7c810c3770a52a) | **+0.44%** | 10.34 kB | 10.38 kB | = | 3.94 kB | 3.93 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 5949944c1c4c96b111d52f3930cd70d61b48587e\n</p>\n","updated_at":"2023-08-17T23:04:42Z","created_at":"2023-08-17T21:22:02Z","creator_user_login":"react-sizebot"}
{"number":27231,"comment_id":"1677962715","body":"Hi @lyannel! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327231). Thanks!","updated_at":"2023-08-14T19:48:16Z","created_at":"2023-08-14T19:48:16Z","creator_user_login":"facebook-github-bot"}
{"number":27231,"comment_id":"1677968413","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 0fb5b61ac6951a492242618e4ace6c1826335efc...d59a4cf3159042b51d9e58f477f32d2aea727164\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d59a4cf3159042b51d9e58f477f32d2aea727164/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=0fb5b61ac6951a492242618e4ace6c1826335efc) | **=** | 164.32 kB | 164.32 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d59a4cf3159042b51d9e58f477f32d2aea727164/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=0fb5b61ac6951a492242618e4ace6c1826335efc) | **=** | 171.73 kB | 171.73 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/d59a4cf3159042b51d9e58f477f32d2aea727164/files/facebook-www/ReactDOM-prod.classic.js?compare=0fb5b61ac6951a492242618e4ace6c1826335efc) | **=** | 567.12 kB | 567.12 kB | = | 100.09 kB | 100.09 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/d59a4cf3159042b51d9e58f477f32d2aea727164/files/facebook-www/ReactDOM-prod.modern.js?compare=0fb5b61ac6951a492242618e4ace6c1826335efc) | **=** | 550.92 kB | 550.92 kB | = | 97.25 kB | 97.25 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against d59a4cf3159042b51d9e58f477f32d2aea727164\n</p>\n","updated_at":"2023-08-14T19:53:00Z","created_at":"2023-08-14T19:53:00Z","creator_user_login":"react-sizebot"}
{"number":27170,"comment_id":"1659082528","body":"I can second to the error you've received , prefetchDNS is _indeed_ not found in 'react-dom'\r\n\r\n![image](https://github.com/facebook/react/assets/12787482/1f253035-fd4b-4621-b8fc-b523ac1c3505)\r\n\r\nClosest I've ever come across is `ReactDOM.prefetch(url)`\r\n\r\nHowever I'm not getting the same dns-prefetch tag when using prefetchDNS()\r\n\r\n```\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport function PreloadResources() {\r\n  ReactDOM.prefetchDNS(\"https://www.google.com/\");\r\n\r\n  return null;\r\n}\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <PreloadResources />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n```\r\n\r\nIt's a small component, similar to yours\r\nmaybe its the code that is incorrect?\r\nother devs can take a look\r\n\r\n","updated_at":"2023-07-31T20:25:00Z","created_at":"2023-07-31T20:21:20Z","creator_user_login":"Gauravpadam"}
{"number":27170,"comment_id":"1659160355","body":"@Gauravpadam the difference I saw is that I call my component within the head tag of my site, in your code you are calling it in the body of the page, and it would be cool to see if the react-dom is up to date, as these functions are still very recent","updated_at":"2023-07-31T21:05:44Z","created_at":"2023-07-31T21:05:44Z","creator_user_login":"hmartiins"}
{"number":27170,"comment_id":"1659464194","body":"From what I've seen the types are even implemented in the [ReactDOMTypes](https://github.com/facebook/react/blob/493f72b0a7111b601c16b8ad8bc2649d82c184a0/packages/react-dom/src/shared/ReactDOMTypes.js#L32). But it is not up to date with the @types/react-dom type library, we can check it in [this link](\r\nhttps://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/react-dom/canary.d.ts).\r\n\r\nI can contribute by updating the type library, but I don't know if it's the right way to go..","updated_at":"2023-08-01T02:20:53Z","created_at":"2023-08-01T02:20:53Z","creator_user_login":"hmartiins"}
{"number":27153,"comment_id":"1663917545","body":"I would like to work on this issue.  ","updated_at":"2023-08-03T12:43:47Z","created_at":"2023-08-03T12:43:47Z","creator_user_login":"prabh1234assla"}
{"number":27153,"comment_id":"1664007530","body":"\r\nCreating three components in the same file, with two of them being client-side components and one being a server-side component, is possible with the use of the @react/bridge pragma. This pragma is used to differentiate between client and server components in a single file. However, please note that the @react/bridge pragma is a fictional annotation used for illustrative purposes and is not a standard or built-in feature of React.\r\n\r\nHere's how you can structure your file:\r\n\r\n```\r\n// MyComponent.js\r\n\r\nexport function DialogServer() {\r\n  'use server';\r\n  return (\r\n    // Server-side component\r\n  );\r\n}\r\n\r\nexport function Button() {\r\n  'use client';\r\n  return (\r\n    // Client-side component\r\n  );\r\n}\r\n\r\nexport function Dialog() {\r\n  'use client';\r\n  return (\r\n    // Client-side component\r\n  );\r\n}\r\n\r\n```\r\n\r\nIn this example, DialogServer is intended to be used on the server-side, while Button and Dialog are intended to be used on the client-side. When using server-side rendering, components with the 'use server' pragma will be rendered on the server, and components with the 'use client' pragma will be rendered on the client.\r\n\r\nPlease note that the @react/bridge pragma is not a real feature of React, and you cannot use it directly as shown in the example. Instead, you would need to use a server-side rendering library or framework that supports this kind of component separation for client and server rendering. Examples of such libraries include Next.js for React or Nuxt.js for Vue.js. These frameworks provide ways to create separate client and server entry points for your components.\r\n\r\nIf you intend to create components for server-side rendering, you should consider using a framework or library that provides server-side rendering capabilities. Otherwise, you can structure your components in separate files, with a convention to indicate whether they are intended for server or client use.","updated_at":"2023-08-03T13:41:52Z","created_at":"2023-08-03T13:41:52Z","creator_user_login":"abhi152003"}
{"number":27153,"comment_id":"1664308522","body":"\r\nthis feature would be great, and I would like to discuss this already having it in react by default, it would be something good and optional for anyone who wants to use it, I would like to know if there is such a possibility","updated_at":"2023-08-03T16:44:42Z","created_at":"2023-08-03T16:44:42Z","creator_user_login":"revogabe"}
{"number":27171,"comment_id":"1660956166","body":"\r\nThe error message you are encountering indicates that the function performance.mark is not available or not a function in the environment where the test is running. This issue seems to be related to the upgrade to Node 16, as you suspected, because Node 16 introduced changes to the behavior of the performance object in certain environments.\r\n\r\nThe error is occurring in the React library (react-dom.development.js), which suggests that the issue might be with the testing setup or the testing library you are using (e.g., Jest or Enzyme) rather than the React version itself.\r\n\r\nHere are some steps you can take to troubleshoot and resolve the issue:\r\n\r\nCheck Testing Dependencies Compatibility: Ensure that all your testing dependencies (Jest, Enzyme, etc.) are compatible with Node 16 and React 16. Sometimes, certain testing libraries might have issues with newer Node versions.\r\n\r\nUpdate Testing Libraries: Make sure you have the latest versions of testing libraries installed. Newer versions often contain bug fixes and compatibility improvements.\r\n\r\nCheck Jest Configuration: If you are using Jest as your testing framework, check the Jest configuration file (jest.config.js or jest.config.json) to see if there are any specific settings or transforms that might be affecting the behavior of performance.mark.\r\n\r\nCheck Enzyme Configuration: Similarly, check your Enzyme configuration. Ensure that the Enzyme adapter for React 16 is compatible with the Node 16 environment.\r\n\r\nVerify Babel Configuration: The error might also be related to Babel configuration. Ensure that Babel presets and plugins are up to date and compatible with Node 16.\r\n\r\nCheck Performance Polyfills: Some libraries or polyfills used in your project might affect the behavior of the performance object. Ensure that there are no conflicting polyfills or that they are correctly configured for Node 16.\r\n\r\nReview React-Related Code: Double-check the relevant parts of your React code that use the performance.mark function. Make sure there are no issues with how this function is called or any potential side effects.\r\n\r\nDebugging: If the issue persists, you can try debugging the test execution with Node 16 and see if you can pinpoint the exact location where the error is occurring.\r\n\r\nTemporary Downgrade: As a temporary solution, you might consider downgrading Node back to version 14 or any other version where the tests were passing until the issue with Node 16 is resolved.\r\n\r\nKeep in mind that it's challenging to provide an exact solution without access to the complete codebase and the ability to run the tests directly. If none of the above steps help, it's worth checking the issue you've created on the enzyme GitHub repository (enzymejs/enzyme#2599) regularly to see if there are any updates or solutions from the Enzyme team. Additionally, you can also seek help from the React community and other developers who might have encountered similar issues after upgrading to Node 16.","updated_at":"2023-08-01T19:32:18Z","created_at":"2023-08-01T19:32:18Z","creator_user_login":"Abdullah-Web-D"}
{"number":27009,"comment_id":"1607282002","body":"Hi @bestlyg! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327009). Thanks!","updated_at":"2023-06-26T11:35:19Z","created_at":"2023-06-26T11:35:19Z","creator_user_login":"facebook-github-bot"}
{"number":27009,"comment_id":"1607291272","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 8ec962d825fc948ffda5ab863e639cd4158935ba...7a05aa102ac598183b0e627fe8e6d4bfe4599de2\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7a05aa102ac598183b0e627fe8e6d4bfe4599de2/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=8ec962d825fc948ffda5ab863e639cd4158935ba) | **=** | 164.56 kB | 164.56 kB | = | 51.83 kB | 51.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7a05aa102ac598183b0e627fe8e6d4bfe4599de2/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=8ec962d825fc948ffda5ab863e639cd4158935ba) | **=** | 171.97 kB | 171.97 kB | = | 54.06 kB | 54.06 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/7a05aa102ac598183b0e627fe8e6d4bfe4599de2/files/facebook-www/ReactDOM-prod.classic.js?compare=8ec962d825fc948ffda5ab863e639cd4158935ba) | **=** | 571.74 kB | 571.74 kB | = | 100.83 kB | 100.83 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/7a05aa102ac598183b0e627fe8e6d4bfe4599de2/files/facebook-www/ReactDOM-prod.modern.js?compare=8ec962d825fc948ffda5ab863e639cd4158935ba) | **=** | 555.52 kB | 555.52 kB | = | 98.02 kB | 98.02 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 7a05aa102ac598183b0e627fe8e6d4bfe4599de2\n</p>\n","updated_at":"2023-06-26T11:40:33Z","created_at":"2023-06-26T11:40:33Z","creator_user_login":"react-sizebot"}
{"number":26986,"comment_id":"1601574243","body":"Hi @Basebuild17! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326986). Thanks!","updated_at":"2023-06-21T19:45:49Z","created_at":"2023-06-21T19:45:49Z","creator_user_login":"facebook-github-bot"}
{"number":26986,"comment_id":"1601579735","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 254cbdbd6d851a30bf3b649a6cb7c52786766fa4...4172c69c9e06951b45dd2d3c23ae99132edc349f\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/4172c69c9e06951b45dd2d3c23ae99132edc349f/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=254cbdbd6d851a30bf3b649a6cb7c52786766fa4) | **=** | 164.56 kB | 164.56 kB | = | 51.83 kB | 51.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/4172c69c9e06951b45dd2d3c23ae99132edc349f/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=254cbdbd6d851a30bf3b649a6cb7c52786766fa4) | **=** | 171.97 kB | 171.97 kB | = | 54.06 kB | 54.06 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/4172c69c9e06951b45dd2d3c23ae99132edc349f/files/facebook-www/ReactDOM-prod.classic.js?compare=254cbdbd6d851a30bf3b649a6cb7c52786766fa4) | **=** | 571.74 kB | 571.74 kB | = | 100.83 kB | 100.83 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/4172c69c9e06951b45dd2d3c23ae99132edc349f/files/facebook-www/ReactDOM-prod.modern.js?compare=254cbdbd6d851a30bf3b649a6cb7c52786766fa4) | **=** | 555.52 kB | 555.52 kB | = | 98.02 kB | 98.02 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 4172c69c9e06951b45dd2d3c23ae99132edc349f\n</p>\n","updated_at":"2023-06-21T19:50:58Z","created_at":"2023-06-21T19:50:58Z","creator_user_login":"react-sizebot"}
{"number":26975,"comment_id":"1597133806","body":"Hi @KiranC24! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326975). Thanks!","updated_at":"2023-06-19T12:51:54Z","created_at":"2023-06-19T12:51:54Z","creator_user_login":"facebook-github-bot"}
{"number":26975,"comment_id":"1597141657","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fc929cf4ead35f99c4e9612a95e8a0bb8f5df25d...eb99ab1f03c21c99e45ddcaec9887154d795fcdf\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/eb99ab1f03c21c99e45ddcaec9887154d795fcdf/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fc929cf4ead35f99c4e9612a95e8a0bb8f5df25d) | **=** | 164.56 kB | 164.56 kB | = | 51.83 kB | 51.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/eb99ab1f03c21c99e45ddcaec9887154d795fcdf/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fc929cf4ead35f99c4e9612a95e8a0bb8f5df25d) | **=** | 172.00 kB | 172.00 kB | = | 54.07 kB | 54.07 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/eb99ab1f03c21c99e45ddcaec9887154d795fcdf/files/facebook-www/ReactDOM-prod.classic.js?compare=fc929cf4ead35f99c4e9612a95e8a0bb8f5df25d) | **=** | 571.13 kB | 571.13 kB | = | 100.75 kB | 100.75 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/eb99ab1f03c21c99e45ddcaec9887154d795fcdf/files/facebook-www/ReactDOM-prod.modern.js?compare=fc929cf4ead35f99c4e9612a95e8a0bb8f5df25d) | **=** | 554.91 kB | 554.91 kB | = | 97.93 kB | 97.93 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against eb99ab1f03c21c99e45ddcaec9887154d795fcdf\n</p>\n","updated_at":"2023-06-19T12:56:41Z","created_at":"2023-06-19T12:56:41Z","creator_user_login":"react-sizebot"}
{"number":27003,"comment_id":"1605952400","body":"Hi @zencatalyst! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327003). Thanks!","updated_at":"2023-06-25T08:56:08Z","created_at":"2023-06-25T08:56:08Z","creator_user_login":"facebook-github-bot"}
{"number":27003,"comment_id":"1605954694","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 8ec962d825fc948ffda5ab863e639cd4158935ba...cfdf054da25d35943115ebf7a87176c8a7f0ef0a\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/cfdf054da25d35943115ebf7a87176c8a7f0ef0a/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=8ec962d825fc948ffda5ab863e639cd4158935ba) | **=** | 164.56 kB | 164.56 kB | = | 51.83 kB | 51.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/cfdf054da25d35943115ebf7a87176c8a7f0ef0a/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=8ec962d825fc948ffda5ab863e639cd4158935ba) | **=** | 171.97 kB | 171.97 kB | = | 54.06 kB | 54.06 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/cfdf054da25d35943115ebf7a87176c8a7f0ef0a/files/facebook-www/ReactDOM-prod.classic.js?compare=8ec962d825fc948ffda5ab863e639cd4158935ba) | **=** | 571.74 kB | 571.74 kB | = | 100.83 kB | 100.83 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/cfdf054da25d35943115ebf7a87176c8a7f0ef0a/files/facebook-www/ReactDOM-prod.modern.js?compare=8ec962d825fc948ffda5ab863e639cd4158935ba) | **=** | 555.52 kB | 555.52 kB | = | 98.02 kB | 98.02 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against cfdf054da25d35943115ebf7a87176c8a7f0ef0a\n</p>\n","updated_at":"2023-06-25T09:00:44Z","created_at":"2023-06-25T09:00:44Z","creator_user_login":"react-sizebot"}
{"number":27003,"comment_id":"1605957400","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-06-25T09:06:20Z","created_at":"2023-06-25T09:06:20Z","creator_user_login":"facebook-github-bot"}
{"number":27003,"comment_id":"1607710854","body":"@gnoff Please review this PR.","updated_at":"2023-07-04T05:36:41Z","created_at":"2023-06-26T15:21:26Z","creator_user_login":"zencatalyst"}
{"number":26969,"comment_id":"1596116736","body":"Hi @khairalanam! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326969). Thanks!","updated_at":"2023-06-18T11:55:08Z","created_at":"2023-06-18T11:55:08Z","creator_user_login":"facebook-github-bot"}
{"number":26969,"comment_id":"1596118657","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 613e6f5fca3a7a63d115988d6312beb84d37b4db...b08f46b198c0ee17207b3daee457ab30d97c71f8\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/b08f46b198c0ee17207b3daee457ab30d97c71f8/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 164.56 kB | 164.56 kB | = | 51.83 kB | 51.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/b08f46b198c0ee17207b3daee457ab30d97c71f8/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 172.00 kB | 172.00 kB | = | 54.07 kB | 54.07 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/b08f46b198c0ee17207b3daee457ab30d97c71f8/files/facebook-www/ReactDOM-prod.classic.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 571.13 kB | 571.13 kB | = | 100.75 kB | 100.75 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/b08f46b198c0ee17207b3daee457ab30d97c71f8/files/facebook-www/ReactDOM-prod.modern.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 554.91 kB | 554.91 kB | = | 97.93 kB | 97.93 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against b08f46b198c0ee17207b3daee457ab30d97c71f8\n</p>\n","updated_at":"2023-06-18T11:59:45Z","created_at":"2023-06-18T11:59:45Z","creator_user_login":"react-sizebot"}
{"number":26969,"comment_id":"1596136968","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-06-18T13:06:30Z","created_at":"2023-06-18T13:06:30Z","creator_user_login":"facebook-github-bot"}
{"number":26927,"comment_id":"1587292360","body":"I also tried with the latest React 18.3.0, isn't fixed:\r\n\r\nhttps://codesandbox.io/s/agitated-tharp-gxr7z2","updated_at":"2023-06-12T12:58:03Z","created_at":"2023-06-12T12:58:03Z","creator_user_login":"JohnRDOrazio"}
{"number":26927,"comment_id":"1587339642","body":"Though a hidden input's value can't be changed by the end user, it should however be able to be changed by the app:\r\n\r\n> The [<input>](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input) element's [value](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#value) attribute holds a string that contains the hidden data you want to include when the form is submitted to the server. This specifically can't be edited or seen by the user via the user interface, although you could edit the value via browser developer tools.\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/hidden\r\n\r\nAnd in fact it does still work in a React app, as long as the dom view isn't updated, see this example:\r\nhttps://codesandbox.io/s/dreamy-chaum-ct8czg\r\n\r\nOnly if the dom view is updated, the value is not persisted.\r\n","updated_at":"2023-06-13T13:28:53Z","created_at":"2023-06-12T13:24:24Z","creator_user_login":"JohnRDOrazio"}
{"number":26927,"comment_id":"1587769157","body":"Hello, @JohnRDOrazio the ref local variable persists the data does not see on UI after re-rendering the components via the state variable.\r\nIn the code of code sandbox hidden inputs don't display their values directly on the page, but their values can be accessed programmatically. In this case, the updated values are correctly stored in the hiddenFields ref object, and when we click \"Finalize,\" the finalizeForm function retrieves these values and updates the results state.","updated_at":"2023-06-12T17:34:42Z","created_at":"2023-06-12T17:34:42Z","creator_user_login":"MeenuyD"}
{"number":26927,"comment_id":"1589318592","body":"@MeenuyD I don't believe you have looked closely at the codesandbox examples I provided. The value of the hidden inputs are NOT persisted in the `ref` variable, if the dom view is refreshed.","updated_at":"2023-06-13T13:27:31Z","created_at":"2023-06-13T13:27:31Z","creator_user_login":"JohnRDOrazio"}
{"number":26927,"comment_id":"1603106347","body":"The browser treats the `value` property different for inputs of type `hidden` vs others. If you set the value of a `type=hidden` input, it will not just update the value property but update the DOM attribute and therefore change the `defaultValue`. On re-render, React detects that the `defaultValue` is not up to date and changes it back to the value you provided as `defaultValue`. For other inputs, the browser does not update the DOM attribute, so `defaultValue` will not change.\r\n\r\nAs a workaround you can change the `defaultValue`:\r\n\r\n```tsx\r\ndefaultValue={hiddenFields.current[\"HIDDEN_TYPE_FIELD\"]?.value ?? \"Bob Ross\"}\r\n```\r\n","updated_at":"2023-06-22T18:09:41Z","created_at":"2023-06-22T18:09:41Z","creator_user_login":"rothsandro"}
{"number":26928,"comment_id":"1587647335","body":"## Wait, maybe it's working\r\n\r\nOkaaaaay, so after doing the below, I re-enabled the 4.27.8 extension. I also popped it out of the browser instead of docking. Now it might be working?\r\n\r\n![image](https://github.com/facebook/react/assets/563819/7192d539-4505-4010-93f0-b34eae98062d)\r\n\r\nI am not sure what part of that flow might have fixed it -- perhaps disabling/re-enabling the extension. Strange it didn't work on a fresh install in the VM Chrome though.\r\n\r\n## VM?\r\n\r\nFor additional data, I tried this on a fresh Windows 11 Evaluation VM (Hyper-V) that I sometimes use for labs. Same result!\r\n\r\n![image](https://github.com/facebook/react/assets/563819/0cf825dd-c3d3-4593-86a0-f00a6354f449)\r\n\r\nSo it's not just my machine. Maybe it could be GPU.\r\n\r\nUsing latest AMD Radeon: 22.6.1 on an R9 390.\r\n\r\n![image](https://github.com/facebook/react/assets/563819/83b4ad22-68b0-4014-98e6-b41fcf3ed25d)\r\n\r\n## Older versions?\r\n\r\nI tried loading an unpacked 4.25.0 extension version and same result as well...","updated_at":"2023-06-12T16:22:45Z","created_at":"2023-06-12T16:12:39Z","creator_user_login":"kamranayub"}
{"number":26928,"comment_id":"1596352135","body":"I can confirm this issue; I’ve been observing it on two MacBooks for a few months (or maybe longer).\r\n\r\nThere’s probably something off with the canvas rendering code – if you manage to force some part of the UI to rerender (eg by typing into the Search field), it does render.\r\n\r\n<img width=\"1241\" alt=\"Screenshot 2023-06-19 at 03 25 40\" src=\"https://github.com/facebook/react/assets/2953267/7a80e13f-7e60-42be-8b42-651e2759ca5e\">\r\n","updated_at":"2023-06-19T01:27:00Z","created_at":"2023-06-19T01:27:00Z","creator_user_login":"iamakulov"}
{"number":26901,"comment_id":"1576493540","body":"This seem to be related to #26186 where hooks usage in functions passed to a constructor call is not detected.","updated_at":"2023-06-05T09:59:23Z","created_at":"2023-06-05T09:59:23Z","creator_user_login":"alina-zaieva"}
{"number":26901,"comment_id":"1576503194","body":"Also seem to be intended, based on this test, so would be great if it was possible to configure this 🙂\r\nhttps://github.com/facebook/react/blob/e6fae308e9300ca545003ac147cc7e4e541f561c/packages/eslint-plugin-react-hooks/__tests__/ESLintRulesOfHooks-test.js#LL294C29-L294C29","updated_at":"2023-06-05T10:04:56Z","created_at":"2023-06-05T10:04:56Z","creator_user_login":"alina-zaieva"}
{"number":26901,"comment_id":"1577225604","body":"Hello, I think so which code do you provide the addLogging function itself is a regular function and is not considered a component or hook. It takes a function as an argument and returns a new function. In this case, the arrow function ( ) => {...} is passed as an argument to addLogging, and the resulting function is assigned to createBar3.\r\nAlthough the arrow function itself is not a component or hook, it is executed within the scope of the returned function from addLogging. Inside this returned function, the func argument is executed, which contains the arrow function and uses the useFoo hook. Same for the createBar4.\r\n\r\n","updated_at":"2023-06-05T17:53:44Z","created_at":"2023-06-05T17:53:44Z","creator_user_login":"MeenuyD"}
{"number":26901,"comment_id":"1577469158","body":"The implementation of `addLogging` has no effect on the rule in this case though, you can replace it with any function and the result would be the same - hook calls are not considered to be hooks by the rule. As mentioned above, this seems to be by design based on the unit tests, but to me this looks too relaxed as it can cause easily avoidable errors in hooks usage. ","updated_at":"2023-06-05T21:01:38Z","created_at":"2023-06-05T21:01:38Z","creator_user_login":"alina-zaieva"}
{"number":26910,"comment_id":"1580327802","body":"Hello, I think the issue you're encountering is related to using lazy with a dynamically resolved promise that resolves to { default: Fragment }. However, lazy expects the resolved value to be a class or function component, not an object.\r\nuse dynamic import to load the Fragment component from the react module, and then we wrap it in an object with the default property as { default: module.Fragment }. This ensures that lazy receives a valid component as its resolved value.","updated_at":"2023-06-07T09:47:44Z","created_at":"2023-06-07T09:47:44Z","creator_user_login":"MeenuyD"}
{"number":26910,"comment_id":"1580353152","body":"Firstly `{default: Fragment}` is not the issue. Lazy doesn't care about immediately resolved promises, this pattern works fine with function components or classes.\r\n\r\nThe same issue happens if you default export `Fragment` from a module and then `lazy(() => import(\"./LazyFragment\"))`. See https://github.com/tom-sherman/react-lazy-fragment-bug/commit/95b1567eb00dec364c8271fc7bf5c734c658704f\r\n\r\nSecondly, the expected behaviour is to log an appropriate error from React. Instead it's failing to do so and throwing a random exception.\r\n\r\nWhether a lazily loaded Fragment should work is besides the point, that can be discussed in a separate issue. This bug is about the incorrect error message being displayed.","updated_at":"2023-06-07T10:02:07Z","created_at":"2023-06-07T10:00:07Z","creator_user_login":"tom-sherman"}
{"number":26894,"comment_id":"1574667211","body":"Hi @koyuncuoglum95! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326894). Thanks!","updated_at":"2023-06-03T05:23:02Z","created_at":"2023-06-03T05:23:02Z","creator_user_login":"facebook-github-bot"}
{"number":26894,"comment_id":"1574669556","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: e1ad4aa3615333009d76f947ff05ddeff01039c6...1abdbf0208617c06d27b2ec4327936dbc9ab958d\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/1abdbf0208617c06d27b2ec4327936dbc9ab958d/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=e1ad4aa3615333009d76f947ff05ddeff01039c6) | **=** | 164.23 kB | 164.23 kB | = | 51.73 kB | 51.72 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/1abdbf0208617c06d27b2ec4327936dbc9ab958d/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=e1ad4aa3615333009d76f947ff05ddeff01039c6) | **=** | 171.67 kB | 171.67 kB | = | 53.97 kB | 53.97 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/1abdbf0208617c06d27b2ec4327936dbc9ab958d/files/facebook-www/ReactDOM-prod.classic.js?compare=e1ad4aa3615333009d76f947ff05ddeff01039c6) | **=** | 570.12 kB | 570.12 kB | = | 100.57 kB | 100.57 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/1abdbf0208617c06d27b2ec4327936dbc9ab958d/files/facebook-www/ReactDOM-prod.modern.js?compare=e1ad4aa3615333009d76f947ff05ddeff01039c6) | **=** | 553.90 kB | 553.90 kB | = | 97.75 kB | 97.75 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 1abdbf0208617c06d27b2ec4327936dbc9ab958d\n</p>\n","updated_at":"2023-06-03T05:31:41Z","created_at":"2023-06-03T05:28:18Z","creator_user_login":"react-sizebot"}
{"number":26894,"comment_id":"1574732074","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-06-03T07:06:19Z","created_at":"2023-06-03T07:06:19Z","creator_user_login":"facebook-github-bot"}
{"number":26905,"comment_id":"1577722274","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: e6fae308e9300ca545003ac147cc7e4e541f561c...2ed38d1885d885e3e4161ac2f28dab5006c087f3\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/2ed38d1885d885e3e4161ac2f28dab5006c087f3/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 164.23 kB | 164.23 kB | = | 51.73 kB | 51.73 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/2ed38d1885d885e3e4161ac2f28dab5006c087f3/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 171.67 kB | 171.67 kB | = | 53.97 kB | 53.97 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/2ed38d1885d885e3e4161ac2f28dab5006c087f3/files/facebook-www/ReactDOM-prod.classic.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 570.12 kB | 570.12 kB | = | 100.58 kB | 100.58 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/2ed38d1885d885e3e4161ac2f28dab5006c087f3/files/facebook-www/ReactDOM-prod.modern.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 553.90 kB | 553.90 kB | = | 97.75 kB | 97.75 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/2ed38d1885d885e3e4161ac2f28dab5006c087f3/files/oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **+0.81%** | 26.70 kB | 26.91 kB | +0.29% | 9.22 kB | 9.24 kB\n| [oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/2ed38d1885d885e3e4161ac2f28dab5006c087f3/files/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **+0.81%** | 26.70 kB | 26.91 kB | +0.29% | 9.22 kB | 9.24 kB\n| [oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/2ed38d1885d885e3e4161ac2f28dab5006c087f3/files/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **+0.79%** | 27.40 kB | 27.62 kB | +0.33% | 9.42 kB | 9.45 kB\n| [oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/2ed38d1885d885e3e4161ac2f28dab5006c087f3/files/oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **+0.40%** | 92.56 kB | 92.93 kB | +0.20% | 21.80 kB | 21.84 kB\n| [oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/2ed38d1885d885e3e4161ac2f28dab5006c087f3/files/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **+0.40%** | 92.56 kB | 92.93 kB | +0.20% | 21.80 kB | 21.84 kB\n| [oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/2ed38d1885d885e3e4161ac2f28dab5006c087f3/files/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **+0.40%** | 92.78 kB | 93.15 kB | +0.18% | 21.83 kB | 21.87 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 2ed38d1885d885e3e4161ac2f28dab5006c087f3\n</p>\n","updated_at":"2023-06-06T00:22:09Z","created_at":"2023-06-06T00:22:09Z","creator_user_login":"react-sizebot"}
{"number":26905,"comment_id":"1577883882","body":"This is actually safe if it's a constant module-level variable right? What kind of code has this actually happening in practice?","updated_at":"2023-06-06T04:25:16Z","created_at":"2023-06-06T04:25:16Z","creator_user_login":"sophiebits"}
{"number":26905,"comment_id":"1579771398","body":"> This is actually safe if it's a constant module-level variable right? What kind of code has this actually happening in practice?\r\n\r\nYou are right! I forgot to check the actual APIs creating the hook. I just did an audit and actually most of these patterns are using constant module-level variable. Only a few are getting a hook from a configuration object that I'm not sure if it would be changed in runtime.\r\n\r\nSince almost all of the cases are safe, I will hold off shipping this until there is actually something broken.","updated_at":"2023-06-07T02:27:41Z","created_at":"2023-06-07T02:27:41Z","creator_user_login":"tyao1"}
{"number":26883,"comment_id":"1571250113","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f...349bf12807fd0592678954b685c71fba0f407c86\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **=** | 164.28 kB | 164.28 kB | = | 51.79 kB | 51.79 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **=** | 171.72 kB | 171.72 kB | = | 54.02 kB | 54.03 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/facebook-www/ReactDOM-prod.classic.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **=** | 570.52 kB | 570.52 kB | = | 100.66 kB | 100.66 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/facebook-www/ReactDOM-prod.modern.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **=** | 554.26 kB | 554.26 kB | = | 97.84 kB | 97.84 kB\n| [oss-stable-semver/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-stable-semver/react/cjs/react.production.min.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+2.63%** | 8.30 kB | 8.52 kB | +3.50% | 3.15 kB | 3.26 kB\n| [oss-stable/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-stable/react/cjs/react.production.min.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+2.62%** | 8.33 kB | 8.55 kB | +3.50% | 3.17 kB | 3.28 kB\n| [oss-experimental/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-experimental/react/cjs/react.production.min.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+2.38%** | 9.16 kB | 9.38 kB | +3.31% | 3.42 kB | 3.53 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable-semver/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-stable-semver/react/cjs/react.production.min.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+2.63%** | 8.30 kB | 8.52 kB | +3.50% | 3.15 kB | 3.26 kB\n| [oss-stable/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-stable/react/cjs/react.production.min.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+2.62%** | 8.33 kB | 8.55 kB | +3.50% | 3.17 kB | 3.28 kB\n| [oss-experimental/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-experimental/react/cjs/react.production.min.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+2.38%** | 9.16 kB | 9.38 kB | +3.31% | 3.42 kB | 3.53 kB\n| [oss-stable-semver/react/umd/react.profiling.min.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-stable-semver/react/umd/react.profiling.min.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+1.78%** | 12.18 kB | 12.39 kB | +2.24% | 4.73 kB | 4.84 kB\n| [oss-stable-semver/react/umd/react.production.min.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-stable-semver/react/umd/react.production.min.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+1.78%** | 12.18 kB | 12.40 kB | +2.24% | 4.73 kB | 4.84 kB\n| [oss-stable/react/umd/react.profiling.min.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-stable/react/umd/react.profiling.min.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+1.78%** | 12.20 kB | 12.42 kB | +2.27% | 4.76 kB | 4.86 kB\n| [oss-stable/react/umd/react.production.min.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-stable/react/umd/react.production.min.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+1.78%** | 12.20 kB | 12.42 kB | +2.29% | 4.76 kB | 4.86 kB\n| [oss-experimental/react/umd/react.profiling.min.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-experimental/react/umd/react.profiling.min.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+1.68%** | 12.98 kB | 13.20 kB | +2.23% | 4.98 kB | 5.10 kB\n| [oss-experimental/react/umd/react.production.min.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-experimental/react/umd/react.production.min.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+1.68%** | 12.98 kB | 13.20 kB | +2.25% | 4.98 kB | 5.10 kB\n| [facebook-www/React-prod.modern.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/facebook-www/React-prod.modern.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+1.14%** | 21.30 kB | 21.54 kB | +2.22% | 5.31 kB | 5.42 kB\n| [facebook-react-native/react/cjs/React-prod.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/facebook-react-native/react/cjs/React-prod.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+1.14%** | 21.33 kB | 21.57 kB | +2.21% | 5.35 kB | 5.46 kB\n| [facebook-www/React-prod.classic.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/facebook-www/React-prod.classic.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+1.13%** | 21.60 kB | 21.84 kB | +2.19% | 5.38 kB | 5.50 kB\n| [facebook-react-native/react/cjs/React-profiling.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/facebook-react-native/react/cjs/React-profiling.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+1.12%** | 21.64 kB | 21.89 kB | +2.24% | 5.40 kB | 5.52 kB\n| [facebook-www/React-profiling.modern.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/facebook-www/React-profiling.modern.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+1.11%** | 21.91 kB | 22.15 kB | +2.17% | 5.43 kB | 5.55 kB\n| [facebook-www/React-profiling.classic.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/facebook-www/React-profiling.classic.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+1.09%** | 22.20 kB | 22.44 kB | +2.12% | 5.51 kB | 5.62 kB\n| [oss-stable-semver/react/cjs/react.development.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-stable-semver/react/cjs/react.development.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+0.23%** | 99.40 kB | 99.63 kB | +0.31% | 26.83 kB | 26.91 kB\n| [oss-stable/react/cjs/react.development.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-stable/react/cjs/react.development.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+0.23%** | 99.42 kB | 99.66 kB | +0.32% | 26.86 kB | 26.94 kB\n| [oss-experimental/react/cjs/react.development.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/oss-experimental/react/cjs/react.development.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+0.23%** | 101.58 kB | 101.81 kB | +0.31% | 27.41 kB | 27.49 kB\n| [facebook-react-native/react/cjs/React-dev.js](https://react-builds.vercel.app/commits/349bf12807fd0592678954b685c71fba0f407c86/files/facebook-react-native/react/cjs/React-dev.js?compare=ae31d2ea3c3f9f0a87ff2c6193484d5d8786bc5f) | **+0.20%** | 120.04 kB | 120.29 kB | +0.30% | 31.60 kB | 31.70 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 349bf12807fd0592678954b685c71fba0f407c86\n</p>\n","updated_at":"2023-06-01T02:56:19Z","created_at":"2023-06-01T02:56:19Z","creator_user_login":"react-sizebot"}
{"number":26893,"comment_id":"1573675436","body":"We have a test for Offscreen for this, but not one that uses Suspense (I think). So I just copied this and replaced using Offscreen directly with using Suspense. \r\n\r\nhttps://github.com/facebook/react/blob/62cd5af08e2ac8b1d4691e75252487083cf7a4aa/packages/react-reconciler/src/__tests__/ReactOffscreen-test.js#L251","updated_at":"2023-06-02T12:43:06Z","created_at":"2023-06-02T12:42:35Z","creator_user_login":"rickhanlonii"}
{"number":26893,"comment_id":"1573677537","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 0210f0b082c95f5aec08f356d796c512eab44fc4...b714f5e5e820d31bac0d90e1e91048cfcc7cc762\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/b714f5e5e820d31bac0d90e1e91048cfcc7cc762/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=0210f0b082c95f5aec08f356d796c512eab44fc4) | **=** | 164.23 kB | 164.23 kB | = | 51.77 kB | 51.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/b714f5e5e820d31bac0d90e1e91048cfcc7cc762/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=0210f0b082c95f5aec08f356d796c512eab44fc4) | **=** | 171.59 kB | 171.59 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/b714f5e5e820d31bac0d90e1e91048cfcc7cc762/files/facebook-www/ReactDOM-prod.classic.js?compare=0210f0b082c95f5aec08f356d796c512eab44fc4) | **=** | 570.42 kB | 570.42 kB | = | 100.64 kB | 100.64 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/b714f5e5e820d31bac0d90e1e91048cfcc7cc762/files/facebook-www/ReactDOM-prod.modern.js?compare=0210f0b082c95f5aec08f356d796c512eab44fc4) | **=** | 554.16 kB | 554.16 kB | = | 97.82 kB | 97.82 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against b714f5e5e820d31bac0d90e1e91048cfcc7cc762\n</p>\n","updated_at":"2023-06-02T12:44:19Z","created_at":"2023-06-02T12:44:19Z","creator_user_login":"react-sizebot"}
{"number":26892,"comment_id":"1573587828","body":"Hi @eduardocque! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326892). Thanks!","updated_at":"2023-06-02T11:31:56Z","created_at":"2023-06-02T11:31:56Z","creator_user_login":"facebook-github-bot"}
{"number":26892,"comment_id":"1573594697","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: e1ad4aa3615333009d76f947ff05ddeff01039c6...5d576672f781a773e23bff563c5ff56edc010a1b\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5d576672f781a773e23bff563c5ff56edc010a1b/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=e1ad4aa3615333009d76f947ff05ddeff01039c6) | **+0.10%** | 164.23 kB | 164.40 kB | +0.08% | 51.73 kB | 51.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5d576672f781a773e23bff563c5ff56edc010a1b/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=e1ad4aa3615333009d76f947ff05ddeff01039c6) | **+0.10%** | 171.67 kB | 171.83 kB | +0.08% | 53.97 kB | 54.01 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/5d576672f781a773e23bff563c5ff56edc010a1b/files/facebook-www/ReactDOM-prod.classic.js?compare=e1ad4aa3615333009d76f947ff05ddeff01039c6) | **+0.14%** | 570.12 kB | 570.94 kB | +0.10% | 100.57 kB | 100.67 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/5d576672f781a773e23bff563c5ff56edc010a1b/files/facebook-www/ReactDOM-prod.modern.js?compare=e1ad4aa3615333009d76f947ff05ddeff01039c6) | **+0.15%** | 553.90 kB | 554.72 kB | +0.11% | 97.75 kB | 97.86 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [facebook-www/ReactART-prod.modern.js](https://react-builds.vercel.app/commits/5d576672f781a773e23bff563c5ff56edc010a1b/files/facebook-www/ReactART-prod.modern.js?compare=e1ad4aa3615333009d76f947ff05ddeff01039c6) | **+0.24%** | 338.61 kB | 339.44 kB | +0.22% | 57.55 kB | 57.68 kB\n| [facebook-www/ReactART-prod.classic.js](https://react-builds.vercel.app/commits/5d576672f781a773e23bff563c5ff56edc010a1b/files/facebook-www/ReactART-prod.classic.js?compare=e1ad4aa3615333009d76f947ff05ddeff01039c6) | **+0.24%** | 349.61 kB | 350.44 kB | +0.21% | 59.47 kB | 59.60 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 5d576672f781a773e23bff563c5ff56edc010a1b\n</p>\n","updated_at":"2023-06-03T13:58:32Z","created_at":"2023-06-02T11:37:03Z","creator_user_login":"react-sizebot"}
{"number":26892,"comment_id":"1573751373","body":"im trying to fix the unit tests but not sure how to fix those in `www-classic` and `www-modern`\r\n\r\nwhen is lazy works in a different way using the method `propagateContextChanges` in `packages/react-reconciler/src/ReactFiberNewContext.js`\r\n\r\ni am able to filter it properly https://github.com/facebook/react/pull/26892/files#diff-679d7152ac09925cae543a85080b8735252ef49da7f6fcde698f48ca36921688R433 but still re-rendering so i think i am missing something when is lazy but at this point i would need help from someone that knows more the project to be able to handle that scenario and probably discuss how to handle scenarios like SSR and when is suspended, classMode, etc\r\n\r\nany suggestions ?","updated_at":"2023-06-03T05:43:16Z","created_at":"2023-06-02T13:39:26Z","creator_user_login":"eduardocque"}
{"number":26884,"comment_id":"1571451318","body":"hey this seems doable to me\r\ncan you specifically point the issue","updated_at":"2023-06-01T06:44:29Z","created_at":"2023-06-01T06:43:01Z","creator_user_login":"kaleemullah786"}
{"number":26884,"comment_id":"1571453109","body":"What do you mean?","updated_at":"2023-06-01T06:44:47Z","created_at":"2023-06-01T06:44:47Z","creator_user_login":"aletor123"}
{"number":26884,"comment_id":"1571454153","body":"where is this issue?","updated_at":"2023-06-01T06:45:52Z","created_at":"2023-06-01T06:45:52Z","creator_user_login":"kaleemullah786"}
{"number":26884,"comment_id":"1571455470","body":"If you follow instruction and use chrome 114 version, you will get `Oh snap` error","updated_at":"2023-06-01T06:47:13Z","created_at":"2023-06-01T06:47:13Z","creator_user_login":"aletor123"}
{"number":26884,"comment_id":"1571456767","body":"Okay, let me look into it\r\n","updated_at":"2023-06-01T06:48:38Z","created_at":"2023-06-01T06:48:38Z","creator_user_login":"kaleemullah786"}
{"number":26884,"comment_id":"1571490154","body":"It's bug in chrome\r\nhttps://stackblitz.com/edit/js-vcfsfl?file=index.html","updated_at":"2023-06-01T07:16:43Z","created_at":"2023-06-01T07:16:09Z","creator_user_login":"aletor123"}
{"number":26884,"comment_id":"1599586751","body":"I found this bug in Chrome as well. It is not unique to React. It seems to be tied to the name attribute of the form, i.e. `<form name='location'>` Perhaps 'location' is a reserved word in Chrome now? I  just decided to change the form name to solve this issue.","updated_at":"2023-06-20T21:29:34Z","created_at":"2023-06-20T21:29:19Z","creator_user_login":"dolanite"}
{"number":26884,"comment_id":"1606874529","body":"I think the issue can be closed as this is not related to React. It is in chromium browsers.","updated_at":"2023-06-26T07:32:22Z","created_at":"2023-06-26T07:32:22Z","creator_user_login":"kishoreknowapp"}
{"number":26836,"comment_id":"1556142032","body":"Hi @Shivu7889! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326836). Thanks!","updated_at":"2023-05-21T10:25:36Z","created_at":"2023-05-21T10:25:36Z","creator_user_login":"facebook-github-bot"}
{"number":26836,"comment_id":"1556142978","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 4b877b6c661417e932056e12732e3d2697562dc8...68a7fb44db1de84fcbb79e83155302b597641ec3\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/68a7fb44db1de84fcbb79e83155302b597641ec3/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=4b877b6c661417e932056e12732e3d2697562dc8) | **=** | 164.23 kB | 164.23 kB | = | 51.77 kB | 51.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/68a7fb44db1de84fcbb79e83155302b597641ec3/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=4b877b6c661417e932056e12732e3d2697562dc8) | **=** | 171.59 kB | 171.59 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/68a7fb44db1de84fcbb79e83155302b597641ec3/files/facebook-www/ReactDOM-prod.classic.js?compare=4b877b6c661417e932056e12732e3d2697562dc8) | **=** | 570.55 kB | 570.55 kB | = | 100.66 kB | 100.66 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/68a7fb44db1de84fcbb79e83155302b597641ec3/files/facebook-www/ReactDOM-prod.modern.js?compare=4b877b6c661417e932056e12732e3d2697562dc8) | **=** | 554.29 kB | 554.29 kB | = | 97.84 kB | 97.84 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 68a7fb44db1de84fcbb79e83155302b597641ec3\n</p>\n","updated_at":"2023-05-21T10:30:06Z","created_at":"2023-05-21T10:30:06Z","creator_user_login":"react-sizebot"}
{"number":26836,"comment_id":"1556150604","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-05-21T11:08:15Z","created_at":"2023-05-21T11:08:15Z","creator_user_login":"facebook-github-bot"}
{"number":26836,"comment_id":"1558808742","body":"why the test is failed i dont know I doesn't change any code in it","updated_at":"2023-05-23T08:36:06Z","created_at":"2023-05-23T08:36:06Z","creator_user_login":"Shivu7889"}
{"number":26867,"comment_id":"1567369608","body":"Hello, @Erfan2001 can you please give the code where you have encountered this error?","updated_at":"2023-05-29T17:27:09Z","created_at":"2023-05-29T17:27:09Z","creator_user_login":"MeenuyD"}
{"number":26867,"comment_id":"1567525441","body":"Hi @MeenuyD \r\nThanks for your response.\r\nYeah, problems have happened on these occasions:\r\n\r\n**1) First error:**\r\n\r\n```\r\nctx.renderPage = () =>\r\n    originalRenderPage({\r\n      enhanceApp: (App) => (props) => sheets.collect(<App {...props} />),\r\n    });\r\n\r\n  const initialProps = await Document.getInitialProps(ctx);\r\n  //   resetServerContext();\r\n  return {\r\n    ...initialProps,\r\n    // Styles fragment is rendered after the app and page rendering finish.\r\n    styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()],\r\n  };\r\n```\r\n\r\n**2) second error:**\r\n\r\n```\r\nexport class Global {\r\n  static entries<T>(t: T) {\r\n    return Object.entries(t) as [keyof T, T[keyof T]][];\r\n  }\r\n  static keys<T>(t: T) {\r\n    return Object.keys(t) as (keyof T)[];\r\n  }\r\n\r\n  static values<T>(t: T) {\r\n    return Object.values(t);\r\n  }\r\n} \r\n```\r\n","updated_at":"2023-05-29T21:22:01Z","created_at":"2023-05-29T21:18:42Z","creator_user_login":"Erfan2001"}
{"number":26867,"comment_id":"1570324677","body":"For issue 1, if your project was working fine but is coming up with an issue and you just want to just resolve it, \r\njust pass type `any` since you are not passing any type to the `App`.\r\n\r\n```\r\nctx.renderPage = () =>\r\n  originalRenderPage({\r\n    enhanceApp: (App: any) => (props: any) => sheets.collect(<App {...props} />),\r\n  });\r\n\r\nconst initialProps = await Document.getInitialProps(ctx);\r\n// resetServerContext();\r\nreturn {\r\n  ...initialProps,\r\n  styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()],\r\n};\r\n```\r\n\r\nFor issue 2, set `Object.values(t) as T[keyof T];`\r\n```\r\nexport class Global {\r\n  static entries<T>(t: T) {\r\n    return Object.entries(t) as [keyof T, T[keyof T]][];\r\n  }\r\n\r\n  static keys<T>(t: T) {\r\n    return Object.keys(t) as (keyof T)[];\r\n  }\r\n\r\n  static values<T>(t: T): T[keyof T][] {\r\n    return Object.values(t) as T[keyof T];\r\n  }\r\n}\r\n\r\n```","updated_at":"2023-05-31T14:19:36Z","created_at":"2023-05-31T14:15:21Z","creator_user_login":"devjiwonchoi"}
{"number":26818,"comment_id":"1548562739","body":"Hey @MichaelDono, thanks for working on this!\r\n\r\n[I believe that v6 of `update-notifier` is pure ESM](https://github.com/yeoman/update-notifier/releases/tag/v6.0.0), we are not ready to support it yet. We could, but it will take much more time than just bumping the version.\r\n\r\nCan you please check if bumping to v5.1.0 will resolve the vulnerability problem?","updated_at":"2023-05-15T20:56:07Z","created_at":"2023-05-15T20:56:07Z","creator_user_login":"hoxyq"}
{"number":26818,"comment_id":"1549311270","body":"Hi @hoxyq I noticed the ESM bit, which is why I had this marked as draft. I've been able to sort the vulnerability on my own install using `\"overrides\": { \"package-json\": \"7.0.0\" },`. 7.0.0 is the last non-ESM release but patches it, do you think that's an adequate fix?","updated_at":"2023-05-16T09:24:39Z","created_at":"2023-05-16T09:24:39Z","creator_user_login":"MichaelDono"}
{"number":26818,"comment_id":"1549698100","body":"> Hi @hoxyq I noticed the ESM bit, which is why I had this marked as draft. I've been able to sort the vulnerability on my own install using `\"overrides\": { \"package-json\": \"7.0.0\" },`. 7.0.0 is the last non-ESM release but patches it, do you think that's an adequate fix?\r\n\r\nYeah, I think this might work. Consider also adding `\"npm\": \">=8.3.0\"` to `engines` to specify that specific version of npm needed to make it work.\r\n\r\nAlso, I think we need to double-check that `got` v11.8.6 is being installed with these changes.","updated_at":"2023-05-16T13:41:19Z","created_at":"2023-05-16T13:41:19Z","creator_user_login":"hoxyq"}
{"number":26811,"comment_id":"1546798175","body":"Hi @Mohiit70! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326811). Thanks!","updated_at":"2023-05-14T03:32:32Z","created_at":"2023-05-14T03:32:32Z","creator_user_login":"facebook-github-bot"}
{"number":26811,"comment_id":"1546798611","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 4cd7065665ea2cf33c306265c8d817904bb401ca...464875bf6b58cbbe28020ba6bb9ecb8c87d6d10a\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/464875bf6b58cbbe28020ba6bb9ecb8c87d6d10a/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=4cd7065665ea2cf33c306265c8d817904bb401ca) | **=** | 164.25 kB | 164.25 kB | = | 51.77 kB | 51.78 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/464875bf6b58cbbe28020ba6bb9ecb8c87d6d10a/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=4cd7065665ea2cf33c306265c8d817904bb401ca) | **=** | 171.61 kB | 171.61 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/464875bf6b58cbbe28020ba6bb9ecb8c87d6d10a/files/facebook-www/ReactDOM-prod.classic.js?compare=4cd7065665ea2cf33c306265c8d817904bb401ca) | **=** | 570.46 kB | 570.46 kB | = | 100.64 kB | 100.64 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/464875bf6b58cbbe28020ba6bb9ecb8c87d6d10a/files/facebook-www/ReactDOM-prod.modern.js?compare=4cd7065665ea2cf33c306265c8d817904bb401ca) | **=** | 554.20 kB | 554.20 kB | = | 97.83 kB | 97.83 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 464875bf6b58cbbe28020ba6bb9ecb8c87d6d10a\n</p>\n","updated_at":"2023-05-14T03:37:10Z","created_at":"2023-05-14T03:37:10Z","creator_user_login":"react-sizebot"}
{"number":26811,"comment_id":"1552384304","body":"> There seems to be too many spaces in the changes\r\n\r\nThank you for your feedback. I apologize for the excessive space and I will ensure to make the necessary adjustments going forward.\r\n","updated_at":"2023-05-18T04:29:24Z","created_at":"2023-05-18T04:29:24Z","creator_user_login":"Mohiit70"}
{"number":26811,"comment_id":"1565696181","body":"Thanks for your contribution! Without some extra reasoning these changes might not be necessary.\n\nI think we can close this pull request.","updated_at":"2023-05-27T21:41:41Z","created_at":"2023-05-27T21:41:41Z","creator_user_login":"akirataguchi115"}
{"number":26730,"comment_id":"1522727915","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 559e83aebb2026035d47aa0ebf842f78d4cd6757...de18653664f146379f4dad294c0c4d055717f8d0\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.28%** | 164.18 kB | 164.65 kB | +0.32% | 51.78 kB | 51.94 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.27%** | 171.57 kB | 172.04 kB | +0.32% | 53.99 kB | 54.16 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/facebook-www/ReactDOM-prod.classic.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.19%** | 570.19 kB | 571.26 kB | +0.24% | 100.62 kB | 100.86 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/facebook-www/ReactDOM-prod.modern.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.19%** | 553.93 kB | 555.00 kB | +0.24% | 97.80 kB | 98.04 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable-semver/react-dom/umd/react-dom.production.min.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/oss-stable-semver/react-dom/umd/react-dom.production.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.29%** | 164.02 kB | 164.49 kB | +0.32% | 52.08 kB | 52.25 kB\n| [oss-stable/react-dom/umd/react-dom.production.min.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/oss-stable/react-dom/umd/react-dom.production.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.29%** | 164.09 kB | 164.56 kB | +0.33% | 52.10 kB | 52.27 kB\n| [oss-stable-semver/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/oss-stable-semver/react-dom/cjs/react-dom.production.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.28%** | 164.11 kB | 164.57 kB | +0.31% | 51.76 kB | 51.91 kB\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.28%** | 164.18 kB | 164.65 kB | +0.32% | 51.78 kB | 51.94 kB\n| [oss-experimental/react-dom/umd/react-dom.production.min.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/oss-experimental/react-dom/umd/react-dom.production.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.28%** | 171.41 kB | 171.88 kB | +0.22% | 54.27 kB | 54.39 kB\n| [oss-stable-semver/react-dom/umd/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/oss-stable-semver/react-dom/umd/react-dom.profiling.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.27%** | 173.00 kB | 173.47 kB | +0.30% | 54.47 kB | 54.64 kB\n| [oss-stable/react-dom/umd/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/oss-stable/react-dom/umd/react-dom.profiling.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.27%** | 173.07 kB | 173.55 kB | +0.30% | 54.50 kB | 54.66 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.27%** | 171.57 kB | 172.04 kB | +0.32% | 53.99 kB | 54.16 kB\n| [oss-stable-semver/react-dom/cjs/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/oss-stable-semver/react-dom/cjs/react-dom.profiling.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.27%** | 173.74 kB | 174.21 kB | +0.31% | 54.19 kB | 54.36 kB\n| [oss-stable/react-dom/cjs/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/oss-stable/react-dom/cjs/react-dom.profiling.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.27%** | 173.81 kB | 174.28 kB | +0.31% | 54.21 kB | 54.38 kB\n| [oss-experimental/react-dom/cjs/react-dom-unstable_testing.production.min.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/oss-experimental/react-dom/cjs/react-dom-unstable_testing.production.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.26%** | 177.78 kB | 178.25 kB | +0.26% | 56.32 kB | 56.47 kB\n| [oss-experimental/react-dom/umd/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/oss-experimental/react-dom/umd/react-dom.profiling.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.26%** | 180.40 kB | 180.87 kB | +0.23% | 56.60 kB | 56.73 kB\n| [oss-experimental/react-dom/cjs/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/de18653664f146379f4dad294c0c4d055717f8d0/files/oss-experimental/react-dom/cjs/react-dom.profiling.min.js?compare=559e83aebb2026035d47aa0ebf842f78d4cd6757) | **+0.26%** | 181.21 kB | 181.68 kB | +0.30% | 56.40 kB | 56.57 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against de18653664f146379f4dad294c0c4d055717f8d0\n</p>\n","updated_at":"2023-05-02T04:57:02Z","created_at":"2023-04-26T03:36:57Z","creator_user_login":"react-sizebot"}
{"number":26705,"comment_id":"1519036435","body":"the link order is important cause we want to preload some critical image to decrease the LCP time","updated_at":"2023-04-23T11:06:43Z","created_at":"2023-04-23T11:06:43Z","creator_user_login":"lili21"}
{"number":26705,"comment_id":"1519036567","body":"downgrade the version to 18.2.0, and the order is expected.","updated_at":"2023-04-23T11:07:07Z","created_at":"2023-04-23T11:07:07Z","creator_user_login":"lili21"}
{"number":26705,"comment_id":"1526125864","body":"Hi @lili21 , i am new to open source could i get a chance to work on this issue?","updated_at":"2023-04-27T18:16:22Z","created_at":"2023-04-27T18:16:22Z","creator_user_login":"SamarthBagga"}
{"number":26705,"comment_id":"1550024629","body":"When you say \"messed up\" do you mean some tags or missing? Or can you be more specific?","updated_at":"2023-05-16T16:48:20Z","created_at":"2023-05-16T16:48:20Z","creator_user_login":"gaearon"}
{"number":26705,"comment_id":"1600284138","body":"the order of links is not expected. ","updated_at":"2023-06-21T06:55:38Z","created_at":"2023-06-21T06:55:38Z","creator_user_login":"lili21"}
{"number":26705,"comment_id":"1600285114","body":"those `<link rel=modulepreload />` tags have been moved into `head`, which should be in `body`.","updated_at":"2023-06-21T06:56:45Z","created_at":"2023-06-21T06:56:45Z","creator_user_login":"lili21"}
{"number":26705,"comment_id":"1605928812","body":"it's hurting our performance. you can check the similar problem with https://github.com/vitejs/vite/issues/5120.\r\n\r\nafter upgrade to react@canary version, we see the same effect in production, the FCP increase about 1s. because all the `<link rel=modulepreload />` have been moved into head.","updated_at":"2023-06-25T08:22:06Z","created_at":"2023-06-25T08:22:06Z","creator_user_login":"lili21"}
{"number":26705,"comment_id":"1606290671","body":"@gaearon `<link rel=\"modulepreload\" />` tags are being moved to _before_ `<link rel=\"stylesheet\" />` tags. Since stylesheets are blocking, if you have a decent amount of modulepreloads then you end up delaying the initial render by however long it takes the browser to free up a network connection to fetch the stylesheet due to all the in-flight preloads. \r\n\r\nI think modulepreloads should ideally be moved to _after_ the last stylesheet link tag, which would let the browser fetch the blocking CSS as fast as possible before attempting to preload any JS modules, which can occur asynchronously and won't block the initial paint.","updated_at":"2023-06-25T22:31:35Z","created_at":"2023-06-25T22:31:35Z","creator_user_login":"rossipedia"}
{"number":26745,"comment_id":"1528735459","body":"Hi @oxcened! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326745). Thanks!","updated_at":"2023-04-29T09:36:05Z","created_at":"2023-04-29T09:36:05Z","creator_user_login":"facebook-github-bot"}
{"number":26745,"comment_id":"1528736443","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: b12bea62d9cfd9a925f28cb2c93daeda3865a64e...ebe398dc24114a4645d5db41df0e05e9bae8ba1f\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/ebe398dc24114a4645d5db41df0e05e9bae8ba1f/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=b12bea62d9cfd9a925f28cb2c93daeda3865a64e) | **=** | 164.05 kB | 164.05 kB | = | 51.73 kB | 51.73 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/ebe398dc24114a4645d5db41df0e05e9bae8ba1f/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=b12bea62d9cfd9a925f28cb2c93daeda3865a64e) | **=** | 170.35 kB | 170.35 kB | = | 53.64 kB | 53.64 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/ebe398dc24114a4645d5db41df0e05e9bae8ba1f/files/facebook-www/ReactDOM-prod.classic.js?compare=b12bea62d9cfd9a925f28cb2c93daeda3865a64e) | **=** | 567.08 kB | 567.08 kB | = | 100.17 kB | 100.17 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/ebe398dc24114a4645d5db41df0e05e9bae8ba1f/files/facebook-www/ReactDOM-prod.modern.js?compare=b12bea62d9cfd9a925f28cb2c93daeda3865a64e) | **=** | 550.81 kB | 550.81 kB | = | 97.37 kB | 97.37 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against ebe398dc24114a4645d5db41df0e05e9bae8ba1f\n</p>\n","updated_at":"2023-04-29T09:41:12Z","created_at":"2023-04-29T09:40:37Z","creator_user_login":"react-sizebot"}
{"number":26745,"comment_id":"1528760112","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-04-29T11:07:15Z","created_at":"2023-04-29T11:07:15Z","creator_user_login":"facebook-github-bot"}
{"number":26758,"comment_id":"1532177431","body":"How to access the code in vs code \r\n","updated_at":"2023-05-02T21:28:24Z","created_at":"2023-05-02T21:28:24Z","creator_user_login":"rakshithcgowda"}
{"number":26758,"comment_id":"1532759280","body":"@rakshithcgowda I'm sorry I didn't get what you wanted to ask.  ","updated_at":"2023-05-03T10:02:07Z","created_at":"2023-05-03T10:02:07Z","creator_user_login":"pankajsoni91"}
{"number":26758,"comment_id":"1532891722","body":"@pankajsoni91 Like  I am asking that see there is an bug in the code we want to debug it right  where can we access that code. Or do we need to start from scratch and build entire thing### ","updated_at":"2023-05-03T11:52:21Z","created_at":"2023-05-03T11:52:21Z","creator_user_login":"rakshithcgowda"}
{"number":26758,"comment_id":"1534395421","body":"I don't have a sample code. but facing this issue very often.","updated_at":"2023-05-04T09:29:02Z","created_at":"2023-05-04T09:29:02Z","creator_user_login":"pankajsoni91"}
{"number":26758,"comment_id":"1540258051","body":"```log\r\nThe error was thrown at updateTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27946:19)\r\n    at getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27878:20)\r\n    at ProfilingCache_ProfilingCache.getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:28407:11)\r\n    at CommitFlamegraphAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:46621:33)\r\n    at Jf (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:14237:7)\r\n    at rh (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:15421:7)\r\n    at Fk (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18874:86)\r\n    at Bk (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18405:11)\r\n    at Ak (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18296:23)\r\n    at ef (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18278:5)\r\nThe error occurred at CommitFlamegraphAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:46604:34)\r\n    at div\r\n    at div\r\n    at div\r\n    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:38889:3)\r\n    at Profiler_Profiler (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:56723:34)\r\n    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40422:5)\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40594:3)\r\n    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40624:5)\r\n    at div\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40594:3)\r\n    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:45875:3)\r\n    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:45303:3)\r\n    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33113:3)\r\n    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33762:3)\r\n    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:41019:3)\r\n    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:57230:3)\r\n```\r\n\r\nI can say we're still on React 17, and are unable to upgrade yet (some work needed on our codebase to remove a deprecated library)","updated_at":"2023-05-09T14:39:11Z","created_at":"2023-05-09T14:39:11Z","creator_user_login":"GeorgeWL"}
{"number":26758,"comment_id":"1554273663","body":"I'm seeying this one too - basically 100% of the time\r\n```\r\nUncaught Error: Commit tree already contains fiber \"31129\". This is a bug in React DevTools.\r\nThe error was thrown at updateTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27946:19)\r\n    at getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27878:20)\r\n    at ProfilingCache_ProfilingCache.getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:28407:11)\r\n    at CommitRankedAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:46872:33)\r\n    at Jf (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:14237:7)\r\n    at rh (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:15421:7)\r\n    at Fk (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18874:86)\r\n    at Bk (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18405:11)\r\n    at Ak (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18296:23)\r\n    at ef (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18278:5)\r\nThe error occurred at CommitRankedAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:46855:34)\r\n    at div\r\n    at div\r\n    at div\r\n    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:38889:3)\r\n    at Profiler_Profiler (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:56723:34)\r\n    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40422:5)\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40594:3)\r\n    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40624:5)\r\n    at div\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:40594:3)\r\n    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:45875:3)\r\n    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:45303:3)\r\n    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33113:3)\r\n    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:33762:3)\r\n    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:41019:3)\r\n    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:57230:3)\r\n    ```","updated_at":"2023-05-19T09:09:07Z","created_at":"2023-05-19T09:09:07Z","creator_user_login":"jjworren"}
{"number":26668,"comment_id":"1514240773","body":"Hi @djfarly! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326668). Thanks!","updated_at":"2023-04-19T07:13:16Z","created_at":"2023-04-19T07:13:16Z","creator_user_login":"facebook-github-bot"}
{"number":26668,"comment_id":"1514247152","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 77d3b02e5c8bd92190d20c692fdbf2db01e3657b...24ddc56505e549902c73de4972e902d1a7c0b904\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/24ddc56505e549902c73de4972e902d1a7c0b904/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=77d3b02e5c8bd92190d20c692fdbf2db01e3657b) | **=** | 164.42 kB | 164.42 kB | = | 51.69 kB | 51.69 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/24ddc56505e549902c73de4972e902d1a7c0b904/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=77d3b02e5c8bd92190d20c692fdbf2db01e3657b) | **=** | 166.86 kB | 166.86 kB | = | 52.34 kB | 52.34 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/24ddc56505e549902c73de4972e902d1a7c0b904/files/facebook-www/ReactDOM-prod.classic.js?compare=77d3b02e5c8bd92190d20c692fdbf2db01e3657b) | **=** | 564.45 kB | 564.45 kB | = | 99.40 kB | 99.40 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/24ddc56505e549902c73de4972e902d1a7c0b904/files/facebook-www/ReactDOM-prod.modern.js?compare=77d3b02e5c8bd92190d20c692fdbf2db01e3657b) | **=** | 548.24 kB | 548.24 kB | = | 96.71 kB | 96.71 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 24ddc56505e549902c73de4972e902d1a7c0b904\n</p>\n","updated_at":"2023-04-19T07:18:19Z","created_at":"2023-04-19T07:18:19Z","creator_user_login":"react-sizebot"}
{"number":26668,"comment_id":"1514390815","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-04-19T09:07:43Z","created_at":"2023-04-19T09:07:43Z","creator_user_login":"facebook-github-bot"}
{"number":26789,"comment_id":"1537300102","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 1cea384480a6dea80128e5e0ddb714df7bea1520...c46b8a515e364c00fb1d0ba5115765c02ab53413\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/c46b8a515e364c00fb1d0ba5115765c02ab53413/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=1cea384480a6dea80128e5e0ddb714df7bea1520) | **+0.12%** | 164.25 kB | 164.45 kB | +0.08% | 51.79 kB | 51.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/c46b8a515e364c00fb1d0ba5115765c02ab53413/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=1cea384480a6dea80128e5e0ddb714df7bea1520) | **+0.11%** | 171.69 kB | 171.89 kB | +0.07% | 54.02 kB | 54.06 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/c46b8a515e364c00fb1d0ba5115765c02ab53413/files/facebook-www/ReactDOM-prod.classic.js?compare=1cea384480a6dea80128e5e0ddb714df7bea1520) | **+0.07%** | 570.48 kB | 570.90 kB | +0.06% | 100.66 kB | 100.72 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/c46b8a515e364c00fb1d0ba5115765c02ab53413/files/facebook-www/ReactDOM-prod.modern.js?compare=1cea384480a6dea80128e5e0ddb714df7bea1520) | **+0.08%** | 554.22 kB | 554.63 kB | +0.06% | 97.84 kB | 97.90 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against c46b8a515e364c00fb1d0ba5115765c02ab53413\n</p>\n","updated_at":"2023-05-30T22:42:52Z","created_at":"2023-05-07T05:59:39Z","creator_user_login":"react-sizebot"}
{"number":26789,"comment_id":"1569038835","body":"This is [shipping in stable chrome today](https://twitter.com/Una/status/1663633716403490817). Would be awesome to get it supported in React too!","updated_at":"2023-05-30T20:21:13Z","created_at":"2023-05-30T20:20:11Z","creator_user_login":"devongovett"}
{"number":26702,"comment_id":"1518603259","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: a21d1475ffd7225a463f2d0c0c9b732c8dd795eb...ab0483f8bec436e1343c5116ced6381d61b239dc\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/ab0483f8bec436e1343c5116ced6381d61b239dc/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=a21d1475ffd7225a463f2d0c0c9b732c8dd795eb) | **=** | 163.95 kB | 163.95 kB | = | 51.68 kB | 51.68 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/ab0483f8bec436e1343c5116ced6381d61b239dc/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=a21d1475ffd7225a463f2d0c0c9b732c8dd795eb) | **=** | 168.29 kB | 168.29 kB | = | 52.94 kB | 52.94 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/ab0483f8bec436e1343c5116ced6381d61b239dc/files/facebook-www/ReactDOM-prod.classic.js?compare=a21d1475ffd7225a463f2d0c0c9b732c8dd795eb) | **=** | 568.30 kB | 568.30 kB | = | 100.65 kB | 100.65 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/ab0483f8bec436e1343c5116ced6381d61b239dc/files/facebook-www/ReactDOM-prod.modern.js?compare=a21d1475ffd7225a463f2d0c0c9b732c8dd795eb) | **=** | 552.03 kB | 552.03 kB | = | 97.99 kB | 97.99 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against ab0483f8bec436e1343c5116ced6381d61b239dc\n</p>\n","updated_at":"2023-04-22T11:03:47Z","created_at":"2023-04-22T11:03:47Z","creator_user_login":"react-sizebot"}
{"number":26702,"comment_id":"1521107054","body":"duplicate https://github.com/facebook/react/pull/26174","updated_at":"2023-04-25T03:27:31Z","created_at":"2023-04-25T03:27:20Z","creator_user_login":"Biki-das"}
{"number":26690,"comment_id":"1519008584","body":"@kajweb \r\nTry this to achieve the same behaviour as expected in vanilla script\r\n\r\n```\r\nimport \"../App.css\";\r\nimport { useRef, useEffect, useState } from \"react\";\r\n\r\nexport default function Scroller() {\r\n    const [data, setData] = useState(\"\");\r\n\r\n    const ref = useRef(null);\r\n    const [scrollPosition, setScrollPosition] = useState(0);\r\n\r\n    useEffect(() => {\r\n        ref.current.scrollTop = scrollPosition;\r\n    }, [scrollPosition]);\r\n\r\n\r\n    const changeText = (type) => {\r\n        setData(\r\n            [\r\n                ...Array(\r\n                    {\r\n                        S: 1,\r\n                        M: 1000,\r\n                        L: 5000,\r\n                        LP: 5000\r\n                    }[type]\r\n                )\r\n            ]\r\n                .map((i) => type)\r\n                .join(\" \")\r\n        );\r\n        setScrollPosition(ref.current.scrollTop);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"flex items-center justify-center\">\r\n                <div\r\n                    style={{\r\n                        height: 600,\r\n                        width: 300,\r\n                        border: \"1px solid #ccc\",\r\n                        overflow: \"auto\"\r\n                    }}\r\n                    ref={ref}\r\n                >\r\n                    {data}\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex gap-2\">\r\n                {/* <button onClick={() => changeText(\"S\")}>S</button> */}\r\n                <button onClick={() => changeText(\"M\")}>M</button>\r\n                <button onClick={() => changeText(\"L\")}>L</button>\r\n                <button onClick={() => changeText(\"LP\")}>LP</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n```\r\n\r\nHope this helps !","updated_at":"2023-04-23T09:23:06Z","created_at":"2023-04-23T09:23:06Z","creator_user_login":"umang-bhatt"}
{"number":26690,"comment_id":"1519294780","body":"It worked.","updated_at":"2023-04-24T02:29:10Z","created_at":"2023-04-24T02:29:10Z","creator_user_login":"kajweb"}
{"number":26970,"comment_id":"1596148845","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 613e6f5fca3a7a63d115988d6312beb84d37b4db...d0873c38b36b3f7741896d934187733bef93c0f6\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+0.12%** | 164.56 kB | 164.76 kB | +0.06% | 51.83 kB | 51.86 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+0.12%** | 172.00 kB | 172.20 kB | = | 54.07 kB | 54.07 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/facebook-www/ReactDOM-prod.classic.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+0.02%** | 571.13 kB | 571.25 kB | = | 100.75 kB | 100.76 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/facebook-www/ReactDOM-prod.modern.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+0.02%** | 554.91 kB | 555.03 kB | = | 97.93 kB | 97.93 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/react-dom/umd/react-dom-test-utils.production.min.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-experimental/react-dom/umd/react-dom-test-utils.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+1.17%** | 12.78 kB | 12.93 kB | +0.16% | 4.91 kB | 4.92 kB\n| [oss-stable-semver/react-dom/umd/react-dom-test-utils.production.min.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-stable-semver/react-dom/umd/react-dom-test-utils.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+1.17%** | 12.78 kB | 12.93 kB | +0.16% | 4.91 kB | 4.92 kB\n| [oss-stable/react-dom/umd/react-dom-test-utils.production.min.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-stable/react-dom/umd/react-dom-test-utils.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+1.17%** | 12.78 kB | 12.93 kB | +0.16% | 4.91 kB | 4.92 kB\n| [oss-experimental/react-dom/cjs/react-dom-test-utils.production.min.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-experimental/react-dom/cjs/react-dom-test-utils.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+1.16%** | 12.64 kB | 12.79 kB | = | 4.84 kB | 4.84 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-test-utils.production.min.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-stable-semver/react-dom/cjs/react-dom-test-utils.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+1.16%** | 12.64 kB | 12.79 kB | = | 4.84 kB | 4.84 kB\n| [oss-stable/react-dom/cjs/react-dom-test-utils.production.min.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-stable/react-dom/cjs/react-dom-test-utils.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+1.16%** | 12.64 kB | 12.79 kB | = | 4.84 kB | 4.84 kB\n| [oss-stable-semver/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-stable-semver/react/cjs/react.shared-subset.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+0.23%** | 7.92 kB | 7.94 kB | = | 3.29 kB | 3.29 kB\n| [oss-stable/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-stable/react/cjs/react.shared-subset.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+0.23%** | 7.94 kB | 7.96 kB | = | 3.32 kB | 3.32 kB\n| [oss-experimental/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-experimental/react/cjs/react.shared-subset.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+0.22%** | 8.35 kB | 8.36 kB | = | 3.44 kB | 3.44 kB\n| [oss-experimental/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-experimental/jest-react/cjs/jest-react.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 1.43 kB | 1.42 kB | = | 0.76 kB | 0.76 kB\n| [oss-stable-semver/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-stable-semver/jest-react/cjs/jest-react.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 1.43 kB | 1.42 kB | = | 0.76 kB | 0.76 kB\n| [oss-stable/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-stable/jest-react/cjs/jest-react.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 1.43 kB | 1.42 kB | = | 0.76 kB | 0.76 kB\n| [oss-experimental/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-experimental/jest-react/cjs/jest-react.development.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 4.12 kB | 4.10 kB | = | 1.44 kB | 1.44 kB\n| [oss-stable-semver/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-stable-semver/jest-react/cjs/jest-react.development.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 4.12 kB | 4.10 kB | = | 1.44 kB | 1.44 kB\n| [oss-stable/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/d0873c38b36b3f7741896d934187733bef93c0f6/files/oss-stable/jest-react/cjs/jest-react.development.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 4.12 kB | 4.10 kB | = | 1.44 kB | 1.44 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against d0873c38b36b3f7741896d934187733bef93c0f6\n</p>\n","updated_at":"2023-06-18T13:29:44Z","created_at":"2023-06-18T13:29:44Z","creator_user_login":"react-sizebot"}
{"number":26966,"comment_id":"1595792853","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 5c8dabf8864e1d826c831d6096b2dfa66309961a...624bd4af43da580e8ec990cb48855affd30d9528\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/624bd4af43da580e8ec990cb48855affd30d9528/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=5c8dabf8864e1d826c831d6096b2dfa66309961a) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/624bd4af43da580e8ec990cb48855affd30d9528/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=5c8dabf8864e1d826c831d6096b2dfa66309961a) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/624bd4af43da580e8ec990cb48855affd30d9528/files/facebook-www/ReactDOM-prod.classic.js?compare=5c8dabf8864e1d826c831d6096b2dfa66309961a) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/624bd4af43da580e8ec990cb48855affd30d9528/files/facebook-www/ReactDOM-prod.modern.js?compare=5c8dabf8864e1d826c831d6096b2dfa66309961a) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 624bd4af43da580e8ec990cb48855affd30d9528\n</p>\n","updated_at":"2023-07-02T19:04:18Z","created_at":"2023-06-17T15:52:59Z","creator_user_login":"react-sizebot"}
{"number":26966,"comment_id":"1616776874","body":"Done :)","updated_at":"2023-07-02T19:09:58Z","created_at":"2023-07-02T19:09:58Z","creator_user_login":"sanjaiyan-dev"}
{"number":26957,"comment_id":"1593717825","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 4ddc019aca8e08fd59cb43de5e0032be77d6174e...5810803923f963a072303f1b99645cc8f22bc11d\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5810803923f963a072303f1b99645cc8f22bc11d/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=4ddc019aca8e08fd59cb43de5e0032be77d6174e) | **=** | 164.23 kB | 164.23 kB | = | 51.73 kB | 51.73 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5810803923f963a072303f1b99645cc8f22bc11d/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=4ddc019aca8e08fd59cb43de5e0032be77d6174e) | **=** | 171.67 kB | 171.67 kB | = | 53.97 kB | 53.97 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/5810803923f963a072303f1b99645cc8f22bc11d/files/facebook-www/ReactDOM-prod.classic.js?compare=4ddc019aca8e08fd59cb43de5e0032be77d6174e) | **=** | 570.12 kB | 570.12 kB | = | 100.58 kB | 100.58 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/5810803923f963a072303f1b99645cc8f22bc11d/files/facebook-www/ReactDOM-prod.modern.js?compare=4ddc019aca8e08fd59cb43de5e0032be77d6174e) | **=** | 553.90 kB | 553.90 kB | = | 97.75 kB | 97.75 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 5810803923f963a072303f1b99645cc8f22bc11d\n</p>\n","updated_at":"2023-06-15T21:42:15Z","created_at":"2023-06-15T21:00:45Z","creator_user_login":"react-sizebot"}
{"number":26957,"comment_id":"1613238008","body":"Hi @kassens, can you help me in resolving the issue?\nType aliases is only used in typescript but maximum code is in javascript?","updated_at":"2023-06-29T14:01:19Z","created_at":"2023-06-29T14:01:19Z","creator_user_login":"adasarpan404"}
{"number":26952,"comment_id":"1591905186","body":"Hi @benhall847! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326952). Thanks!","updated_at":"2023-06-14T20:10:38Z","created_at":"2023-06-14T20:10:38Z","creator_user_login":"facebook-github-bot"}
{"number":26952,"comment_id":"1591911180","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 4ddc019aca8e08fd59cb43de5e0032be77d6174e...3160978dc6211d1a1b26a74a60d3796e6d7bbd87\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/3160978dc6211d1a1b26a74a60d3796e6d7bbd87/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=4ddc019aca8e08fd59cb43de5e0032be77d6174e) | **=** | 164.23 kB | 164.23 kB | = | 51.73 kB | 51.73 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/3160978dc6211d1a1b26a74a60d3796e6d7bbd87/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=4ddc019aca8e08fd59cb43de5e0032be77d6174e) | **=** | 171.67 kB | 171.67 kB | = | 53.97 kB | 53.97 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/3160978dc6211d1a1b26a74a60d3796e6d7bbd87/files/facebook-www/ReactDOM-prod.classic.js?compare=4ddc019aca8e08fd59cb43de5e0032be77d6174e) | **=** | 570.12 kB | 570.12 kB | = | 100.58 kB | 100.58 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/3160978dc6211d1a1b26a74a60d3796e6d7bbd87/files/facebook-www/ReactDOM-prod.modern.js?compare=4ddc019aca8e08fd59cb43de5e0032be77d6174e) | **=** | 553.90 kB | 553.90 kB | = | 97.75 kB | 97.75 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 3160978dc6211d1a1b26a74a60d3796e6d7bbd87\n</p>\n","updated_at":"2023-06-14T20:16:08Z","created_at":"2023-06-14T20:16:08Z","creator_user_login":"react-sizebot"}
{"number":26952,"comment_id":"1591986110","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-06-14T21:06:50Z","created_at":"2023-06-14T21:06:50Z","creator_user_login":"facebook-github-bot"}
{"number":26923,"comment_id":"1592656949","body":"In the earlier code, the issue with the progress bar not filling completely every time is likely due to the timing of the state update and the rendering of the component.\r\n\r\nIn the original code, the 'useEffect' hook is triggered whenever there is a change in the 'startTransition' or 'startFilling' variables. However, there is a 'setTimeout' commented out within the hook, which means the 'setStartTransition(true)' call is immediately executed when the effect runs.\r\n\r\nThe problem with this approach is that the state update '(setStartTransition(true))' happens synchronously within the effect. This means that the component is re-rendered immediately with the updated 'startTransition' value, and the CSS transition for the progress bar starts right away.\r\n\r\nHowever, in some cases, this might cause the transition to be skipped or not fully completed. The reason is that JavaScript is single-threaded, and when the state is updated synchronously within the effect, the component might not have enough time to re-render and apply the CSS transition properly.\r\n\r\nTo fix this issue, in the updated code, the 'setStartTransition(true)' call is wrapped inside 'requestAnimationFrame'. This function essentially schedules the state update to occur before the next browser repaint, allowing the component enough time to re-render and apply the transition properly.\r\n\r\nBy using 'requestAnimationFrame' instead of 'setTimeout', you ensure that the state update happens at an appropriate time during the rendering cycle. This can help prevent the issue of the progress bar not filling completely every time.\r\n\r\nAdditionally, the use of 'console.log' statements in both the earlier and updated code is helpful for understanding the behavior of the component and tracking the state changes during different stages of rendering and transitioning.","updated_at":"2023-06-15T09:05:49Z","created_at":"2023-06-15T09:05:49Z","creator_user_login":"AsheerAF911"}
{"number":26923,"comment_id":"1597872722","body":"here  , what is happening , progressBar renders in DOM (base of progress bar is rendered) - > setTransition(true) get invoked , progressBar rerenders with transition in effect . Ideally code should have run. but its not.  @AsheerAF911  can you explain it step by step","updated_at":"2023-06-19T23:26:32Z","created_at":"2023-06-19T23:26:32Z","creator_user_login":"sk16"}
{"number":26923,"comment_id":"1604517229","body":"The problem here is of not re-rendering. Your progressBar re-renders but CSS transition is not applied properly. Below is the reason:\r\n1. Immediate setting of 'startTransition' to true: In the original code, when 'startFilling' is true, the 'startTransition' state variable is immediately set to true without any delay. This means that the transition class is applied immediately, without allowing the component to render first. As a result, the CSS transition doesn't work as intended.\r\n\r\n2. Missing delay for transition: Since 'startTransition' is set to true immediately in the original code, there is no delay specified for the CSS transition. The 'transitionDuration' property in the 'reactStyle' object is set correctly based on the duration prop, but the actual transition doesn't happen due to the immediate application of the transition class.  \r\n\r\nIn conclusion you need wrap 'setStartTransition' within 'setTimeout' or 'requestAnimationFrame' so that there is delay between re-render of our function and application of CSS transition.\r\n\r\nI hope your doubt is cleared, if there is still any doubt left feel free to ask.","updated_at":"2023-06-23T16:26:30Z","created_at":"2023-06-23T16:26:30Z","creator_user_login":"AsheerAF911"}
{"number":26925,"comment_id":"1586197943","body":"Hi @Saaaaaad3! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326925). Thanks!","updated_at":"2023-06-11T15:05:00Z","created_at":"2023-06-11T15:05:00Z","creator_user_login":"facebook-github-bot"}
{"number":26925,"comment_id":"1586203740","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 47385f8fa448e52326f08d0afa357339fac6f86e...b88d1abeef34592505bc5ad04ed5c43936ec3904\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/b88d1abeef34592505bc5ad04ed5c43936ec3904/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=47385f8fa448e52326f08d0afa357339fac6f86e) | **=** | 164.22 kB | 164.22 kB | = | 51.74 kB | 51.74 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/b88d1abeef34592505bc5ad04ed5c43936ec3904/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=47385f8fa448e52326f08d0afa357339fac6f86e) | **=** | 171.63 kB | 171.63 kB | = | 53.95 kB | 53.95 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/b88d1abeef34592505bc5ad04ed5c43936ec3904/files/facebook-www/ReactDOM-prod.classic.js?compare=47385f8fa448e52326f08d0afa357339fac6f86e) | **=** | 566.78 kB | 566.78 kB | = | 99.97 kB | 99.97 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/b88d1abeef34592505bc5ad04ed5c43936ec3904/files/facebook-www/ReactDOM-prod.modern.js?compare=47385f8fa448e52326f08d0afa357339fac6f86e) | **=** | 550.58 kB | 550.58 kB | = | 97.13 kB | 97.13 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against b88d1abeef34592505bc5ad04ed5c43936ec3904\n</p>\n","updated_at":"2023-07-01T20:17:30Z","created_at":"2023-06-11T15:09:52Z","creator_user_login":"react-sizebot"}
{"number":26925,"comment_id":"1586210413","body":"I have submitted my Info for CLA Check and I have not changed anything apart from the 2 lines in the readme file. \r\nCan Someone look as to why CircleCi test is failing?","updated_at":"2023-06-11T15:15:55Z","created_at":"2023-06-11T15:15:55Z","creator_user_login":"Saaaaaad3"}
{"number":26920,"comment_id":"1585758043","body":"Hi @Enigama! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326920). Thanks!","updated_at":"2023-06-10T18:11:23Z","created_at":"2023-06-10T18:11:23Z","creator_user_login":"facebook-github-bot"}
{"number":26920,"comment_id":"1585759510","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 613e6f5fca3a7a63d115988d6312beb84d37b4db...a890ee715e5e62706b04d77552991e8eb29cabc3\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a890ee715e5e62706b04d77552991e8eb29cabc3/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 164.56 kB | 164.56 kB | = | 51.83 kB | 51.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a890ee715e5e62706b04d77552991e8eb29cabc3/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 172.00 kB | 172.00 kB | = | 54.07 kB | 54.07 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/a890ee715e5e62706b04d77552991e8eb29cabc3/files/facebook-www/ReactDOM-prod.classic.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 571.13 kB | 571.13 kB | = | 100.75 kB | 100.75 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/a890ee715e5e62706b04d77552991e8eb29cabc3/files/facebook-www/ReactDOM-prod.modern.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 554.91 kB | 554.91 kB | = | 97.93 kB | 97.93 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against a890ee715e5e62706b04d77552991e8eb29cabc3\n</p>\n","updated_at":"2023-06-17T17:58:22Z","created_at":"2023-06-10T18:16:36Z","creator_user_login":"react-sizebot"}
{"number":26920,"comment_id":"1585774570","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-06-10T19:06:42Z","created_at":"2023-06-10T19:06:42Z","creator_user_login":"facebook-github-bot"}
{"number":26906,"comment_id":"1578808051","body":"Hello I think this is not the bug in React-dom I have checked both the official documentation repository there are mentions about the reanderToReadableStream there you wrote an incorrect code here is the updated code.\r\n```\r\nimport ReactDOMServer from 'react-dom/server;\r\n\r\nconst { renderToString, renderToReadableStream } = ReactDOMServer;\r\n\r\nconsole.log({ renderToString, renderToReadableStream });\r\n```\r\nbecause the error says that it is the syntax error Named export 'renderToReadableStream' not found. The requested module 'react-dom/server' is a CommonJS module, which may not support all module.exports as named exports.","updated_at":"2023-06-06T13:50:15Z","created_at":"2023-06-06T13:50:15Z","creator_user_login":"MeenuyD"}
{"number":26906,"comment_id":"1579102740","body":"@MeenuyD I tried your snippet and it doesn't work either","updated_at":"2023-06-08T09:12:25Z","created_at":"2023-06-06T16:37:44Z","creator_user_login":"krutoo"}
{"number":26906,"comment_id":"1590389433","body":"Node.js exposes WebStream to global since 18.+, but `react-dom/server` does not export renderToReadableStream without checking if it present.","updated_at":"2023-06-14T03:15:25Z","created_at":"2023-06-14T03:15:25Z","creator_user_login":"thynson"}
{"number":26906,"comment_id":"1590835991","body":"Is it possible to add `renderToReadableStream` to Node.js package?","updated_at":"2023-06-14T09:28:50Z","created_at":"2023-06-14T09:28:50Z","creator_user_login":"krutoo"}
{"number":26912,"comment_id":"1582787959","body":"That is the default behavior of react strict mode. react renders each component twice in development mode.\r\n\r\ncheck out this. https://react.dev/reference/react/StrictMode","updated_at":"2023-06-08T15:14:48Z","created_at":"2023-06-08T15:14:48Z","creator_user_login":"kiljag"}
{"number":26912,"comment_id":"1583016182","body":"Hello yes react in strict render the component twice and when using the useEffect hook with an empty dependency array ([]), the effect is meant to run only once, similar to the componentDidMount lifecycle method in class components.\r\n\r\nThe cleanup function specified in the effect will be invoked when the component is unmounted, regardless of whether there are dependencies or not. However, in the case of an empty dependency array, the effect will not be re-triggered on subsequent re-renders of the component. I think so this behavior is intentional and follows React's rules for managing effects.","updated_at":"2023-06-08T16:46:06Z","created_at":"2023-06-08T16:46:06Z","creator_user_login":"MeenuyD"}
{"number":26912,"comment_id":"1584446865","body":"here is the order for the render & re-render: \r\n• APP read his component but bypass useEffect \r\n• then he go to the children component \r\n• he read the children file and bypass useEffect\r\n• Now he read the useEffect inside the children\r\n• he Do a re-render of the children (bypassing useEffect duh)\r\n• return to App to read if there is a useEffect \r\n• re-rend APP\r\n\r\nBut in my opinion, you don't need to use the return fonction inside useEffect in this case. You only need this return if you want to run something inside the component just before he will unmont.\r\n\r\nimport \"./styles.css\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function App() {\r\n  console.log(\"first read\")\r\n  return (\r\n   {/* thing to return */}\r\n  );\r\n}\r\n\r\nconst User = (props) => {\r\n  console.log(\"second read\")\r\n  useEffect(() => {\r\n    console.log(\"user effect fourth read\", props);\r\n    return () => {\r\n      console.log(\"user cleanup fifth read or first read of all if the componentWillUnmount()  \", props);\r\n    };\r\n  }, []);\r\n  console.log(\"thirth read\")\r\n  return {/* User return */};\r\n};\r\n\r\n`","updated_at":"2023-06-10T12:50:02Z","created_at":"2023-06-09T11:46:08Z","creator_user_login":"stephanemalho"}
{"number":26912,"comment_id":"1585647591","body":"@stephanemalho\r\nThanks for your answer.\r\nAt 2th step \"• than he go to the children component\", 'than\" is right?\r\nIs it \"then\", isn't it?","updated_at":"2023-06-10T12:31:44Z","created_at":"2023-06-10T12:31:44Z","creator_user_login":"PurpleMonkey729"}
{"number":26912,"comment_id":"1585652797","body":"> @stephanemalho\n> \n> Thanks for your answer.\n> \n> At 2th step \"• than he go to the children component\", 'than\" is right?\n> \n> Is it \"then\", isn't it?\n\nYes it is you right ☺️","updated_at":"2023-06-10T12:52:26Z","created_at":"2023-06-10T12:52:26Z","creator_user_login":"stephanemalho"}
{"number":26607,"comment_id":"1505013296","body":"It doesn't look like this bug report has enough info to reproduce it.\r\n\r\nHere are some tips for providing a minimal example: https://stackoverflow.com/help/mcve","updated_at":"2023-04-12T10:10:22Z","created_at":"2023-04-12T10:10:22Z","creator_user_login":"shixiaobang"}
{"number":26607,"comment_id":"1507338970","body":"Please can you provide more information on the bug?","updated_at":"2023-04-13T17:23:16Z","created_at":"2023-04-13T17:23:16Z","creator_user_login":"onukwilip"}
{"number":26607,"comment_id":"1507805570","body":"demo 代码仓库\r\nhttps://github.com/guoqirong/react-vit-demo\r\n本地运行正常，打包后放nginx上报错","updated_at":"2023-04-14T01:32:46Z","created_at":"2023-04-14T01:31:13Z","creator_user_login":"guoqirong"}
{"number":26607,"comment_id":"1560815955","body":"你这……  👨 issue里的一股 清流","updated_at":"2023-05-24T10:02:36Z","created_at":"2023-05-24T09:58:13Z","creator_user_login":"sereinof"}
{"number":26607,"comment_id":"1562124137","body":"https://github.com/alibaba/x-render/issues/1207\r\n已有解决方案，是有组件不支持vite静态资源分包打包配置导致","updated_at":"2023-05-25T01:11:32Z","created_at":"2023-05-25T01:11:32Z","creator_user_login":"guoqirong"}
{"number":26464,"comment_id":"1480448296","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 9c54b29b44d24f8f8090da9c7ebf569747a444df...d9d07c6f13b2c1960df876ac1e68ace1a1958ade\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d9d07c6f13b2c1960df876ac1e68ace1a1958ade/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=9c54b29b44d24f8f8090da9c7ebf569747a444df) | **=** | 159.33 kB | 159.33 kB | = | 50.47 kB | 50.47 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d9d07c6f13b2c1960df876ac1e68ace1a1958ade/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=9c54b29b44d24f8f8090da9c7ebf569747a444df) | **=** | 161.07 kB | 161.07 kB | = | 50.98 kB | 50.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/d9d07c6f13b2c1960df876ac1e68ace1a1958ade/files/facebook-www/ReactDOM-prod.classic.js?compare=9c54b29b44d24f8f8090da9c7ebf569747a444df) | **=** | 546.16 kB | 546.16 kB | = | 96.84 kB | 96.84 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/d9d07c6f13b2c1960df876ac1e68ace1a1958ade/files/facebook-www/ReactDOM-prod.modern.js?compare=9c54b29b44d24f8f8090da9c7ebf569747a444df) | **=** | 529.86 kB | 529.86 kB | = | 94.38 kB | 94.38 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/d9d07c6f13b2c1960df876ac1e68ace1a1958ade/files/oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=9c54b29b44d24f8f8090da9c7ebf569747a444df) | **+0.82%** | 26.70 kB | 26.92 kB | +0.62% | 9.22 kB | 9.28 kB\n| [oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/d9d07c6f13b2c1960df876ac1e68ace1a1958ade/files/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=9c54b29b44d24f8f8090da9c7ebf569747a444df) | **+0.82%** | 26.70 kB | 26.92 kB | +0.62% | 9.22 kB | 9.28 kB\n| [oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/d9d07c6f13b2c1960df876ac1e68ace1a1958ade/files/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=9c54b29b44d24f8f8090da9c7ebf569747a444df) | **+0.79%** | 27.40 kB | 27.62 kB | +0.52% | 9.42 kB | 9.47 kB\n| [oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/d9d07c6f13b2c1960df876ac1e68ace1a1958ade/files/oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=9c54b29b44d24f8f8090da9c7ebf569747a444df) | **+0.69%** | 92.56 kB | 93.20 kB | +0.31% | 21.80 kB | 21.87 kB\n| [oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/d9d07c6f13b2c1960df876ac1e68ace1a1958ade/files/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=9c54b29b44d24f8f8090da9c7ebf569747a444df) | **+0.69%** | 92.56 kB | 93.20 kB | +0.31% | 21.80 kB | 21.87 kB\n| [oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/d9d07c6f13b2c1960df876ac1e68ace1a1958ade/files/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=9c54b29b44d24f8f8090da9c7ebf569747a444df) | **+0.69%** | 92.78 kB | 93.43 kB | +0.31% | 21.84 kB | 21.90 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against d9d07c6f13b2c1960df876ac1e68ace1a1958ade\n</p>\n","updated_at":"2023-03-24T17:27:37Z","created_at":"2023-03-23T01:13:35Z","creator_user_login":"react-sizebot"}
{"number":26464,"comment_id":"1480454310","body":"The tests for missing dependencies also use literals, so I added the new expected suggestions. I'm not sure whether these dependencies can safely be removed from the tests since the suggested fix completely replaces the dependency array.","updated_at":"2023-03-23T01:26:24Z","created_at":"2023-03-23T01:24:34Z","creator_user_login":"mateusmtoledo"}
{"number":26465,"comment_id":"1494099896","body":"@bhanuUdai \r\n\r\nCan you please provide an example of the code that reproduces the problem?\r\nSome useful tips on this: https://stackoverflow.com/help/mcve","updated_at":"2023-04-03T10:52:16Z","created_at":"2023-04-03T10:52:16Z","creator_user_login":"hoxyq"}
{"number":26465,"comment_id":"1494108038","body":"this error is coming with every react application i try to run on browser\n\nOn Mon, Apr 3, 2023 at 4:22 PM Ruslan Lesiutin ***@***.***>\nwrote:\n\n> @bhanuUdai <https://github.com/bhanuUdai>\n>\n> Can you please provide an example of the code that reproduces the problem?\n> Some useful tips on this: https://stackoverflow.com/help/mcve\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/facebook/react/issues/26465#issuecomment-1494099896>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/A2JXKJ6EIX5LUQWLKZKPCALW7KTW7ANCNFSM6AAAAAAWE2AJRY>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n","updated_at":"2023-04-03T10:58:05Z","created_at":"2023-04-03T10:58:05Z","creator_user_login":"bhanuUdai"}
{"number":26465,"comment_id":"1531658580","body":"Getting same along with `Invalid renderer id \"1\"`. I regularly use React devtools but noticed this only today (which means it might've appeared within last ~1 week).\r\nAnother particularly different thing which happens is that Devtools Element tree becomes kind-of disconnected from real VDOM. i.e. hovering doesn't highlight corresponding element in window, neither I can inspect new elements.\r\n\r\nThis used to happen previously also (since ~3-4 months), and I could work around it by Pressing ``Option`` + ``R`` (reload devtools).\r\nNow, when I try to reload devtools in such situation, I get warning `Invalid renderer id \"1\"` and devtools goes into above mentioned state.\r\n\r\nAnd, service worker logs this as error message\r\n```javascript\r\n{\r\n    \"message\": \"Duplicate script ID 'hook'\"\r\n}\r\n```","updated_at":"2023-05-02T15:21:29Z","created_at":"2023-05-02T15:15:34Z","creator_user_login":"80avin-sw"}
{"number":26465,"comment_id":"1532806871","body":"I have same issue.","updated_at":"2023-05-03T10:41:10Z","created_at":"2023-05-03T10:41:10Z","creator_user_login":"shamilium"}
{"number":26465,"comment_id":"1562419382","body":"I have same issue.","updated_at":"2023-05-25T07:32:21Z","created_at":"2023-05-25T07:32:21Z","creator_user_login":"haohuaZhang"}
{"number":26506,"comment_id":"1489048510","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 1f5cdf8c77182fc51910787e48384ec4620dc40d...e4d485f68ebbf486f720e829505bfeaa82214397\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e4d485f68ebbf486f720e829505bfeaa82214397/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=1f5cdf8c77182fc51910787e48384ec4620dc40d) | **=** | 162.97 kB | 162.97 kB | = | 51.50 kB | 51.50 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e4d485f68ebbf486f720e829505bfeaa82214397/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=1f5cdf8c77182fc51910787e48384ec4620dc40d) | **=** | 164.71 kB | 164.71 kB | = | 52.03 kB | 52.03 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/e4d485f68ebbf486f720e829505bfeaa82214397/files/facebook-www/ReactDOM-prod.classic.js?compare=1f5cdf8c77182fc51910787e48384ec4620dc40d) | **=** | 556.92 kB | 556.92 kB | = | 98.54 kB | 98.54 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/e4d485f68ebbf486f720e829505bfeaa82214397/files/facebook-www/ReactDOM-prod.modern.js?compare=1f5cdf8c77182fc51910787e48384ec4620dc40d) | **=** | 540.64 kB | 540.64 kB | = | 96.12 kB | 96.12 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against e4d485f68ebbf486f720e829505bfeaa82214397\n</p>\n","updated_at":"2023-03-29T23:31:32Z","created_at":"2023-03-29T17:52:22Z","creator_user_login":"react-sizebot"}
{"number":26506,"comment_id":"1489473322","body":"I need to upgrade webpack for all devtools packages, which turns out to be more trouble than I anticipated. As of now I'm blocked because hook name parsing feature is broken for unknown reason (some unexpected babel files compiled into it).","updated_at":"2023-03-29T23:35:13Z","created_at":"2023-03-29T23:35:13Z","creator_user_login":"mondaychen"}
{"number":26428,"comment_id":"1475212284","body":"I tried reproducing this bug but was not able to. When I hover over the scroll bar it stays visible.","updated_at":"2023-03-19T11:07:00Z","created_at":"2023-03-19T11:07:00Z","creator_user_login":"Nanak360"}
{"number":26428,"comment_id":"1475359698","body":"It appears that the issue is related to the specific version of Chrome being used. I have tested the website on Firefox and it is functioning correctly, but the problem persists on this particular version of Chrome.","updated_at":"2023-03-19T18:57:57Z","created_at":"2023-03-19T18:50:24Z","creator_user_login":"Undisclosed64"}
{"number":26428,"comment_id":"1490336278","body":"Guess this is not an issue for React, after hovering, you can scroll a little bit to call out the scrollbar","updated_at":"2023-03-30T13:47:03Z","created_at":"2023-03-30T13:47:03Z","creator_user_login":"JSerZANP"}
{"number":26428,"comment_id":"1500232833","body":"his bug should have be considered as a bug while reading or learning it may have difficulty. ","updated_at":"2023-04-07T12:07:58Z","created_at":"2023-04-07T12:07:58Z","creator_user_login":"madhusudhan123-star"}
{"number":26463,"comment_id":"1481028096","body":"This has nothing to do with rules of hooks. What you want is type checking, that is what TypeScript is for","updated_at":"2023-03-23T11:32:50Z","created_at":"2023-03-23T11:32:50Z","creator_user_login":"vkurchatkin"}
{"number":26463,"comment_id":"1481237344","body":"@vkurchatkin Yes, a realize a full and complete solution to this requires a type checking system to fully evaluate the return type. However, it seems there are at least a few cases we could check for with lint rules, and that would handle 95% of the basic cases. For example, I came upon uses `return \"none\";` and `return null;`, which are clearly not allowed and easily caught by a lint rule. Anything other than a bare `return`, `undefined`, or an arrow function is probably an error.","updated_at":"2023-03-23T13:52:56Z","created_at":"2023-03-23T13:52:56Z","creator_user_login":"jlbooker"}
{"number":26463,"comment_id":"1610253358","body":"I opened a related issue in the DT repo, for reference: https://github.com/DefinitelyTyped/DefinitelyTyped/discussions/65890. Unfortunately, the types as they exist aren't strong enough to prevent crashes.","updated_at":"2023-06-27T21:36:04Z","created_at":"2023-06-27T21:36:04Z","creator_user_login":"noahtallen"}
{"number":26463,"comment_id":"1624313524","body":"Looks like it is simply impossible to catch this type of issue with TS, which is suuuper unfortunate.\r\n\r\nHonestly, I really wish that React _didn't_ crash here. IMO, it's unlikely that most _expect_ a return value to do anything at all. For example, inline callbacks:\r\n\r\n```js\r\n// returns whatever `doSomething` returns, or false, but I wouldn't expect the return value to do anything\r\n\r\nuseEffect( () => checkSomething && doSomething() );\r\n```","updated_at":"2023-07-06T21:10:13Z","created_at":"2023-07-06T21:10:13Z","creator_user_login":"noahtallen"}
{"number":26277,"comment_id":"1453004237","body":"this is an example of passing the initializer function to set state from the react docts beta\r\n\r\n```\r\nimport { useState } from 'react';\r\n\r\nfunction createInitialTodos() {\r\n  const initialTodos = [];\r\n  for (let i = 0; i < 50; i++) {\r\n    initialTodos.push({\r\n      id: i,\r\n      text: 'Item ' + (i + 1)\r\n    });\r\n  }\r\n  return initialTodos;\r\n}\r\n\r\nexport default function TodoList() {\r\n  const [todos, setTodos] = useState(createInitialTodos);\r\n  const [text, setText] = useState('');\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        value={text}\r\n        onChange={e => setText(e.target.value)}\r\n      />\r\n      <button onClick={() => {\r\n        setText('');\r\n        setTodos([{\r\n          id: todos.length,\r\n          text: text\r\n        }, ...todos]);\r\n      }}>Add</button>\r\n      <ul>\r\n        {todos.map(item => (\r\n          <li key={item.id}>\r\n            {item.text}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n```\r\n\r\nI am not sure why createCards() function is not initializing properly\r\n","updated_at":"2023-03-03T05:40:16Z","created_at":"2023-03-03T05:40:16Z","creator_user_login":"Dave-Patsy"}
{"number":26277,"comment_id":"1454937213","body":"Hi @Dave-Patsy \r\nLooks like your question more Next.js related rather than react. When the client props don't match server props after hydration - it's means that server pre-rendering took place. This is a part of optimisation that Next.js doing even for \"client\" components. So, basically \"client\" components is pre-rendered due to ssr. If you want completely \"client\" component. You should lazily import component with option `ssr: false`. \r\n```\r\nimport dynamic from 'next/dynamic'\r\n\r\nconst Memory = dynamic(() => import('./components/memory'), { ssr: false });\r\n```\r\nI've did it an the problem is gone\r\n\r\n","updated_at":"2023-03-05T00:32:05Z","created_at":"2023-03-05T00:32:05Z","creator_user_login":"Werter12"}
{"number":26320,"comment_id":"1457250775","body":"Hi @catamphetamine ,\r\nYou're using strict mode, and `useInsertionEffect` does not mount twice the way `useLayoutEffect` and `useEffect` do. ","updated_at":"2023-03-07T00:11:35Z","created_at":"2023-03-07T00:11:35Z","creator_user_login":"egonSchiele"}
{"number":26320,"comment_id":"1459591097","body":"@egonSchiele \r\n\r\n> You're using strict mode, and `useInsertionEffect` does not mount twice the way `useLayoutEffect` and `useEffect` do.\r\n\r\nThanks, but why doesn't it though?\r\nDon't you consider it a bug?\r\nThey're all \"effect\"s, so why does their behavior differ in strict mode?\r\nThat makes no sense and `useInsertionEffect()` isn't supposed to be anything \"special\": \r\n\r\n> `useInsertionEffect` is a version of [useEffect](https://beta.reactjs.org/reference/react/useEffect) that fires before any DOM mutations.\r\n\r\nFrom the official docs:\r\nhttps://beta.reactjs.org/reference/react/useInsertionEffect\r\n\r\nSo I consider the current behavior a bug.","updated_at":"2023-03-08T06:00:50Z","created_at":"2023-03-08T06:00:50Z","creator_user_login":"catamphetamine"}
{"number":26320,"comment_id":"1459601306","body":"Looks like in the current versions of React, the only workaround for the \"strict\" mode would be modifying the effect hooks like this:\r\n\r\n```js\r\nimport { useRef, useCallback } from 'react'\r\n\r\n// A workaround for a React bug when `useInsertionEffect()` doesn't run twice on mount\r\n// in \"strict\" mode unlike `useEffect()` and `useLayoutEffect()` do.\r\n// https://github.com/facebook/react/issues/26320\r\nexport default function useEffectDontMountTwiceInStrictMode(useEffect, handler, dependencies) {\r\n  if (!Array.isArray(dependencies)) {\r\n    throw new Error('Dependencies argument must be an array')\r\n  }\r\n\r\n  const { onEffect } = useEffectStatus()\r\n  const { onChange } = usePrevousValue(dependencies)\r\n\r\n  useEffect(() => {\r\n    const { isInitialRun } = onEffect()\r\n    const previousDependencies = onChange(dependencies)\r\n    if (isInitialRun || !isShallowEqualArrays(previousDependencies, dependencies)) {\r\n      const cleanUpFunction = handler()\r\n      if (typeof cleanUpFunction === 'function') {\r\n        throw new Error('An effect can\\'t return a clean-up function when used with `useEffectDontMountTwiceInStrictMode()` because the clean-up function won\\'t behave correctly in that case')\r\n      }\r\n    }\r\n  }, dependencies)\r\n}\r\n\r\nfunction useEffectStatus() {\r\n  const hasMounted = useRef(false)\r\n\r\n  const onEffect = useCallback(() => {\r\n    const wasAlreadyMounted = hasMounted.current\r\n    hasMounted.current = true\r\n    return {\r\n      isInitialRun: !wasAlreadyMounted\r\n    }\r\n  }, [])\r\n\r\n  return {\r\n    onEffect\r\n  }\r\n}\r\n\r\nfunction usePrevousValue(value) {\r\n  const prevValue = useRef(value)\r\n\r\n  const onChange = useCallback((value) => {\r\n    const previousValue = prevValue.current\r\n    prevValue.current = value\r\n    return previousValue\r\n  }, [])\r\n\r\n  return {\r\n    onChange\r\n  }\r\n}\r\n\r\nfunction isShallowEqualArrays(a, b) {\r\n  if (a.length !== b.length) {\r\n    return false\r\n  }\r\n  let i = 0\r\n  while (i < a.length) {\r\n    if (a[i] !== b[i]) {\r\n      return false\r\n    }\r\n    i++\r\n  }\r\n  return true\r\n}\r\n```\r\n\r\n```js\r\nimport { useLayoutEffect } from 'react'\r\n\r\nfunction Component() {\r\n  useEffectDontMountTwiceInStrictMode(useLayoutEffect, handler, dependencies)\r\n}\r\n```\r\n\r\nFor example, in my case, a library uses `useInsertionEffect()` / `useLayoutEffect()` to squeeze into that tiny timeframe in order to accept some calls from child components' `useLayoutEffect()`s, so `1:1` calls correspondence is a requirement.","updated_at":"2023-03-23T01:15:11Z","created_at":"2023-03-08T06:14:14Z","creator_user_login":"catamphetamine"}
{"number":26320,"comment_id":"1460187532","body":"I think you are correct, it needs to mount twice. I am working on this bug now and the discussion is happening here https://github.com/facebook/react/pull/26332","updated_at":"2023-03-08T13:53:05Z","created_at":"2023-03-08T13:53:05Z","creator_user_login":"egonSchiele"}
{"number":26320,"comment_id":"1462096534","body":"@egonSchiele Wow, that was quick, thanks 👍","updated_at":"2023-03-09T13:45:39Z","created_at":"2023-03-09T13:45:39Z","creator_user_login":"catamphetamine"}
{"number":26327,"comment_id":"1456486373","body":"I'm not sure this is a react bug or a chrome canary bug.\r\nBut because I cannot repro with simple html I decided to open issue here first.","updated_at":"2023-03-06T16:40:13Z","created_at":"2023-03-06T16:40:13Z","creator_user_login":"lazybean"}
{"number":26327,"comment_id":"1457802990","body":"\r\n\r\n\r\nimport \"./styles.css\";\r\nimport React, { useState } from \"react\";\r\nexport default function App() {\r\n  const [value, setValue] = useState(\"\");\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Hello CodeSandbox</h1>\r\n      <h2>Start editing to see some magic happen!</h2>\r\n\r\n      <input\r\n        onChange={(e) => setValue(e.target.value)}\r\n        type=\"text\"\r\n        placeholder=\"Enter your name\"\r\n        value={value}\r\n      />\r\n    </div>\r\n  );\r\n}","updated_at":"2023-03-07T09:05:07Z","created_at":"2023-03-07T09:05:07Z","creator_user_login":"KrishKuChhabra"}
{"number":26327,"comment_id":"1461667922","body":"I have the same issue:\r\n\r\n<img width=\"845\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1168252/223981840-8121518f-ed56-47c8-be8c-e31f90449f38.png\">\r\n\r\nopening https://codesandbox.io/s/chrome-canary-placeholder-bug-ez4je3?file=/src/App.js\r\n","updated_at":"2023-03-09T09:39:20Z","created_at":"2023-03-09T09:39:20Z","creator_user_login":"sunsations"}
{"number":26327,"comment_id":"1465187750","body":"![image](https://user-images.githubusercontent.com/55779046/224545330-2a870e46-822d-4a2a-ae45-37d661f926e3.png)\r\n\r\nI guess it's a canary bug\r\n(Left: Edge | Right: Canary)","updated_at":"2023-03-12T12:43:50Z","created_at":"2023-03-12T12:43:50Z","creator_user_login":"mrb1nary"}
{"number":26327,"comment_id":"1465821528","body":"See https://chromium-review.googlesource.com/c/chromium/src/+/4329778","updated_at":"2023-03-13T09:50:40Z","created_at":"2023-03-13T09:50:40Z","creator_user_login":"gkienhuis"}
{"number":26327,"comment_id":"1476753366","body":"> I'm not sure this is a react bug or a chrome canary bug.\r\n> But because I cannot repro with simple html I decided to open issue here first.\r\n\r\nNot a React bug. Plain HTML has the same issue. Seems to be Canary-specific.\r\n\r\n`<input placeholder=\"This is the placeholder\" value=\"foobar\" />`\r\n\r\nI see this in Canary Version 113.0.5629.0 (Official Build) canary (arm64), but I don't see it on Chrome Version 110.0.5481.177 (Official Build) (arm64) and FireFox 110.0 (64-bit). All these checks were done on on macOS 13.2.1 (22D68).","updated_at":"2023-03-20T18:42:51Z","created_at":"2023-03-20T18:42:51Z","creator_user_login":"stefcameron"}
{"number":26260,"comment_id":"1448054076","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: b2ae9ddb3b497d16a7c27c051da1827d08871138...c2e75501a570ffa895d150f832c73484eeaf173c\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/c2e75501a570ffa895d150f832c73484eeaf173c/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=b2ae9ddb3b497d16a7c27c051da1827d08871138) | **=** | 155.25 kB | 155.25 kB | = | 48.98 kB | 48.98 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/c2e75501a570ffa895d150f832c73484eeaf173c/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=b2ae9ddb3b497d16a7c27c051da1827d08871138) | **=** | 157.24 kB | 157.24 kB | = | 49.64 kB | 49.64 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/c2e75501a570ffa895d150f832c73484eeaf173c/files/facebook-www/ReactDOM-prod.classic.js?compare=b2ae9ddb3b497d16a7c27c051da1827d08871138) | **=** | 532.50 kB | 532.50 kB | = | 94.85 kB | 94.85 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/c2e75501a570ffa895d150f832c73484eeaf173c/files/facebook-www/ReactDOM-prod.modern.js?compare=b2ae9ddb3b497d16a7c27c051da1827d08871138) | **=** | 516.42 kB | 516.42 kB | = | 92.45 kB | 92.45 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against c2e75501a570ffa895d150f832c73484eeaf173c\n</p>\n","updated_at":"2023-02-28T11:55:36Z","created_at":"2023-02-28T11:55:36Z","creator_user_login":"react-sizebot"}
{"number":26260,"comment_id":"1448067735","body":"After the fix, the expected results were obtained both when using the `--sourceMaps` flag and when not using it.\r\n\r\nhttps://user-images.githubusercontent.com/38753204/221849636-04d9ec81-6216-461f-bf78-ff2245191ecd.mp4\r\n\r\n","updated_at":"2023-02-28T12:06:52Z","created_at":"2023-02-28T12:04:56Z","creator_user_login":"XYShaoKang"}
{"number":26254,"comment_id":"1446329693","body":"Hi @bhbs! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326254). Thanks!","updated_at":"2023-02-27T13:30:46Z","created_at":"2023-02-27T13:30:46Z","creator_user_login":"facebook-github-bot"}
{"number":26254,"comment_id":"1446387646","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-27T14:09:39Z","created_at":"2023-02-27T14:09:39Z","creator_user_login":"facebook-github-bot"}
{"number":26254,"comment_id":"1446387777","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-27T14:09:43Z","created_at":"2023-02-27T14:09:43Z","creator_user_login":"facebook-github-bot"}
{"number":26254,"comment_id":"1447492720","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 6ff1733e63fdb948ae973a713741b4526102c73c...65b326a7abc28810e03cc95e06eab125ac387197\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/65b326a7abc28810e03cc95e06eab125ac387197/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=6ff1733e63fdb948ae973a713741b4526102c73c) | **=** | 155.25 kB | 155.26 kB | +0.02% | 48.98 kB | 48.99 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/65b326a7abc28810e03cc95e06eab125ac387197/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=6ff1733e63fdb948ae973a713741b4526102c73c) | **=** | 157.24 kB | 157.25 kB | +0.02% | 49.64 kB | 49.65 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/65b326a7abc28810e03cc95e06eab125ac387197/files/facebook-www/ReactDOM-prod.classic.js?compare=6ff1733e63fdb948ae973a713741b4526102c73c) | **=** | 532.63 kB | 532.65 kB | = | 94.88 kB | 94.88 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/65b326a7abc28810e03cc95e06eab125ac387197/files/facebook-www/ReactDOM-prod.modern.js?compare=6ff1733e63fdb948ae973a713741b4526102c73c) | **=** | 516.55 kB | 516.57 kB | = | 92.47 kB | 92.48 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 65b326a7abc28810e03cc95e06eab125ac387197\n</p>\n","updated_at":"2023-02-28T02:55:48Z","created_at":"2023-02-28T02:55:48Z","creator_user_login":"react-sizebot"}
{"number":26181,"comment_id":"1433598026","body":"~Where can I see server and client console output in the repro?~\r\n\r\n~I think you need to bundle the React packages instead of loading them via CDN. Have you tried removing them and then add `import * as ReactDOM from 'react-dom/client'` to `client.js`?~","updated_at":"2023-02-16T19:47:32Z","created_at":"2023-02-16T19:22:59Z","creator_user_login":"eps1lon"}
{"number":26181,"comment_id":"1433613830","body":"I think this is caused by a missing `head` tag. The browser will always insert that element but then React tries to hydrate a `body` into the `head` from the user agent. Once you've added a `head` tag I get no more hydration mismatch: https://codesandbox.io/p/sandbox/react-lazy-suspense-hydration-mismatch-forked-cwkpd8?file=%2Fsrc%2FApp.js&selection=%5B%7B%22endColumn%22%3A1%2C%22endLineNumber%22%3A16%2C%22startColumn%22%3A1%2C%22startLineNumber%22%3A15%7D%5D\r\n\r\nCan you confirm this works for you?\r\n\r\nIf that was indeed the cause, we should warn about a missing `head` inside `html`.","updated_at":"2023-02-16T19:38:19Z","created_at":"2023-02-16T19:37:45Z","creator_user_login":"eps1lon"}
{"number":26181,"comment_id":"1433626145","body":"Yes, I see that fixes the issue in this case. This was an attempt to reproduce a bug I have in a larger, private repo. I'll keep tweaking it and see if I can create a better reproduction.\r\n","updated_at":"2023-02-16T19:49:34Z","created_at":"2023-02-16T19:49:34Z","creator_user_login":"spudly"}
{"number":26181,"comment_id":"1452028182","body":"Just a quick update to let you know this issue is not dead.\r\n\r\nI'm think my problem is related to #24384 and the associated fix, #24404.\r\n\r\nThis has been incredibly difficult to debug. I'm still working on creating a minimal repro.","updated_at":"2023-03-02T15:09:44Z","created_at":"2023-03-02T15:09:44Z","creator_user_login":"spudly"}
{"number":26181,"comment_id":"1452472569","body":"OK, here we go. I think I've nailed the bug down this time and have a minimal repro that shows the issue, which is that lazy components with siblings that are NOT wrapped in suspense boundaries result in a hydration mismatch error.\r\n\r\nRepro: https://codepen.io/spudly_1470322188/pen/ZEMKEgY\r\n\r\n# Steps To Reproduce\r\n\r\n1. open the link above\r\n2. open the developer console\r\n3. observe hydration errors in console\r\n\r\n# Workarounds\r\n\r\nAs best as I can tell, when you encounter this issue, you have 3 options:\r\n\r\n1. Wrap the suspended component AND the sibling with a suspense boundary (note: this won't work in the sandbox because it generates different html on the backend)\r\n2. Stop using react lazy, so suspense is no longer involved. In the case of this repro, this means that in <App /> you change it to render <RedToBlue /> instead of <LazyRedToBlue />\r\n3. Remove the sibling element\r\n\r\nBoth the 1st and 2nd options change the render priority of the components in undesirable ways. The 1st changes high priority components to low priority, and the second changes low priority components to high priority. The third option is just not an option in real-world scenarios.","updated_at":"2023-03-02T20:01:12Z","created_at":"2023-03-02T20:01:12Z","creator_user_login":"spudly"}
{"number":26181,"comment_id":"1477777522","body":"@eps1lon , have a chance to review the updated repro?","updated_at":"2023-03-21T12:46:03Z","created_at":"2023-03-21T12:46:03Z","creator_user_login":"spudly"}
{"number":26181,"comment_id":"1584407219","body":"anybody?","updated_at":"2023-06-09T11:13:08Z","created_at":"2023-06-09T11:13:08Z","creator_user_login":"spudly"}
{"number":26174,"comment_id":"1432618080","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fccf3a9fba5fd778c678657c556344b333111cfb...23e98e59f5dd62f4d03f825021bbedd499896d19\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/23e98e59f5dd62f4d03f825021bbedd499896d19/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **=** | 154.54 kB | 154.54 kB | = | 48.83 kB | 48.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/23e98e59f5dd62f4d03f825021bbedd499896d19/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **=** | 156.54 kB | 156.54 kB | = | 49.45 kB | 49.45 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/23e98e59f5dd62f4d03f825021bbedd499896d19/files/facebook-www/ReactDOM-prod.classic.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **=** | 529.73 kB | 529.73 kB | = | 94.36 kB | 94.36 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/23e98e59f5dd62f4d03f825021bbedd499896d19/files/facebook-www/ReactDOM-prod.modern.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **=** | 514.95 kB | 514.95 kB | = | 92.17 kB | 92.17 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 23e98e59f5dd62f4d03f825021bbedd499896d19\n</p>\n","updated_at":"2023-02-17T03:55:57Z","created_at":"2023-02-16T07:03:39Z","creator_user_login":"react-sizebot"}
{"number":26174,"comment_id":"1474771630","body":"@eps1lon this is good to go i guess!","updated_at":"2023-03-18T08:28:35Z","created_at":"2023-03-18T08:28:35Z","creator_user_login":"Biki-das"}
{"number":26284,"comment_id":"1453136435","body":"It seems to be related to the new architecture of `React18`, but I'm not entirely sure. However, there is a workaround available.\r\n\r\nYour code may not be the best approach to rendering two components synchronously using `useRef` and` useState`. The move event will immediately trigger the ref update, changing the style of the DOM, but `setState` will not.\r\n\r\n## workaround\r\nTo fix this issue, you should listen to the moveEvent, trigger `setState`, and then update the `ref` using setState.\"\r\n1. listen the `moveEvent`\r\n2. trigger `setState`\r\n3. update `ref` by `setState`\r\n\r\n```\r\n const [{ x, y }, setCoords] = useState({ x: 0, y: 0 });\r\n  const ref1 = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousemove\", (e) => {\r\n      setCoords({ x: e.clientX, y: e.clientY });\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (ref1.current) {\r\n      ref1.current.style.top = y + \"px\";\r\n      ref1.current.style.left = x + \"px\";\r\n    }\r\n  }, [x, y]);\r\n```\r\n","updated_at":"2023-03-03T08:16:17Z","created_at":"2023-03-03T08:10:36Z","creator_user_login":"Circkoooooo"}
{"number":26284,"comment_id":"1453292865","body":"@Circkoooooo Thanks for your answer!\r\n\r\nI am not exactly sure, but in theory your solution sounds like \"make blue square slower, so it wil be synchonous to the red square\", but my initial problem (in my project) was that I was using this technic to show some floating element over canvas, the problem begins when you start dragging the canvas and updating floating coordinates, canvas drags without lag, but the floating element has noticable delay.\r\n\r\nAnd this two examples was just to show that there was no difference in updating coordinates with react's `useState` and using dom element itself.\r\n\r\nI tested yur solution, but that does work in my implementation Here is the link: [suggested workaround](https://codesandbox.io/s/bold-wave-l9zpqk) \r\nBut, as I said, seems that I just made blue quare a little bit slower, the user expierence become worse :(","updated_at":"2023-03-03T10:20:37Z","created_at":"2023-03-03T10:17:27Z","creator_user_login":"blnvdanil"}
{"number":26240,"comment_id":"1444952518","body":"It looks like you meant to include a link to the repro, but may have left it out by accident. ","updated_at":"2023-02-25T02:35:54Z","created_at":"2023-02-25T02:35:54Z","creator_user_login":"davidmccabe"}
{"number":26240,"comment_id":"1444991686","body":"this is a private repo so I cannot provide it.  Even providing it won't help since its a very large one and I cannot repo this consistently or come up with a simple example for here.  But it happened enough times that more than one user was able to see this behavior including myself and I was able to debug it in this special state in production with sourcemaps on and Chrome devtools debugger.\r\n\r\nBut I have gathered enough evidence outlined above that I believe with high confidence it isn't a bug in the code, so it must be some react issue.  I understand that without a proper repo this is unlikely to be fixed, however I still want to file this bug in case someone else run into this issue.","updated_at":"2023-02-25T04:49:36Z","created_at":"2023-02-25T04:47:23Z","creator_user_login":"bugzpodder"}
{"number":26240,"comment_id":"1446328283","body":"Hi @bugzpodder I have come across this ghost child issue myself. This happens whenever we render a list without key props or non-unique keys passed to multiple elements, Can you please check if all key prop you are passing to the elements is unique to each element in the list?","updated_at":"2023-02-27T13:29:39Z","created_at":"2023-02-27T13:29:39Z","creator_user_login":"hhkk28"}
{"number":26482,"comment_id":"1484079225","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: d12bdcda69afd219f4d91cbd60d6fae2a375d35b...fb66d4d453117fcef58b48085eebfba8f7aff2ba\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/fb66d4d453117fcef58b48085eebfba8f7aff2ba/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=d12bdcda69afd219f4d91cbd60d6fae2a375d35b) | **=** | 162.46 kB | 162.46 kB | = | 51.36 kB | 51.36 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/fb66d4d453117fcef58b48085eebfba8f7aff2ba/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=d12bdcda69afd219f4d91cbd60d6fae2a375d35b) | **=** | 164.20 kB | 164.20 kB | = | 51.87 kB | 51.87 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/fb66d4d453117fcef58b48085eebfba8f7aff2ba/files/facebook-www/ReactDOM-prod.classic.js?compare=d12bdcda69afd219f4d91cbd60d6fae2a375d35b) | **=** | 554.39 kB | 554.39 kB | = | 98.25 kB | 98.25 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/fb66d4d453117fcef58b48085eebfba8f7aff2ba/files/facebook-www/ReactDOM-prod.modern.js?compare=d12bdcda69afd219f4d91cbd60d6fae2a375d35b) | **=** | 538.12 kB | 538.12 kB | = | 95.82 kB | 95.82 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against fb66d4d453117fcef58b48085eebfba8f7aff2ba\n</p>\n","updated_at":"2023-03-26T12:17:02Z","created_at":"2023-03-26T12:17:02Z","creator_user_login":"react-sizebot"}
{"number":26482,"comment_id":"1484111553","body":"@dahalapaar As of now the react team is preety busy, typo fix are absolutely contributions, but as of now the focus is more on solving currently existing bugs or something that you can find on react itself .","updated_at":"2023-03-26T14:22:02Z","created_at":"2023-03-26T14:22:02Z","creator_user_login":"Biki-das"}
{"number":26555,"comment_id":"1497531694","body":"Hi @sayn-mondal! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326555). Thanks!","updated_at":"2023-04-05T13:56:44Z","created_at":"2023-04-05T13:56:44Z","creator_user_login":"facebook-github-bot"}
{"number":26555,"comment_id":"1497540718","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: d5fd60f7e663a5cee61636f8f2dd174efa0fb2f0...147dffe5b19e75509503edaf5888579d9108fb9a\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/147dffe5b19e75509503edaf5888579d9108fb9a/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=d5fd60f7e663a5cee61636f8f2dd174efa0fb2f0) | **=** | 166.37 kB | 166.37 kB | = | 51.85 kB | 51.85 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/147dffe5b19e75509503edaf5888579d9108fb9a/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=d5fd60f7e663a5cee61636f8f2dd174efa0fb2f0) | **=** | 167.94 kB | 167.94 kB | = | 52.36 kB | 52.36 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/147dffe5b19e75509503edaf5888579d9108fb9a/files/facebook-www/ReactDOM-prod.classic.js?compare=d5fd60f7e663a5cee61636f8f2dd174efa0fb2f0) | **=** | 560.48 kB | 560.48 kB | = | 98.48 kB | 98.48 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/147dffe5b19e75509503edaf5888579d9108fb9a/files/facebook-www/ReactDOM-prod.modern.js?compare=d5fd60f7e663a5cee61636f8f2dd174efa0fb2f0) | **=** | 544.32 kB | 544.32 kB | = | 95.82 kB | 95.82 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 147dffe5b19e75509503edaf5888579d9108fb9a\n</p>\n","updated_at":"2023-04-05T14:01:37Z","created_at":"2023-04-05T14:01:37Z","creator_user_login":"react-sizebot"}
{"number":26555,"comment_id":"1497652877","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-04-05T15:09:00Z","created_at":"2023-04-05T15:09:00Z","creator_user_login":"facebook-github-bot"}
{"number":26414,"comment_id":"1472854710","body":"It's described in more detail here: https://react.dev/learn/preserving-and-resetting-state\r\n\r\nI agree it's not immediately obvious. The canonical solution for your case is to extract components like `SettingsForm` / `SignupForm`, for example.\r\n\r\nIt might be a good idea to mention it in \"conditional rendering\" but I'm worried it's a bit much at that stage. ","updated_at":"2023-03-16T22:37:44Z","created_at":"2023-03-16T22:37:44Z","creator_user_login":"gaearon"}
{"number":26414,"comment_id":"1472863271","body":"@gaearon thanks for the thoughtful reply!\r\n\r\nThis section definitely covers these issues: https://react.dev/learn/preserving-and-resetting-state#resetting-state-at-the-same-position\r\n\r\nThe only thing that doesn't seem clear to me is what is considered the identity of a native element. \"when you render a different component in the same position, it resets the state of its entire subtree\"\r\n\r\nIntuitively you'd think that different `type`s of `input`/`button` element would be considered different for the purposes of rendering. If it's literally just the element that's taken into consideration, then maybe the page could mention that and when that might be surprising (maybe using `submit`/`button` buttons as an example).\r\n\r\nHope this input is helpful!","updated_at":"2023-03-16T22:49:34Z","created_at":"2023-03-16T22:49:34Z","creator_user_login":"johtso"}
{"number":26414,"comment_id":"1472881933","body":"@gaearon also, this was the use case:\r\n\r\nhttps://user-images.githubusercontent.com/830800/225771356-fbe25006-837e-4b14-bd2e-96d4198d38e5.mov\r\n\r\nhttps://gist.github.com/johtso/df763fbe9d9f50967e94e007f3091d42\r\n\r\nThere's obviously lots of ways I could have modelled this that _wouldn't_ have stumbled into this issue. I could have just hidden the password field instead of not rendering it, and used a `value` on the submit button to help the server distinguish the type of login.\r\n\r\nTo be honest I'm still not clear on how React models the \"tree\" to decide if a element is in the same place as a previous element. Looking at my implementation I still don't see why the presence of the `password` input field affects the identity / position in the tree of the two buttons.","updated_at":"2023-03-16T23:11:56Z","created_at":"2023-03-16T23:11:56Z","creator_user_login":"johtso"}
{"number":26424,"comment_id":"1474991739","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 842bd787a55df9a93c4c6e0f9b003f100c564b5e...5b71fafc273dd182a75c98a2c7bb5b6979d2d7f9\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5b71fafc273dd182a75c98a2c7bb5b6979d2d7f9/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=842bd787a55df9a93c4c6e0f9b003f100c564b5e) | **=** | 157.77 kB | 157.77 kB | = | 50.28 kB | 50.28 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5b71fafc273dd182a75c98a2c7bb5b6979d2d7f9/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=842bd787a55df9a93c4c6e0f9b003f100c564b5e) | **=** | 159.36 kB | 159.36 kB | = | 50.79 kB | 50.79 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/5b71fafc273dd182a75c98a2c7bb5b6979d2d7f9/files/facebook-www/ReactDOM-prod.classic.js?compare=842bd787a55df9a93c4c6e0f9b003f100c564b5e) | **=** | 542.73 kB | 542.74 kB | = | 96.62 kB | 96.63 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/5b71fafc273dd182a75c98a2c7bb5b6979d2d7f9/files/facebook-www/ReactDOM-prod.modern.js?compare=842bd787a55df9a93c4c6e0f9b003f100c564b5e) | **=** | 526.47 kB | 526.47 kB | = | 94.16 kB | 94.16 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 5b71fafc273dd182a75c98a2c7bb5b6979d2d7f9\n</p>\n","updated_at":"2023-03-18T20:56:50Z","created_at":"2023-03-18T20:56:50Z","creator_user_login":"react-sizebot"}
{"number":26424,"comment_id":"1474997148","body":"Also, can we add this tool ([typos](https://github.com/crate-ci/typos)) to the CI or as a pre-commit hook?\r\nThis should avoid typos in public APIs that could be time-consuming to rename. We know we would need to first deprecate the old API by introducing a new one with a typo fix; then, we can remove the older one entirely after a few releases.\r\n\r\nWe can set up the _typos_ workflow by keeping the _typos.toml_ config that allows us to skip dirs, files, files w/ specific extensions, and repo-specific spell rules like (react uses `seeked` and `onSeeked` etc. that syntactically are typos yet they can be skipped), etc...\r\n\r\nEdit: ping @gaearon ","updated_at":"2023-03-20T14:58:11Z","created_at":"2023-03-18T21:22:15Z","creator_user_login":"Pranav-yadav"}
{"number":26424,"comment_id":"1476830878","body":"Yeah. I get that part, but you did consider that _this PR aims to fix **all** of the Typos_ in the **\"whole react codebase at once\"**!!\r\n\r\nTalking about noise in commit history;\r\n- this PR actually aims to reduce any _future noise_ from typo-fix PR**s** (plural)\r\n- since the # of future typo fix PRs could be completely reduced to `0`\r\n- they will keep opening PR**s** for typos as soon as they see those.\r\n- and which creates extra noise in issues and PRs making it difficult to handle and manage for the team.\r\n- I see a ton of noise coming in the future from such PRs and issues.\r\n\r\nBtw, since all PRs are merged as squashing commits, so I don't see the point of noise from single commit (If you want I can force push this branch by squashing all commits or make the PR description a single line like \"Fix all typos using typos tool\" or even two words \"Fix typos\", to reduce further noise in history)\r\n\r\nThere also exists a hard way to merge all changes yet achieve _zero noise_ in history but it would again mean we're _polluting_ existing commit history by _amend_-ing changes to existing commits in each file resp. (w/ _force push_), which seems unprofessional and kind of useless.\r\n\r\n Do discuss this (_the above bullets_) with the **team** and Lmk, also I've no issues reverting typo fixes in comments.","updated_at":"2023-03-20T19:41:04Z","created_at":"2023-03-20T19:41:04Z","creator_user_login":"Pranav-yadav"}
{"number":26436,"comment_id":"1476261885","body":"Hi @justEhmadSaeed! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326436). Thanks!","updated_at":"2023-03-20T13:44:23Z","created_at":"2023-03-20T13:44:23Z","creator_user_login":"facebook-github-bot"}
{"number":26436,"comment_id":"1476270537","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: c57b90f50d3b7d643e2f8ae16cf22ae1861bc19e...b52d4be64afe6aa45d8fbf91a175aabcabd12977\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/b52d4be64afe6aa45d8fbf91a175aabcabd12977/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=c57b90f50d3b7d643e2f8ae16cf22ae1861bc19e) | **=** | 157.77 kB | 157.77 kB | = | 50.28 kB | 50.28 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/b52d4be64afe6aa45d8fbf91a175aabcabd12977/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=c57b90f50d3b7d643e2f8ae16cf22ae1861bc19e) | **=** | 159.36 kB | 159.36 kB | = | 50.79 kB | 50.79 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/b52d4be64afe6aa45d8fbf91a175aabcabd12977/files/facebook-www/ReactDOM-prod.classic.js?compare=c57b90f50d3b7d643e2f8ae16cf22ae1861bc19e) | **=** | 542.73 kB | 542.73 kB | = | 96.62 kB | 96.62 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/b52d4be64afe6aa45d8fbf91a175aabcabd12977/files/facebook-www/ReactDOM-prod.modern.js?compare=c57b90f50d3b7d643e2f8ae16cf22ae1861bc19e) | **=** | 526.47 kB | 526.47 kB | = | 94.16 kB | 94.16 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against b52d4be64afe6aa45d8fbf91a175aabcabd12977\n</p>\n","updated_at":"2023-03-20T14:36:37Z","created_at":"2023-03-20T13:49:48Z","creator_user_login":"react-sizebot"}
{"number":26436,"comment_id":"1476343303","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-20T14:32:23Z","created_at":"2023-03-20T14:32:23Z","creator_user_login":"facebook-github-bot"}
{"number":26460,"comment_id":"1594627050","body":"For the RTK Query example the idiomatic way would to be to fork the createQuery implementation into a “react-server” specific implementation.\r\n\r\n```\r\nexports: {\r\n  “query/react”: {\r\n    “react-server”: “./query/react-server.js”,\r\n    “default”: “./query/react.js”\r\n  }\r\n}\r\n```\r\n\r\nThe import and api can work the same way in both environments from the consumers perspective.\r\n\r\nWhen calling the react-server version of createApi it can generate a stub version of the Hook which throws a helpful error when used in Server Components or just exclude it all together.\r\n\r\nThe principle that underlines this is static optimization of various combinations. In the ecosystem we shouldn’t have to boot code that includes all possible runtime branches. We will also move to use export conditions for production/development for example to support ESM for similar reasons.\r\n\r\nThis goes both ways that the client shouldn’t have to download server specific things for the branches that uses server-only things but the server also shouldn’t have to boot a bunch of code that isn’t relevant on the server.\r\n\r\nSo that’s why it’s worth having two separate implementations/entry points to the api that can each be optimal.\r\n\r\nYes, it’s a burden to library authors to optimize code but it’s a one time thing that helps the end user at the end of the day.","updated_at":"2023-06-16T12:50:38Z","created_at":"2023-06-16T12:50:38Z","creator_user_login":"sebmarkbage"}
{"number":26460,"comment_id":"1594647304","body":"For the Apollo section questions:\r\n\r\n> how to have a piece of code that will definitely be executed per request on the server, and once on the client? An equivalent of just writing code in front of root.render?\r\n\r\n```\r\nconst getSingleton = React.cache(() => {\r\n  return new PerRequestThing();\r\n});\r\n```\r\n\r\nThis won’t necessarily give you a single one on the client since the client cache can be refreshed but that might actually be a feature you want. For other cases you can use a module level variable only on the client but it really depends on how you’re getting this because it has to be called inside React render for it to be contextual to a request.\r\n\r\nNot sure how you’re thinking about the rest of the api.\r\n\r\n> how to create components that are meant to be rendered client-side, but not by importing a file, but by calling a method?\r\n\r\nIf the component is meant to execute during SSR and then hydrate, it’s a client component and it works the same. As long as it’s used in a client component scope.\r\n\r\nIt doesn’t work to have a library generate a client component from a server component on the fly thought. The code for them must be built by the bundler and we have to know to be build them before it happens. So this doesn’t really work in the general sense without the user placing its code somewhere behind a “use client” in the bundler graph.\r\n\r\n> is there a way of forcing a certain component to be rendered both on the server and on the client?\r\n\r\nNot sure what this means. Is it referring to “SSR” then it’s just a client component.","updated_at":"2023-06-16T13:05:52Z","created_at":"2023-06-16T13:05:52Z","creator_user_login":"sebmarkbage"}
{"number":26460,"comment_id":"1594656701","body":"@sebmarkbage thanks for the Apollo-part answers, but I think we can ignore that part, which is why I collapsed it :)\r\nThe \"Apollo\" part has already been answered in depth and we have a RSC-ready Apollo Client companion package over here: https://github.com/apollographql/apollo-client-nextjs (also see the [related RFC](https://github.com/apollographql/apollo-client-nextjs/pull/9))","updated_at":"2023-06-16T15:03:20Z","created_at":"2023-06-16T13:12:18Z","creator_user_login":"phryneas"}
{"number":26438,"comment_id":"1476414900","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 9c54b29b44d24f8f8090da9c7ebf569747a444df...baaf29beced1cf7a53673182845a9915fcc36614\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/baaf29beced1cf7a53673182845a9915fcc36614/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=9c54b29b44d24f8f8090da9c7ebf569747a444df) | **=** | 159.33 kB | 159.33 kB | = | 50.47 kB | 50.47 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/baaf29beced1cf7a53673182845a9915fcc36614/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=9c54b29b44d24f8f8090da9c7ebf569747a444df) | **=** | 161.07 kB | 161.07 kB | = | 50.98 kB | 50.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/baaf29beced1cf7a53673182845a9915fcc36614/files/facebook-www/ReactDOM-prod.classic.js?compare=9c54b29b44d24f8f8090da9c7ebf569747a444df) | **=** | 546.16 kB | 546.16 kB | = | 96.84 kB | 96.84 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/baaf29beced1cf7a53673182845a9915fcc36614/files/facebook-www/ReactDOM-prod.modern.js?compare=9c54b29b44d24f8f8090da9c7ebf569747a444df) | **=** | 529.86 kB | 529.86 kB | = | 94.38 kB | 94.38 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against baaf29beced1cf7a53673182845a9915fcc36614\n</p>\n","updated_at":"2023-03-23T15:36:05Z","created_at":"2023-03-20T15:12:47Z","creator_user_login":"react-sizebot"}
{"number":26438,"comment_id":"1476905007","body":"I was surprised that CI didn't catch this, because it's supposed to error if there's no matching message in that file. But then I realized this error only occurs in a server build, where we don't replace error messages with codes.\r\n\r\nSo I think what you should do instead is delete this message from the map.","updated_at":"2023-03-20T20:42:51Z","created_at":"2023-03-20T20:42:51Z","creator_user_login":"acdlite"}
{"number":26438,"comment_id":"1477275749","body":"Exactly, I was also surprised by; why CI didn't fail at first place (catch it earlier).\n\nThanks for investigating.\nPushing...\n\nThanks :)\n\n---\n\nPS: will you take a quick look at this PR `#26424` comment https://github.com/facebook/react/pull/26424#issuecomment-1476830878\nI just want opinion from one more team member; there, before proceeding.","updated_at":"2023-03-21T04:48:53Z","created_at":"2023-03-21T04:47:28Z","creator_user_login":"Pranav-yadav"}
{"number":26438,"comment_id":"1481425771","body":"ping @acdlite \r\njust in case you missed the review req. ;)","updated_at":"2023-03-23T15:42:38Z","created_at":"2023-03-23T15:42:38Z","creator_user_login":"Pranav-yadav"}
{"number":26363,"comment_id":"1468147944","body":"I don't see a React bug, but I do see a few different issues going on:\r\n\r\n`< /AuthContext.Provider>` needs to be `</AuthContext.Provider>`.\r\n\r\nIn the second code snippet, you are using `useContext` at the top level, which is not allowed. Maybe you meant something like this?\r\n\r\n```typescript\r\nimport { Context, createContext, useEffect, useState, useContext } from \"react\";\r\nimport { AppSettings, AppSettingsContext } from \"./AppSettings\";\r\n// I mocked out AuthService here because I'm not sure what your code looks like\r\nimport AuthService from \"./AuthService\";\r\nexport const AuthContext: Context<AuthService> = createContext<AuthService>(\r\n  null!\r\n);\r\n\r\nexport const AuthProvider: React.FC<{ children: JSX.Element[] }> = ({\r\n  children,\r\n}) => {\r\n  let appSettings: AppSettings = useContext<AppSettings>(AppSettingsContext)!;\r\n  const [authService, setAuthService] = useState<AuthService>(\r\n    new AuthService(appSettings)\r\n  );\r\n\r\n  return (\r\n    <AuthContext.Provider value={authService}>{children}</AuthContext.Provider>\r\n  );\r\n};\r\n```\r\n\r\nFinally, `React.FC` is not recommended:\r\nhttps://github.com/facebook/create-react-app/pull/8177","updated_at":"2023-03-14T13:54:43Z","created_at":"2023-03-14T13:54:43Z","creator_user_login":"egonSchiele"}
{"number":26363,"comment_id":"1483916654","body":"Can you include a complete, minimal repro using https://www.typescriptlang.org/play?\r\n\r\nAlso please include the version of `typescript` and `@types/react` used (e.g. by using `yarn why @types/react`).","updated_at":"2023-03-25T20:36:33Z","created_at":"2023-03-25T20:36:33Z","creator_user_login":"eps1lon"}
{"number":26119,"comment_id":"1420816041","body":"> if the error would also log the problematic value\r\n\r\nCould you elaborate how we should log that value? Would you expect the name of the function?\r\n\r\n> This way I could know which value it is exactly in a single click in DevTools.\r\n\r\nCould you explain how you would that?","updated_at":"2023-02-07T13:56:21Z","created_at":"2023-02-07T13:56:21Z","creator_user_login":"eps1lon"}
{"number":26119,"comment_id":"1423820865","body":"> Could you elaborate how we should log that value? Would you expect the name of the function?\r\n\r\njust log the function reference itself\r\n\r\n> Could you explain how you would that?\r\n\r\n DevTools will pick up the logged reference and clicking on it will get me to the source","updated_at":"2023-02-09T08:38:29Z","created_at":"2023-02-09T08:38:29Z","creator_user_login":"roman01la"}
{"number":26010,"comment_id":"1413095536","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: e6fae308e9300ca545003ac147cc7e4e541f561c...68f12137d153618945b8450332c8710af4e147bb\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/68f12137d153618945b8450332c8710af4e147bb/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 164.23 kB | 164.23 kB | = | 51.73 kB | 51.73 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/68f12137d153618945b8450332c8710af4e147bb/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 171.67 kB | 171.67 kB | = | 53.97 kB | 53.97 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/68f12137d153618945b8450332c8710af4e147bb/files/facebook-www/ReactDOM-prod.classic.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 570.12 kB | 570.12 kB | = | 100.58 kB | 100.58 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/68f12137d153618945b8450332c8710af4e147bb/files/facebook-www/ReactDOM-prod.modern.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 553.90 kB | 553.90 kB | = | 97.75 kB | 97.75 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js](https://react-builds.vercel.app/commits/68f12137d153618945b8450332c8710af4e147bb/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 42.64 kB | 42.53 kB | = | 9.62 kB | 9.62 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js](https://react-builds.vercel.app/commits/68f12137d153618945b8450332c8710af4e147bb/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 42.64 kB | 42.53 kB | = | 9.62 kB | 9.62 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js](https://react-builds.vercel.app/commits/68f12137d153618945b8450332c8710af4e147bb/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 42.64 kB | 42.53 kB | = | 9.62 kB | 9.62 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer.development.js](https://react-builds.vercel.app/commits/68f12137d153618945b8450332c8710af4e147bb/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer.development.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 42.51 kB | 42.40 kB | = | 9.60 kB | 9.60 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.development.js](https://react-builds.vercel.app/commits/68f12137d153618945b8450332c8710af4e147bb/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.development.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 42.51 kB | 42.40 kB | = | 9.60 kB | 9.60 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer.development.js](https://react-builds.vercel.app/commits/68f12137d153618945b8450332c8710af4e147bb/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer.development.js?compare=e6fae308e9300ca545003ac147cc7e4e541f561c) | **=** | 42.51 kB | 42.40 kB | = | 9.60 kB | 9.60 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 68f12137d153618945b8450332c8710af4e147bb\n</p>\n","updated_at":"2023-06-06T18:28:53Z","created_at":"2023-02-02T03:19:58Z","creator_user_login":"react-sizebot"}
{"number":26010,"comment_id":"1413197653","body":"These lines of code are duplicate `return children` in [#L764](https://github.com/facebook/react/blob/main/packages/react-noop-renderer/src/createReactNoop.js#L764) @gaearon @sebmarkbage @acdlite pls review, thx :)","updated_at":"2023-02-02T06:01:59Z","created_at":"2023-02-02T06:01:59Z","creator_user_login":"li-jia-nan"}
{"number":26069,"comment_id":"1413237522","body":"Same here, it's even happening with plain js. It seems not related to React itself.","updated_at":"2023-02-02T06:54:37Z","created_at":"2023-02-02T06:54:37Z","creator_user_login":"YagamiNewLight"}
{"number":26069,"comment_id":"1413295571","body":"@YagamiNewLight  I think This issue has already been resolved within react 18 , however I 'm not sure if there's a workaround for this in previous versions","updated_at":"2023-02-02T07:58:09Z","created_at":"2023-02-02T07:58:09Z","creator_user_login":"Elwazer007"}
{"number":26069,"comment_id":"1694263522","body":"@Elwazer007 @YagamiNewLight Not resolved with react 18.\r\nI have test React version: 18.2.0 and 16.14.0. \r\nAlso, I have seen the discuss issue: #15157 #16087 and others.\r\nSadly, The memory leak still happening.\r\nI can give a demo more obvious, the demo: https://codesandbox.io/s/admiring-khayyam-3s64gq?file=/src/App.tsx\r\n\r\nSteps To Reproduce:\r\n1. a simple demo can be found Here: https://codesandbox.io/s/admiring-khayyam-3s64gq?file=/src/App.tsx\r\n2. running GC and Take a heap snapshot\r\n![image](https://github.com/facebook/react/assets/6376429/b2a4c112-ff59-4a2f-ad7d-3e7df7c68189)\r\n3. Click 'open Modal click for test memory leak (has large input items)' and open modal\r\n4. focus any input item\r\n![image](https://github.com/facebook/react/assets/6376429/c00b87fa-5b4a-4213-95a2-ae97315c305e)\r\n5. close modal\r\n6. refresh state for click 'refresh state '\r\n7. running GC and Take a heap snapshot\r\n![image](https://github.com/facebook/react/assets/6376429/b0620fe4-6616-4d1b-b206-9a897f1d0cc3)\r\n\r\nand after that you can found large detached input element exist\r\n\r\nI cant sure its react bug or chrome bug. hope some one can help\r\n\r\nno one answer this, I create other  issue #27289 for attention","updated_at":"2023-08-27T03:19:39Z","created_at":"2023-08-26T11:05:00Z","creator_user_login":"mshmyw"}
{"number":26069,"comment_id":"1702989538","body":"It's actually a bug of chromium, here is the reference: https://bugs.chromium.org/p/chromium/issues/detail?id=866872\r\n\r\nAnd here's a trick regarding this issue: Creating another focused input with no data attached to it **before** removing your big focused input can min this memory leak issue.","updated_at":"2023-09-01T16:08:19Z","created_at":"2023-09-01T16:08:19Z","creator_user_login":"YagamiNewLight"}
{"number":26069,"comment_id":"1704025708","body":"very thanks @YagamiNewLight. \r\nAnd very appreciate if you can give an example for 'Creating another focused input with no data attached to it before removing your big focused input can min this memory leak issue'.\r\n\r\n","updated_at":"2023-09-03T06:33:24Z","created_at":"2023-09-03T06:32:44Z","creator_user_login":"mshmyw"}
{"number":26015,"comment_id":"1387444922","body":"Hi @DharmenderRajput! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326015). Thanks!","updated_at":"2023-01-18T17:23:00Z","created_at":"2023-01-18T17:23:00Z","creator_user_login":"facebook-github-bot"}
{"number":26015,"comment_id":"1387497367","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-01-18T18:08:14Z","created_at":"2023-01-18T18:08:14Z","creator_user_login":"facebook-github-bot"}
{"number":26015,"comment_id":"1541949786","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: a1f97589fd298cd71f97339a230f016139c7382f...3d83211348d952298db2ebf2f513d60148264f33\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/3d83211348d952298db2ebf2f513d60148264f33/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **=** | 164.23 kB | 164.23 kB | = | 51.77 kB | 51.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/3d83211348d952298db2ebf2f513d60148264f33/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **=** | 171.67 kB | 171.67 kB | = | 54.01 kB | 54.01 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/3d83211348d952298db2ebf2f513d60148264f33/files/facebook-www/ReactDOM-prod.classic.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **=** | 570.42 kB | 570.42 kB | = | 100.64 kB | 100.64 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/3d83211348d952298db2ebf2f513d60148264f33/files/facebook-www/ReactDOM-prod.modern.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **=** | 554.16 kB | 554.16 kB | = | 97.82 kB | 97.82 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 3d83211348d952298db2ebf2f513d60148264f33\n</p>\n","updated_at":"2023-05-30T02:42:44Z","created_at":"2023-05-10T11:02:34Z","creator_user_login":"react-sizebot"}
{"number":25961,"comment_id":"1373686914","body":"The native event doesn't bubble.\r\nBut the Synthetic Event bubbles react, this is explicitly covered in the test spec here https://github.com/facebook/react/blob/main/packages/react-dom/src/__tests__/ReactDOMEventPropagation-test.js#L777-L937\r\n\r\nSo this is not a bug in React.\r\n\r\nbut I don't have an answer why React does this, I guess this is for better consistency? It might be better to make most of the events bubble rather than have many events as non-bubble(which is the native HTML spec).\r\n\r\nYou can always use `stopPropagation()` on the synthetic event to handle it, so it should not harm.","updated_at":"2023-01-06T14:03:51Z","created_at":"2023-01-06T14:03:51Z","creator_user_login":"sunderls"}
{"number":25961,"comment_id":"1373720485","body":"If this is desired, is it worth documenting?","updated_at":"2023-01-06T14:39:01Z","created_at":"2023-01-06T14:39:01Z","creator_user_login":"cat-michael-gwynne"}
{"number":25961,"comment_id":"1374315600","body":"Agreed, maybe you can create a PR to update the doc here https://reactjs.org/docs/events.html","updated_at":"2023-01-07T00:47:28Z","created_at":"2023-01-07T00:47:28Z","creator_user_login":"sunderls"}
{"number":25961,"comment_id":"1375978266","body":"I'm getting no errors in the vanilla example. Mostly asking if `source` actually does call `onError` with just HTML.\r\n\r\nCould you check if the behavior is the same in React 17?","updated_at":"2023-01-09T17:17:39Z","created_at":"2023-01-09T17:17:39Z","creator_user_login":"eps1lon"}
{"number":25961,"comment_id":"1376929583","body":"Strange, the vanilla example seems to work intermittently.\r\nUsually when pressing enter in the demo URL bar rather than clicking refresh.","updated_at":"2023-01-10T08:58:33Z","created_at":"2023-01-10T08:58:33Z","creator_user_login":"cat-michael-gwynne"}
{"number":25961,"comment_id":"1379288704","body":"dont know****","updated_at":"2023-01-11T18:07:59Z","created_at":"2023-01-11T18:07:59Z","creator_user_login":"shreya-as"}
{"number":25961,"comment_id":"1379289634","body":"> Agreed, maybe you can create a PR to update the doc here https://reactjs.org/docs/events.html\r\n\r\n\r\n\r\n> I'm getting no errors in the vanilla example. Mostly asking if `source` actually does call `onError` with just HTML.\r\n> \r\n> Could you check if the behavior is the same in React 17?\r\n\r\nm","updated_at":"2023-01-11T18:08:48Z","created_at":"2023-01-11T18:08:48Z","creator_user_login":"shreya-as"}
{"number":25961,"comment_id":"1379290369","body":"> > Agreed, maybe you can create a PR to update the doc here https://reactjs.org/docs/events.html\r\n> \r\n> > I'm getting no errors in the vanilla example. Mostly asking if `source` actually does call `onError` with just HTML.\r\n> > Could you check if the behavior is the same in React 17?\r\n> \r\n>","updated_at":"2023-01-11T18:09:25Z","created_at":"2023-01-11T18:09:25Z","creator_user_login":"shreya-as"}
{"number":25987,"comment_id":"1379611981","body":"Hi,\r\nCould you give an insight on what is happening exactly in browser ? Is there any error message ?\r\nThanks !","updated_at":"2023-01-11T23:28:27Z","created_at":"2023-01-11T23:28:27Z","creator_user_login":"ArnaudValette"}
{"number":25987,"comment_id":"1379879893","body":"For example, when i used useNotification (about NotificationProvider), it is getting error. There isnt in code because of example code but StoreProvider the clearest example. I'm using useSelector(redux Store term) in feature project and im getting error:\"could not find react-redux context value; please ensure the component is wrapped in a \".","updated_at":"2023-01-12T06:41:26Z","created_at":"2023-01-12T06:41:26Z","creator_user_login":"atillaaliyev"}
{"number":25987,"comment_id":"1383078523","body":"It sounds like you're trying to use a component from your \"features\" project in your \"main\" project, and this component relies on certain providers that are only available in the main project. Using createPortal to move the component from the features project into the main project's DOM tree will not make the providers available to the component, because the component is still rendered within a different React tree.\r\n\r\nOne way to make the providers available to the component would be to move the providers to the features project and import them into the UserSearch component.\r\nAnother option is to pass the providers as props from the main project down to the UserSearch component, so that they can be used within the component.\r\nYou could also use a technique called \"render props\" which allows you to share state and behavior between components without introducing new props.\r\n\r\nIt's also worth noting that your approach with createPortal is not best practice and it's not recommended to use it in this way.\r\n\r\nIt would be better to take a step back and see if there is any way to refactor your code structure in order to make the providers available in the Features project, or if it makes sense to move the Feature project into the Main project.","updated_at":"2023-01-15T07:33:29Z","created_at":"2023-01-15T07:33:29Z","creator_user_login":"FrodoBaggins74524"}
{"number":25987,"comment_id":"1398833275","body":"🤔 It may be possible to solve this problem by using createPortal in combination with React's context API. By creating a new context in the main project that will contain the providers.\r\n\r\n```jsconst ProvidersContext = React.createContext({});```\r\n\r\nThen wrap them: \r\n\r\n```js<ProvidersContext.Provider value={{ theme, message, store, layout }}>\r\n  <ThemeProvider theme={createTheme(theme, ...muiThemeLang[languageProfile])}>\r\n    <NotificationProvider>\r\n      <LayoutProvider>\r\n        <MessageProvider>\r\n          <Container id=\"container\">\r\n            <Header />\r\n            <FibaBox\r\n              sx={{\r\n                p: `${toolbarHeight ?? 0}px 10px 0px 10px`,\r\n              }}\r\n            >\r\n             <FibaUserSearch/>\r\n            </FibaBox>\r\n          </Container>\r\n        </MessageProvider>\r\n      </LayoutProvider>\r\n    </NotificationProvider>\r\n  </ThemeProvider>\r\n  <Loading />\r\n</ProvidersContext.Provider>\r\n```\r\nIn the UserSearch component of the feature project, I would use the useContext hook and createPortal to send the providers through the portal to the target container.\r\n\r\n```jsconst { theme, message, store, layout } = useContext(ProvidersContext);\r\n\r\nexport const FibaUserSearch = <\r\n  TFieldValues extends FieldValues = Record<string, string | User>,\r\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\r\n>(\r\n  props: UserSearchProps<TFieldValues, TName>,\r\n) => createPortal(\r\n  <ProvidersContext.Provider value={{ theme, message, store, layout }}>\r\n    <FibaUserSearchInner {...props} />\r\n  </ProvidersContext.Provider>,\r\n  document.getElementById('container')\r\n);\r\n```\r\nIt may be necessary to rewrite the rendering logic.\r\n","updated_at":"2023-01-20T19:25:26Z","created_at":"2023-01-20T19:24:16Z","creator_user_login":"rardooba"}
{"number":25941,"comment_id":"1508834069","body":"I'm confirming issues with the zip file structure, the dependencies are wrong and `npm start` produces errors with first step of the tutorial\r\n```js\r\nreturn (\r\n    <>\r\n      <button className=\"square\">X</button>\r\n      <button className=\"square\">X</button>\r\n    </>\r\n  );\r\n```","updated_at":"2023-04-14T15:47:04Z","created_at":"2023-04-14T15:46:37Z","creator_user_login":"fidraj"}
{"number":25941,"comment_id":"1586940248","body":"> `npm start` produces errors with first step of the tutorial\r\n\r\nIf you're referring to an error about the shorthand fragment syntax (`<>` .. `</>`) shown in your code example, I fixed this by upgrading to the latest version of `react-scripts`. [More details about the fix here](https://stackoverflow.com/a/76455176/328817).","updated_at":"2023-06-12T09:21:47Z","created_at":"2023-06-12T09:21:41Z","creator_user_login":"sampart"}
{"number":25941,"comment_id":"1670904618","body":"Updating `react-scripts` to the latest version via \"^5.0.0\" did not solve the issue with empty tags `<>`, what did solve the problem was to use another HTML tag like `<div>...</div>`, this finally resolved the issue and started the app again. Really cool that the official tutorial of React.js is not working","updated_at":"2023-08-09T08:35:11Z","created_at":"2023-08-09T08:35:11Z","creator_user_login":"pmayd"}
{"number":25972,"comment_id":"1376886605","body":"The idea is that the error message is human-readable. Instead of c&p you can use the \"apply fix\" option from ESLint either via editor integration or CLI (`eslint --fix`).","updated_at":"2023-01-10T08:19:18Z","created_at":"2023-01-10T08:19:18Z","creator_user_login":"eps1lon"}
{"number":25972,"comment_id":"1381125104","body":"I wish that were the case @eps1lon  but `--fix` does not work for that rule.","updated_at":"2023-01-13T00:03:10Z","created_at":"2023-01-13T00:03:10Z","creator_user_login":"trajano"}
{"number":25972,"comment_id":"1387661661","body":"The auto-fixer does not run on suggestions by default since it really needs manual verification if that's ok. You can use [`--fix-type`](https://eslint.org/docs/latest/use/command-line-interface#--fix-type) at your own risk though. \r\n\r\nYour editor integration should applying suggestions as well.","updated_at":"2023-01-18T19:37:40Z","created_at":"2023-01-18T19:37:40Z","creator_user_login":"eps1lon"}
{"number":25972,"comment_id":"1396222863","body":"No luck... tried every single fix type none of them worked.\r\n\r\n spring-docker/expo-app   rework [$!] via  v16.18.1 \r\n❯ yarn eslint --quiet --fix-type problem --fix screens/OneViewScreen.tsx\r\nyarn run v1.22.19\r\n$ C:\\p\\spring-docker\\expo-app\\node_modules\\.bin\\eslint --quiet --fix-type problem --fix screens/OneViewScreen.tsx\r\n\r\nC:\\p\\spring-docker\\expo-app\\screens\\OneViewScreen.tsx\r\n  122:6  error  React Hook useCallback has a missing dependency: 'fill.length'. Either include it or remove the dependency array  react-hooks/exhaustive-deps\r\n\r\n✖ 1 problem (1 error, 0 warnings)\r\n\r\nerror Command failed with exit code 1.\r\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\r\n\r\n spring-docker/expo-app   rework [$!] via  v16.18.1  took 7s\r\n❯ yarn eslint --quiet --fix-type directive --fix screens/OneViewScreen.tsx\r\nyarn run v1.22.19\r\n$ C:\\p\\spring-docker\\expo-app\\node_modules\\.bin\\eslint --quiet --fix-type directive --fix screens/OneViewScreen.tsx\r\n\r\nC:\\p\\spring-docker\\expo-app\\screens\\OneViewScreen.tsx\r\n  122:6  error  React Hook useCallback has a missing dependency: 'fill.length'. Either include it or remove the dependency array  react-hooks/exhaustive-deps\r\n\r\n✖ 1 problem (1 error, 0 warnings)\r\n\r\nerror Command failed with exit code 1.\r\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\r\n\r\n spring-docker/expo-app   rework [$!] via  v16.18.1  took 7s\r\n❯ yarn eslint --quiet --fix-type suggestion --fix screens/OneViewScreen.tsx\r\nyarn run v1.22.19\r\n$ C:\\p\\spring-docker\\expo-app\\node_modules\\.bin\\eslint --quiet --fix-type suggestion --fix screens/OneViewScreen.tsx\r\n\r\nC:\\p\\spring-docker\\expo-app\\screens\\OneViewScreen.tsx\r\n  122:6  error  React Hook useCallback has a missing dependency: 'fill.length'. Either include it or remove the dependency array  react-hooks/exhaustive-deps\r\n\r\n✖ 1 problem (1 error, 0 warnings)\r\n\r\nerror Command failed with exit code 1.\r\ninfo Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\r\n\r\n spring-docker/expo-app   rework [$!] via  v16.18.1  took 7s\r\n❯ yarn eslint --quiet --fix-type layout --fix screens/OneViewScreen.tsx\r\nyarn run v1.22.19\r\n$ C:\\p\\spring-docker\\expo-app\\node_modules\\.bin\\eslint --quiet --fix-type layout --fix screens/OneViewScreen.tsx\r\n\r\nC:\\p\\spring-docker\\expo-app\\screens\\OneViewScreen.tsx\r\n  122:6  error  React Hook useCallback has a missing dependency: 'fill.length'. Either include it or remove the dependency array  react-hooks/exhaustive-deps\r\n\r\n","updated_at":"2023-01-18T23:20:45Z","created_at":"2023-01-18T23:20:45Z","creator_user_login":"trajano"}
{"number":25899,"comment_id":"1355384986","body":"Hi @MithilaMarapareddy! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2325899). Thanks!","updated_at":"2022-12-16T18:29:38Z","created_at":"2022-12-16T18:29:38Z","creator_user_login":"facebook-github-bot"}
{"number":25899,"comment_id":"1355397209","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fabef7a6b71798fe2477720e59d090a0e74e0009...e1efd30f1770dd4c49d32de2c056be9fae5061fd\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e1efd30f1770dd4c49d32de2c056be9fae5061fd/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fabef7a6b71798fe2477720e59d090a0e74e0009) | **=** | 154.75 kB | 154.75 kB | = | 49.08 kB | 49.08 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e1efd30f1770dd4c49d32de2c056be9fae5061fd/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fabef7a6b71798fe2477720e59d090a0e74e0009) | **=** | 156.70 kB | 156.70 kB | = | 49.73 kB | 49.73 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/e1efd30f1770dd4c49d32de2c056be9fae5061fd/files/facebook-www/ReactDOM-prod.classic.js?compare=fabef7a6b71798fe2477720e59d090a0e74e0009) | **=** | 534.49 kB | 534.49 kB | = | 95.15 kB | 95.15 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/e1efd30f1770dd4c49d32de2c056be9fae5061fd/files/facebook-www/ReactDOM-prod.modern.js?compare=fabef7a6b71798fe2477720e59d090a0e74e0009) | **=** | 519.59 kB | 519.59 kB | = | 92.96 kB | 92.96 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against e1efd30f1770dd4c49d32de2c056be9fae5061fd\n</p>\n","updated_at":"2022-12-16T18:36:27Z","created_at":"2022-12-16T18:36:27Z","creator_user_login":"sizebot"}
{"number":25869,"comment_id":"1345287092","body":"Hi @yucccc! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2325869). Thanks!","updated_at":"2022-12-10T15:26:06Z","created_at":"2022-12-10T15:26:06Z","creator_user_login":"facebook-github-bot"}
{"number":25869,"comment_id":"1345288733","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: b14d7fa4b88dad5f0017d084e462952c700aa2ad...df1fb6240cb03d0a0775c2a6badc421b7d48fd94\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/df1fb6240cb03d0a0775c2a6badc421b7d48fd94/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 154.37 kB | 154.37 kB | = | 48.97 kB | 48.97 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/df1fb6240cb03d0a0775c2a6badc421b7d48fd94/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 156.29 kB | 156.29 kB | = | 49.63 kB | 49.63 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/df1fb6240cb03d0a0775c2a6badc421b7d48fd94/files/facebook-www/ReactDOM-prod.classic.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 533.12 kB | 533.12 kB | = | 94.96 kB | 94.96 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/df1fb6240cb03d0a0775c2a6badc421b7d48fd94/files/facebook-www/ReactDOM-prod.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 518.22 kB | 518.22 kB | = | 92.76 kB | 92.76 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/df1fb6240cb03d0a0775c2a6badc421b7d48fd94/files/facebook-www/ReactDOMForked-prod.classic.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 533.12 kB | 533.12 kB | = | 94.96 kB | 94.96 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against df1fb6240cb03d0a0775c2a6badc421b7d48fd94\n</p>\n","updated_at":"2022-12-10T15:32:30Z","created_at":"2022-12-10T15:32:30Z","creator_user_login":"sizebot"}
{"number":25869,"comment_id":"1345667019","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-12-11T21:55:18Z","created_at":"2022-12-11T21:55:18Z","creator_user_login":"facebook-github-bot"}
{"number":25869,"comment_id":"1643499212","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 7022e8d6a3222c97d287dfa0f2361acc8a30683a...4d66cfa52c246a1355d4e9c6e86b10121ad012d1\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/4d66cfa52c246a1355d4e9c6e86b10121ad012d1/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **=** | 165.63 kB | 165.63 kB | = | 51.88 kB | 51.88 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/4d66cfa52c246a1355d4e9c6e86b10121ad012d1/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **=** | 174.70 kB | 174.70 kB | = | 54.61 kB | 54.61 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/4d66cfa52c246a1355d4e9c6e86b10121ad012d1/files/facebook-www/ReactDOM-prod.classic.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **=** | 570.44 kB | 570.44 kB | = | 100.45 kB | 100.45 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/4d66cfa52c246a1355d4e9c6e86b10121ad012d1/files/facebook-www/ReactDOM-prod.modern.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **=** | 554.21 kB | 554.21 kB | = | 97.61 kB | 97.61 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 4d66cfa52c246a1355d4e9c6e86b10121ad012d1\n</p>\n","updated_at":"2023-09-01T14:41:37Z","created_at":"2023-07-20T08:27:34Z","creator_user_login":"react-sizebot"}
{"number":25981,"comment_id":"1378804149","body":"Do you mean the extension is not working in incognito mode?\r\n\r\nif yes:\r\n\r\n1. Go to Extension settings or 'chrome://extensions'\r\n2. Click on 'Details' on the React Developer Tools extension\r\n3. Toggle Button 'Allow in Incognito'\r\n\r\nHope this helps!","updated_at":"2023-01-11T14:06:24Z","created_at":"2023-01-11T14:06:24Z","creator_user_login":"davbauer"}
{"number":25981,"comment_id":"1407694183","body":"**it worked for me**","updated_at":"2023-01-29T15:32:03Z","created_at":"2023-01-29T15:32:03Z","creator_user_login":"AbdallahAli2"}
{"number":25981,"comment_id":"1441399702","body":"it worked for me","updated_at":"2023-02-23T08:58:05Z","created_at":"2023-02-23T08:58:05Z","creator_user_login":"vaibhavtekadegit"}
{"number":25981,"comment_id":"1500881390","body":"thanks btw\r\n","updated_at":"2023-04-08T12:25:57Z","created_at":"2023-04-08T12:25:57Z","creator_user_login":"AbdallahAli2"}
{"number":25981,"comment_id":"1535350889","body":"I currently have mine enabled but yet it doesn't show. I try it in a regular chrome browser (non-incognito) and it works fine there. Any thoughts on what could be causing this?\r\n\r\n![image](https://user-images.githubusercontent.com/108295993/236317844-2f1fca6b-3163-4a1d-9ddb-4fbb3cc79c42.png)\r\n","updated_at":"2023-05-04T20:11:07Z","created_at":"2023-05-04T20:11:07Z","creator_user_login":"EddieQuin"}
{"number":25981,"comment_id":"1536348888","body":"@EddieQuin I am having the same issue in incognito mode. On my Vite dev server http://localhost:5173 which I know is using React, it still does not work on Incognito but works in regular even after checking the \"Allow in Incognito\" and \"Allow access to file URLs\"\r\n","updated_at":"2023-05-05T14:29:56Z","created_at":"2023-05-05T14:29:56Z","creator_user_login":"danielerhabor"}
{"number":26062,"comment_id":"1406271763","body":"Hi @pacifiquem! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326062). Thanks!","updated_at":"2023-01-27T09:55:14Z","created_at":"2023-01-27T09:55:14Z","creator_user_login":"facebook-github-bot"}
{"number":26062,"comment_id":"1406285603","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-01-27T10:07:44Z","created_at":"2023-01-27T10:07:44Z","creator_user_login":"facebook-github-bot"}
{"number":26062,"comment_id":"1410473498","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 8b9ac8175fb3052ba5c82f99003bb8ff667e1e68...5b09933cbc40d649661112a67fe80a22af698497\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5b09933cbc40d649661112a67fe80a22af698497/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=8b9ac8175fb3052ba5c82f99003bb8ff667e1e68) | **=** | 154.83 kB | 154.83 kB | = | 49.11 kB | 49.11 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5b09933cbc40d649661112a67fe80a22af698497/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=8b9ac8175fb3052ba5c82f99003bb8ff667e1e68) | **=** | 156.83 kB | 156.83 kB | = | 49.77 kB | 49.77 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/5b09933cbc40d649661112a67fe80a22af698497/files/facebook-www/ReactDOM-prod.classic.js?compare=8b9ac8175fb3052ba5c82f99003bb8ff667e1e68) | **=** | 533.79 kB | 533.79 kB | = | 95.06 kB | 95.06 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/5b09933cbc40d649661112a67fe80a22af698497/files/facebook-www/ReactDOM-prod.modern.js?compare=8b9ac8175fb3052ba5c82f99003bb8ff667e1e68) | **=** | 518.81 kB | 518.81 kB | = | 92.83 kB | 92.83 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 5b09933cbc40d649661112a67fe80a22af698497\n</p>\n","updated_at":"2023-01-31T16:36:11Z","created_at":"2023-01-31T14:37:44Z","creator_user_login":"react-sizebot"}
{"number":25947,"comment_id":"1367706202","body":"Third click onwards it only runs the code inside the click handler, by this time React reconciliation system has ascertained that React element tree will not change at all from the third time onwards\r\n\r\nhttps://andreasheissenberger.medium.com/react-components-render-twice-any-way-to-fix-this-91cf23961625","updated_at":"2022-12-30T03:39:10Z","created_at":"2022-12-30T03:39:10Z","creator_user_login":"priyank-svmx"}
{"number":25947,"comment_id":"1367708458","body":"Why does it take three runs and not two? The state being set is the same on the second run. Also the provided link seems to only discuss strict mode which is unrelated AFAIK","updated_at":"2022-12-30T03:52:43Z","created_at":"2022-12-30T03:51:36Z","creator_user_login":"agrawalishaan"}
{"number":25947,"comment_id":"1367719218","body":"Also when I put Date.now() inside the JSX which changes the dom the same issue occurs ","updated_at":"2022-12-30T04:30:24Z","created_at":"2022-12-30T04:30:24Z","creator_user_login":"agrawalishaan"}
{"number":25947,"comment_id":"1379635252","body":"I think, but I could be wrong, that calling js code outside of a useEffect hook, per example, makes it \"outside\" of react lifecycles. \r\nThe function is run, but maybe that doesn't mean that the component is rerendered. \r\n\r\nif you want to prevent this behaviour for now you could do this : \r\n\r\n```\r\nReact.useEffect(()=>{\r\n   console.log(isShown)\r\n    if (isShown) {\r\n    \r\nconsole.log(\"the state is true\");\r\n  }\r\n\r\n  },[isShown])\r\n```\r\n\r\nIf I put {Date.now()} like that : \r\n```\r\n return (\r\n    <>\r\n      <button\r\n        onClick={() => {\r\n          console.log(\"the button was clicked\");\r\n          setShown(true);\r\n        }}\r\n      >\r\n        \r\n        Click me\r\n      </button>\r\n\r\n// HERE\r\n      {Date.now()}\r\n     \r\n</>\r\n}\r\n```\r\n\r\nI can see that the date changes only one time : no matter how many times I push the button.\r\nMeaning that the component is re-rendered only once : when the hook go from false to true.","updated_at":"2023-01-12T09:10:32Z","created_at":"2023-01-12T00:00:45Z","creator_user_login":"ArnaudValette"}
{"number":25947,"comment_id":"1383224745","body":"I think that the component is re-rendered even with the bad non-useEffect code, as Date.now() updates each time.","updated_at":"2023-01-15T18:55:55Z","created_at":"2023-01-15T18:55:55Z","creator_user_login":"agrawalishaan"}
{"number":25947,"comment_id":"1383226468","body":"For my part, on the codesandbox you sent, the date updates only once. ","updated_at":"2023-01-15T19:03:49Z","created_at":"2023-01-15T19:03:49Z","creator_user_login":"ArnaudValette"}
{"number":25947,"comment_id":"1383234156","body":"Right, but I was responding to:\n\nThe function is run, but maybe that doesn't mean that the component is rerendered.\n\nIsn't the component being rerendered in my case, since I can see the date change?","updated_at":"2023-01-15T19:41:44Z","created_at":"2023-01-15T19:41:44Z","creator_user_login":"agrawalishaan"}
{"number":25947,"comment_id":"1383236335","body":"The date change does not occur in what is rendered from the component, but in the corpse of the function, no ?","updated_at":"2023-01-15T19:52:18Z","created_at":"2023-01-15T19:52:18Z","creator_user_login":"ArnaudValette"}
{"number":25868,"comment_id":"1352262792","body":"Hm, it's working for me. Maybe an issue with Chrome? Tried re-installing Chrome/extension?","updated_at":"2022-12-14T21:56:58Z","created_at":"2022-12-14T21:56:58Z","creator_user_login":"bnzone"}
{"number":25868,"comment_id":"1364642516","body":"Hey @hseniht if you meant to change the settings of the extension it will be saved, but If you mean changes in the components like state and code then all of this will reset to the default code that you have written in the text editor so changing code or state in the dev tools meant for debugging and it's not a permanent change ","updated_at":"2022-12-25T08:08:58Z","created_at":"2022-12-25T08:08:58Z","creator_user_login":"mahmodlte"}
{"number":25868,"comment_id":"1367071322","body":"@mahmodlte I don't meant the states. I meant the settings in the react dev tools itself like themes, component tree settings. etc .. are not saved. So lets say I choose dark theme, it applies.. but whenever i reload the page or re-open dev tools. Its back to light theme. Same goes for other configs like component filters and debugging settings. Everything resets back. \r\n","updated_at":"2022-12-29T04:53:38Z","created_at":"2022-12-29T04:53:38Z","creator_user_login":"hseniht"}
{"number":25868,"comment_id":"1474732343","body":"@hseniht I m facing the same issue in profiler whenever I m refreshing the page checked checkbox automatically gets unchecked ","updated_at":"2023-03-18T05:51:10Z","created_at":"2023-03-18T05:51:10Z","creator_user_login":"Shoaib20-1998"}
{"number":25868,"comment_id":"1699804425","body":"Uninstall and install again worked","updated_at":"2023-08-30T20:36:54Z","created_at":"2023-08-30T20:36:54Z","creator_user_login":"namti"}
{"number":25750,"comment_id":"1328706984","body":"Hi @Simon-He95! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2325750). Thanks!","updated_at":"2022-11-28T08:25:37Z","created_at":"2022-11-28T08:25:37Z","creator_user_login":"facebook-github-bot"}
{"number":25750,"comment_id":"1328821328","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-11-28T10:06:19Z","created_at":"2022-11-28T10:06:19Z","creator_user_login":"facebook-github-bot"}
{"number":25750,"comment_id":"1328821424","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-11-28T10:06:22Z","created_at":"2022-11-28T10:06:22Z","creator_user_login":"facebook-github-bot"}
{"number":25865,"comment_id":"1344867695","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: b14d7fa4b88dad5f0017d084e462952c700aa2ad...d19472b65b34d313f8f0d45ce1e3db29d0f26300\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d19472b65b34d313f8f0d45ce1e3db29d0f26300/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 154.37 kB | 154.37 kB | = | 48.97 kB | 48.98 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d19472b65b34d313f8f0d45ce1e3db29d0f26300/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 156.29 kB | 156.29 kB | = | 49.63 kB | 49.63 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/d19472b65b34d313f8f0d45ce1e3db29d0f26300/files/facebook-www/ReactDOM-prod.classic.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 533.12 kB | 533.12 kB | = | 94.96 kB | 94.96 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/d19472b65b34d313f8f0d45ce1e3db29d0f26300/files/facebook-www/ReactDOM-prod.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 518.22 kB | 518.22 kB | = | 92.76 kB | 92.76 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/d19472b65b34d313f8f0d45ce1e3db29d0f26300/files/facebook-www/ReactDOMForked-prod.classic.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 533.12 kB | 533.12 kB | = | 94.96 kB | 94.96 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [facebook-www/ReactDOMServerStreaming-prod.modern.js](https://react-builds.vercel.app/commits/d19472b65b34d313f8f0d45ce1e3db29d0f26300/files/facebook-www/ReactDOMServerStreaming-prod.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.05%** | 128.86 kB | 130.21 kB | +0.42% | 24.73 kB | 24.83 kB\n| [facebook-www/ReactDOMServer-prod.modern.js](https://react-builds.vercel.app/commits/d19472b65b34d313f8f0d45ce1e3db29d0f26300/files/facebook-www/ReactDOMServer-prod.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.02%** | 123.73 kB | 125.00 kB | +0.52% | 23.42 kB | 23.54 kB\n| [facebook-www/ReactDOMServer-prod.classic.js](https://react-builds.vercel.app/commits/d19472b65b34d313f8f0d45ce1e3db29d0f26300/files/facebook-www/ReactDOMServer-prod.classic.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.00%** | 126.87 kB | 128.14 kB | +0.41% | 24.04 kB | 24.14 kB\n| [facebook-www/ReactDOMServerStreaming-dev.modern.js](https://react-builds.vercel.app/commits/d19472b65b34d313f8f0d45ce1e3db29d0f26300/files/facebook-www/ReactDOMServerStreaming-dev.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+0.65%** | 332.61 kB | 334.78 kB | +0.17% | 74.04 kB | 74.17 kB\n| [facebook-www/ReactDOMServer-dev.modern.js](https://react-builds.vercel.app/commits/d19472b65b34d313f8f0d45ce1e3db29d0f26300/files/facebook-www/ReactDOMServer-dev.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+0.64%** | 337.37 kB | 339.53 kB | +0.16% | 75.12 kB | 75.24 kB\n| [facebook-www/ReactDOMServer-dev.classic.js](https://react-builds.vercel.app/commits/d19472b65b34d313f8f0d45ce1e3db29d0f26300/files/facebook-www/ReactDOMServer-dev.classic.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+0.63%** | 344.06 kB | 346.23 kB | +0.15% | 76.54 kB | 76.66 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against d19472b65b34d313f8f0d45ce1e3db29d0f26300\n</p>\n","updated_at":"2022-12-09T23:02:04Z","created_at":"2022-12-09T23:02:04Z","creator_user_login":"sizebot"}
{"number":25865,"comment_id":"1372625244","body":"@gnoff  ping for feedback 🙂","updated_at":"2023-01-05T19:12:20Z","created_at":"2023-01-05T19:12:20Z","creator_user_login":"mofeiZ"}
{"number":25833,"comment_id":"1341075479","body":"Duplicate with https://github.com/facebook/react/issues/25769 ?\r\nCan you check if the latest version fixes this?","updated_at":"2022-12-07T14:47:53Z","created_at":"2022-12-07T14:47:53Z","creator_user_login":"mondaychen"}
{"number":25833,"comment_id":"1341168307","body":"I have the latest version and the problem still persists\n\nEl mié, 7 dic 2022 a la(s) 08:48, Mengdi Chen ***@***.***)\nescribió:\n\n> Duplicate with #25769 <https://github.com/facebook/react/issues/25769> ?\n> Can you check if the latest version fixes this?\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/facebook/react/issues/25833#issuecomment-1341075479>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AWNNPHSYS2H2U5LXFBWR2GTWMCPSNANCNFSM6AAAAAASWBNPAQ>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>\n","updated_at":"2022-12-07T15:51:34Z","created_at":"2022-12-07T15:51:34Z","creator_user_login":"sfmarco"}
{"number":25833,"comment_id":"1341197419","body":"I tried to visit the project link you provided but it seems to be private","updated_at":"2022-12-07T16:07:55Z","created_at":"2022-12-07T16:07:55Z","creator_user_login":"mondaychen"}
{"number":25833,"comment_id":"1341393565","body":"I have the same issue and am on the latest version of Chrome. I've uninstalled chrome and reinstalled but the issue persists.","updated_at":"2022-12-07T18:27:20Z","created_at":"2022-12-07T18:27:20Z","creator_user_login":"JasonReyes36"}
{"number":25833,"comment_id":"1341474288","body":"Can you confirm which version of devtools extension are you using?","updated_at":"2022-12-07T19:20:05Z","created_at":"2022-12-07T19:20:05Z","creator_user_login":"mondaychen"}
{"number":25833,"comment_id":"1341848648","body":"version: 4.27.1\n\nEl mié, 7 dic 2022 a la(s) 13:20, Mengdi Chen ***@***.***)\nescribió:\n\n> Can you confirm which version of devtools extension are you using?\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/facebook/react/issues/25833#issuecomment-1341474288>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AWNNPHU62XO3JKLHT7HAUSTWMDPPHANCNFSM6AAAAAASWBNPAQ>\n> .\n> You are receiving this because you authored the thread.Message ID:\n> ***@***.***>\n>\n","updated_at":"2022-12-08T01:34:13Z","created_at":"2022-12-08T01:34:13Z","creator_user_login":"sfmarco"}
{"number":25833,"comment_id":"1342874497","body":"Can you provide a way for me to reproduce? I don't have access to the link in your issue description","updated_at":"2022-12-08T15:07:39Z","created_at":"2022-12-08T15:07:39Z","creator_user_login":"mondaychen"}
{"number":25749,"comment_id":"1328603609","body":"Hi @Simon-He95! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2325749). Thanks!","updated_at":"2022-11-28T06:25:08Z","created_at":"2022-11-28T06:25:08Z","creator_user_login":"facebook-github-bot"}
{"number":25749,"comment_id":"1328607920","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 2655c9354d8e1c54ba888444220f63e836925caa...0cd219a7ece6dd582ceb71e26a92113eac511f75\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0cd219a7ece6dd582ceb71e26a92113eac511f75/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=2655c9354d8e1c54ba888444220f63e836925caa) | **=** | 154.33 kB | 154.33 kB | = | 48.98 kB | 48.98 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0cd219a7ece6dd582ceb71e26a92113eac511f75/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=2655c9354d8e1c54ba888444220f63e836925caa) | **=** | 156.25 kB | 156.25 kB | = | 49.60 kB | 49.60 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/0cd219a7ece6dd582ceb71e26a92113eac511f75/files/facebook-www/ReactDOM-prod.classic.js?compare=2655c9354d8e1c54ba888444220f63e836925caa) | **=** | 533.14 kB | 533.14 kB | = | 94.42 kB | 94.42 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/0cd219a7ece6dd582ceb71e26a92113eac511f75/files/facebook-www/ReactDOM-prod.modern.js?compare=2655c9354d8e1c54ba888444220f63e836925caa) | **=** | 518.24 kB | 518.24 kB | = | 92.24 kB | 92.24 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/0cd219a7ece6dd582ceb71e26a92113eac511f75/files/facebook-www/ReactDOMForked-prod.classic.js?compare=2655c9354d8e1c54ba888444220f63e836925caa) | **=** | 533.14 kB | 533.14 kB | = | 94.42 kB | 94.42 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 0cd219a7ece6dd582ceb71e26a92113eac511f75\n</p>\n","updated_at":"2022-11-28T06:55:17Z","created_at":"2022-11-28T06:32:48Z","creator_user_login":"sizebot"}
{"number":25749,"comment_id":"1328856418","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-11-28T10:32:59Z","created_at":"2022-11-28T10:32:59Z","creator_user_login":"facebook-github-bot"}
{"number":25726,"comment_id":"1470490152","body":"Hi @MahdiMajdian ,\r\nAccording to MDN Docs <input> elements of type radio are generally used in radio groups—collections of radio buttons describing a set of related options.\r\nAll radio buttons that share the same name and are controlled in the same form are part of a group.\r\nOnly one radio button in a group can be checked.\r\n\r\nIn your case, you have 3 Radio component with same name attribute and each having it's own state maintained inside of each component.\r\nWhat exactly is happening, when we click the first radio button and then second radio button is : \r\n\r\n1. When we click the first radio button, then the onChange is getting triggered and then setting the isChecked state to true and then updating the checked the attribute with isChecked value (which is true). Until now it is fine because we are still following the MDN rule that only one radio button among other radio button with same name should be true.\r\n2. But when we click the second radio button, now many things are happening here : \r\n     i) As soon as we click on second radio button, the browser will first remove the check from first checkbox and will apply \r\n        the check on second checkbox. Because it will still try to follow the MDN rule, where it will make only one radio button \r\n        checked among the others with same name.\r\n\r\n     ii) Now the onChange of second radio button will get triggered and this will set the isChecked state to true for second \r\n         radio button. And now both the first radio and second radio isChecked is true and hence the attribute \"checked\" for \r\n         both the radio 1 and radio 2 is true.\r\n\r\n     iii) But how the check was applied to radio 1 and not on radio 2 is because, React has a function where it update all the \r\n          cousins radio input which has same name attribute with DOM node value. As we can see in the below screenshot the \r\n          input 1 (which is radio 1) is having the checked prop value as true, so React will update the value to check for radio 1 \r\n          and since the updation of cousins input happens at the end and in this function only cousin updation happens and not \r\n          the target element. so Radio 1 wins the race and will get the check value.\r\n\r\n![image](https://user-images.githubusercontent.com/47081557/225391997-d14bd5d9-5953-4bd0-87a8-4b8df6260b73.png)\r\n\r\nThis is after the sibling updation is completed : \r\n![image](https://user-images.githubusercontent.com/47081557/225394439-ff5d4bbf-0a67-4207-96e8-31970d8c77c2.png)\r\n\r\nSo the best approach to handle the radio input is by forming a group of radio input and having a single state shared among all of them. I have updated the code sandbox link and have added a Radio Group component which shares a single state among all the radio input with same name.\r\n\r\nCode sandbox link : https://codesandbox.io/s/kind-wave-xl4ww9?file=/src/RadioGroup.js\r\n\r\n<img width=\"756\" alt=\"image\" src=\"https://user-images.githubusercontent.com/47081557/225397420-b7b2c44a-5a50-4cf2-be96-92ad9a251f60.png\">\r\n\r\nhttps://user-images.githubusercontent.com/47081557/225398598-feaf77e9-b83b-48a9-b9c7-ad5fb67d3fec.mov\r\n\r\nI hope this helps you.\r\n\r\nThank you.","updated_at":"2023-03-15T18:06:33Z","created_at":"2023-03-15T17:50:30Z","creator_user_login":"RameshSuthar"}
{"number":25683,"comment_id":"1314864127","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: c54e3541b2fb6251bd7cd399e77037220b47de2e...57cc5fc4931aacdc13adf1f80418edb43f63855b\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/57cc5fc4931aacdc13adf1f80418edb43f63855b/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=c54e3541b2fb6251bd7cd399e77037220b47de2e) | **=** | 153.65 kB | 153.65 kB | = | 48.90 kB | 48.90 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/57cc5fc4931aacdc13adf1f80418edb43f63855b/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=c54e3541b2fb6251bd7cd399e77037220b47de2e) | **=** | 155.57 kB | 155.57 kB | = | 49.51 kB | 49.51 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/57cc5fc4931aacdc13adf1f80418edb43f63855b/files/facebook-www/ReactDOM-prod.classic.js?compare=c54e3541b2fb6251bd7cd399e77037220b47de2e) | **=** | 530.48 kB | 530.48 kB | = | 94.68 kB | 94.68 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/57cc5fc4931aacdc13adf1f80418edb43f63855b/files/facebook-www/ReactDOM-prod.modern.js?compare=c54e3541b2fb6251bd7cd399e77037220b47de2e) | **=** | 515.74 kB | 515.74 kB | = | 92.50 kB | 92.50 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/57cc5fc4931aacdc13adf1f80418edb43f63855b/files/facebook-www/ReactDOMForked-prod.classic.js?compare=c54e3541b2fb6251bd7cd399e77037220b47de2e) | **=** | 530.48 kB | 530.48 kB | = | 94.68 kB | 94.68 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 57cc5fc4931aacdc13adf1f80418edb43f63855b\n</p>\n","updated_at":"2022-11-15T07:03:16Z","created_at":"2022-11-15T07:03:16Z","creator_user_login":"sizebot"}
{"number":25683,"comment_id":"1314870792","body":"Hmm, looking more deeply, it looks like this pattern is observed throughout this source file. Is this for performance reasons? I'm skeptical of any detectable performance gain caused by following the existing syntax.","updated_at":"2022-11-15T07:16:13Z","created_at":"2022-11-15T07:09:55Z","creator_user_login":"dlqqq"}
{"number":25683,"comment_id":"1314875488","body":"If we do decide to move forward with this PR, I'm cool with doing it for the rest of this source file as well.","updated_at":"2022-11-15T07:15:50Z","created_at":"2022-11-15T07:15:50Z","creator_user_login":"dlqqq"}
{"number":25570,"comment_id":"1292759459","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fecc288b7dce182fbc3056b3f98a445a95fb1e68...6f7aa85cf1120030c3b8f133ad16d835b51a56d0\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/6f7aa85cf1120030c3b8f133ad16d835b51a56d0/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fecc288b7dce182fbc3056b3f98a445a95fb1e68) | **=** | 152.69 kB | 152.69 kB | = | 48.70 kB | 48.70 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/6f7aa85cf1120030c3b8f133ad16d835b51a56d0/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fecc288b7dce182fbc3056b3f98a445a95fb1e68) | **=** | 154.61 kB | 154.61 kB | = | 49.31 kB | 49.31 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/6f7aa85cf1120030c3b8f133ad16d835b51a56d0/files/facebook-www/ReactDOM-prod.classic.js?compare=fecc288b7dce182fbc3056b3f98a445a95fb1e68) | **=** | 526.73 kB | 526.73 kB | = | 94.10 kB | 94.09 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/6f7aa85cf1120030c3b8f133ad16d835b51a56d0/files/facebook-www/ReactDOM-prod.modern.js?compare=fecc288b7dce182fbc3056b3f98a445a95fb1e68) | **=** | 511.99 kB | 511.99 kB | = | 91.94 kB | 91.94 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/6f7aa85cf1120030c3b8f133ad16d835b51a56d0/files/facebook-www/ReactDOMForked-prod.classic.js?compare=fecc288b7dce182fbc3056b3f98a445a95fb1e68) | **=** | 526.73 kB | 526.73 kB | = | 94.10 kB | 94.10 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 6f7aa85cf1120030c3b8f133ad16d835b51a56d0\n</p>\n","updated_at":"2022-10-26T23:56:36Z","created_at":"2022-10-26T23:07:50Z","creator_user_login":"sizebot"}
{"number":25570,"comment_id":"1292923063","body":"Hm. It's unfortunate to expose this only in DEV when it's prod on the client. Maybe we'll do the full stacks but those are really slow to generate and there are many legit reasons to throw on the server (intentional client rendering, redirects, etc). Maybe if we have a way to opt out those.\r\n\r\nThe main purpose of this API is to log in production to a server in production. Maybe we should console.error even if this is implemented and instead have some other override to take over those logs?","updated_at":"2022-10-27T03:26:45Z","created_at":"2022-10-27T03:26:45Z","creator_user_login":"sebmarkbage"}
{"number":25675,"comment_id":"1336260744","body":"Related: https://stackoverflow.com/questions/73459382/react-18-async-way-to-unmount-root","updated_at":"2022-12-03T21:24:26Z","created_at":"2022-12-03T21:24:26Z","creator_user_login":"gkiely"}
{"number":25675,"comment_id":"1363957941","body":"Smaller repro: https://codesandbox.io/s/react-18-sync-root-unmount-in-ref-callback-sgcy0e\r\n\r\nIn short: Triggers a warning if you unmount a root in a ref callback. Also getting the warning of the state update is caused by a non-discrete event.\r\n\r\nNote that `flushSync` triggers a similar warning with the explicit nudge to call it in a microtask. \r\n\r\nSo seems intended that you use `setTimeout` instead? Though it is confusing to me that ref callbacks are considered \"during rendering\".","updated_at":"2022-12-23T13:37:06Z","created_at":"2022-12-23T13:34:55Z","creator_user_login":"eps1lon"}
{"number":25675,"comment_id":"1396581369","body":"do we have any updates on this issue? i am using MFE architecture with module federation, I have same warning when I am calling **unmount** method while removing the MFE","updated_at":"2023-01-19T08:04:35Z","created_at":"2023-01-19T08:04:35Z","creator_user_login":"chkhaidzegiorgi"}
{"number":25675,"comment_id":"1518272581","body":"I'm also facing the same issue. It's not obvious to unmount within `setTimeout` to avoid the error, because that creates race condition with the next mount which intermittently takes a long time to mount (>10s). Is there other alternatives to call `root.unmount()` without causing this issue? 🙏🏼 ","updated_at":"2023-04-21T19:54:35Z","created_at":"2023-04-21T19:54:35Z","creator_user_login":"markmssd"}
{"number":25562,"comment_id":"1296269944","body":"a good solution to splitting UI and business logic, see: https://github.com/hawx1993/hooks-view-model","updated_at":"2022-10-30T14:12:48Z","created_at":"2022-10-30T14:12:48Z","creator_user_login":"hawx1993"}
{"number":25562,"comment_id":"1296842883","body":"> a good solution to splitting UI and business logic, see: https://github.com/hawx1993/hooks-view-model\r\n\r\n@hawx1993 Thanks for the suggestion. Shall you fork the codesandbox using your hooks-view-model package to see the improvements on performance?","updated_at":"2022-10-31T09:58:32Z","created_at":"2022-10-31T09:46:33Z","creator_user_login":"jeremies"}
{"number":25562,"comment_id":"1440653797","body":"> a good solution to splitting UI and business logic, see: https://github.com/hawx1993/hooks-view-model\r\n\r\nThis is off-topic. The React team released concurrent rendering with no actual capability of Dan Abramov's [clock demo](https://youtu.be/nLF0n9SACd4?t=444). The docs [mention](https://beta.reactjs.org/reference/react/startTransition#caveats) that lo-prio updates are batched for now, which means there's no way to flush out stale components, which is the point of the whole thing. \r\n\r\n> If there are multiple ongoing transitions, React currently batches them together. This is a limitation that will likely be removed in a future release.\r\n\r\nwhich effectively means that the current state of concurrency in react is officially barely more than a debounce. But it's not even that, because de-prioritization doesn't even work correctly.","updated_at":"2023-02-23T01:09:34Z","created_at":"2023-02-22T19:12:18Z","creator_user_login":"sarimarton"}
{"number":25562,"comment_id":"1440659917","body":"Another test:\r\n\r\nhttps://codesandbox.io/s/concurrency-clock-demo-stgk78?file=/src/App.js","updated_at":"2023-02-22T19:17:47Z","created_at":"2023-02-22T19:17:47Z","creator_user_login":"sarimarton"}
{"number":25562,"comment_id":"1525636888","body":">Dan Abramov's [clock demo](https://youtu.be/nLF0n9SACd4?t=444).\r\n\r\nThank you for your answer @sarimarton it was pretty clear to understand the current state of concurrency on react 18","updated_at":"2023-04-27T12:47:38Z","created_at":"2023-04-27T12:47:38Z","creator_user_login":"jeremies"}
{"number":25714,"comment_id":"1321671345","body":"### I found the same thing","updated_at":"2022-11-21T08:21:39Z","created_at":"2022-11-21T08:21:39Z","creator_user_login":"frontend-winter"}
{"number":25714,"comment_id":"1321690763","body":"**This is still true when I try to use the defaultValue property, why isn't it officially marked as a bug**","updated_at":"2022-11-21T08:34:06Z","created_at":"2022-11-21T08:34:06Z","creator_user_login":"frontend-winter"}
{"number":25714,"comment_id":"1321828809","body":"This is not a bug. As far as React can tell, this is the same `input`\r\n\r\n>  it's a new totally different textbox (they have different ids and different props.\r\n\r\nThis doesn't matter for React. If you want to indicate that two elements are distinct, you need to add `key` property for them  ","updated_at":"2022-11-21T10:24:00Z","created_at":"2022-11-21T10:24:00Z","creator_user_login":"vkurchatkin"}
{"number":25714,"comment_id":"1323079660","body":"> This is not a bug. As far as React can tell, this is the same `input`\r\n> \r\n> > it's a new totally different textbox (they have different ids and different props.\r\n> \r\n> This doesn't matter for React. If you want to indicate that two elements are distinct, you need to add `key` property for them\r\n\r\nI understand this is how React currently sees it, perhaps there could be an enhancement made or a warning to indicate the possible problems like how React warns when you try to make changes to uncontrolled input?\r\n\r\nOn top of your suggested method, I've found that I could avoid this problem by making both inputs controlled (but this is far from ideal as it causes re-render on every key stroke). That aside, one of the Discord member Spork suggested to split the second screen into a different component, that too works.","updated_at":"2022-11-22T05:10:57Z","created_at":"2022-11-22T05:10:57Z","creator_user_login":"nubpro"}
{"number":25790,"comment_id":"1335925557","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: f0534ae94a439dc7ac782b973792da59dbde7a7f...d1d6184616f0d65e48f5333ff6d02ce884c1e623\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d1d6184616f0d65e48f5333ff6d02ce884c1e623/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=f0534ae94a439dc7ac782b973792da59dbde7a7f) | **+0.14%** | 154.40 kB | 154.61 kB | +0.11% | 49.00 kB | 49.05 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d1d6184616f0d65e48f5333ff6d02ce884c1e623/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=f0534ae94a439dc7ac782b973792da59dbde7a7f) | **+0.13%** | 156.32 kB | 156.53 kB | +0.13% | 49.65 kB | 49.71 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/d1d6184616f0d65e48f5333ff6d02ce884c1e623/files/facebook-www/ReactDOM-prod.classic.js?compare=f0534ae94a439dc7ac782b973792da59dbde7a7f) | **+0.07%** | 533.40 kB | 533.79 kB | +0.13% | 94.99 kB | 95.12 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/d1d6184616f0d65e48f5333ff6d02ce884c1e623/files/facebook-www/ReactDOM-prod.modern.js?compare=f0534ae94a439dc7ac782b973792da59dbde7a7f) | **+0.07%** | 518.50 kB | 518.89 kB | +0.15% | 92.80 kB | 92.94 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/d1d6184616f0d65e48f5333ff6d02ce884c1e623/files/facebook-www/ReactDOMForked-prod.classic.js?compare=f0534ae94a439dc7ac782b973792da59dbde7a7f) | **+0.07%** | 533.40 kB | 533.79 kB | +0.13% | 94.99 kB | 95.12 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable-semver/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/d1d6184616f0d65e48f5333ff6d02ce884c1e623/files/oss-stable-semver/react-test-renderer/umd/react-test-renderer.production.min.js?compare=f0534ae94a439dc7ac782b973792da59dbde7a7f) | **+0.23%** | 100.44 kB | 100.67 kB | +0.31% | 31.16 kB | 31.26 kB\n| [oss-stable/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/d1d6184616f0d65e48f5333ff6d02ce884c1e623/files/oss-stable/react-test-renderer/umd/react-test-renderer.production.min.js?compare=f0534ae94a439dc7ac782b973792da59dbde7a7f) | **+0.23%** | 100.46 kB | 100.69 kB | +0.30% | 31.16 kB | 31.26 kB\n| [oss-experimental/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/d1d6184616f0d65e48f5333ff6d02ce884c1e623/files/oss-experimental/react-test-renderer/umd/react-test-renderer.production.min.js?compare=f0534ae94a439dc7ac782b973792da59dbde7a7f) | **+0.23%** | 100.52 kB | 100.75 kB | +0.30% | 31.19 kB | 31.28 kB\n| [oss-stable-semver/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/d1d6184616f0d65e48f5333ff6d02ce884c1e623/files/oss-stable-semver/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=f0534ae94a439dc7ac782b973792da59dbde7a7f) | **+0.23%** | 100.20 kB | 100.43 kB | +0.22% | 30.74 kB | 30.81 kB\n| [oss-stable/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/d1d6184616f0d65e48f5333ff6d02ce884c1e623/files/oss-stable/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=f0534ae94a439dc7ac782b973792da59dbde7a7f) | **+0.23%** | 100.22 kB | 100.45 kB | +0.21% | 30.74 kB | 30.81 kB\n| [oss-experimental/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/d1d6184616f0d65e48f5333ff6d02ce884c1e623/files/oss-experimental/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=f0534ae94a439dc7ac782b973792da59dbde7a7f) | **+0.23%** | 100.28 kB | 100.51 kB | +0.21% | 30.78 kB | 30.84 kB\n| [oss-stable-semver/react-art/cjs/react-art.production.min.js](https://react-builds.vercel.app/commits/d1d6184616f0d65e48f5333ff6d02ce884c1e623/files/oss-stable-semver/react-art/cjs/react-art.production.min.js?compare=f0534ae94a439dc7ac782b973792da59dbde7a7f) | **+0.23%** | 92.33 kB | 92.54 kB | +0.19% | 28.43 kB | 28.49 kB\n| [oss-stable/react-art/cjs/react-art.production.min.js](https://react-builds.vercel.app/commits/d1d6184616f0d65e48f5333ff6d02ce884c1e623/files/oss-stable/react-art/cjs/react-art.production.min.js?compare=f0534ae94a439dc7ac782b973792da59dbde7a7f) | **+0.23%** | 92.35 kB | 92.56 kB | +0.19% | 28.43 kB | 28.49 kB\n| [oss-experimental/react-art/cjs/react-art.production.min.js](https://react-builds.vercel.app/commits/d1d6184616f0d65e48f5333ff6d02ce884c1e623/files/oss-experimental/react-art/cjs/react-art.production.min.js?compare=f0534ae94a439dc7ac782b973792da59dbde7a7f) | **+0.22%** | 93.77 kB | 93.98 kB | +0.19% | 28.87 kB | 28.92 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against d1d6184616f0d65e48f5333ff6d02ce884c1e623\n</p>\n","updated_at":"2022-12-03T06:12:49Z","created_at":"2022-12-02T22:28:04Z","creator_user_login":"sizebot"}
{"number":25704,"comment_id":"1331034496","body":"You can actually do this using [Compound Components Design Pattern](https://www.smashingmagazine.com/2021/08/compound-components-react/). There you have an small guide of how to implement it. \r\n\r\nThat's one way to do it. \r\n\r\nYou can use the [Children](https://beta.reactjs.org/apis/react/Children) to manipulate the children in your component and the [cloneElement](https://beta.reactjs.org/apis/react/cloneElement) to change the props on every child\r\n\r\nHere is an example of an If/Else component (this pattern is not a good approach of how to do this. Is just for educational purposes):\r\n\r\n\r\n```jsx\r\nimport { Children, cloneElement } from \"react\";\r\n\r\nconst If = ({ children, predicate }) => {\r\n  return Children.map(children, (child) => {\r\n    return cloneElement(child, { predicate });\r\n  });\r\n};\r\n\r\nconst Then = ({ children, predicate }) => {\r\n  return predicate ? <>{children}</> : <></>;\r\n};\r\n\r\nconst Else = ({ children, predicate }) => {\r\n  return !predicate ? <>{children}</> : <></>;\r\n};\r\n\r\nIf.then = Then;\r\nIf.else = Else;\r\n\r\nexport default If;\r\n\r\n```\r\n\r\nLook how I created two properties on the main component and assigned the proper component to it, so now you can just do something like: \r\n\r\n```jsx\r\nimport If from \"./components/If\";\r\nimport { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [random, setRandom] = useState(Math.random() * 100);\r\n  return (\r\n    <div\r\n      style={{ display: \"flex\", height: \"inherit\", flexDirection: \"column\" }}\r\n    >\r\n      <If predicate={random <= 50}>\r\n        <If.then>\r\n          <p style={{ color: random < 40 ? \"blue\" : \"red\" }}>I'm {random}</p>\r\n        </If.then>\r\n        <If.else>\r\n          <div>\r\n            <p style={{ color: random > 80 ? \"green\" : \"violet\" }}>\r\n              I'm {random}\r\n            </p>\r\n            <button onClick={() => setRandom(0)}>Reset</button>\r\n          </div>\r\n        </If.else>\r\n      </If>\r\n      <button\r\n        onClick={() => setRandom(Math.random() * 100)}\r\n        style={{ width: \"50%\" }}\r\n      >\r\n        Randomize\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n```\r\n\r\nIn that snippet I made the implementation where I just generate random numbers and if is equal or less than 50 I just render \"I'm 34\" (In case that random is 34). In other ways I render the same message but with a button to reset the random number to 0.\r\n\r\nI actually have this code with more components like Switch or a Counter using Compound Components Pattern in a public repository. I'll drop it right [here](https://github.com/zJaaal/react-compound-components)\r\n\r\nHope you find this helpful. \r\n\r\nKindest Regards,\r\n\r\nzJaaal","updated_at":"2022-11-29T17:51:47Z","created_at":"2022-11-29T17:41:24Z","creator_user_login":"zJaaal"}
{"number":25704,"comment_id":"1369878756","body":"Very good, it is cool, but this way is more visual than functional. It is a way to make the code prettier, but we still need to create some components and it doesn't cover the need to direct the component to a specific position in the parent. I think the proposal is still relevant.","updated_at":"2023-01-03T15:09:44Z","created_at":"2023-01-03T15:09:44Z","creator_user_login":"adrielcodeco"}
{"number":25704,"comment_id":"1370242320","body":"What about https://github.com/reactjs/rfcs/pull/223","updated_at":"2023-01-03T21:28:20Z","created_at":"2023-01-03T21:28:20Z","creator_user_login":"nihgwu"}
{"number":25704,"comment_id":"1386074874","body":"It works the same way. very nice @nihgwu. It solves the problem with another approach.","updated_at":"2023-01-17T21:29:05Z","created_at":"2023-01-17T21:29:05Z","creator_user_login":"adrielcodeco"}
{"number":25707,"comment_id":"1331009418","body":"With this change, no place hardcodes this to true. Does this mean there's no test coverage? Is there a place where this should be enabled to ensure test coverage?","updated_at":"2022-11-29T17:19:54Z","created_at":"2022-11-29T17:19:54Z","creator_user_login":"kassens"}
{"number":25707,"comment_id":"1331019412","body":">Is there a place where this should be enabled to ensure test coverage?\r\n\r\nThat was the place. :)","updated_at":"2022-11-29T17:28:32Z","created_at":"2022-11-29T17:28:32Z","creator_user_login":"gaearon"}
{"number":25707,"comment_id":"1331020435","body":"it doesn't look like there is a specific test for this. You can find tests related to this flag by searching for `@gate disableInputAttributeSyncing`. ","updated_at":"2022-11-29T17:29:07Z","created_at":"2022-11-29T17:29:07Z","creator_user_login":"sammy-SC"}
{"number":25707,"comment_id":"1331021665","body":"Maybe I misremember how it works. But I thought that `.www` feature flags correspond to what's actually in www, while `.www-dynamic` feature flags is just our test suite. So if you want to disable the feature on www, it seems like you'd want to disable it in `.www` but keep it on for `.www-dynamic` so that we don't regress on coverage.","updated_at":"2022-11-29T17:30:12Z","created_at":"2022-11-29T17:30:12Z","creator_user_login":"gaearon"}
{"number":25734,"comment_id":"1345183259","body":"i think this problem can be simplified as blocking between two async task\r\n```js\r\n// setData(undefined);\r\nsetTimeout(()=>{\r\n   waiting(8);\r\n   element.innerText= \">>>\"\r\n},0)\r\nsetTimeout(()=>{\r\n   // slowFibonacci\r\n   wait(1000);\r\n},10);\r\n// setTimeout(()=>{wait(1000)},14);\r\n```\r\nlike this, dom render will bloked by second task, if you Increase delay for that task, dom can render normally.\r\n\r\nyou can use `useLayoutEffect` to replace `useEffect`\r\n","updated_at":"2022-12-10T08:25:55Z","created_at":"2022-12-10T08:21:35Z","creator_user_login":"tinyfind"}
{"number":25734,"comment_id":"1442123186","body":"Hello @tinyfind, thanks for your answer.\r\n\r\n`useLayoutEffect` indeed fixes the problem in the sandbox 👍\r\n\r\nHowever, it did not fix the problem I had. For reference, the slow computation I was referring to was located inside a [Chakra UI modal](https://chakra-ui.com/docs/components/modal). At the time you answered this, I didn't manage to reproduce the problem in a sandbox without Chakra.\r\n\r\nBut also, I think that if it was just a matter of using `useLayoutEffect` instead of `useEffect`, @gaearon would have suggested it when he had a look at this problem.\r\n\r\nIf I'm wrong and `useLayoutEffect` was the solution (and thus the problem was something else in the codebase), then I think we can close this issue.\r\n\r\nOtherwise, feel free to tell me if and how you want to deal with this issue.\r\n\r\nAt the time, I forked React and tried to have a look at the problem but had a hard time understanding how the React hooks were implemented (with `resolveDispatcher`, `ReactCurrentDispatcher`, etc...). I managed to create a test project using the locally compiled React (by tweaking`fixtures/packaging/babel-standalone/dev.html`) in order to be able to put some `console.log` around and try to understand what was happening, but that's about it.\r\n\r\nI would be glad to help anyway.","updated_at":"2023-02-23T17:02:47Z","created_at":"2023-02-23T17:01:43Z","creator_user_login":"borisghidaglia"}
{"number":25337,"comment_id":"1260435923","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: cb5084d1c4dc0693e7dcd8af7e921a0aa771914b...043513b6f6e1563d271629050b206f59f6823985\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/043513b6f6e1563d271629050b206f59f6823985/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=cb5084d1c4dc0693e7dcd8af7e921a0aa771914b) | **=** | 135.28 kB | 135.28 kB | = | 43.39 kB | 43.39 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/043513b6f6e1563d271629050b206f59f6823985/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=cb5084d1c4dc0693e7dcd8af7e921a0aa771914b) | **=** | 142.74 kB | 142.74 kB | = | 45.58 kB | 45.58 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/043513b6f6e1563d271629050b206f59f6823985/files/facebook-www/ReactDOM-prod.classic.js?compare=cb5084d1c4dc0693e7dcd8af7e921a0aa771914b) | **=** | 490.70 kB | 490.70 kB | = | 87.32 kB | 87.32 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/043513b6f6e1563d271629050b206f59f6823985/files/facebook-www/ReactDOM-prod.modern.js?compare=cb5084d1c4dc0693e7dcd8af7e921a0aa771914b) | **=** | 475.99 kB | 475.99 kB | = | 85.13 kB | 85.13 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/043513b6f6e1563d271629050b206f59f6823985/files/facebook-www/ReactDOMForked-prod.classic.js?compare=cb5084d1c4dc0693e7dcd8af7e921a0aa771914b) | **=** | 490.70 kB | 490.70 kB | = | 87.32 kB | 87.32 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 043513b6f6e1563d271629050b206f59f6823985\n</p>\n","updated_at":"2022-09-28T06:13:35Z","created_at":"2022-09-28T06:13:35Z","creator_user_login":"sizebot"}
{"number":25337,"comment_id":"1265029741","body":"@RaheemAmer Thank you, Raheem! The fork is now up to date.","updated_at":"2022-10-03T07:13:47Z","created_at":"2022-10-03T07:13:47Z","creator_user_login":"Vicachu42"}
{"number":25379,"comment_id":"1264576535","body":"I think we can fix this at a type level. We already flag map() with no return being assigned to ReactNode.","updated_at":"2022-10-02T07:45:56Z","created_at":"2022-10-02T07:45:56Z","creator_user_login":"eps1lon"}
{"number":25379,"comment_id":"1264577512","body":"Please forgive my lack of familiarity with React-specific terminology here 😅...\r\n\r\n> fix this at a type level\r\n\r\nWhat does \"type level\" mean? As in, will you use some Flow/TypeScript type system trickery, or ...?\r\n\r\n> We already flag map() with no return being assigned to ReactNode\r\n\r\nWhat does this mean?","updated_at":"2022-10-02T07:51:18Z","created_at":"2022-10-02T07:51:18Z","creator_user_login":"JoshuaKGoldberg"}
{"number":25379,"comment_id":"1264635245","body":"> What does \"type level\" mean? As in, will you use some Flow/TypeScript type system trickery, or ...?\r\n\r\nSorry, yes Flow/TypeScript. Though I'm not familiar with Flow I can see how we might fix this with TypeScript since it has a specific type for no `return` statement: `void`.\r\n\r\n\r\nIn React 17, missing a `return` would not be caught with TypeScript. With React 18 we can catch missing returns now now:\r\n\r\n```tsx\r\nconst values = ['a', 'b']\r\n\r\n//  Type 'void' is not assignable to type 'ReactNode'.(2322)\r\nconst element = <div>{\r\n  values.map(value => {\r\n    // no return :(\r\n  })\r\n\r\n}</div>;\r\n```\r\n\r\n[Playground Link](https://www.typescriptlang.org/play?jsx=4#code/MYewdgzgLgBAbgQwDYFcCmEYF4YG0DkC+ANDPgEb4C6AUDaJLGkmgLZpiw4A8AJgJZwAfAG8aMeMnQQAdKwQAHABSJUabEJhiJEgPS6YYEDABOaKChNgYALiXiYAXwCUdR910DhAbhpA)\r\n\r\nWe can do this with `useMemo` but we have to whitelist the types since we don't have [negated types](https://github.com/microsoft/TypeScript/issues/4196) (`T extends void ? never : T` has no good error message).\r\n\r\nA lint rule has the benefit of allowing a proper error message.\r\n","updated_at":"2022-10-02T12:44:43Z","created_at":"2022-10-02T12:44:43Z","creator_user_login":"eps1lon"}
{"number":25379,"comment_id":"1303458481","body":"Literally ran into this today and hoped a rule like this existed. I can try to help write it if it's approved.","updated_at":"2022-11-04T12:43:27Z","created_at":"2022-11-04T12:42:14Z","creator_user_login":"xjamundx"}
{"number":25294,"comment_id":"1250911830","body":"This does not have a lot to do with React.\r\n\r\n`HTMLInputElement` has `defaultValue` property: https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement#properties\r\n\r\n`HTMLSelectElement` does not: https://developer.mozilla.org/en-US/docs/Web/API/HTMLSelectElement#properties","updated_at":"2022-09-19T11:46:06Z","created_at":"2022-09-19T11:46:06Z","creator_user_login":"vkurchatkin"}
{"number":25294,"comment_id":"1251027896","body":"I understand that, but React prompts and console error if I use the \"HTML-way\" of using `selected` in `<option />`.\r\n\r\n![image](https://user-images.githubusercontent.com/14340661/191028470-897f07b3-538f-48a5-9c19-e47df4c9023b.png)\r\n\r\nI believe this is was a decision to provide consistency across form elements (which I agree), but if the prop is not returned when I try to access it in a ref, then there's an inconsistency on this implementation, no?\r\n\r\nHow can I know what is the default value of a select element if React doesn't allow me use the `selected` prop but also doesn't provide the `defaultValue` property on the ref?\r\n","updated_at":"2022-09-19T13:32:52Z","created_at":"2022-09-19T13:32:52Z","creator_user_login":"antonio-costa"}
{"number":25294,"comment_id":"1251114297","body":">  if the prop is not returned when I try to access it in a ref, then there's an inconsistency on this implementation, no?\r\n\r\nReact does indeed provide consistency, but only on the React side of things. It doesn't do anything to unify DOM APIs, because it is not it's job. \r\n\r\n> How can I know what is the default value of a select element if React doesn't allow me use the selected prop but also doesn't provide the defaultValue property on the ref?\r\n\r\nYou can definitely read `selected` when using ref:\r\n\r\n```js\r\nuseEffect(() => {\r\n    console.log(\"select default value\", selectRef.current.querySelector('option[selected]')?.value);\r\n    console.log(\"input default value\", inputRef.current.defaultValue);\r\n  }, []);\r\n```\r\n\r\nBut the most important question is: why do you even want to read `defaultValue` from DOM? You are the one who provides it, you already know it.","updated_at":"2022-09-19T14:37:46Z","created_at":"2022-09-19T14:37:46Z","creator_user_login":"vkurchatkin"}
{"number":25294,"comment_id":"1251243374","body":"I know I can read `selected` property, but React strongly advises against using it in the first place.\r\n\r\nI'm trying to create a reusable hook for uncontrolled forms (similar to React Hook Form) and I'm comparing the current value with the default value in order to check whether an input has been changed.\r\nThis comparison can be done anywhere inside the form context, which may have several components nested and diverging trees. \r\n\r\nMy solution is to simply keep a reference to the fields registered in the form and access the DOM when I need information. That way I can freely change inputs without any unnecessary re-renders.\r\n\r\nI can try to find a way around this, sure, but it just seems inconsistent that I'm advised against the `selected` property in favor of  `defaultValue` property, but that one is not provided anywhere in the DOM just as `selected` property is.","updated_at":"2022-09-19T16:19:55Z","created_at":"2022-09-19T16:19:22Z","creator_user_login":"antonio-costa"}
{"number":25294,"comment_id":"1251329512","body":"> I know I can read selected property, but React strongly advises against using it in the first place.\r\n\r\nReact advises you agains using `selected` as React prop, nothing more. It is unreasonable to expect it to actually add a nonexistent property to a DOM node. If you want to work with DOM directly it is up to you to handle differences like this","updated_at":"2022-09-19T17:32:57Z","created_at":"2022-09-19T17:32:57Z","creator_user_login":"vkurchatkin"}
{"number":25623,"comment_id":"1301761810","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 2ac77aab94d125942d71e9113d70253eaaef698f...d4055c68809201e0fe783b5fb85dfd5cd8bf2256\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **=** | 153.13 kB | 153.13 kB | = | 48.84 kB | 48.84 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **=** | 155.05 kB | 155.05 kB | = | 49.44 kB | 49.44 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/facebook-www/ReactDOM-prod.classic.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **=** | 529.21 kB | 529.21 kB | = | 94.49 kB | 94.48 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/facebook-www/ReactDOM-prod.modern.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **=** | 514.47 kB | 514.47 kB | = | 92.33 kB | 92.32 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/facebook-www/ReactDOMForked-prod.classic.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **=** | 529.21 kB | 529.21 kB | = | 94.49 kB | 94.48 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable-semver/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/oss-stable-semver/react/cjs/react.shared-subset.production.min.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **+0.29%** | 7.88 kB | 7.90 kB | +0.74% | 3.26 kB | 3.28 kB\n| [oss-stable/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/oss-stable/react/cjs/react.shared-subset.production.min.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **+0.29%** | 7.90 kB | 7.92 kB | +0.79% | 3.28 kB | 3.30 kB\n| [oss-stable-semver/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/oss-stable-semver/react/cjs/react.production.min.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **+0.28%** | 8.30 kB | 8.33 kB | +0.70% | 3.14 kB | 3.16 kB\n| [oss-experimental/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/oss-experimental/react/cjs/react.shared-subset.production.min.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **+0.28%** | 8.31 kB | 8.33 kB | +0.74% | 3.40 kB | 3.43 kB\n| [oss-stable/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/oss-stable/react/cjs/react.production.min.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **+0.28%** | 8.33 kB | 8.35 kB | +0.70% | 3.16 kB | 3.18 kB\n| [oss-experimental/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/oss-experimental/react/cjs/react.production.min.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **+0.25%** | 9.07 kB | 9.09 kB | +0.65% | 3.38 kB | 3.41 kB\n| [oss-stable-semver/react/umd/react.profiling.min.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/oss-stable-semver/react/umd/react.profiling.min.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **+0.21%** | 12.12 kB | 12.14 kB | +0.04% | 4.72 kB | 4.73 kB\n| [oss-stable-semver/react/umd/react.production.min.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/oss-stable-semver/react/umd/react.production.min.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **+0.21%** | 12.12 kB | 12.15 kB | +0.02% | 4.72 kB | 4.72 kB\n| [oss-stable/react/umd/react.profiling.min.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/oss-stable/react/umd/react.profiling.min.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **+0.21%** | 12.14 kB | 12.17 kB | +0.02% | 4.75 kB | 4.75 kB\n| [oss-stable/react/umd/react.production.min.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/oss-stable/react/umd/react.production.min.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **+0.21%** | 12.14 kB | 12.17 kB | +0.02% | 4.75 kB | 4.75 kB\n| [oss-experimental/react/umd/react.profiling.min.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/oss-experimental/react/umd/react.profiling.min.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **+0.20%** | 12.83 kB | 12.86 kB | +0.18% | 4.95 kB | 4.96 kB\n| [oss-experimental/react/umd/react.production.min.js](https://react-builds.vercel.app/commits/d4055c68809201e0fe783b5fb85dfd5cd8bf2256/files/oss-experimental/react/umd/react.production.min.js?compare=2ac77aab94d125942d71e9113d70253eaaef698f) | **+0.20%** | 12.83 kB | 12.86 kB | +0.18% | 4.95 kB | 4.96 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against d4055c68809201e0fe783b5fb85dfd5cd8bf2256\n</p>\n","updated_at":"2022-11-03T08:10:09Z","created_at":"2022-11-03T08:10:09Z","creator_user_login":"sizebot"}
{"number":25324,"comment_id":"1257047919","body":"Hi @ta1m1kam! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Freact%20%2325324). Thanks!","updated_at":"2022-09-24T19:13:49Z","created_at":"2022-09-24T19:13:49Z","creator_user_login":"facebook-github-bot"}
{"number":25324,"comment_id":"1257048763","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: cb5084d1c4dc0693e7dcd8af7e921a0aa771914b...7519fdcb5c27dcbae4f41cd6af027016e41b45a4\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7519fdcb5c27dcbae4f41cd6af027016e41b45a4/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=cb5084d1c4dc0693e7dcd8af7e921a0aa771914b) | **=** | 135.28 kB | 135.28 kB | = | 43.39 kB | 43.39 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7519fdcb5c27dcbae4f41cd6af027016e41b45a4/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=cb5084d1c4dc0693e7dcd8af7e921a0aa771914b) | **=** | 142.74 kB | 142.74 kB | = | 45.58 kB | 45.58 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/7519fdcb5c27dcbae4f41cd6af027016e41b45a4/files/facebook-www/ReactDOM-prod.classic.js?compare=cb5084d1c4dc0693e7dcd8af7e921a0aa771914b) | **=** | 490.70 kB | 490.70 kB | = | 87.32 kB | 87.32 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/7519fdcb5c27dcbae4f41cd6af027016e41b45a4/files/facebook-www/ReactDOM-prod.modern.js?compare=cb5084d1c4dc0693e7dcd8af7e921a0aa771914b) | **=** | 475.99 kB | 475.99 kB | = | 85.13 kB | 85.13 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/7519fdcb5c27dcbae4f41cd6af027016e41b45a4/files/facebook-www/ReactDOMForked-prod.classic.js?compare=cb5084d1c4dc0693e7dcd8af7e921a0aa771914b) | **=** | 490.70 kB | 490.70 kB | = | 87.32 kB | 87.32 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 7519fdcb5c27dcbae4f41cd6af027016e41b45a4\n</p>\n","updated_at":"2022-09-24T19:48:14Z","created_at":"2022-09-24T19:18:50Z","creator_user_login":"sizebot"}
{"number":25324,"comment_id":"1257064920","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-09-24T21:03:34Z","created_at":"2022-09-24T21:03:34Z","creator_user_login":"facebook-github-bot"}
{"number":25324,"comment_id":"1257064927","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-09-24T21:03:37Z","created_at":"2022-09-24T21:03:37Z","creator_user_login":"facebook-github-bot"}
{"number":24812,"comment_id":"1170012560","body":"The raw component tree (virtual DOM?) looks like this, so at this level the `selected` and `data-selected` look the same (this is from a different example):\r\n\r\n```\r\npendingProps: {\r\n  'data-id': '25',\r\n  'data-selected': true,\r\n  selected: true,\r\n  children: 'Card'\r\n},\r\nmemoizedProps: {\r\n  'data-id': '25',\r\n  'data-selected': true,\r\n  selected: true,\r\n  children: 'Card'\r\n},\r\n```\r\n\r\nWith a [forked CodeSandbox](https://codesandbox.io/s/eager-euler-8gr4di?file=/src/App.js), we can see the rendered HTML looks different from the parsed HTML from the string by the browser:\r\n\r\n```\r\n=== React === \r\n<INPUT disabled=\"\" data-disabled=\"true\"></INPUT>\r\n1 \"\" \r\n2 true \r\n=== Javascript === \r\n<INPUT class=\"injected\" disabled=\"\" data-disabled=\"\"></INPUT>\r\n3 \"\" \r\n4 \"\"\r\n```\r\n\r\nSo I'd like to theorize that it's when renderingn the VirtualDOM to the HTML that this transformation occurs only for the data-attributes. I'm not familiar with the React codebase, but [I might guess it's somewhere around here](https://github.com/facebook/react/blob/82c64e1a49239158c0daa7f0d603d2ad2ee667a9/packages/react-dom/src/client/DOMPropertyOperations.js) that this happens? One `if()` uses the empty string, and the other stringifies the value, which would convert a `true` boolean into a `\"true\"` string:\r\n\r\n```js\r\n    if (type === BOOLEAN || (type === OVERLOADED_BOOLEAN && value === true)) {\r\n      // If attribute type is boolean, we know for sure it won't be an execution sink\r\n      // and we won't require Trusted Type here.\r\n      attributeValue = '';\r\n    } else {\r\n      // `setAttribute` with objects becomes only `[object]` in IE8/9,\r\n      // ('' + value) makes it output the correct toString()-value.\r\n      if (enableTrustedTypesIntegration) {\r\n        attributeValue = (value: any);\r\n      } else {\r\n        if (__DEV__) {\r\n          checkAttributeStringCoercion(value, attributeName);\r\n        }\r\n        attributeValue = '' + (value: any);\r\n      }\r\n```","updated_at":"2022-06-29T13:57:49Z","created_at":"2022-06-29T13:55:12Z","creator_user_login":"franciscop"}
{"number":24812,"comment_id":"1172083175","body":"I try to find the answer of first question：\r\n<img width=\"768\" alt=\"企业微信截图_1cbd0dd5-2320-4129-8beb-9c6b093e92ad\" src=\"https://user-images.githubusercontent.com/31502024/176855188-7d62923a-707b-4358-9c44-f39251eee51c.png\">\r\nBecause you don't set the value of ‘data-disabled’，so the react give the value ‘true’。\r\nwhen react try to set property of Dom：\r\n<img width=\"769\" alt=\"企业微信截图_3d226130-36ce-4bd1-b42f-f029ffc51b11\" src=\"https://user-images.githubusercontent.com/31502024/176855681-61f65a43-4172-4cb1-b525-fc58933c0e66.png\">\r\nBecause ‘ disabled’ is the property of Dom，react reset the value to ‘’。\r\n<img width=\"776\" alt=\"企业微信截图_33370183-fd73-4c7d-80c3-230ea241deb9\" src=\"https://user-images.githubusercontent.com/31502024/176855947-35414964-f53d-4b04-96cc-aa357b14881a.png\">\r\nBecause ‘data-disabled’ is not the property of Dom，react set the value to ‘’ + rawValue。\r\nThat is the difference of react and javascript in your first question。\r\n","updated_at":"2022-07-01T08:27:43Z","created_at":"2022-07-01T08:27:43Z","creator_user_login":"DuffyWang926"}
{"number":24812,"comment_id":"1173153794","body":"I agree with the above clarification.","updated_at":"2022-07-03T19:00:06Z","created_at":"2022-07-03T19:00:06Z","creator_user_login":"ziavii"}
{"number":25318,"comment_id":"1256269813","body":"Re-rendering in principle doesn’t make sense in SSR. The goal is to do everything in a single pass. The thing you read about is about adjusting state *in response to another update* but there are no real updates on the server because there is no user interaction.\r\n\r\nWe plan to add a warning (deprecate) calling setState during *initial* render, both on the server and on the client. ","updated_at":"2022-09-23T14:13:31Z","created_at":"2022-09-23T14:13:31Z","creator_user_login":"gaearon"}
{"number":25318,"comment_id":"1256272549","body":"So, to clarify — the existing behavior is inconsistent for backwards compat reasons. But we should deprecate adjusting it during initial render (which includes SSR), which in turn will let us stop supporting this in SSR altogether. ","updated_at":"2022-09-23T14:15:44Z","created_at":"2022-09-23T14:15:44Z","creator_user_login":"gaearon"}
{"number":25318,"comment_id":"1256283820","body":"Understood, make sense.\r\n\r\n> The thing you read about is about adjusting state in response to another update but there are no real updates on the server because there is no user interaction.\r\n\r\nIn this case, components can contain any side-effect (like fetch) on the component body and then set the state right away, that would still derive this state from another, right? This will be the breaking change I suppose. \r\n\r\nThose warnings are part of react-dom/server and have nothing to do with React.StrictMode?\r\n\r\nThanks for the fast answer","updated_at":"2022-09-23T14:25:19Z","created_at":"2022-09-23T14:25:19Z","creator_user_login":"davesnx"}
{"number":25318,"comment_id":"1256414517","body":">In this case, components can contain any side-effect (like fetch) on the component body and then set the state right away, that would still derive this state from another, right? This will be the breaking change I suppose.\r\n\r\nNot sure I understand. fetch() is asynchronous, right? How would it set state right away? But yes, setting state in general *during the initial render* would be deprecated. It's never needed by definition — if the state is available during initial render, then there's no point in *setting* it — make it the initial state.\r\n\r\n>Those warnings are part of react-dom/server and have nothing to do with React.StrictMode?\r\n\r\nThey would be a part of `react-dom/server` and probably `react-dom` on the client too.\r\n\r\n","updated_at":"2022-09-23T16:22:15Z","created_at":"2022-09-23T16:22:07Z","creator_user_login":"gaearon"}
{"number":25232,"comment_id":"1242729271","body":"Hi @jjangga0214! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Freact%20%2325232). Thanks!","updated_at":"2022-09-10T13:29:27Z","created_at":"2022-09-10T13:29:27Z","creator_user_login":"facebook-github-bot"}
{"number":25232,"comment_id":"1242747803","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-09-10T15:03:24Z","created_at":"2022-09-10T15:03:24Z","creator_user_login":"facebook-github-bot"}
{"number":25232,"comment_id":"1246280750","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 3613284dceac38de4ef5a7c93c4897600ee6923b...3c2499ebaa6d222b5262d64004827a8d97ad9da1\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/3c2499ebaa6d222b5262d64004827a8d97ad9da1/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=3613284dceac38de4ef5a7c93c4897600ee6923b) | **=** | 134.97 kB | 134.97 kB | = | 43.23 kB | 43.23 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/3c2499ebaa6d222b5262d64004827a8d97ad9da1/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=3613284dceac38de4ef5a7c93c4897600ee6923b) | **=** | 141.69 kB | 141.69 kB | = | 45.23 kB | 45.23 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/3c2499ebaa6d222b5262d64004827a8d97ad9da1/files/facebook-www/ReactDOM-prod.classic.js?compare=3613284dceac38de4ef5a7c93c4897600ee6923b) | **=** | 486.26 kB | 486.26 kB | = | 86.55 kB | 86.55 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/3c2499ebaa6d222b5262d64004827a8d97ad9da1/files/facebook-www/ReactDOM-prod.modern.js?compare=3613284dceac38de4ef5a7c93c4897600ee6923b) | **=** | 471.57 kB | 471.57 kB | = | 84.32 kB | 84.32 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/3c2499ebaa6d222b5262d64004827a8d97ad9da1/files/facebook-www/ReactDOMForked-prod.classic.js?compare=3613284dceac38de4ef5a7c93c4897600ee6923b) | **=** | 486.26 kB | 486.26 kB | = | 86.55 kB | 86.55 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 3c2499ebaa6d222b5262d64004827a8d97ad9da1\n</p>\n","updated_at":"2022-09-21T07:06:15Z","created_at":"2022-09-14T06:00:02Z","creator_user_login":"sizebot"}
{"number":25216,"comment_id":"1241545475","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: c80e54116e2f9c550472116181a5c66ad97adfbf...e5440135f090aa5e0a185c7de085ef63f48213d2\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e5440135f090aa5e0a185c7de085ef63f48213d2/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=c80e54116e2f9c550472116181a5c66ad97adfbf) | **=** | 134.97 kB | 134.97 kB | = | 43.23 kB | 43.23 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e5440135f090aa5e0a185c7de085ef63f48213d2/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=c80e54116e2f9c550472116181a5c66ad97adfbf) | **=** | 141.69 kB | 141.69 kB | = | 45.23 kB | 45.22 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/e5440135f090aa5e0a185c7de085ef63f48213d2/files/facebook-www/ReactDOM-prod.classic.js?compare=c80e54116e2f9c550472116181a5c66ad97adfbf) | **+0.04%** | 486.24 kB | 486.41 kB | +0.06% | 86.55 kB | 86.60 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/e5440135f090aa5e0a185c7de085ef63f48213d2/files/facebook-www/ReactDOM-prod.modern.js?compare=c80e54116e2f9c550472116181a5c66ad97adfbf) | **+0.04%** | 471.52 kB | 471.69 kB | +0.07% | 84.32 kB | 84.38 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/e5440135f090aa5e0a185c7de085ef63f48213d2/files/facebook-www/ReactDOMForked-prod.classic.js?compare=c80e54116e2f9c550472116181a5c66ad97adfbf) | **+0.04%** | 486.24 kB | 486.41 kB | +0.06% | 86.55 kB | 86.60 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [facebook-www/ReactIs-dev.modern.js](https://react-builds.vercel.app/commits/e5440135f090aa5e0a185c7de085ef63f48213d2/files/facebook-www/ReactIs-dev.modern.js?compare=c80e54116e2f9c550472116181a5c66ad97adfbf) | **+1.01%** | 9.62 kB | 9.72 kB | +0.75% | 2.54 kB | 2.56 kB\n| [facebook-www/ReactIs-dev.classic.js](https://react-builds.vercel.app/commits/e5440135f090aa5e0a185c7de085ef63f48213d2/files/facebook-www/ReactIs-dev.classic.js?compare=c80e54116e2f9c550472116181a5c66ad97adfbf) | **+1.01%** | 9.62 kB | 9.72 kB | +0.75% | 2.54 kB | 2.56 kB\n| [facebook-www/JSXDEVRuntime-dev.modern.js](https://react-builds.vercel.app/commits/e5440135f090aa5e0a185c7de085ef63f48213d2/files/facebook-www/JSXDEVRuntime-dev.modern.js?compare=c80e54116e2f9c550472116181a5c66ad97adfbf) | **+0.21%** | 45.70 kB | 45.80 kB | +0.19% | 12.94 kB | 12.96 kB\n| [facebook-www/JSXDEVRuntime-dev.classic.js](https://react-builds.vercel.app/commits/e5440135f090aa5e0a185c7de085ef63f48213d2/files/facebook-www/JSXDEVRuntime-dev.classic.js?compare=c80e54116e2f9c550472116181a5c66ad97adfbf) | **+0.21%** | 45.70 kB | 45.80 kB | +0.20% | 12.94 kB | 12.96 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against e5440135f090aa5e0a185c7de085ef63f48213d2\n</p>\n","updated_at":"2022-09-17T00:11:36Z","created_at":"2022-09-09T06:16:57Z","creator_user_login":"sizebot"}
{"number":25216,"comment_id":"1241828326","body":"Does this supersede https://github.com/facebook/react/pull/24535?","updated_at":"2022-09-09T11:01:15Z","created_at":"2022-09-09T11:01:15Z","creator_user_login":"gaearon"}
{"number":25216,"comment_id":"1242261526","body":"> Does this supersede https://github.com/facebook/react/pull/24535?\r\n\r\nYeah","updated_at":"2022-09-09T17:26:36Z","created_at":"2022-09-09T17:26:36Z","creator_user_login":"tyao1"}
{"number":24794,"comment_id":"1172076463","body":"Its a biggest problem of SSR and impacting SEO. if UI is not getting loaded, Helmet will not add title and meta's.\r\n\r\n@[lunaruan](https://github.com/lunaruan)\r\n@[eps1lon](https://github.com/eps1lon)\r\n@[wegry](https://github.com/wegry)\r\n@[bvaughn](https://github.com/bvaughn)\r\n@[Mancunia](https://github.com/Mancunia)","updated_at":"2022-07-01T08:28:23Z","created_at":"2022-07-01T08:20:15Z","creator_user_login":"hdlion"}
{"number":24794,"comment_id":"1550925683","body":"I have the same problem in NextJS but it only happens if I fetch data using Axios instead of `fetch` (which is manipulated by NextJS in some way). \r\nhttps://github.com/vercel/next.js/issues/49895\r\n\r\nHere is a sandbox:\r\nhttps://codesandbox.io/p/sandbox/elated-platform-qvosk2?file=%2Fapp%2Flayout.tsx%3A1%2C1","updated_at":"2023-05-17T08:02:26Z","created_at":"2023-05-17T07:53:20Z","creator_user_login":"codinginflow"}
{"number":24794,"comment_id":"1694702417","body":"@codinginflow weird, because it happens to me if I use suspense and disable javascript, and I'm not using Axios.","updated_at":"2023-08-27T16:00:19Z","created_at":"2023-08-27T16:00:03Z","creator_user_login":"sorenhoyer"}
{"number":24794,"comment_id":"1694717480","body":"> @codinginflow weird, because it happens to me if I use suspense and disable javascript, and I'm not using Axios.\r\n\r\nI was wrong. It happens with fetch too. And apparently, it's expected because JavaScript is necessary to navigate from the loading indicator to the page. Although this seems to kill the purpose of SSR a bit.","updated_at":"2023-08-27T17:12:13Z","created_at":"2023-08-27T17:12:13Z","creator_user_login":"codinginflow"}
{"number":24831,"comment_id":"1214422369","body":"Andarist pointed out this is likely the cause of https://github.com/reduxjs/react-redux/issues/1912 ","updated_at":"2022-08-14T17:51:28Z","created_at":"2022-08-14T17:51:28Z","creator_user_login":"markerikson"}
{"number":24831,"comment_id":"1237454274","body":"`unstable_batchedUpdates` is a way to deprioritize an update by delaying it. The default priority is even more delayed and more batched than `unstable_batchedUpdates`. So `unstable_batchedUpdates` is a noop in React 18.\r\n\r\nIf you need the consistency you need to compromise - by making your updates less batched and flush earlier than they otherwise would - using `flushSync`.\r\n\r\nThat's the compromise of using `useSyncExternalStore`. To preserve consistency with external mutable store you have to make it less batchable - less delayed, than other forms of updates.","updated_at":"2022-09-05T21:01:42Z","created_at":"2022-09-05T21:01:03Z","creator_user_login":"sebmarkbage"}
{"number":24831,"comment_id":"1296944806","body":"> So `unstable_batchedUpdates` is a noop in React 18.\r\n\r\nCool, that's the first time I'm seeing this. Is the same true for `unstable_batchedUpdates` from `react-native` @sebmarkbage ?","updated_at":"2022-10-31T11:21:01Z","created_at":"2022-10-31T11:21:01Z","creator_user_login":"TkDodo"}
{"number":24720,"comment_id":"1155038186","body":"What exactly does your library do and how do you integrate it? Can you give some examples that break?","updated_at":"2022-06-14T11:06:09Z","created_at":"2022-06-14T11:06:09Z","creator_user_login":"gaearon"}
{"number":24720,"comment_id":"1155083032","body":"We have a UI-Framework (used only in our company) which is similar to React has it's own components called widgets for UI. One of them is ReactWidget, if all other widgets are rendered completely by old framework, for ReactWidgets only container HTML-Element is rendered with some attributes (component name, id) and the rest must be rendered by React.\r\n\r\nIntegration is done by using [React.Lazy](https://reactjs.org/docs/code-splitting.html#reactlazy) (to load components by given name), [React Portals](https://reactjs.org/docs/portals.html) (to render components in the given container from old framework).\r\n\r\nSo sometimes old framework must unmount the ReactWidget (container) which is also removes all it's children rendered by React. In this case we try to remove them from React's Virtual DOM as well to avoid memory leaks and to keep the Virtual DOM and actual DOM consistent. This is done by storing rendered React Components in an array, when old framework changes the DOM an event is fired, React part must remove unmounted components from Virtual DOM and render again. In this case React tries to remove an HTML-Element which was already removed by old framework, and the exception gets thrown. That's why we added an if check before removing an HTML-Element, which has solved our problem.\r\n ","updated_at":"2022-06-14T11:55:57Z","created_at":"2022-06-14T11:53:48Z","creator_user_login":"erkebek"}
{"number":24720,"comment_id":"1282246488","body":"Same problem. when using google browser translator.\r\nError: Failed to execute 'removeChild' on 'Node': The node to be removed is not a child of this node. at removeChild","updated_at":"2022-10-18T11:37:13Z","created_at":"2022-10-18T11:37:13Z","creator_user_login":"DinarSharipov"}
{"number":24720,"comment_id":"1472173219","body":"same for me with react-apexcharts library.\r\nI create a portal inside on of their nodes are it crashes when the portal tries to unmount.\r\n\r\nthe problem is it totally crashes my app now instead of just displaying an error in the logs\r\nCan't this be fixed as said in 1st comment ?\r\nYou alway remove it form Virtual DOM and remove it from dom only if it is still under the container for example","updated_at":"2023-03-16T15:13:28Z","created_at":"2023-03-16T15:13:28Z","creator_user_login":"paztis"}
{"number":24720,"comment_id":"1472174596","body":"By the way until a fix is done, how can I prevent my app to crash because of it ?","updated_at":"2023-03-16T15:14:17Z","created_at":"2023-03-16T15:14:17Z","creator_user_login":"paztis"}
{"number":24720,"comment_id":"1521740137","body":"This bug is causing me more and more issues.\r\nCan't you just add a try/catch over container.parentNode.removeChild(child); ?\r\n\r\nThere's no way on our side to avoid this defect. It appears more and more when we're creating a Portal over another React component node\r\n\r\nPlease give a status to this","updated_at":"2023-04-25T12:53:19Z","created_at":"2023-04-25T12:53:19Z","creator_user_login":"paztis"}
{"number":24703,"comment_id":"1152534149","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 8186b19378d9085fcdec32c42e2ec8845c1f8ce0...52a079e12531c106a1b320f29602085ddc61f2e1\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 131.76 kB | 131.76 kB | = | 42.31 kB | 42.30 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 137.03 kB | 137.03 kB | = | 43.90 kB | 43.90 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 441.08 kB | 441.08 kB | = | 80.68 kB | 80.68 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 426.39 kB | 426.39 kB | = | 78.49 kB | 78.48 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 441.79 kB | 441.79 kB | = | 80.90 kB | 80.90 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 52a079e12531c106a1b320f29602085ddc61f2e1\n</p>\n","updated_at":"2022-06-10T16:45:45Z","created_at":"2022-06-10T16:26:28Z","creator_user_login":"sizebot"}
{"number":24703,"comment_id":"1152557839","body":"I don’t think we have ever done anything to determine if the hook function is constant. eg if someone takes a hook as a prop, or if a hook returns another hook, or if a hook binding is mutated in module scope we also don’t error.","updated_at":"2022-06-10T16:56:29Z","created_at":"2022-06-10T16:56:29Z","creator_user_login":"sophiebits"}
{"number":24703,"comment_id":"1152566167","body":"Somewhat related https://github.com/facebook/react/pull/22044#issuecomment-1092059007","updated_at":"2022-06-10T17:05:45Z","created_at":"2022-06-10T17:05:45Z","creator_user_login":"gaearon"}
{"number":24741,"comment_id":"1157965744","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 4cd788aef03d8f32c03e4dac4d0cf28b220cedfb...eb16b747e01daf8d9b23430afffe83aa3700ddcf\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/eb16b747e01daf8d9b23430afffe83aa3700ddcf/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **=** | 131.79 kB | 131.79 kB | = | 42.40 kB | 42.40 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/eb16b747e01daf8d9b23430afffe83aa3700ddcf/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **=** | 137.06 kB | 137.06 kB | = | 44.00 kB | 44.00 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/eb16b747e01daf8d9b23430afffe83aa3700ddcf/files/facebook-www/ReactDOM-prod.classic.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **=** | 457.17 kB | 457.17 kB | = | 83.22 kB | 83.22 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/eb16b747e01daf8d9b23430afffe83aa3700ddcf/files/facebook-www/ReactDOM-prod.modern.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **=** | 442.41 kB | 442.41 kB | = | 80.94 kB | 80.94 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/eb16b747e01daf8d9b23430afffe83aa3700ddcf/files/facebook-www/ReactDOMForked-prod.classic.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **=** | 457.94 kB | 457.94 kB | = | 83.33 kB | 83.33 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against eb16b747e01daf8d9b23430afffe83aa3700ddcf\n</p>\n","updated_at":"2022-07-02T07:31:19Z","created_at":"2022-06-16T17:51:25Z","creator_user_login":"sizebot"}
{"number":24741,"comment_id":"1426706930","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 64acd3918a26d92773d3dd451a735603ef50d3a7...ea406253fca7127d95466959d8229cf67c4faa18\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/ea406253fca7127d95466959d8229cf67c4faa18/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=64acd3918a26d92773d3dd451a735603ef50d3a7) | **=** | 154.54 kB | 154.55 kB | = | 48.83 kB | 48.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/ea406253fca7127d95466959d8229cf67c4faa18/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=64acd3918a26d92773d3dd451a735603ef50d3a7) | **=** | 156.54 kB | 156.54 kB | = | 49.45 kB | 49.45 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/ea406253fca7127d95466959d8229cf67c4faa18/files/facebook-www/ReactDOM-prod.classic.js?compare=64acd3918a26d92773d3dd451a735603ef50d3a7) | **=** | 529.73 kB | 529.73 kB | = | 94.36 kB | 94.36 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/ea406253fca7127d95466959d8229cf67c4faa18/files/facebook-www/ReactDOM-prod.modern.js?compare=64acd3918a26d92773d3dd451a735603ef50d3a7) | **=** | 514.95 kB | 514.95 kB | = | 92.17 kB | 92.17 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against ea406253fca7127d95466959d8229cf67c4faa18\n</p>\n","updated_at":"2023-02-11T11:42:56Z","created_at":"2023-02-11T11:42:56Z","creator_user_login":"react-sizebot"}
{"number":24797,"comment_id":"1167386163","body":"Hi @xlzy520! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Freact%20%2324797). Thanks!","updated_at":"2022-06-27T13:56:53Z","created_at":"2022-06-27T13:56:53Z","creator_user_login":"facebook-github-bot"}
{"number":24797,"comment_id":"1168212547","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-06-28T04:39:52Z","created_at":"2022-06-28T04:39:52Z","creator_user_login":"facebook-github-bot"}
{"number":24797,"comment_id":"1170726518","body":"and fix the issue by the way.\r\n[[DevTools Bug]: Open in editor does not work on Firefox #247]( https://github.com/facebook/react/issues/24731)","updated_at":"2022-06-30T04:04:31Z","created_at":"2022-06-30T04:04:31Z","creator_user_login":"xlzy520"}
{"number":27221,"comment_id":"1676368586","body":"Hi, You have to build your vite app once again, then the issue will be resolved.","updated_at":"2023-08-13T13:59:47Z","created_at":"2023-08-13T13:59:47Z","creator_user_login":"ketanbaitule"}
{"number":27221,"comment_id":"1676622030","body":"@ketanbaitule I built it once again then the same error shows up:\r\n![image](https://github.com/facebook/react/assets/78984964/135dc6ca-ab33-4f9f-8eff-e2d6ee7d0b2f)\r\n![image](https://github.com/facebook/react/assets/78984964/5f8d928a-cb57-4d06-a867-98a12911776f)\r\n![image](https://github.com/facebook/react/assets/78984964/b62222a6-9a9e-4dcf-8f38-349053f48da4)\r\n![image](https://github.com/facebook/react/assets/78984964/90938b5f-e43f-43b6-9fea-752d8a107681)\r\n","updated_at":"2023-08-14T03:36:25Z","created_at":"2023-08-14T03:36:25Z","creator_user_login":"MiguelG97"}
{"number":27221,"comment_id":"1676690202","body":"I am not able to reproduce this error.\r\n`index.html`\r\n\r\n![index.html](https://github.com/facebook/react/assets/111437670/d6625741-583d-4952-9136-383a4b1d6cc6)\r\n\r\n\r\nThis code creates an error: `src/main.jsx`\r\n\r\n![src/main.jsx](https://github.com/facebook/react/assets/111437670/99584b7e-7eae-40ca-89c2-35468f5d374e)\r\n\r\n![Console_Error](https://github.com/facebook/react/assets/111437670/9fabea4c-7743-4b66-985d-148918219000)\r\n\r\nBut this doesn't: `src/main.jsx`\r\n\r\n![src/main.jsx](https://github.com/facebook/react/assets/111437670/0802bce0-5eb7-48df-9b34-74f836dff5a3)\r\n\r\n![No_Error](https://github.com/facebook/react/assets/111437670/b1978277-c00e-4491-9dae-3c2089db59f4)\r\n\r\n","updated_at":"2023-08-14T05:13:59Z","created_at":"2023-08-14T05:13:59Z","creator_user_login":"ketanbaitule"}
{"number":27221,"comment_id":"1679905160","body":"in index.js file put this code.\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\n\r\nimport App from './App';\r\nimport './App.css'\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);","updated_at":"2023-08-16T03:27:46Z","created_at":"2023-08-16T03:27:46Z","creator_user_login":"Meesujit"}
{"number":27120,"comment_id":"1644963801","body":"I think you should use react-router-dom for routing you want to open something in new tab giving it dynamic url you can do like this\r\n\r\n`const uri = /#/issues/\" + props.data.issueNumber`;\r\n`<Link target={\"_blank\"} to={uri} > {\"#issue\"+props.data.issueNumber } </Link>`\r\nand add a route tag with dynamic tag\r\n\r\n`<Route exact path =\"/issues/:id\"><Issue/></Route>`\r\nand in Issue component you can do filter using id that you can get from **useParams** and display the data accordingly \r\nI tried it will provide expected behavior as you want","updated_at":"2023-07-21T04:25:10Z","created_at":"2023-07-21T04:25:10Z","creator_user_login":"vimal20002"}
{"number":27120,"comment_id":"1646933232","body":"```\r\nimport { ICellRendererParams } from \"ag-grid-community\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function IssueDetailCellRenderer(props: ICellRendererParams) {\r\n  return (\r\n    <Link\r\n      to={\"/issues/\" + props.data.issueNumber}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n      style={{ textDecoration: \"none\" }}\r\n    >\r\n      {props.value}\r\n    </Link>\r\n  );\r\n}\r\n```\r\n\r\nThis might help","updated_at":"2023-07-23T19:02:13Z","created_at":"2023-07-23T19:02:13Z","creator_user_login":"iamabhshk"}
{"number":27120,"comment_id":"1647168420","body":"> `const uri = /#/issues/\" + props.data.issueNumber`;\r\n\r\nQuery is not \"How to open a new tab\"\r\n\r\nMy Issue is after opening a new tab(loaded successfully), when I am trying to change URL of this tab directly and press Enter. Brower does not reload. Only if I click on URL tab again and press Enter again it reload.","updated_at":"2023-07-24T04:09:42Z","created_at":"2023-07-24T04:09:42Z","creator_user_login":"ApoorvSeth"}
{"number":27120,"comment_id":"1664932148","body":"import { ICellRendererParams } from \"ag-grid-community\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport default function IssueDetailCellRenderer(props: ICellRendererParams) {\r\n  useEffect(() => {\r\n    function handleLinkClick(event) {\r\n      event.preventDefault();\r\n      const newTab = window.open(\"\", \"_blank\");\r\n      if (newTab) {\r\n        newTab.location.href = \"/#/issues/\" + props.data.issueNumber;\r\n      }\r\n    }\r\n\r\n    const linkElement = document.getElementById(`issue-link-${props.rowIndex}`);\r\n    if (linkElement) {\r\n      linkElement.addEventListener(\"click\", handleLinkClick);\r\n    }\r\n\r\n    return () => {\r\n      if (linkElement) {\r\n        linkElement.removeEventListener(\"click\", handleLinkClick);\r\n      }\r\n    };\r\n  }, [props.data.issueNumber, props.rowIndex]);\r\n\r\n  return (\r\n    <a\r\n      sx={{ textDecoration: \"none\" }}\r\n      href=\"/#/issues/\"\r\n      id={`issue-link-${props.rowIndex}`}\r\n    >\r\n      {props.value}\r\n    </a>\r\n  );\r\n}\r\n\r\n\r\n1. Page Reloading Issue: The current implementation using <Link> may cause page reloading problems when you directly change the URL in the new tab and press Enter. Using an anchor tag with JavaScript provides better cross-browser compatibility compared to the custom MUI <Link> component behavior.\r\n2. URL Manipulation: Handling the link click event with JavaScript allows more flexibility in URL manipulation and additional pre-navigation actions. Utilizing the useEffect hook ensures proper attachment and detachment of the event listener, avoiding memory leaks or conflicts.\r\n3. Control Over New Tab: window.open() and location.href offer more control over new tab behavior, like dimensions, location, and navigation to the desired URL.\r\n4. Predictable Behavior: The proposed code ensures a predictable behavior for opening new tabs, addressing the issue of URLs not reloading correctly.\r\n5. Scalability: By using standard anchor tags, the code can be easily maintained and scaled, reducing dependencies on specific UI libraries.","updated_at":"2023-08-04T03:52:05Z","created_at":"2023-08-04T03:52:05Z","creator_user_login":"Swapnilchavan13"}
{"number":27094,"comment_id":"1631171531","body":"Hi @YanisaHS! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327094). Thanks!","updated_at":"2023-07-11T16:57:56Z","created_at":"2023-07-11T16:57:56Z","creator_user_login":"facebook-github-bot"}
{"number":27094,"comment_id":"1631178944","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...a7af99098130734b76974c497a51340dd95ebcd6\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a7af99098130734b76974c497a51340dd95ebcd6/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a7af99098130734b76974c497a51340dd95ebcd6/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/a7af99098130734b76974c497a51340dd95ebcd6/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/a7af99098130734b76974c497a51340dd95ebcd6/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against a7af99098130734b76974c497a51340dd95ebcd6\n</p>\n","updated_at":"2023-07-11T17:03:26Z","created_at":"2023-07-11T17:03:26Z","creator_user_login":"react-sizebot"}
{"number":27128,"comment_id":"1641984198","body":"Also note that the input will act weirdly if we click on it after the first time\r\n\r\n![output](https://github.com/facebook/react/assets/56606507/b735ba7c-60be-4892-8390-66d765cef8e8)\r\n","updated_at":"2023-07-19T12:21:10Z","created_at":"2023-07-19T12:21:10Z","creator_user_login":"Its-Just-Nans"}
{"number":27128,"comment_id":"1654436915","body":"Hello,\r\n\r\nI reviewed the provided code example in the CodeSandbox link. It seems there might be a misunderstanding regarding the usage of e.preventDefault() and the behavior of the checkbox.\r\n\r\ne.preventDefault() is typically used to prevent the default behavior of certain events, like preventing form submissions or anchor tag clicks from navigating to a new page. However, using it in the handleClick function for the checkbox doesn't seem to be necessary or appropriate.\r\n\r\nWhen using a controlled component, the checked prop of the checkbox should be directly tied to the state of the component. In the example, the checked prop of the checkbox is set to the state variable, which is initially set to false.\r\n\r\nTo fix the issue, you can simply remove e.preventDefault() from the handleClick function, and the checkbox will work correctly:\r\n\r\nimport React, { useState } from \"react\";\r\n\r\nexport default function App() {\r\n  const [state, setState] = useState(false);\r\n\r\n  const handleClick = () => {\r\n    setState(!state);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"checkbox\"\r\n        onClick={handleClick}\r\n        checked={state}\r\n      />\r\n      <label>Checkbox</label>\r\n    </div>\r\n  );\r\n}\r\n\r\nWith this updated code, the checkbox will behave as expected, and its value will be determined by the state variable, so it will be checked when state is true and unchecked when state is false.\r\n\r\nRemember that using e.preventDefault() in this scenario is unnecessary because the default behavior of the checkbox is precisely what you want: updating the checked prop according to the state.","updated_at":"2023-07-27T19:42:56Z","created_at":"2023-07-27T19:42:36Z","creator_user_login":"Skand17"}
{"number":27128,"comment_id":"1654457832","body":"Hello,\r\n\r\nThank you for your comments and interest. I highly suggest that you read #27016, which also explains the real bug:\r\n\r\n**Issue:** When `e.preventDefault()` is used, the `onChange` function is triggered when it should not be.\r\n\r\nIn the CodeSandBox, I demonstrate that the `onChange` event is being triggered, causing an unusual application state where the `state` is `true`, but the checkbox isn't checked. Additionally, I observed that the checkbox becomes unusable, as the `onChange` event is only triggered once (why ?).\r\n\r\nThanks!","updated_at":"2023-07-27T19:51:10Z","created_at":"2023-07-27T19:50:16Z","creator_user_login":"Its-Just-Nans"}
{"number":27128,"comment_id":"1666821015","body":"can you please assign me! @Its-Just-Nans also, specify the file path to this issue","updated_at":"2023-08-07T03:49:52Z","created_at":"2023-08-06T11:18:49Z","creator_user_login":"Aman254"}
{"number":27155,"comment_id":"1652308162","body":"Hi @ayushman17! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327155). Thanks!","updated_at":"2023-07-26T18:36:35Z","created_at":"2023-07-26T18:36:35Z","creator_user_login":"facebook-github-bot"}
{"number":27155,"comment_id":"1652343835","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-07-26T19:07:04Z","created_at":"2023-07-26T19:07:04Z","creator_user_login":"facebook-github-bot"}
{"number":27155,"comment_id":"1652343922","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-07-26T19:07:08Z","created_at":"2023-07-26T19:07:08Z","creator_user_login":"facebook-github-bot"}
{"number":27176,"comment_id":"1661909144","body":"I wouldn't worry to much if you could only see the comments. If you have also duplicate markup, that would help. Otherwise, the root cause can be in 1000 places that determine rendering","updated_at":"2023-08-02T09:54:28Z","created_at":"2023-08-02T09:54:28Z","creator_user_login":"ppaul"}
{"number":27176,"comment_id":"1661994802","body":">  If you have also duplicate markup, that would help. \r\n\r\nHi @ppaul . Could you elaborate what is needed? I'll try to provide it.","updated_at":"2023-08-02T10:55:05Z","created_at":"2023-08-02T10:55:05Z","creator_user_login":"pedrobernardina"}
{"number":27176,"comment_id":"1662105864","body":"I think I misunderstood. So, seeing those <!--$--> twice does that mean the component rendered twice? I suggest rewriting the jsx for debugging purposes and console log on each case. I see you use provider (and probably context). Do you know, react warns that context might lead to unnecessary renderings and people also complain about:\r\n\"What is wrong with using context in React?\r\nReact Context is often used to avoid prop drilling, however it's known that there's a performance issue. When a context value is changed, all components that use useContext will re-render.\" (stackoverflow). Try to see what caused the render.\r\n","updated_at":"2023-08-02T12:17:15Z","created_at":"2023-08-02T12:17:15Z","creator_user_login":"ppaul"}
{"number":27176,"comment_id":"1662240702","body":"I'm not sure if it's rendering twice. To be honest, I don't know how to phrase this problem. What's happening is that both `true`  and `false` clauses are being returned at the same time.\r\n\r\nI'm having a hard time reproducing it now, but I'll test different scenarios to try gathering more evidence .","updated_at":"2023-08-02T13:48:26Z","created_at":"2023-08-02T13:43:41Z","creator_user_login":"pedrobernardina"}
{"number":27176,"comment_id":"1663507668","body":"`<!--$-->` is the marker for Suspense in Server side rendering. \r\nMaybe there are some issues in the hydration process, but I'm not sure what is going on unless I see the code that repros.","updated_at":"2023-08-03T08:21:22Z","created_at":"2023-08-03T08:21:22Z","creator_user_login":"JSerZANP"}
{"number":27176,"comment_id":"1677484945","body":"> `<!--$-->` is the marker for Suspense in Server side rendering. Maybe there are some issues in the hydration process, but I'm not sure what is going on unless I see the code that repros.\r\n\r\nHi, sorry for the late reply. \r\n\r\nThis code is built and run on a cloud framework, and we have no access of it's internal processes. Is there anything that I could provide you that would help?\r\n","updated_at":"2023-08-14T14:54:22Z","created_at":"2023-08-14T14:54:22Z","creator_user_login":"pedrobernardina"}
{"number":27178,"comment_id":"1663996662","body":"In React, you can achieve this by using the useRef hook instead of useMemo. The useRef hook allows you to create a mutable reference that persists across renders and allows you to interact with the DOM directly. Here's how you can do it:\r\n\r\n```\r\nimport React, { useRef, useEffect } from 'react';\r\n\r\nconst MyComponent = () => {\r\n  const elementRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (elementRef.current) {\r\n      // Manipulate the DOM element directly here if needed\r\n      // For example, you can add event listeners, set attributes, etc.\r\n      elementRef.current.innerHTML = 'Hello World';\r\n    }\r\n\r\n    // If you need to perform any cleanup when the component unmounts,\r\n    // you can return a cleanup function from useEffect.\r\n    return () => {\r\n      // Perform cleanup if needed (e.g., remove event listeners)\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div ref={elementRef} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MyComponent;\r\n\r\n```\r\n\r\nWith this approach, you can have a reference to the DOM element that persists across renders, and you can update the DOM directly inside the useEffect hook. Keep in mind that directly manipulating the DOM should be used judiciously in React to avoid interfering with React's internal rendering and reconciliation mechanisms.\r\n\r\nAs for your use case of a Rich Text Editor, you can combine event handling with useRef to maintain state inside the DOM while also listening to events and performing actions based on user interactions. However, be cautious with this approach, as mixing direct DOM manipulation with React's virtual DOM may lead to unexpected issues and bugs. It's crucial to strike the right balance between React's state management and direct DOM manipulation to avoid conflicts and maintain a clean and efficient codebase.","updated_at":"2023-08-03T13:34:53Z","created_at":"2023-08-03T13:34:53Z","creator_user_login":"abhi152003"}
{"number":27178,"comment_id":"1664076272","body":"Of course I know about useRef\n\nDrawbacks\n\n1 - Makes the ref nullable\n\n2 - You can only use it inside the use effect, for example I have a sibling component that requires the created div as a prop\n\nyou can use useRef to append a child you created before, Which is what I do since I need to send my div as a prop to toolbar\n\nI can set a state too\n\nThe solution I propose , opens so many doors to ease of use and everything , just wanna know from some react developer if it's something they'd consider in jsx","updated_at":"2023-08-03T14:22:29Z","created_at":"2023-08-03T14:20:05Z","creator_user_login":"wakaztahir"}
{"number":27173,"comment_id":"1659618213","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 1a001dac6220a64d98ae33a28e89dde78100d6c5...a9fc8902afc0d4d6c9b366679401d2110f0edb04\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a9fc8902afc0d4d6c9b366679401d2110f0edb04/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=1a001dac6220a64d98ae33a28e89dde78100d6c5) | **=** | 164.32 kB | 164.32 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a9fc8902afc0d4d6c9b366679401d2110f0edb04/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=1a001dac6220a64d98ae33a28e89dde78100d6c5) | **=** | 171.74 kB | 171.74 kB | = | 53.97 kB | 53.97 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/a9fc8902afc0d4d6c9b366679401d2110f0edb04/files/facebook-www/ReactDOM-prod.classic.js?compare=1a001dac6220a64d98ae33a28e89dde78100d6c5) | **=** | 567.12 kB | 567.12 kB | = | 100.09 kB | 100.09 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/a9fc8902afc0d4d6c9b366679401d2110f0edb04/files/facebook-www/ReactDOM-prod.modern.js?compare=1a001dac6220a64d98ae33a28e89dde78100d6c5) | **=** | 550.92 kB | 550.92 kB | = | 97.25 kB | 97.25 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/a9fc8902afc0d4d6c9b366679401d2110f0edb04/files/oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=1a001dac6220a64d98ae33a28e89dde78100d6c5) | **+0.66%** | 26.81 kB | 26.99 kB | +0.25% | 9.24 kB | 9.26 kB\n| [oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/a9fc8902afc0d4d6c9b366679401d2110f0edb04/files/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=1a001dac6220a64d98ae33a28e89dde78100d6c5) | **+0.66%** | 26.81 kB | 26.99 kB | +0.25% | 9.24 kB | 9.26 kB\n| [oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/a9fc8902afc0d4d6c9b366679401d2110f0edb04/files/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=1a001dac6220a64d98ae33a28e89dde78100d6c5) | **+0.65%** | 27.51 kB | 27.69 kB | +0.37% | 9.44 kB | 9.47 kB\n| [oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/a9fc8902afc0d4d6c9b366679401d2110f0edb04/files/oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=1a001dac6220a64d98ae33a28e89dde78100d6c5) | **+0.52%** | 92.97 kB | 93.45 kB | +0.31% | 21.87 kB | 21.94 kB\n| [oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/a9fc8902afc0d4d6c9b366679401d2110f0edb04/files/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=1a001dac6220a64d98ae33a28e89dde78100d6c5) | **+0.52%** | 92.97 kB | 93.45 kB | +0.31% | 21.87 kB | 21.94 kB\n| [oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/a9fc8902afc0d4d6c9b366679401d2110f0edb04/files/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=1a001dac6220a64d98ae33a28e89dde78100d6c5) | **+0.52%** | 93.19 kB | 93.67 kB | +0.32% | 21.90 kB | 21.97 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against a9fc8902afc0d4d6c9b366679401d2110f0edb04\n</p>\n","updated_at":"2023-08-13T06:41:33Z","created_at":"2023-08-01T05:58:47Z","creator_user_login":"react-sizebot"}
{"number":27146,"comment_id":"1649890441","body":"Hi @bilalkhan13! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327146). Thanks!","updated_at":"2023-07-25T13:52:44Z","created_at":"2023-07-25T13:52:44Z","creator_user_login":"facebook-github-bot"}
{"number":27146,"comment_id":"1649900517","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 3ff846d106de9273f59d1e4457793a5fcf625aef...042ccbf03cece56effc3c36bed7f6ec19d4b6493\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/042ccbf03cece56effc3c36bed7f6ec19d4b6493/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=3ff846d106de9273f59d1e4457793a5fcf625aef) | **=** | 164.38 kB | 164.38 kB | = | 51.77 kB | 51.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/042ccbf03cece56effc3c36bed7f6ec19d4b6493/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=3ff846d106de9273f59d1e4457793a5fcf625aef) | **=** | 171.79 kB | 171.79 kB | = | 53.99 kB | 53.99 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/042ccbf03cece56effc3c36bed7f6ec19d4b6493/files/facebook-www/ReactDOM-prod.classic.js?compare=3ff846d106de9273f59d1e4457793a5fcf625aef) | **=** | 567.40 kB | 567.40 kB | = | 100.10 kB | 100.10 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/042ccbf03cece56effc3c36bed7f6ec19d4b6493/files/facebook-www/ReactDOM-prod.modern.js?compare=3ff846d106de9273f59d1e4457793a5fcf625aef) | **=** | 551.20 kB | 551.20 kB | = | 97.26 kB | 97.26 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 042ccbf03cece56effc3c36bed7f6ec19d4b6493\n</p>\n","updated_at":"2023-07-25T14:41:53Z","created_at":"2023-07-25T13:58:37Z","creator_user_login":"react-sizebot"}
{"number":27127,"comment_id":"1641962825","body":"Hi @Its-Just-Nans! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327127). Thanks!","updated_at":"2023-07-19T12:05:56Z","created_at":"2023-07-19T12:05:56Z","creator_user_login":"facebook-github-bot"}
{"number":27127,"comment_id":"1641971200","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: d445cee60f5635e52f15762be9bd8917edac7e93...7c4a0aaec3a54d95b755e547cf2ceaeff7e5013d\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7c4a0aaec3a54d95b755e547cf2ceaeff7e5013d/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **=** | 164.38 kB | 164.38 kB | = | 51.77 kB | 51.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7c4a0aaec3a54d95b755e547cf2ceaeff7e5013d/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **=** | 171.79 kB | 171.79 kB | = | 53.99 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/7c4a0aaec3a54d95b755e547cf2ceaeff7e5013d/files/facebook-www/ReactDOM-prod.classic.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **=** | 567.40 kB | 567.40 kB | = | 100.10 kB | 100.10 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/7c4a0aaec3a54d95b755e547cf2ceaeff7e5013d/files/facebook-www/ReactDOM-prod.modern.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **=** | 551.20 kB | 551.20 kB | = | 97.26 kB | 97.26 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 7c4a0aaec3a54d95b755e547cf2ceaeff7e5013d\n</p>\n","updated_at":"2023-07-19T12:11:17Z","created_at":"2023-07-19T12:11:17Z","creator_user_login":"react-sizebot"}
{"number":27127,"comment_id":"1641973508","body":"Note that one of this test is not working, because it describes the bug in #27128\r\n\r\n```txt\r\n  ● ReactDOMInput › should be unchecked then checked\r\n\r\n    expect(received).toBe(expected) // Object.is equality\r\n\r\n    Expected: true\r\n    Received: false\r\n\r\n      1418 |\r\n      1419 |     expect(container.querySelector('p').innerHTML).toBe('true');\r\n    > 1420 |     expect(container.querySelector('input').checked).toBe(true); // bug : is not true\r\n           |                                                      ^\r\n      1421 |\r\n      1422 |     // input is broken\r\n      1423 |   });\r\n```\r\n\r\nMaybe the PR #27016 will fix the behavior and fix the bug","updated_at":"2023-07-19T12:24:28Z","created_at":"2023-07-19T12:13:08Z","creator_user_login":"Its-Just-Nans"}
{"number":27127,"comment_id":"1642050621","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-07-19T13:07:01Z","created_at":"2023-07-19T13:07:01Z","creator_user_login":"facebook-github-bot"}
{"number":27116,"comment_id":"1637347339","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 546fe4681c52de6a333a55cedb141c87b626425e...b2064c9ed9cc103c39fe6681a011fef852155e6b\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/b2064c9ed9cc103c39fe6681a011fef852155e6b/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 164.38 kB | 164.38 kB | = | 51.77 kB | 51.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/b2064c9ed9cc103c39fe6681a011fef852155e6b/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 171.79 kB | 171.79 kB | = | 53.99 kB | 53.99 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/b2064c9ed9cc103c39fe6681a011fef852155e6b/files/facebook-www/ReactDOM-prod.classic.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 567.27 kB | 567.27 kB | = | 100.05 kB | 100.05 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/b2064c9ed9cc103c39fe6681a011fef852155e6b/files/facebook-www/ReactDOM-prod.modern.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 551.07 kB | 551.07 kB | = | 97.22 kB | 97.22 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/b2064c9ed9cc103c39fe6681a011fef852155e6b/files/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 93.19 kB | 92.23 kB | = | 21.90 kB | 21.62 kB\n| [oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/b2064c9ed9cc103c39fe6681a011fef852155e6b/files/oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 92.97 kB | 92.01 kB | = | 21.87 kB | 21.59 kB\n| [oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/b2064c9ed9cc103c39fe6681a011fef852155e6b/files/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 92.97 kB | 92.01 kB | = | 21.87 kB | 21.59 kB\n| [oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/b2064c9ed9cc103c39fe6681a011fef852155e6b/files/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 27.51 kB | 27.17 kB | = | 9.44 kB | 9.35 kB\n| [oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/b2064c9ed9cc103c39fe6681a011fef852155e6b/files/oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 26.81 kB | 26.47 kB | = | 9.24 kB | 9.16 kB\n| [oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/b2064c9ed9cc103c39fe6681a011fef852155e6b/files/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 26.81 kB | 26.47 kB | = | 9.24 kB | 9.16 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against b2064c9ed9cc103c39fe6681a011fef852155e6b\n</p>\n","updated_at":"2023-07-17T04:07:39Z","created_at":"2023-07-17T04:07:39Z","creator_user_login":"react-sizebot"}
{"number":27066,"comment_id":"1625573816","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...33835e41b3d734a70c9c39b25593b54f945272d5\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/33835e41b3d734a70c9c39b25593b54f945272d5/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/33835e41b3d734a70c9c39b25593b54f945272d5/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/33835e41b3d734a70c9c39b25593b54f945272d5/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/33835e41b3d734a70c9c39b25593b54f945272d5/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [facebook-www/ReactART-dev.modern.js](https://react-builds.vercel.app/commits/33835e41b3d734a70c9c39b25593b54f945272d5/files/facebook-www/ReactART-dev.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **+0.32%** | 905.34 kB | 908.27 kB | +0.37% | 193.32 kB | 194.03 kB\n| [facebook-www/ReactART-dev.classic.js](https://react-builds.vercel.app/commits/33835e41b3d734a70c9c39b25593b54f945272d5/files/facebook-www/ReactART-dev.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **+0.32%** | 916.55 kB | 919.47 kB | +0.36% | 195.62 kB | 196.34 kB\n| [facebook-www/ReactDOM-dev.modern.js](https://react-builds.vercel.app/commits/33835e41b3d734a70c9c39b25593b54f945272d5/files/facebook-www/ReactDOM-dev.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **+0.21%** | 1,406.75 kB | 1,409.67 kB | +0.23% | 304.65 kB | 305.34 kB\n| [facebook-www/ReactDOMTesting-dev.modern.js](https://react-builds.vercel.app/commits/33835e41b3d734a70c9c39b25593b54f945272d5/files/facebook-www/ReactDOMTesting-dev.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **+0.21%** | 1,425.09 kB | 1,428.02 kB | +0.23% | 309.07 kB | 309.78 kB\n| [facebook-www/ReactDOM-dev.classic.js](https://react-builds.vercel.app/commits/33835e41b3d734a70c9c39b25593b54f945272d5/files/facebook-www/ReactDOM-dev.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **+0.20%** | 1,434.64 kB | 1,437.56 kB | +0.23% | 310.20 kB | 310.90 kB\n| [facebook-www/ReactDOMTesting-dev.classic.js](https://react-builds.vercel.app/commits/33835e41b3d734a70c9c39b25593b54f945272d5/files/facebook-www/ReactDOMTesting-dev.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **+0.20%** | 1,452.99 kB | 1,455.91 kB | +0.22% | 314.65 kB | 315.34 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 33835e41b3d734a70c9c39b25593b54f945272d5\n</p>\n","updated_at":"2023-07-07T16:56:29Z","created_at":"2023-07-07T15:21:08Z","creator_user_login":"react-sizebot"}
{"number":27090,"comment_id":"1630635149","body":"Hi @JustineLapura! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327090). Thanks!","updated_at":"2023-07-11T11:15:23Z","created_at":"2023-07-11T11:15:23Z","creator_user_login":"facebook-github-bot"}
{"number":27090,"comment_id":"1630641620","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...83ac5bfb6ca2b6dddbec2b1f4fd88c707c4c16ac\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/83ac5bfb6ca2b6dddbec2b1f4fd88c707c4c16ac/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/83ac5bfb6ca2b6dddbec2b1f4fd88c707c4c16ac/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/83ac5bfb6ca2b6dddbec2b1f4fd88c707c4c16ac/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/83ac5bfb6ca2b6dddbec2b1f4fd88c707c4c16ac/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 83ac5bfb6ca2b6dddbec2b1f4fd88c707c4c16ac\n</p>\n","updated_at":"2023-07-11T11:20:17Z","created_at":"2023-07-11T11:20:17Z","creator_user_login":"react-sizebot"}
{"number":27090,"comment_id":"1630800360","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-07-11T13:08:51Z","created_at":"2023-07-11T13:08:51Z","creator_user_login":"facebook-github-bot"}
{"number":27026,"comment_id":"1614019244","body":"Hi @llcain! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327026). Thanks!","updated_at":"2023-06-30T02:14:10Z","created_at":"2023-06-30T02:14:10Z","creator_user_login":"facebook-github-bot"}
{"number":27026,"comment_id":"1614022555","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fc801116c80b68f7ebdaf66ac77d5f2dcd9e50eb...cf12d174cbadf7ca013e078dd4c560cb93e652e3\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/cf12d174cbadf7ca013e078dd4c560cb93e652e3/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fc801116c80b68f7ebdaf66ac77d5f2dcd9e50eb) | **=** | 164.51 kB | 164.51 kB | = | 51.85 kB | 51.85 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/cf12d174cbadf7ca013e078dd4c560cb93e652e3/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fc801116c80b68f7ebdaf66ac77d5f2dcd9e50eb) | **=** | 171.93 kB | 171.93 kB | = | 54.06 kB | 54.06 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/cf12d174cbadf7ca013e078dd4c560cb93e652e3/files/facebook-www/ReactDOM-prod.classic.js?compare=fc801116c80b68f7ebdaf66ac77d5f2dcd9e50eb) | **=** | 568.63 kB | 568.63 kB | = | 100.25 kB | 100.25 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/cf12d174cbadf7ca013e078dd4c560cb93e652e3/files/facebook-www/ReactDOM-prod.modern.js?compare=fc801116c80b68f7ebdaf66ac77d5f2dcd9e50eb) | **=** | 552.43 kB | 552.43 kB | = | 97.41 kB | 97.41 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against cf12d174cbadf7ca013e078dd4c560cb93e652e3\n</p>\n","updated_at":"2023-06-30T02:19:22Z","created_at":"2023-06-30T02:19:22Z","creator_user_login":"react-sizebot"}
{"number":27093,"comment_id":"1631073372","body":"Hi @SF97! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327093). Thanks!","updated_at":"2023-07-11T15:49:50Z","created_at":"2023-07-11T15:49:50Z","creator_user_login":"facebook-github-bot"}
{"number":27093,"comment_id":"1631081951","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 0a360642dcc08cab469da0a0e4f1050e56b0ef7e...157d77b8611a6e6b6e59fc8904e8d45dc05bdeab\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/157d77b8611a6e6b6e59fc8904e8d45dc05bdeab/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **+0.11%** | 164.35 kB | 164.53 kB | +0.08% | 51.76 kB | 51.80 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/157d77b8611a6e6b6e59fc8904e8d45dc05bdeab/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **+0.11%** | 171.76 kB | 171.94 kB | +0.07% | 53.98 kB | 54.02 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/157d77b8611a6e6b6e59fc8904e8d45dc05bdeab/files/facebook-www/ReactDOM-prod.classic.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **+0.08%** | 567.22 kB | 567.70 kB | +0.05% | 100.04 kB | 100.10 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/157d77b8611a6e6b6e59fc8904e8d45dc05bdeab/files/facebook-www/ReactDOM-prod.modern.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **+0.09%** | 551.02 kB | 551.49 kB | +0.05% | 97.21 kB | 97.26 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 157d77b8611a6e6b6e59fc8904e8d45dc05bdeab\n</p>\n","updated_at":"2023-07-12T12:39:35Z","created_at":"2023-07-11T15:55:13Z","creator_user_login":"react-sizebot"}
{"number":27076,"comment_id":"1629111788","body":"Following...","updated_at":"2023-07-10T14:39:56Z","created_at":"2023-07-10T14:39:56Z","creator_user_login":"ogagaCodes"}
{"number":27076,"comment_id":"1629417281","body":"can you help me with how to use this ","updated_at":"2023-07-10T17:37:20Z","created_at":"2023-07-10T17:37:20Z","creator_user_login":"Siva174"}
{"number":27076,"comment_id":"1630475305","body":"Can you provide a sandbox instead of plain code in order to be able to understand easily how to reproduce the bug? \r\nJust an example of a sanbox: https://codesandbox.io/s/optimistic-sky-zhz7qm?file=/src/App.tsx","updated_at":"2023-07-11T09:26:50Z","created_at":"2023-07-11T09:26:50Z","creator_user_login":"kriskw1999"}
{"number":27076,"comment_id":"1664934906","body":"const [url, setUrl] = useState('');\r\nconst [valid, setValid] = useState(false);\r\n\r\nconst generate = useCallback(() => {\r\n    setValid((prevValid) => {\r\n        if (prevValid) {\r\n            // do stuff with url\r\n        }\r\n        return prevValid;\r\n    });\r\n\r\n    setUrl((prevUrl) => {\r\n        if (valid) {\r\n            // do stuff with prevUrl\r\n        }\r\n        return prevUrl;\r\n    });\r\n}, [valid]);\r\n\r\nconst validate = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n\r\n    if (isValid(value)) {\r\n        setUrl(value);\r\n        setValid(true);\r\n        console.log({\r\n            url: value,\r\n        });\r\n    } else {\r\n        setValid(false);\r\n        setUrl('');\r\n    }\r\n}, []);\r\n\r\nBy using the functional update form, you ensure that the state is updated correctly and reliably. It automatically captures the latest state values without needing to include them in the dependencies list. This makes it easier to manage state updates, especially when dealing with complex scenarios and many dependencies. It avoids nesting functions and keeps your code cleaner and more straightforward.","updated_at":"2023-08-04T03:57:40Z","created_at":"2023-08-04T03:57:40Z","creator_user_login":"Swapnilchavan13"}
{"number":27070,"comment_id":"1626698074","body":"Hi @pcode78roy! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327070). Thanks!","updated_at":"2023-07-08T03:38:23Z","created_at":"2023-07-08T03:38:23Z","creator_user_login":"facebook-github-bot"}
{"number":27070,"comment_id":"1626708541","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...5b2dc6109fb36417685fa320654eb9de775b485a\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5b2dc6109fb36417685fa320654eb9de775b485a/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5b2dc6109fb36417685fa320654eb9de775b485a/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/5b2dc6109fb36417685fa320654eb9de775b485a/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/5b2dc6109fb36417685fa320654eb9de775b485a/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 5b2dc6109fb36417685fa320654eb9de775b485a\n</p>\n","updated_at":"2023-07-08T03:43:24Z","created_at":"2023-07-08T03:43:24Z","creator_user_login":"react-sizebot"}
{"number":27070,"comment_id":"1626859536","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-07-08T05:06:47Z","created_at":"2023-07-08T05:06:47Z","creator_user_login":"facebook-github-bot"}
{"number":27035,"comment_id":"1615895139","body":"Hi @abrar-khan007! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327035). Thanks!","updated_at":"2023-07-01T12:50:46Z","created_at":"2023-07-01T12:50:46Z","creator_user_login":"facebook-github-bot"}
{"number":27035,"comment_id":"1615896672","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 546fe4681c52de6a333a55cedb141c87b626425e...2651fab44d29f1e1edf8a4138fec5e5441857c0f\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/2651fab44d29f1e1edf8a4138fec5e5441857c0f/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 164.38 kB | 164.38 kB | +0.01% | 51.77 kB | 51.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/2651fab44d29f1e1edf8a4138fec5e5441857c0f/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 171.79 kB | 171.79 kB | +0.01% | 53.99 kB | 53.99 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/2651fab44d29f1e1edf8a4138fec5e5441857c0f/files/facebook-www/ReactDOM-prod.classic.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 567.27 kB | 567.26 kB | = | 100.05 kB | 100.06 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/2651fab44d29f1e1edf8a4138fec5e5441857c0f/files/facebook-www/ReactDOM-prod.modern.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 551.07 kB | 551.06 kB | = | 97.22 kB | 97.23 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 2651fab44d29f1e1edf8a4138fec5e5441857c0f\n</p>\n","updated_at":"2023-07-17T18:30:15Z","created_at":"2023-07-01T12:55:34Z","creator_user_login":"react-sizebot"}
{"number":27017,"comment_id":"1609225641","body":"@choopachuck thanks for the contribution! React is currently prioritizing PR related to internal working or something that improves or fixes it!\r\ntypo fixes etc are not the priority right now!","updated_at":"2023-06-27T10:26:25Z","created_at":"2023-06-27T10:26:25Z","creator_user_login":"Biki-das"}
{"number":27017,"comment_id":"1609226805","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 6aacd3fa1567ed35c7ae4a69627ec1a1543df760...d63c57f0c84a82035bf8cc0917c6c8752a5db087\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d63c57f0c84a82035bf8cc0917c6c8752a5db087/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=6aacd3fa1567ed35c7ae4a69627ec1a1543df760) | **=** | 164.56 kB | 164.56 kB | = | 51.83 kB | 51.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d63c57f0c84a82035bf8cc0917c6c8752a5db087/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=6aacd3fa1567ed35c7ae4a69627ec1a1543df760) | **=** | 171.97 kB | 171.97 kB | = | 54.06 kB | 54.06 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/d63c57f0c84a82035bf8cc0917c6c8752a5db087/files/facebook-www/ReactDOM-prod.classic.js?compare=6aacd3fa1567ed35c7ae4a69627ec1a1543df760) | **=** | 571.74 kB | 571.74 kB | = | 100.83 kB | 100.83 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/d63c57f0c84a82035bf8cc0917c6c8752a5db087/files/facebook-www/ReactDOM-prod.modern.js?compare=6aacd3fa1567ed35c7ae4a69627ec1a1543df760) | **=** | 555.52 kB | 555.52 kB | = | 98.02 kB | 98.02 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against d63c57f0c84a82035bf8cc0917c6c8752a5db087\n</p>\n","updated_at":"2023-06-27T10:27:17Z","created_at":"2023-06-27T10:27:17Z","creator_user_login":"react-sizebot"}
{"number":27073,"comment_id":"1627765877","body":"hey! \r\nyou can pass Avatar component as a props inside Card component and then you can destructure props like this\r\n\r\n```Javascript\r\nimport Avatar from './Avatar.js';\r\n\r\nfunction Card({ avatarChildren }) {\r\n  return (\r\n    <div className=\"card\">\r\n      {avatarChildren}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function Profile() {\r\n  return (\r\n    <Card avatarChildren={<Avatar\r\n        size={100}\r\n        person={{ \r\n          name: 'Katsuko Saruhashi',\r\n          imageId: 'YfeOqp2'\r\n        }}\r\n    />}>\r\n    </Card>\r\n  );\r\n}\r\n```","updated_at":"2023-07-09T16:31:02Z","created_at":"2023-07-09T16:31:02Z","creator_user_login":"ayushkavad"}
{"number":27073,"comment_id":"1628297592","body":"Yes we can do like that. But If there is a group of multiple components between opening and closing tag of Card component then passing them as prop and destructuring them would be a tedious process, so for shorthand property we should use {children} but the concern is that react does not allows other word than children. And react docs mentions that children is not a keyword which is a contradiction.","updated_at":"2023-07-10T06:05:46Z","created_at":"2023-07-10T06:05:46Z","creator_user_login":"Danish-Official"}
{"number":27073,"comment_id":"1628343920","body":"Hi, I am thinking about the practical reasons of this issue. Why we should need a different name from children, I mean children is a reserved keyword for any React component and we can have one children per component, and for me in all use cases that I encountered was cool. Can you provide a real-world scenario in which this may help in any way? Thank you very much!","updated_at":"2023-07-10T06:49:03Z","created_at":"2023-07-10T06:49:03Z","creator_user_login":"kriskw1999"}
{"number":27073,"comment_id":"1628390641","body":"children is not a reserved keyword in react, it is a convention followed by many developers. My concern is why to limit it unnecessarily to a terminology. This issue doesn't have any big impact, but let's say if someone wants to use any other synonym like content, subComponents, dependentComponents, etc. then why not to give them that freedom.","updated_at":"2023-07-10T07:27:09Z","created_at":"2023-07-10T07:27:09Z","creator_user_login":"Danish-Official"}
{"number":27073,"comment_id":"1629508085","body":"it may seem like a contradiction that React doesn't allow other prop names for this purpose, it's designed this way to provide a clear and consistent pattern for passing child components.\r\n\r\nBy using {children} as the prop name, you can easily work with multiple child components without the need for explicit prop passing or destructuring. It's a widely adopted convention in the React ecosystem, and it helps improve code readability and maintainability.\r\n","updated_at":"2023-07-10T18:45:09Z","created_at":"2023-07-10T18:45:09Z","creator_user_login":"ayushkavad"}
{"number":27073,"comment_id":"1671876496","body":"Hey @Danish-Official, you can easily solve your problem with some Javascript features, for example [Destructuring Assignment](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment)\r\n\r\nHere is how your code in sandbox should look like \r\n\r\n```js\r\nfunction Card({ children: avatar }) {\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      {avatar}\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\nwhen restructuring just whatever name you want\r\n` { children: NAME_YOU_NEED }`","updated_at":"2023-08-09T17:45:49Z","created_at":"2023-08-09T17:45:49Z","creator_user_login":"BrunoHenrique00"}
{"number":27054,"comment_id":"1621076536","body":"Hi @anatoliik-lyft! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327054). Thanks!","updated_at":"2023-07-05T06:01:36Z","created_at":"2023-07-05T06:01:36Z","creator_user_login":"facebook-github-bot"}
{"number":27054,"comment_id":"1621081159","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 035a41c4e2aadad8f8826396940af404e87dd772...c1b375b34e30cc2ef0b07866b6936347774287e4\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/c1b375b34e30cc2ef0b07866b6936347774287e4/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=035a41c4e2aadad8f8826396940af404e87dd772) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/c1b375b34e30cc2ef0b07866b6936347774287e4/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=035a41c4e2aadad8f8826396940af404e87dd772) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/c1b375b34e30cc2ef0b07866b6936347774287e4/files/facebook-www/ReactDOM-prod.classic.js?compare=035a41c4e2aadad8f8826396940af404e87dd772) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/c1b375b34e30cc2ef0b07866b6936347774287e4/files/facebook-www/ReactDOM-prod.modern.js?compare=035a41c4e2aadad8f8826396940af404e87dd772) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against c1b375b34e30cc2ef0b07866b6936347774287e4\n</p>\n","updated_at":"2023-07-07T07:08:11Z","created_at":"2023-07-05T06:06:53Z","creator_user_login":"react-sizebot"}
{"number":27129,"comment_id":"1642427090","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: d445cee60f5635e52f15762be9bd8917edac7e93...11a175f2bb610f5e7e1fec9df6267b3b2ae2e01b\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/11a175f2bb610f5e7e1fec9df6267b3b2ae2e01b/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **=** | 164.38 kB | 164.39 kB | +0.02% | 51.77 kB | 51.78 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/11a175f2bb610f5e7e1fec9df6267b3b2ae2e01b/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **=** | 171.79 kB | 171.81 kB | +0.02% | 53.99 kB | 53.99 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/11a175f2bb610f5e7e1fec9df6267b3b2ae2e01b/files/facebook-www/ReactDOM-prod.classic.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **=** | 567.40 kB | 567.43 kB | = | 100.10 kB | 100.10 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/11a175f2bb610f5e7e1fec9df6267b3b2ae2e01b/files/facebook-www/ReactDOM-prod.modern.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **=** | 551.20 kB | 551.23 kB | = | 97.26 kB | 97.27 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 11a175f2bb610f5e7e1fec9df6267b3b2ae2e01b\n</p>\n","updated_at":"2023-07-19T16:49:53Z","created_at":"2023-07-19T16:49:53Z","creator_user_login":"react-sizebot"}
{"number":27104,"comment_id":"1633012359","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 0a360642dcc08cab469da0a0e4f1050e56b0ef7e...2bec88bef6a891cda0d4d510976fbcc5ba394e5b\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/2bec88bef6a891cda0d4d510976fbcc5ba394e5b/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/2bec88bef6a891cda0d4d510976fbcc5ba394e5b/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/2bec88bef6a891cda0d4d510976fbcc5ba394e5b/files/facebook-www/ReactDOM-prod.classic.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/2bec88bef6a891cda0d4d510976fbcc5ba394e5b/files/facebook-www/ReactDOM-prod.modern.js?compare=0a360642dcc08cab469da0a0e4f1050e56b0ef7e) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 2bec88bef6a891cda0d4d510976fbcc5ba394e5b\n</p>\n","updated_at":"2023-07-12T18:24:47Z","created_at":"2023-07-12T18:24:47Z","creator_user_login":"react-sizebot"}
{"number":23208,"comment_id":"1085750971","body":"Hi @bvaughn! \n\nThank you for your pull request. \n\nWe **require** contributors to sign our **Contributor License Agreement**, and yours needs attention.\n\nYou currently have a record in our system, but the CLA is no longer valid, and will need to be **resubmitted**.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Freact%20%2323208). Thanks!","updated_at":"2022-04-01T10:52:27Z","created_at":"2022-04-01T10:52:27Z","creator_user_login":"facebook-github-bot"}
{"number":23208,"comment_id":"1088168288","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-04-05T01:03:17Z","created_at":"2022-04-05T01:03:17Z","creator_user_login":"facebook-github-bot"}
{"number":24595,"comment_id":"1134988346","body":"the fact that some hooks exist in preact.js but not exist in react.js should not category as bug, should it?","updated_at":"2022-05-23T18:17:49Z","created_at":"2022-05-23T18:14:11Z","creator_user_login":"im6"}
{"number":24595,"comment_id":"1135391022","body":"@im6 You're welcome to press \"new issue\" and find a category that would fit this issue better.","updated_at":"2022-05-24T04:26:11Z","created_at":"2022-05-24T04:26:11Z","creator_user_login":"reverofevil"}
{"number":24595,"comment_id":"1379861597","body":"Some discussion of this in https://github.com/facebook/react/issues/14347","updated_at":"2023-01-12T06:11:55Z","created_at":"2023-01-12T06:11:55Z","creator_user_login":"Cobertos"}
{"number":24582,"comment_id":"1131487417","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 357a61324f8d746a7f745dfc57009ba952c7d640...94bc4deebffd4899549238eabf75336dfccfc718\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 131.49 kB | 131.49 kB | = | 42.15 kB | 42.14 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 136.73 kB | 136.73 kB | = | 43.69 kB | 43.69 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 441.13 kB | 441.13 kB | = | 80.41 kB | 80.41 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 426.34 kB | 426.34 kB | = | 78.23 kB | 78.23 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 441.13 kB | 441.13 kB | = | 80.42 kB | 80.42 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 94bc4deebffd4899549238eabf75336dfccfc718\n</p>\n","updated_at":"2022-05-19T09:54:18Z","created_at":"2022-05-19T09:54:18Z","creator_user_login":"sizebot"}
{"number":23222,"comment_id":"1027079123","body":"Hey, sorry I realized I misunderstood your question. My bad. Thanks for reporting! Right now the `react-devtools` doesn't support debugging remotely. However, this seems like it'd be a useful feature to support in the future. I'll add a task to address this to the backlog.\r\n\r\nRight now, if you want to be able to specify the host/port of devtools, you can either do the workaround you're doing now or use [`react-devtools-core`](https://github.com/facebook/react/tree/main/packages/react-devtools-core) for more fine grained control.\r\n","updated_at":"2022-02-01T17:08:54Z","created_at":"2022-02-01T17:08:54Z","creator_user_login":"lunaruan"}
{"number":23120,"comment_id":"1019465385","body":"This could be reproed without React \r\nhttps://codesandbox.io/s/cold-currying-41bgg?file=/public/index.html\r\nI guess not an issue that should be resolved by React","updated_at":"2022-04-06T21:18:48Z","created_at":"2022-01-23T11:33:08Z","creator_user_login":"sunderls"}
{"number":25476,"comment_id":"1277089729","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: a8c16a00406a204f0153c21023a04ca9a68411da...7174a06c5ee7f19a7c0c1595a2efc69f2e3a7fe2\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7174a06c5ee7f19a7c0c1595a2efc69f2e3a7fe2/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=a8c16a00406a204f0153c21023a04ca9a68411da) | **=** | 135.64 kB | 135.61 kB | = | 43.46 kB | 43.45 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7174a06c5ee7f19a7c0c1595a2efc69f2e3a7fe2/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=a8c16a00406a204f0153c21023a04ca9a68411da) | **=** | 149.89 kB | 149.86 kB | = | 47.87 kB | 47.86 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/7174a06c5ee7f19a7c0c1595a2efc69f2e3a7fe2/files/facebook-www/ReactDOM-prod.classic.js?compare=a8c16a00406a204f0153c21023a04ca9a68411da) | **=** | 492.27 kB | 492.11 kB | = | 87.58 kB | 87.56 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/7174a06c5ee7f19a7c0c1595a2efc69f2e3a7fe2/files/facebook-www/ReactDOM-prod.modern.js?compare=a8c16a00406a204f0153c21023a04ca9a68411da) | **=** | 477.52 kB | 477.37 kB | = | 85.38 kB | 85.36 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/7174a06c5ee7f19a7c0c1595a2efc69f2e3a7fe2/files/facebook-www/ReactDOMForked-prod.classic.js?compare=a8c16a00406a204f0153c21023a04ca9a68411da) | **=** | 492.27 kB | 492.11 kB | = | 87.58 kB | 87.56 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 7174a06c5ee7f19a7c0c1595a2efc69f2e3a7fe2\n</p>\n","updated_at":"2022-10-13T06:24:49Z","created_at":"2022-10-13T06:24:49Z","creator_user_login":"sizebot"}
{"number":23088,"comment_id":"1009274856","body":"What differences are you seeing, aside from the version number?","updated_at":"2022-01-10T19:34:30Z","created_at":"2022-01-10T19:34:30Z","creator_user_login":"gaearon"}
{"number":23088,"comment_id":"1009578482","body":" If You  forgot to add the lockfile into the commit. Sometime later, when a second developer pulls the branch, npm won’t know the exact version I intended initially. That information was on the lockfile, and I forgot to include it in the commit.\r\n\r\nThe ^ symbol in my manifest means I accept any minor release that is equal or greater than 0.21.0. Thus, npm may install newer versions released in the interim like 0.21.1,0.22.0, or 0.23.1, which in theory should be compatible","updated_at":"2022-01-11T04:02:16Z","created_at":"2022-01-11T04:02:16Z","creator_user_login":"amrutha-mukkatira"}
{"number":23016,"comment_id":"999399608","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: bcd24a6706cd802e49e9c0a509a42893ddceca7b...e267776b09ebcb65c44d76f1f83970822c103fbc\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 129.52 kB | 129.52 kB | = | 41.53 kB | 41.53 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.65 kB | 134.65 kB | = | 43.01 kB | 43.01 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 427.76 kB | 427.76 kB | = | 78.53 kB | 78.53 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 417.45 kB | 417.45 kB | = | 77.06 kB | 77.06 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 427.76 kB | 427.76 kB | = | 78.53 kB | 78.53 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against e267776b09ebcb65c44d76f1f83970822c103fbc\n</p>\n","updated_at":"2021-12-22T08:59:38Z","created_at":"2021-12-22T08:54:49Z","creator_user_login":"sizebot"}
{"number":23135,"comment_id":"1015425630","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 3dc41d8a2590768a6ac906cd1f4c11ca00417eee...0a65eb2c7afff8452406c96b56a8323fab0ccca0\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 129.52 kB | 129.52 kB | = | 41.53 kB | 41.53 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.65 kB | 134.65 kB | = | 43.01 kB | 43.01 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 427.76 kB | 427.76 kB | = | 78.53 kB | 78.53 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 417.45 kB | 417.45 kB | = | 77.06 kB | 77.06 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 427.76 kB | 427.76 kB | = | 78.53 kB | 78.53 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 0a65eb2c7afff8452406c96b56a8323fab0ccca0\n</p>\n","updated_at":"2022-01-18T13:44:36Z","created_at":"2022-01-18T13:44:36Z","creator_user_login":"sizebot"}
{"number":22980,"comment_id":"997148150","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: c7917fe76982c499c81be9571de44fe1293ac893...b3b7f5295b83a2ec5c310e59c6c5141c88f05dd4\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 129.89 kB | 129.89 kB | = | 41.62 kB | 41.62 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.64 kB | 134.64 kB | = | 43.00 kB | 43.00 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 428.08 kB | 428.08 kB | = | 78.60 kB | 78.60 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 416.64 kB | 416.64 kB | = | 76.91 kB | 76.91 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 428.08 kB | 428.08 kB | = | 78.60 kB | 78.60 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against b3b7f5295b83a2ec5c310e59c6c5141c88f05dd4\n</p>\n","updated_at":"2021-12-18T05:30:11Z","created_at":"2021-12-18T05:30:11Z","creator_user_login":"sizebot"}
{"number":23094,"comment_id":"1018350525","body":"After playing around a little more I got a working example in react 18. The trick is to assign an empty event listener to the `cut` event to `document`. It seems that for some reason firefox requires you to listen to the `cut` event at the `document` level in order for `cut` events to trigger elsewhere? Not sure if we can attribute this to firefox or some react handling.\r\n\r\nSee https://codesandbox.io/s/contenteditable-cut-react-18-working-drqnl?file=/src/App.tsx:179-188 for a working version ","updated_at":"2022-01-21T09:53:24Z","created_at":"2022-01-21T09:53:24Z","creator_user_login":"bryanph"}
{"number":22992,"comment_id":"997403523","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: c7917fe76982c499c81be9571de44fe1293ac893...a1fa1e26c17ad6e25ccb5c7468eaf8402ec9b2ed\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 129.89 kB | 129.87 kB | = | 41.62 kB | 41.62 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.64 kB | 134.63 kB | = | 43.00 kB | 43.00 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 428.08 kB | 428.07 kB | = | 78.60 kB | 78.59 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 416.64 kB | 416.63 kB | = | 76.91 kB | 76.90 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 428.08 kB | 428.07 kB | = | 78.60 kB | 78.60 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against a1fa1e26c17ad6e25ccb5c7468eaf8402ec9b2ed\n</p>\n","updated_at":"2021-12-19T14:39:20Z","created_at":"2021-12-19T14:39:20Z","creator_user_login":"sizebot"}
{"number":19644,"comment_id":"751246957","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:41Z","created_at":"2020-12-25T13:07:41Z","creator_user_login":"stale[bot]"}
{"number":19644,"comment_id":"751337323","body":"Bump","updated_at":"2020-12-26T09:12:00Z","created_at":"2020-12-26T09:12:00Z","creator_user_login":"swissspidy"}
{"number":19644,"comment_id":"786624139","body":"👍  would also like to see this","updated_at":"2021-02-26T12:40:44Z","created_at":"2021-02-26T12:40:44Z","creator_user_login":"georeith"}
{"number":19865,"comment_id":"695151516","body":"Yeah I think it's pretty confusing since you still have it executing if you use server rendering. I agree it's worth revisiting.","updated_at":"2020-09-19T02:20:15Z","created_at":"2020-09-19T02:20:15Z","creator_user_login":"gaearon"}
{"number":19683,"comment_id":"751247010","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:08:01Z","created_at":"2020-12-25T13:08:01Z","creator_user_login":"stale[bot]"}
{"number":19731,"comment_id":"751247006","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:59Z","created_at":"2020-12-25T13:07:59Z","creator_user_login":"stale[bot]"}
{"number":19749,"comment_id":"751247003","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:58Z","created_at":"2020-12-25T13:07:58Z","creator_user_login":"stale[bot]"}
{"number":19749,"comment_id":"751270498","body":"Any opinions for or against","updated_at":"2020-12-25T16:46:30Z","created_at":"2020-12-25T16:46:30Z","creator_user_login":"dartess"}
{"number":19749,"comment_id":"1175438630","body":"This may solve #21381.","updated_at":"2022-07-05T19:51:58Z","created_at":"2022-07-05T19:51:58Z","creator_user_login":"ThomasdenH"}
{"number":19669,"comment_id":"751254243","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T14:06:26Z","created_at":"2020-12-25T14:06:26Z","creator_user_login":"stale[bot]"}
{"number":19670,"comment_id":"751254240","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T14:06:25Z","created_at":"2020-12-25T14:06:25Z","creator_user_login":"stale[bot]"}
{"number":19177,"comment_id":"751246950","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:39Z","created_at":"2020-12-25T13:07:39Z","creator_user_login":"stale[bot]"}
{"number":19219,"comment_id":"654434555","body":"Not sure how I feel about this. Marking for discussion.","updated_at":"2020-07-06T19:54:50Z","created_at":"2020-07-06T19:54:45Z","creator_user_login":"bvaughn"}
{"number":18908,"comment_id":"685442106","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-09-02T08:28:46Z","created_at":"2020-09-02T08:28:46Z","creator_user_login":"stale[bot]"}
{"number":18908,"comment_id":"751246992","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:52Z","created_at":"2020-12-25T13:07:52Z","creator_user_login":"stale[bot]"}
{"number":19474,"comment_id":"751254304","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T14:06:50Z","created_at":"2020-12-25T14:06:50Z","creator_user_login":"stale[bot]"}
{"number":19474,"comment_id":"1344878949","body":"I'm having exactly the same issue in version 18.2.0\r\nhttps://stackoverflow.com/questions/74738542/inconsistency-with-validitystate-api-between-chrome-and-firefox","updated_at":"2022-12-09T23:18:09Z","created_at":"2022-12-09T23:18:09Z","creator_user_login":"richyst"}
{"number":27327,"comment_id":"1703289525","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 7022e8d6a3222c97d287dfa0f2361acc8a30683a...cec23f304f09b55fee2f18f0c4a47ccc3d0801e9\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **=** | 165.63 kB | 165.63 kB | = | 51.88 kB | 51.88 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **=** | 174.70 kB | 174.70 kB | = | 54.61 kB | 54.61 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/facebook-www/ReactDOM-prod.classic.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **=** | 570.44 kB | 570.44 kB | = | 100.45 kB | 100.45 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/facebook-www/ReactDOM-prod.modern.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **=** | 554.21 kB | 554.21 kB | = | 97.61 kB | 97.61 kB\n| [oss-stable-semver/react-dom/static.browser.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable-semver/react-dom/static.browser.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+∞%** | 0.00 kB | 0.27 kB | +∞% | 0.00 kB | 0.18 kB\n| [oss-stable-semver/react-dom/static.edge.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable-semver/react-dom/static.edge.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+∞%** | 0.00 kB | 0.27 kB | +∞% | 0.00 kB | 0.18 kB\n| [oss-stable-semver/react-dom/static.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable-semver/react-dom/static.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+∞%** | 0.00 kB | 0.06 kB | +∞% | 0.00 kB | 0.08 kB\n| [oss-stable-semver/react-dom/static.node.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable-semver/react-dom/static.node.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+∞%** | 0.00 kB | 0.29 kB | +∞% | 0.00 kB | 0.19 kB\n| [oss-stable/react-dom/static.browser.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable/react-dom/static.browser.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+∞%** | 0.00 kB | 0.27 kB | +∞% | 0.00 kB | 0.18 kB\n| [oss-stable/react-dom/static.edge.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable/react-dom/static.edge.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+∞%** | 0.00 kB | 0.27 kB | +∞% | 0.00 kB | 0.18 kB\n| [oss-stable/react-dom/static.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable/react-dom/static.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+∞%** | 0.00 kB | 0.06 kB | +∞% | 0.00 kB | 0.08 kB\n| [oss-stable/react-dom/static.node.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable/react-dom/static.node.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+∞%** | 0.00 kB | 0.29 kB | +∞% | 0.00 kB | 0.19 kB\n| [oss-experimental/react-dom/static.node.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/static.node.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+30.63%** | 0.22 kB | 0.29 kB | +20.51% | 0.16 kB | 0.19 kB\n| [oss-experimental/react-dom/static.edge.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/static.edge.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+19.82%** | 0.22 kB | 0.27 kB | +14.10% | 0.16 kB | 0.18 kB\n| [oss-experimental/react-dom/static.browser.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/static.browser.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+19.30%** | 0.23 kB | 0.27 kB | +13.21% | 0.16 kB | 0.18 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.development.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-static.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **Deleted** | 364.30 kB | 0.00 kB | Deleted | 81.85 kB | 0.00 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.production.min.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-static.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **Deleted** | 66.73 kB | 0.00 kB | Deleted | 20.64 kB | 0.00 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.edge.development.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-static.edge.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **Deleted** | 364.71 kB | 0.00 kB | Deleted | 81.98 kB | 0.00 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.edge.production.min.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-static.edge.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **Deleted** | 67.05 kB | 0.00 kB | Deleted | 20.76 kB | 0.00 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.development.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-static.node.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **Deleted** | 366.44 kB | 0.00 kB | Deleted | 82.18 kB | 0.00 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **Deleted** | 71.39 kB | 0.00 kB | Deleted | 22.22 kB | 0.00 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable-semver/react-dom/static.browser.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable-semver/react-dom/static.browser.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+∞%** | 0.00 kB | 0.27 kB | +∞% | 0.00 kB | 0.18 kB\n| [oss-stable-semver/react-dom/static.edge.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable-semver/react-dom/static.edge.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+∞%** | 0.00 kB | 0.27 kB | +∞% | 0.00 kB | 0.18 kB\n| [oss-stable-semver/react-dom/static.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable-semver/react-dom/static.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+∞%** | 0.00 kB | 0.06 kB | +∞% | 0.00 kB | 0.08 kB\n| [oss-stable-semver/react-dom/static.node.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable-semver/react-dom/static.node.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+∞%** | 0.00 kB | 0.29 kB | +∞% | 0.00 kB | 0.19 kB\n| [oss-stable/react-dom/static.browser.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable/react-dom/static.browser.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+∞%** | 0.00 kB | 0.27 kB | +∞% | 0.00 kB | 0.18 kB\n| [oss-stable/react-dom/static.edge.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable/react-dom/static.edge.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+∞%** | 0.00 kB | 0.27 kB | +∞% | 0.00 kB | 0.18 kB\n| [oss-stable/react-dom/static.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable/react-dom/static.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+∞%** | 0.00 kB | 0.06 kB | +∞% | 0.00 kB | 0.08 kB\n| [oss-stable/react-dom/static.node.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-stable/react-dom/static.node.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+∞%** | 0.00 kB | 0.29 kB | +∞% | 0.00 kB | 0.19 kB\n| [oss-experimental/react-dom/static.node.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/static.node.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+30.63%** | 0.22 kB | 0.29 kB | +20.51% | 0.16 kB | 0.19 kB\n| [oss-experimental/react-dom/static.edge.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/static.edge.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+19.82%** | 0.22 kB | 0.27 kB | +14.10% | 0.16 kB | 0.18 kB\n| [oss-experimental/react-dom/static.browser.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/static.browser.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+19.30%** | 0.23 kB | 0.27 kB | +13.21% | 0.16 kB | 0.18 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+1.64%** | 71.81 kB | 72.99 kB | +1.07% | 22.31 kB | 22.55 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+1.46%** | 67.22 kB | 68.21 kB | +0.84% | 20.71 kB | 20.88 kB\n| [oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+1.45%** | 67.36 kB | 68.34 kB | +0.80% | 20.96 kB | 21.13 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.edge.production.min.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-server.edge.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+1.39%** | 71.66 kB | 72.66 kB | +0.75% | 22.21 kB | 22.38 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-server.node.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.75%** | 367.19 kB | 369.96 kB | +0.66% | 81.99 kB | 82.54 kB\n| [oss-experimental/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/umd/react-dom-server.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.66%** | 383.74 kB | 386.27 kB | +0.32% | 82.82 kB | 83.08 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-server.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.66%** | 366.25 kB | 368.66 kB | +0.32% | 81.95 kB | 82.21 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.edge.development.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-server.edge.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.66%** | 366.66 kB | 369.07 kB | +0.32% | 82.08 kB | 82.34 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.development.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-static.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **Deleted** | 364.30 kB | 0.00 kB | Deleted | 81.85 kB | 0.00 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.production.min.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-static.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **Deleted** | 66.73 kB | 0.00 kB | Deleted | 20.64 kB | 0.00 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.edge.development.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-static.edge.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **Deleted** | 364.71 kB | 0.00 kB | Deleted | 81.98 kB | 0.00 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.edge.production.min.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-static.edge.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **Deleted** | 67.05 kB | 0.00 kB | Deleted | 20.76 kB | 0.00 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.development.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-static.node.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **Deleted** | 366.44 kB | 0.00 kB | Deleted | 82.18 kB | 0.00 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js](https://react-builds.vercel.app/commits/cec23f304f09b55fee2f18f0c4a47ccc3d0801e9/files/oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **Deleted** | 71.39 kB | 0.00 kB | Deleted | 22.22 kB | 0.00 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against cec23f304f09b55fee2f18f0c4a47ccc3d0801e9\n</p>\n","updated_at":"2023-09-01T20:31:37Z","created_at":"2023-09-01T20:31:37Z","creator_user_login":"react-sizebot"}
{"number":27185,"comment_id":"1692525705","body":"I've got this same error.\r\n\r\nI've run react-devtools for the first time today and got the error. There was failure in both the command window and the components tab of the chrome react developer tools (not sure about the terminology)\r\n\r\nI've terminated the command window react-devtools and the data in the components tab of chrome ... is now working.\r\n\r\nI'm running 4.28.0 (7/10/2023)\r\n","updated_at":"2023-08-24T23:07:06Z","created_at":"2023-08-24T23:07:06Z","creator_user_login":"SGP57"}
{"number":27185,"comment_id":"1701124014","body":"@hoxyq, when will this be released ? Is there a beta version that can be used until then ?","updated_at":"2023-08-31T14:09:23Z","created_at":"2023-08-31T14:09:23Z","creator_user_login":"mayureshs"}
{"number":27185,"comment_id":"1701168987","body":"> @hoxyq, when will this be released ? Is there a beta version that can be used until then ?\r\n\r\nHey, hopefully I will submit the release next week, and then it depends how long it will be reviewed (usually a couple of days). I am currently fixing some stuff related to it and testing internally at Meta, so it is not ready yet to be shipped for everyone.\r\n\r\nBut if you want to try it out, you can download corresponding artifacts from the CI - https://app.circleci.com/pipelines/github/facebook/react/45858/workflows/05ef139a-6b29-42d5-9608-9f0058272dec/jobs/714315/artifacts\r\n\r\nMake sure that you have only 1 React DevTools extension installed and please share any errors that might occur.","updated_at":"2023-08-31T14:33:45Z","created_at":"2023-08-31T14:33:20Z","creator_user_login":"hoxyq"}
{"number":27185,"comment_id":"1701201691","body":"Thanks for the update. I have installed the version from the CI artifacts. When the page first loads the extension works as expected. But upon going to other pages within the app, I still the error \"Uncaught Error: Cannot remove node \"4752\" because no matching node was found in the Store.\". Here are few screenshots that might help. \r\n\r\n![image](https://github.com/facebook/react/assets/1014702/39a729c5-a537-4266-8229-c51eac2d1554)\r\n![image](https://github.com/facebook/react/assets/1014702/44db0dc3-31a7-4a2c-8edf-fbe67abd45fc)\r\n![image](https://github.com/facebook/react/assets/1014702/c50fa0d3-33ab-4985-ad02-000d9e1dd7d1)\r\n![image](https://github.com/facebook/react/assets/1014702/5d0fec74-d9cb-4cab-abf7-ad1e8ec50978)\r\n\r\nAlso getting this error \r\n![image](https://github.com/facebook/react/assets/1014702/3a016e6d-8034-4c79-9e58-9ba963cc4152)\r\n\r\nThis the errors I get from the manage extensions page\r\n![image](https://github.com/facebook/react/assets/1014702/30d7b84d-7412-42c6-92f5-5db36ee32e78)\r\n","updated_at":"2023-08-31T15:08:13Z","created_at":"2023-08-31T14:52:45Z","creator_user_login":"mayureshs"}
{"number":27185,"comment_id":"1701249486","body":"> Thanks for the update. I have installed the version from the CI artifacts. When the page first loads the extension works as expected. But upon going to other pages within the app, I still the error \"Uncaught Error: Cannot remove node \"4752\" because no matching node was found in the Store.\". Here are few screenshots that might help.\r\n> \r\n> ![image](https://user-images.githubusercontent.com/1014702/264683796-39a729c5-a537-4266-8229-c51eac2d1554.png) ![image](https://user-images.githubusercontent.com/1014702/264683981-44db0dc3-31a7-4a2c-8edf-fbe67abd45fc.png) ![image](https://user-images.githubusercontent.com/1014702/264684057-c50fa0d3-33ab-4985-ad02-000d9e1dd7d1.png) ![image](https://user-images.githubusercontent.com/1014702/264685463-5d0fec74-d9cb-4cab-abf7-ad1e8ec50978.png)\r\n> \r\n> Also getting this error ![image](https://user-images.githubusercontent.com/1014702/264688271-3a016e6d-8034-4c79-9e58-9ba963cc4152.png)\r\n> \r\n> This the errors I get from the manage extensions page ![image](https://user-images.githubusercontent.com/1014702/264690053-30d7b84d-7412-42c6-92f5-5db36ee32e78.png)\r\n\r\nI am currently trying to find ways to fix this, thanks! Reopening browser DevTools usually helps to resolve this error.","updated_at":"2023-08-31T15:20:13Z","created_at":"2023-08-31T15:20:13Z","creator_user_login":"hoxyq"}
{"number":27204,"comment_id":"1670560039","body":"Hi @acejs! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327204). Thanks!","updated_at":"2023-08-09T02:23:34Z","created_at":"2023-08-09T02:23:34Z","creator_user_login":"facebook-github-bot"}
{"number":27204,"comment_id":"1670562761","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 997f52fbb30ec4b777b66edcdd75f594d9fe0c55...39094eb58b4bf32bf9d2443fbdfe19ec24108694\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.05%** | 164.38 kB | 164.46 kB | +0.04% | 51.77 kB | 51.79 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.05%** | 171.79 kB | 171.87 kB | +0.03% | 53.99 kB | 54.00 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/facebook-www/ReactDOM-prod.classic.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.03%** | 567.40 kB | 567.58 kB | = | 100.10 kB | 100.11 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/facebook-www/ReactDOM-prod.modern.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.03%** | 551.20 kB | 551.38 kB | +0.01% | 97.26 kB | 97.27 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-experimental/react/cjs/react-jsx-dev-runtime.development.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.64%** | 43.32 kB | 43.60 kB | +0.43% | 12.65 kB | 12.70 kB\n| [oss-stable-semver/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-stable-semver/react/cjs/react-jsx-dev-runtime.development.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.64%** | 43.35 kB | 43.63 kB | +0.41% | 12.65 kB | 12.71 kB\n| [oss-stable/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-stable/react/cjs/react-jsx-dev-runtime.development.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.64%** | 43.35 kB | 43.63 kB | +0.41% | 12.65 kB | 12.71 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-experimental/react/cjs/react-jsx-runtime.development.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.64%** | 43.92 kB | 44.20 kB | +0.41% | 12.82 kB | 12.87 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-stable-semver/react/cjs/react-jsx-runtime.development.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.63%** | 43.94 kB | 44.22 kB | +0.41% | 12.83 kB | 12.88 kB\n| [oss-stable/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-stable/react/cjs/react-jsx-runtime.development.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.63%** | 43.94 kB | 44.22 kB | +0.41% | 12.83 kB | 12.88 kB\n| [facebook-www/JSXDEVRuntime-dev.modern.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/facebook-www/JSXDEVRuntime-dev.modern.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.62%** | 45.15 kB | 45.42 kB | +0.39% | 12.82 kB | 12.87 kB\n| [facebook-www/JSXDEVRuntime-dev.classic.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/facebook-www/JSXDEVRuntime-dev.classic.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.62%** | 45.15 kB | 45.42 kB | +0.39% | 12.82 kB | 12.87 kB\n| [oss-stable-semver/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-stable-semver/react/cjs/react.shared-subset.development.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.33%** | 84.72 kB | 85.00 kB | +0.23% | 23.50 kB | 23.55 kB\n| [oss-stable/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-stable/react/cjs/react.shared-subset.development.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.33%** | 84.75 kB | 85.03 kB | +0.23% | 23.53 kB | 23.58 kB\n| [oss-experimental/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-experimental/react/cjs/react.shared-subset.development.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.32%** | 86.09 kB | 86.37 kB | +0.26% | 23.92 kB | 23.98 kB\n| [oss-stable-semver/react/cjs/react.development.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-stable-semver/react/cjs/react.development.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.28%** | 99.79 kB | 100.07 kB | +0.24% | 26.94 kB | 27.01 kB\n| [oss-stable/react/cjs/react.development.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-stable/react/cjs/react.development.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.28%** | 99.81 kB | 100.09 kB | +0.25% | 26.97 kB | 27.04 kB\n| [oss-experimental/react/cjs/react.development.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-experimental/react/cjs/react.development.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.27%** | 101.98 kB | 102.25 kB | +0.25% | 27.52 kB | 27.59 kB\n| [oss-stable-semver/react/umd/react.development.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-stable-semver/react/umd/react.development.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.23%** | 122.92 kB | 123.21 kB | +0.20% | 31.78 kB | 31.84 kB\n| [oss-stable/react/umd/react.development.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-stable/react/umd/react.development.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.23%** | 122.95 kB | 123.23 kB | +0.20% | 31.81 kB | 31.87 kB\n| [oss-experimental/react/umd/react.development.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/oss-experimental/react/umd/react.development.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.23%** | 125.20 kB | 125.49 kB | +0.16% | 32.37 kB | 32.42 kB\n| [facebook-www/React-dev.modern.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/facebook-www/React-dev.modern.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.22%** | 125.87 kB | 126.15 kB | +0.17% | 33.36 kB | 33.42 kB\n| [facebook-www/React-dev.classic.js](https://react-builds.vercel.app/commits/39094eb58b4bf32bf9d2443fbdfe19ec24108694/files/facebook-www/React-dev.classic.js?compare=997f52fbb30ec4b777b66edcdd75f594d9fe0c55) | **+0.22%** | 126.97 kB | 127.25 kB | +0.19% | 33.61 kB | 33.67 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 39094eb58b4bf32bf9d2443fbdfe19ec24108694\n</p>\n","updated_at":"2023-08-09T02:28:20Z","created_at":"2023-08-09T02:28:20Z","creator_user_login":"react-sizebot"}
{"number":27204,"comment_id":"1670584277","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-08-09T03:03:49Z","created_at":"2023-08-09T03:03:49Z","creator_user_login":"facebook-github-bot"}
{"number":26876,"comment_id":"1570596094","body":"As far as I an tell this also repros without toggling `disabled`: https://codesandbox.io/s/react-canary-radio-buttons-forked-ydjdlp?file=/src/App.js\r\n\r\nSo it's just about changing the controlled `checked` delayed.","updated_at":"2023-05-31T17:02:53Z","created_at":"2023-05-31T17:02:53Z","creator_user_login":"eps1lon"}
{"number":26876,"comment_id":"1592505186","body":"The problem was introduced with `18.3.0-next-1f248bdd7-20230419`. The previous version `18.3.0-next-d962f35ca-20230418` works.","updated_at":"2023-06-15T07:25:51Z","created_at":"2023-06-15T07:25:34Z","creator_user_login":"Luk-z"}
{"number":26876,"comment_id":"1593549482","body":"It looks like it was this change that introduced this bug: https://github.com/facebook/react/pull/26667","updated_at":"2023-06-15T18:35:26Z","created_at":"2023-06-15T18:35:26Z","creator_user_login":"robrichard"}
{"number":26876,"comment_id":"1594543945","body":"what are ways to fix this issue?","updated_at":"2023-06-16T11:41:59Z","created_at":"2023-06-16T11:41:59Z","creator_user_login":"kambleaa007"}
{"number":26876,"comment_id":"1611037027","body":"FYI, I find something by investigating, as below:\r\n\r\n`extractEvents`:\r\nhttps://github.com/facebook/react/blob/6aacd3fa1567ed35c7ae4a69627ec1a1543df760/packages/react-dom-bindings/src/events/plugins/ChangeEventPlugin.js#L322-L331\r\n\r\n`onChange` isn't called because `inst` here is falsy in that process. PS: In our case, `getTargetInstFunc` should be equal to `getTargetInstForClickEvent`. \r\n\r\nDiving into the inner functions as the followings.\r\n\r\n`getTargetInstForClickEvent`:\r\nhttps://github.com/facebook/react/blob/6aacd3fa1567ed35c7ae4a69627ec1a1543df760/packages/react-dom-bindings/src/events/plugins/ChangeEventPlugin.js#L117-L122\r\n\r\n`updateValueIfChanged`:\r\nhttps://github.com/facebook/react/blob/6aacd3fa1567ed35c7ae4a69627ec1a1543df760/packages/react-dom-bindings/src/client/inputValueTracking.js#L141-L147\r\n\r\n`tracker`:\r\nhttps://github.com/facebook/react/blob/6aacd3fa1567ed35c7ae4a69627ec1a1543df760/packages/react-dom-bindings/src/client/inputValueTracking.js#L103-L111\r\n\r\nWe can find the key is that the tracked value should be different from the value get from `node` (`getValueFromNode(node)`) in our case. We can believe the tracked value was not updated after the delayed state change, which cause the issue.\r\n\r\n**Analysis by reproduction steps** (Please visit [this demo](https://codesandbox.io/s/react-canary-radio-buttons-forked-vjsfd2?file=/src/App.js), which can print the tracked values):\r\n1. Initially: \r\n    - One: checked (`getValueFromNode(node)` is `'true'`), and the tracked value is `'true'`\r\n    - Two: unchecked, and the tracked value is `'false'`\r\n2. Click 'Two', and wait for delayed `setValue`: `onChange` is called \r\n    - One: unchecked, and the tracked value is `'false'`\r\n    - Two: checked, and the tracked value is `'true'`\r\n3. Click 'One', and wait for the delayed `setValue`: `onChange` is called \r\n    - One: checked, and the tracked value is `'true'`\r\n    - Two: unchecked, and the tracked value is `'true'`\r\n4. Click 'Two', won't call `onChange` again\r\n\r\nPS: The tracked value can be updated at the end of the event handler (by `restoreControlledInputState`), so Step 2 will result in the correct tracked values.\r\n\r\nSo, I think one solution is to update the tracked value (at the end of the commit mutation phase) when the checked prop changes.\r\n\r\n**I'd like to submit a PR to fix it. Any corrections or suggestions will be appreciated, (for I'm not sure if I miss anything important).**","updated_at":"2023-06-28T09:03:12Z","created_at":"2023-06-28T09:03:12Z","creator_user_login":"zhengjitf"}
{"number":26876,"comment_id":"1611662862","body":"I tried another way to understand what caused the bug.\r\n\r\nI just checked the [diff](https://github.com/facebook/react/compare/d962f35ca...1f248bdd7) between a working commit (d962f35ca) and non-working commit (1f248bdd7) and figured out that the bug happens after removing [this lines of code](https://github.com/facebook/react/compare/d962f35ca...1f248bdd7#diff-a2a3212f8b432f42dff10701d6a9d2a3742137d60b018d8d59d008e7cee45851L1311) in `updateProperties()` function of `packages/react-dom-bindings/src/client/ReactDOMComponent.js`.\r\n\r\njust restoring \r\n\r\n```\r\n              const checkedValue = nextProps.defaultChecked;\r\n              const inputElement: HTMLInputElement = (domElement: any);\r\n              inputElement.checked =\r\n                !!checkedValue &&\r\n                typeof checkedValue !== 'function' &&\r\n                checkedValue !== 'symbol';\r\n```\r\n\r\nor just adding `domElement.checked = checked;` the bug disappear.\r\n\r\nMaybe the problem is explained in this [comment](https://github.com/facebook/react/blob/main/packages/react-dom-bindings/src/client/ReactDOMInput.js#L30)\r\n\r\n```\r\n * If `checked` or `value` are not supplied (or null/undefined), user actions\r\n * that affect the checked state or value will trigger updates to the element.\r\n *\r\n * If they are supplied (and not null/undefined), the rendered element will not\r\n * trigger updates to the element. Instead, the props must change in order for\r\n * the rendered element to be updated.\r\n```\r\n\r\n`inputElement.checked` is not updated and will result null/undefined and the radio is no more controlled?\r\n\r\nYou can check this [branch](https://github.com/Luk-z/react/tree/feature/inspect_radio_bug). I've also made a change to `packages/react-devtools-shell/src/e2e-apps/ListApp.js` to start devtools server with a simple radio example.\r\nTo run the server:\r\n- run `yarn` in the root directory and in `packages/react-devtools-inline` directory.\r\n- from to the root directory run `yarn build-for-devtools`\r\n- from `packages/react-devtools-shell` folder execute `yarn start` (better to open another shell for this command)\r\n- go to http://localhost:8080/e2e.html\r\n\r\n\r\nhttps://github.com/facebook/react/assets/7655943/92f05062-e72e-4f87-8994-8a2af6a352d6\r\n\r\n\r\n\r\n","updated_at":"2023-06-28T15:36:14Z","created_at":"2023-06-28T15:36:14Z","creator_user_login":"Luk-z"}
{"number":26948,"comment_id":"1593615116","body":"I think the issue is that there is no \"reactive\" relation between `ICounterRepository.instance.count` and the context. The value is only retrieved once because it is a getter. One way to fix it is to introduce a useState and a useEffect in between with a context provider, where the state \"subscribes\" and is updated based on the `ICounterRepository.instance.count`.\r\n\r\nI cloned your project and added the following code to make it work:\r\n\r\nICounterRepository.ts:\r\n```ts\r\n\r\n// Added a new interface\r\nexport interface CounterObserver {\r\n    update(): void;\r\n}\r\n\r\n...\r\n\r\n// Added these three observer methods to the abstract class\r\nabstract addObserver(observer: CounterObserver): void;\r\nabstract removeObserver(observer: CounterObserver): void;\r\nabstract notifyObservers(): void;\r\n```\r\n---\r\nCounterRepository.ts:\r\n```ts\r\n// Added a new variable to the class\r\nprivate observers: CounterObserver[] = [];\r\n\r\n...\r\n\r\nincrement(): void {\r\n    this._count++;\r\n    console.log(`Count is now ${this._count}`)\r\n    this.notifyObservers(); // Added this line to trigger the state update which will be reflected in the UI\r\n}\r\n\r\n// Defined the three abstract observer methods in the class\r\naddObserver(observer: CounterObserver): void {\r\n    this.observers.push(observer);\r\n}\r\n\r\nremoveObserver(observer: CounterObserver): void {\r\n    const index = this.observers.indexOf(observer);\r\n    if (index !== 1) this.observers.splice(index, 1);\r\n}\r\n\r\nnotifyObservers(): void {\r\n    this.observers.forEach((observer: CounterObserver) => {\r\n        observer.update();\r\n    })\r\n}\r\n```\r\n\r\n---\r\n\r\nCounterRepositoryProvider.tsx (a new file in `src/data/counter/`):\r\n\r\n```tsx\r\nimport { ReactNode, useEffect, useState } from 'react';\r\nimport { HomePageViewModel, HomePageViewModelType } from '../../view/home_page/HomePageViewModel';\r\nimport { CounterObserver, ICounterRepository } from './ICounterRepository';\r\n\r\nexport const HomePageViewModelProvider = ({ children }: { children: ReactNode }) => {\r\n \r\n    // this state is what will allow the UI to be retriggered on change\r\n    const [count, setCount] = useState<number>(ICounterRepository.instance.count);\r\n\r\n    useEffect(() => {\r\n        /* \r\n         We define the observer to link the class and the UI in a reactive way.\r\n         When the count variable is updated in the class, the observers are notified and the state variable\r\n         is updated (setCount), triggering the UI to update\r\n        */\r\n        const observer: CounterObserver = {\r\n            update: () => {\r\n                setCount(ICounterRepository.instance.count);\r\n            }\r\n        }\r\n        \r\n        // \"subscribe\" the observer to the class instance\r\n        ICounterRepository.instance.addObserver(observer);\r\n        \r\n       // clear the observer when it's not needed anymore (i.e. on dismount)\r\n        return () => {\r\n            ICounterRepository.instance.removeObserver(observer);\r\n        }\r\n    }, []);\r\n\r\n    const increment = () => {\r\n        ICounterRepository.instance.increment();\r\n    }\r\n\r\n    const viewModel: HomePageViewModelType = {\r\n        count, increment\r\n    }\r\n\r\n    // I personally like defining the Provider here to avoid having to import additional objects to the view file\r\n    return (\r\n        <HomePageViewModel.Provider value={viewModel}>\r\n            {children}\r\n        </HomePageViewModel.Provider>\r\n    )\r\n}\r\n```\r\n\r\n---\r\n\r\nApp.tsx:\r\n\r\n```ts\r\nexport default function App() {\r\n  return (\r\n    <HomePageViewModelProvider> // Import and wrap the code with the Provider\r\n      <View style={styles.container}>\r\n        <Text>Open up App.tsx to start working on your app!</Text>\r\n        <HomePage/> // NOTE: you can just wrap the HomePage if nothing else uses the context\r\n        <StatusBar style=\"auto\" />\r\n      </View>\r\n    </ HomePageViewModelProvider>\r\n  );\r\n}\r\n```\r\n\r\n---\r\n\r\n![Capture](https://github.com/facebook/react/assets/28672122/69e277df-fe9b-4254-8180-c4095356b98a)\r\n\r\n\r\nApologies for the long code. There are definitely better ways to do this. However, I tried to make it work with modify the least amount of code so that it's not too confusing. I hope it helps\r\n\r\n","updated_at":"2023-06-15T19:34:45Z","created_at":"2023-06-15T19:34:45Z","creator_user_login":"AndreaPallotta"}
{"number":26948,"comment_id":"1594854271","body":"BEAUTIFUL :) \r\n\r\nThis behaviour is exactly what I was looking for; will let you know if I find a way to implement this with less boilerplate, but thank you very much!","updated_at":"2023-06-16T15:13:51Z","created_at":"2023-06-16T15:13:51Z","creator_user_login":"juskek"}
{"number":26936,"comment_id":"1589679940","body":"Unless I'm missing something, you are getting the first `console.log` on the initial render of the component. After clicking the button you are mutating the state of `a` which is a dependency of an effect that, in turn, mutates the state of `b`. These mutations individually cause re-renders, which is why you see \"render 2\" logged twice.","updated_at":"2023-06-13T16:47:28Z","created_at":"2023-06-13T16:47:28Z","creator_user_login":"addy"}
{"number":26936,"comment_id":"1590318356","body":"> Unless I'm missing something, you are getting the first `console.log` on the initial render of the component. After clicking the button you are mutating the state of `a` which is a dependency of an effect that, in turn, mutates the state of `b`. These mutations individually cause re-renders, which is why you see \"render 2\" logged twice.\r\n\r\nChanging the state of a will trigger the side effect function to execute setB(b), but this will not change the state of b, because the state after the change is the same as the state before the change.So it should not cause re-renders.\r\n","updated_at":"2023-06-14T01:52:05Z","created_at":"2023-06-14T01:52:05Z","creator_user_login":"sanbinlbw"}
{"number":26936,"comment_id":"1593532884","body":"> > Unless I'm missing something, you are getting the first `console.log` on the initial render of the component. After clicking the button you are mutating the state of `a` which is a dependency of an effect that, in turn, mutates the state of `b`. These mutations individually cause re-renders, which is why you see \"render 2\" logged twice.\r\n> \r\n> Changing the state of a will trigger the side effect function to execute setB(b), but this will not change the state of b, because the state after the change is the same as the state before the change.So it should not cause re-renders.\r\n\r\nEven if the value of `b` remains the same after calling `setB(b)`, React still considers it as a state update and triggers a re-render of the component. I might be wrong here, but I believe React internally batches state updates and performs them asynchronously for performance reasons. So even though the value of `b` doesn't change, React still queues a re-render for the component.","updated_at":"2023-06-15T18:20:58Z","created_at":"2023-06-15T18:20:58Z","creator_user_login":"AndreaPallotta"}
{"number":26936,"comment_id":"1601381938","body":"See https://react.dev/learn/synchronizing-with-effects#how-to-handle-the-effect-firing-twice-in-development  ","updated_at":"2023-06-21T18:37:19Z","created_at":"2023-06-21T18:37:19Z","creator_user_login":"lb1129"}
{"number":26936,"comment_id":"1621249501","body":"Firstly, I think the conclusion you have drawn from debugging is problematic, and I hope you can confirm it again.\r\n\r\nSecondly, **the `setB (b)` method does not trigger an update, only `setA (a+1)` will trigger this update**. The reason why \"render, a, b\" is printed twice is that React hooks re-executes function components when setState is called, hence there are two console.log. However, **this does not mean that it has been updated twice**. We know that React updates and renders the contents in `render` (corresponding to the `return` in function components).  If you add a `Math.random()` content in the `return`, you will find that in fact, setB (b) does not trigger the second update, only setA (a+1) will trigger the update. But in your example, it is not easy to observe this situation. I have made modifications to your example, and the principle is consistent. Here is the codesandbox link: https://codesandbox.io/s/update-issues-about-react-hooks-8dvqyk?file=/src/App.js\r\n\r\nHowever, later on, I found that in the example in the codesandbox link, **clicking the clickB button will only trigger `console.log` once, and it will not trigger again no matter how many times it is clicked**. However, every time I click the clickA button and then click the clickB button, console.log can be triggered again. This also shows that **after React is re-rendered due to setA(a + 1), even if a setState is executed with a value that has not changed (i.e. setB(b)) and this will not cause an update, it allows the function component to be re-executed once.** Then if it is found that nothing has changed, it will not trigger again. This is my guess, and I have not found a reasonable explanation for it yet, but as long as **setB(b) does not trigger extra redundant rendering, there is no problem with performance waste**.\r\n\r\nRegarding the other question, you found that `lane === 1` during debugging because the current mode is **Legacy mode**, and the priority of all update objects is **syncLane**, which is binary 0000...0001, corresponding to decimal 1. **This update object was generated when the setA(a + 1) method was called by clicking the button**.\r\n\r\nThe above is my personal understanding, I hope it’s helpful to you. If there are any errors, criticisms and corrections are welcome.","updated_at":"2023-07-05T08:28:58Z","created_at":"2023-07-05T08:07:34Z","creator_user_login":"Douc1998"}
{"number":26936,"comment_id":"1621364490","body":"> Firstly, I think the conclusion you have drawn from debugging is problematic, and I hope you can confirm it again.\r\n> \r\n> Secondly, **the `setB (b)` method does not trigger an update, only `setA (a+1)` will trigger this update**. The reason why \"render, a, b\" is printed twice is that React hooks re-executes function components when setState is called, hence there are two console.log. However, **this does not mean that it has been updated twice**. We know that React updates and renders the contents in `render` (corresponding to the `return` in function components). If you add a `Math.random()` content in the `return`, you will find that in fact, setB (b) does not trigger the second update, only setA (a+1) will trigger the update. But in your example, it is not easy to observe this situation. I have made modifications to your example, and the principle is consistent. Here is the codesandbox link: https://codesandbox.io/s/update-issues-about-react-hooks-8dvqyk?file=/src/App.js\r\n> \r\n> However, later on, I found that in the example in the codesandbox link, **clicking the clickB button will only trigger `console.log` once, and it will not trigger again no matter how many times it is clicked**. However, every time I click the clickA button and then click the clickB button, console.log can be triggered again. This also shows that **after React is re-rendered due to setA(a + 1), even if a setState is executed with a value that has not changed (i.e. setB(b)) and this will not cause an update, it allows the function component to be re-executed once.** Then if it is found that nothing has changed, it will not trigger again. This is my guess, and I have not found a reasonable explanation for it yet, but as long as **setB(b) does not trigger extra redundant rendering, there is no problem with performance waste**.\r\n> \r\n> Regarding the other question, you found that `lane === 1` during debugging because the current mode is **Legacy mode**, and the priority of all update objects is **syncLane**, which is binary 0000...0001, corresponding to decimal 1. **This update object was generated when the setA(a + 1) method was called by clicking the button**.\r\n> \r\n> The above is my personal understanding, I hope it’s helpful to you. If there are any errors, criticisms and corrections are welcome.\r\n\r\nThis is very helpful for me, thanks","updated_at":"2023-07-05T09:20:58Z","created_at":"2023-07-05T09:20:58Z","creator_user_login":"sanbinlbw"}
{"number":26919,"comment_id":"1585557222","body":"Hi @KhurramJalil! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326919). Thanks!","updated_at":"2023-06-10T08:14:39Z","created_at":"2023-06-10T08:14:39Z","creator_user_login":"facebook-github-bot"}
{"number":26919,"comment_id":"1585558786","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 21a161fa37dce969c58ae17f67f2856d06514892...1114e4de5b2e795f078b17c257c1920b21d0f146\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/1114e4de5b2e795f078b17c257c1920b21d0f146/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 164.23 kB | 164.23 kB | = | 51.73 kB | 51.73 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/1114e4de5b2e795f078b17c257c1920b21d0f146/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 171.67 kB | 171.67 kB | = | 53.97 kB | 53.97 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/1114e4de5b2e795f078b17c257c1920b21d0f146/files/facebook-www/ReactDOM-prod.classic.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 570.12 kB | 570.12 kB | = | 100.58 kB | 100.58 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/1114e4de5b2e795f078b17c257c1920b21d0f146/files/facebook-www/ReactDOM-prod.modern.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 553.90 kB | 553.90 kB | = | 97.75 kB | 97.75 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 1114e4de5b2e795f078b17c257c1920b21d0f146\n</p>\n","updated_at":"2023-06-10T08:19:29Z","created_at":"2023-06-10T08:19:29Z","creator_user_login":"react-sizebot"}
{"number":26919,"comment_id":"1585577397","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-06-10T09:07:55Z","created_at":"2023-06-10T09:07:55Z","creator_user_login":"facebook-github-bot"}
{"number":26919,"comment_id":"1585583328","body":"@gaearon @trueadm @acdlite @zpao can someone please merge this PR to main branch as all checks have passed now.","updated_at":"2023-06-10T12:26:19Z","created_at":"2023-06-10T09:29:13Z","creator_user_login":"KhurramJalil"}
{"number":26919,"comment_id":"1585584205","body":"> @gaearon @trueadm @acdlite can someone please merge this PR to master as all checks have passed now.\n\n@KhurramJalil  currently the react team does not entertain typo fixes unless it's developer facing! The team is pretty busy! So probably getting this merge might not be the thing! ","updated_at":"2023-06-10T09:33:16Z","created_at":"2023-06-10T09:33:16Z","creator_user_login":"Biki-das"}
{"number":26919,"comment_id":"1627601580","body":"> https://english.stackexchange.com/a/279953\r\n\r\nThanks @BartoszPiwek.\r\n\r\nSo it indicates that \"bugfix\" may be a computing term but it doesn't mention its plural i.e. \"bugfixes\" to be a valid computing term.\r\n\r\n![image](https://github.com/facebook/react/assets/114917595/9b03af12-5597-44ca-96d1-1b7ad8a46c55)\r\n","updated_at":"2023-07-09T04:29:30Z","created_at":"2023-07-09T04:29:30Z","creator_user_login":"KhurramJalil"}
{"number":26374,"comment_id":"1465271771","body":"Change in rendering behavior: The createRoot function is a new API introduced in React@18 that changes the way that React renders components. If your application relies on specific rendering behavior, this change could potentially cause CSS issues.\r\n\r\nSSR/CSR mismatch: If your application uses server-side rendering (SSR) and client-side rendering (CSR), using the createRoot function could potentially cause a mismatch between the SSR and CSR versions of your application, leading to CSS issues.\r\n\r\nOther changes in React@18: React@18 introduces several other changes and improvements to the React library, including updates to the reconciliation algorithm and improved error handling. These changes could potentially cause unexpected behavior in your application, including CSS issues.\r\n\r\nTo help identify the root cause of the issue, I would recommend the following steps:\r\n\r\nCheck the React@18 release notes: The React@18 release notes provide a detailed overview of the changes and improvements introduced in this version of React. Check the release notes to see if any of the changes are related to the CSS issue you are experiencing.\r\n\r\nCheck for known issues: There may be known issues or bugs related to the createRoot function that are causing the CSS issue you are experiencing. Check the React issue tracker or forums to see if others are reporting similar issues.\r\n\r\nCheck your code: Review your code to see if there are any potential issues related to the createRoot function, such as SSR/CSR mismatch or reliance on specific rendering behavior.\r\n\r\nCreate a minimal reproduction: If you are still unable to identify the root cause of the issue, create a minimal reproduction of the problem and share it with the React community. This will help others to understand the issue and potentially identify a solution.","updated_at":"2023-03-12T18:48:36Z","created_at":"2023-03-12T18:48:36Z","creator_user_login":"Almas456"}
{"number":26374,"comment_id":"1465432354","body":"@Almas456 Thank you for your response, but it is not helpful.\r\n\r\nI have reviewed the React@18 release notes, but there was no mention of CSS issues in the createRoot function section.\r\n\r\nI searched for existing issues before submitting this one, and did not find any relevant information.\\\r\nTherefore, I included some keywords in this issue to help future searchers find it easily. So please do not doubt that I have not done my research thoroughly.\r\n\r\nI have provided a minimum reproducible example and detailed the steps to reproduce the issue.\r\n\r\nLastly, may I ask if this reply was generated by a machine like ChatGPT?\\\r\nIt seems to be too generic and lacks specificity and relevance to this particular issue.","updated_at":"2023-03-13T02:54:45Z","created_at":"2023-03-13T02:54:45Z","creator_user_login":"magic-akari"}
{"number":26374,"comment_id":"1465491346","body":"I've tested it in Chrome, Firefox, and Safari.\r\nChrome and Safari show reported behavior, and Firefox doesn't. The same goes for any Canary.\r\n\r\nJust for convenience, the main difference between ok.html and buggy.html is shown below.\r\n\r\n```diff\r\n-     ReactDOM.render(\r\n-       React.createElement(App),\r\n-       document.querySelector(\"#root\")\r\n-     );\r\n+     const rootElement = document.querySelector(\"#root\");\r\n+     const root = ReactDOM.createRoot(rootElement);\r\n+     root.render(React.createElement(App));\r\n```","updated_at":"2023-03-13T04:22:15Z","created_at":"2023-03-13T04:22:15Z","creator_user_login":"no-yan"}
{"number":26374,"comment_id":"1465502209","body":"> I've tested it in Chrome, Firefox, and Safari. Chrome and Safari show reported behavior, and Firefox doesn't. The same goes for any Canary.\r\n> \r\n> Just for convenience, the main difference between ok.html and buggy.html is shown below.\r\n> \r\n> ```diff\r\n> -     ReactDOM.render(\r\n> -       React.createElement(App),\r\n> -       document.querySelector(\"#root\")\r\n> -     );\r\n> +     const rootElement = document.querySelector(\"#root\");\r\n> +     const root = ReactDOM.createRoot(rootElement);\r\n> +     root.render(React.createElement(App));\r\n> ```\r\n\r\nI did not take notice of the behavior of Firefox.\r\nThank you for your research.","updated_at":"2023-03-13T04:43:26Z","created_at":"2023-03-13T04:43:26Z","creator_user_login":"magic-akari"}
{"number":26374,"comment_id":"1589595633","body":"Any updates on this?\r\nI tried to implement it in my company's project and it completely broke in safari (chrome works fine).\r\nInspecting the element shows the body empty, somewhere I read that this change might break some css and that may cause a huge problem when SSR and CSR don't match.\r\n\r\nSadly I lost a lot of time trying to fix this issue, looks like following \"the best practice\" is not always the best choice ☹️ ","updated_at":"2023-06-13T15:57:14Z","created_at":"2023-06-13T15:57:14Z","creator_user_login":"Okhan97"}
{"number":26306,"comment_id":"1454932186","body":"The HTML spec says the value has to be a string (see [here](https://html.spec.whatwg.org/multipage/input.html#date-state-(type=date))), and it looks like React strongly wants all values to be strings to comply with this spec.\r\n\r\n[There's a check to make sure the value attribute is a string](https://github.com/facebook/react/blob/main/packages/shared/CheckStringCoercion.js#L150).\r\n\r\n[Values get coerced to strings here](https://github.com/facebook/react/blob/main/packages/react-dom-bindings/src/client/ToStringValue.js#L26). \r\n\r\n`@types/react` says the type of value is:\r\n\r\n```ts\r\nvalue?: string | ReadonlyArray<string> | number | undefined\r\n```\r\n","updated_at":"2023-03-05T00:12:43Z","created_at":"2023-03-05T00:12:43Z","creator_user_login":"egonSchiele"}
{"number":26306,"comment_id":"1455049254","body":"> The HTML spec says the value has to be a string (see [here](https://html.spec.whatwg.org/multipage/input.html#date-state-(type=date))), and it looks like React strongly wants all values to be strings to comply with this spec.\r\n\r\nI thought it would be better if react supported doing so, could avoid some issues. Is there any reason why React wants all values to be string?\r\n","updated_at":"2023-03-05T10:23:38Z","created_at":"2023-03-05T10:23:38Z","creator_user_login":"naveen521kk"}
{"number":26306,"comment_id":"1457811528","body":"\r\n\r\nimport \"./styles.css\";\r\nimport React,{useState} from \"react\";\r\n\r\nexport default function App() {\r\n  const [a, setA] = useState();\r\n  return (\r\n    <input\r\n      type=\"date\"\r\n      value={a}\r\n      onChange={(e) => {\r\n        setA(e.target.value);\r\n      }}\r\n    />\r\n  );\r\n}\r\n","updated_at":"2023-03-07T09:10:41Z","created_at":"2023-03-07T09:10:41Z","creator_user_login":"KrishKuChhabra"}
{"number":26306,"comment_id":"1465271129","body":"You are correct that passing a Date object directly to the value prop of a date picker component in React can be problematic. This is because the value prop expects a string in a specific format, and passing a Date object directly will result in an incorrect format that the browser cannot understand.\r\n\r\nTo avoid this issue, you can use a library like moment.js or date-fns to format the Date object into a string that can be understood by the date picker component. These libraries provide functions to format dates in a variety of formats, including the format required by the date picker.\r\n\r\nAlternatively, if you don't want to use a library, you can manually format the Date object using the built-in Date methods. For example, you could use the getFullYear(), getMonth(), and getDate() methods to get the year, month, and day of the Date object, and then concatenate them into a string in the format required by the date picker.\r\n\r\nIt would be nice if React had built-in support for passing Date objects directly to the value prop of a date picker component, but at the moment, manual conversion is still required to ensure that the date is displayed correctly.","updated_at":"2023-03-12T18:45:17Z","created_at":"2023-03-12T18:45:17Z","creator_user_login":"Almas456"}
{"number":26306,"comment_id":"1465818516","body":"> It would be nice if React had built-in support for passing Date objects directly to the value prop of a date picker component\n\nThat's why I opened this issue 🙂","updated_at":"2023-03-13T09:48:28Z","created_at":"2023-03-13T09:48:28Z","creator_user_login":"naveen521kk"}
{"number":26306,"comment_id":"1659417365","body":"I feel like it is kind of simple, may I have a try? I would like to be the asignee.","updated_at":"2023-08-01T01:12:03Z","created_at":"2023-08-01T01:12:03Z","creator_user_login":"YantD729"}
{"number":26443,"comment_id":"1476688599","body":"Do we actually know that it *should* show up? Is there an observable difference in behavior, or does Rollup correctly eliminate unused code?","updated_at":"2023-03-20T17:55:27Z","created_at":"2023-03-20T17:55:27Z","creator_user_login":"gaearon"}
{"number":26443,"comment_id":"1476694114","body":"I haven't tried to trace the usage of that code in the `react-dom-webpack-server` bundles.\r\n\r\nIf I look at what seems to be an equivalent section of one of the prod bundles, I see:\r\n\r\n```ts\r\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(\r\n  function(a){new y(a,3,!1,a.toLowerCase(),null,!1,!1)\r\n})\r\n;[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(\r\n  function(a){new y(a,3,!0,a,null,!1,!1)\r\n});\r\n```\r\n\r\nWhich looks like it is that same code, with no assignment statement (ie, the `new y()` corresponds to `new PropertyInfoRecord()`, and that value is currently being created and thrown away).","updated_at":"2023-03-20T17:59:49Z","created_at":"2023-03-20T17:59:16Z","creator_user_login":"markerikson"}
{"number":26443,"comment_id":"1476696623","body":"Yeah but the question is whether that `properties` object is being used in them. If it's not being used, isn't it correct that it gets removed?","updated_at":"2023-03-20T18:00:50Z","created_at":"2023-03-20T18:00:50Z","creator_user_login":"gaearon"}
{"number":26443,"comment_id":"1476711774","body":"Here's a copy of the \"fixed\" dev bundle from one of my local builds:\r\n\r\n[react-server-dom-webpack-server.browser.development-fixed.zip](https://github.com/facebook/react/files/11021540/react-server-dom-webpack-server.browser.development-fixed.zip)\r\n\r\n\r\nLooking at it, the `properties` object is:\r\n\r\n- Written to by all of the `properties[name] = new PropertyInfoRecord()` lines\r\n- Read only by `getPropertyInfo()`\r\n\r\nand I don't see any other references to `getPropertyInfo()` in that bundle file.\r\n\r\nSo, it does seem like _all_ of the `DOMProperty.js` logic _may_ actually be dead as far as this bundle is concerned.  (Although in that case, you'd think that all of it would get stripped out, especially in a prod build.)\r\n\r\nGiven that, this may not actually be a true bug in terms of behavior.\r\n\r\nNot sure what the right answer here is, then.  I guess adding an extra plugin just to fix the output isn't necessary if it's not going to result in a difference in behavior, but it also seems odd to have seemingly-incorrect bundle output _and_ leave that extra dead logic in the bundles 🤷‍♂️ ","updated_at":"2023-03-20T18:10:09Z","created_at":"2023-03-20T18:10:09Z","creator_user_login":"markerikson"}
{"number":26443,"comment_id":"1476720703","body":"Is the output _incorrect_ or insufficiently optimized?\r\n\r\nIf it's not being stripped out, that's something that would be good to fix, but it's not the same as it being broken. `react-server-dom-webpack-server` bundle should usually be Node-only, so this shouldn't be a big problem re: code size either.\r\n\r\nThe problematic part here might be convoluted metaprogramming we do in `DOMProperty` but we're moving towards getting rid of it in https://github.com/facebook/react/pull/26433.","updated_at":"2023-03-20T18:16:13Z","created_at":"2023-03-20T18:16:13Z","creator_user_login":"gaearon"}
{"number":26443,"comment_id":"1476724013","body":"Yeah, after inspecting the bundles, I would say that it's _just_ that they're \"insufficiently optimized\".  It does seem like there's a Rollup bug in that it _should_ either leave in all of `DOMProperty.js` _or_ strip all of it out, and _not_ strip out a few specific parts.  But, given that the `properties` stuff doesn't _seem_ to be used in those bundles, I think it's safe to leave that alone for now.","updated_at":"2023-03-20T18:18:30Z","created_at":"2023-03-20T18:18:30Z","creator_user_login":"markerikson"}
{"number":26407,"comment_id":"1471768644","body":"Nice dude it was so helpful.","updated_at":"2023-03-16T11:21:29Z","created_at":"2023-03-16T11:21:29Z","creator_user_login":"vishakh-abhayan"}
{"number":26407,"comment_id":"1471884233","body":"You said it yourself: React is \"a JavaScript Library\", not a framework. It's unopionated and doesn't come with batteries included.\r\n\r\nBesides, what's stopping your from just using vanilla CSS?\r\n```tsx\r\n<div className=\"class1 class2\" />\r\n```","updated_at":"2023-03-16T12:39:58Z","created_at":"2023-03-16T12:39:58Z","creator_user_login":"zettca"}
{"number":26407,"comment_id":"1472807279","body":"I feel, having its own library adds a bit more to 'load' to React. Think of React as HTML with some extra functions. \r\nIn this way, you see HTML could be styled with plain CSS classes or with frameworks like Tailwind, Bootstrap and the like. Same as React (Only it has some extra styling options which you mentioned above). You could stick to plain CSS or learn something like Tailwind which works the same across all systems and that's it. No need to learn all of the styling systems","updated_at":"2023-03-16T22:00:20Z","created_at":"2023-03-16T22:00:20Z","creator_user_login":"Complexlity"}
{"number":26407,"comment_id":"1483984302","body":"> React is said to be a JavaScript Library for creating User Interface.\r\n> \r\n> Now, I've wondered, how we can have a User Interface without styles?\r\n> \r\n> This is where I'm asking that-- why doesn't React have an in-built styling System where we can directly style our React Components without using third party tools like Styled Components, Emotion, Aphrodite, Linaria and so on?\r\n> \r\n> You see, Web Development has become too complex and too complicated because there's just too much to learn to create a simple thing as User Interface.\r\n> \r\n> This means that to style my React Application after learning JavaScript and learning React, I still need again to learn a new library or framework like Styled Components, Emotion, Aphrodite, Linaria and so on.\r\n> \r\n> This is too much work. So I am requesting that React should come with the styling feature in-built: so that I will just learn it together along the way while learning React, and not be bothered with learning a new styling library after going through the stress and pain of learning HTML, CSS, JavaScript and React.\r\n> \r\n> Can React make Components styling an in-built React feature?\r\n> \r\n> Regards.\r\n\r\nReact's philosophy is to focus on providing a core set of features for building user interfaces and leaving styling to be handled by external tools and libraries. This is because styling is a complex and ever-evolving aspect of web development, and there are many different approaches and tools available to handle it.\r\n\r\nReact's approach of separating concerns, by separating the view (HTML and CSS) from the logic (JavaScript), makes it possible to use different styling solutions with React. There are many popular styling solutions like Styled Components, Emotion, Aphrodite, Linaria, and many more, each with their own unique approach to styling React components.\r\n\r\nBy not providing an in-built styling system, React allows developers to choose the styling solution that best fits their needs and preferences. This way, developers can use the same styling solution across multiple projects and can easily switch to a different solution if needed.\r\n\r\nHowever, if you prefer an in-built styling solution, there are other libraries and frameworks that provide this, such as Vue.js and Angular. These frameworks have built-in styling systems that allow developers to style components directly without using external libraries.\r\n\r\nUltimately, it is up to the individual developer and project requirements to choose the best approach for styling React components.\r\n","updated_at":"2023-03-26T03:29:10Z","created_at":"2023-03-26T03:29:10Z","creator_user_login":"MadhuSaini22"}
{"number":26407,"comment_id":"1528643380","body":" article id='article' className={[`${essayList.container} animate__animated animate__bounceInUp `]}\r\nYou can see","updated_at":"2023-04-29T04:05:47Z","created_at":"2023-04-29T04:05:32Z","creator_user_login":"Bibooo25730"}
{"number":26215,"comment_id":"1438995518","body":"I think the problem is just the large complexity of your algorithms and the cost of unnecessary recalculations.\r\nHere is an example of an optimzed version of your app with same features .\r\nLive example:\r\n[sandbox](https://codesandbox.io/s/solitary-rain-gvw2wg)\r\n\r\n\r\n","updated_at":"2023-02-21T19:37:07Z","created_at":"2023-02-21T19:37:07Z","creator_user_login":"sohaibMan"}
{"number":26215,"comment_id":"1439558910","body":"@sohaibMan \r\n\"the large complexity\"\r\nI'm not sure there's much complexity to it, as this bug is not visible at fairly smaller list of players like `100`, for example\r\n\r\nI was able to eliminate it by refactoring `useState` into `useRef` using kind of your `no useState` approach\r\n\r\n![animation](https://user-images.githubusercontent.com/86713661/220554144-6b5c14fd-da0e-4750-ac78-9a9c1b444001.gif)\r\n[Optimized CodeSanbdox useRef version](https://codesandbox.io/s/hungry-goldwasser-odoi3k?file=/src/App.js)\r\n\r\nBut, I'm still curious\r\n1) Why useState hooks seems to slow things down\r\n2) Is there a way to display this large data set, and use useState hook while having a quick performance?\r\n(The trade off with the `useRef` hook is that it goes out of the component lifecycle, so **useEffect** does not track it which can be a bummer in certain cases)","updated_at":"2023-02-22T07:40:17Z","created_at":"2023-02-22T07:39:02Z","creator_user_login":"alexander-vashchuk"}
{"number":26215,"comment_id":"1439753269","body":"For my app this feature work great\r\n","updated_at":"2023-02-22T10:13:31Z","created_at":"2023-02-22T10:13:31Z","creator_user_login":"kalp2525"}
{"number":26215,"comment_id":"1442214230","body":"When we update one record of the entire array, react has to render all components for the table. useState happens fast. Painting the DOM is the one that is being delayed. To test that, one can try clicking on other checkboxes, and the dom will be unresponsive. From my experience, when such a huge list is involved, i would manage the states for each table row rather than having a global state at the top level. So in this case, toggling a check box will only re-render a particular table row and not the entire table. Combining that with [virtual lists](https://www.patterns.dev/posts/virtual-lists/) we can achieve snappy UI even for huge lists.","updated_at":"2023-02-27T13:17:15Z","created_at":"2023-02-23T18:07:25Z","creator_user_login":"hhkk28"}
{"number":26215,"comment_id":"1445888073","body":"@hhkk28 Then why it works fast when I use `useRef` instead of `useState`?\r\nSeems like React virtual DOM is not very smart about it","updated_at":"2023-02-27T08:14:52Z","created_at":"2023-02-27T08:14:52Z","creator_user_login":"alexander-vashchuk"}
{"number":26215,"comment_id":"1446320476","body":"@alexander-vashchuk React re-renders only when a state or props is changed. In case of updating refs, react re-render any nodes. That is the intended behavior. In react developer tools, enable the toggle `Highlight updates when components render.` to see the components that are re-rendered. In the case of the checkbox with useRef, only the checkbox is re-rendered due to the internal state change of material ui, whereas in the case of the checkbox with useState, the entire table is re-rendered.\r\n![image](https://user-images.githubusercontent.com/85559412/221574044-793bcd9a-a35a-4646-9911-43e8bdf39f63.png)\r\n\r\nPlease check this well written blog on react rendering behaviour to understand when react triggers re renders and when it does not - [Why React Re-Renders](https://www.joshwcomeau.com/react/why-react-re-renders/)\r\n","updated_at":"2023-02-27T13:23:54Z","created_at":"2023-02-27T13:23:54Z","creator_user_login":"hhkk28"}
{"number":26215,"comment_id":"1452785118","body":"> @hhkk28 Then why it works fast when I use `useRef` instead of `useState`?\n> Seems like React virtual DOM is not very smart about it\n\nYou can use this tool to help you figure out why some components are rerendering and how to resolve them on your side to avoid unnecessary rerenders.\nhttps://github.com/welldone-software/why-did-you-render","updated_at":"2023-03-03T01:00:11Z","created_at":"2023-03-03T00:59:51Z","creator_user_login":"Seven-Y-Q-Guo"}
{"number":26315,"comment_id":"1465097666","body":"@MaciejNiklasinski I think you could add these block inside the `useEffect` function and it will work as you expect:\r\n```\r\n  if (ref.current === null) {\r\n    const id = map.size; //Symbol();\r\n    const handle = { id };\r\n    console.log(`Adding Symbol ${id} to map`);\r\n    map.set(id, handle);\r\n    ref.current = handle;\r\n  }\r\n```\r\nI also noticed that in the component before first mount the mentioned code gets triggered twice. And both time `ref.current` is `null` and map add two elements. Actually, the same behavior as you mentioned. Yeah, and only in the `Strict Mode`","updated_at":"2023-03-12T05:37:39Z","created_at":"2023-03-12T05:37:39Z","creator_user_login":"Werter12"}
{"number":26315,"comment_id":"1465109203","body":"@Werter12 Thank you for your suggestion, unfortunately in my real use case it won't work.\r\n\r\nI need the handle object to be created and added to the map before the function returns the first time.\r\n\r\n```\r\nexport const useSubscribction = () => {\r\n  const ref = useRef(null);\r\n  if (ref.current === null) {\r\n    const id = Symbol();\r\n    const handle = { id };\r\n    map.set(id, handle);\r\n    ref.current = handle;\r\n  }\r\n\r\n  useEffect(() => () => { map.delete(ref.current.id); }, [] );\r\n  \r\n  // At this point before the function returns the first time I need a handle object to already exist.\r\n  // If it is moved to the useEffect (componentDidMount equivalent part) that will not be the case.\r\n};\r\n```","updated_at":"2023-03-12T07:11:48Z","created_at":"2023-03-12T07:11:48Z","creator_user_login":"MaciejNiklasinski"}
{"number":26315,"comment_id":"1482280864","body":"I've also encountered this bug: in strict mode, `this` inside a class component will point to the second instance in both cases of `componentDidMount()` / `componentWIllUnmount()`.\r\n\r\n* Component instance A is created\r\n* Component instance B is created\r\n* `componentDidMount()` is called with `this` being `B`\r\n* `componentWillUnmount()` is called with `this` being `B`\r\n* `componentDidMount()` is called with `this` being `B`\r\n\r\nBecause of that, clean-up is not possible and various \"stale props\" bugs occur because `componentWillUnmount()` performs a clean-up of the instance `B` which is the one that React keeps while the instance `A` is what React disposes of but that instance `A` remains \"uncleaned\" and its event listeners still operate.\r\n\r\nI've submitted a separate bug report: https://github.com/facebook/react/issues/26467","updated_at":"2023-03-24T06:44:36Z","created_at":"2023-03-24T05:40:11Z","creator_user_login":"catamphetamine"}
{"number":26315,"comment_id":"1482357554","body":"@MaciejNiklasinski Have a look at my bug report: https://github.com/facebook/react/issues/26467\r\nIs it the same issue? If yes then I guess the \"weird\" behavior is an intentional one to reveal the components that rely on doing stuff during render (\"side effects\").","updated_at":"2023-03-24T07:14:03Z","created_at":"2023-03-24T07:14:03Z","creator_user_login":"catamphetamine"}
{"number":26315,"comment_id":"1588541821","body":"This should not be the expected behavior, see this example.\r\n\r\n```js\r\nimport { useMemo, useLayoutEffect, useEffect } from 'react'\r\n\r\nlet count = 0\r\n\r\nexport default function App() {\r\n  const obj = useMemo(() => ({ id: count++ }), [])\r\n  console.log(`render ${obj.id}`)\r\n\r\n  useLayoutEffect(() => {\r\n    console.log(`useLayoutEffect ${obj.id}`)\r\n    return () => console.log(`useLayoutEffect(cleanup) ${obj.id}`)\r\n  }, [obj])\r\n\r\n  useEffect(() => {\r\n    console.log(`useEffect ${obj.id}`)\r\n    return () => console.log(`useEffect(cleanup) ${obj.id}`)\r\n  }, [obj])\r\n\r\n  return <></>\r\n}\r\n```\r\n\r\nThe current behavior:\r\n```\r\nrender 0\r\nrender 1\r\nuseLayoutEffect 1\r\nuseEffect 1\r\nuseLayoutEffect(cleanup) 1\r\nuseEffect(cleanup) 1\r\nuseLayoutEffect 1\r\nuseEffect 1\r\n```\r\n\r\nThe expected behavior:\r\n```\r\nrender 0\r\nrender 1\r\nuseLayoutEffect 0\r\nuseEffect 0\r\nuseLayoutEffect(cleanup) 0\r\nuseEffect(cleanup) 0\r\nuseLayoutEffect 1\r\nuseEffect 1\r\n```\r\n\r\nThis is very bad.\r\nIf your `useMemo` returns an `AbortController` whose cleanup function is `controller.abort()`,\r\nthen your `controller.signal` will be aborted at the beginning because it actually performs the cleanup function on the second controller.","updated_at":"2023-06-13T04:51:09Z","created_at":"2023-06-13T04:51:09Z","creator_user_login":"BlackGlory"}
{"number":26315,"comment_id":"1663671638","body":"I have same problem, described it in different issue https://github.com/facebook/react/issues/25284#issuecomment-1663618966.","updated_at":"2023-08-03T09:51:11Z","created_at":"2023-08-03T09:51:11Z","creator_user_login":"fhucko"}
{"number":25957,"comment_id":"1371937388","body":"It looks like the issue may be caused by the fact that you are using the createRoot method from react-dom/client to render your app, rather than the render method from react-dom.\r\n\r\nThe createRoot method is used to create a root container that can be used to render a React element tree to the DOM. It is different from the render method in that it enables concurrent rendering, where multiple components can be rendered asynchronously without blocking the main thread.\r\n\r\nHowever, one of the side effects of using createRoot is that it can cause certain lifecycle methods, such as componentDidUpdate, to behave differently. This may be why your custom hook is not working as expected.\r\n\r\nOne possible solution is to switch back to using the render method from react-dom to render your app. This will allow you to use your custom hook as you intended.\r\n\r\nHere is an example of how you could modify your code to use the render method:\r\n<img width=\"223\" alt=\"image\" src=\"https://user-images.githubusercontent.com/63119222/210738934-f317cf93-b7cb-4df9-9dd6-3d577070c108.png\">\r\n","updated_at":"2023-01-05T08:52:42Z","created_at":"2023-01-05T08:52:42Z","creator_user_login":"vardhanreddy27"}
{"number":25957,"comment_id":"1372089317","body":"Thank you very much. This is the configuration created by create-react-app. Perhaps we should let the owners of this package know.","updated_at":"2023-01-05T11:17:42Z","created_at":"2023-01-05T11:17:42Z","creator_user_login":"Sinevik"}
{"number":25957,"comment_id":"1372274187","body":"Hey I am a newcomer in this project and I would like to contribute","updated_at":"2023-01-05T14:19:58Z","created_at":"2023-01-05T14:19:58Z","creator_user_login":"govind15496"}
{"number":25957,"comment_id":"1373690883","body":"Could you repro it in a codesandbox for people to debug right away,\r\nand explains what is expected VS actual?","updated_at":"2023-01-06T14:07:22Z","created_at":"2023-01-06T14:07:22Z","creator_user_login":"sunderls"}
{"number":25957,"comment_id":"1399444024","body":"I don't get the link between didUpdate and a useEffect on lesson... What role plays this \"lesson\"??\r\nAnd what do you mean by stop working??\r\nAnyway custom hooks still work perfectly well.\r\nTo emulate properly didUpdate you need a useEffect on [], and you also need to clean your reference value detecting first the mount évent, otherwise component reuse will be detected as update by your hook","updated_at":"2023-01-22T10:01:11Z","created_at":"2023-01-22T10:01:11Z","creator_user_login":"frfancha"}
{"number":25957,"comment_id":"1501047846","body":"I was also stuck here\r\nYou should call a render method in the code\r\nhere's updated code\r\n```js\r\nimport React, { useState, useRef, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\n\r\nfunction CustomHookExample() {\r\n  const [lesson, setLesson] = useState('');\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!ref.current) {\r\n      ref.current = true;\r\n    } else {\r\n      console.log('Custom hook is working!');\r\n    }\r\n  }, [lesson]);\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        value={lesson}\r\n        onChange={(e) => setLesson(e.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n    <CustomHookExample />\r\n  </React.StrictMode>\r\n);\r\n```\r\n","updated_at":"2023-04-09T05:48:29Z","created_at":"2023-04-09T05:48:29Z","creator_user_login":"pranshu05"}
{"number":26022,"comment_id":"1397187826","body":"Hello. When I visit the URL you provided, I see a login UI not built with React. I assume your application can only be viewed after login. Is it possible for you to provide a test account, or provide a minimal repro using codesandbox.io? ","updated_at":"2023-01-19T15:45:00Z","created_at":"2023-01-19T15:45:00Z","creator_user_login":"mondaychen"}
{"number":26022,"comment_id":"1400919293","body":"Hi. Yes the application can only be viewed after login.  Unfortunately, I won't be able to provide a test account.\r\nI did notice that in the React DevTools changelog for 4.26.0, there is a change related to ForwardRef/Memo if displayName is set.\r\n[react/CHANGELOG.md at main · facebook/react](https://github.com/facebook/react/blob/main/packages/react-devtools/CHANGELOG.md#4260)  (last bullet).\r\n\r\nMy project's code base does have one reference to ForwardRef in one component.  I'll research into any changes I can make in the code base in response to how ForwardRef has been changed.\r\n","updated_at":"2023-01-23T20:13:47Z","created_at":"2023-01-23T20:13:47Z","creator_user_login":"cherryshoe"}
{"number":26022,"comment_id":"1404050799","body":"Hi.  I made a [minimal codesandbox.io project](https://codesandbox.io/s/goofy-bird-6bijxt) with the offending component in my code base \"TabNavigator.js\" copied exactly as is to the sandbox - with same react, react-dom, and prop-types versions (My project doesn't use create-react-app, but I used it for the sandbox).  I was **not** able to recreate the error with React DevTools 4.27.1 installed and enabled.\r\n\r\nCan you give insight on how the getDisplayNameForFiber elementType is populated for tag === 14 (ForwardRef)?  This is undefined in my application where I encounter this issue.\r\n![getDisplayNameForFiber_ForwardRef](https://user-images.githubusercontent.com/3752154/214650697-e48f6003-5e9e-4cce-b33d-e3542422c25f.PNG)\r\nAnd then when it reaches getWrappedDisplayName, outerType is thus undefined, causing the error.\r\n![getWrappedDisplayName](https://user-images.githubusercontent.com/3752154/214651241-124507a9-6c71-4d03-abb1-6e3d383bc1d6.png)\r\n\r\n","updated_at":"2023-01-25T18:30:31Z","created_at":"2023-01-25T18:30:31Z","creator_user_login":"cherryshoe"}
{"number":26022,"comment_id":"1406139165","body":"The fiber tagged as `MemoComponent` (14) but then enters the case for `ForwardRef` (11 in latest versions). Seems like Devtools doesn't detect the version of React you're using correctly (and uses the v[alue for `ForwardRef` if it doesn't know the version](https://github.com/facebook/react/blob/ee85098019bf9703b32f608f8bbd5f8fb1a7d60b/packages/react-devtools-shared/src/backend/renderer.js#L355)).\r\n\r\n@cherryshoe  In your application, could you check, without the \r\noffending component in your tree, what it displays in the element inspector under \"rendered by\"? \r\n![Screenshot from 2023-01-27 08-52-39](https://user-images.githubusercontent.com/12292047/215035676-ff1b3b0d-ab60-41c7-80ed-b24e3f22bbf7.png)","updated_at":"2023-01-27T07:55:18Z","created_at":"2023-01-27T07:55:18Z","creator_user_login":"eps1lon"}
{"number":26022,"comment_id":"1406534185","body":"@eps1lon With React DevTools version 4.25.0 installed and enabled, and the offending component <TabNavigator> not in the component tree, the react-dom version is 16.4.0, matches what yarn thinks too.\r\n\r\n![react-devtools_react-dom-version](https://user-images.githubusercontent.com/3752154/215102327-43a1a462-0267-415d-8010-e1d1c62302fb.PNG)\r\n","updated_at":"2023-01-31T13:33:05Z","created_at":"2023-01-27T13:49:44Z","creator_user_login":"cherryshoe"}
{"number":26022,"comment_id":"1516894520","body":"Since outerType is undefined, can you add a check if it's defined then access outerType.displayName, else set it to empty string?","updated_at":"2023-04-20T20:17:55Z","created_at":"2023-04-20T20:17:55Z","creator_user_login":"cherryshoe"}
{"number":25642,"comment_id":"1308854224","body":"Feature requests like these are better described with a high level goal. Instead of asking for a particular implementation (\"return promise\"), try to describe what the UI should be doing (e.g. some animation, preloading etc).","updated_at":"2022-11-09T14:32:01Z","created_at":"2022-11-09T14:32:01Z","creator_user_login":"eps1lon"}
{"number":25642,"comment_id":"1309209371","body":"The use case is mainly about preloading data. \r\n\r\nI would like to cancel a fetch request for the preloaded data if the state transition did not finish.\r\n\r\nBeing able to await the transition would be nice, so I could abort the fetch request from the handler that started the preload, and invoked the transition if the transition was canceled.\r\n\r\nAs I understand there is currently no way to do this ...?","updated_at":"2022-11-09T18:46:14Z","created_at":"2022-11-09T18:46:14Z","creator_user_login":"subhero24"}
{"number":25642,"comment_id":"1473126733","body":"I recently stumbled onto the same problem (I think).\r\n\r\nThe use case is simple: I want to **cleanup** after a transition was **aborted** mid-render by another transition getting started.\r\n\r\nIn my case, it was not network fetch() that I needed to cancel, it was some async function that used lots of local compute but supported aborting.\r\n\r\nAlthough react aborts component rendering as new transitions are started, I still needed to clean-up my pending effects.\r\n\r\n---\r\n\r\nSome of the workarounds you posted above using `isPending` effects I believe only work if you have one active transition at most.  I don't think it support aborting transitions at all... not sure.\r\n\r\nBut your suggestion of using await I think would be reasonable, by resolving if the transition succeeds, and rejecting if the transition is aborted.\r\n\r\nThat said, promises aren't always so convenient to use in components...  So another option, is to request that startTransition() accept a return value, a cleanup function similar to useEffect:\r\n\r\n```js\r\nstartTransition(() => {\r\n  return () => ... // <-- But, how would we know if successfully rendered or aborted?\r\n});\r\n```\r\n\r\nPerhaps another option is to have a `useTransitionEffect` hook akin to useEffect or useLayoutEffect?\r\n\r\n---\r\n\r\nAnyway, I recently had to solve this problem and wrote a hook to support \"abortable transitions\".  I chose to just leverage AbortController directly for my use case (i.e. abort() the controller when the transition is aborted, use the AbortSignal in my component tree).\r\n\r\nBut I tweaked it to return a promise as you suggested, instead:\r\n\r\n```js\r\nimport { TransitionFunction, TransitionStartFunction, useCallback, useEffect, useRef, useTransition } from \"react\";\r\n\r\nexport default function useAwaitableTransition() : [boolean, TransitionStartFunction] {\r\n\tconst [isPending, startTransition] = useTransition();\r\n\tconst resolveRef = useRef<(value?: unknown) => void>();\r\n\tconst rejectRef = useRef<(reason?: any) => void>();\r\n\r\n\tconst wrappedStartTransition = useCallback(\r\n\t\t(callback: TransitionFunction) => {\r\n\t\t\treturn new Promise((resolve, reject) => {\r\n\t\t\t\trejectRef.current?.();\r\n\r\n\t\t\t\tresolveRef.current = resolve;\r\n\t\t\t\trejectRef.current = reject;\r\n\r\n\t\t\t\tstartTransition(() => {\r\n\t\t\t\t\tcallback();\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}, [startTransition, rejectRef]);\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (!isPending) {\r\n\t\t\tresolveRef.current?.();\r\n\r\n\t\t\tresolveRef.current = undefined;\r\n\t\t\trejectRef.current = undefined;\r\n\t\t}\r\n\t}, [isPending]);\r\n\r\n\treturn [isPending, wrappedStartTransition];\r\n};\r\n```\r\n\r\nUsage:\r\n\r\n```js\r\n// Usage:\r\nconst [isPending, startAwaitableTransition] = useAwaitableTransition();\r\nconst myCallback = async () => {\r\n\ttry {\r\n\t\t// Save state in variables here before calling setState() inside transition\r\n\t\tawait startAwaitableTransition(() => {\r\n\t\t\t// Setup: update state\r\n\t\t});\r\n\t\t// Cleanup: success case\r\n\t} catch {\r\n\t\t// Cleanup: abort case\r\n\t}\r\n};\r\n```","updated_at":"2023-03-17T04:51:46Z","created_at":"2023-03-17T04:51:46Z","creator_user_login":"mmocny"}
{"number":27164,"comment_id":"1660408867","body":"not going to lie, I think you might enjoy Solid.js Signals more than React.js useState behaviors.","updated_at":"2023-08-01T14:08:17Z","created_at":"2023-08-01T14:08:17Z","creator_user_login":"JesseKoldewijn"}
{"number":27164,"comment_id":"1661620911","body":"https://github.com/MrWangJustToDo/r-store#pure-hook-api-for-reactive-state\r\n\r\n```tsx\r\nimport { useReactiveEffect, useReactiveState } from \"reactivity-store\";\r\n\r\nexport const usePosition = () => {\r\n  const state = useReactiveState({ x: 0, y: 0 });\r\n\r\n  const xPosition = useReactiveState({ x: 0 });\r\n\r\n  useReactiveEffect(() => {\r\n    const listener = (e: MouseEvent) => {\r\n      state.x = e.clientX;\r\n      state.y = e.clientY;\r\n    };\r\n\r\n    window.addEventListener(\"mousemove\", listener);\r\n\r\n    return () => window.removeEventListener(\"mousemove\", listener);\r\n  });\r\n\r\n  useReactiveEffect(() => {\r\n    xPosition.x = state.x;\r\n  });\r\n\r\n  return { y: state.y, x: xPosition.x };\r\n};\r\n\r\n```\r\n\r\nI just implement a package just like this, maybe this is the api that you want 🤔️","updated_at":"2023-08-02T07:05:03Z","created_at":"2023-08-02T07:05:03Z","creator_user_login":"MrWangJustToDo"}
{"number":27164,"comment_id":"1666942022","body":"Thanks for the answers for solid I will look into it but my company is using react JS, is there some website/source where react team release their plans just to see where is going.\r\nI didn't find a lot of information so is kind of top secret thing 😊 I had to conclude base of how now they implemented state.\r\n\r\nThe web technology is in winter faze practically you have routing, components (code behind and template rendering mechanisms) change propagation/detection and mechanisms for communication in between components pub-sub or observables. All the rest is just glue around this parts. There is nothing new already for years just changing form of glue 😊. \r\n\r\nWill focus just on state creation.\r\n\r\nIf we look about state creation (observable) react JS is returning array, RXJS is returning object, knockout js is returning function.\r\n\r\nThe chose of returning array and deconstructing it is just create extra learning curve and reduce a possibility to extend it.\r\n\r\nReturning array and deconstructing it is better then returning a object (this is kind of conclusion)\r\n\r\nThe second thing is getter is not getter but a value subscriber to have a getter you need extra variable with ref that you can just read value. This is causing bigger learning curve and extra code.\r\n\r\nReturn array and deconstructing it and not have a getter is not new way extra high tech programing this is different \"glue\" that can be simplified and reduce the complexity and learning curve 😊.\r\n\r\nHere is my variants of state hook in few different forms, didn't pay attention about typescript or full implementation just to show the patterns.\r\n\r\n ```\r\n const kObservable = useFuncState(1);\r\n  const rxObservable = useObjState(1);\r\n  const observable = useObjState(1);\r\n\r\n  useEffect(() => {\r\n    **//knockout js** \r\n    let d1 = kObservable();\r\n    kObservable(2);\r\n    let c1 = kObservable(); // magic return 2\r\n    //@ts-ignore\r\n    kObservable.subscribe(() => {})\r\n\r\n    **//RxJS**\r\n    let d2 = rxObservable.value;\r\n    rxObservable.next(2);\r\n    let c2 = rxObservable.value; // magic return 2\r\n    rxObservable.subscribe(() => {})\r\n\r\n    **//object way using getter and setter**\r\n    let d3 = observable.value;\r\n    observable.value = 2;\r\n    let c3 = observable.value; // magic return 2\r\n    observable.subscribe(() => {})\r\n\r\n  }, [])\r\n\r\n //this is limited subscriber because you need to defined it in root of component so if you want to subscribe after data is loaded\r\n //you need to create new variable and set it when data is loaded to true and create if inside useEffect\r\n// subscribers that is on observable you can subscribe any moment you want so no need for extra things   \r\n  useEffect(() => {\r\n    //confusing in react getter is not getter is value subscriber and getter you need to make it your self (bigger learning curve) :) \r\n  }, [observable.valueSubscriber])\r\n\r\n```\r\n\r\nFile with hooks\r\n```\r\nimport { useRef, useState } from \"react\";\r\n\r\nexport function useFuncState(v: any) : Function {\r\n    var state = useState(v)\r\n    var  stateRef = useRef(v) \r\n    let f = function(v: any) {\r\n        if(arguments.length == 0){\r\n            return stateRef.current;\r\n        }\r\n        state[1](v);\r\n        stateRef.current = v;\r\n    }\r\n\r\n    //@ts-ignore\r\n    f.valueSubscriber = state[0]\r\n\r\n    //@ts-ignore\r\n    f.subscribe = function(f: Function){\r\n        // implement subscriber\r\n    }\r\n\r\n    return f;\r\n}\r\n\r\nclass ObjUseState{\r\n    public state: any;\r\n    private subscribers: Function[];\r\n    private currentState: any;\r\n\r\n    constructor(v: any, state: any, ref: any) { \r\n        this.state = state(v);\r\n        this.currentState = ref(v);\r\n        this.subscribers = [];\r\n    }\r\n\r\n    get valueSubscriber() {\r\n        return this.state[0]\r\n    }\r\n\r\n    get value(){\r\n        return this.currentState.current;\r\n    }\r\n\r\n    set value(v) {\r\n        this.currentState.current = v;\r\n        this.state[1](v);\r\n        this.fire();\r\n    }\r\n\r\n    next(v:any):void {\r\n        this.currentState.current = v;\r\n        this.state[1](v);\r\n        this.fire();\r\n    }\r\n\r\n    subscribe(fn: Function): void{\r\n        this.subscribers.push(fn)\r\n    }\r\n    \r\n    unsubscribe(fn: Function): void {\r\n        this.subscribers = this.subscribers.filter(x => x != fn);\r\n    } \r\n\r\n    fire():void {\r\n        this.subscribers.forEach(x=> x());\r\n    }\r\n}\r\n\r\nexport function useObjState<T>(v: any) : ObjUseState {\r\n    return new ObjUseState(v as T, useState, useRef);\r\n}\r\n```\r\n\r\n","updated_at":"2023-08-06T18:51:52Z","created_at":"2023-08-06T18:43:34Z","creator_user_login":"Mrga55"}
{"number":27103,"comment_id":"1633780356","body":"I see the same issue and I think it has something to do with the useEffect. I'm not sure but for me useEffect always makes everything run 2 times for me instead of the 1 time that it's supposed to. Like not only is it rendering a different ID but it is also mounting twice. Is it supposed to Mount twice? I'm a beginner and just looking into these things. please tell me what you think. thank you. \r\n","updated_at":"2023-07-13T08:15:49Z","created_at":"2023-07-13T08:15:49Z","creator_user_login":"TamashiiD"}
{"number":27103,"comment_id":"1633800304","body":"hmm I'm looking more into this and yes the useId Hook has a problem it says : \"With [server rendering](https://react.dev/reference/react-dom/server), useId requires an identical component tree on the server and the client. If the trees you render on the server and the client don’t match exactly, the generated IDs won’t match\" \r\nmaybe this is the problem although I still don't know what the identical component tree on a server and a client is. But what you are experiencing is \"normal\"? I'm not sure.","updated_at":"2023-07-13T08:29:44Z","created_at":"2023-07-13T08:29:32Z","creator_user_login":"TamashiiD"}
{"number":27103,"comment_id":"1651181923","body":"Not sure if related, but https://codesandbox.io/p/sandbox/empty-butterfly-y36f8d?file=%2Fapp%2Flayout.tsx%3A1%2C1 in Next.js App Dir pages, a similar issue is happening.\r\n\r\n- https://github.com/vercel/next.js/issues/53110\r\n\r\n## Edit\r\n\r\nNope, looks like https://github.com/vercel/next.js/issues/53110 is a Next.js issue. ","updated_at":"2023-07-26T08:44:53Z","created_at":"2023-07-26T08:02:10Z","creator_user_login":"icyJoseph"}
{"number":27103,"comment_id":"1663844870","body":"I guess this is expected behavior.\r\n\r\n1. under `<StrictMode/>`, component is rendered twice https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberHooks.js#L597-L610\r\n\r\n2. and for `useId()`, it falls back to a global counter if it is no in hydration.https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberHooks.js#L2613-L2632\r\n\r\nIn your demo, you are NOT doing hydration and also under `<StrictMode/>` so you get different ids.\r\n\r\nThis is not about `useId()`, if you switch to `const [id] = useState(() => performance.now())`, you still get the unstable ids.\r\nI'm not React maintainer, but I don't think this has an easy fix because of what StrictMode does. Also this usually should not cause trouble.\r\n \r\n ","updated_at":"2023-08-03T11:52:06Z","created_at":"2023-08-03T11:52:06Z","creator_user_login":"JSerZANP"}
{"number":27103,"comment_id":"1664235229","body":"> I'm not React maintainer, but I don't think this has an easy fix because of what StrictMode does. Also this usually should not cause trouble.\r\n\r\n@JSerZANP I am aware of what `StrictMode` does. The problem is the order in which everything is happening. Each instance of a component should have its own unique and persistent ID. So, it makes sense that the ID changes after the component un-mounts and mounts again, but not across re-renders of the same instance (before un-mount happens).\r\n\r\nNow, I am also aware that having `useId` working as described above (which is the only way it should work in my opinion) opens the possibility to bypass other hooks strict controls (like `useMemo` that will be called twice and `useRef` that will reset its value after the second render). For example, by keeping an external storage using the instance ID.\r\n\r\nBut, if this is in fact on purpose, then I really think it is an exaggeration. It makes `useId` unsound, broken. If people want to consciously do strange things and maybe navigate the grey areas of `StrictMode` rules, so be it. But we cannot make `useId` \"useless\".\r\n\r\nAs it is right now, it could only be reliably used for input/label HTML IDs... so, at least, change the hook name right? So people will not get confused thinking that ID actually remains constant through the entire life of the instance.\r\n\r\nIt also makes it very easy to create memory leaks.\r\n\r\nAgain, in some way it is genius. The ID is coherent inside the `useEffect` (mount/unmount). Makes sense if it is on purpose to avoid non-pure logic in the component body, but it should be at least documented.\r\n\r\nI've been working with React for years and I cannot wrap my head around this.","updated_at":"2023-08-03T16:08:14Z","created_at":"2023-08-03T15:52:53Z","creator_user_login":"ernestostifano"}
{"number":27125,"comment_id":"1644010385","body":"As indicated in [another part of that same document](https://react.dev/blog/2022/03/08/react-18-upgrade-guide#dropping-support-for-internet-explorer), React 18 has no official support for any version of IE.  Either stay on React 17 or switch to something like Preact or Nerv.","updated_at":"2023-07-20T14:17:03Z","created_at":"2023-07-20T14:17:03Z","creator_user_login":"nmain"}
{"number":27125,"comment_id":"1646180843","body":"You answer seems to me running away from responsibility.\r\nSwitching to another framework and rewriting the entire working application is not an option.- all because of one buggy function I pointed out exactly.\r\nThe entire current application works fine in IE 10  (with polyfills as recommended in your legacy docs) and I pointed an exact function which fails.\r\nIf React wont support the IE, just drop the support globally and officially - otherwise its a poor excuse not to fix the new buggy functions, while dropping the already working one.","updated_at":"2023-07-21T21:06:06Z","created_at":"2023-07-21T20:02:00Z","creator_user_login":"g-rusev"}
{"number":27125,"comment_id":"1646262295","body":"preact and nerve provide close or even near-complete compatibility with the existing React APIs - they're still an option to consider for updated react IE development IMO.\r\n\r\nThey have indeed already dropped the support globally and officially, as some features are not polyfillable in IE. You might not make use of them with your existing codebase, but these issues will still exist and you might encounter some of them in the near future.","updated_at":"2023-07-21T21:37:27Z","created_at":"2023-07-21T21:37:27Z","creator_user_login":"busybox11"}
{"number":27154,"comment_id":"1665347214","body":"I've reviewed your code and I think I've found the cause of the error. The useEffect hook in your custom hook is calling useState inside of a conditional statement. This is not allowed, because useState can only be called once per render. When you save your code, React will re-render the component, and the useEffect hook will be called again. However, the conditional statement will now have a different value, so useState will be called again, even though it's already been called once. This is what's causing the error.\r\n\r\nTo fix this, you need to move the useState call outside of the conditional statement. Here's the corrected code:\r\n\r\nconst useForComponent = () => {\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // This code will only be run once, when the component mounts.\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  } else {\r\n    return <SomeComponent />;\r\n  }\r\n};\r\nThis code will only call useState once, when the component mounts. This will prevent the error from occurring.\r\n\r\nI hope this helps! Let me know if you have any other questions.\r\n open to collaborate and work ","updated_at":"2023-08-04T09:55:26Z","created_at":"2023-08-04T09:55:10Z","creator_user_login":"abhinav-nav"}
{"number":27154,"comment_id":"1665508474","body":"> I hope this helps! Let me know if you have any other questions.\r\n\r\nthanks a lot, it gives me some insight about this problem that i was having, but im not sure or rather dont recall which one of these were causing this problem specifically (useToGetFourPopularItems / useToGetFourRandomItems ) \r\n\r\nfyi i later on refactored it and made it work just fine though :)\r\n\r\n> open to collaborate and work\r\n\r\nsounds like a very good idea, i would be very much willing to do that as well :)","updated_at":"2023-08-04T12:10:28Z","created_at":"2023-08-04T12:10:09Z","creator_user_login":"bappyasif"}
{"number":27154,"comment_id":"1666412990","body":"\r\n> sounds like a very good idea, i would be very much willing to do that as well :)\r\n\r\n>> sure ","updated_at":"2023-08-05T06:38:20Z","created_at":"2023-08-05T06:38:20Z","creator_user_login":"abhinav-nav"}
{"number":27121,"comment_id":"1644575661","body":"I just run into this using Firefox.\r\n\r\n```\r\nThe error was thrown emit@moz-extension://57001395-8940-45ea-8bc9-bae1a432b322/build/main.js:27059:22\r\nbridge_Bridge/this._wallUnlisten<@moz-extension://57001395-8940-45ea-8bc9-bae1a432b322/build/main.js:27228:14\r\nlistener@moz-extension://57001395-8940-45ea-8bc9-bae1a432b322/build/main.js:57497:41\r\n```","updated_at":"2023-07-20T20:40:58Z","created_at":"2023-07-20T20:40:58Z","creator_user_login":"kiliancs"}
{"number":27121,"comment_id":"1652558677","body":"Yeah I also ran into this error using Edge (Chromium):\r\n```The error was thrown at chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:28171:41\r\n    at Bridge.emit (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:24827:22)\r\n    at chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:24996:14\r\n    at listener (chrome-extension://gpphkfbcpidddadnkolkpfckpihlkkil/build/main.js:57406:39)```","updated_at":"2023-07-26T22:02:55Z","created_at":"2023-07-26T22:02:55Z","creator_user_login":"Truiteseche"}
{"number":27121,"comment_id":"1657224061","body":"same issue when have multiple iframes and fix like for the iframe support \r\n```\r\nif (window.parent !== window && !!window.parent.__REACT_DEVTOOLS_GLOBAL_HOOK__) {\r\n      window.__REACT_DEVTOOLS_GLOBAL_HOOK__ = window.parent.__REACT_DEVTOOLS_GLOBAL_HOOK__;\r\n}\r\n```\r\n\r\nso let me link it with: https://github.com/facebook/react/issues/18945","updated_at":"2023-07-30T17:30:51Z","created_at":"2023-07-30T17:19:16Z","creator_user_login":"zaqqaz"}
{"number":27121,"comment_id":"1661751827","body":"Got this while refreshing minimal react app with just a single username/password form:\r\n```\r\nThe error was thrown at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:28171:41\r\n    at Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24827:22)\r\n    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24996:14\r\n    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:57406:39)\r\n```","updated_at":"2023-08-02T08:34:25Z","created_at":"2023-08-02T08:34:25Z","creator_user_login":"kweh"}
{"number":26515,"comment_id":"1491093894","body":"See https://github.com/facebook/react/issues/18945 for the main discussion around iframe handling.\r\n\r\nMost likely you'll need to do something like this:\r\n\r\n```ts\r\nif (window.parent) {\r\n  window.__REACT_DEVTOOLS_GLOBAL_HOOK__ = window.parent.__REACT_DEVTOOLS_GLOBAL_HOOK__;\r\n}\r\n```","updated_at":"2023-03-30T23:31:06Z","created_at":"2023-03-30T23:31:06Z","creator_user_login":"markerikson"}
{"number":26515,"comment_id":"1491149222","body":" Thanks for sharing @markerikson. I didn't knew there was an already open discussion about it, I should close this issue then 😅 \r\n\r\nActually, for me it's the other way around, something like: \r\n```js\r\nconst iframeWindow = ocument.getElementById(\"iframe\").contentWindow;\r\nif(iframeWindow){\r\n  window.__REACT_DEVTOOLS_GLOBAL_HOOK__ = iframeWindow.__REACT_DEVTOOLS_GLOBAL_HOOK__ \r\n}\r\n```\r\n\r\nbut  `iframeWindow.__REACT_DEVTOOLS_GLOBAL_HOOK__` is undefined so I guess the React Devtools doesn't inject `__REACT_DEVTOOLS_GLOBAL_HOOK__ ` into iframes.\r\n\r\n","updated_at":"2023-03-31T01:02:14Z","created_at":"2023-03-31T01:02:14Z","creator_user_login":"IDrissAitHafid"}
{"number":26515,"comment_id":"1491159025","body":"That's the actual point here, yes.\r\n\r\nThe React DevTools add `window.__REACT_DEVTOOLS_GLOBAL_HOOK__` to the _main_ `window`, but not to iframes.\r\n\r\nSo, you have to copy that reference _into_ each iframe in order for the DevTools to talk to React inside that iframe.","updated_at":"2023-03-31T01:17:39Z","created_at":"2023-03-31T01:17:39Z","creator_user_login":"markerikson"}
{"number":26515,"comment_id":"1491333745","body":"Ah I see!\r\n\r\nI just tested it but in my case the Iframe runs on different domains (I inject the Iframe from an extension) I get a cross-origin error.\r\n\r\nThanks for your help!","updated_at":"2023-03-31T05:49:09Z","created_at":"2023-03-31T05:49:09Z","creator_user_login":"IDrissAitHafid"}
{"number":25219,"comment_id":"1242000334","body":"Hi @kiner-tang! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Freact%20%2325219). Thanks!","updated_at":"2022-09-09T13:50:18Z","created_at":"2022-09-09T13:50:18Z","creator_user_login":"facebook-github-bot"}
{"number":25219,"comment_id":"1242006687","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 8a9e7b6cefb5e7e94333c7d5fe2cca6541776d5b...551db21f40e11f32fd2998b1b1fde3ddcb0cdf9d\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/551db21f40e11f32fd2998b1b1fde3ddcb0cdf9d/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=8a9e7b6cefb5e7e94333c7d5fe2cca6541776d5b) | **=** | 134.97 kB | 134.97 kB | = | 43.23 kB | 43.23 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/551db21f40e11f32fd2998b1b1fde3ddcb0cdf9d/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=8a9e7b6cefb5e7e94333c7d5fe2cca6541776d5b) | **=** | 141.69 kB | 141.69 kB | = | 45.23 kB | 45.23 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/551db21f40e11f32fd2998b1b1fde3ddcb0cdf9d/files/facebook-www/ReactDOM-prod.classic.js?compare=8a9e7b6cefb5e7e94333c7d5fe2cca6541776d5b) | **=** | 486.24 kB | 486.24 kB | = | 86.55 kB | 86.55 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/551db21f40e11f32fd2998b1b1fde3ddcb0cdf9d/files/facebook-www/ReactDOM-prod.modern.js?compare=8a9e7b6cefb5e7e94333c7d5fe2cca6541776d5b) | **=** | 471.52 kB | 471.52 kB | = | 84.32 kB | 84.32 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/551db21f40e11f32fd2998b1b1fde3ddcb0cdf9d/files/facebook-www/ReactDOMForked-prod.classic.js?compare=8a9e7b6cefb5e7e94333c7d5fe2cca6541776d5b) | **=** | 486.24 kB | 486.24 kB | = | 86.55 kB | 86.55 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 551db21f40e11f32fd2998b1b1fde3ddcb0cdf9d\n</p>\n","updated_at":"2022-09-09T14:35:37Z","created_at":"2022-09-09T13:55:33Z","creator_user_login":"sizebot"}
{"number":25219,"comment_id":"1242044771","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-09-09T14:28:00Z","created_at":"2022-09-09T14:28:00Z","creator_user_login":"facebook-github-bot"}
{"number":24809,"comment_id":"1169636793","body":"Hi @radunemerenco! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Freact%20%2324809). Thanks!","updated_at":"2022-06-29T07:35:07Z","created_at":"2022-06-29T07:35:07Z","creator_user_login":"facebook-github-bot"}
{"number":24809,"comment_id":"1169641633","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 167853026cb193f81c0474d3bf9ef9e03dde203e...337557b98fba72bde3c4f52a3edb9377e1ec3e79\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/337557b98fba72bde3c4f52a3edb9377e1ec3e79/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=167853026cb193f81c0474d3bf9ef9e03dde203e) | **=** | 131.57 kB | 131.57 kB | = | 42.28 kB | 42.28 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/337557b98fba72bde3c4f52a3edb9377e1ec3e79/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=167853026cb193f81c0474d3bf9ef9e03dde203e) | **=** | 136.84 kB | 136.84 kB | = | 43.87 kB | 43.87 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/337557b98fba72bde3c4f52a3edb9377e1ec3e79/files/facebook-www/ReactDOM-prod.classic.js?compare=167853026cb193f81c0474d3bf9ef9e03dde203e) | **=** | 440.72 kB | 440.72 kB | = | 80.62 kB | 80.63 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/337557b98fba72bde3c4f52a3edb9377e1ec3e79/files/facebook-www/ReactDOM-prod.modern.js?compare=167853026cb193f81c0474d3bf9ef9e03dde203e) | **=** | 426.03 kB | 426.03 kB | = | 78.43 kB | 78.44 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/337557b98fba72bde3c4f52a3edb9377e1ec3e79/files/facebook-www/ReactDOMForked-prod.classic.js?compare=167853026cb193f81c0474d3bf9ef9e03dde203e) | **=** | 441.50 kB | 441.50 kB | = | 80.86 kB | 80.86 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 337557b98fba72bde3c4f52a3edb9377e1ec3e79\n</p>\n","updated_at":"2022-06-29T07:40:53Z","created_at":"2022-06-29T07:40:53Z","creator_user_login":"sizebot"}
{"number":24809,"comment_id":"1169717712","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-06-29T09:00:57Z","created_at":"2022-06-29T09:00:57Z","creator_user_login":"facebook-github-bot"}
{"number":24635,"comment_id":"1140389836","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: a2766387efe68b318b23d8c35c70b850d1e6a250...849114501f365c12d0db8bef8ccbaecf44e26bcd\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 131.28 kB | 131.28 kB | = | 42.13 kB | 42.13 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 136.54 kB | 136.54 kB | = | 43.68 kB | 43.68 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 439.35 kB | 439.35 kB | = | 80.29 kB | 80.29 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 424.64 kB | 424.64 kB | = | 78.13 kB | 78.13 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 439.35 kB | 439.35 kB | = | 80.29 kB | 80.29 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 849114501f365c12d0db8bef8ccbaecf44e26bcd\n</p>\n","updated_at":"2022-05-29T06:56:07Z","created_at":"2022-05-29T06:56:07Z","creator_user_login":"sizebot"}
{"number":24635,"comment_id":"1141242717","body":"@sebmarkbage could you review?","updated_at":"2022-05-30T14:48:48Z","created_at":"2022-05-30T14:48:48Z","creator_user_login":"Biki-das"}
{"number":24635,"comment_id":"1144840518","body":"See #22357","updated_at":"2022-06-02T13:05:15Z","created_at":"2022-06-02T13:05:15Z","creator_user_login":"worldwidebaby"}
{"number":24778,"comment_id":"1165354950","body":"Is this in React 18? Note that IE is not supported anymore: https://reactjs.org/blog/2022/03/08/react-18-upgrade-guide.html#dropping-support-for-internet-explorer ","updated_at":"2022-06-24T08:52:45Z","created_at":"2022-06-24T08:52:45Z","creator_user_login":"guillaumebrunerie"}
{"number":24778,"comment_id":"1165699213","body":"This can't be true — `window.event` has been supported since IE4.\r\nhttps://developer.mozilla.org/en-US/docs/Web/API/Window/event","updated_at":"2022-06-24T15:44:12Z","created_at":"2022-06-24T15:44:12Z","creator_user_login":"gaearon"}
{"number":24778,"comment_id":"1165700172","body":"Oh you're saying it's `null` rather than `undefined`?","updated_at":"2022-06-24T15:45:22Z","created_at":"2022-06-24T15:45:22Z","creator_user_login":"gaearon"}
{"number":24778,"comment_id":"1231502132","body":"yes, `window.event` in  ie would be undefined. could add a fix for this ","updated_at":"2022-08-30T10:56:09Z","created_at":"2022-08-30T10:56:09Z","creator_user_login":"yeliex"}
{"number":24778,"comment_id":"1531651075","body":"Any update on this issue? I am getting this issue in React 18.\r\n","updated_at":"2023-05-02T15:11:25Z","created_at":"2023-05-02T15:10:31Z","creator_user_login":"TrAndreiR"}
{"number":24778,"comment_id":"1543663957","body":"I also getting this issue in React 18","updated_at":"2023-05-11T09:33:21Z","created_at":"2023-05-11T09:33:21Z","creator_user_login":"coderup2021"}
{"number":24723,"comment_id":"1155382342","body":"Hi @creamidea! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Freact%20%2324723). Thanks!","updated_at":"2022-06-14T15:47:09Z","created_at":"2022-06-14T15:47:09Z","creator_user_login":"facebook-github-bot"}
{"number":24723,"comment_id":"1155387719","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: be229c5655074642ee664f532f2e7411dd7dccc7...3699597d5361634cdb88a530044acfe6408ef5b4\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 131.76 kB | 131.76 kB | = | 42.31 kB | 42.31 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 137.03 kB | 137.03 kB | = | 43.90 kB | 43.90 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 440.91 kB | 440.91 kB | = | 80.63 kB | 80.63 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 426.21 kB | 426.21 kB | = | 78.44 kB | 78.44 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 441.61 kB | 441.61 kB | = | 80.85 kB | 80.85 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 3699597d5361634cdb88a530044acfe6408ef5b4\n</p>\n","updated_at":"2022-06-14T16:09:47Z","created_at":"2022-06-14T15:52:16Z","creator_user_login":"sizebot"}
{"number":24723,"comment_id":"1155402238","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-06-14T16:05:45Z","created_at":"2022-06-14T16:05:45Z","creator_user_login":"facebook-github-bot"}
{"number":23218,"comment_id":"1025874508","body":"Hi @vovacodes! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Freact%20%2323218). Thanks!","updated_at":"2022-01-31T15:17:08Z","created_at":"2022-01-31T15:17:08Z","creator_user_login":"facebook-github-bot"}
{"number":23218,"comment_id":"1025977040","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-01-31T16:38:52Z","created_at":"2022-01-31T16:38:52Z","creator_user_login":"facebook-github-bot"}
{"number":23218,"comment_id":"1026222126","body":"This is completely backwards compatible - looks good to me in making the exports contract explicit. Then ideally the wildcard exports could be deprecated in a subsequent major for a more explicit package boundary.","updated_at":"2022-01-31T21:20:46Z","created_at":"2022-01-31T21:20:46Z","creator_user_login":"guybedford"}
{"number":23218,"comment_id":"1026763618","body":"@acdlite I don't think I have enough context to fix the failing rollup CI build, I'd appreciate some guidance there and happy to proceed with a fix","updated_at":"2022-02-01T11:55:55Z","created_at":"2022-02-01T11:55:55Z","creator_user_login":"vovacodes"}
{"number":23206,"comment_id":"1024067858","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 2ed58eb889b2b2a8a745ec6c73785f8a87034d1f...66170d5f56f3f4c44f7e71f29b7d6c019d9808e1\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 129.59 kB | 129.59 kB | = | 41.55 kB | 41.55 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.77 kB | 134.77 kB | = | 43.10 kB | 43.10 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 428.19 kB | 428.19 kB | = | 78.60 kB | 78.60 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 418.18 kB | 418.18 kB | = | 77.17 kB | 77.17 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 428.19 kB | 428.19 kB | = | 78.60 kB | 78.61 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 66170d5f56f3f4c44f7e71f29b7d6c019d9808e1\n</p>\n","updated_at":"2022-01-28T10:10:25Z","created_at":"2022-01-28T10:10:25Z","creator_user_login":"sizebot"}
{"number":23206,"comment_id":"1034655164","body":"@acdlite please review this pr for merge to main, I Reduces the number of variables read and simplifies a judgment in DEV env, Thanks.\r\n","updated_at":"2022-02-10T09:53:34Z","created_at":"2022-02-10T08:55:57Z","creator_user_login":"kstd123"}
{"number":24614,"comment_id":"1137233313","body":"We think the change is good. (But it’s not the only change we would make. So over the long term there may be more, especially if we get involved with typings closer.)\r\n\r\n>Regardless, objects crash the application, while functions just give a warning in the console. This might be indication that the functions are sort of a \"wildcard\" in jsx.\r\n\r\nThis is more of a historical accident. We didn’t have either a warning or an error. So we added a warning to not break existing code. But it might make sense to harden it and align the behavior.\r\n\r\n> Functions were assignable to ReactNode for as long as ReactNode existed (exaggeration, but at least for as longest I can remember). I think this was a conscious decision based on React's architecture, or a thing that yielded a positive outcome, so it was kept like that (full explanation below).\r\n\r\nReact’s concept of ReactNode did not include functions. If they were assignable I presume it was a bug in typings. Notably, objects were assignable to ReactNode too but that was wrong. \r\n\r\n> Unfortunately though, this change disables some other patterns that, while not as prevalent, are as valid as render props. For example calling the props.children.props.children(\"hello\") from BlackBoxComponent in the above example.\r\n\r\nI’d say this pattern is strongly discouraged.\r\n\r\nIn general, cloneElement, Children manipulation and reading props of children are discouraged. They are sometimes unavoidable but they’re not idiomatic patterns because they pierce through the abstraction. For example you can’t safely extract a component from the child because it would “hide” the props from the parent. In React, the ability to always extract or inline a component is an important design principle. We can’t deprecate these patterns outright because they don’t always have a replacement yet. But it’s good if typing also discourages using them extensively. \r\n\r\nHope this helps. ","updated_at":"2022-05-25T13:22:55Z","created_at":"2022-05-25T13:22:55Z","creator_user_login":"gaearon"}
{"number":24634,"comment_id":"1140811239","body":"I'm pretty sure that I know what is the scenario here. This is about React trying to render many components in \"parallel\" - each of them could suspend after all and I suspect that React wants to \"kick-off\" all of them and a single caught error (that is not a promise) doesn't abort the computation. The problem is that this particular render won't be suspending at all - all of those \"parallel\" components throw here. And it takes time to go through all of them, in fact - it takes more than a \"concurrent deadline\". So when looping over work React finally recognizes that it should yield, and it does but when going back to the work loop... **it starts from scratch**. So the whole work done in the previous iteration of the work loop is lost here (probably that work that has thrown errors is not cached in your React's internal structures).\r\n\r\nThis can be verified~ by decreasing the deadline from the 5ms in the scheduler package to 1ms (then an even smaller slice of those parallel components can lead to a problem). It's also easier to verify this with a console open because the JavaScript will ececute slower (probably you can even use CPU throttling, but I didn't have time to verify this last thing).","updated_at":"2022-05-30T07:40:06Z","created_at":"2022-05-30T07:40:06Z","creator_user_login":"Andarist"}
{"number":24634,"comment_id":"1141012060","body":"I kept digging into this. I've failed to repro this in codesandbox when I've just tried to ensure that I'm yielding in the middle of \"throwing siblings\" but the render was able to complete just fine. So it turns out that Brian's hunch was right here - this is, at least partially, related to Next's `ReactDevOverlay` and I was able to repro this on codesandbox when using this component:\r\nhttps://codesandbox.io/s/thirsty-elion-nefk9t?file=/src/App.js\r\n\r\nSo I think what happens here is that:\r\n- Next catches errors that are supposed to be handled by the custom ErrorBoundary created by Brian, roughly [here](https://github.com/vercel/next.js/blob/5a16b1a26f6c213776deed9ac465e2bc81cdf5f3/packages/react-dev-overlay/src/client.ts#L15-L19)\r\n- it emits an event, listens to it in the `ReactDevOverlay` ([here](https://github.com/vercel/next.js/blob/5a16b1a26f6c213776deed9ac465e2bc81cdf5f3/packages/react-dev-overlay/src/internal/ReactDevOverlay.tsx#L81)), and updates state there\r\n- this in turn leads to an effect being flushed and yet another state update [here](https://github.com/vercel/next.js/blob/5a16b1a26f6c213776deed9ac465e2bc81cdf5f3/packages/react-dev-overlay/src/internal/container/Errors.tsx#L126)\r\n\r\nSo based on that I **think** that the tree rerenders and the partially done work is being discarded and the cycle just continues. I'm not sure if this assessment is fully correct though because `ReactDevOverlay`'s `children` are always the same (its parent doesn't rerender) and IIRC this should be optimized and shouldn't require a rerender. But perhaps since the work in `children` didn't yet commit this doesn't happen or something.","updated_at":"2022-05-30T10:57:38Z","created_at":"2022-05-30T10:57:38Z","creator_user_login":"Andarist"}
{"number":24634,"comment_id":"1143980023","body":"Does someone working on this issue ??\r\n","updated_at":"2022-06-01T18:16:10Z","created_at":"2022-06-01T18:16:10Z","creator_user_login":"sowrovsarkar63"}
{"number":24634,"comment_id":"1144009823","body":"> Does someone working on this issue ??\r\n\r\n@sowrovsarkar63 No.","updated_at":"2022-06-01T18:48:47Z","created_at":"2022-06-01T18:48:23Z","creator_user_login":"bvaughn"}
{"number":23167,"comment_id":"1019306909","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 13036bfbc8ecbcf4451adb7bde397f438caa8607...a6488a1317651defd3fe64ec0624be8857c07dbe\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 129.59 kB | 129.59 kB | = | 41.55 kB | 41.55 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.77 kB | 134.77 kB | = | 43.10 kB | 43.10 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 428.19 kB | 428.19 kB | = | 78.60 kB | 78.60 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 418.18 kB | 418.18 kB | = | 77.17 kB | 77.17 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 428.19 kB | 428.19 kB | = | 78.61 kB | 78.60 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-experimental/react/umd/react.production.min.js | **=** | 11.87 kB | 11.83 kB | = | 4.64 kB | 4.64 kB\n| oss-experimental/react/umd/react.profiling.min.js | **=** | 11.86 kB | 11.83 kB | = | 4.65 kB | 4.64 kB\n| oss-stable-semver/react/umd/react.production.min.js | **=** | 11.27 kB | 11.24 kB | = | 4.48 kB | 4.47 kB\n| oss-stable/react/umd/react.production.min.js | **=** | 11.27 kB | 11.24 kB | = | 4.48 kB | 4.47 kB\n| oss-stable-semver/react/umd/react.profiling.min.js | **=** | 11.27 kB | 11.24 kB | = | 4.48 kB | 4.48 kB\n| oss-stable/react/umd/react.profiling.min.js | **=** | 11.27 kB | 11.24 kB | = | 4.48 kB | 4.48 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against a6488a1317651defd3fe64ec0624be8857c07dbe\n</p>\n","updated_at":"2022-01-22T16:47:37Z","created_at":"2022-01-22T16:47:37Z","creator_user_login":"sizebot"}
{"number":23167,"comment_id":"1021304921","body":"@Biki-das yes,I use the `shared/hasOwnProperty` module.","updated_at":"2022-01-25T15:26:13Z","created_at":"2022-01-25T15:26:13Z","creator_user_login":"JX-Zhuang"}
{"number":23134,"comment_id":"1015417645","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 3dc41d8a2590768a6ac906cd1f4c11ca00417eee...f96a0be791983408d5d2c31cecbcc57ed6489088\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 129.52 kB | 129.52 kB | = | 41.53 kB | 41.53 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.65 kB | 134.65 kB | = | 43.01 kB | 43.01 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 427.76 kB | 427.76 kB | = | 78.53 kB | 78.53 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 417.45 kB | 417.45 kB | = | 77.06 kB | 77.06 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 427.76 kB | 427.76 kB | = | 78.53 kB | 78.53 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against f96a0be791983408d5d2c31cecbcc57ed6489088\n</p>\n","updated_at":"2022-01-18T13:34:29Z","created_at":"2022-01-18T13:34:29Z","creator_user_login":"sizebot"}
{"number":23134,"comment_id":"1024945590","body":"> @Biki-das Thanks for your contribution It's valid but I would suggest to include some screenshot / supporting material to show the old and new look of the component so that it's easy for us also to review that what exactly the new outlook is\r\n\r\n@Jassi10000 dont give useless review, this pr just fix the css label, which was put under single quotes, which is not a valid css syntax that's it.","updated_at":"2022-01-29T16:47:33Z","created_at":"2022-01-29T16:47:33Z","creator_user_login":"Biki-das"}
{"number":23134,"comment_id":"1024948348","body":"@Biki-das \r\nI got the changes just asked for a screenshot of : how now the updated component looks like \r\nand gentleman , please mind your words , respect the developer community ","updated_at":"2022-01-29T17:04:04Z","created_at":"2022-01-29T17:04:04Z","creator_user_login":"Jassi10000-zz"}
{"number":23134,"comment_id":"1024950693","body":"> \r\n\r\nyou are deprecating the journey, react is quite heavy on pr, i am sorry but that review was useless","updated_at":"2022-01-29T17:16:54Z","created_at":"2022-01-29T17:16:54Z","creator_user_login":"Biki-das"}
{"number":23186,"comment_id":"1022305947","body":"I am also willing to make this happen if I may get some help on modifying the source and making some form of PR, I've been struggling a lot with the react codebase.\r\n\r\nMaybe even the context procedure that is in the standard method that I created in react dom 16 is safer?... because it allows for namespacing, and passing different accumulators, however implementation and usage can be more complicated than while having a global accumulator.\r\n\r\nThis is what JSS does to render CSS you pass an accumulator in a context during server render, the component picks the accumulator and stores the data, the only difference is that this is async.","updated_at":"2022-01-26T15:24:32Z","created_at":"2022-01-26T15:24:32Z","creator_user_login":"onzag"}
{"number":23186,"comment_id":"1022935872","body":"Next.js has a functionally identical solution.\r\n\r\nEither works, they are in a way, identical in capability, I'd assume context in react would represent the standard initial props given that can be modified.\r\n\r\nIt however only seems to work at page level, in react the aim should be that it works in every level.\r\n\r\nhttps://nextjs.org/docs/basic-features/data-fetching/get-server-side-props","updated_at":"2022-01-27T08:07:45Z","created_at":"2022-01-27T07:49:34Z","creator_user_login":"onzag"}
{"number":23186,"comment_id":"1024913733","body":"`getDerivedServerSideStateFromProps(props, state)`","updated_at":"2022-01-29T13:39:04Z","created_at":"2022-01-29T13:39:04Z","creator_user_login":"onzag"}
{"number":23186,"comment_id":"1036485824","body":"It seems like Nuxt (for Vue.js) provide a similar hook -> https://nuxtjs.org/docs/internals-glossary/context#beforenuxtrender","updated_at":"2022-02-11T18:15:28Z","created_at":"2022-02-11T18:13:55Z","creator_user_login":"LifeIsStrange"}
{"number":19476,"comment_id":"670353345","body":"There is no error when I ran eslint in my local vscode editor. Perhaps, it's a bug in codesandbox.","updated_at":"2020-08-07T06:35:31Z","created_at":"2020-08-07T06:35:31Z","creator_user_login":"revanthgss"}
{"number":19476,"comment_id":"670808153","body":"It's not just a bug in codesandbox, I ran into this bug on an actual React project. The codesandbox link is just a minimal reproduction.\r\n\r\nI just checked and I can also reproduce this on a fresh create-react-app app by just doing `npx create-react-app` and then replacing src/App.js with the App module above. Here's that pushed to a repo if you would like to test this: https://github.com/likuilin/react-bug-repro","updated_at":"2020-08-08T02:06:45Z","created_at":"2020-08-08T02:06:45Z","creator_user_login":"likuilin"}
{"number":19476,"comment_id":"728373977","body":"A likely related problem is OR assignment.  Having a line like this before a hook, triggers this rule, even though it shouldn't.\r\n\r\n`const something = somethingOrUndefined || '';`","updated_at":"2020-11-16T22:41:40Z","created_at":"2020-11-16T22:41:40Z","creator_user_login":"charles-hill-exelon"}
{"number":19476,"comment_id":"828868146","body":"I can reproduce this running eslint in VSCode too","updated_at":"2021-04-29T00:35:53Z","created_at":"2021-04-29T00:35:53Z","creator_user_login":"jake-nz"}
{"number":19476,"comment_id":"870473409","body":"Seems to be fixed, _mysteriously_. I can no longer reproduce it now with the latest version of everything (fresh `npx create-react-app`), plus also even the same codesandbox link above fails to reproduce it today. I'm pretty sure codesandbox pins the version of eslint, so how this doesn't reproduce anymore is quite mysterious. Anyhow, closing issue. ","updated_at":"2021-06-29T10:34:20Z","created_at":"2021-06-29T10:26:16Z","creator_user_login":"likuilin"}
{"number":19476,"comment_id":"990211697","body":"This is still happening, minimal repro here: https://github.com/camhux/eslint-react-hook-false-positive","updated_at":"2021-12-09T20:15:20Z","created_at":"2021-12-09T20:15:20Z","creator_user_login":"gavinwahl"}
{"number":19476,"comment_id":"990224265","body":"Thank you for the work! I will reopen this issue and see if I can reproduce your case this afternoon. \r\n\r\nEdit: camhux/eslint-react-hook-false-positive#1 aside, I can confirm that repo does reproduce the issue, and the readme seems like a likely explanation about why.","updated_at":"2021-12-10T08:58:50Z","created_at":"2021-12-09T20:31:12Z","creator_user_login":"likuilin"}
{"number":19404,"comment_id":"660672655","body":"Hi @jedierikb the issue here seams to be that firefox not support `selectionchange` event on `textarea`.\r\nWhen you select with shortcut the event is fired on `keyup/keydown` for the reason above.\r\nIn this case the only fired event is `select`, so I think that an ad-hoc listener should be set on react-dom side. \r\n\r\n","updated_at":"2020-07-19T17:10:09Z","created_at":"2020-07-19T16:32:42Z","creator_user_login":"marcosvega91"}
{"number":19404,"comment_id":"661117293","body":"Thx @marcosvega91 \r\n\r\nI did not expect React's `onSelect` listener events to be assembled from `document.selectionchange` and `key` events.  Rather, I expected 'select' synthetic events to just relay values from a native `select` event.  There is clearly a lot going on under the hood!\r\n\r\nCan someone point me to a reference sheet for the recipe used by React's `onSelect` synthetic event and any other recipes used by other hybrid synthetic events?  That would be a useful resource.","updated_at":"2020-07-21T17:37:01Z","created_at":"2020-07-20T15:39:25Z","creator_user_login":"jedierikb"}
{"number":19404,"comment_id":"677555604","body":"Hi @jedierikb \r\n\r\nYou can check here: [SelectEventPlugin](https://github.com/facebook/react/blob/c954efa70f44a44be9c33c60c57f87bea6f40a10/packages/react-dom/src/events/SelectEventPlugin.js)","updated_at":"2020-08-20T11:25:02Z","created_at":"2020-08-20T11:25:02Z","creator_user_login":"rradoychev"}
{"number":19404,"comment_id":"751254249","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T14:06:29Z","created_at":"2020-12-25T14:06:29Z","creator_user_login":"stale[bot]"}
{"number":18818,"comment_id":"706813369","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-10-12T01:56:56Z","created_at":"2020-10-12T01:56:56Z","creator_user_login":"stale[bot]"}
{"number":18818,"comment_id":"730623576","body":"The tooltip is fine now but the description in the right column seems misleading to me.","updated_at":"2020-11-19T20:38:00Z","created_at":"2020-11-19T20:38:00Z","creator_user_login":"eps1lon"}
{"number":18818,"comment_id":"922439544","body":"Can still reproduce in latest DevTools and React version. @bvaughn Am I misunderstanding what the \"rendered at\" in the side-panel is supposed to say?","updated_at":"2021-09-19T08:56:20Z","created_at":"2021-09-19T08:56:20Z","creator_user_login":"eps1lon"}
{"number":18818,"comment_id":"922470249","body":"The \"rendered at\" time in this label is not specific to the component. It's describing _the commit that the component rendered as part of_. If you have suggestions for changing the label, I'm open to hearing them.\r\n\r\nI think we _could_ use the Fiber's `actualStartTime` flag to read the time when the specific Fiber was worked on, if that would be _helpful_, but we'd have to eager traverse the Fiber tree and collect these times for every fiber _while profiling_ since they're reset each time the Fiber is worked on.","updated_at":"2021-09-19T13:01:29Z","created_at":"2021-09-19T13:01:29Z","creator_user_login":"bvaughn"}
{"number":18818,"comment_id":"922489006","body":"> The \"rendered at\" time in this label is not specific to the component.\r\n\r\nWhen you mean \"label\" you refer to the side-panel?\r\n\r\nWhat I don't understand is why we do display different information in the tooltip. I would just expect the same timings displayed in the tooltip to appear in the side-panel. Because it's a bit unintuitive that the side-panel would first show a timing `alpha` with the heading \"commit information\" and also display that exact same timing `alpha` with the heading \"SpinCPU\" (i.e. the component name).\r\n\r\nBasically we have timing `alpha` but depending on what context we're in, we display it differently. \r\n\r\n```\r\nCommit information\r\ncommited at: $CommitedAtAlpha\r\nRender duration: $RenderDurationAlpha\r\n```\r\nvs\r\n```\r\nSpinCPU\r\nRendered at:\r\n$CommittedAtAlpha for $RenderDurationAlpha\r\n```\r\n\r\n`CommittedAt` and `$RenderDuration` do not change at all.\r\n\r\n\r\n> If you have suggestions for changing the label, I'm open to hearing them.\r\n\r\nDon't display \"rendered at\" under the component header because it's not specific to the component.\r\n\r\nInstead\r\n\r\n```\r\nSpinCPU\r\nWhy did this render?\r\nThis is the first time the component rendered.\r\n\r\nCommit information\r\ncommited at: $CommitedAtAlpha\r\nRender duration: $RenderDurationAlpha\r\n```\r\n\r\nThough ultimately I would still prefer to display the timing information of the tooltip in the side-panel. You have to be very precise to view the component specific timing depending on the hoverable area.\r\n\r\n````\r\nSpinCPU\r\n$TooltipTimeA of $TooltipTimeB\r\nWhy did this render?\r\nThis is the first time the component rendered.\r\n\r\nCommit information\r\ncommited at: $CommitedAtAlpha\r\nRender duration: $RenderDurationAlpha\r\n```\r\n\r\n","updated_at":"2021-09-19T15:09:13Z","created_at":"2021-09-19T15:09:13Z","creator_user_login":"eps1lon"}
{"number":18818,"comment_id":"1008183400","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2022-01-08T23:42:48Z","created_at":"2022-01-08T23:42:48Z","creator_user_login":"stale[bot]"}
{"number":18818,"comment_id":"1012300805","body":"Bump","updated_at":"2022-01-13T16:30:01Z","created_at":"2022-01-13T16:30:01Z","creator_user_login":"eps1lon"}
{"number":23174,"comment_id":"1020231324","body":"Could you please provide a minimal repro in codesandbox?","updated_at":"2022-01-24T15:37:57Z","created_at":"2022-01-24T15:37:57Z","creator_user_login":"salazarm"}
{"number":23174,"comment_id":"1020233147","body":"Sadly, not, the error appears in a large production codebase.","updated_at":"2022-01-24T15:40:07Z","created_at":"2022-01-24T15:39:51Z","creator_user_login":"marya7"}
{"number":23174,"comment_id":"1020575075","body":"Can you check if it's fixed in the latest version of React? IIRC I've encountered this bug in the wild as well and what mitigated it for me was reordering hooks around (and adding artificial component boundaries). I speculate it might be related to using setState in render but can't say for sure.","updated_at":"2022-01-24T21:40:04Z","created_at":"2022-01-24T21:40:04Z","creator_user_login":"salazarm"}
{"number":23174,"comment_id":"1020652061","body":"Getting same error as of this morning","updated_at":"2022-01-24T23:23:54Z","created_at":"2022-01-24T23:23:54Z","creator_user_login":"stoplion"}
{"number":23174,"comment_id":"1021038497","body":"> Can you check if it's fixed in the latest version of React? IIRC I've encountered this bug in the wild as well and what mitigated it for me was reordering hooks around (and adding artificial component boundaries). I speculate it might be related to using setState in render but can't say for sure.\r\n\r\nI got the same error when upgrading to latest version. Also, there is no useState in the component the error occurs.","updated_at":"2022-01-25T10:32:28Z","created_at":"2022-01-25T10:30:17Z","creator_user_login":"marya7"}
{"number":23174,"comment_id":"1021225499","body":"“I also get it” comments are not helpful, unfortunately. We won’t be able to help you without a reproducing case so please try to create one. (Usually the way to do it is to make a branch and then delete as much code as you can from your app while making sure the bug still reproduces.)","updated_at":"2022-01-25T14:17:27Z","created_at":"2022-01-25T14:15:49Z","creator_user_login":"gaearon"}
{"number":22983,"comment_id":"997154356","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: c7917fe76982c499c81be9571de44fe1293ac893...7948f241e31caf1bff7f38a70aa5b87de3d8b0c8\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 129.89 kB | 129.89 kB | = | 41.62 kB | 41.62 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.64 kB | 134.64 kB | = | 43.00 kB | 43.00 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 428.08 kB | 428.08 kB | = | 78.60 kB | 78.60 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 416.64 kB | 416.64 kB | = | 76.91 kB | 76.91 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 428.08 kB | 428.08 kB | = | 78.60 kB | 78.60 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| facebook-react-native/scheduler/cjs/Scheduler-prod.js | **+0.80%** | 10.27 kB | 10.35 kB | +0.23% | 2.60 kB | 2.60 kB\n| facebook-react-native/scheduler/cjs/Scheduler-profiling.js | **+0.75%** | 10.88 kB | 10.96 kB | +0.18% | 2.74 kB | 2.74 kB\n| facebook-www/Scheduler-prod.classic.js | **+0.71%** | 11.58 kB | 11.66 kB | +0.07% | 2.88 kB | 2.88 kB\n| facebook-www/Scheduler-prod.modern.js | **+0.71%** | 11.58 kB | 11.66 kB | +0.07% | 2.88 kB | 2.88 kB\n| facebook-www/Scheduler-profiling.classic.js | **+0.60%** | 15.90 kB | 15.99 kB | +0.46% | 3.71 kB | 3.73 kB\n| facebook-www/Scheduler-profiling.modern.js | **+0.60%** | 15.90 kB | 15.99 kB | +0.46% | 3.71 kB | 3.73 kB\n| oss-experimental/scheduler/cjs/scheduler.development.js | **+0.43%** | 17.51 kB | 17.58 kB | +0.10% | 4.93 kB | 4.94 kB\n| oss-stable-semver/scheduler/cjs/scheduler.development.js | **+0.43%** | 17.51 kB | 17.58 kB | +0.10% | 4.93 kB | 4.94 kB\n| oss-stable/scheduler/cjs/scheduler.development.js | **+0.43%** | 17.51 kB | 17.58 kB | +0.10% | 4.93 kB | 4.94 kB\n| facebook-react-native/scheduler/cjs/Scheduler-dev.js | **+0.43%** | 17.52 kB | 17.60 kB | +0.10% | 4.94 kB | 4.94 kB\n| oss-experimental/scheduler/cjs/scheduler.production.min.js | **+0.33%** | 4.24 kB | 4.26 kB | = | 1.79 kB | 1.78 kB\n| oss-stable-semver/scheduler/cjs/scheduler.production.min.js | **+0.33%** | 4.24 kB | 4.26 kB | = | 1.79 kB | 1.78 kB\n| oss-stable/scheduler/cjs/scheduler.production.min.js | **+0.33%** | 4.24 kB | 4.26 kB | = | 1.79 kB | 1.78 kB\n| facebook-www/Scheduler-dev.classic.js | **+0.31%** | 24.67 kB | 24.75 kB | +0.09% | 6.62 kB | 6.63 kB\n| facebook-www/Scheduler-dev.modern.js | **+0.31%** | 24.67 kB | 24.75 kB | +0.09% | 6.62 kB | 6.63 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 7948f241e31caf1bff7f38a70aa5b87de3d8b0c8\n</p>\n","updated_at":"2021-12-18T06:31:25Z","created_at":"2021-12-18T06:31:25Z","creator_user_login":"sizebot"}
{"number":22983,"comment_id":"1015427375","body":"@gaearon any feedback on this?","updated_at":"2022-01-18T13:46:41Z","created_at":"2022-01-18T13:46:41Z","creator_user_login":"Biki-das"}
{"number":22983,"comment_id":"1015718610","body":"It's hard to provide feedback if there is no description of what issue this is trying to fix, how you tested the change, etc!","updated_at":"2022-01-18T18:45:28Z","created_at":"2022-01-18T18:45:28Z","creator_user_login":"gaearon"}
{"number":23014,"comment_id":"1004913492","body":"> one minor piece of feedback is that the icon with the brackets and the checkmark felt a bit confusing to me, not until the toggle was clicked did i understand.\r\n>\r\n> i wonder if just a checkmark would make sense? or no icon at all?\r\n\r\nI agree that the UI is a bit non-standard. I was not sure if showing a regular checkmark would make it feel like something that could be toggled _on and off_ (when this can only be toggled on) but 🤷🏼  maybe it would be okay?\r\n\r\nWhich one of these do you like better @jstejada?\r\n\r\nA:\r\n![Screen Shot 2022-01-04 at 10 45 29 AM](https://user-images.githubusercontent.com/29597/148085122-ab1e33b6-05a2-4cfb-8a71-b1c7c865dc94.png)\r\n\r\nB:\r\n![Screen Shot 2022-01-04 at 10 45 23 AM](https://user-images.githubusercontent.com/29597/148085134-cac077d9-665b-49f0-88de-37a8ded7cec0.png)\r\n\r\nC:\r\n![Screen Shot 2022-01-04 at 10 44 36 AM](https://user-images.githubusercontent.com/29597/148085145-f10bee0c-212d-45cc-8139-b08116870e19.png)\r\n\r\nD:\r\n![Screen Shot 2022-01-04 at 10 58 33 AM](https://user-images.githubusercontent.com/29597/148087135-096d49ed-b6c3-48a6-a570-69ae1cece6ed.png)\r\n\r\nE:\r\n![Screen Shot 2022-01-04 at 10 58 56 AM](https://user-images.githubusercontent.com/29597/148087145-db52f8a3-5a85-40ee-a3c2-3443da04c06e.png)\r\n\r\nF:\r\n![Screen Shot 2022-01-04 at 10 59 28 AM](https://user-images.githubusercontent.com/29597/148087153-8bf6227e-73f4-40b7-8739-c7d96d756505.png)\r\n\r\n\r\n\r\n\r\n","updated_at":"2022-01-04T16:00:06Z","created_at":"2022-01-04T15:37:00Z","creator_user_login":"bvaughn"}
{"number":23014,"comment_id":"1005207134","body":"Talked out of band and Juan prefers the simpler check style so I'll update.","updated_at":"2022-01-04T22:09:01Z","created_at":"2022-01-04T22:09:01Z","creator_user_login":"bvaughn"}
{"number":23014,"comment_id":"1021569749","body":"I don't know what we want to do with this, if anything. Feedback signal has been weak.","updated_at":"2022-01-25T20:15:21Z","created_at":"2022-01-25T20:15:21Z","creator_user_login":"bvaughn"}
{"number":23014,"comment_id":"1085751192","body":"Hi @bvaughn! \n\nThank you for your pull request. \n\nWe **require** contributors to sign our **Contributor License Agreement**, and yours needs attention.\n\nYou currently have a record in our system, but the CLA is no longer valid, and will need to be **resubmitted**.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Freact%20%2323014). Thanks!","updated_at":"2022-04-01T10:52:33Z","created_at":"2022-04-01T10:52:33Z","creator_user_login":"facebook-github-bot"}
{"number":22982,"comment_id":"997153223","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: c7917fe76982c499c81be9571de44fe1293ac893...76376168ea3399800c72e329f60d41de243a6a95\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 129.89 kB | 129.89 kB | = | 41.62 kB | 41.63 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.64 kB | 134.64 kB | = | 43.00 kB | 43.00 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 428.08 kB | 428.08 kB | = | 78.60 kB | 78.60 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 416.64 kB | 416.64 kB | = | 76.91 kB | 76.91 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 428.08 kB | 428.08 kB | = | 78.60 kB | 78.60 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 76376168ea3399800c72e329f60d41de243a6a95\n</p>\n","updated_at":"2021-12-18T06:20:07Z","created_at":"2021-12-18T06:20:07Z","creator_user_login":"sizebot"}
{"number":22982,"comment_id":"1024945837","body":"> @Biki-das Buddy , can you please tell what changes we get to see after this contribution , please elaborate in the description of PR so that we can have more insights\r\n\r\nthis adds a few files to the .gitignore file which we dont require to show","updated_at":"2022-01-29T16:49:08Z","created_at":"2022-01-29T16:49:08Z","creator_user_login":"Biki-das"}
{"number":22982,"comment_id":"1024948760","body":"@Biki-das I know what gitignore does \r\nMy only concern is the repo is working fine with original gitignore syntax \r\nThere's no need to add extra ","updated_at":"2022-01-29T17:06:16Z","created_at":"2022-01-29T17:06:16Z","creator_user_login":"Jassi10000-zz"}
{"number":22981,"comment_id":"997152809","body":"Hi @Jcanno! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Freact%20%2322981). Thanks!","updated_at":"2021-12-18T06:14:59Z","created_at":"2021-12-18T06:14:59Z","creator_user_login":"facebook-github-bot"}
{"number":22981,"comment_id":"997153268","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: ceee524a8f45b97c5fa9861aec3f36161495d2e1...2bac3476635e8bb98260a187fc28f8211c47fa62\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 129.52 kB | 129.52 kB | = | 41.53 kB | 41.53 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.66 kB | 134.66 kB | = | 43.02 kB | 43.02 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 427.76 kB | 427.76 kB | = | 78.53 kB | 78.53 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 417.45 kB | 417.45 kB | = | 77.06 kB | 77.06 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 427.76 kB | 427.76 kB | = | 78.53 kB | 78.53 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 2bac3476635e8bb98260a187fc28f8211c47fa62\n</p>\n","updated_at":"2021-12-18T06:20:35Z","created_at":"2021-12-18T06:20:35Z","creator_user_login":"sizebot"}
{"number":22981,"comment_id":"997153981","body":"hey @Jcanno please accept the CLA AGREEMENT","updated_at":"2021-12-18T06:27:46Z","created_at":"2021-12-18T06:27:46Z","creator_user_login":"Biki-das"}
{"number":22981,"comment_id":"997154482","body":"> https://code.facebook.com/cla\r\n\r\n\r\n\r\n> hey @Jcanno please accept the CLA AGREEMENT\r\n\r\nYeah, I've signed just now","updated_at":"2021-12-18T06:32:27Z","created_at":"2021-12-18T06:32:27Z","creator_user_login":"Jcanno"}
{"number":22981,"comment_id":"997160826","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2021-12-18T07:29:06Z","created_at":"2021-12-18T07:29:06Z","creator_user_login":"facebook-github-bot"}
{"number":22838,"comment_id":"980516560","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 0cc724c777930438d92727803826a44ec97bcc55...2539d850bc76b14f83907445571a2038b5b76509\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 130.01 kB | 130.01 kB | = | 41.57 kB | 41.57 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.77 kB | 134.77 kB | = | 42.97 kB | 42.97 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 424.63 kB | 424.63 kB | = | 78.24 kB | 78.24 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 413.19 kB | 413.19 kB | = | 76.51 kB | 76.51 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 424.63 kB | 424.63 kB | = | 78.25 kB | 78.25 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 2539d850bc76b14f83907445571a2038b5b76509\n</p>\n","updated_at":"2021-11-27T07:18:47Z","created_at":"2021-11-27T07:15:46Z","creator_user_login":"sizebot"}
{"number":22838,"comment_id":"981168216","body":"It looks like tests are failing because in CI it is using webpack version 4. I'll dive deeper into _why_ that is later this week. However, they pass on my machine locally (when I run just the following command; `yarn test packages/react-server-dom-webpack/src/__tests__/ReactFlightWebpackPlugin-test.js  -u`). \r\n\r\n----\r\n\r\nOne (simple?) suggestion to fix that is to upgrade the entire repo to use webpack version 5. I'm not sure how open the maintainers would be for such a PR, but I'd be happy to give it a go. ","updated_at":"2021-11-28T22:55:22Z","created_at":"2021-11-28T22:55:22Z","creator_user_login":"samcooke98"}
{"number":22847,"comment_id":"987115486","body":"@acdlite Is this a Firefox bug or something we should look into?","updated_at":"2021-12-06T19:32:17Z","created_at":"2021-12-06T19:32:17Z","creator_user_login":"lunaruan"}
{"number":22847,"comment_id":"987541080","body":">Link to code example: https://n6lyi.csb.app/\r\n\r\nCan you please link to the sandbox itself rather than to the preview?\r\n","updated_at":"2021-12-07T03:43:52Z","created_at":"2021-12-07T03:43:52Z","creator_user_login":"gaearon"}
{"number":22847,"comment_id":"987890992","body":"https://codesandbox.io/s/n6lyi","updated_at":"2021-12-07T12:42:53Z","created_at":"2021-12-07T12:42:53Z","creator_user_login":"emilevirus"}
{"number":22847,"comment_id":"991394558","body":"This appears to be unrelated to react; firefox resets the iframe content after it receives the `load` event. To fix the posted example, you can trigger the rerender in an `onLoad` callback rather than the ref function.\r\n\r\ne.g. `<iframe onLoad={(e) => setMountPoint(e.target.contentDocument.body)} />`\r\n\r\nIf you want to do more digging, you could check the spec to see if this behavior is in it, then open an issue in either firefox, the other browsers, or the spec depending on if or how it's defined w/in the spec","updated_at":"2021-12-11T00:46:05Z","created_at":"2021-12-11T00:46:05Z","creator_user_login":"Enva2712"}
{"number":19800,"comment_id":"690394616","body":"> showed an increasing memory usage\r\n\r\nThat doesn't indicate a memory leak. Have you tried pressing \"Collect garbage\" button?","updated_at":"2020-09-10T15:55:12Z","created_at":"2020-09-10T15:55:12Z","creator_user_login":"vkurchatkin"}
{"number":19800,"comment_id":"690921333","body":"@vkurchatkin thank you for your answer. I found [this](https://stackoverflow.com/a/63337034) answer on stack overflow. I am new to profiling. Below is the profiling of my website in production. No more increase in listeners. Is the JS-Heap increase expected? The Heap snapshot shows no detached DOM trees.\r\n\r\n<img width=\"1246\" alt=\"image\" src=\"https://user-images.githubusercontent.com/38684618/92879837-aea4a780-f40d-11ea-9759-56f6e6cfb9a0.png\">\r\n","updated_at":"2020-09-11T07:15:53Z","created_at":"2020-09-11T07:15:53Z","creator_user_login":"secretlifeof"}
{"number":19800,"comment_id":"710757795","body":"@secretlifeof Have you tried a different browser? I just ran the profiler on my Ubuntu Chrome build and the JS Heap looks very steady (56 megabytes for 15 seconds, actually dropped to 55 for the next 15 seconds). \r\n\r\n![steady_memory](https://user-images.githubusercontent.com/786471/96329629-d4702e00-1003-11eb-9991-760e5e0fc57b.png)\r\n","updated_at":"2020-10-17T06:03:55Z","created_at":"2020-10-17T06:03:55Z","creator_user_login":"strattonbrazil"}
{"number":19870,"comment_id":"696928590","body":"Update. Have solved my problem with this behaviour by not creating the initial resources in lazy state initiators but instead globally. Which makes more sense and is much cleaner anyways. \r\n\r\nNow the component might still be initiated more often but it always gets the same initialRes.\r\n\r\n```js\r\n// before\r\nfunction Comp() {\r\n  const [res] = useState(() => createRes());\r\n}\r\n// after\r\nconst initialRes = createRes();\r\nfunction Comp() {\r\n  const [res] = useState(initialRes);\r\n}\r\n```\r\n\r\nI don't have a real world use-case at hand where this is not possible so if you find this to be to much of an edge-case feel free to close the issue.","updated_at":"2020-09-22T19:21:25Z","created_at":"2020-09-22T19:20:59Z","creator_user_login":"Xiphe"}
{"number":19870,"comment_id":"697048577","body":"Yeah overall this is definitely the recommendation, but I think it's still worth taking a look in the future at why there's a behavior difference when it resolves fast.","updated_at":"2020-09-23T00:18:24Z","created_at":"2020-09-23T00:18:24Z","creator_user_login":"gaearon"}
{"number":19870,"comment_id":"697321631","body":"Agree, let me know when I can help","updated_at":"2020-09-23T12:09:36Z","created_at":"2020-09-23T12:09:36Z","creator_user_login":"Xiphe"}
{"number":19870,"comment_id":"751246928","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:32Z","created_at":"2020-12-25T13:07:32Z","creator_user_login":"stale[bot]"}
{"number":19870,"comment_id":"753928875","body":"The behaviour has not changed with [`0.0.0-experimental-3310209d0`](https://www.npmjs.com/package/react/v/0.0.0-experimental-3310209d0)\r\n\r\nHere's an updated sandbox: https://codesandbox.io/s/youthful-banach-dl5mq?file=/src/index.js","updated_at":"2021-01-04T11:43:30Z","created_at":"2021-01-04T11:43:30Z","creator_user_login":"Xiphe"}
{"number":19246,"comment_id":"655905354","body":"@bvaughn  can i take this one? ","updated_at":"2020-07-09T05:13:41Z","created_at":"2020-07-09T05:13:41Z","creator_user_login":"mohamedsgap"}
{"number":19246,"comment_id":"656118584","body":"@mohamedsgap Sure!\r\n\r\nIf you change your mind about the issue, no worries! Just let me know so that I can mark it back as unassigned.\r\n\r\nCheers!","updated_at":"2020-07-09T13:12:13Z","created_at":"2020-07-09T13:12:13Z","creator_user_login":"bvaughn"}
{"number":19246,"comment_id":"656124955","body":"Just to check, is this a confirmed bug? Can you reproduce according to my description?","updated_at":"2020-07-09T13:23:48Z","created_at":"2020-07-09T13:23:48Z","creator_user_login":"OliverJAsh"}
{"number":19246,"comment_id":"656125684","body":"Have not had time to try reproing. @mohamedsgap should probably start by doing that though :)","updated_at":"2020-07-09T13:25:09Z","created_at":"2020-07-09T13:25:09Z","creator_user_login":"bvaughn"}
{"number":19246,"comment_id":"662782093","body":"@mohamedsgap Are you still working on this issue by chance? If not, that's okay. I'd just like to know to mark it back as available.","updated_at":"2020-07-23T01:50:24Z","created_at":"2020-07-23T01:50:24Z","creator_user_login":"bvaughn"}
{"number":19246,"comment_id":"662809923","body":"So sorry, @bvaughn I wish I could help, but these days I've my last semester exams so I'm not able to commit a time for open source, I hope to contribute very soon!","updated_at":"2020-07-23T04:13:38Z","created_at":"2020-07-23T04:13:38Z","creator_user_login":"mohamedsgap"}
{"number":19246,"comment_id":"662996183","body":"No worries. Good luck~","updated_at":"2020-07-23T13:07:49Z","created_at":"2020-07-23T13:07:49Z","creator_user_login":"bvaughn"}
{"number":19246,"comment_id":"751254305","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T14:06:50Z","created_at":"2020-12-25T14:06:50Z","creator_user_login":"stale[bot]"}
{"number":19246,"comment_id":"751264648","body":"This is still affecting me.","updated_at":"2020-12-25T15:42:17Z","created_at":"2020-12-25T15:42:17Z","creator_user_login":"OliverJAsh"}
{"number":19377,"comment_id":"658973258","body":"This pull request is automatically built and testable in [CodeSandbox](https://codesandbox.io).\n\n  To see build info of the built libraries, click [here](https://ci.codesandbox.io/status/facebook/react/pr/19377/builds/40171) or the icon next to each commit SHA.\n\nLatest deployment of this branch, based on commit 83b14f1a3fe24774ccd0efed3e6fa05d0f87ad40:\n\n|Sandbox| Source |\n|--|--|\n|[React](https://codesandbox.io/s/react-bl5cn)| Configuration |\n","updated_at":"2020-07-16T22:09:55Z","created_at":"2020-07-15T19:50:47Z","creator_user_login":"codesandbox-ci[bot]"}
{"number":19377,"comment_id":"658975250","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  2 markdown notices\n  DangerID: danger-id-experimental;\n-->\n\n\n\nNo significant bundle size changes to report.\n\n## Size changes (experimental)\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 83b14f1a3fe24774ccd0efed3e6fa05d0f87ad40\n</p>\n","updated_at":"2020-07-16T22:15:36Z","created_at":"2020-07-15T19:54:48Z","creator_user_login":"sizebot"}
{"number":19377,"comment_id":"658975405","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  2 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\nNo significant bundle size changes to report.\n\n## Size changes (stable)\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 83b14f1a3fe24774ccd0efed3e6fa05d0f87ad40\n</p>\n","updated_at":"2020-07-16T22:14:09Z","created_at":"2020-07-15T19:55:05Z","creator_user_login":"sizebot"}
{"number":19377,"comment_id":"659699519","body":"@bvaughn This works but the tests don't actually pass. Some of them are implementation details, though, and I'm not sure how important they are.\r\n\r\nMaybe before landing this, I can set up the `@gate` pragma and we can skip the ones that we don't care about? Could also gate using version number.","updated_at":"2020-07-16T22:03:46Z","created_at":"2020-07-16T22:03:46Z","creator_user_login":"acdlite"}
{"number":19377,"comment_id":"659700085","body":"Or I could land this now and make it so it's not push blocking. I was thinking we'd want to do that anyway so we don't slow down unrelated PRs. We can run it on a cron schedule instead.","updated_at":"2020-07-16T22:05:16Z","created_at":"2020-07-16T22:05:16Z","creator_user_login":"acdlite"}
{"number":19377,"comment_id":"660093773","body":"> Could also gate using version number.\r\n\r\nYeah, gating by version number seems really helpful for this.\r\n\r\n> Or I could land this now and make it so it's not push blocking. I was thinking we'd want to do that anyway so we don't slow down unrelated PRs. We can run it on a cron schedule instead.\r\n\r\nThis also sounds fine.","updated_at":"2020-07-17T13:01:17Z","created_at":"2020-07-17T13:01:17Z","creator_user_login":"bvaughn"}
{"number":19611,"comment_id":"673999467","body":"> click event should not be added\r\n\r\nIs this about nvda announcing elements as clickable even if they aren't actually? I think adding a bit more context why the click listener should not be added would help the maintainers understanding the issue.","updated_at":"2020-08-14T10:06:02Z","created_at":"2020-08-14T10:06:02Z","creator_user_login":"eps1lon"}
{"number":19611,"comment_id":"674041303","body":"FWIW this is intentional to prevent some iOS issue if I remember it right. ","updated_at":"2020-08-14T12:02:50Z","created_at":"2020-08-14T12:02:50Z","creator_user_login":"gaearon"}
{"number":19611,"comment_id":"674163304","body":"https://github.com/facebook/react/pull/11927 seems to be the reason.","updated_at":"2020-08-14T16:45:40Z","created_at":"2020-08-14T16:45:40Z","creator_user_login":"koba04"}
{"number":19611,"comment_id":"674602234","body":"> Is this about nvda announcing elements as clickable even if they aren't actually? I think adding a bit more context why the click listener should not be added would help the maintainers understanding the issue.\r\n\r\nthanks @eps1lon, it is **jaws** not nvda, but I think NVDA would have same behaviour.  \r\nso for example\r\n```\r\ncreatePortal(\r\n    <h1>This is heading</h1>,\r\n    document.getElementById(\"modal\")\r\n  );\r\n```\r\nthis is read as \r\n**this is heading, heading level one, clickable**\r\n\r\nplease advise","updated_at":"2020-08-17T00:41:32Z","created_at":"2020-08-17T00:41:32Z","creator_user_login":"615349"}
{"number":19611,"comment_id":"674707997","body":"I tested it with latest nvda and didn't have any problems. IMO we should report this to the screen readers and ask for guidance on how to avoid the announcement. I understand that they want to patch up unintentionally inaccessible pages but in this case it is intended and **jaws** hurts a11y. \r\n\r\nWe should have a way to tell assistive technology that the click handler is added to leverage event bubbling for event delegation and not to execute user-affecting code directly.","updated_at":"2020-08-17T07:17:09Z","created_at":"2020-08-17T07:17:09Z","creator_user_login":"eps1lon"}
{"number":19611,"comment_id":"964349979","body":"I've just stumbled across this in NVDA version `2020.1` and latest NVDA version `2021.2`. \r\n\r\nhttps://user-images.githubusercontent.com/175330/140970574-4853e879-96d2-4bd7-a521-8db0679da1b3.mp4\r\n\r\nhttps://codesandbox.io/s/xenodochial-bash-pnjwv?file=/src/App.js\r\n\r\n","updated_at":"2021-11-09T17:04:38Z","created_at":"2021-11-09T17:03:49Z","creator_user_login":"jjenzz"}
{"number":18502,"comment_id":"609818660","body":"Interested in looking into a fix?","updated_at":"2020-04-06T14:09:57Z","created_at":"2020-04-06T14:09:57Z","creator_user_login":"gaearon"}
{"number":18502,"comment_id":"609920724","body":"Yeah! Would the fix in this case be to show the mismatch warning or to make onChange work fine for the input initially checked?","updated_at":"2020-04-06T17:08:49Z","created_at":"2020-04-06T17:08:49Z","creator_user_login":"leoasis"}
{"number":18502,"comment_id":"616499876","body":"We should warn about mismatch and do whatever's simplest. (because when you have a mismatch, we don't give any guarantees)","updated_at":"2020-04-20T11:46:21Z","created_at":"2020-04-20T11:46:21Z","creator_user_login":"gaearon"}
{"number":18502,"comment_id":"704668837","body":"👋 \r\nStarted to take a look at this one and have some findings. \r\n\r\n[`shouldIgnoreAttribute`](https://github.com/facebook/react/blob/b93f3e7d2d595444c6ee2964d4cce2e17f4ffa28/packages/react-dom/src/client/ReactDOMComponent.js#L1142) returns `true` for `defaultChecked` because `propertyInfo.type === RESERVED`. So any warning in that code block is skipped.\r\n\r\n```js\r\n...\r\n      } else if (\r\n        !shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) &&\r\n...\r\n```\r\n\r\nAlso `checked` attribute seems to be entirely [skipped](https://github.com/facebook/react/blob/b93f3e7d2d595444c6ee2964d4cce2e17f4ffa28/packages/react-dom/src/client/ReactDOMComponent.js#L1109) over when looking for mismatches.\r\n\r\n```js\r\n...\r\n      } else if (\r\n        propKey === SUPPRESS_CONTENT_EDITABLE_WARNING ||\r\n        propKey === SUPPRESS_HYDRATION_WARNING ||\r\n        // Controlled attributes are not validated\r\n        // TODO: Only ignore them on controlled tags.\r\n        propKey === 'value' ||\r\n        propKey === 'checked' ||\r\n        propKey === 'selected'\r\n      ) {\r\n        // Noop\r\n      } \r\n...\r\n``` \r\n\r\nI would be happy to submit a PR, but would need some guidance on how to proceed. Thanks","updated_at":"2020-10-07T03:24:31Z","created_at":"2020-10-07T03:24:31Z","creator_user_login":"HeroProtagonist"}
{"number":18502,"comment_id":"1082498794","body":"Does this repro with React 18? I tried to re-run the sandbox but HTML is inlined so it's hard to say what exactly was supposed to mismatch. The example as is does error in 18.","updated_at":"2022-03-30T00:35:51Z","created_at":"2022-03-30T00:35:51Z","creator_user_login":"gaearon"}
{"number":19406,"comment_id":"660690967","body":"Hey @isiahmeadows, thanks for filing this issue!\r\n\r\nCan you reduce this to a specific React bug? As is, the complaint seems to be that the code just doesn't work as expected. That can happen for a number of reasons that are not bugs in React, so what's the specific React bug we should investigate?","updated_at":"2020-07-19T18:55:46Z","created_at":"2020-07-19T18:55:46Z","creator_user_login":"rickhanlonii"}
{"number":19406,"comment_id":"660696130","body":"@rickhanlonii The specific issue is that React applies a keyed diff in such a way that it results in the choppy animations. The only functional difference between the React snippet and the vanilla snippet linked in the \"expected behavior\" section is the render function. They're otherwise doing the same exact thing to the DOM, and I've verified this through DOM inspection. I've also narrowed it down to `appendChild` vs `insertBefore`, as referenced in the linked spec bug.\r\n\r\nIt's not a bug in React *itself*, but a browser quirk that React needs to work around.","updated_at":"2020-07-19T19:37:00Z","created_at":"2020-07-19T19:31:52Z","creator_user_login":"dead-claudia"}
{"number":19406,"comment_id":"751260760","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T15:06:24Z","created_at":"2020-12-25T15:06:24Z","creator_user_login":"stale[bot]"}
{"number":19406,"comment_id":"778762133","body":"Bumping to not stale, as I haven't received a response or seen any action taken.","updated_at":"2021-02-14T11:06:50Z","created_at":"2021-02-14T11:06:37Z","creator_user_login":"dead-claudia"}
{"number":18822,"comment_id":"626225215","body":"I'd like to have a go at this if its OK?","updated_at":"2020-05-09T19:35:02Z","created_at":"2020-05-09T19:35:02Z","creator_user_login":"ChrisDobby"}
{"number":18822,"comment_id":"633069536","body":"@sophiebits please review. https://github.com/facebook/react/pull/18939","updated_at":"2020-05-23T14:52:00Z","created_at":"2020-05-23T14:52:00Z","creator_user_login":"ghost"}
{"number":18822,"comment_id":"678684678","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-08-22T19:46:52Z","created_at":"2020-08-22T19:46:52Z","creator_user_login":"stale[bot]"}
{"number":18822,"comment_id":"683334590","body":"Closing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please create a new issue with up-to-date information. Thank you!\n","updated_at":"2020-08-29T19:48:20Z","created_at":"2020-08-29T19:48:20Z","creator_user_login":"stale[bot]"}
{"number":18822,"comment_id":"751247002","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:58Z","created_at":"2020-12-25T13:07:58Z","creator_user_login":"stale[bot]"}
{"number":18822,"comment_id":"781496269","body":"I see the PR is almost done! Would love to see this feature. I came here searching to see if this feature existed. I appreciate the work everyone has put in on this so far.","updated_at":"2021-02-18T17:09:22Z","created_at":"2021-02-18T17:09:22Z","creator_user_login":"locofocos"}
{"number":26529,"comment_id":"1492022822","body":"Hi @sherphy! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326529). Thanks!","updated_at":"2023-03-31T14:35:40Z","created_at":"2023-03-31T14:35:40Z","creator_user_login":"facebook-github-bot"}
{"number":26529,"comment_id":"1492082524","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-31T15:07:47Z","created_at":"2023-03-31T15:07:47Z","creator_user_login":"facebook-github-bot"}
{"number":26537,"comment_id":"1499129708","body":"I've temporarily patched `shouldTimeSlice = false` in the react source code, this fixes it (but also takes away most of the concurrent features I assume).\r\n\r\nIf you want to do this, you probably also have to patch the minified production build, which is a bit harder to do.","updated_at":"2023-04-07T18:45:29Z","created_at":"2023-04-06T14:11:51Z","creator_user_login":"hansottowirtz"}
{"number":26537,"comment_id":"1500613625","body":"It seems like the fiber also doesn't get found sometimes when doing `renderRootSync` and `updateForwardRef`, so it's not a `renderRootConcurrent`-specific problem.","updated_at":"2023-04-07T20:23:43Z","created_at":"2023-04-07T20:23:43Z","creator_user_login":"hansottowirtz"}
{"number":26608,"comment_id":"1692002239","body":"I'm seeing the same issue during some experiments with Mocha testing. The suggested fix works for me. I will produce a minimal repro if that's considered desirable.\r\n\r\n@victor-homyakov Are you aware of any kind of workaround for this?","updated_at":"2023-08-24T16:15:26Z","created_at":"2023-08-24T16:15:26Z","creator_user_login":"s100"}
{"number":26662,"comment_id":"1532776032","body":"I Understand What your are Say.\r\nCan I Try To Fix It. I Just Debug The Code First Then Try Send Some Request .\r\n\r\nIf I Am Not Wrong This Bug Is In **Browser Extension** it mean in this package **react-devtools-extensions** ","updated_at":"2023-05-03T10:16:24Z","created_at":"2023-05-03T10:16:24Z","creator_user_login":"Rbcoder1"}
{"number":26662,"comment_id":"1549992400","body":"Sorry, we don't know what Marketo is, and we can't help without a reproducing case.","updated_at":"2023-05-16T16:25:51Z","created_at":"2023-05-16T16:25:51Z","creator_user_login":"gaearon"}
{"number":26581,"comment_id":"1501622519","body":"I think maybe creating a new API in ReactDOM that allows users to reset the warning flags for a specific root would be a nice approach. This would ensure that each root maintains its own set of warnings and prevent the console from being flooded with warnings.","updated_at":"2023-04-10T09:53:46Z","created_at":"2023-04-10T09:53:46Z","creator_user_login":"Sanskar-tyagi"}
{"number":26701,"comment_id":"1518561696","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: a21d1475ffd7225a463f2d0c0c9b732c8dd795eb...9ab55c8a3473a945a8f09dd9fbad2ccb3e2ba859\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/9ab55c8a3473a945a8f09dd9fbad2ccb3e2ba859/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=a21d1475ffd7225a463f2d0c0c9b732c8dd795eb) | **=** | 163.95 kB | 163.95 kB | = | 51.68 kB | 51.68 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/9ab55c8a3473a945a8f09dd9fbad2ccb3e2ba859/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=a21d1475ffd7225a463f2d0c0c9b732c8dd795eb) | **=** | 168.29 kB | 168.29 kB | = | 52.94 kB | 52.94 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/9ab55c8a3473a945a8f09dd9fbad2ccb3e2ba859/files/facebook-www/ReactDOM-prod.classic.js?compare=a21d1475ffd7225a463f2d0c0c9b732c8dd795eb) | **=** | 568.30 kB | 568.30 kB | = | 100.65 kB | 100.65 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/9ab55c8a3473a945a8f09dd9fbad2ccb3e2ba859/files/facebook-www/ReactDOM-prod.modern.js?compare=a21d1475ffd7225a463f2d0c0c9b732c8dd795eb) | **=** | 552.03 kB | 552.03 kB | = | 97.99 kB | 97.99 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 9ab55c8a3473a945a8f09dd9fbad2ccb3e2ba859\n</p>\n","updated_at":"2023-04-22T08:35:31Z","created_at":"2023-04-22T08:35:31Z","creator_user_login":"react-sizebot"}
{"number":26763,"comment_id":"1532113621","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fa4314841e7fdeef6e6bc5a7722fe74dc8e9fd89...e44bd8db0682ab1de31193fcbe7e1bcfacdafebc\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e44bd8db0682ab1de31193fcbe7e1bcfacdafebc/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fa4314841e7fdeef6e6bc5a7722fe74dc8e9fd89) | **=** | 164.18 kB | 164.16 kB | = | 51.78 kB | 51.75 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e44bd8db0682ab1de31193fcbe7e1bcfacdafebc/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fa4314841e7fdeef6e6bc5a7722fe74dc8e9fd89) | **=** | 171.57 kB | 171.55 kB | = | 53.99 kB | 53.96 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/e44bd8db0682ab1de31193fcbe7e1bcfacdafebc/files/facebook-www/ReactDOM-prod.classic.js?compare=fa4314841e7fdeef6e6bc5a7722fe74dc8e9fd89) | **+0.11%** | 570.19 kB | 570.83 kB | +0.01% | 100.62 kB | 100.63 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/e44bd8db0682ab1de31193fcbe7e1bcfacdafebc/files/facebook-www/ReactDOM-prod.modern.js?compare=fa4314841e7fdeef6e6bc5a7722fe74dc8e9fd89) | **+0.11%** | 553.93 kB | 554.57 kB | = | 97.80 kB | 97.80 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against e44bd8db0682ab1de31193fcbe7e1bcfacdafebc\n</p>\n","updated_at":"2023-05-02T20:34:57Z","created_at":"2023-05-02T20:34:57Z","creator_user_login":"react-sizebot"}
{"number":26822,"comment_id":"1552770421","body":"+1 🤪","updated_at":"2023-05-18T09:14:16Z","created_at":"2023-05-18T09:14:16Z","creator_user_login":"legendkong"}
{"number":26813,"comment_id":"1546876927","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 4cd7065665ea2cf33c306265c8d817904bb401ca...5602c7482681b85efc76f681c81848da61130449\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5602c7482681b85efc76f681c81848da61130449/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=4cd7065665ea2cf33c306265c8d817904bb401ca) | **=** | 164.25 kB | 164.25 kB | = | 51.77 kB | 51.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5602c7482681b85efc76f681c81848da61130449/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=4cd7065665ea2cf33c306265c8d817904bb401ca) | **=** | 171.61 kB | 171.61 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/5602c7482681b85efc76f681c81848da61130449/files/facebook-www/ReactDOM-prod.classic.js?compare=4cd7065665ea2cf33c306265c8d817904bb401ca) | **=** | 570.46 kB | 570.46 kB | = | 100.64 kB | 100.64 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/5602c7482681b85efc76f681c81848da61130449/files/facebook-www/ReactDOM-prod.modern.js?compare=4cd7065665ea2cf33c306265c8d817904bb401ca) | **=** | 554.20 kB | 554.20 kB | = | 97.83 kB | 97.83 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 5602c7482681b85efc76f681c81848da61130449\n</p>\n","updated_at":"2023-05-14T11:26:41Z","created_at":"2023-05-14T11:26:41Z","creator_user_login":"react-sizebot"}
{"number":26971,"comment_id":"1596148554","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 613e6f5fca3a7a63d115988d6312beb84d37b4db...9710cf407c6f116d983b0744dda4a1af814f4e76\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/9710cf407c6f116d983b0744dda4a1af814f4e76/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 164.56 kB | 164.56 kB | = | 51.83 kB | 51.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/9710cf407c6f116d983b0744dda4a1af814f4e76/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 172.00 kB | 172.00 kB | = | 54.07 kB | 54.07 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/9710cf407c6f116d983b0744dda4a1af814f4e76/files/facebook-www/ReactDOM-prod.classic.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 571.13 kB | 571.13 kB | = | 100.75 kB | 100.75 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/9710cf407c6f116d983b0744dda4a1af814f4e76/files/facebook-www/ReactDOM-prod.modern.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 554.91 kB | 554.91 kB | = | 97.93 kB | 97.93 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 9710cf407c6f116d983b0744dda4a1af814f4e76\n</p>\n","updated_at":"2023-06-18T13:29:12Z","created_at":"2023-06-18T13:29:12Z","creator_user_login":"react-sizebot"}
{"number":27005,"comment_id":"1613267551","body":"Thanks for reporting this! I am not sure this is directly related to `react-devtools-inline`.\r\n\r\nFrom what I see, this error occurs when we try to import `json5` [here](https://github.com/facebook/react/blob/main/packages/react-devtools-shared/src/devtools/utils.js#L10).\r\n\r\nAnyone interested in digging more into this? This might require some changes to webpack or maybe there is a problem on `json5` side, I am not sure.","updated_at":"2023-06-29T14:19:48Z","created_at":"2023-06-29T14:19:48Z","creator_user_login":"hoxyq"}
{"number":26982,"comment_id":"1598802454","body":"[https://github.com/mk87yhhuji/GodJobForReact-Vercel](https://github.com/mk87yhhuji/GodJobForReact-Vercel)","updated_at":"2023-06-20T13:33:36Z","created_at":"2023-06-20T13:33:36Z","creator_user_login":"mk87yhhuji"}
{"number":26982,"comment_id":"1608845009","body":"This looks like spam, and potentially a government psyop.","updated_at":"2023-06-27T05:58:49Z","created_at":"2023-06-27T05:57:40Z","creator_user_login":"nickmccurdy"}
{"number":26982,"comment_id":"1630108230","body":"This is spam","updated_at":"2023-07-11T04:44:53Z","created_at":"2023-07-11T04:44:53Z","creator_user_login":"niteenbalpande"}
{"number":26885,"comment_id":"1573762910","body":"Hi. What is the error in your console?","updated_at":"2023-06-02T13:44:10Z","created_at":"2023-06-02T13:44:10Z","creator_user_login":"scffs"}
{"number":26885,"comment_id":"1605688872","body":"You  can try by going to root directory of your project through the command prompt \r\nOnce reached to the directory of your project \r\nwrite the following command :\r\nnpm list react --pattern \"hook\"\r\nit should get a list of packages that include \"hook\" in their names, helping you identify the React hooks","updated_at":"2023-06-24T19:03:34Z","created_at":"2023-06-24T19:03:34Z","creator_user_login":"Hemant2216"}
{"number":26885,"comment_id":"1605690044","body":"@scffs none","updated_at":"2023-06-24T19:08:22Z","created_at":"2023-06-24T19:08:22Z","creator_user_login":"edinsondevs"}
{"number":26885,"comment_id":"1605698937","body":"Then you can try updating your webpack devtool \r\nor switching your webpack devtool to :  cheap-module-source-map","updated_at":"2023-06-24T19:22:56Z","created_at":"2023-06-24T19:22:56Z","creator_user_login":"Hemant2216"}
{"number":26984,"comment_id":"1599483407","body":"Hi @joshuagornall! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326984). Thanks!","updated_at":"2023-06-20T20:57:35Z","created_at":"2023-06-20T20:57:35Z","creator_user_login":"facebook-github-bot"}
{"number":27055,"comment_id":"1621609031","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 035a41c4e2aadad8f8826396940af404e87dd772...127411b7bcd704ce5e72d2b96a5c391901860a72\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/127411b7bcd704ce5e72d2b96a5c391901860a72/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=035a41c4e2aadad8f8826396940af404e87dd772) | **=** | 164.35 kB | 164.35 kB | = | 51.76 kB | 51.76 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/127411b7bcd704ce5e72d2b96a5c391901860a72/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=035a41c4e2aadad8f8826396940af404e87dd772) | **=** | 171.76 kB | 171.76 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/127411b7bcd704ce5e72d2b96a5c391901860a72/files/facebook-www/ReactDOM-prod.classic.js?compare=035a41c4e2aadad8f8826396940af404e87dd772) | **=** | 567.22 kB | 567.22 kB | = | 100.04 kB | 100.04 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/127411b7bcd704ce5e72d2b96a5c391901860a72/files/facebook-www/ReactDOM-prod.modern.js?compare=035a41c4e2aadad8f8826396940af404e87dd772) | **=** | 551.02 kB | 551.02 kB | = | 97.21 kB | 97.21 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 127411b7bcd704ce5e72d2b96a5c391901860a72\n</p>\n","updated_at":"2023-07-05T11:54:28Z","created_at":"2023-07-05T11:54:28Z","creator_user_login":"react-sizebot"}
{"number":26996,"comment_id":"1604064154","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 5945e068abf1da4aec24aba2839abfbb0fe94a3d...5e0aeba20c0b645cc0fd7874f17f1586cf1ea5d8\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5e0aeba20c0b645cc0fd7874f17f1586cf1ea5d8/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=5945e068abf1da4aec24aba2839abfbb0fe94a3d) | **=** | 164.32 kB | 164.32 kB | = | 51.75 kB | 51.75 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5e0aeba20c0b645cc0fd7874f17f1586cf1ea5d8/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=5945e068abf1da4aec24aba2839abfbb0fe94a3d) | **=** | 171.73 kB | 171.73 kB | = | 53.97 kB | 53.96 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/5e0aeba20c0b645cc0fd7874f17f1586cf1ea5d8/files/facebook-www/ReactDOM-prod.classic.js?compare=5945e068abf1da4aec24aba2839abfbb0fe94a3d) | **=** | 568.20 kB | 568.20 kB | = | 100.14 kB | 100.14 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/5e0aeba20c0b645cc0fd7874f17f1586cf1ea5d8/files/facebook-www/ReactDOM-prod.modern.js?compare=5945e068abf1da4aec24aba2839abfbb0fe94a3d) | **=** | 552.00 kB | 552.00 kB | = | 97.29 kB | 97.29 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 5e0aeba20c0b645cc0fd7874f17f1586cf1ea5d8\n</p>\n","updated_at":"2023-06-28T18:36:52Z","created_at":"2023-06-23T10:20:59Z","creator_user_login":"react-sizebot"}
{"number":26679,"comment_id":"1515604089","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 22d5942675fcbd8b15b532284b49db4cb00d7144...0ddfb0b57229c4fb6d560ea1bed657bd1ffbf097\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0ddfb0b57229c4fb6d560ea1bed657bd1ffbf097/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=22d5942675fcbd8b15b532284b49db4cb00d7144) | **=** | 164.67 kB | 164.67 kB | = | 51.81 kB | 51.81 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0ddfb0b57229c4fb6d560ea1bed657bd1ffbf097/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=22d5942675fcbd8b15b532284b49db4cb00d7144) | **=** | 168.43 kB | 168.43 kB | = | 52.93 kB | 52.93 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/0ddfb0b57229c4fb6d560ea1bed657bd1ffbf097/files/facebook-www/ReactDOM-prod.classic.js?compare=22d5942675fcbd8b15b532284b49db4cb00d7144) | **=** | 568.32 kB | 568.32 kB | = | 100.61 kB | 100.61 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/0ddfb0b57229c4fb6d560ea1bed657bd1ffbf097/files/facebook-www/ReactDOM-prod.modern.js?compare=22d5942675fcbd8b15b532284b49db4cb00d7144) | **=** | 552.05 kB | 552.05 kB | = | 97.91 kB | 97.91 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 0ddfb0b57229c4fb6d560ea1bed657bd1ffbf097\n</p>\n","updated_at":"2023-04-20T01:56:38Z","created_at":"2023-04-20T01:56:38Z","creator_user_login":"react-sizebot"}
{"number":26631,"comment_id":"1509470002","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 7b0642bb989ec659c6c9891ea16daa0420caab4d...0664786afb8bd81fc357ebe97f5d6164ecad8334\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0664786afb8bd81fc357ebe97f5d6164ecad8334/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=7b0642bb989ec659c6c9891ea16daa0420caab4d) | **=** | 164.35 kB | 164.34 kB | = | 51.65 kB | 51.64 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0664786afb8bd81fc357ebe97f5d6164ecad8334/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=7b0642bb989ec659c6c9891ea16daa0420caab4d) | **=** | 166.79 kB | 166.78 kB | = | 52.31 kB | 52.31 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/0664786afb8bd81fc357ebe97f5d6164ecad8334/files/facebook-www/ReactDOM-prod.classic.js?compare=7b0642bb989ec659c6c9891ea16daa0420caab4d) | **=** | 564.28 kB | 564.27 kB | = | 99.34 kB | 99.33 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/0664786afb8bd81fc357ebe97f5d6164ecad8334/files/facebook-www/ReactDOM-prod.modern.js?compare=7b0642bb989ec659c6c9891ea16daa0420caab4d) | **=** | 548.07 kB | 548.06 kB | = | 96.64 kB | 96.64 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 0664786afb8bd81fc357ebe97f5d6164ecad8334\n</p>\n","updated_at":"2023-04-15T02:16:53Z","created_at":"2023-04-15T02:16:53Z","creator_user_login":"react-sizebot"}
{"number":26898,"comment_id":"1575645923","body":"Hi @trunglc378! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326898). Thanks!","updated_at":"2023-06-04T17:20:23Z","created_at":"2023-06-04T17:20:23Z","creator_user_login":"facebook-github-bot"}
{"number":26099,"comment_id":"1416678557","body":"the user-defined error will get exchanged with a perenties problem will check.","updated_at":"2023-02-04T06:39:17Z","created_at":"2023-02-04T06:39:17Z","creator_user_login":"coderstar1234"}
{"number":26099,"comment_id":"1429040881","body":"> https://github.com/facebook/react/blob/2ef24145e4628fda9d8883cd573553b82a2e0a81/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js#L1751\n> \n> In order to have custom Hook like useImperativeHandle>\n> getReactiveHookCallbackIndex need to return 1, \n> but \n> https://github.com/facebook/react/blob/2ef24145e4628fda9d8883cd573553b82a2e0a81/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js#L1766\n> Can only return 0 or -1.\n> \n> Can we add a config as a Javascript object \n> ( { `useMemoDispatch`: 1 })\n> or \n> {\n>   1: \"(useMemoDispatch|myCustomHook)\",\n> }\n\nSome changes in a code contact me.\n","updated_at":"2023-02-14T03:02:13Z","created_at":"2023-02-14T03:02:13Z","creator_user_login":"coderstar1234"}
{"number":26099,"comment_id":"1516825867","body":"There is at least a MR open which includes the changes: https://github.com/facebook/react/pull/24344\r\nBut it's open since a year, so I don't think it will be merged soon, which is a shame. It's a change I really want to see","updated_at":"2023-04-20T19:19:26Z","created_at":"2023-04-20T19:18:29Z","creator_user_login":"Ainias"}
{"number":26162,"comment_id":"1428976251","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 9d111ffdfbcfee4b348a3d49c16f02cb718c896f...d2737de6ef1bf334754b379f35f410fec6fd634a\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d2737de6ef1bf334754b379f35f410fec6fd634a/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=9d111ffdfbcfee4b348a3d49c16f02cb718c896f) | **=** | 154.84 kB | 154.84 kB | = | 49.12 kB | 49.12 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d2737de6ef1bf334754b379f35f410fec6fd634a/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=9d111ffdfbcfee4b348a3d49c16f02cb718c896f) | **=** | 156.85 kB | 156.85 kB | = | 49.78 kB | 49.78 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/d2737de6ef1bf334754b379f35f410fec6fd634a/files/facebook-www/ReactDOM-prod.classic.js?compare=9d111ffdfbcfee4b348a3d49c16f02cb718c896f) | **=** | 533.79 kB | 533.79 kB | = | 95.06 kB | 95.06 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/d2737de6ef1bf334754b379f35f410fec6fd634a/files/facebook-www/ReactDOM-prod.modern.js?compare=9d111ffdfbcfee4b348a3d49c16f02cb718c896f) | **=** | 518.81 kB | 518.81 kB | = | 92.82 kB | 92.82 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against d2737de6ef1bf334754b379f35f410fec6fd634a\n</p>\n","updated_at":"2023-02-14T01:36:16Z","created_at":"2023-02-14T01:36:16Z","creator_user_login":"react-sizebot"}
{"number":26135,"comment_id":"1424588019","body":"Going to continue investigating, but I found a potential mismatch between server and client.\r\n\r\n[Server Side](https://github.com/facebook/react/blob/main/packages/react-dom-bindings/src/server/ReactDOMServerFormatConfig.js#L516) checks the standard 3 for an empty value - null, boolean, empty string.\r\n[Client Side](https://github.com/facebook/react/blob/main/packages/react-dom-bindings/src/client/CSSPropertyOperations.js#L33) may only check for null.  Since this function is commented as attempting to replicate the server string, the fix may be to check for all 3 cases here.","updated_at":"2023-02-09T17:52:39Z","created_at":"2023-02-09T17:52:23Z","creator_user_login":"edkimmel"}
{"number":26028,"comment_id":"1398804314","body":"what you are missing out is that while you can't access the nonce from `element.getAttribute(\"nonce\")`\r\nyou cann access it from inside the script by calling `script.nonce`\r\n\r\nthe browser doesn't clear it, but just prevents reading it from outside of the script itself\r\n\r\nwhile I agree that if there was no nonce from the server, we shouldn't have to pass an empty string\r\n\r\nP.S read the discord chat ","updated_at":"2023-01-20T18:58:08Z","created_at":"2023-01-20T18:54:31Z","creator_user_login":"YounessFkhach"}
{"number":26028,"comment_id":"1398810629","body":"Even if you *can* access the `nonce` from the JS code, you shouldn't render the actual `nonce` value anywhere in the DOM because as soon as you do it is going to open you up to XSS vulnerabilities.","updated_at":"2023-01-20T19:01:29Z","created_at":"2023-01-20T19:01:29Z","creator_user_login":"kentcdodds"}
{"number":26028,"comment_id":"1444836393","body":"Related spec discussion:\r\n* https://github.com/whatwg/html/pull/2373","updated_at":"2023-02-25T00:59:02Z","created_at":"2023-02-25T00:59:02Z","creator_user_login":"sophiebits"}
{"number":26052,"comment_id":"1551943547","body":"@kamranayub \r\n\r\nTo fix this issue, you will need to listen for the key down, check if the key crtl and f are pressed, and then run the focus on the search input. \r\n\r\nI am new to opensource contributing and would love to fix the issue myself but I am a little lost in the project to find the error.  ","updated_at":"2023-05-17T19:34:02Z","created_at":"2023-05-17T19:32:25Z","creator_user_login":"msawlani"}
{"number":26712,"comment_id":"1522492899","body":"follow this link to the repository which demonstrate this behaviour difference: https://github.com/websummernow/ReactBehaviours","updated_at":"2023-04-25T22:18:58Z","created_at":"2023-04-25T22:18:58Z","creator_user_login":"websummernow"}
{"number":26712,"comment_id":"1528677290","body":"can this issue be assigned to me i would like to work on it ?","updated_at":"2023-04-29T06:00:13Z","created_at":"2023-04-29T06:00:13Z","creator_user_login":"SamarthBagga"}
{"number":26747,"comment_id":"1569376501","body":"This should be closed.","updated_at":"2023-05-31T01:58:11Z","created_at":"2023-05-31T01:58:11Z","creator_user_login":"alvgaona"}
{"number":26736,"comment_id":"1550026550","body":"You haven't provided enough details — I can't reproduce the issue and don't know what reproducing it is supposed to look like, which browsers you're using, etc.","updated_at":"2023-05-16T16:49:43Z","created_at":"2023-05-16T16:49:43Z","creator_user_login":"gaearon"}
{"number":26736,"comment_id":"1554202468","body":"> You haven't provided enough details — I can't reproduce the issue and don't know what reproducing it is supposed to look like, which browsers you're using, etc.\r\n\r\nPlease modify the index. js file in the sample code and change the content to the following code. Drag the right scroll axis to observe the difference in the effect between the two codes.\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\nReactDOM.render(<App />, document.getElementById ('root'));","updated_at":"2023-05-19T08:06:39Z","created_at":"2023-05-19T08:06:39Z","creator_user_login":"shijunfeng"}
{"number":26736,"comment_id":"1554207432","body":"> You haven't provided enough details — I can't reproduce the issue and don't know what reproducing it is supposed to look like, which browsers you're using, etc.\r\n\r\n![image](https://github.com/facebook/react/assets/17823594/08bd8d01-2e83-4a09-95e6-87ccda9818dc)\r\n\r\nChanging to this writing method in the index. js file will prevent flashing white space","updated_at":"2023-05-19T08:10:49Z","created_at":"2023-05-19T08:10:49Z","creator_user_login":"shijunfeng"}
{"number":26750,"comment_id":"1540716966","body":"Could you try upgrading to the latest canary to see if the issue still exists?\r\n\r\n```\r\n\"react\": \"18.3.0-canary-fda1f0b90-20230509\",\r\n\"react-dom\": \"18.3.0-canary-fda1f0b90-20230509\",\r\n```","updated_at":"2023-05-09T18:50:15Z","created_at":"2023-05-09T18:50:15Z","creator_user_login":"acdlite"}
{"number":26750,"comment_id":"1542129906","body":"I tried upgrading to the `18.3.0-canary-fda1f0b90-20230509` version, but the issue still exists.","updated_at":"2023-05-10T12:33:14Z","created_at":"2023-05-10T12:33:14Z","creator_user_login":"ony3000"}
{"number":26186,"comment_id":"1434278971","body":"How do you use hooks inside promises? Hooks should only be called in the body of components","updated_at":"2023-02-17T08:14:43Z","created_at":"2023-02-17T08:14:43Z","creator_user_login":"DiFuks"}
{"number":26186,"comment_id":"1435351202","body":"@DiFuks  that is right, but I was not aware of it when I code it.  And I think `eslint-plugin-react-hooks` should have caught the error. Can you update the code for `eslint-plugin-react-hooks` to make sure the bug won't fall through the crack?\r\n\r\nTo be specific, the hook I was trying to access inside of promise is `useRelayEnvironment`, which is about injecting the relay environment to handle the GraphQL query/mutation. Because Eslint did not capture this issue, I merged the bug into production until users complained...","updated_at":"2023-02-17T22:31:20Z","created_at":"2023-02-17T22:31:20Z","creator_user_login":"yuhenghenrycai"}
{"number":26186,"comment_id":"1436648446","body":"This is described in the documentation and any tutorials. I'm not the maintainer of react, but it seems to me that the plugin should not check such things.","updated_at":"2023-02-20T09:47:08Z","created_at":"2023-02-20T09:47:08Z","creator_user_login":"DiFuks"}
{"number":26218,"comment_id":"1532710430","body":"Hi there, You can't use hooks directly in a callback function in functional components . You can add  a reference to it and then it will work fine . Suppose you are using useNavigate hook to navigate between pages , you can't just use it directly like this \r\n\r\n![Screenshot (41)](https://user-images.githubusercontent.com/123387232/235879033-7d2b75e0-f032-4a90-a34e-1228c5141992.png)\r\n\r\nbut you can use it in \r\n![Screenshot (42)](https://user-images.githubusercontent.com/123387232/235879514-a9c47679-0f26-47dd-82e8-dedeec2ced8e.png)\r\nthis way\r\n\r\n\r\n","updated_at":"2023-05-03T09:25:57Z","created_at":"2023-05-03T09:25:57Z","creator_user_login":"Ankitupadhyay056"}
{"number":26229,"comment_id":"1537225331","body":"I don't think this is a bug and also not really related to React. See: [Why is my function being called twice in React?](https://stackoverflow.com/questions/50819162/why-is-my-function-being-called-twice-in-react)\r\n\r\nIf you truly think there is a bug, please show a reproducible example.","updated_at":"2023-05-06T21:22:51Z","created_at":"2023-05-06T21:20:19Z","creator_user_login":"tony1658"}
{"number":26227,"comment_id":"1443621308","body":"I found that the feature of automatic batched updates for set state inside callback in React 18 is causing set state to not work on mobile browsers. Either we have to wrap the set state with `flushsync`, or we have to change `createRoot` to `ReactDOM.render`. Since we have a lot of instances and dependencies where set state is done inside callback we chose to go with the later.\r\n\r\n**Note:** This issue only happens on mobile browsers. If anybody has a better method to handle this please do let me know. The method I followed is a bit of a performance downgrade.","updated_at":"2023-02-24T12:32:52Z","created_at":"2023-02-24T12:31:08Z","creator_user_login":"rashinp"}
{"number":25273,"comment_id":"1250159291","body":"Hey @amirqasemi74! I think the problem is that every fetch takes differents times so the logs are differents, if you try to make a promise and get the same data as the Apollo fetch, you will have your expected behavior. Anyways you can use a setTimeout if one promise takes more time than other.\r\nHere is an example:\r\n\r\n```\r\n  const run_1 = async () => {\r\n    setA(\"aa\");\r\n    await Promise.resolve().then(() => {\r\n      setTimeout(() => {\r\n        console.log(\"here\");\r\n        setB(\"bb\");\r\n      }, 50);\r\n    });\r\n  };\r\n```\r\nI hope I've helped you 😊\r\n\r\n","updated_at":"2022-09-18T00:08:30Z","created_at":"2022-09-18T00:08:30Z","creator_user_login":"LuBustos"}
{"number":25874,"comment_id":"1379571183","body":"If it's only present on development mode, I'm not able to reproduce this issue easily -- the link you out there is a prod website. Is it possible to create a repro on something I can see such as codesandbox?","updated_at":"2023-01-11T22:34:01Z","created_at":"2023-01-11T22:34:01Z","creator_user_login":"mondaychen"}
{"number":25547,"comment_id":"1303286576","body":"It's hard-coded as  `true` here but not in the mock fork. It looks like that the compiled output has this hard-coded value removed anyway (hence no bundle size impact) so maybe this should be kept to not diverge forks needlessly?","updated_at":"2022-11-04T11:20:15Z","created_at":"2022-11-04T11:20:15Z","creator_user_login":"eps1lon"}
{"number":25544,"comment_id":"1288151314","body":"The current workaround does look elegant to me. I don't think it's worth the time to implement your suggestion; when a simple workaround exists (and isn't too trivial). : )","updated_at":"2022-10-23T16:40:55Z","created_at":"2022-10-23T16:40:55Z","creator_user_login":"sahithyandev"}
{"number":25563,"comment_id":"1296269931","body":"a good solution to splitting UI and business logic, see: https://github.com/hawx1993/hooks-view-model","updated_at":"2022-10-31T08:43:01Z","created_at":"2022-10-30T14:12:44Z","creator_user_login":"hawx1993"}
{"number":25563,"comment_id":"1422210920","body":"Instead of writing `loading.promise = null` if you just reset the state to its initial value\r\nlike `setLoading(() => {return {promise:null})` then it doesn't go into an infinite loop and I think that this is the correct way to change a state in react","updated_at":"2023-02-08T10:28:32Z","created_at":"2023-02-08T08:24:02Z","creator_user_login":"adityachache"}
{"number":25553,"comment_id":"1296270075","body":"If you want to use  bidirectional data binding, see my solution  here: https://github.com/hawx1993/hooks-view-model","updated_at":"2022-10-30T14:13:23Z","created_at":"2022-10-30T14:13:23Z","creator_user_login":"hawx1993"}
{"number":15039,"comment_id":"470205967","body":"`contextType` isn't legacy; `contextTypes` is.","updated_at":"2019-03-06T17:46:48Z","created_at":"2019-03-06T17:46:48Z","creator_user_login":"gaearon"}
{"number":15039,"comment_id":"470208289","body":"Agh bad typo. Thanks~","updated_at":"2019-03-06T17:53:10Z","created_at":"2019-03-06T17:53:10Z","creator_user_login":"bvaughn"}
{"number":15039,"comment_id":"686217444","body":"hi, is there any update with this pull request?","updated_at":"2020-09-03T02:51:40Z","created_at":"2020-09-03T02:51:40Z","creator_user_login":"toy9986619"}
{"number":18434,"comment_id":"607538289","body":"Can you turn this into a failing test in the test suite?","updated_at":"2020-04-01T23:26:00Z","created_at":"2020-04-01T23:26:00Z","creator_user_login":"gaearon"}
{"number":18434,"comment_id":"609943093","body":"@gaearon I tried to make a test case that fails but the same scenario test cases are passing when I Flush and yield is called. \r\n\r\nBut in the codesandbox\r\nhttps://codesandbox.io/s/bug-suspenselist-revealordertogether-and-error-boundaries-18429-1oky8\r\n\r\nyou can clearly see Even if **trivia** is fetched and logged in console it doesn't render\r\n\r\n<img width=\"798\" alt=\"Screenshot 2020-04-06 at 11 19 27 PM\" src=\"https://user-images.githubusercontent.com/8556085/78589093-48639980-785d-11ea-9ea3-b98384e55c95.png\">\r\n","updated_at":"2020-04-06T17:51:36Z","created_at":"2020-04-06T17:51:36Z","creator_user_login":"velusgautam"}
{"number":13413,"comment_id":"538167165","body":"@sebmarkbage is there any plan around making refs act as normal props? I don't know all the internals of React but I would imagine it would make refs in react significantly simpler if a ref just acted as a prop.\r\n\r\nI imagine an API where if you want a ref, you just do a React.createRef or React.useRef and pass it through to the component vs having to forward the ref.\r\n\r\nIs there some internal usage of the ref prop and thats why it's special?","updated_at":"2019-10-03T23:27:48Z","created_at":"2019-10-03T23:27:23Z","creator_user_login":"lifeiscontent"}
{"number":13413,"comment_id":"538183429","body":"@lifeiscontent Yes, we're working on this proposal: https://github.com/reactjs/rfcs/pull/107","updated_at":"2019-10-04T00:46:33Z","created_at":"2019-10-04T00:46:33Z","creator_user_login":"sebmarkbage"}
{"number":13413,"comment_id":"538220429","body":"@sebmarkbage beautiful. Thank you for the amazing work!","updated_at":"2019-10-04T04:01:03Z","created_at":"2019-10-04T04:01:03Z","creator_user_login":"lifeiscontent"}
{"number":27307,"comment_id":"1698235420","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: ddff504695f33c19e8c0792bff82bd8f8b8f7c05...a4e47bffaf731932dc2f21f85cf2365bbca63213\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **=** | 165.63 kB | 165.63 kB | = | 51.88 kB | 51.88 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.07%** | 174.70 kB | 174.82 kB | +0.09% | 54.61 kB | 54.66 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/facebook-www/ReactDOM-prod.classic.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **=** | 570.44 kB | 570.44 kB | = | 100.45 kB | 100.45 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/facebook-www/ReactDOM-prod.modern.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **=** | 554.21 kB | 554.21 kB | = | 97.61 kB | 97.61 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-server/cjs/react-server.development.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.82%** | 154.42 kB | 155.69 kB | +1.04% | 38.71 kB | 39.11 kB\n| [oss-experimental/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-server/cjs/react-server.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.79%** | 26.36 kB | 26.57 kB | +0.85% | 8.96 kB | 9.04 kB\n| [oss-stable-semver/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-stable-semver/react-server/cjs/react-server.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.71%** | 25.52 kB | 25.70 kB | +0.68% | 8.67 kB | 8.73 kB\n| [oss-stable/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-stable/react-server/cjs/react-server.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.71%** | 25.52 kB | 25.70 kB | +0.68% | 8.67 kB | 8.73 kB\n| [oss-stable-semver/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-stable-semver/react-server/cjs/react-server.development.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.46%** | 148.43 kB | 149.12 kB | +0.55% | 36.97 kB | 37.18 kB\n| [oss-stable/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-stable/react-server/cjs/react-server.development.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.46%** | 148.43 kB | 149.12 kB | +0.55% | 36.97 kB | 37.18 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.development.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-static.browser.development.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.38%** | 358.23 kB | 359.58 kB | +0.50% | 80.61 kB | 81.02 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.edge.development.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-static.edge.development.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.38%** | 358.64 kB | 359.99 kB | +0.51% | 80.75 kB | 81.15 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.development.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-static.node.development.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.38%** | 360.38 kB | 361.73 kB | +0.50% | 80.94 kB | 81.34 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-server.browser.development.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.38%** | 360.77 kB | 362.12 kB | +0.50% | 80.83 kB | 81.24 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.edge.development.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-server.edge.development.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.37%** | 361.18 kB | 362.53 kB | +0.51% | 80.96 kB | 81.37 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-server.node.development.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.37%** | 361.70 kB | 363.06 kB | +0.50% | 80.88 kB | 81.29 kB\n| [facebook-www/ReactDOMServerStreaming-dev.modern.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/facebook-www/ReactDOMServerStreaming-dev.modern.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.37%** | 352.07 kB | 353.38 kB | +0.53% | 77.88 kB | 78.30 kB\n| [oss-experimental/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/umd/react-dom-server.browser.development.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.37%** | 378.04 kB | 379.45 kB | +0.52% | 81.70 kB | 82.12 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-server.bun.development.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.37%** | 356.59 kB | 357.91 kB | +0.50% | 80.07 kB | 80.47 kB\n| [facebook-www/ReactDOMServer-dev.modern.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/facebook-www/ReactDOMServer-dev.modern.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.37%** | 356.88 kB | 358.19 kB | +0.53% | 79.04 kB | 79.45 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.37%** | 359.15 kB | 360.46 kB | +0.49% | 80.56 kB | 80.95 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.36%** | 361.06 kB | 362.37 kB | +0.49% | 81.01 kB | 81.41 kB\n| [oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.36%** | 376.33 kB | 377.70 kB | +0.51% | 81.38 kB | 81.80 kB\n| [facebook-www/ReactDOMServer-dev.classic.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/facebook-www/ReactDOMServer-dev.classic.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.36%** | 364.30 kB | 365.62 kB | +0.51% | 80.69 kB | 81.10 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-static.browser.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.27%** | 65.23 kB | 65.41 kB | +0.32% | 20.25 kB | 20.31 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.edge.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-static.edge.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.27%** | 65.56 kB | 65.74 kB | +0.36% | 20.38 kB | 20.45 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.27%** | 66.03 kB | 66.21 kB | +0.36% | 20.38 kB | 20.46 kB\n| [oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.27%** | 66.17 kB | 66.35 kB | +0.32% | 20.65 kB | 20.72 kB\n| [facebook-www/ReactDOMServer-prod.modern.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/facebook-www/ReactDOMServer-prod.modern.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.26%** | 154.97 kB | 155.36 kB | +0.31% | 28.08 kB | 28.17 kB\n| [facebook-www/ReactDOMServer-prod.classic.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/facebook-www/ReactDOMServer-prod.classic.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.25%** | 155.70 kB | 156.10 kB | +0.29% | 28.30 kB | 28.38 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.25%** | 69.76 kB | 69.94 kB | +0.30% | 21.81 kB | 21.87 kB\n| [facebook-www/ReactDOMServerStreaming-prod.modern.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/facebook-www/ReactDOMServerStreaming-prod.modern.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.25%** | 157.10 kB | 157.49 kB | +0.28% | 29.03 kB | 29.12 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.edge.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-server.edge.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.25%** | 70.33 kB | 70.51 kB | +0.27% | 21.88 kB | 21.94 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.25%** | 70.48 kB | 70.66 kB | +0.30% | 21.95 kB | 22.01 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.22%** | 64.95 kB | 65.10 kB | +0.26% | 19.62 kB | 19.68 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-stable-semver/react-dom/cjs/react-dom-server.browser.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.22%** | 63.64 kB | 63.78 kB | +0.23% | 19.67 kB | 19.71 kB\n| [oss-stable/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-stable/react-dom/cjs/react-dom-server.browser.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.22%** | 63.66 kB | 63.80 kB | +0.24% | 19.69 kB | 19.74 kB\n| [oss-experimental/react-dom/umd/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/umd/react-dom-server-legacy.browser.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.22%** | 65.11 kB | 65.25 kB | +0.20% | 20.01 kB | 20.05 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-stable-semver/react-dom/umd/react-dom-server.browser.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.22%** | 63.79 kB | 63.93 kB | +0.21% | 19.93 kB | 19.98 kB\n| [oss-stable/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-stable/react-dom/umd/react-dom-server.browser.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.22%** | 63.81 kB | 63.95 kB | +0.20% | 19.96 kB | 20.00 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-server.bun.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.21%** | 68.36 kB | 68.51 kB | +0.24% | 20.99 kB | 21.05 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.edge.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-stable-semver/react-dom/cjs/react-dom-server.edge.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.21%** | 67.87 kB | 68.01 kB | +0.26% | 21.09 kB | 21.15 kB\n| [oss-stable/react-dom/cjs/react-dom-server.edge.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-stable/react-dom/cjs/react-dom-server.edge.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.21%** | 67.90 kB | 68.04 kB | +0.24% | 21.12 kB | 21.17 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.21%** | 67.93 kB | 68.07 kB | +0.22% | 21.11 kB | 21.15 kB\n| [oss-stable/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-stable/react-dom/cjs/react-dom-server.node.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.21%** | 67.95 kB | 68.09 kB | +0.21% | 21.13 kB | 21.18 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js](https://react-builds.vercel.app/commits/a4e47bffaf731932dc2f21f85cf2365bbca63213/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js?compare=ddff504695f33c19e8c0792bff82bd8f8b8f7c05) | **+0.20%** | 69.94 kB | 70.09 kB | +0.28% | 21.27 kB | 21.33 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against a4e47bffaf731932dc2f21f85cf2365bbca63213\n</p>\n","updated_at":"2023-08-30T18:17:58Z","created_at":"2023-08-29T22:40:00Z","creator_user_login":"react-sizebot"}
{"number":27242,"comment_id":"1686278093","body":"I see `\"license\": \"MIT\"` there: https://unpkg.com/browse/client-only@0.0.1/package.json\r\n\r\nThe same can be seen on the right side:\r\n\r\n![grafik](https://github.com/facebook/react/assets/827205/6475af01-a018-49d6-ae58-254d86d622e3)\r\n","updated_at":"2023-08-21T12:57:54Z","created_at":"2023-08-21T12:56:22Z","creator_user_login":"DanielRuf"}
{"number":27242,"comment_id":"1687288450","body":"In my opinion, one of the purposes of using LICENSE.txt is to check the copyright owner of this package. Currently, we cannot verify the ownership since it does not have a LICENSE.txt.","updated_at":"2023-08-22T01:44:41Z","created_at":"2023-08-22T01:44:41Z","creator_user_login":"386jp"}
{"number":27242,"comment_id":"1688187216","body":"The issue description implies something else:\r\n\r\n>  Is it possible to have a license file added to indicate that this package is MIT licensed?\r\n\r\nTools like npm, pnpm, yarn, ORT and so on all detect this via package.json parser.","updated_at":"2023-08-22T13:26:30Z","created_at":"2023-08-22T13:26:30Z","creator_user_login":"DanielRuf"}
{"number":27242,"comment_id":"1698019498","body":"> I see `\"license\": \"MIT\"` there: https://unpkg.com/browse/client-only@0.0.1/package.json\r\n\r\nThis is mostly NPM to blame, but `\"license\"` should be `\"licenseType\"` or similar; regardless, this is just meta data, not the document itself.\r\n\r\nListing the type of the license alone is not legally binding or enforceable in any manner as license types are not legally recognized. Unless a license is provided, the package is essentially unlicensed.","updated_at":"2023-08-29T19:34:55Z","created_at":"2023-08-29T19:34:55Z","creator_user_login":"rschristian"}
{"number":27242,"comment_id":"1698246825","body":"> This is mostly NPM to blame, but `\"license\"` should be `\"licenseType\"` or similar; regardless, this is just meta data, not the document itself.\r\n\r\nI can not really follow. npm has this field since the early beginnings. package.json is a standardized document which is used and supported by all major JS / Node package managers.\r\n\r\nYou don't need the full license document when you use one of the many (F)OSS licenses. Please also see SPDX and the license identifiers:\r\n* https://spdx.dev/licenses/\r\n* https://spdx.org/licenses/\r\n\r\nAll big SBOM tools (like [ORT](https://github.com/oss-review-toolkit/ort)) and license check tools like [licensee](https://www.npmjs.com/package/licensee) understand and support this way of defining the license.\r\n\r\nWell, the scancode tool used by ORT even parses `license: MIT` lines from sourcecode file headers. You don't paste the full copyright text in there.\r\n\r\nCustom modifications or additions of these standardized license texts make not much sense. Because then these are not valid (F)OSS licenses in many cases (some BSD-3-Clause and BSD-2-Clause licenses with additional clauses and text or dual-licensed software projects face this issue - you may not remember but Facebook tried to use such a BSD license with extra clause in the past which caused some big backslash in the community and they finally moved to MIT - that was years ago).","updated_at":"2023-08-29T22:52:49Z","created_at":"2023-08-29T22:52:49Z","creator_user_login":"DanielRuf"}
{"number":27242,"comment_id":"1698249206","body":"> I can not really follow. npm has this field since the early beginnings. package.json is a standardized document which is used and supported by all major JS / Node package managers.\n>\n> You don't need the full license document\n\nIt doesn't matter that NPM allows you to set this meta data, it is not by itself legally binding. It also doesn't matter what some code scanning tools use.\n\nWithout a dedicated license stating the terms of use for the product, courts in most western nations recognize the work as being unlicensed. \n\nYes, you do always need a dedicated License somewhere.\n\n> Because then these are not valid (F)OSS licenses in many cases\n\nThey don't need to be.","updated_at":"2023-08-29T23:00:55Z","created_at":"2023-08-29T22:56:17Z","creator_user_login":"rschristian"}
{"number":27242,"comment_id":"1699069356","body":"I suggest reading https://opensource.stackexchange.com/a/8122 and https://opensource.stackexchange.com/a/7808 and other resources, a license txt file is not required if the license itself is mentioned in the headers of source files or in the package metadata.\r\n\r\nFrom the second link:\r\n\r\n> You can absolutely do that and it is fairly common. A file called LICENSE has no special legal significance. It is the responsibility of a user of the software to obtain necessary licenses, so the absence of a particular file doesn't give them any special permissions – if they don't find the license in the Readme, they cannot use the software.\r\n\r\nIANAL, but tools like ORT and licensee can generate needed `LICENSE` files by extracting the used license from headers and metadata files.","updated_at":"2023-08-30T12:26:30Z","created_at":"2023-08-30T12:26:30Z","creator_user_login":"DanielRuf"}
{"number":27242,"comment_id":"1699089346","body":"The license file of React is there: https://github.com/facebook/react/blob/main/LICENSE and applies to all packages under https://github.com/facebook/react/tree/main/packages\r\n\r\nAlso the other packages have license headers, see https://github.com/facebook/react/issues/7071#issuecomment-354763333\r\n\r\nThe only code in the client-only package is a `throw Error` in `error.js`: https://unpkg.com/browse/client-only@0.0.1/\r\n\r\nI agree that it is missing these header comments. But the package.json file also includes (at least) the name of the used license.","updated_at":"2023-08-30T12:44:39Z","created_at":"2023-08-30T12:36:37Z","creator_user_login":"DanielRuf"}
{"number":27219,"comment_id":"1676025676","body":"const quoteContainer =document.getElementById(\"quote-container\")\r\nconst quoteText =document.getElementById(\"quote\")\r\nconst authorText =document.getElementById(\"author\")\r\nconst twitterBtn =document.getElementById(\"twitter\")\r\nconst newQuoteBtn =document.getElementById(\"new-quote\")\r\n\r\nlet apiQuotes = [];\r\n\r\n// show new Quote\r\nfunction newQuote(){\r\n    // pick a random quote from apiQuotes array\r\n    const quote = apiQuotes[Math.floor(math.random() * apiQuotes.length)];\r\n    authorText.textContent = quote.author;\r\n    quoteText.textContent = quote.text;\r\n    \r\n}\r\n\r\n// Get Quotes from API\r\nasync function getQuotes(){\r\n    const apiUrl='https://type.fit/api/quotes';\r\n    try {\r\n        const response = await fetch(apiUrl);\r\n        apiQuotes = await response.json();\r\n        newQuote();\r\n    } catch (error) {\r\n        // catch error here\r\n    }\r\n}\r\n\r\n// on load\r\ngetQuotes();","updated_at":"2023-08-12T17:41:05Z","created_at":"2023-08-12T17:41:05Z","creator_user_login":"Asare6"}
{"number":27219,"comment_id":"1676219125","body":"Hi, Asare6. I highly recommend using the `catch` block you've already set up! Adding a `console.error(error)` would tell you that `math` should be capitalized (to `Math`) in your `const quote` declaration 😉 ","updated_at":"2023-08-13T04:17:21Z","created_at":"2023-08-13T04:17:21Z","creator_user_login":"jmerz826"}
{"number":27219,"comment_id":"1678301748","body":"Hi , @Asare6 \r\nI see a couple of issues in your JavaScript code that might be causing the problem. Here are the corrections:\r\n\r\n1. The method `Math.random()` should be written with an uppercase \"M\". JavaScript is case-sensitive, so `Math.random()` is correct, not `math.random()`.\r\n\r\n2. The `getQuotes` function is being called before the DOM is fully loaded. To ensure that the DOM is ready before executing the `getQuotes` function, you should wrap the `getQuotes` function call inside a `DOMContentLoaded` event listener.\r\n\r\n// show new Quote\r\nfunction newQuote() {\r\n  // pick a random quote from apiQuotes array\r\n  const quote = apiQuotes[Math.floor(Math.random() * apiQuotes.length)];\r\n  authorText.textContent = quote.author;\r\n  quoteText.textContent = quote.text;\r\n}\r\n\r\n// Get Quotes from API\r\nasync function getQuotes() {\r\n  const apiUrl = 'https://type.fit/api/quotes';\r\n  try {\r\n    const response = await fetch(apiUrl);\r\n    apiQuotes = await response.json();\r\n    newQuote();\r\n  } catch (error) {\r\n    // catch error here\r\n  }\r\n}\r\n\r\n// Wait for the DOM to be fully loaded\r\ndocument.addEventListener('DOMContentLoaded', getQuotes);\r\n\r\n\r\nBy wrapping the `getQuotes` function call inside the `DOMContentLoaded` event listener, you ensure that the API call will be made only after the DOM has finished loading. This should help resolve your issue with fetching and displaying data from the API.","updated_at":"2023-08-15T01:32:54Z","created_at":"2023-08-15T01:32:54Z","creator_user_login":"rishabhpassi"}
{"number":27219,"comment_id":"1679235916","body":"> Hi , @Asare6 I see a couple of issues in your JavaScript code that might be causing the problem. Here are the corrections:\r\n> \r\n> 1. The method `Math.random()` should be written with an uppercase \"M\". JavaScript is case-sensitive, so `Math.random()` is correct, not `math.random()`.\r\n> 2. The `getQuotes` function is being called before the DOM is fully loaded. To ensure that the DOM is ready before executing the `getQuotes` function, you should wrap the `getQuotes` function call inside a `DOMContentLoaded` event listener.\r\n> \r\n> // show new Quote function newQuote() { // pick a random quote from apiQuotes array const quote = apiQuotes[Math.floor(Math.random() * apiQuotes.length)]; authorText.textContent = quote.author; quoteText.textContent = quote.text; }\r\n> \r\n> // Get Quotes from API async function getQuotes() { const apiUrl = 'https://type.fit/api/quotes'; try { const response = await fetch(apiUrl); apiQuotes = await response.json(); newQuote(); } catch (error) { // catch error here } }\r\n> \r\n> // Wait for the DOM to be fully loaded document.addEventListener('DOMContentLoaded', getQuotes);\r\n> \r\n> By wrapping the `getQuotes` function call inside the `DOMContentLoaded` event listener, you ensure that the API call will be made only after the DOM has finished loading. This should help resolve your issue with fetching and displaying data from the API.\r\n\r\nit's still not working\r\n","updated_at":"2023-08-15T16:16:09Z","created_at":"2023-08-15T16:16:09Z","creator_user_login":"Asare6"}
{"number":27219,"comment_id":"1679238049","body":"> Hi, Asare6. I highly recommend using the `catch` block you've already set up! Adding a `console.error(error)` would tell you that `math` should be capitalized (to `Math`) in your `const quote` declaration 😉\r\n\r\nit's still not working","updated_at":"2023-08-15T16:17:02Z","created_at":"2023-08-15T16:17:02Z","creator_user_login":"Asare6"}
{"number":27219,"comment_id":"1680089579","body":"👋 @Asare6, I want to work on this Issue can you please assign it to me.","updated_at":"2023-08-16T07:17:53Z","created_at":"2023-08-16T07:17:53Z","creator_user_login":"AtulPatidar1709"}
{"number":27219,"comment_id":"1680360892","body":"hi\r\nthis code is working for me. I used it in react like this:\r\n// catch error here\r\nasync function getQuotes() {\r\n  const apiUrl = 'https://type.fit/api/quotes';\r\n  try {\r\n    const response = await fetch(apiUrl);\r\n    const apiQuotes = await response.json();\r\n    console.log(apiQuotes);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n}\r\n\r\nfunction Testing() {\r\n  getQuotes();\r\n  return (\r\n    <div>Testing</div>\r\n  )\r\n}\r\n\r\nexport default Testing\r\n\r\nin console it gives me array of all the quotes...\r\n\r\n","updated_at":"2023-08-16T10:33:35Z","created_at":"2023-08-16T10:33:35Z","creator_user_login":"AMalfez"}
{"number":27219,"comment_id":"1682734972","body":"> 👋 @Asare6, I want to work on this Issue can you please assign it to me.\r\n\r\nHow do I assign it to you? I'm new here","updated_at":"2023-08-17T18:04:36Z","created_at":"2023-08-17T18:04:36Z","creator_user_login":"Asare6"}
{"number":27219,"comment_id":"1695088736","body":"@Asare6  \r\n\r\nI have written a sandbox just for you for this issue .\r\nhere is the link [https://codesandbox.io/p/sandbox/cool-austin-cfg4tp?welcome=true](https://codesandbox.io/p/sandbox/cool-austin-cfg4tp?welcome=true)\r\n\r\nhere are the screenshots associated with this:\r\nindex.html\r\n![image](https://github.com/facebook/react/assets/98006412/b53e5bf3-cac5-4ae1-880c-1f4839c2f7dc)\r\n\r\njavascript\r\n![image](https://github.com/facebook/react/assets/98006412/ff0051c1-2d0f-4797-ad29-142ffb88d205)\r\n\r\n\r\nhere is the live preview\r\n![image](https://github.com/facebook/react/assets/98006412/0abdefdb-67cc-40dc-870f-cff257d4eb20)\r\n\r\n\r\nfell free to go through the sandbox\r\nif this helps you can go ahead and close this issue thanks.\r\nhappy coding😊😊😊😊😊\r\n","updated_at":"2023-08-28T07:18:41Z","created_at":"2023-08-28T06:22:28Z","creator_user_login":"bonface221"}
{"number":27158,"comment_id":"1653008878","body":"@anvesh-vanam: We're sorry you've seen this error. ❤️\n\nUnfortunately the URL you provided (\"localhost\") is not publicly accessible. (This means that we will not be able to reproduce the problem you're reporting.)\n\nPlease help us by providing a link to a CodeSandbox (https://codesandbox.io/s/new), a repository on GitHub, or a minimal code example that reproduces the problem. (Screenshots or videos can also be helpful if they help provide context on how to repro the bug.)\n\nHere are some tips for providing a minimal example: https://stackoverflow.com/help/mcve\n\nIssues without repros are automatically closed but we will re-open if you update with repro info.","updated_at":"2023-07-27T06:49:15Z","created_at":"2023-07-27T06:49:15Z","creator_user_login":"github-actions[bot]"}
{"number":27158,"comment_id":"1653072463","body":"Hey @anvesh-vanam, thanks for opening this issue. \r\n\r\n1. Are you using device toolbar (ctrl + shift + m) with some selected device? This may change user agent and we currently aware of this problem.\r\n2. Has this problem occurred after upgrading Firefox? Does it work with previous versions?","updated_at":"2023-07-27T07:42:51Z","created_at":"2023-07-27T07:42:51Z","creator_user_login":"hoxyq"}
{"number":27158,"comment_id":"1658245591","body":"@hoxyq  Hi. \r\n1.  i sometimes do. but it happens regardless of whether im using it or not.\r\n2. i dont remember exactly but i think this has been happening for 2-3 weeks now, which seems to coincide closely with the \r\n115.0.2 release date. i am on 115.0.3 facing the same issue","updated_at":"2023-07-31T12:08:01Z","created_at":"2023-07-31T12:08:01Z","creator_user_login":"anvesh-vanam"}
{"number":27158,"comment_id":"1660414873","body":"Hey @anvesh-vanam for me reinstalling the the extension when noticing this behavior did the join. Had the same issue on Chrome a couple of times.","updated_at":"2023-08-01T14:12:04Z","created_at":"2023-08-01T14:11:43Z","creator_user_login":"JesseKoldewijn"}
{"number":27158,"comment_id":"1662210937","body":"> Hey @anvesh-vanam for me reinstalling the the extension when noticing this behavior did the join. Had the same issue on Chrome a couple of times.\r\n\r\ntried it multiple times. unfortunately didnt work.","updated_at":"2023-08-02T13:25:47Z","created_at":"2023-08-02T13:25:47Z","creator_user_login":"anvesh-vanam"}
{"number":27158,"comment_id":"1666743228","body":"@anvesh-vanam Try upgrading Firefox to v.116.0.1. Is this issue only occurring on windows?","updated_at":"2023-08-06T06:41:04Z","created_at":"2023-08-06T06:41:04Z","creator_user_login":"apicgg"}
{"number":27158,"comment_id":"1667242015","body":"Can confirm that the before mentioned issue doesn't occur on the latest firefox dev-ed on win11. Personally haven't experienced this issue on any browser in linux yet.","updated_at":"2023-08-07T06:08:32Z","created_at":"2023-08-07T06:08:32Z","creator_user_login":"JesseKoldewijn"}
{"number":27158,"comment_id":"1667377161","body":"> @anvesh-vanam Try upgrading Firefox to v.116.0.1. Is this issue only occurring on windows?\r\n\r\ni upgraded to 116.0.1. the issue is still there. yeah im only using windows 10","updated_at":"2023-08-07T07:56:29Z","created_at":"2023-08-07T07:56:29Z","creator_user_login":"anvesh-vanam"}
{"number":27158,"comment_id":"1667415618","body":"> \r\n\r\nShouldn't matter all that much. Could you try the firefox developer edition to see if that one does work?","updated_at":"2023-08-07T08:22:21Z","created_at":"2023-08-07T08:22:21Z","creator_user_login":"JesseKoldewijn"}
{"number":27158,"comment_id":"1667437720","body":"> > \r\n> \r\n> Shouldn't matter all that much. Could you try the firefox developer edition to see if that one does work?\r\n\r\nyeah i just installed developer edition and its working fine on that one","updated_at":"2023-08-07T08:37:09Z","created_at":"2023-08-07T08:37:09Z","creator_user_login":"anvesh-vanam"}
{"number":27158,"comment_id":"1667610287","body":"@anvesh-vanam I am not able to reproduce this issue in my windows machine. Good to hear that it's working with dev edition of Firefox.","updated_at":"2023-08-07T10:34:13Z","created_at":"2023-08-07T10:34:13Z","creator_user_login":"apicgg"}
{"number":27158,"comment_id":"1669417834","body":"> \r\n\r\nHey man, it seems to be a running issue that the dev tools sometimes break on older browser revisions. Experienced this with multiple releases over the past 2 years to be honest and either running dev/beta browsers or reinstalling the full browser itself usually does the job.","updated_at":"2023-08-08T11:14:31Z","created_at":"2023-08-08T11:14:31Z","creator_user_login":"JesseKoldewijn"}
{"number":27158,"comment_id":"1681422546","body":"having the same issue in mac the firefox developer edition 117.0b8 (64-bit)\r\n\r\nI see the __REACT_DEVTOOLS_BREAK_ON_CONSOLE_ERRORS__ configuration in the DOM console, however running !!window.React in the console log comes back false. \r\n\r\nAnd in the extension pin getting the error that this page isn't a react page. ","updated_at":"2023-08-17T00:32:04Z","created_at":"2023-08-17T00:12:01Z","creator_user_login":"coderdix24"}
{"number":26917,"comment_id":"1584518781","body":"thoughts @hoxyq! I am pretty excited to see this landing!!","updated_at":"2023-06-09T12:44:15Z","created_at":"2023-06-09T12:44:15Z","creator_user_login":"Biki-das"}
{"number":26917,"comment_id":"1585583980","body":"Hey, thanks for working on this!\r\n\r\nQ1: When I am inspecting via shortcut and clicking on some element, will this open the DevTools \"Components\" tab?\r\nQ2: If not, the main use case here is to inspect names of the highlighted components only?\r\n\r\nIf we want to use it as a separate way to inspect React components, this feature should work same way as it works with current implementation.","updated_at":"2023-06-10T09:32:09Z","created_at":"2023-06-10T09:32:09Z","creator_user_login":"hoxyq"}
{"number":26917,"comment_id":"1585594064","body":"@hoxyq \r\n\r\n> Hey, thanks for working on this!\r\n> \r\n> Q1: When I am inspecting via shortcut and clicking on some element, will this open the DevTools \"Components\" tab? Q2: If not, the main use case here is to inspect names of the highlighted components only?\r\n> \r\n> If we want to use it as a separate way to inspect React components, this feature should work same way as it works with current implementation.\r\n\r\n@hoxyq currently upon clicking the component from the inpsect option list it opens the react tree components and then we need to select the inspect button to select it, this one just adds a small keyboard component which would help to activate the inspector tool!\r\n\r\nhttps://github.com/facebook/react/assets/72331432/59c60ccf-be2f-4fb2-85ae-41350beb4382\r\n\r\n","updated_at":"2023-06-10T10:01:04Z","created_at":"2023-06-10T10:01:04Z","creator_user_login":"Biki-das"}
{"number":26917,"comment_id":"1586668548","body":"@hoxyq ping!","updated_at":"2023-06-12T06:27:08Z","created_at":"2023-06-12T06:27:08Z","creator_user_login":"Biki-das"}
{"number":26917,"comment_id":"1587241061","body":"> @hoxyq\r\n> \r\n> > Hey, thanks for working on this!\r\n> > Q1: When I am inspecting via shortcut and clicking on some element, will this open the DevTools \"Components\" tab? Q2: If not, the main use case here is to inspect names of the highlighted components only?\r\n> > If we want to use it as a separate way to inspect React components, this feature should work same way as it works with current implementation.\r\n> \r\n> @hoxyq currently upon clicking the component from the inpsect option list it opens the react tree components and then we need to select the inspect button to select it, this one just adds a small keyboard component which would help to activate the inspector tool!\r\n> \r\n>  Untitled.mp4\r\n\r\nTo add this small feature, we need to make quite some changes in code, and specifically these:\r\nhttps://github.com/facebook/react/blob/f44c40dcf67c6f39fa544062de8be4f70f0fefe0/packages/react-devtools-shared/src/backend/views/Highlighter/index.js#L37-L38\r\n\r\nI don't think we should do it this way, but at the same time I understand that current architecture of the extension will not allow us to make it in some easy way. \r\n\r\nIt's just number of changes (and potential drawbacks from them) outweighs the proposed feature.\r\n\r\nIf you are looking for some other ways on how to contribute to DevTools, I can work on putting up a list of things you can work on, but I will need to invest some time for it.","updated_at":"2023-06-12T12:27:03Z","created_at":"2023-06-12T12:27:03Z","creator_user_login":"hoxyq"}
{"number":26917,"comment_id":"1587247390","body":"> > @hoxyq\r\n> > > Hey, thanks for working on this!\r\n> > > Q1: When I am inspecting via shortcut and clicking on some element, will this open the DevTools \"Components\" tab? Q2: If not, the main use case here is to inspect names of the highlighted components only?\r\n> > > If we want to use it as a separate way to inspect React components, this feature should work same way as it works with current implementation.\r\n> > \r\n> > \r\n> > @hoxyq currently upon clicking the component from the inpsect option list it opens the react tree components and then we need to select the inspect button to select it, this one just adds a small keyboard component which would help to activate the inspector tool!\r\n> > Untitled.mp4\r\n> \r\n> To add this small feature, we need to make quite some changes in code, and specifically these:\r\n> \r\n> https://github.com/facebook/react/blob/f44c40dcf67c6f39fa544062de8be4f70f0fefe0/packages/react-devtools-shared/src/backend/views/Highlighter/index.js#L37-L38\r\n> \r\n> I don't think we should do it this way, but at the same time I understand that current architecture of the extension will not allow us to make it in some easy way.\r\n> \r\n> It's just number of changes (and potential drawbacks from them) outweighs the proposed feature.\r\n> \r\n> If you are looking for some other ways on how to contribute to DevTools, I can work on putting up a list of things you can work on, but I will need to invest some time for it.\r\n\r\n@hoxyq i got you! but what's exactly the problem with this solution? backwards compatibility or future code changes would be hard to make in?","updated_at":"2023-06-12T12:31:03Z","created_at":"2023-06-12T12:31:03Z","creator_user_login":"Biki-das"}
{"number":26917,"comment_id":"1587326680","body":"> > > @hoxyq\r\n> > > > Hey, thanks for working on this!\r\n> > > > Q1: When I am inspecting via shortcut and clicking on some element, will this open the DevTools \"Components\" tab? Q2: If not, the main use case here is to inspect names of the highlighted components only?\r\n> > > > If we want to use it as a separate way to inspect React components, this feature should work same way as it works with current implementation.\r\n> > > \r\n> > > \r\n> > > @hoxyq currently upon clicking the component from the inpsect option list it opens the react tree components and then we need to select the inspect button to select it, this one just adds a small keyboard component which would help to activate the inspector tool!\r\n> > > Untitled.mp4\r\n> > \r\n> > \r\n> > To add this small feature, we need to make quite some changes in code, and specifically these:\r\n> > https://github.com/facebook/react/blob/f44c40dcf67c6f39fa544062de8be4f70f0fefe0/packages/react-devtools-shared/src/backend/views/Highlighter/index.js#L37-L38\r\n> > \r\n> > I don't think we should do it this way, but at the same time I understand that current architecture of the extension will not allow us to make it in some easy way.\r\n> > It's just number of changes (and potential drawbacks from them) outweighs the proposed feature.\r\n> > If you are looking for some other ways on how to contribute to DevTools, I can work on putting up a list of things you can work on, but I will need to invest some time for it.\r\n> \r\n> @hoxyq i got you! but what's exactly the problem with this solution? backwards compatibility or future code changes would be hard to make in?\r\n\r\nThe biggest problem here is the way how we expose methods `startInspectingNative` & `stopInspectingNative` with `agent`. IMO, right way here is to have some event-based model, exactly how `agent` works. I am not sure if this can be implemented with the way how `Highlighter` feature works now, maybe some decent amount of refactoring will be needed.\r\n\r\n","updated_at":"2023-06-12T13:16:31Z","created_at":"2023-06-12T13:16:31Z","creator_user_login":"hoxyq"}
{"number":26917,"comment_id":"1587328423","body":"> > > > @hoxyq\r\n> > > > > Hey, thanks for working on this!\r\n> > > > > Q1: When I am inspecting via shortcut and clicking on some element, will this open the DevTools \"Components\" tab? Q2: If not, the main use case here is to inspect names of the highlighted components only?\r\n> > > > > If we want to use it as a separate way to inspect React components, this feature should work same way as it works with current implementation.\r\n> > > > \r\n> > > > \r\n> > > > @hoxyq currently upon clicking the component from the inpsect option list it opens the react tree components and then we need to select the inspect button to select it, this one just adds a small keyboard component which would help to activate the inspector tool!\r\n> > > > Untitled.mp4\r\n> > > \r\n> > > \r\n> > > To add this small feature, we need to make quite some changes in code, and specifically these:\r\n> > > https://github.com/facebook/react/blob/f44c40dcf67c6f39fa544062de8be4f70f0fefe0/packages/react-devtools-shared/src/backend/views/Highlighter/index.js#L37-L38\r\n> > > \r\n> > > I don't think we should do it this way, but at the same time I understand that current architecture of the extension will not allow us to make it in some easy way.\r\n> > > It's just number of changes (and potential drawbacks from them) outweighs the proposed feature.\r\n> > > If you are looking for some other ways on how to contribute to DevTools, I can work on putting up a list of things you can work on, but I will need to invest some time for it.\r\n> > \r\n> > \r\n> > @hoxyq i got you! but what's exactly the problem with this solution? backwards compatibility or future code changes would be hard to make in?\r\n> \r\n> The biggest problem here is the way how we expose methods `startInspectingNative` & `stopInspectingNative` with `agent`. IMO, right way here is to have some event-based model, exactly how `agent` works. I am not sure if this can be implemented with the way how `Highlighter` feature works now, maybe some decent amount of refactoring will be needed.\r\n\r\nGot you!","updated_at":"2023-06-12T13:17:29Z","created_at":"2023-06-12T13:17:29Z","creator_user_login":"Biki-das"}
{"number":26917,"comment_id":"1587341827","body":"looking forward to help as you said , you could put forward something i can help with :-)","updated_at":"2023-06-12T13:25:46Z","created_at":"2023-06-12T13:25:46Z","creator_user_login":"Biki-das"}
{"number":26917,"comment_id":"1587373610","body":"> looking forward to help as you said , you could put forward something i can help with :-)\r\n\r\nAwesome, thanks. I will work on it this week and will return with more details / plans probably on the next one.","updated_at":"2023-06-12T13:45:07Z","created_at":"2023-06-12T13:44:29Z","creator_user_login":"hoxyq"}
{"number":26238,"comment_id":"1444777638","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 564166099b5f46dd33f3356b01a72c0314103a18...7265ff7f8239af8f1a0c25ad2b6afb98b86c1481\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 154.48 kB | 154.48 kB | = | 48.77 kB | 48.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 156.47 kB | 156.47 kB | = | 49.43 kB | 49.43 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/facebook-www/ReactDOM-prod.classic.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 530.88 kB | 530.88 kB | = | 94.58 kB | 94.58 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/facebook-www/ReactDOM-prod.modern.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 514.80 kB | 514.80 kB | = | 92.13 kB | 92.13 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [facebook-www/ReactDOM-dev.classic.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/facebook-www/ReactDOM-dev.classic.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 1,341.00 kB | 1,328.66 kB | = | 292.02 kB | 291.36 kB\n| [facebook-www/ReactDOM-dev.modern.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/facebook-www/ReactDOM-dev.modern.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 1,313.34 kB | 1,301.00 kB | = | 286.83 kB | 286.19 kB\n| [oss-experimental/react-dom/cjs/react-dom-unstable_testing.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-experimental/react-dom/cjs/react-dom-unstable_testing.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 1,186.57 kB | 1,175.13 kB | = | 264.41 kB | 263.81 kB\n| [facebook-www/ReactDOMTesting-dev.classic.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/facebook-www/ReactDOMTesting-dev.classic.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 1,214.93 kB | 1,203.20 kB | = | 269.63 kB | 269.07 kB\n| [oss-stable/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-stable/react-dom/cjs/react-dom.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 1,182.77 kB | 1,171.33 kB | = | 263.65 kB | 263.06 kB\n| [oss-stable-semver/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-stable-semver/react-dom/cjs/react-dom.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 1,182.74 kB | 1,171.30 kB | = | 263.63 kB | 263.03 kB\n| [oss-stable/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-stable/react-dom/umd/react-dom.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 1,239.82 kB | 1,227.76 kB | = | 266.51 kB | 265.94 kB\n| [oss-stable-semver/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-stable-semver/react-dom/umd/react-dom.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 1,239.80 kB | 1,227.74 kB | = | 266.49 kB | 265.91 kB\n| [facebook-www/ReactDOMTesting-dev.modern.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/facebook-www/ReactDOMTesting-dev.modern.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 1,184.56 kB | 1,172.83 kB | = | 263.70 kB | 263.12 kB\n| [oss-experimental/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-experimental/react-dom/cjs/react-dom.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 1,193.24 kB | 1,181.24 kB | = | 265.66 kB | 265.03 kB\n| [oss-experimental/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-experimental/react-dom/umd/react-dom.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 1,250.87 kB | 1,238.21 kB | = | 268.52 kB | 267.98 kB\n| [react-native/implementations/ReactNativeRenderer-dev.fb.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/react-native/implementations/ReactNativeRenderer-dev.fb.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 886.76 kB | 875.72 kB | = | 192.74 kB | 192.17 kB\n| [react-native/implementations/ReactFabric-dev.fb.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/react-native/implementations/ReactFabric-dev.fb.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 878.98 kB | 867.94 kB | = | 190.97 kB | 190.40 kB\n| [react-native/implementations/ReactNativeRenderer-dev.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/react-native/implementations/ReactNativeRenderer-dev.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 849.98 kB | 838.92 kB | = | 185.53 kB | 184.98 kB\n| [react-native/implementations/ReactFabric-dev.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/react-native/implementations/ReactFabric-dev.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 842.18 kB | 831.12 kB | = | 183.78 kB | 183.24 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-stable/react-reconciler/cjs/react-reconciler.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 858.19 kB | 846.75 kB | = | 182.88 kB | 182.29 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-stable-semver/react-reconciler/cjs/react-reconciler.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 858.17 kB | 846.73 kB | = | 182.85 kB | 182.26 kB\n| [oss-stable/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-stable/react-art/umd/react-art.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 884.20 kB | 872.16 kB | = | 185.91 kB | 185.28 kB\n| [oss-stable-semver/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-stable-semver/react-art/umd/react-art.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 884.17 kB | 872.13 kB | = | 185.88 kB | 185.26 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-experimental/react-reconciler/cjs/react-reconciler.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 866.43 kB | 854.43 kB | = | 184.36 kB | 183.74 kB\n| [facebook-www/ReactART-dev.classic.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/facebook-www/ReactART-dev.classic.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 881.50 kB | 869.18 kB | = | 186.59 kB | 185.91 kB\n| [facebook-www/ReactART-dev.modern.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/facebook-www/ReactART-dev.modern.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 870.30 kB | 857.98 kB | = | 184.30 kB | 183.64 kB\n| [oss-experimental/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-experimental/react-art/umd/react-art.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 892.90 kB | 880.26 kB | = | 187.37 kB | 186.82 kB\n| [oss-stable/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-stable/react-art/cjs/react-art.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 770.73 kB | 759.31 kB | = | 166.91 kB | 166.32 kB\n| [oss-stable-semver/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-stable-semver/react-art/cjs/react-art.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 770.71 kB | 759.29 kB | = | 166.89 kB | 166.30 kB\n| [facebook-www/ReactTestRenderer-dev.classic.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/facebook-www/ReactTestRenderer-dev.classic.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 781.12 kB | 769.41 kB | = | 167.84 kB | 167.24 kB\n| [facebook-www/ReactTestRenderer-dev.modern.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/facebook-www/ReactTestRenderer-dev.modern.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 781.12 kB | 769.41 kB | = | 167.84 kB | 167.24 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-dev.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-dev.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 764.86 kB | 753.24 kB | = | 164.62 kB | 164.01 kB\n| [oss-experimental/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-experimental/react-test-renderer/cjs/react-test-renderer.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 750.69 kB | 739.27 kB | = | 162.91 kB | 162.34 kB\n| [oss-stable/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-stable/react-test-renderer/cjs/react-test-renderer.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 750.32 kB | 738.90 kB | = | 162.82 kB | 162.25 kB\n| [oss-stable-semver/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-stable-semver/react-test-renderer/cjs/react-test-renderer.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 750.30 kB | 738.88 kB | = | 162.79 kB | 162.22 kB\n| [oss-experimental/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-experimental/react-test-renderer/umd/react-test-renderer.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 786.43 kB | 774.39 kB | = | 164.70 kB | 164.12 kB\n| [oss-stable/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-stable/react-test-renderer/umd/react-test-renderer.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 786.04 kB | 774.00 kB | = | 164.62 kB | 164.03 kB\n| [oss-stable-semver/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-stable-semver/react-test-renderer/umd/react-test-renderer.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 786.01 kB | 773.97 kB | = | 164.59 kB | 164.01 kB\n| [oss-experimental/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/7265ff7f8239af8f1a0c25ad2b6afb98b86c1481/files/oss-experimental/react-art/cjs/react-art.development.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 778.97 kB | 766.99 kB | = | 168.38 kB | 167.75 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 7265ff7f8239af8f1a0c25ad2b6afb98b86c1481\n</p>\n","updated_at":"2023-02-25T00:13:04Z","created_at":"2023-02-25T00:13:04Z","creator_user_login":"react-sizebot"}
{"number":26238,"comment_id":"1519127726","body":"@acdlite thoughts on this PR? (getting rid of the InvalidNestedHooksDispatcherOn{Mount,Update,Rerender}InDEV dispatchers in favor of tracking a separate flag that the other dev dispatchers read)","updated_at":"2023-04-23T18:32:07Z","created_at":"2023-04-23T18:32:07Z","creator_user_login":"sophiebits"}
{"number":26259,"comment_id":"1451131600","body":"I am experiencing this with componentDidUpdate, as well. It gets even weirder, because the ErrorBoundary doesn't receive all of the thrown errors.\r\n\r\nMy own example: https://codesandbox.io/s/bold-brook-63i6vm?file=/src/App.js\r\nNotice that the console shows the error occurred four times, but the Boundary only received the third instance, and the overlay caught the second. Errors 1 and 2 just vanished into the ether.","updated_at":"2023-03-02T01:18:02Z","created_at":"2023-03-02T01:16:15Z","creator_user_login":"Twipped"}
{"number":26259,"comment_id":"1451136370","body":"@fatton139 the reason yours is being remounted is because you're using StrictMode. That causes every component to mount twice.","updated_at":"2023-03-02T01:22:34Z","created_at":"2023-03-02T01:22:34Z","creator_user_login":"Twipped"}
{"number":26259,"comment_id":"1451159201","body":"> I am experiencing this with componentDidUpdate, as well. It gets even weirder, because the ErrorBoundary doesn't receive all of the thrown errors.\r\n> \r\n> My own example: https://codesandbox.io/s/bold-brook-63i6vm?file=/src/App.js Notice that the console shows the error occurred four times, but the Boundary only received the third instance, and the overlay caught the second. Errors 1 and 2 just vanished into the ether.\r\n\r\nIn your example the overlay catches the second and fourth instance for me, the third is handled by the error boundary so only Errors 0 has vanished for me. Could React internally be doing some sort of batching?\r\n\r\n> @fatton139 the reason yours is being remounted is because you're using StrictMode. That causes every component to mount twice.\r\n\r\nNot sure if I've done it correctly, but I removed `<StrictMode>` from `root.render` and the component is still remounting.","updated_at":"2023-03-02T02:01:22Z","created_at":"2023-03-02T01:59:07Z","creator_user_login":"fatton139"}
{"number":26259,"comment_id":"1454945780","body":"Hi @fatton139 \r\nAs I can see according to the docs we shouldn't render `props.children` when the error occurred. When I am rendering fallback when error occurred `unmount`- is only called once. Maybe when we keeping rendering components with error - there is some mechanism which prevents component keep throwing errors and finally shows error ui. \r\n```\r\n{this.state?.hasError ? <div>error!</div> : this.props.children}\r\n```","updated_at":"2023-03-05T01:08:13Z","created_at":"2023-03-05T01:08:13Z","creator_user_login":"Werter12"}
{"number":26259,"comment_id":"1455324288","body":"> Hi @fatton139 As I can see according to the docs we shouldn't render `props.children` when the error occurred. When I am rendering fallback when error occurred `unmount`- is only called once. Maybe when we keeping rendering components with error - there is some mechanism which prevents component keep throwing errors and finally shows error ui.\r\n> \r\n> ```\r\n> {this.state?.hasError ? <div>error!</div> : this.props.children}\r\n> ```\r\n\r\nThanks for the reply @Werter12\r\nI just find it odd that the docs don't mention anything regarding this behavior if I choose to keep the `children` rendered (Since nothing is stopping me from using `children` that way).\r\n\r\nI would've expected something like the `Suspense` API where you would do`<Suspense fallback={<FallbackComponent />} />` if it's intended that we must unmount the children on error.\r\n\r\n","updated_at":"2023-03-06T02:13:51Z","created_at":"2023-03-06T02:13:51Z","creator_user_login":"fatton139"}
{"number":26259,"comment_id":"1457788472","body":"I think there's a case for not resetting state. An error boundary that just renders children anyway is like rethrowing an error. But there's also a case for resetting state: It likely recovers the UI. Either way, this should be documented if the current behavior is intended.\r\n\r\n@fatton139 could you check if error boundaries always behaved that way by checking if the behavior is the same in React 16?","updated_at":"2023-03-07T08:55:51Z","created_at":"2023-03-07T08:55:51Z","creator_user_login":"eps1lon"}
{"number":26259,"comment_id":"1463163681","body":"> I think there's a case for not resetting state. An error boundary that just renders children anyway is like rethrowing an error. But there's also a case for resetting state: It likely recovers the UI. Either way, this should be documented if the current behavior is intended.\r\n> \r\n> @fatton139 could you check if error boundaries always behaved that way by checking if the behavior is the same in React 16?\r\n\r\nHi @eps1lon, I checked on React 16.14.0 the behavior seems to be the same. Here is the playground: https://codesandbox.io/s/recursing-stonebraker-ki0yz3?file=/src/App.jsx\r\n\r\nRegardless of how we proceed, the documentation of the intended behavior would be good.\r\n\r\nOur use case is for not resetting the state, our child components throws various errors, some are fatal where the child cannot be rendered, others are non fatal where there is sufficient information to render the child + error message. The current solution is to throw errors if the error is fatal, otherwise manually set a state, ideally we'd like to abstract away the \"set a state\" part. ","updated_at":"2023-03-10T08:46:46Z","created_at":"2023-03-10T02:46:57Z","creator_user_login":"fatton139"}
{"number":26259,"comment_id":"1463443928","body":"> Our use case is for not resetting the state, our child components throws various errors, some are fatal and where the child cannot be rendered, others are non fatal where there is sufficient information to render the child + error message. The current solution is to throw errors if the error is fatal, otherwise manually set a state, ideally we'd like to abstract away the \"set a state\" part.\r\n\r\nHave exactly the same problem. In a small app I thought it would be convenient to handle errors in one place, in ErrorBoundary, and just throw everything there. Bumped into the fact that ErrorBoundary remounts children. I wanted to show little toasts, but instead all my state is gone and my mounting effects are relaunched. Super unintuitive behaviour. The interface implies that I deal with an error myself and ErrorBoundary just catches it for me. Remounting children is too big of a thing to not mention it.","updated_at":"2023-03-10T08:26:00Z","created_at":"2023-03-10T08:26:00Z","creator_user_login":"pakomarov"}
{"number":26340,"comment_id":"1460366290","body":"trying to fix it","updated_at":"2023-03-08T15:44:24Z","created_at":"2023-03-08T15:44:24Z","creator_user_login":"5unnyWind"}
{"number":26340,"comment_id":"1484209305","body":"> trying to fix it\r\n\r\nhey, @5unnyWind have you fixed it?","updated_at":"2023-03-26T20:09:50Z","created_at":"2023-03-26T20:09:50Z","creator_user_login":"iprinceroyy"}
{"number":26340,"comment_id":"1484350486","body":"\r\nhey,but I don't seem to be getting the error you're talking about\r\n![image](https://user-images.githubusercontent.com/72289221/227821688-c42cdcba-86cf-4563-985b-48dec545ab6c.png)\r\n","updated_at":"2023-03-27T01:49:03Z","created_at":"2023-03-27T01:49:03Z","creator_user_login":"5unnyWind"}
{"number":26340,"comment_id":"1493229395","body":"I am also experiencing this issue.\r\n\r\nFirefox Extension Version: 4.27.1\r\nMy local npm package is version 4.27.4-a8f2653fa\r\n\r\nCould the mismatched versions be the cause? (This most likely is a stupid question).","updated_at":"2023-04-02T05:39:29Z","created_at":"2023-04-02T05:39:29Z","creator_user_login":"daniel-lee-tech"}
{"number":26340,"comment_id":"1527225064","body":"seems it's crash on big tree","updated_at":"2023-04-28T09:01:05Z","created_at":"2023-04-28T09:01:05Z","creator_user_login":"long76"}
{"number":26340,"comment_id":"1527226023","body":"log spamming warnings\r\n![image](https://user-images.githubusercontent.com/18124433/235104328-7140b7f0-4b0d-4aa5-9056-1bb7c0eb7760.png)\r\n\r\nversion 4.27.6","updated_at":"2023-04-28T09:01:43Z","created_at":"2023-04-28T09:01:43Z","creator_user_login":"long76"}
{"number":26340,"comment_id":"1527226819","body":"![image](https://user-images.githubusercontent.com/18124433/235104533-d8ab1958-b13e-40b6-b972-82b9b9414c2a.png)\r\n","updated_at":"2023-04-28T09:02:16Z","created_at":"2023-04-28T09:02:16Z","creator_user_login":"long76"}
{"number":26340,"comment_id":"1527900850","body":"getting this error too... any ideas on how to get around and contribute to fixing this? pointers?","updated_at":"2023-04-28T17:54:54Z","created_at":"2023-04-28T17:54:54Z","creator_user_login":"THEmmanuel"}
{"number":26340,"comment_id":"1529738150","body":"Also seeing this: \r\n![image](https://user-images.githubusercontent.com/38783/235462489-f7597570-2d05-4875-8a65-50581e9ca59b.png)\r\n","updated_at":"2023-05-01T13:59:29Z","created_at":"2023-05-01T13:59:29Z","creator_user_login":"jboler"}
{"number":26340,"comment_id":"1534060142","body":"I got the error too\r\n![image](https://user-images.githubusercontent.com/30256809/236108764-fb709dd8-6540-4e8a-a268-24f00ce3a6cb.png)\r\n","updated_at":"2023-05-04T03:49:11Z","created_at":"2023-05-04T03:49:11Z","creator_user_login":"Lxylona"}
{"number":26340,"comment_id":"1536092999","body":"Same here\r\n<img width=\"558\" alt=\"image\" src=\"https://user-images.githubusercontent.com/70087412/236442301-7802ec36-c51c-498a-a706-a74be583d535.png\">\r\n\r\nIt only seems to happen when i select certain components. Here's what pops up when I select them from the component tree:\r\n<img width=\"322\" alt=\"image\" src=\"https://user-images.githubusercontent.com/70087412/236443323-b14f2990-1574-417a-8f87-40c34937d117.png\">","updated_at":"2023-05-05T11:13:31Z","created_at":"2023-05-05T11:07:34Z","creator_user_login":"filipclavin"}
{"number":26340,"comment_id":"1536400195","body":"I've also been getting this error a ton the past few days.\r\n<img width=\"1348\" alt=\"Screenshot 2023-05-05 at 11 04 37 AM\" src=\"https://user-images.githubusercontent.com/12564252/236496073-e092fcba-4aab-42ac-9cd7-8c6d79024ae2.png\">\r\n\r\nChrome extension version: 4.27.6 (4/20/2023)\r\nChrome version: 112.0.5615.137 (Official Build) (x86_64)","updated_at":"2023-05-05T15:07:12Z","created_at":"2023-05-05T15:07:12Z","creator_user_login":"hopemiller14"}
{"number":26340,"comment_id":"1551476040","body":"Duplicate/related: https://github.com/facebook/react/issues/23226\r\n\r\nThis seems to happen more often when you have multiple tabs open on different domains with devtools also open for each one. That's what's happening right now.\r\n\r\nFWIW it's happening on the React site itself, e.g. https://react.dev/learn/describing-the-ui so it's pretty reproducible. I have a `localhost:3000` react app running in another tab.\r\n\r\nI had to \"end task\" for the tabs and dev tools process to get it working again.\r\n\r\n---\r\nChrome extension version: [4.27.7-783e7fcfa](https://github.com/facebook/react/blob/main/packages/react-devtools/CHANGELOG.md#4277)\r\nChrome version: Version 112.0.5615.138 (Official Build) (64-bit)","updated_at":"2023-05-17T14:15:05Z","created_at":"2023-05-17T14:13:05Z","creator_user_login":"kamranayub"}
{"number":26340,"comment_id":"1552948846","body":"Hey @kamranayub,\r\n> I had to \"end task\" for the tabs and dev tools process to get it working again.\r\n\r\nCan you please elaborate on the steps to fix this?\r\n\r\nThanks!","updated_at":"2023-05-18T11:58:16Z","created_at":"2023-05-18T11:58:16Z","creator_user_login":"V1shvesh"}
{"number":26340,"comment_id":"1559676363","body":"> Duplicate/related: #23226\r\n> \r\n> This seems to happen more often when you have multiple tabs open on different domains with devtools also open for each one. That's what's happening right now.\r\n> \r\n> FWIW it's happening on the React site itself, e.g. https://react.dev/learn/describing-the-ui so it's pretty reproducible. I have a `localhost:3000` react app running in another tab.\r\n> \r\n> I had to \"end task\" for the tabs and dev tools process to get it working again.\r\n> \r\n> Chrome extension version: [4.27.7-783e7fcfa](https://github.com/facebook/react/blob/main/packages/react-devtools/CHANGELOG.md#4277) Chrome version: Version 112.0.5615.138 (Official Build) (64-bit)\r\n\r\n@kamranayub Can you please share a list of steps which result into facing this error?\r\n\r\nI've tried opening multiple (4+ tabs) at the same time, both production and dev builds of React, refreshing pages and reloading Chrome DevTools panels, but cannot reproduce it.\r\n\r\nI know that reproducing this can be random, but I am happy to follow the same steps if this errors pops up more frequently for you.","updated_at":"2023-05-23T15:32:59Z","created_at":"2023-05-23T15:32:59Z","creator_user_login":"hoxyq"}
{"number":26332,"comment_id":"1457265985","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af...80535b015de86d5b964bd02e754b62a50f6dc070\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **=** | 155.28 kB | 155.28 kB | = | 48.98 kB | 48.98 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **=** | 157.28 kB | 157.28 kB | = | 49.65 kB | 49.65 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/facebook-www/ReactDOM-prod.classic.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **=** | 532.64 kB | 532.64 kB | = | 94.85 kB | 94.85 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/facebook-www/ReactDOM-prod.modern.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **=** | 516.56 kB | 516.56 kB | = | 92.45 kB | 92.45 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable-semver/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-stable-semver/react-test-renderer/umd/react-test-renderer.development.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.28%** | 786.78 kB | 788.95 kB | +0.06% | 164.76 kB | 164.85 kB\n| [oss-stable/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-stable/react-test-renderer/umd/react-test-renderer.development.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.28%** | 786.81 kB | 788.98 kB | +0.06% | 164.78 kB | 164.88 kB\n| [oss-experimental/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-experimental/react-test-renderer/umd/react-test-renderer.development.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.28%** | 787.20 kB | 789.37 kB | +0.06% | 164.86 kB | 164.97 kB\n| [oss-stable-semver/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-stable-semver/react-test-renderer/cjs/react-test-renderer.development.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.27%** | 751.05 kB | 753.08 kB | +0.07% | 162.93 kB | 163.04 kB\n| [oss-stable/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-stable/react-test-renderer/cjs/react-test-renderer.development.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.27%** | 751.07 kB | 753.11 kB | +0.07% | 162.96 kB | 163.07 kB\n| [oss-experimental/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-experimental/react-test-renderer/cjs/react-test-renderer.development.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.27%** | 751.44 kB | 753.48 kB | +0.07% | 163.06 kB | 163.17 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-dev.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-dev.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.26%** | 765.46 kB | 767.49 kB | +0.10% | 164.73 kB | 164.88 kB\n| [oss-stable-semver/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-stable-semver/react-art/cjs/react-art.development.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.26%** | 771.63 kB | 773.67 kB | +0.06% | 167.11 kB | 167.21 kB\n| [oss-stable/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-stable/react-art/cjs/react-art.development.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.26%** | 771.66 kB | 773.69 kB | +0.06% | 167.13 kB | 167.23 kB\n| [oss-experimental/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-experimental/react-art/cjs/react-art.development.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.26%** | 779.89 kB | 781.93 kB | +0.06% | 168.61 kB | 168.71 kB\n| [facebook-www/ReactTestRenderer-dev.modern.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/facebook-www/ReactTestRenderer-dev.modern.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.26%** | 781.72 kB | 783.74 kB | +0.09% | 167.93 kB | 168.08 kB\n| [facebook-www/ReactTestRenderer-dev.classic.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/facebook-www/ReactTestRenderer-dev.classic.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.26%** | 781.72 kB | 783.74 kB | +0.09% | 167.93 kB | 168.08 kB\n| [oss-stable-semver/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-stable-semver/react-art/umd/react-art.development.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.25%** | 885.10 kB | 887.27 kB | +0.06% | 186.14 kB | 186.25 kB\n| [oss-stable/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-stable/react-art/umd/react-art.development.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.25%** | 885.13 kB | 887.30 kB | +0.06% | 186.16 kB | 186.27 kB\n| [react-native/implementations/ReactFabric-dev.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/react-native/implementations/ReactFabric-dev.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.24%** | 832.47 kB | 834.49 kB | +0.07% | 180.31 kB | 180.44 kB\n| [oss-experimental/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-experimental/react-art/umd/react-art.development.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.24%** | 893.83 kB | 896.00 kB | +0.06% | 187.63 kB | 187.74 kB\n| [react-native/implementations/ReactNativeRenderer-dev.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/react-native/implementations/ReactNativeRenderer-dev.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.24%** | 845.23 kB | 847.26 kB | +0.07% | 183.35 kB | 183.48 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-stable-semver/react-reconciler/cjs/react-reconciler.development.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.24%** | 859.15 kB | 861.18 kB | +0.07% | 183.07 kB | 183.19 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-stable/react-reconciler/cjs/react-reconciler.development.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.24%** | 859.17 kB | 861.21 kB | +0.07% | 183.09 kB | 183.22 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/oss-experimental/react-reconciler/cjs/react-reconciler.development.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.23%** | 867.41 kB | 869.45 kB | +0.07% | 184.58 kB | 184.71 kB\n| [react-native/implementations/ReactFabric-dev.fb.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/react-native/implementations/ReactFabric-dev.fb.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.23%** | 869.31 kB | 871.34 kB | +0.08% | 187.47 kB | 187.62 kB\n| [facebook-www/ReactART-dev.modern.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/facebook-www/ReactART-dev.modern.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.23%** | 870.95 kB | 872.97 kB | +0.09% | 184.46 kB | 184.63 kB\n| [react-native/implementations/ReactNativeRenderer-dev.fb.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/react-native/implementations/ReactNativeRenderer-dev.fb.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.23%** | 882.06 kB | 884.08 kB | +0.08% | 190.55 kB | 190.69 kB\n| [facebook-www/ReactART-dev.classic.js](https://react-builds.vercel.app/commits/80535b015de86d5b964bd02e754b62a50f6dc070/files/facebook-www/ReactART-dev.classic.js?compare=3cad3a54eda7b2d1c670c2d414f33d78a4c3f6af) | **+0.23%** | 882.15 kB | 884.17 kB | +0.09% | 186.74 kB | 186.91 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 80535b015de86d5b964bd02e754b62a50f6dc070\n</p>\n","updated_at":"2023-03-09T19:53:56Z","created_at":"2023-03-07T00:25:41Z","creator_user_login":"react-sizebot"}
{"number":26332,"comment_id":"1457288208","body":"Related to https://github.com/facebook/react/issues/26320","updated_at":"2023-03-07T00:45:50Z","created_at":"2023-03-07T00:45:50Z","creator_user_login":"egonSchiele"}
{"number":26332,"comment_id":"1462686074","body":"Tested with dev.html. With these changes, I get this output in strict mode:\r\n\r\n```\r\n[Log] @ Insertion Effect (dev.html, line 15)\r\n[Log] @ Layout Effect (dev.html, line 7)\r\n[Log] @ Insertion Effect (cleanup) (react-dom.development.js, line 26246)\r\n[Log] @ Layout Effect (cleanup) (react-dom.development.js, line 26246)\r\n[Log] @ Insertion Effect (dev.html, line 15)\r\n[Log] @ Layout Effect (dev.html, line 7)\r\n```\r\n\r\nWithout strict mode, I get:\r\n\r\n```\r\n[Log] @ Insertion Effect (dev.html, line 15)\r\n[Log] @ Layout Effect (dev.html, line 7)\r\n```","updated_at":"2023-03-09T19:55:17Z","created_at":"2023-03-09T19:55:17Z","creator_user_login":"egonSchiele"}
{"number":26332,"comment_id":"1462688807","body":"Also, to make sure I'm not burying the lede: strict mode tests are currently not enabled in main. If I enable them, they fail. For example:\r\n\r\n```js\r\n    if (supportsDoubleInvokeEffects()) {\r\n      assertLog([\r\n        'useInsertionEffect mount',\r\n        'useLayoutEffect mount',\r\n        'useEffect mount',\r\n        'useInsertionEffect unmount',\r\n        'useLayoutEffect unmount',\r\n        'useEffect unmount',\r\n        'useInsertionEffect mount',\r\n        'useLayoutEffect mount',\r\n        'useEffect mount',\r\n      ]);\r\n    } else {\r\n      assertLog([\r\n        'useInsertionEffect mount',\r\n        'useLayoutEffect mount',\r\n        'useEffect mount',\r\n      ]);\r\n    }\r\n```\r\n\r\n`supportsDoubleInvokeEffects` is never `true`. I set it to true and verified that this patch doesn't introduce new failures.","updated_at":"2023-03-09T19:57:35Z","created_at":"2023-03-09T19:57:35Z","creator_user_login":"egonSchiele"}
{"number":26163,"comment_id":"1430350779","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fccf3a9fba5fd778c678657c556344b333111cfb...78a9becde91032d032a7a89d3c98dcabf069b7c7\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **=** | 154.54 kB | 154.54 kB | = | 48.83 kB | 48.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **=** | 156.54 kB | 156.54 kB | = | 49.45 kB | 49.45 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/facebook-www/ReactDOM-prod.classic.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **=** | 529.73 kB | 529.73 kB | = | 94.36 kB | 94.36 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/facebook-www/ReactDOM-prod.modern.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **=** | 514.95 kB | 514.95 kB | = | 92.17 kB | 92.17 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable-semver/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable-semver/react-dom/cjs/react-dom-server.browser.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.42%** | 52.85 kB | 53.08 kB | +0.64% | 16.51 kB | 16.61 kB\n| [oss-stable/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable/react-dom/cjs/react-dom-server.browser.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.42%** | 52.88 kB | 53.10 kB | +0.64% | 16.53 kB | 16.63 kB\n| [oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.42%** | 53.27 kB | 53.49 kB | +0.67% | 16.84 kB | 16.95 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom-static.browser.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.42%** | 53.09 kB | 53.31 kB | +0.62% | 16.61 kB | 16.71 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.edge.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom-static.edge.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.42%** | 53.15 kB | 53.37 kB | +0.62% | 16.63 kB | 16.73 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.42%** | 53.21 kB | 53.43 kB | +0.63% | 16.65 kB | 16.76 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable-semver/react-dom/umd/react-dom-server.browser.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.42%** | 52.91 kB | 53.13 kB | +0.69% | 16.70 kB | 16.81 kB\n| [oss-stable/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable/react-dom/umd/react-dom-server.browser.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.42%** | 52.93 kB | 53.15 kB | +0.69% | 16.72 kB | 16.83 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.edge.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable-semver/react-dom/cjs/react-dom-server.edge.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.39%** | 56.60 kB | 56.82 kB | +0.53% | 17.76 kB | 17.86 kB\n| [oss-stable/react-dom/cjs/react-dom-server.edge.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable/react-dom/cjs/react-dom-server.edge.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.39%** | 56.62 kB | 56.85 kB | +0.54% | 17.78 kB | 17.88 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.edge.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom-server.edge.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.39%** | 57.02 kB | 57.25 kB | +0.53% | 17.93 kB | 18.02 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.34%** | 57.40 kB | 57.59 kB | +0.41% | 18.04 kB | 18.11 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.33%** | 56.97 kB | 57.16 kB | +0.40% | 17.87 kB | 17.94 kB\n| [oss-stable/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable/react-dom/cjs/react-dom-server.node.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.33%** | 57.00 kB | 57.18 kB | +0.40% | 17.89 kB | 17.96 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.33%** | 57.40 kB | 57.59 kB | +0.42% | 18.04 kB | 18.11 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable-semver/react-dom/cjs/react-dom-server.bun.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.30%** | 55.45 kB | 55.62 kB | +0.32% | 17.07 kB | 17.12 kB\n| [oss-stable/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable/react-dom/cjs/react-dom-server.bun.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.30%** | 55.48 kB | 55.64 kB | +0.31% | 17.09 kB | 17.14 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom-server.bun.production.min.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.30%** | 55.88 kB | 56.04 kB | +0.31% | 17.23 kB | 17.28 kB\n| [facebook-www/ReactDOMServerStreaming-dev.modern.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/facebook-www/ReactDOMServerStreaming-dev.modern.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.25%** | 353.00 kB | 353.87 kB | +0.24% | 77.73 kB | 77.91 kB\n| [facebook-www/ReactDOMServer-dev.modern.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/facebook-www/ReactDOMServer-dev.modern.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.24%** | 357.90 kB | 358.77 kB | +0.24% | 78.96 kB | 79.14 kB\n| [facebook-www/ReactDOMServer-dev.classic.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/facebook-www/ReactDOMServer-dev.classic.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.24%** | 364.57 kB | 365.44 kB | +0.23% | 80.11 kB | 80.30 kB\n| [facebook-www/ReactDOMServerStreaming-prod.modern.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/facebook-www/ReactDOMServerStreaming-prod.modern.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 129.53 kB | 129.83 kB | +0.29% | 24.77 kB | 24.84 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable-semver/react-dom/cjs/react-dom-server.bun.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 334.06 kB | 334.83 kB | +0.20% | 75.96 kB | 76.11 kB\n| [oss-stable/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable/react-dom/cjs/react-dom-server.bun.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 334.08 kB | 334.86 kB | +0.20% | 75.98 kB | 76.13 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom-server.bun.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 335.41 kB | 336.19 kB | +0.20% | 76.34 kB | 76.50 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 336.92 kB | 337.69 kB | +0.20% | 76.52 kB | 76.67 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 336.94 kB | 337.72 kB | +0.20% | 76.54 kB | 76.69 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable-semver/react-dom/cjs/react-dom-server.browser.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 337.08 kB | 337.86 kB | +0.19% | 76.74 kB | 76.89 kB\n| [oss-stable/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable/react-dom/cjs/react-dom-server.browser.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 337.11 kB | 337.88 kB | +0.19% | 76.76 kB | 76.91 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.edge.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable-semver/react-dom/cjs/react-dom-server.edge.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 337.23 kB | 338.00 kB | +0.19% | 76.79 kB | 76.93 kB\n| [oss-stable/react-dom/cjs/react-dom-server.edge.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable/react-dom/cjs/react-dom-server.edge.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 337.25 kB | 338.03 kB | +0.19% | 76.80 kB | 76.95 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom-static.browser.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 337.74 kB | 338.52 kB | +0.20% | 76.94 kB | 77.09 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.edge.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom-static.edge.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 337.89 kB | 338.66 kB | +0.20% | 76.98 kB | 77.13 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 338.27 kB | 339.05 kB | +0.20% | 76.90 kB | 77.06 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom-server.browser.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 338.44 kB | 339.21 kB | +0.20% | 77.13 kB | 77.28 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable-semver/react-dom/cjs/react-dom-server.node.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 338.51 kB | 339.29 kB | +0.20% | 76.76 kB | 76.92 kB\n| [oss-stable/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable/react-dom/cjs/react-dom-server.node.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 338.53 kB | 339.31 kB | +0.20% | 76.79 kB | 76.94 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.edge.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom-server.edge.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 338.58 kB | 339.36 kB | +0.20% | 77.17 kB | 77.32 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 338.76 kB | 339.54 kB | +0.20% | 77.01 kB | 77.17 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 338.79 kB | 339.56 kB | +0.20% | 77.03 kB | 77.19 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom-static.node.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 339.82 kB | 340.60 kB | +0.19% | 77.24 kB | 77.39 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom-server.node.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 339.86 kB | 340.64 kB | +0.20% | 77.15 kB | 77.30 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 340.12 kB | 340.89 kB | +0.20% | 77.40 kB | 77.55 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 352.73 kB | 353.53 kB | +0.20% | 77.34 kB | 77.49 kB\n| [oss-stable/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 352.75 kB | 353.55 kB | +0.20% | 77.36 kB | 77.51 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable-semver/react-dom/umd/react-dom-server.browser.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 352.89 kB | 353.69 kB | +0.21% | 77.57 kB | 77.73 kB\n| [oss-stable/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-stable/react-dom/umd/react-dom-server.browser.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 352.92 kB | 353.72 kB | +0.21% | 77.59 kB | 77.75 kB\n| [oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 354.16 kB | 354.96 kB | +0.20% | 77.73 kB | 77.88 kB\n| [oss-experimental/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/78a9becde91032d032a7a89d3c98dcabf069b7c7/files/oss-experimental/react-dom/umd/react-dom-server.browser.development.js?compare=fccf3a9fba5fd778c678657c556344b333111cfb) | **+0.23%** | 354.33 kB | 355.13 kB | +0.21% | 77.95 kB | 78.12 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 78a9becde91032d032a7a89d3c98dcabf069b7c7\n</p>\n","updated_at":"2023-02-14T20:45:11Z","created_at":"2023-02-14T20:45:11Z","creator_user_login":"react-sizebot"}
{"number":25884,"comment_id":"1363174657","body":"it doesn't look like this issue has enough info for one of us to reproduce it though. This means that it's going to be very hard for us to fix.\r\nHere are some tips for providing a minimal example: https://stackoverflow.com/help/mcve","updated_at":"2022-12-22T17:45:29Z","created_at":"2022-12-22T17:45:29Z","creator_user_login":"thestarsahil"}
{"number":25884,"comment_id":"1365869244","body":"Got the same issue. Nothing to add except basic information about my app:\r\nReact@17.0.2\r\nreact-router@5.2.0\r\nmobx@6.6.2\r\nantd@4.23.1\r\ntypescript@4.8.3\r\nApp builded with webpack through ts-loader (means there is no Babel)","updated_at":"2022-12-27T12:31:07Z","created_at":"2022-12-27T12:31:07Z","creator_user_login":"inoyakaigor"}
{"number":25884,"comment_id":"1368075836","body":"This issue has arisen in our app only recently.\r\n\"react\": \"16.5.0\"\r\n\"redux\": \"4.0.0\"\r\n \"redux-persist\": \"5.10.0\"\r\n \"webpack\": \"4.12.0\",\r\n","updated_at":"2022-12-30T20:10:16Z","created_at":"2022-12-30T20:10:16Z","creator_user_login":"Moskowitza"}
{"number":25884,"comment_id":"1371409525","body":"I don't know about anyone else but I'm noticing this issue is happening roughly the same time as an auto update of the react-native-debugger package. \r\n\r\nThe react-native-debugger client was prompting an upgrade that I kept ignoring but after running `brew info react-native-debugger` I can see the package is subscribed to auto-updates and the version was automatically bumped to v0.13.0\r\n\r\nI'm also not seeing any way to deprecate the debugger client to an older version, so I also can't actually test the version theory. ","updated_at":"2023-01-04T20:56:55Z","created_at":"2023-01-04T20:56:55Z","creator_user_login":"christina-kirk"}
{"number":25884,"comment_id":"1419966414","body":"I noticed that the problem occurs - when I'm looking for components nested in the ReactNativeSvg tree","updated_at":"2023-02-07T00:02:21Z","created_at":"2023-02-07T00:02:21Z","creator_user_login":"interhub"}
{"number":25884,"comment_id":"1436087658","body":"Saw this today:\r\n\r\n```bash\r\nThe error was thrown at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:27994:43\r\n    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:25895:22)\r\n    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26064:14\r\n    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:56299:39)\r\n```\r\n\r\nNoticed my Chrome was out of date. After updating, no longer saw the error.\r\n\r\nNew version `Version 110.0.5481.100 (Official Build) (x86_64)` running MacOS 13.2 (22D49)","updated_at":"2023-02-19T20:40:58Z","created_at":"2023-02-19T20:39:50Z","creator_user_login":"johnson-jesse"}
{"number":25884,"comment_id":"1437113095","body":"Updating chrome resolved this for me also.","updated_at":"2023-02-20T14:30:00Z","created_at":"2023-02-20T14:30:00Z","creator_user_login":"christina-kirk"}
{"number":25884,"comment_id":"1440816541","body":"Still happens for me in up to date Firefox Version 110.0 (64-bit). Repeatable 100 % of the time. Do not have a minimal repro, just adding data points about liveness and frequency of the issue.","updated_at":"2023-02-22T21:24:24Z","created_at":"2023-02-22T21:24:24Z","creator_user_login":"TomasHubelbauer"}
{"number":25884,"comment_id":"1527537009","body":"Heve the same issue using `React Developer Tools` for Chrome in  `Storybook 7.0.7 for react-webpack5` \r\n\r\n\r\n![React Storybook error](https://user-images.githubusercontent.com/100308055/235155463-fc46bf34-b481-445b-bb76-bb30f5512b7a.png)\r\n","updated_at":"2023-04-28T13:06:11Z","created_at":"2023-04-28T13:06:11Z","creator_user_login":"UrUrZa"}
{"number":25884,"comment_id":"1531356147","body":"I am also facing the same issue. The browser update resolved it once. But it is coming again and again. ","updated_at":"2023-05-02T12:07:21Z","created_at":"2023-05-02T12:07:21Z","creator_user_login":"pankajsoni91"}
{"number":25884,"comment_id":"1531597619","body":"Also getting this with React Dev Tools + Storybook","updated_at":"2023-05-02T14:37:23Z","created_at":"2023-05-02T14:37:23Z","creator_user_login":"francisashley"}
{"number":25884,"comment_id":"1535687485","body":"> Also getting this with React Dev Tools + Storybook\r\n\r\nSame issue","updated_at":"2023-05-05T04:42:00Z","created_at":"2023-05-05T04:42:00Z","creator_user_login":"SwapnilSoni1999"}
{"number":25884,"comment_id":"1669180969","body":"Same here with following configuration: \r\n\r\n- node: 16.6.0\r\n- npm: 7.19.1\r\n- webpack: 5.32.0\r\n- webpack-cli: ^4.10.0\r\n- webpack-dev-server: 3.11.2","updated_at":"2023-08-08T08:45:27Z","created_at":"2023-08-08T08:42:14Z","creator_user_login":"alexandrubodnar1996"}
{"number":25884,"comment_id":"1682583946","body":"Different repro Firefox 116.0.2. I had a node selected, clicked somewhere in the page (which might have caused that node to unmount), and got this error.","updated_at":"2023-08-17T16:17:39Z","created_at":"2023-08-17T16:17:39Z","creator_user_login":"kiliancs"}
{"number":25619,"comment_id":"1301515260","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: d69b2cf8208848b0f71b5214ddff55a1ff437cc8...25edf34cfa3e81f587fda6b378fca5a590750f44\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.16%** | 154.33 kB | 154.58 kB | +0.15% | 48.96 kB | 49.03 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.16%** | 156.26 kB | 156.50 kB | +0.15% | 49.61 kB | 49.69 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/facebook-www/ReactDOM-prod.classic.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.11%** | 532.87 kB | 533.47 kB | +0.18% | 94.93 kB | 95.10 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/facebook-www/ReactDOM-prod.modern.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.12%** | 517.97 kB | 518.57 kB | +0.21% | 92.73 kB | 92.92 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [facebook-www/ReactDOMServerStreaming-dev.modern.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/facebook-www/ReactDOMServerStreaming-dev.modern.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.70%** | 332.13 kB | 334.44 kB | +0.94% | 73.92 kB | 74.62 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.69%** | 334.78 kB | 337.09 kB | +0.94% | 73.96 kB | 74.66 kB\n| [oss-stable/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.69%** | 334.80 kB | 337.11 kB | +0.94% | 73.98 kB | 74.68 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable-semver/react-dom/umd/react-dom-server.browser.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.69%** | 335.31 kB | 337.62 kB | +0.93% | 74.41 kB | 75.10 kB\n| [oss-stable/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/umd/react-dom-server.browser.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.69%** | 335.34 kB | 337.64 kB | +0.92% | 74.43 kB | 75.12 kB\n| [oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.69%** | 336.18 kB | 338.49 kB | +0.94% | 74.33 kB | 75.03 kB\n| [facebook-www/ReactDOMServer-dev.modern.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/facebook-www/ReactDOMServer-dev.modern.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.69%** | 336.88 kB | 339.19 kB | +0.93% | 75.00 kB | 75.70 kB\n| [oss-experimental/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/umd/react-dom-server.browser.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.68%** | 336.71 kB | 339.02 kB | +0.92% | 74.78 kB | 75.47 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable-semver/react-dom/cjs/react-dom-server.bun.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.68%** | 316.58 kB | 318.74 kB | +0.94% | 72.76 kB | 73.45 kB\n| [oss-stable/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/cjs/react-dom-server.bun.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.68%** | 316.61 kB | 318.77 kB | +0.94% | 72.78 kB | 73.47 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/cjs/react-dom-server.bun.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.68%** | 317.90 kB | 320.06 kB | +0.93% | 73.14 kB | 73.82 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.68%** | 319.26 kB | 321.42 kB | +0.96% | 73.17 kB | 73.88 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.68%** | 319.28 kB | 321.45 kB | +0.96% | 73.19 kB | 73.90 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable-semver/react-dom/cjs/react-dom-server.browser.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.68%** | 319.77 kB | 321.93 kB | +0.91% | 73.65 kB | 74.32 kB\n| [oss-stable/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/cjs/react-dom-server.browser.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.68%** | 319.79 kB | 321.96 kB | +0.91% | 73.67 kB | 74.34 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/cjs/react-dom-static.browser.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.67%** | 320.39 kB | 322.56 kB | +0.91% | 73.83 kB | 74.50 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.67%** | 320.58 kB | 322.74 kB | +0.95% | 73.55 kB | 74.25 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.67%** | 320.97 kB | 323.13 kB | +0.96% | 73.64 kB | 74.34 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.67%** | 320.99 kB | 323.15 kB | +0.95% | 73.66 kB | 74.36 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable-semver/react-dom/cjs/react-dom-server.node.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.67%** | 321.00 kB | 323.16 kB | +0.91% | 73.59 kB | 74.26 kB\n| [oss-stable/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/cjs/react-dom-server.node.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.67%** | 321.02 kB | 323.18 kB | +0.91% | 73.62 kB | 74.29 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/cjs/react-dom-server.browser.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.67%** | 321.09 kB | 323.25 kB | +0.91% | 74.02 kB | 74.69 kB\n| [facebook-www/ReactDOMServer-dev.classic.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/facebook-www/ReactDOMServer-dev.classic.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.67%** | 343.58 kB | 345.89 kB | +0.92% | 76.43 kB | 77.13 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/cjs/react-dom-static.node.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.67%** | 322.27 kB | 324.44 kB | +0.91% | 74.05 kB | 74.73 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.67%** | 322.29 kB | 324.45 kB | +0.95% | 74.01 kB | 74.71 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/cjs/react-dom-server.node.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.67%** | 322.31 kB | 324.48 kB | +0.91% | 73.96 kB | 74.63 kB\n| [facebook-www/ReactDOMServerStreaming-prod.modern.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/facebook-www/ReactDOMServerStreaming-prod.modern.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.63%** | 128.54 kB | 129.35 kB | +1.55% | 24.70 kB | 25.08 kB\n| [facebook-www/ReactDOMServer-prod.modern.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/facebook-www/ReactDOMServer-prod.modern.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.52%** | 123.42 kB | 124.06 kB | +1.48% | 23.39 kB | 23.73 kB\n| [facebook-www/ReactDOMServer-prod.classic.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/facebook-www/ReactDOMServer-prod.classic.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.52%** | 126.55 kB | 127.21 kB | +1.40% | 24.01 kB | 24.35 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable-semver/react-dom/cjs/react-dom-server.bun.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.52%** | 54.73 kB | 55.01 kB | +0.59% | 17.08 kB | 17.18 kB\n| [oss-stable/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/cjs/react-dom-server.bun.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.52%** | 54.75 kB | 55.04 kB | +0.58% | 17.11 kB | 17.21 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/cjs/react-dom-server.bun.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.52%** | 55.14 kB | 55.43 kB | +0.48% | 17.27 kB | 17.35 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.51%** | 55.43 kB | 55.72 kB | +0.57% | 17.05 kB | 17.15 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.node.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/cjs/react-dom-server-legacy.node.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.51%** | 55.46 kB | 55.74 kB | +0.57% | 17.08 kB | 17.17 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.51%** | 55.84 kB | 56.13 kB | +0.49% | 17.24 kB | 17.32 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.50%** | 56.26 kB | 56.54 kB | +0.47% | 17.86 kB | 17.95 kB\n| [oss-stable/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/cjs/react-dom-server.node.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.50%** | 56.28 kB | 56.56 kB | +0.46% | 17.88 kB | 17.97 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.50%** | 56.67 kB | 56.95 kB | +0.50% | 18.02 kB | 18.11 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.50%** | 56.67 kB | 56.96 kB | +0.48% | 18.02 kB | 18.11 kB\n| [oss-experimental/react-dom/umd/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/umd/react-dom-server-legacy.browser.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.33%** | 51.17 kB | 51.34 kB | +0.53% | 16.06 kB | 16.15 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.32%** | 50.82 kB | 50.98 kB | +0.50% | 15.92 kB | 16.00 kB\n| [oss-stable/react-dom/umd/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/umd/react-dom-server-legacy.browser.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.32%** | 50.84 kB | 51.00 kB | +0.50% | 15.94 kB | 16.02 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.32%** | 50.71 kB | 50.87 kB | +0.62% | 15.60 kB | 15.70 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/cjs/react-dom-server-legacy.browser.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.32%** | 50.74 kB | 50.90 kB | +0.61% | 15.62 kB | 15.72 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.32%** | 51.06 kB | 51.23 kB | +0.48% | 15.77 kB | 15.84 kB\n| [oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.32%** | 52.37 kB | 52.54 kB | +0.31% | 16.99 kB | 17.04 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable-semver/react-dom/umd/react-dom-server.browser.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.31%** | 52.02 kB | 52.18 kB | +0.36% | 16.85 kB | 16.91 kB\n| [oss-stable/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/umd/react-dom-server.browser.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.31%** | 52.05 kB | 52.21 kB | +0.36% | 16.87 kB | 16.93 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/cjs/react-dom-static.browser.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.31%** | 52.18 kB | 52.35 kB | +0.41% | 16.64 kB | 16.71 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable-semver/react-dom/cjs/react-dom-server.browser.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.31%** | 51.95 kB | 52.11 kB | +0.50% | 16.54 kB | 16.62 kB\n| [oss-stable/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/cjs/react-dom-server.browser.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.31%** | 51.98 kB | 52.14 kB | +0.49% | 16.56 kB | 16.64 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.31%** | 52.30 kB | 52.47 kB | +0.40% | 16.69 kB | 16.76 kB\n| [oss-stable-semver/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable-semver/react-dom/umd/react-dom.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.20%** | 1,258.25 kB | 1,260.79 kB | +0.23% | 269.37 kB | 270.00 kB\n| [oss-stable/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/umd/react-dom.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.20%** | 1,258.27 kB | 1,260.82 kB | +0.23% | 269.39 kB | 270.02 kB\n| [oss-experimental/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-experimental/react-dom/umd/react-dom.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.20%** | 1,268.86 kB | 1,271.41 kB | +0.24% | 271.37 kB | 272.01 kB\n| [oss-stable-semver/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable-semver/react-dom/cjs/react-dom.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.20%** | 1,199.91 kB | 1,202.31 kB | +0.24% | 266.42 kB | 267.05 kB\n| [oss-stable/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/25edf34cfa3e81f587fda6b378fca5a590750f44/files/oss-stable/react-dom/cjs/react-dom.development.js?compare=d69b2cf8208848b0f71b5214ddff55a1ff437cc8) | **+0.20%** | 1,199.93 kB | 1,202.34 kB | +0.24% | 266.44 kB | 267.07 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 25edf34cfa3e81f587fda6b378fca5a590750f44\n</p>\n","updated_at":"2022-12-07T00:51:44Z","created_at":"2022-11-03T00:19:13Z","creator_user_login":"sizebot"}
{"number":25619,"comment_id":"1384639265","body":"This will change with the other changes to how we \"key\" things, but I think we need to unify `<textarea>`, `<title>` and `<option>` here to have the same semantics. `<option>` also has a concept of using it as a \"key\".","updated_at":"2023-01-16T22:46:00Z","created_at":"2023-01-16T22:46:00Z","creator_user_login":"sebmarkbage"}
{"number":25447,"comment_id":"1272063088","body":"related issues:\r\n* https://github.com/facebook/react/issues/17429 this is about the same type of error (prop/dom) and has not been resolved as far as I can tell\r\n* https://github.com/facebook/react/issues/16753 This was the resolution linked for #17429 but it's not clear how this resolves the issue.\r\n\r\nIt's my view this issue is still active, not resolved.","updated_at":"2022-10-07T20:30:06Z","created_at":"2022-10-07T20:30:06Z","creator_user_login":"Sequoia"}
{"number":25447,"comment_id":"1272279944","body":"@Sequoia What makes the error messages so long is not the error message itself! it is the **error stack** which means you have a lot of nested components! This also explains why in your example [here](https://codesandbox.io/s/purple-moon-ts7xzs?file=/src/App.js) you only see a smaller error message as there is only 2 component! ","updated_at":"2022-10-08T10:05:00Z","created_at":"2022-10-08T09:46:30Z","creator_user_login":"neuodev"}
{"number":25447,"comment_id":"1307390347","body":"Another example of this issue:\r\n\r\n![Screen Shot 2022-11-08 at 10 19 45 AM](https://user-images.githubusercontent.com/317498/200603837-615b918e-f89f-4cfd-aec2-356e12a0014e.png)\r\n\r\nWhat makes it even worse is for some reason *I cannot collapse this message*. Attempting to collapse the error message does nothing.\r\n\r\nReact is breaking my console. ☹️ Please fix this. Not everything is a five-alarm error, and even those things that are should not make the console unusable like this.","updated_at":"2022-11-08T15:21:25Z","created_at":"2022-11-08T15:21:25Z","creator_user_login":"Sequoia"}
{"number":25447,"comment_id":"1307394253","body":"@AhmedIbrahim336 Thank you for the additional info. My complaint still stands: even with many nested components warning should not be logged as errors & they should not make the console unusable.\r\n\r\nHaving deeply nested component structures like this is **not uncommon** in large production React apps. Mine is not an edge case.","updated_at":"2022-11-08T15:23:37Z","created_at":"2022-11-08T15:23:37Z","creator_user_login":"Sequoia"}
{"number":25447,"comment_id":"1381252977","body":"> @AhmedIbrahim336 Thank you for the additional info. My complaint still stands: even with many nested components warning should not be logged as errors & they should not make the console unusable.\r\n> \r\n> Having deeply nested component structures like this is **not uncommon** in large production React apps. Mine is not an edge case.\r\n\r\n@Sequoia hey you are dead right.  I use intellij and it has a 'grep console' and to avoid this filling with nested garbage, you can tell it to fold any line that matches a pattern, and in this case, folding any line that starts with two spaces seems to do the trick - you get the warning in the console, but the rest of the stufff after it is folded away until you click on it.  Maybe you can use a similar filter\r\n<img width=\"1583\" alt=\"Screen Shot 2023-01-13 at 2 03 28 pm\" src=\"https://user-images.githubusercontent.com/8017974/212227649-95a2a546-deef-4a0f-b44e-fe448b8ca481.png\">\r\n\r\n^^  reduces 105 lines to 5 lines without hiding the actual error.  In fact it probably makes the warning more clear","updated_at":"2023-01-13T03:06:08Z","created_at":"2023-01-13T03:01:24Z","creator_user_login":"stefoid"}
{"number":25447,"comment_id":"1567071960","body":"@Sequoia \r\njust some juicy code to go around the problem until a real solution:\r\n```\r\nconsole.originalError = console.error;\r\nconsole.error = function (...params) {\r\n  const message=params.shift();\r\n  const consoleError =message.startsWith(\"Warning: \")\r\n      ?console.warn\r\n      :console.originalError;\r\n  consoleError(message, ...params);\r\n};\r\n```","updated_at":"2023-05-29T12:21:17Z","created_at":"2023-05-29T12:21:17Z","creator_user_login":"IvanD4RE"}
{"number":25447,"comment_id":"1650594517","body":"@IvanD4RE I evolved your solution a bit, and decided to stick with `console.error` so that the errors would show up by default in the console. However, I include some hidden text in the error so you can filter out the errors with `-ReactDOMWarning` in the devtools console filter section.\r\n\r\nAs long as this issue is open, this code snippet should at least be a quality of life improvement, and provide a bit of filtering control:\r\n\r\n```typescript\r\n// Development React warnings in the console are really loud and it's hard to\r\n// see the actual logs you care about.\r\n//\r\n// This patches `console.error` to detect and reformat the logs.\r\n//\r\n// This should not show up in production builds.\r\nif (process.env.NODE_ENV === 'development') {\r\n  const consoleError = console.error;\r\n\r\n  // Add a hidden filter in the output so that we can easily filter out the log\r\n  // messages with the negative \"-ReactDOMWarning\" filter.\r\n  const hiddenFilter = 'ReactDOMWarning';\r\n  const hiddenStyles = 'color: transparent; font-size: 0px; user-select: none';\r\n\r\n  console.error = (...args: Parameters<typeof consoleError>) => {\r\n    // Fallback to normal console error unless this error came from react-dom.\r\n    const trace = new Error().stack;\r\n    if (!trace || !trace.includes('react-dom.development.js')) {\r\n      return consoleError(...args);\r\n    }\r\n\r\n    // All react-dom warnings start with \"Warning:\"\r\n    const firstArg = args[0];\r\n    if (typeof firstArg !== 'string' || !firstArg.startsWith('Warning:')) {\r\n      return consoleError(...args);\r\n    }\r\n\r\n    // If we get here, we're reasonably sure that it's a ReactDOM warning.\r\n    const template = args.shift()?.replace(/%s$/, '');\r\n    const stacktrace = args.pop();\r\n\r\n    console.groupCollapsed(\r\n      `%c⚠️ ${template}%c${hiddenFilter}`,\r\n      'color: red; font-weight: normal',\r\n      ...args,\r\n      hiddenStyles\r\n    );\r\n    console.log(\r\n      `Tip: Add %c-${hiddenFilter}%c to the log Filter box to silence these ReactDOM error groups%c%{hiddenFilter}`,\r\n      'font-weight: bold',\r\n      'font-weight: normal',\r\n      hiddenStyles\r\n    );\r\n    consoleError(`%s%c${hiddenFilter}`, stacktrace, hiddenStyles);\r\n    console.groupEnd();\r\n  };\r\n}\r\n```","updated_at":"2023-07-25T21:52:51Z","created_at":"2023-07-25T21:36:09Z","creator_user_login":"dbalatero"}
{"number":25447,"comment_id":"1650598197","body":"> What makes the error messages so long is not the error message itself! it is the error stack which means you have a lot of nested components! This also explains why in your example [here](https://codesandbox.io/s/purple-moon-ts7xzs?file=/src/App.js) you only see a smaller error message as there is only 2 component!\r\n\r\nAlso I really disagree with this comment. Yes, in practice it would be nice to not have a lot of nested components, but out here in the real world this is never the case. For any reasonably complex React app (which many of us work on at day jobs), there's no getting around a deep component hierarchy.","updated_at":"2023-07-25T21:39:41Z","created_at":"2023-07-25T21:39:41Z","creator_user_login":"dbalatero"}
{"number":25629,"comment_id":"1303173036","body":"> Can provide if needed, however the issue seems to be that the wording of the error doesn't match the conditions that cause the error to be thrown in React code (see below), so a code example might not be necessary?\r\n\r\nPlease do provide a minimal example where the error would be misleading.","updated_at":"2022-11-04T09:33:38Z","created_at":"2022-11-04T09:33:38Z","creator_user_login":"eps1lon"}
{"number":25629,"comment_id":"1329098955","body":"Sorry for the delay - just back from holiday!\r\n\r\nI've put together a very simple replication as a sandbox here: \r\n\r\nhttps://codesandbox.io/s/charming-jang-y5evsf\r\n\r\nThe core of this is just having a component suspend without a suspense boundary:\r\n\r\n```js\r\nimport { Suspense } from \"react\";\r\n\r\nconst SuspenseTrigger = () => {\r\n  throw new Promise(() => {});\r\n};\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Suspense example</h1>\r\n      {/* <Suspense fallback={<div>loading...</div>}> */}\r\n      <SuspenseTrigger />\r\n      {/* </Suspense> */}\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\nThe sandbox seems to give slightly odd behaviour on reloading, so you'll need to do these steps in order to show the issue:\r\n\r\n1. Open the sandbox - this starts with no suspense happening (the suspending component is commented out), and should just display \"Suspense Example\"\r\n\r\n    <img width=\"318\" alt=\"Screenshot 2022-11-28 at 13 03 56\" src=\"https://user-images.githubusercontent.com/6785064/204284678-ed567e13-344b-4803-8bf2-2225c3996b6e.png\">\r\n\r\n2. In `App.js`, uncomment the `<SuspenseTrigger />` line. This suspends on render but there is no suspense boundary so we see the misleading error. This replicates what I'm seeing when Relay suspends to wait for a query result. The error should be as below:\r\n\r\n    <img width=\"685\" alt=\"Screenshot 2022-11-28 at 13 04 29\" src=\"https://user-images.githubusercontent.com/6785064/204284777-262ae9d6-593f-4e61-9cb5-7515a67312a3.png\">\r\n\r\n3. The simplest fix is to add a suspense boundary, rather than using `startTransition` as described in the error message. To check this, uncomment the remaining two commented lines in `App.js`. This gives a fallback component as expected, and resolves the error without requiring `startTransition`:\r\n\r\n    <img width=\"291\" alt=\"Screenshot 2022-11-28 at 13 13 44\" src=\"https://user-images.githubusercontent.com/6785064/204286513-928f35c1-627c-42a4-8141-c8f412604761.png\">\r\n\r\nAdding `startTransition` in cases where it makes sense seems to be a nice-to-have addition after a suspense boundary is in place, in that it will delay the transition until the suspending component is ready. However a) this doesn't seem to be the primary problem - that's the lack of suspense boundary, b) the suspense boundary is much easier to add and more general, and c) it seems like it may not always be possible to use a transition. For example where the problem occurs on first load as in the minimal example, or in my react-router case where we can benefit from using `startTransition` in some places, but it's difficult to make sure any possible navigation route is done as a transition, and missing any out will lead to an error unless we also add a suspense boundary.\r\n\r\nSo my feeling is that if the error message also suggested adding a suspense boundary, it would reinforce good practice, and in my case would also have got me much more quickly to the real issue of a misplaced `<Suspense>` component. There may well be other approaches I'm missing, in which case they could be added to the message or in a referenced docs page?\r\n","updated_at":"2022-11-28T13:33:17Z","created_at":"2022-11-28T13:33:17Z","creator_user_login":"bmwebster"}
{"number":25629,"comment_id":"1330946205","body":"I also ran into this error message when testing a component that uses Tanstack Query (React Query).\r\nThe component itself doesn't have a `<Suspense>`, the `<Suspense>` is located higher up in the tree.\r\nWhen rendering the component with React Testing Library, I would sometimes get the errror message telling me I needed to wrap my component with `startTransition`, which left me pretty confused... In the end, wrapping my tests with `<Suspense>` to make sure I always have a suspsense boudary got rid of this error.","updated_at":"2022-11-29T16:45:57Z","created_at":"2022-11-29T16:45:57Z","creator_user_login":"fthebaud"}
{"number":25629,"comment_id":"1369798163","body":"@eps1lon Hi, I just wanted to check whether the example given was enough to show the issue? Just let me know if there's anything else that would be useful.","updated_at":"2023-01-03T13:57:07Z","created_at":"2023-01-03T13:57:07Z","creator_user_login":"bmwebster"}
{"number":25629,"comment_id":"1378972615","body":"You can wrap your component in a <Suspense> boundary and provide a fall back as well","updated_at":"2023-01-11T15:38:02Z","created_at":"2023-01-11T15:38:02Z","creator_user_login":"Abeinevincent"}
{"number":25629,"comment_id":"1590607588","body":"I had this issue and like @bmwebster and @fthebaud, I think the error message is misleading. In my case I was able to fix the error without using `<Suspense>` or `startTransition`. Unfortunately, the app is private and complex so I can't post an example, but here are the basics:\r\n1. The app uses `recoil` for state management\r\n2. The error occurred while running unit tests with `react-testing-library` (and `jest` under the hood) and a custom `render` method to use `recoil` state during testing. \r\n3. The cause of the error was in a custom hook that accessed the same Recoil state in 2 different ways:\r\n   - Originally, the state was accessed using `useRecoilStateLoadable`. This did not cause an error.\r\n   - The error was caused later when a line of code was added to access the state using `useRecoilValue`. The error happened even if this 2nd instance of the same state was not used.\r\n\r\nIn this case, I just removed the 2nd instance of the same state and it fixed the error.\r\n\r\nI hope this might help someone troubleshooting. The error message led me down the wrong path for a while. I first tried using `<Suspense>` and `startTransition`. The app and testing code are both complex so it took some time to exhaust reasonable possibilities using `<Suspense>` and `startTransition` 😔","updated_at":"2023-06-14T07:11:57Z","created_at":"2023-06-14T07:11:45Z","creator_user_login":"drecali"}
{"number":27095,"comment_id":"1631246668","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fdc8c81e07e9b3b49604afe524ee6d130fd3e03e...c5d41a40a14ec0c99b1d8248867b383b625d331b\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 164.35 kB | 164.11 kB | = | 51.76 kB | 51.73 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 171.76 kB | 171.52 kB | = | 53.98 kB | 53.93 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 565.93 kB | = | 100.04 kB | 99.99 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 549.72 kB | = | 97.21 kB | 97.13 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/umd/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable/react-dom/umd/react-dom.profiling.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 173.24 kB | 172.88 kB | = | 54.49 kB | 54.38 kB\n| [oss-stable-semver/react-dom/umd/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable-semver/react-dom/umd/react-dom.profiling.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 173.16 kB | 172.80 kB | = | 54.46 kB | 54.35 kB\n| [oss-stable/react-dom/cjs/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable/react-dom/cjs/react-dom.profiling.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 173.98 kB | 173.62 kB | = | 54.18 kB | 54.14 kB\n| [oss-stable-semver/react-dom/cjs/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable-semver/react-dom/cjs/react-dom.profiling.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 173.91 kB | 173.54 kB | = | 54.15 kB | 54.12 kB\n| [facebook-www/ReactDOMTesting-dev.classic.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactDOMTesting-dev.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 1,452.99 kB | 1,449.95 kB | = | 314.65 kB | 314.39 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 114.88 kB | 114.64 kB | = | 35.07 kB | 35.05 kB\n| [facebook-www/ReactDOM-dev.classic.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactDOM-dev.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 1,434.64 kB | 1,431.60 kB | = | 310.20 kB | 309.93 kB\n| [facebook-www/ReactDOMTesting-dev.modern.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactDOMTesting-dev.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 1,425.09 kB | 1,422.06 kB | = | 309.07 kB | 308.80 kB\n| [facebook-www/ReactDOM-dev.modern.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactDOM-dev.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 1,406.75 kB | 1,403.71 kB | = | 304.65 kB | 304.39 kB\n| [oss-experimental/react-dom/cjs/react-dom-unstable_testing.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-experimental/react-dom/cjs/react-dom-unstable_testing.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 1,328.40 kB | 1,325.52 kB | = | 294.97 kB | 294.69 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable/react-reconciler/cjs/react-reconciler.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 110.69 kB | 110.45 kB | = | 33.82 kB | 33.80 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable-semver/react-reconciler/cjs/react-reconciler.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 110.66 kB | 110.42 kB | = | 33.80 kB | 33.78 kB\n| [oss-experimental/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-experimental/react-dom/umd/react-dom.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 1,373.59 kB | 1,370.59 kB | = | 293.55 kB | 293.29 kB\n| [oss-experimental/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-experimental/react-dom/cjs/react-dom.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 1,310.34 kB | 1,307.46 kB | = | 290.61 kB | 290.35 kB\n| [facebook-www/ReactDOMTesting-prod.classic.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactDOMTesting-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 582.03 kB | 580.74 kB | = | 103.75 kB | 103.69 kB\n| [oss-experimental/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-experimental/react-test-renderer/umd/react-test-renderer.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 103.99 kB | 103.76 kB | = | 32.26 kB | 32.22 kB\n| [oss-stable/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable/react-test-renderer/umd/react-test-renderer.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 103.86 kB | 103.63 kB | = | 32.21 kB | 32.15 kB\n| [oss-stable-semver/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable-semver/react-test-renderer/umd/react-test-renderer.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 103.81 kB | 103.58 kB | = | 32.18 kB | 32.12 kB\n| [oss-experimental/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-experimental/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 103.60 kB | 103.37 kB | = | 31.82 kB | 31.79 kB\n| [oss-stable/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable/react-dom/umd/react-dom.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 1,327.28 kB | 1,324.28 kB | = | 283.98 kB | 283.74 kB\n| [oss-stable-semver/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable-semver/react-dom/umd/react-dom.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 1,327.26 kB | 1,324.26 kB | = | 283.96 kB | 283.71 kB\n| [oss-stable/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 103.48 kB | 103.24 kB | = | 31.79 kB | 31.76 kB\n| [oss-stable-semver/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable-semver/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 103.43 kB | 103.19 kB | = | 31.76 kB | 31.73 kB\n| [oss-stable/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable/react-dom/cjs/react-dom.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 1,266.10 kB | 1,263.22 kB | = | 281.00 kB | 280.73 kB\n| [oss-stable-semver/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable-semver/react-dom/cjs/react-dom.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 1,266.07 kB | 1,263.19 kB | = | 280.97 kB | 280.70 kB\n| [facebook-www/ReactDOMTesting-prod.modern.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactDOMTesting-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.56 kB | 566.26 kB | = | 101.30 kB | 101.22 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactDOM-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 567.22 kB | 565.93 kB | = | 100.04 kB | 99.99 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactDOM-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 551.02 kB | 549.72 kB | = | 97.21 kB | 97.13 kB\n| [oss-experimental/react-art/cjs/react-art.production.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-experimental/react-art/cjs/react-art.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 98.31 kB | 98.08 kB | = | 30.18 kB | 30.14 kB\n| [oss-stable/react-art/cjs/react-art.production.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable/react-art/cjs/react-art.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 94.48 kB | 94.25 kB | = | 29.06 kB | 29.03 kB\n| [oss-stable-semver/react-art/cjs/react-art.production.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable-semver/react-art/cjs/react-art.production.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 94.43 kB | 94.20 kB | = | 29.03 kB | 29.00 kB\n| [facebook-www/ReactTestRenderer-dev.classic.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactTestRenderer-dev.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 805.24 kB | 803.23 kB | = | 174.85 kB | 174.57 kB\n| [facebook-www/ReactTestRenderer-dev.modern.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactTestRenderer-dev.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 805.23 kB | 803.22 kB | = | 174.85 kB | 174.57 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-dev.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-dev.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 798.54 kB | 796.53 kB | = | 173.91 kB | 173.63 kB\n| [oss-experimental/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-experimental/react-test-renderer/umd/react-test-renderer.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 824.49 kB | 822.34 kB | = | 174.55 kB | 174.29 kB\n| [oss-stable/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable/react-test-renderer/umd/react-test-renderer.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 824.10 kB | 821.95 kB | = | 174.46 kB | 174.20 kB\n| [oss-stable-semver/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable-semver/react-test-renderer/umd/react-test-renderer.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 824.08 kB | 821.93 kB | = | 174.43 kB | 174.17 kB\n| [oss-experimental/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-experimental/react-test-renderer/cjs/react-test-renderer.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 787.21 kB | 785.14 kB | = | 172.73 kB | 172.46 kB\n| [oss-stable/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable/react-test-renderer/cjs/react-test-renderer.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 786.85 kB | 784.77 kB | = | 172.65 kB | 172.38 kB\n| [oss-stable-semver/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable-semver/react-test-renderer/cjs/react-test-renderer.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 786.82 kB | 784.75 kB | = | 172.62 kB | 172.35 kB\n| [react-native/implementations/ReactNativeRenderer-dev.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/react-native/implementations/ReactNativeRenderer-dev.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 878.97 kB | 876.44 kB | = | 192.69 kB | 192.39 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 123.91 kB | 123.55 kB | = | 37.29 kB | 37.25 kB\n| [react-native/implementations/ReactFabric-dev.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/react-native/implementations/ReactFabric-dev.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 863.32 kB | 860.79 kB | = | 188.36 kB | 188.06 kB\n| [react-native/implementations/ReactNativeRenderer-dev.fb.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/react-native/implementations/ReactNativeRenderer-dev.fb.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 905.55 kB | 902.89 kB | = | 197.41 kB | 197.12 kB\n| [react-native/implementations/ReactFabric-dev.fb.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/react-native/implementations/ReactFabric-dev.fb.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 889.89 kB | 887.23 kB | = | 192.96 kB | 192.67 kB\n| [facebook-www/ReactDOM-profiling.classic.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactDOM-profiling.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 597.76 kB | 595.96 kB | = | 104.52 kB | 104.40 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 119.71 kB | 119.35 kB | = | 36.03 kB | 35.99 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable-semver/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 119.68 kB | 119.32 kB | = | 36.01 kB | 35.97 kB\n| [facebook-www/ReactDOM-profiling.modern.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactDOM-profiling.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 581.49 kB | 579.69 kB | = | 101.69 kB | 101.56 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-experimental/react-reconciler/cjs/react-reconciler.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 925.49 kB | 922.61 kB | = | 198.66 kB | 198.41 kB\n| [oss-experimental/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-experimental/react-art/umd/react-art.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 943.39 kB | 940.39 kB | = | 199.78 kB | 199.51 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable/react-reconciler/cjs/react-reconciler.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 902.01 kB | 899.13 kB | = | 193.92 kB | 193.67 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable-semver/react-reconciler/cjs/react-reconciler.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 901.99 kB | 899.11 kB | = | 193.89 kB | 193.63 kB\n| [oss-stable/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable/react-art/umd/react-art.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 920.32 kB | 917.32 kB | = | 195.43 kB | 195.15 kB\n| [oss-stable-semver/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable-semver/react-art/umd/react-art.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 920.29 kB | 917.29 kB | = | 195.40 kB | 195.12 kB\n| [facebook-www/ReactART-dev.classic.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactART-dev.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 916.55 kB | 913.51 kB | = | 195.62 kB | 195.36 kB\n| [facebook-www/ReactART-dev.modern.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactART-dev.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 905.34 kB | 902.30 kB | = | 193.32 kB | 193.05 kB\n| [react-native/implementations/ReactNativeRenderer-prod.fb.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/react-native/implementations/ReactNativeRenderer-prod.fb.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 334.85 kB | 333.69 kB | = | 59.57 kB | 59.49 kB\n| [oss-experimental/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-experimental/react-art/cjs/react-art.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 827.45 kB | 824.57 kB | = | 180.73 kB | 180.46 kB\n| [react-native/implementations/ReactNativeRenderer-prod.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/react-native/implementations/ReactNativeRenderer-prod.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 328.23 kB | 327.07 kB | = | 58.12 kB | 58.04 kB\n| [react-native/implementations/ReactFabric-prod.fb.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/react-native/implementations/ReactFabric-prod.fb.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 326.01 kB | 324.85 kB | = | 57.87 kB | 57.79 kB\n| [oss-stable/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable/react-art/cjs/react-art.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 805.47 kB | 802.59 kB | = | 176.37 kB | 176.09 kB\n| [oss-stable-semver/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/oss-stable-semver/react-art/cjs/react-art.development.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 805.44 kB | 802.56 kB | = | 176.35 kB | 176.07 kB\n| [react-native/implementations/ReactFabric-prod.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/react-native/implementations/ReactFabric-prod.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 319.29 kB | 318.13 kB | = | 56.39 kB | 56.33 kB\n| [facebook-www/ReactART-prod.classic.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactART-prod.classic.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 346.36 kB | 345.06 kB | = | 58.98 kB | 58.88 kB\n| [facebook-www/ReactART-prod.modern.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-www/ReactART-prod.modern.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 335.37 kB | 334.07 kB | = | 57.06 kB | 56.96 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-profiling.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-profiling.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 313.42 kB | 312.16 kB | = | 55.40 kB | 55.32 kB\n| [react-native/implementations/ReactNativeRenderer-profiling.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/react-native/implementations/ReactNativeRenderer-profiling.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 347.78 kB | 346.31 kB | = | 61.38 kB | 61.27 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-prod.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-prod.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 297.56 kB | 296.30 kB | = | 52.99 kB | 52.88 kB\n| [react-native/implementations/ReactFabric-profiling.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/react-native/implementations/ReactFabric-profiling.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 338.82 kB | 337.36 kB | = | 59.62 kB | 59.51 kB\n| [react-native/implementations/ReactNativeRenderer-profiling.fb.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/react-native/implementations/ReactNativeRenderer-profiling.fb.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 362.24 kB | 360.61 kB | = | 63.84 kB | 63.69 kB\n| [react-native/implementations/ReactFabric-profiling.fb.js](https://react-builds.vercel.app/commits/c5d41a40a14ec0c99b1d8248867b383b625d331b/files/react-native/implementations/ReactFabric-profiling.fb.js?compare=fdc8c81e07e9b3b49604afe524ee6d130fd3e03e) | **=** | 353.41 kB | 351.78 kB | = | 62.11 kB | 61.96 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against c5d41a40a14ec0c99b1d8248867b383b625d331b\n</p>\n","updated_at":"2023-07-11T17:51:40Z","created_at":"2023-07-11T17:51:40Z","creator_user_login":"react-sizebot"}
{"number":24780,"comment_id":"1175374289","body":"Does it work if you wrap the `create()` calls in `act`?\r\n\r\n","updated_at":"2022-07-05T18:39:54Z","created_at":"2022-07-05T18:39:54Z","creator_user_login":"eps1lon"}
{"number":24780,"comment_id":"1175397455","body":"@eps1lon And how exactly would that be?\r\n\r\nI tried two versions that didn't work\r\n\r\n1. `act` without async/await\r\n```\r\nact(() => {\r\n    const {root} = renderer.create(<App />, {\r\n      createNodeMock: () => {\r\n        // never gets called\r\n        console.log('createNodeMock');\r\n        return {\r\n          measure: (fn: Parameters<NativeMethods['measure']>[0]) => {\r\n            // never gets called\r\n            console.log('createNodeMock measure');\r\n            fn(x, y, width, height, pageX, pageY);\r\n          },\r\n        };\r\n      },\r\n    });\r\n\r\n    // ...\r\n  });\r\n```\r\n\r\nWhich gives the error \r\n\r\n> Can't access .root on unmounted test renderer\r\n\r\n2. `act` with async/await on the `create` method\r\n\r\n```\r\nawait act(async () => {\r\n    const {root} = await renderer.create(<App />, {\r\n      createNodeMock: () => {\r\n        // never gets called\r\n        console.log('createNodeMock');\r\n        return {\r\n          measure: (fn: Parameters<NativeMethods['measure']>[0]) => {\r\n            // never gets called\r\n            console.log('createNodeMock measure');\r\n            fn(x, y, width, height, pageX, pageY);\r\n          },\r\n        };\r\n      },\r\n    });\r\n\r\n    // ...\r\n  });\r\n```\r\n\r\nWhich just fails the test as before and never reaches `createNodeMock`\r\n\r\nIf both attempts aren't what you expected, please describe it better and I can test it for you.\r\nI can also push new tests with `act` wrapping `create` to the repo provided above if needed.","updated_at":"2022-07-05T18:57:39Z","created_at":"2022-07-05T18:57:39Z","creator_user_login":"EduVencovsky"}
{"number":24780,"comment_id":"1175399482","body":"`createNodeMock` should be called after `act()` exited.\r\n\r\nDoes it work wihout `react-native`?","updated_at":"2022-07-05T19:00:22Z","created_at":"2022-07-05T19:00:22Z","creator_user_login":"eps1lon"}
{"number":24780,"comment_id":"1175416708","body":"@eps1lon \r\n\r\n> `createNodeMock` should be called after `act()` exited.\r\n\r\nWhat do you mean by that? How exactly would that work?\r\n\r\n\r\nIn the [documentation](https://reactjs.org/docs/test-renderer.html#ideas) there's no `act`, but it uses `createNodeMock`. \r\n\r\nSo either the react documentation is wrong or something is not clear.\r\n\r\nWhat I also did to see if there's any difference is to do the same example, but with class components (as the docs is using class components), but it still doesn't work.\r\n\r\n","updated_at":"2022-07-05T19:24:40Z","created_at":"2022-07-05T19:24:40Z","creator_user_login":"EduVencovsky"}
{"number":24780,"comment_id":"1175423817","body":"> What do you mean by that? How exactly would that work?\r\n\r\n```javascript\r\nact(() => renderer.create(<App />, { createNodeMock: ... })\r\n// is `createNodeMock` called at this point?\r\n```","updated_at":"2022-07-05T19:34:08Z","created_at":"2022-07-05T19:34:08Z","creator_user_login":"eps1lon"}
{"number":24780,"comment_id":"1175434582","body":"@eps1lon \r\n\r\n> > What do you mean by that? How exactly would that work?\r\n> \r\n> ```js\r\n> act(() => renderer.create(<App />, { createNodeMock: ... })\r\n> // is `createNodeMock` called at this point?\r\n> ```\r\n\r\nNo, it doesn't work.\r\n\r\nQuick note on that, you probably shouldn't return inside `act`, as you can see in the [typescript definition](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/306e3c41e47ace3b73720e44a09b0a0eb22680df/types/react-test-renderer/index.d.ts#L75)\r\n```\r\n// VoidOrUndefinedOnly is here to forbid any sneaky return values\r\nexport function act(callback: () => Promise<VoidOrUndefinedOnly>): Promise<undefined>;\r\n```","updated_at":"2022-07-05T19:48:38Z","created_at":"2022-07-05T19:48:38Z","creator_user_login":"EduVencovsky"}
{"number":24780,"comment_id":"1175440969","body":"> Quick note on that, you probably shouldn't return inside act, as you can\r\n\r\nSure. It's not really relevant here. Just shorter to type.\r\n\r\n> No, it doesn't work.\r\n\r\nHm, that's odd. Checking the repro...","updated_at":"2022-07-05T19:55:13Z","created_at":"2022-07-05T19:55:13Z","creator_user_login":"eps1lon"}
{"number":24780,"comment_id":"1527251206","body":"@eps1lon I ran into the same issue with\r\n\r\n\"react\": \"18.2.0\"\r\n\"react-native\": \"0.71.7\"\r\n\"react-test-renderer\": \"18.2.0\"\r\n\r\nAn updated version of the original repro can be found here: https://github.com/croaker/createNodeMock-repro\r\n\r\nIt would be great if someone could investigate this, as it is a good way to test refs.","updated_at":"2023-04-28T09:18:36Z","created_at":"2023-04-28T09:18:36Z","creator_user_login":"croaker"}
{"number":25212,"comment_id":"1242808567","body":"This is really a request for a change to the JSX syntax definition and compilers like Babel, TypeScript, and ESBuild, not React itself.\r\n\r\nGiven that, this is _highly_ unlikely to ever happen, for a few reasons:\r\n\r\n- JSX is intended to be a fairly straightforward transformation into plain JS function calls, and this adds additional complexity\r\n- The JSX spec has been frozen for years, and even relatively simple proposed changes haven't happened\r\n- This would require coordination across a massive ecosystem of tools\r\n","updated_at":"2022-09-10T21:39:30Z","created_at":"2022-09-10T21:39:30Z","creator_user_login":"markerikson"}
{"number":25212,"comment_id":"1242809388","body":"@markerikson that makes complete sense. I really thought that React performed some kind of transformation on the processed JSX and had greater control over it (maybe it is possible from the React side, but in fact, ideally it would be part of the JSX if that was the case).","updated_at":"2022-09-10T21:47:09Z","created_at":"2022-09-10T21:47:09Z","creator_user_login":"rentalhost"}
{"number":25212,"comment_id":"1242810357","body":"Yeah, strictly speaking the JSX transform isn't part of \"React\" the software library at all.  JSX was invented for _use_ with React, but many tools now implement that syntax (even Vue!), and the output is just the function calls to `React.createElement()` or the equivalent for other libraries.\r\n\r\nIf you want to get a sense of some other proposed changes to the JSX spec (_none_ of which have become reality), see the discussions in this thread:\r\n\r\n- https://github.com/facebook/jsx/issues/65","updated_at":"2022-09-10T21:56:38Z","created_at":"2022-09-10T21:56:38Z","creator_user_login":"markerikson"}
{"number":25212,"comment_id":"1243011378","body":"I’m not sure the biggest problem here is with JSX being frozen. I think my main objection would be that it “feels” like specifying information in a wrong place.\r\n\r\nIn this proposal whether to stop propagation or not seems to be specified as part of the event key. So it’s as if we’re saying that `onClick.stop` is a separate event from `onClick`. What happens if you specify both? Do both run or does one override the other? Does it error?\r\n\r\nWhat if you do `<div onClick {…props}>` and `props` contains an object with the key `onClick.stop` because the parent passed it to your custom component? Do they clash? Or does this prop only work on built-ins? If it only works on built-ins, how are you supposed to refactor the code when you wrap a component? How do you destructure the prop in your component given `.` is not a valid part of the identifier?\r\n\r\nWhat if you want to render a third-party component that only takes `onClick` but you want it to stop propagation. Do you do it manually? Does it have to support both versions explicitly? Does the `.stop` syntax actually rewrite the function that you pass to it? What if you define this function separately like `onClick.stop={handleClick}`? Does this attach some metadata to the function itself? Does this wrap it into a special object and make it opaque?\r\n\r\nIs this syntax only for event handlers? What about other functions being passed down?\r\n\r\nI think there could be something to explore with event handler metadata. Like passive events (which we don’t support at all), or bubble/capture (which we support via `Capture` suffix) are two real dimensions. Declarative prevent/stop could maybe be a thing too. But I’d need to understand the proposed design a lot more. So far it’s not clear to me how this can work, and I’m not familiar with how it works with Vue. In particular we care *a lot* about code using custom components looking good and working well, so it needs to be a first-class consideration. We can’t have built-ins with more “conveniences” than custom components. ","updated_at":"2022-09-11T17:49:40Z","created_at":"2022-09-11T17:49:40Z","creator_user_login":"gaearon"}
{"number":25212,"comment_id":"1243027447","body":"@gaearon your question is very interesting. I'll answer based on what **vue** does in this case:\r\n\r\nWhen an element has only one `@click=\"handleClick\"`, for example, we get something like:\r\n\r\n```js\r\n_createElementVNode(\"div\", {\r\n    onClick: _cache[0] || (_cache[0] = (...args)=>(_ctx.handleClick && _ctx.handleClick(...args)))\r\n})\r\n```\r\n\r\nHowever, if we have a definition `@click` and `@click.stop` at the same time, we will have:\r\n\r\n```js\r\n_createElementVNode(\"div\", {\r\n    onClick: [\r\n        _cache[0] || (_cache[0] = (...args)=>(_ctx.handleClick && _ctx.handleClick(...args))), \r\n        _cache[1] || (_cache[1] = _withModifiers((...args)=>(_ctx.handleClick && _ctx.handleClick(...args)), [\"stop\"]))\r\n    ]\r\n})\r\n```\r\n\r\nWhich indicates that **vue** accepts this condition well, transforming _.onClick_ into an array of events, instead of a direct event (like the first case).\r\n\r\nNot only that, but `@click` (and events in general) allows the use of an array containing multiple definitions for methods, so the same event can perform different functions without a wrapper: `@click=\"[ handleClick($event), handleClickTwo($event) ]\"`\r\n\r\n```js\r\n_createElementVNode(\"div\", {\r\n    onClick: _cache[0] || (_cache[0] = $event=>([$setup.handleClick($event), $setup.handleClickTwo($event)]))\r\n})\r\n```\r\n\r\nAs for the example of `...props`, the code `@click=\"handleClick\" v-bind:onClick=\"handleClickTwo\"` is converted to:\r\n\r\n```js\r\n_createElementVNode(\"div\", {\r\n    onClick: [$setup.handleClick, $setup.handleClickTwo]\r\n}, \"teste\")\r\n```\r\n\r\nAs for third-party code, you can even define both `@click` and `@click.stop` with independent supports, but at this point it would be overkill. If the code user needs a `stop` beyond what is developed by the third party code, then he will have to do it directly by the JS.\r\n\r\nIn **vue**, events are declared explicitly using `@`. Which means that `@something` is necessarily an event, and `stop` and `prevent` support are applicable exclusively in these cases. In addition, there is other support for specific events such as `@keydown.enter`, `@keydown.space` etc. I don't think anything at this level can be done in React.\r\n\r\n\r\n","updated_at":"2022-09-11T19:28:11Z","created_at":"2022-09-11T19:28:11Z","creator_user_login":"rentalhost"}
{"number":23057,"comment_id":"1003753999","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 13036bfbc8ecbcf4451adb7bde397f438caa8607...07abeaeba0f6a4bdb2bb83999261bfdc9a10f0e0\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 129.59 kB | 129.59 kB | = | 41.55 kB | 41.54 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.77 kB | 134.77 kB | = | 43.10 kB | 43.10 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 428.19 kB | 428.19 kB | = | 78.60 kB | 78.60 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 418.18 kB | 418.18 kB | = | 77.17 kB | 77.17 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 428.19 kB | 428.19 kB | = | 78.61 kB | 78.60 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-experimental/react/umd/react.development.js | **=** | 112.51 kB | 112.24 kB | +0.01% | 28.78 kB | 28.78 kB\n| oss-stable-semver/react/umd/react.development.js | **=** | 111.83 kB | 111.56 kB | = | 28.71 kB | 28.71 kB\n| oss-stable/react/umd/react.development.js | **=** | 111.83 kB | 111.56 kB | = | 28.71 kB | 28.71 kB\n| oss-experimental/react/umd/react.production.min.js | **=** | 11.87 kB | 11.83 kB | +0.19% | 4.64 kB | 4.65 kB\n| oss-experimental/react/umd/react.profiling.min.js | **=** | 11.86 kB | 11.83 kB | +0.17% | 4.65 kB | 4.65 kB\n| oss-stable-semver/react/umd/react.production.min.js | **=** | 11.27 kB | 11.24 kB | = | 4.48 kB | 4.47 kB\n| oss-stable/react/umd/react.production.min.js | **=** | 11.27 kB | 11.24 kB | = | 4.48 kB | 4.47 kB\n| oss-stable-semver/react/umd/react.profiling.min.js | **=** | 11.27 kB | 11.24 kB | = | 4.48 kB | 4.48 kB\n| oss-stable/react/umd/react.profiling.min.js | **=** | 11.27 kB | 11.24 kB | = | 4.48 kB | 4.48 kB\n| oss-experimental/scheduler/umd/scheduler-unstable_mock.production.min.js | **=** | 4.83 kB | 4.79 kB | = | 2.04 kB | 2.03 kB\n| oss-stable-semver/scheduler/umd/scheduler-unstable_mock.production.min.js | **=** | 4.83 kB | 4.79 kB | = | 2.04 kB | 2.03 kB\n| oss-stable/scheduler/umd/scheduler-unstable_mock.production.min.js | **=** | 4.83 kB | 4.79 kB | = | 2.04 kB | 2.03 kB\n| oss-experimental/scheduler/cjs/scheduler-unstable_mock.production.min.js | **=** | 4.79 kB | 4.75 kB | = | 1.94 kB | 1.93 kB\n| oss-stable-semver/scheduler/cjs/scheduler-unstable_mock.production.min.js | **=** | 4.79 kB | 4.75 kB | = | 1.94 kB | 1.93 kB\n| oss-stable/scheduler/cjs/scheduler-unstable_mock.production.min.js | **=** | 4.79 kB | 4.75 kB | = | 1.94 kB | 1.93 kB\n| oss-experimental/scheduler/cjs/scheduler.production.min.js | **=** | 4.24 kB | 4.20 kB | +0.06% | 1.78 kB | 1.78 kB\n| oss-stable-semver/scheduler/cjs/scheduler.production.min.js | **=** | 4.24 kB | 4.20 kB | +0.06% | 1.78 kB | 1.78 kB\n| oss-stable/scheduler/cjs/scheduler.production.min.js | **=** | 4.24 kB | 4.20 kB | +0.06% | 1.78 kB | 1.78 kB\n| facebook-www/Scheduler-dev.classic.js | **=** | 24.67 kB | 24.43 kB | +0.24% | 6.62 kB | 6.64 kB\n| facebook-www/Scheduler-dev.modern.js | **=** | 24.67 kB | 24.43 kB | +0.24% | 6.62 kB | 6.64 kB\n| facebook-www/SchedulerMock-dev.classic.js | **=** | 22.70 kB | 22.46 kB | +0.26% | 5.37 kB | 5.39 kB\n| facebook-www/SchedulerMock-dev.modern.js | **=** | 22.70 kB | 22.46 kB | +0.26% | 5.37 kB | 5.39 kB\n| facebook-react-native/scheduler/cjs/Scheduler-dev.js | **=** | 17.52 kB | 17.28 kB | +0.26% | 4.94 kB | 4.95 kB\n| facebook-react-native/scheduler/cjs/SchedulerMock-dev.js | **=** | 17.51 kB | 17.27 kB | +0.21% | 4.20 kB | 4.20 kB\n| oss-experimental/scheduler/cjs/scheduler.development.js | **=** | 17.50 kB | 17.25 kB | +0.22% | 4.93 kB | 4.94 kB\n| oss-stable-semver/scheduler/cjs/scheduler.development.js | **=** | 17.50 kB | 17.25 kB | +0.22% | 4.93 kB | 4.94 kB\n| oss-stable/scheduler/cjs/scheduler.development.js | **=** | 17.50 kB | 17.25 kB | +0.22% | 4.93 kB | 4.94 kB\n| oss-experimental/scheduler/cjs/scheduler-unstable_mock.development.js | **=** | 17.46 kB | 17.21 kB | +0.24% | 4.20 kB | 4.21 kB\n| oss-stable-semver/scheduler/cjs/scheduler-unstable_mock.development.js | **=** | 17.46 kB | 17.21 kB | +0.24% | 4.20 kB | 4.21 kB\n| oss-stable/scheduler/cjs/scheduler-unstable_mock.development.js | **=** | 17.46 kB | 17.21 kB | +0.24% | 4.20 kB | 4.21 kB\n| oss-experimental/scheduler/umd/scheduler-unstable_mock.development.js | **=** | 18.78 kB | 18.50 kB | +0.19% | 4.31 kB | 4.31 kB\n| oss-stable-semver/scheduler/umd/scheduler-unstable_mock.development.js | **=** | 18.78 kB | 18.50 kB | +0.19% | 4.31 kB | 4.31 kB\n| oss-stable/scheduler/umd/scheduler-unstable_mock.development.js | **=** | 18.78 kB | 18.50 kB | +0.19% | 4.31 kB | 4.31 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 07abeaeba0f6a4bdb2bb83999261bfdc9a10f0e0\n</p>\n","updated_at":"2022-01-22T16:12:00Z","created_at":"2022-01-02T18:07:45Z","creator_user_login":"sizebot"}
{"number":23057,"comment_id":"1004884515","body":"I don't see how this is more optimal? Care to explain? Looks like it's just moving the logic around making it potentially less readable","updated_at":"2022-01-04T15:02:03Z","created_at":"2022-01-04T15:01:29Z","creator_user_login":"salazarm"}
{"number":23057,"comment_id":"1005403339","body":"> I don't see how this is more optimal? Care to explain? Looks like it's just moving the logic around making it potentially less readable\r\n\r\nUse zero-fill left shift instead of multiplication.Move the common logic making it shorter and single responsibility.Less `if...else`.I add some annotations making it more readable.\r\n``` javascript\r\nfunction siftUp(heap, node, i) {\r\n  let index = i;\r\n  let parentIndex = (index - 1) >>> 1;\r\n  // The parent is larger and index more than 0. Swap positions.\r\n  while (index > 0 && compare(heap[parentIndex], node) > 0) {\r\n    swap(heap, parentIndex, index);\r\n    index = parentIndex;\r\n    parentIndex = (index - 1) >>> 1;\r\n  }\r\n}\r\n\r\nfunction siftDown(heap, node, i) {\r\n  let index = i;\r\n  const length = heap.length;\r\n  const halfLength = length >>> 1;\r\n  while (index < halfLength) {\r\n    const leftIndex = (index << 1) + 1;\r\n    const rightIndex = leftIndex + 1;\r\n    // Find least index.Assume left child is least.\r\n    let leastIndex = leftIndex;\r\n    if (rightIndex < length && compare(heap[rightIndex], heap[leftIndex]) < 0) {\r\n      leastIndex = rightIndex;\r\n    }\r\n    // Least greater or equal to node.Exit.\r\n    if (compare(heap[leastIndex], node) >= 0) return;\r\n    // Swap node and least.\r\n    swap(heap, leastIndex, index);\r\n    index = leastIndex;\r\n  }\r\n}\r\n```\r\nRefer `siftDownComparable` in [`PriorityQueue.java`](http://hg.openjdk.java.net/jdk8/jdk8/jdk/file/687fd7c7986d/src/share/classes/java/util/PriorityQueue.java). ","updated_at":"2022-01-05T06:07:34Z","created_at":"2022-01-05T05:55:15Z","creator_user_login":"JX-Zhuang"}
{"number":23057,"comment_id":"1019297560","body":"@acdlite please review,thx :)","updated_at":"2022-01-22T23:52:24Z","created_at":"2022-01-22T15:58:34Z","creator_user_login":"JX-Zhuang"}
{"number":24580,"comment_id":"1130450420","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 4cd788aef03d8f32c03e4dac4d0cf28b220cedfb...a87598f4b60bd29656af60f2f9cc7752e0e64f33\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.08%** | 131.79 kB | 131.89 kB | +0.09% | 42.40 kB | 42.44 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.08%** | 137.06 kB | 137.16 kB | +0.10% | 44.00 kB | 44.04 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/facebook-www/ReactDOM-prod.classic.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.05%** | 457.17 kB | 457.39 kB | +0.04% | 83.22 kB | 83.25 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/facebook-www/ReactDOM-prod.modern.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.05%** | 442.41 kB | 442.63 kB | +0.03% | 80.94 kB | 80.96 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/facebook-www/ReactDOMForked-prod.classic.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.05%** | 457.94 kB | 458.16 kB | +0.03% | 83.33 kB | 83.36 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [facebook-www/ReactDOMServer-prod.classic.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/facebook-www/ReactDOMServer-prod.classic.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.31%** | 48.03 kB | 48.18 kB | +0.24% | 11.21 kB | 11.24 kB\n| [facebook-www/ReactDOMServer-dev.classic.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/facebook-www/ReactDOMServer-dev.classic.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.29%** | 157.79 kB | 158.24 kB | +0.37% | 39.99 kB | 40.13 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer.production.min.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer.production.min.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.24%** | 12.35 kB | 12.38 kB | +0.14% | 3.68 kB | 3.69 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.production.min.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.production.min.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.24%** | 12.35 kB | 12.38 kB | +0.14% | 3.68 kB | 3.69 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer.production.min.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer.production.min.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.24%** | 12.35 kB | 12.38 kB | +0.14% | 3.68 kB | 3.69 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.24%** | 12.42 kB | 12.45 kB | +0.14% | 3.70 kB | 3.70 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.24%** | 12.42 kB | 12.45 kB | +0.14% | 3.70 kB | 3.70 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.24%** | 12.42 kB | 12.45 kB | +0.14% | 3.70 kB | 3.70 kB\n| [oss-experimental/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/oss-experimental/react/cjs/react.shared-subset.production.min.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.22%** | 6.40 kB | 6.42 kB | +0.27% | 2.62 kB | 2.62 kB\n| [oss-stable-semver/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/oss-stable-semver/react-server/cjs/react-server.development.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.22%** | 130.50 kB | 130.78 kB | +0.29% | 32.67 kB | 32.77 kB\n| [oss-stable/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/oss-stable/react-server/cjs/react-server.development.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.22%** | 130.50 kB | 130.78 kB | +0.29% | 32.67 kB | 32.77 kB\n| [oss-experimental/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/oss-experimental/react-server/cjs/react-server.development.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.21%** | 131.37 kB | 131.65 kB | +0.29% | 32.88 kB | 32.97 kB\n| [oss-stable-semver/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/oss-stable-semver/react/cjs/react.production.min.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.20%** | 6.91 kB | 6.93 kB | +0.30% | 2.70 kB | 2.70 kB\n| [oss-stable/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/a87598f4b60bd29656af60f2f9cc7752e0e64f33/files/oss-stable/react/cjs/react.production.min.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.20%** | 6.94 kB | 6.95 kB | +0.33% | 2.72 kB | 2.73 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against a87598f4b60bd29656af60f2f9cc7752e0e64f33\n</p>\n","updated_at":"2022-07-03T08:54:40Z","created_at":"2022-05-18T19:38:30Z","creator_user_login":"sizebot"}
{"number":24580,"comment_id":"1130659988","body":"If we support this, should we also support them as keys? What are the arguments for and against? What about attribute values? Does it already work there?","updated_at":"2022-05-18T22:44:45Z","created_at":"2022-05-18T22:44:45Z","creator_user_login":"gaearon"}
{"number":24580,"comment_id":"1131311086","body":">  What about attribute values? Does it already work there?\r\n\r\nIt works for attributes that don't get any special treatments (tested with `data-test`). But from looking through all the `typeof val === 'number'` occurences in the codebase, it probably doesn't work for `<input value />` or `<option value />`. I left this as a TODO in the PR description.\r\n\r\n> If we support this, should we also support them as keys? What are the arguments for and against? \r\n\r\nI'd probably just support BigInt for `key` for consistency with `children` and other attributes. An argument against it would be that bigints as keys allows lists with a huge number of items though that argument isn't all that convincing since lists with `Number.MAX_SAFE_INTEGER` items are probably already too big.\r\nAn argument for BigInt as key would be if you have items whos ID is a `BigInt`\r\n\r\nI find the following two argument against bigint support the most convincing:\r\n- implementation work (now and future): almost every `typeof value === 'number'` check needs to consider `'bigint'` whereas it's fairly trivial to just do `String(someBigInt)` in your codebase\r\n- unclear how this works with React Server Components (you can't `JSON.stringify` `BigInt` so you need to special case (de-)serialization ","updated_at":"2022-05-19T07:09:23Z","created_at":"2022-05-19T07:09:23Z","creator_user_login":"eps1lon"}
{"number":19056,"comment_id":"639474427","body":"As a workaround to the problem of not being able to call a hook conditionally, I am using the following workaround which wraps the hook into a conditional component call via a render prop:\r\n\r\nhttps://unsplash.com/blog/calling-react-hooks-conditionally-dynamically-using-render-props/\r\n\r\n```tsx\r\nconst RenderFunction = ({ children }) => children();\r\n\r\nconst MyComponent = ({ shouldRenderHook }) =>\r\n  shouldRenderHook ? (\r\n    <RenderFunction>\r\n      {() => {\r\n        // `react-hooks/rules-of-hooks` error:\r\n        // React Hook \"React.useState\" cannot be called inside a callback. React Hooks must be\r\n        // called in a React function component or a custom React Hook function.\r\n        const [state, setState] = React.useState(0);\r\n        return (\r\n          <div>\r\n            State: {state}\r\n            <button onClick={() => setState(currentState => currentState + 1)}>\r\n              Increment\r\n            </button>\r\n          </div>\r\n        );\r\n      }}\r\n    </RenderFunction>\r\n  ) : (\r\n    <div>Rendering the hook shortly…</div>\r\n  );\r\n```\r\n\r\nhttps://stackblitz.com/edit/react-conditional-hooks-simple\r\n\r\nIIUC, this is perfectly safe because the `children` render prop callback is called every time the `RenderFunction` component is called, yet the ESLint rule throws an error.\r\n\r\nIt would be great if there was a way to tell the ESLint rules that this is safe.\r\n\r\nFor context: I understand that an alternative workaround would be just to extract another component, but that is not always desirable because then you lose access to the component's closure, which means you have to drill things down.\r\n\r\n","updated_at":"2021-01-29T09:36:26Z","created_at":"2020-06-05T13:18:03Z","creator_user_login":"OliverJAsh"}
{"number":19056,"comment_id":"751260771","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T15:06:27Z","created_at":"2020-12-25T15:06:27Z","creator_user_login":"stale[bot]"}
{"number":19056,"comment_id":"751270058","body":"Bump ","updated_at":"2020-12-25T16:41:53Z","created_at":"2020-12-25T16:41:53Z","creator_user_login":"xaviergonz"}
{"number":19056,"comment_id":"769663961","body":"Using `function _ ()` instead of `() =>` seems to be fine with eslint.\r\n```js\r\nconst RenderFunction = ({ children }) => children();\r\n\r\nconst MyComponent = ({ shouldRenderHook }) =>\r\n  shouldRenderHook ? (\r\n    <RenderFunction>\r\n      {function _ () {\r\n        const [state, setState] = React.useState(0);\r\n        return (\r\n          <div>\r\n            State: {state}\r\n            <button onClick={() => setState(currentState => currentState + 1)}>\r\n              Increment\r\n            </button>\r\n          </div>\r\n        );\r\n      }}\r\n    </RenderFunction>\r\n  ) : (\r\n    <div>Rendering the hook shortly…</div>\r\n  );\r\n```","updated_at":"2021-01-29T08:41:47Z","created_at":"2021-01-29T08:41:47Z","creator_user_login":"frabbit"}
{"number":19056,"comment_id":"839203039","body":"Bump","updated_at":"2021-05-11T21:48:57Z","created_at":"2021-05-11T21:48:57Z","creator_user_login":"SamuelPinho"}
{"number":19056,"comment_id":"1039158642","body":"I think another use case for this is defining and invoking components inline inside ```React.createElemenet```.\r\n\r\nFor example, this seems  handy for accessing React Router path params as close as possible to where they are defined and decoupling the components that consume the param values from the path param keys:\r\n```\r\n<Route\r\n  path={`/some_path/:my_param`}\r\n  element={React.createElement(() => <MyComponent aProp={useParams()['my_param']!} />}\r\n/>\r\n```\r\n","updated_at":"2022-02-14T14:35:20Z","created_at":"2022-02-14T14:35:20Z","creator_user_login":"chipilov"}
{"number":19056,"comment_id":"1269399177","body":"> If a named function is used it works, but it is far from ideal (e.g. name repetition):\r\n\r\nI'd argue that this is good nudging behavior since it will result in better display names in devtools. `someHoC(() => <div />)` will not have a display name. Error messages, component trees in devtools etc will always list it as \"Unknown\" or \"Anonymous\". \r\n\r\nSo if you spell it out with `someHoC(function MyFancyComponent() {})` you'll be able to find it in devtools again under `MyFancyComponent`.\r\n\r\nWith the same reason you should call `forwardRef` with a named function expression instead of an arrow function. ","updated_at":"2022-10-06T06:23:10Z","created_at":"2022-10-06T06:23:10Z","creator_user_login":"eps1lon"}
{"number":19056,"comment_id":"1312483247","body":"What's the status of this Issue?","updated_at":"2022-11-12T13:56:03Z","created_at":"2022-11-12T13:56:03Z","creator_user_login":"Lucienest"}
{"number":23068,"comment_id":"1009273209","body":"@sebmarkbage @acdlite Any idea here? \r\n\r\nCurrently the only mitigation against this problem is to wrap the component causing a mismatch with a `<Suspense>` boundary and use `unstable_avoidThisFallback` to stop it from actually \"Suspending\" during server rendering (ie. treating it as a fragment for initial rendering but giving it a suspense boundary on the client). The result would be that on the client, on mismatch, we would render the component again but as a separate client render after the mismatch is detected. If data / requests are cached outside of React then it wouldn't be that bad, but the additional render is a bit meh. Our current thinking is that mismatches shouldn't happen but I think in practice especially when using third party libraries they are very hard to avoid (at least now, until library authors realize the damage they cause with this kind of behavior). \r\n\r\nI think the approach of \"gracefulHydrationErrors\" around a specific component could make sense imo.","updated_at":"2022-01-10T19:32:11Z","created_at":"2022-01-10T19:32:11Z","creator_user_login":"salazarm"}
{"number":23068,"comment_id":"1009280042","body":"I don't understand the premise of the question. I'd like to get more clarity on what's being asked before we discuss any potential APIs.\r\n\r\nThe canonical solution to a difference in client/server output is indeed `useEffect` that switches state on the client. Yes, it would \"flash\" from the server output — but this seems inherent to what you're trying to do? If initial render is HTML and it takes a while for JS to load, there's no escaping that there will be server output shown first, and _after a while_ the client kicks in. There's no way not to have the \"flash\" in principle.\r\n\r\nSo I don't understand what is being asked and why `useEffect` is not enough here. Maybe you can describe the current behavior and the ideal behavior from the user perspective? What does the user see before and after JS loads/runs? And how does the desired solution differ from user's perspective from the `useEffect` solution?","updated_at":"2022-01-10T19:42:02Z","created_at":"2022-01-10T19:41:41Z","creator_user_login":"gaearon"}
{"number":23068,"comment_id":"1009280597","body":"getViewStateFromLocalStorage is reading mutable state during render which has other issues and considerations.\r\n\r\nuseSyncExternalStore is the API suggested to deal with external mutable state.\r\n\r\nThat API has an SSR option which is where you’re supposed to return the value that should be used on the server and the value that should be used during hydration. You can always return a default value for SSR there.\r\n\r\nThe non-hydration case doesn’t use the SSR path and so it reads the current value.\r\n\r\nIt doesn’t seem documented yet but it’s there:\r\n\r\nhttps://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberHooks.new.js#L1264","updated_at":"2022-01-10T19:57:21Z","created_at":"2022-01-10T19:41:58Z","creator_user_login":"sebmarkbage"}
{"number":23068,"comment_id":"1009283659","body":"Ah I think I understand the question after re-reading a few times.. So it's about how to write a component that would \"skip\" the unnecessary effect for next client-only mounts (since those don't need to \"wait\" for anything).","updated_at":"2022-01-10T19:46:16Z","created_at":"2022-01-10T19:46:16Z","creator_user_login":"gaearon"}
{"number":23068,"comment_id":"1009284944","body":"> Ah I think I understand the question after re-reading a few times.. So it's about how to write a component that would \"skip\" the unnecessary effect for next client-only mounts (since those don't need to \"wait\" for anything).\r\n\r\nExactly! Sorry if I didn‘t describe it clearly enough.","updated_at":"2022-01-10T19:48:19Z","created_at":"2022-01-10T19:48:19Z","creator_user_login":"fabb"}
{"number":23068,"comment_id":"1177372439","body":"> Ah I think I understand the question after re-reading a few times.. So it's about how to write a component that would \"skip\" the unnecessary effect for next client-only mounts (since those don't need to \"wait\" for anything).\r\n\r\n@gaearon do you have a suggestion on how to implement this best, or is it currently not possible with react?","updated_at":"2022-07-07T10:30:01Z","created_at":"2022-07-07T10:30:01Z","creator_user_login":"fabb"}
{"number":23068,"comment_id":"1177788585","body":"I think useSyncExternalStore should work for this?","updated_at":"2022-07-07T15:25:32Z","created_at":"2022-07-07T15:25:32Z","creator_user_login":"gaearon"}
{"number":23068,"comment_id":"1177817500","body":"You mean using `getServerSnapshot`?","updated_at":"2022-07-07T15:42:34Z","created_at":"2022-07-07T15:42:34Z","creator_user_login":"fabb"}
{"number":23144,"comment_id":"1016810039","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: d807eb52cfd999cfbcb19078a75b15f844e409bb...97a2263fc26327ce8bdabec4374888dc04382e0b\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 154.26 kB | 154.26 kB | = | 48.94 kB | 48.94 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 156.18 kB | 156.18 kB | = | 49.60 kB | 49.60 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/facebook-www/ReactDOM-prod.classic.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 532.79 kB | 532.79 kB | = | 94.91 kB | 94.91 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/facebook-www/ReactDOM-prod.modern.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 517.88 kB | 517.88 kB | = | 92.70 kB | 92.70 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/facebook-www/ReactDOMForked-prod.classic.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 532.79 kB | 532.79 kB | = | 94.91 kB | 94.91 kB\n| [oss-experimental/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-server/cjs/react-server.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 24.51 kB | 23.97 kB | = | 8.39 kB | 8.11 kB\n| [oss-stable-semver/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable-semver/react-server/cjs/react-server.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 24.27 kB | 23.72 kB | = | 8.30 kB | 8.02 kB\n| [oss-stable/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable/react-server/cjs/react-server.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 24.27 kB | 23.72 kB | = | 8.30 kB | 8.02 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-dom/umd/react-dom-server.browser.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 336.71 kB | 335.82 kB | = | 74.77 kB | 74.51 kB\n| [oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 336.18 kB | 335.29 kB | = | 74.33 kB | 74.05 kB\n| [oss-stable/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable/react-dom/umd/react-dom-server.browser.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 335.34 kB | 334.45 kB | = | 74.43 kB | 74.15 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable-semver/react-dom/umd/react-dom-server.browser.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 335.31 kB | 334.42 kB | = | 74.41 kB | 74.13 kB\n| [oss-stable/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 334.80 kB | 333.91 kB | = | 73.98 kB | 73.70 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 334.78 kB | 333.89 kB | = | 73.96 kB | 73.67 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-dom/cjs/react-dom-server.node.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 322.31 kB | 321.42 kB | = | 73.96 kB | 73.69 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 322.29 kB | 321.39 kB | = | 74.01 kB | 73.75 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-dom/cjs/react-dom-static.node.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 322.27 kB | 321.38 kB | = | 74.05 kB | 73.78 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-dom/cjs/react-dom-server.browser.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 321.09 kB | 320.20 kB | = | 74.02 kB | 73.75 kB\n| [oss-stable/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable/react-dom/cjs/react-dom-server.node.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 321.02 kB | 320.13 kB | = | 73.61 kB | 73.33 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable-semver/react-dom/cjs/react-dom-server.node.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 321.00 kB | 320.10 kB | = | 73.59 kB | 73.31 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 320.99 kB | 320.10 kB | = | 73.66 kB | 73.38 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 320.97 kB | 320.08 kB | = | 73.64 kB | 73.36 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 320.58 kB | 319.69 kB | = | 73.55 kB | 73.28 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-dom/cjs/react-dom-static.browser.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 320.39 kB | 319.50 kB | = | 73.83 kB | 73.56 kB\n| [oss-stable/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable/react-dom/cjs/react-dom-server.browser.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 319.79 kB | 318.90 kB | = | 73.67 kB | 73.39 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable-semver/react-dom/cjs/react-dom-server.browser.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 319.77 kB | 318.88 kB | = | 73.65 kB | 73.37 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 319.28 kB | 318.39 kB | = | 73.19 kB | 72.92 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 319.26 kB | 318.37 kB | = | 73.17 kB | 72.89 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-dom/cjs/react-dom-server.bun.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 317.90 kB | 317.01 kB | = | 73.14 kB | 72.87 kB\n| [oss-stable/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable/react-dom/cjs/react-dom-server.bun.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 316.61 kB | 315.71 kB | = | 72.78 kB | 72.51 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable-semver/react-dom/cjs/react-dom-server.bun.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 316.58 kB | 315.69 kB | = | 72.76 kB | 72.49 kB\n| [facebook-www/ReactDOMServer-dev.classic.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/facebook-www/ReactDOMServer-dev.classic.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 343.58 kB | 342.48 kB | = | 76.43 kB | 76.14 kB\n| [facebook-www/ReactDOMServer-dev.modern.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/facebook-www/ReactDOMServer-dev.modern.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 336.88 kB | 335.78 kB | = | 75.00 kB | 74.73 kB\n| [facebook-www/ReactDOMServerStreaming-dev.modern.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/facebook-www/ReactDOMServerStreaming-dev.modern.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 332.13 kB | 331.03 kB | = | 73.92 kB | 73.66 kB\n| [facebook-www/ReactDOMServerStreaming-prod.modern.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/facebook-www/ReactDOMServerStreaming-prod.modern.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 128.54 kB | 127.87 kB | = | 24.70 kB | 24.37 kB\n| [oss-experimental/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-server/cjs/react-server.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 146.24 kB | 145.34 kB | = | 36.42 kB | 36.14 kB\n| [oss-stable-semver/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable-semver/react-server/cjs/react-server.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 145.62 kB | 144.72 kB | = | 36.24 kB | 35.95 kB\n| [oss-stable/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable/react-server/cjs/react-server.development.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 145.62 kB | 144.72 kB | = | 36.24 kB | 35.95 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 56.67 kB | 56.13 kB | = | 18.03 kB | 17.76 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 56.67 kB | 56.13 kB | = | 18.02 kB | 17.77 kB\n| [oss-stable/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable/react-dom/cjs/react-dom-server.node.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 56.28 kB | 55.74 kB | = | 17.88 kB | 17.63 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 56.26 kB | 55.72 kB | = | 17.86 kB | 17.61 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 55.84 kB | 55.30 kB | = | 17.24 kB | 16.98 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.node.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable/react-dom/cjs/react-dom-server-legacy.node.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 55.46 kB | 54.91 kB | = | 17.08 kB | 16.82 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 55.43 kB | 54.89 kB | = | 17.05 kB | 16.80 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-dom/cjs/react-dom-server.bun.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 55.14 kB | 54.60 kB | = | 17.27 kB | 17.01 kB\n| [oss-stable/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable/react-dom/cjs/react-dom-server.bun.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 54.75 kB | 54.21 kB | = | 17.11 kB | 16.85 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable-semver/react-dom/cjs/react-dom-server.bun.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 54.73 kB | 54.19 kB | = | 17.08 kB | 16.83 kB\n| [oss-experimental/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-experimental/react-server/cjs/react-server.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 24.51 kB | 23.97 kB | = | 8.39 kB | 8.11 kB\n| [oss-stable-semver/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable-semver/react-server/cjs/react-server.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 24.27 kB | 23.72 kB | = | 8.30 kB | 8.02 kB\n| [oss-stable/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/97a2263fc26327ce8bdabec4374888dc04382e0b/files/oss-stable/react-server/cjs/react-server.production.min.js?compare=d807eb52cfd999cfbcb19078a75b15f844e409bb) | **=** | 24.27 kB | 23.72 kB | = | 8.30 kB | 8.02 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 97a2263fc26327ce8bdabec4374888dc04382e0b\n</p>\n","updated_at":"2022-12-06T00:40:26Z","created_at":"2022-01-19T19:45:52Z","creator_user_login":"sizebot"}
{"number":19419,"comment_id":"661252803","body":"@jquense  if I comment the SyntheticEvent onMouseEnter(L19).\r\nNative enter is logged from the addEventListener mouseenter event","updated_at":"2020-07-20T18:16:32Z","created_at":"2020-07-20T18:16:32Z","creator_user_login":"ibrahimjelliti"}
{"number":19419,"comment_id":"661287254","body":"you don't need to comment it, the native one always fires. It's there to illustrate that React is not mimicking the native behavior correctly","updated_at":"2020-07-20T19:26:00Z","created_at":"2020-07-20T19:26:00Z","creator_user_login":"jquense"}
{"number":19419,"comment_id":"662133231","body":"Currently investigating this (and hopefully fixing)","updated_at":"2020-07-21T22:11:51Z","created_at":"2020-07-21T22:11:51Z","creator_user_login":"ramblinjan"}
{"number":19419,"comment_id":"662152192","body":"Repro'd via a broken test:\r\nhttps://github.com/facebook/react/compare/master...ramblinjan:master\r\n\r\nEDIT: Actually I have to fix the test. I had the sanity check and the test case backwards. Oops!\r\nEDIT 2: Test is now correctly matched to issue. Moving on to fix.","updated_at":"2020-07-21T23:25:41Z","created_at":"2020-07-21T23:10:04Z","creator_user_login":"ramblinjan"}
{"number":19419,"comment_id":"662165464","body":"FWIW there isn't any easy fix for this without changing all the mouse enter/leave event dispatching. I've already posted a few PRs that work around this a few ways but they are many years old at this point. Tbh the easiest fix would be to just use native mouse enter and leave","updated_at":"2020-07-21T23:58:34Z","created_at":"2020-07-21T23:58:34Z","creator_user_login":"jquense"}
{"number":19419,"comment_id":"662175682","body":"@jquense I think the problem is that would require attaching a native event listener 1:1 for each synthetic event which is potentially a huge performance hit when you can take advantage of event delegation instead. I *think* I might have a reasonable fix for this.","updated_at":"2020-07-22T00:34:31Z","created_at":"2020-07-22T00:34:31Z","creator_user_login":"ramblinjan"}
{"number":19419,"comment_id":"794134458","body":"`mouseenter` event is not triggered on a native button when it is disabled. Here is an example:\r\n\r\nhttps://jsfiddle.net/x9ofu5e1/7/\r\n\r\nThis example includes `click` and `mouseout` events as well.\r\n\r\nmouseenter is working as per expectation in react as well, it is not triggered when button is disabled. \r\n\r\n\r\n\r\n","updated_at":"2021-03-09T16:37:02Z","created_at":"2021-03-09T16:37:02Z","creator_user_login":"tulsidaskhatri"}
{"number":19419,"comment_id":"812667438","body":"FWIW, [the above fiddle](https://jsfiddle.net/x9ofu5e1/7/) does trigger the `mouseout` and `mouseenter` events on the disabled button in Firefox 87.0, so it appears there is some disparity between browsers.","updated_at":"2021-04-02T19:00:52Z","created_at":"2021-04-02T19:00:52Z","creator_user_login":"dev-nicolaos"}
{"number":25198,"comment_id":"1238896835","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: a9dc73cfd4db480b4cadf8624351004fe96f5a12...db10faaff046237ae05e199ea19e7c8caa78866d\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 134.97 kB | 134.98 kB | = | 43.23 kB | 43.23 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 141.64 kB | 141.64 kB | = | 45.20 kB | 45.20 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/facebook-www/ReactDOM-prod.classic.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 486.06 kB | 486.06 kB | = | 86.51 kB | 86.51 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/facebook-www/ReactDOM-prod.modern.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 471.34 kB | 471.34 kB | = | 84.29 kB | 84.29 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/facebook-www/ReactDOMForked-prod.classic.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 486.06 kB | 486.06 kB | = | 86.51 kB | 86.51 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-experimental/react-server/cjs/react-server.development.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 132.83 kB | 132.43 kB | +0.16% | 33.25 kB | 33.31 kB\n| [oss-stable-semver/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-stable-semver/react-server/cjs/react-server.development.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 131.67 kB | 131.27 kB | +0.15% | 32.99 kB | 33.04 kB\n| [oss-stable/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-stable/react-server/cjs/react-server.development.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 131.67 kB | 131.27 kB | +0.15% | 32.99 kB | 33.04 kB\n| [facebook-www/React-dev.classic.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/facebook-www/React-dev.classic.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 118.51 kB | 118.13 kB | +0.10% | 29.26 kB | 29.29 kB\n| [facebook-www/React-dev.modern.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/facebook-www/React-dev.modern.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 117.41 kB | 117.03 kB | +0.09% | 29.03 kB | 29.06 kB\n| [oss-experimental/react/umd/react.development.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-experimental/react/umd/react.development.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 114.67 kB | 114.24 kB | = | 29.44 kB | 29.41 kB\n| [oss-stable/react/umd/react.development.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-stable/react/umd/react.development.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 110.26 kB | 109.83 kB | = | 28.38 kB | 28.35 kB\n| [oss-stable-semver/react/umd/react.development.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-stable-semver/react/umd/react.development.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 110.23 kB | 109.81 kB | = | 28.35 kB | 28.33 kB\n| [oss-experimental/react/cjs/react.development.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-experimental/react/cjs/react.development.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 91.89 kB | 91.48 kB | +0.04% | 24.67 kB | 24.68 kB\n| [oss-stable/react/cjs/react.development.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-stable/react/cjs/react.development.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 87.76 kB | 87.35 kB | = | 23.68 kB | 23.68 kB\n| [oss-stable-semver/react/cjs/react.development.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-stable-semver/react/cjs/react.development.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 87.73 kB | 87.33 kB | = | 23.65 kB | 23.66 kB\n| [oss-experimental/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-experimental/react/cjs/react.shared-subset.development.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 77.33 kB | 76.93 kB | +0.07% | 21.08 kB | 21.10 kB\n| [facebook-www/JSXDEVRuntime-dev.classic.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/facebook-www/JSXDEVRuntime-dev.classic.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 45.70 kB | 45.29 kB | = | 12.94 kB | 12.94 kB\n| [facebook-www/JSXDEVRuntime-dev.modern.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/facebook-www/JSXDEVRuntime-dev.modern.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 45.70 kB | 45.29 kB | = | 12.94 kB | 12.94 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-experimental/react/cjs/react-jsx-runtime.development.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 42.23 kB | 41.80 kB | +0.18% | 12.37 kB | 12.40 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-stable-semver/react/cjs/react-jsx-runtime.development.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 41.90 kB | 41.47 kB | +0.19% | 12.31 kB | 12.33 kB\n| [oss-stable/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-stable/react/cjs/react-jsx-runtime.development.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 41.90 kB | 41.47 kB | +0.19% | 12.31 kB | 12.33 kB\n| [oss-experimental/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-experimental/react/cjs/react-jsx-dev-runtime.development.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 41.63 kB | 41.20 kB | +0.15% | 12.20 kB | 12.22 kB\n| [oss-stable-semver/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-stable-semver/react/cjs/react-jsx-dev-runtime.development.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 41.30 kB | 40.87 kB | +0.17% | 12.13 kB | 12.15 kB\n| [oss-stable/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/db10faaff046237ae05e199ea19e7c8caa78866d/files/oss-stable/react/cjs/react-jsx-dev-runtime.development.js?compare=a9dc73cfd4db480b4cadf8624351004fe96f5a12) | **=** | 41.30 kB | 40.87 kB | +0.17% | 12.13 kB | 12.15 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against db10faaff046237ae05e199ea19e7c8caa78866d\n</p>\n","updated_at":"2022-09-07T04:44:35Z","created_at":"2022-09-07T04:33:08Z","creator_user_login":"sizebot"}
{"number":25198,"comment_id":"1585861029","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 21a161fa37dce969c58ae17f67f2856d06514892...9da5001cfdf759f796e5081b7d9f78e437fe5933\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/9da5001cfdf759f796e5081b7d9f78e437fe5933/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 164.23 kB | 164.23 kB | = | 51.73 kB | 51.73 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/9da5001cfdf759f796e5081b7d9f78e437fe5933/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 171.67 kB | 171.67 kB | = | 53.97 kB | 53.97 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/9da5001cfdf759f796e5081b7d9f78e437fe5933/files/facebook-www/ReactDOM-prod.classic.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 570.12 kB | 570.12 kB | = | 100.58 kB | 100.58 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/9da5001cfdf759f796e5081b7d9f78e437fe5933/files/facebook-www/ReactDOM-prod.modern.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 553.90 kB | 553.90 kB | = | 97.75 kB | 97.75 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/9da5001cfdf759f796e5081b7d9f78e437fe5933/files/oss-experimental/react/cjs/react.shared-subset.development.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 85.70 kB | 85.51 kB | +0.07% | 23.79 kB | 23.80 kB\n| [oss-stable/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/9da5001cfdf759f796e5081b7d9f78e437fe5933/files/oss-stable/react/cjs/react.shared-subset.development.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 84.36 kB | 84.17 kB | +0.01% | 23.40 kB | 23.40 kB\n| [oss-stable-semver/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/9da5001cfdf759f796e5081b7d9f78e437fe5933/files/oss-stable-semver/react/cjs/react.shared-subset.development.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 84.33 kB | 84.14 kB | = | 23.37 kB | 23.37 kB\n| [facebook-www/JSXDEVRuntime-dev.classic.js](https://react-builds.vercel.app/commits/9da5001cfdf759f796e5081b7d9f78e437fe5933/files/facebook-www/JSXDEVRuntime-dev.classic.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 44.76 kB | 44.54 kB | +0.09% | 12.70 kB | 12.71 kB\n| [facebook-www/JSXDEVRuntime-dev.modern.js](https://react-builds.vercel.app/commits/9da5001cfdf759f796e5081b7d9f78e437fe5933/files/facebook-www/JSXDEVRuntime-dev.modern.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 44.76 kB | 44.54 kB | +0.09% | 12.70 kB | 12.71 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/9da5001cfdf759f796e5081b7d9f78e437fe5933/files/oss-stable-semver/react/cjs/react-jsx-runtime.development.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 43.56 kB | 43.34 kB | +0.13% | 12.70 kB | 12.72 kB\n| [oss-stable/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/9da5001cfdf759f796e5081b7d9f78e437fe5933/files/oss-stable/react/cjs/react-jsx-runtime.development.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 43.56 kB | 43.34 kB | +0.13% | 12.70 kB | 12.72 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/9da5001cfdf759f796e5081b7d9f78e437fe5933/files/oss-experimental/react/cjs/react-jsx-runtime.development.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 43.53 kB | 43.31 kB | +0.12% | 12.70 kB | 12.71 kB\n| [oss-stable-semver/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/9da5001cfdf759f796e5081b7d9f78e437fe5933/files/oss-stable-semver/react/cjs/react-jsx-dev-runtime.development.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 42.96 kB | 42.74 kB | +0.13% | 12.53 kB | 12.55 kB\n| [oss-stable/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/9da5001cfdf759f796e5081b7d9f78e437fe5933/files/oss-stable/react/cjs/react-jsx-dev-runtime.development.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 42.96 kB | 42.74 kB | +0.13% | 12.53 kB | 12.55 kB\n| [oss-experimental/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/9da5001cfdf759f796e5081b7d9f78e437fe5933/files/oss-experimental/react/cjs/react-jsx-dev-runtime.development.js?compare=21a161fa37dce969c58ae17f67f2856d06514892) | **=** | 42.93 kB | 42.71 kB | +0.14% | 12.52 kB | 12.54 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 9da5001cfdf759f796e5081b7d9f78e437fe5933\n</p>\n","updated_at":"2023-06-11T10:22:12Z","created_at":"2023-06-10T23:36:55Z","creator_user_login":"react-sizebot"}
{"number":19345,"comment_id":"658075503","body":"This pull request is automatically built and testable in [CodeSandbox](https://codesandbox.io).\n\n  To see build info of the built libraries, click [here](https://ci.codesandbox.io/status/facebook/react/pr/19345/builds/39465) or the icon next to each commit SHA.\n\nLatest deployment of this branch, based on commit 86c2fc9b854b2ecbe8057b1e0ab8e7d5db036263:\n\n|Sandbox| Source |\n|--|--|\n|[React](https://codesandbox.io/s/react-kx82z)| Configuration |\n","updated_at":"2020-07-14T09:26:03Z","created_at":"2020-07-14T09:26:03Z","creator_user_login":"codesandbox-ci[bot]"}
{"number":19345,"comment_id":"658076313","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  2 markdown notices\n  DangerID: danger-id-experimental;\n-->\n\n\n\nNo significant bundle size changes to report.\n\n## Size changes (experimental)\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 86c2fc9b854b2ecbe8057b1e0ab8e7d5db036263\n</p>\n","updated_at":"2020-07-14T09:27:41Z","created_at":"2020-07-14T09:27:41Z","creator_user_login":"sizebot"}
{"number":19345,"comment_id":"658077227","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  2 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\nNo significant bundle size changes to report.\n\n## Size changes (stable)\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 86c2fc9b854b2ecbe8057b1e0ab8e7d5db036263\n</p>\n","updated_at":"2020-07-14T09:29:32Z","created_at":"2020-07-14T09:29:32Z","creator_user_login":"sizebot"}
{"number":19345,"comment_id":"670684307","body":"Before, iframes wouldn't work unless you added:\r\n```js\r\n __REACT_DEVTOOLS_GLOBAL_HOOK__ = parent.__REACT_DEVTOOLS_GLOBAL_HOOK__; \r\n```\r\n\r\nNow they won't work unless you add:\r\n```js\r\nfor (const key in __REACT_DEVTOOLS_GLOBAL_HOOK__) {\r\n  __REACT_DEVTOOLS_GLOBAL_HOOK__[key] = parent.__REACT_DEVTOOLS_GLOBAL_HOOK__[key]\r\n}\r\n```\r\n\r\n#18945 says \"Improve browser extension iframe support\" but this feels like it's actually worse?\r\n\r\nHanding back to @Reflex-Gravity for now.","updated_at":"2020-08-07T19:48:02Z","created_at":"2020-08-07T19:47:30Z","creator_user_login":"bvaughn"}
{"number":19345,"comment_id":"672668105","body":"@bvaughn Do you have any clue, what might be causing this? Or any info which will help me.","updated_at":"2020-08-12T07:10:20Z","created_at":"2020-08-12T07:10:20Z","creator_user_login":"Reflex-Gravity"}
{"number":19345,"comment_id":"672857895","body":"No, sorry.","updated_at":"2020-08-12T13:04:48Z","created_at":"2020-08-12T13:04:48Z","creator_user_login":"bvaughn"}
{"number":19345,"comment_id":"751246816","body":"This pull request has been automatically marked as stale. **If this pull request is still relevant, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize reviewing it yet. Your contribution is very much appreciated.\n","updated_at":"2020-12-25T13:06:44Z","created_at":"2020-12-25T13:06:44Z","creator_user_login":"stale[bot]"}
{"number":19345,"comment_id":"1008199254","body":"This pull request has been automatically marked as stale. **If this pull request is still relevant, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize reviewing it yet. Your contribution is very much appreciated.\n","updated_at":"2022-01-09T00:41:27Z","created_at":"2022-01-09T00:41:27Z","creator_user_login":"stale[bot]"}
{"number":26520,"comment_id":"1492838634","body":"This is a valid point","updated_at":"2023-04-01T05:26:50Z","created_at":"2023-04-01T05:26:50Z","creator_user_login":"aliasgar55"}
{"number":26520,"comment_id":"1493272817","body":"+1 up","updated_at":"2023-04-02T09:05:18Z","created_at":"2023-04-02T09:05:18Z","creator_user_login":"vctqs1"}
{"number":26520,"comment_id":"1548690603","body":"Thanks for putting that rule together! I was looking for a rule like this and stumbled upon this issue. I played around with it a bit and noticed it doesn't identify certain cases, examples:\r\n\r\n```\r\nuseState(a ? b : c());\r\nuseState(a() > b);\r\nuseState(a() || b);\r\n```\r\n\r\nI made an updated version here: https://github.com/patorjk/eslint-plugin-react-helpers/blob/main/lib/rules/prefer-use-state-lazy-initialization.js","updated_at":"2023-05-15T22:19:24Z","created_at":"2023-05-15T22:19:24Z","creator_user_login":"patorjk"}
{"number":26520,"comment_id":"1552772532","body":"hey @patorjk, thanks for the updated version and for the pr. Looks good! But it seems like the facebook team hasn't been merging in eslint related PRs for a while now, so fingers crossed 🤞","updated_at":"2023-05-18T09:16:00Z","created_at":"2023-05-18T09:16:00Z","creator_user_login":"legendkong"}
{"number":26585,"comment_id":"1502114975","body":"Hey I can resolve this issue if someone assigns it to me. It's my first time contributing to open source. Thanks","updated_at":"2023-04-10T17:53:53Z","created_at":"2023-04-10T17:53:53Z","creator_user_login":"Aaryansh1"}
{"number":26585,"comment_id":"1502246949","body":"Good","updated_at":"2023-04-10T20:00:07Z","created_at":"2023-04-10T20:00:07Z","creator_user_login":"urmybestfriend"}
{"number":26585,"comment_id":"1502275623","body":"I think this issue should be opened in [react.dev](https://github.com/reactjs/react.dev) repository [issues](https://github.com/reactjs/react.dev/issues), not here @Devang1224 ","updated_at":"2023-04-10T20:25:35Z","created_at":"2023-04-10T20:23:35Z","creator_user_login":"evrenkaraarslan"}
{"number":26585,"comment_id":"1502295266","body":"> \r\n\r\nyes i was thinking about that actually let me correct it .\r\n","updated_at":"2023-04-10T20:43:13Z","created_at":"2023-04-10T20:43:05Z","creator_user_login":"Devang1224"}
{"number":26585,"comment_id":"1502948638","body":"@Devang1224 let me know once you do I will write up there","updated_at":"2023-04-11T09:02:15Z","created_at":"2023-04-11T09:02:15Z","creator_user_login":"Aaryansh1"}
{"number":26606,"comment_id":"1504768050","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 0b931f90e8964183f08ac328e7350d847abb08f9...be3affe7d9685db53ecc9b8718620ebcced70720\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/be3affe7d9685db53ecc9b8718620ebcced70720/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=0b931f90e8964183f08ac328e7350d847abb08f9) | **=** | 164.34 kB | 164.34 kB | = | 51.57 kB | 51.57 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/be3affe7d9685db53ecc9b8718620ebcced70720/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=0b931f90e8964183f08ac328e7350d847abb08f9) | **=** | 166.73 kB | 166.73 kB | = | 52.16 kB | 52.16 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/be3affe7d9685db53ecc9b8718620ebcced70720/files/facebook-www/ReactDOM-prod.classic.js?compare=0b931f90e8964183f08ac328e7350d847abb08f9) | **=** | 564.07 kB | 564.07 kB | = | 99.11 kB | 99.11 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/be3affe7d9685db53ecc9b8718620ebcced70720/files/facebook-www/ReactDOM-prod.modern.js?compare=0b931f90e8964183f08ac328e7350d847abb08f9) | **=** | 547.91 kB | 547.91 kB | = | 96.44 kB | 96.44 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against be3affe7d9685db53ecc9b8718620ebcced70720\n</p>\n","updated_at":"2023-04-12T07:02:35Z","created_at":"2023-04-12T07:02:35Z","creator_user_login":"react-sizebot"}
{"number":26606,"comment_id":"1504779886","body":"@sebmarkbage and @kassens, I believe you might be the right people to review this? Would you mind taking a look when you have a chance? Thank you – and please excuse me if this is a bit too much of micro-optimization! 🙂","updated_at":"2023-04-12T07:11:54Z","created_at":"2023-04-12T07:11:54Z","creator_user_login":"Willie-Boy"}
{"number":26606,"comment_id":"1506951200","body":"Hi! Thanks for the PR.\r\n\r\nI saw this when I added the suppressions as part of a larger upgrade. It's a bit unfortunate that we need an extra check when we already know the first iteration it's non-null.\r\n\r\nI suspect that shouldn't really matter and other costs completely dominate this check. It's certainly nice to remove type suppressions.\r\n\r\nI'll leave this open a bit to see if @sebmarkbage has thoughts on the perf. ","updated_at":"2023-04-13T13:18:16Z","created_at":"2023-04-13T13:18:16Z","creator_user_login":"kassens"}
{"number":26606,"comment_id":"1521589202","body":"Hi @sebmarkbage,\r\n\r\nSorry to bother you! I was just wondering if you might have time to give this a glance at some point?","updated_at":"2023-04-25T10:56:54Z","created_at":"2023-04-25T10:56:54Z","creator_user_login":"Willie-Boy"}
{"number":26801,"comment_id":"1556183941","body":"@acdlite Thank you for opening this issue and having a look in this direction. This is something that's really required.","updated_at":"2023-05-21T13:42:51Z","created_at":"2023-05-21T13:42:51Z","creator_user_login":"KaramveerSidhu"}
{"number":26801,"comment_id":"1578071290","body":"I'm still \"Error: Not implemented. at Object.getCacheForType\" on the server when cache the fetch with \"use\".\r\n\r\nconst fetchCities = cache(() => fetch(`${getAnalyticsUrl()}/rest/cities`))\r\n\r\nconst CitiesPage = () => {\r\n  let cities = use(fetchCities())\r\n  ...\r\n  \r\nIt works on the client though. ","updated_at":"2023-06-06T07:46:04Z","created_at":"2023-06-06T07:24:56Z","creator_user_login":"saudpunjwani101"}
{"number":26801,"comment_id":"1630458125","body":"I am using Next.js and I accidentally put 'use client' and async together and the page was rending well. \r\n\r\nHowever when I made a change with the page open in the browser and recompiled the browser completely froze up. \r\n\r\nIf I made changes and recompiled without having the page in question open, it would recompile without issues. ","updated_at":"2023-07-11T09:14:52Z","created_at":"2023-07-11T09:14:52Z","creator_user_login":"natsandbox"}
{"number":26843,"comment_id":"1561032524","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 4b877b6c661417e932056e12732e3d2697562dc8...905106cb35bf9716dffe1eb38fcaa9809b4448b0\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/905106cb35bf9716dffe1eb38fcaa9809b4448b0/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=4b877b6c661417e932056e12732e3d2697562dc8) | **=** | 164.23 kB | 164.22 kB | = | 51.77 kB | 51.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/905106cb35bf9716dffe1eb38fcaa9809b4448b0/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=4b877b6c661417e932056e12732e3d2697562dc8) | **=** | 171.59 kB | 171.59 kB | +0.01% | 53.98 kB | 53.99 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/905106cb35bf9716dffe1eb38fcaa9809b4448b0/files/facebook-www/ReactDOM-prod.classic.js?compare=4b877b6c661417e932056e12732e3d2697562dc8) | **=** | 570.55 kB | 570.54 kB | = | 100.66 kB | 100.66 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/905106cb35bf9716dffe1eb38fcaa9809b4448b0/files/facebook-www/ReactDOM-prod.modern.js?compare=4b877b6c661417e932056e12732e3d2697562dc8) | **=** | 554.29 kB | 554.28 kB | = | 97.84 kB | 97.84 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 905106cb35bf9716dffe1eb38fcaa9809b4448b0\n</p>\n","updated_at":"2023-05-24T13:08:07Z","created_at":"2023-05-24T12:28:42Z","creator_user_login":"react-sizebot"}
{"number":26843,"comment_id":"1608418590","body":"@sammy-SC @acdlite friendly 🏓 ","updated_at":"2023-06-26T22:43:42Z","created_at":"2023-06-26T22:43:42Z","creator_user_login":"Andarist"}
{"number":26843,"comment_id":"1653421530","body":"@sammy-SC @acdlite @sebmarkbage @rickhanlonii friendly 🏓\r\n\r\n","updated_at":"2023-07-27T11:23:30Z","created_at":"2023-07-27T11:23:30Z","creator_user_login":"Andarist"}
{"number":26853,"comment_id":"1567271063","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 613e6f5fca3a7a63d115988d6312beb84d37b4db...ccab1b66e39418d9082e5f79a187aa30cd050cdd\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/ccab1b66e39418d9082e5f79a187aa30cd050cdd/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 164.56 kB | 164.56 kB | = | 51.83 kB | 51.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/ccab1b66e39418d9082e5f79a187aa30cd050cdd/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 172.00 kB | 172.00 kB | = | 54.07 kB | 54.07 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/ccab1b66e39418d9082e5f79a187aa30cd050cdd/files/facebook-www/ReactDOM-prod.classic.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 571.13 kB | 571.13 kB | = | 100.75 kB | 100.75 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/ccab1b66e39418d9082e5f79a187aa30cd050cdd/files/facebook-www/ReactDOM-prod.modern.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **=** | 554.91 kB | 554.91 kB | = | 97.93 kB | 97.93 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/ccab1b66e39418d9082e5f79a187aa30cd050cdd/files/oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+0.31%** | 26.70 kB | 26.78 kB | +0.25% | 9.22 kB | 9.24 kB\n| [oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/ccab1b66e39418d9082e5f79a187aa30cd050cdd/files/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+0.31%** | 26.70 kB | 26.78 kB | +0.25% | 9.22 kB | 9.24 kB\n| [oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/ccab1b66e39418d9082e5f79a187aa30cd050cdd/files/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+0.31%** | 27.40 kB | 27.48 kB | +0.14% | 9.42 kB | 9.43 kB\n| [oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/ccab1b66e39418d9082e5f79a187aa30cd050cdd/files/oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+0.29%** | 92.56 kB | 92.82 kB | +0.24% | 21.80 kB | 21.85 kB\n| [oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/ccab1b66e39418d9082e5f79a187aa30cd050cdd/files/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+0.29%** | 92.56 kB | 92.82 kB | +0.24% | 21.80 kB | 21.85 kB\n| [oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/ccab1b66e39418d9082e5f79a187aa30cd050cdd/files/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=613e6f5fca3a7a63d115988d6312beb84d37b4db) | **+0.29%** | 92.78 kB | 93.05 kB | +0.23% | 21.83 kB | 21.88 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against ccab1b66e39418d9082e5f79a187aa30cd050cdd\n</p>\n","updated_at":"2023-06-19T02:42:31Z","created_at":"2023-05-29T15:22:07Z","creator_user_login":"react-sizebot"}
{"number":26859,"comment_id":"1564214779","body":"Hi @sanskritiadt! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326859). Thanks!","updated_at":"2023-05-26T10:59:22Z","created_at":"2023-05-26T10:59:22Z","creator_user_login":"facebook-github-bot"}
{"number":26859,"comment_id":"1564222444","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 546fe4681c52de6a333a55cedb141c87b626425e...9debf52f34e0cbef317c4f086818c309431390a8\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/9debf52f34e0cbef317c4f086818c309431390a8/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 164.38 kB | 164.38 kB | = | 51.77 kB | 51.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/9debf52f34e0cbef317c4f086818c309431390a8/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 171.79 kB | 171.79 kB | = | 53.99 kB | 53.99 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/9debf52f34e0cbef317c4f086818c309431390a8/files/facebook-www/ReactDOM-prod.classic.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 567.27 kB | 567.27 kB | = | 100.05 kB | 100.05 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/9debf52f34e0cbef317c4f086818c309431390a8/files/facebook-www/ReactDOM-prod.modern.js?compare=546fe4681c52de6a333a55cedb141c87b626425e) | **=** | 551.07 kB | 551.07 kB | = | 97.22 kB | 97.22 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 9debf52f34e0cbef317c4f086818c309431390a8\n</p>\n","updated_at":"2023-07-13T14:40:13Z","created_at":"2023-05-26T11:04:16Z","creator_user_login":"react-sizebot"}
{"number":26981,"comment_id":"1601273294","body":"Hey @andyindahouse, I have been working on the feature/issue. I have cloned the repository and have made the changes in **_.eslintrc.js file and ExhaustiveDeps.js_** file as well. I was thinking about adding the Test cases, Is it necessary for this feature because the change was pretty straightforward. I could also go ahead with directly creating a PR for this one. I have created the PR and added the Test case as well, https://github.com/facebook/react/pull/26994","updated_at":"2023-06-23T03:43:28Z","created_at":"2023-06-21T17:16:36Z","creator_user_login":"Shashank245"}
{"number":26981,"comment_id":"1606824525","body":"@Shashank245 Thanks for your support and PR 👍, but I think this should be discussed before giving an implementation. (I'm not sure if they'll be interested on this)  ","updated_at":"2023-06-26T06:59:34Z","created_at":"2023-06-26T06:59:34Z","creator_user_login":"andyindahouse"}
{"number":26981,"comment_id":"1606843915","body":"Okay. Thank you for the response I an a bit new to this, How do you think\r\nshould I communicate as in Should I give a heads-up to any specific\r\nmaintainer of the project??\r\n\r\nOn Mon, 26 Jun 2023 at 12:29 PM, Andy Méndez ***@***.***>\r\nwrote:\r\n\r\n> @Shashank245 <https://github.com/Shashank245> Thanks for your support and\r\n> PR 👍, but I think this should be discussed before giving an\r\n> implementation. (I'm not sure if they'll be interested on this)\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/facebook/react/issues/26981#issuecomment-1606824525>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AIW54PYW2AWND4DHEEHIZR3XNEXOLANCNFSM6AAAAAAZNGGP6Q>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n","updated_at":"2023-06-26T07:11:30Z","created_at":"2023-06-26T07:11:30Z","creator_user_login":"Shashank245"}
{"number":26981,"comment_id":"1606874132","body":"We could wait a little for a response","updated_at":"2023-06-26T07:32:01Z","created_at":"2023-06-26T07:32:01Z","creator_user_login":"andyindahouse"}
{"number":26981,"comment_id":"1606875942","body":"Sure. Will definitely wait and work on any changes they would mention.\r\nThanks.\r\n\r\nOn Mon, 26 Jun 2023 at 1:02 PM, Andy Méndez ***@***.***>\r\nwrote:\r\n\r\n> We could wait a little for a response\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/facebook/react/issues/26981#issuecomment-1606874132>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AIW54P7M5UTJOHUYZB4UDZDXNE3IDANCNFSM6AAAAAAZNGGP6Q>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n","updated_at":"2023-06-26T07:33:32Z","created_at":"2023-06-26T07:33:32Z","creator_user_login":"Shashank245"}
{"number":26974,"comment_id":"1607038507","body":"After the page is loaded, enter the text after 3 seconds, and the content will not be lost.\r\nOr remove the setTimeout, and the content directly entered will not be lost.\r\n![image](https://github.com/facebook/react/assets/12200340/46d9b7a8-18db-4cda-affc-c45e1628d58d)\r\n\r\n","updated_at":"2023-06-26T09:09:22Z","created_at":"2023-06-26T09:09:22Z","creator_user_login":"nusr"}
{"number":26974,"comment_id":"1615217845","body":"Is the setTimeout just to demonstrate the issue? Another way to test this issue is to throttle CPU and network speed in devtools, and then that setTimoueout is most likely not necessary. Fast 3G and 4x CPU slowdown might be something to try to start. The location of these tools recently changed in chrome, so for others following along, here's where they are today: \r\n![image](https://github.com/facebook/react/assets/23422635/6b8da003-3764-4687-bf95-e6962943ff55)\r\n","updated_at":"2023-06-30T21:38:23Z","created_at":"2023-06-30T21:38:23Z","creator_user_login":"EnshaednHiker"}
{"number":26974,"comment_id":"1615640971","body":"Yeah the timeout is to simulate delayed hydration e.g. due to slow JS.","updated_at":"2023-07-01T08:08:12Z","created_at":"2023-07-01T08:08:12Z","creator_user_login":"OliverJAsh"}
{"number":27016,"comment_id":"1609176756","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 254cbdbd6d851a30bf3b649a6cb7c52786766fa4...299b84d53d2a7561e1ff1c7c1dad3d7ae88c6db8\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/299b84d53d2a7561e1ff1c7c1dad3d7ae88c6db8/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=254cbdbd6d851a30bf3b649a6cb7c52786766fa4) | **+0.06%** | 164.56 kB | 164.65 kB | +0.07% | 51.83 kB | 51.86 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/299b84d53d2a7561e1ff1c7c1dad3d7ae88c6db8/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=254cbdbd6d851a30bf3b649a6cb7c52786766fa4) | **+0.05%** | 171.97 kB | 172.06 kB | +0.06% | 54.06 kB | 54.10 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/299b84d53d2a7561e1ff1c7c1dad3d7ae88c6db8/files/facebook-www/ReactDOM-prod.classic.js?compare=254cbdbd6d851a30bf3b649a6cb7c52786766fa4) | **+0.05%** | 571.74 kB | 572.05 kB | +0.05% | 100.83 kB | 100.88 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/299b84d53d2a7561e1ff1c7c1dad3d7ae88c6db8/files/facebook-www/ReactDOM-prod.modern.js?compare=254cbdbd6d851a30bf3b649a6cb7c52786766fa4) | **+0.06%** | 555.52 kB | 555.83 kB | +0.05% | 98.02 kB | 98.06 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 299b84d53d2a7561e1ff1c7c1dad3d7ae88c6db8\n</p>\n","updated_at":"2023-06-27T09:57:00Z","created_at":"2023-06-27T09:57:00Z","creator_user_login":"react-sizebot"}
{"number":27016,"comment_id":"1610814361","body":"@rickhanlonii thoughts?","updated_at":"2023-06-28T06:15:52Z","created_at":"2023-06-28T06:15:52Z","creator_user_login":"Biki-das"}
{"number":27016,"comment_id":"1611771851","body":"This is super interesting, seems like something @sophiebits would have thoughts on!","updated_at":"2023-06-28T16:53:50Z","created_at":"2023-06-28T16:53:50Z","creator_user_login":"rickhanlonii"}
{"number":27016,"comment_id":"1691056533","body":"@sebmarkbage @sophiebits any feedback would be appreciated. ","updated_at":"2023-08-24T06:06:08Z","created_at":"2023-08-24T06:06:08Z","creator_user_login":"Biki-das"}
{"number":27004,"comment_id":"1605992246","body":"Hi @starunaway! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2327004). Thanks!","updated_at":"2023-06-25T09:39:48Z","created_at":"2023-06-25T09:39:48Z","creator_user_login":"facebook-github-bot"}
{"number":27004,"comment_id":"1605994783","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 8ec962d825fc948ffda5ab863e639cd4158935ba...6e439b2076f2b20510da6857cbdbf0716519e25e\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/6e439b2076f2b20510da6857cbdbf0716519e25e/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=8ec962d825fc948ffda5ab863e639cd4158935ba) | **=** | 164.56 kB | 164.56 kB | = | 51.83 kB | 51.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/6e439b2076f2b20510da6857cbdbf0716519e25e/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=8ec962d825fc948ffda5ab863e639cd4158935ba) | **=** | 171.97 kB | 171.97 kB | = | 54.06 kB | 54.07 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/6e439b2076f2b20510da6857cbdbf0716519e25e/files/facebook-www/ReactDOM-prod.classic.js?compare=8ec962d825fc948ffda5ab863e639cd4158935ba) | **=** | 571.74 kB | 571.74 kB | = | 100.83 kB | 100.83 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/6e439b2076f2b20510da6857cbdbf0716519e25e/files/facebook-www/ReactDOM-prod.modern.js?compare=8ec962d825fc948ffda5ab863e639cd4158935ba) | **=** | 555.52 kB | 555.52 kB | = | 98.02 kB | 98.02 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 6e439b2076f2b20510da6857cbdbf0716519e25e\n</p>\n","updated_at":"2023-06-25T09:44:37Z","created_at":"2023-06-25T09:44:37Z","creator_user_login":"react-sizebot"}
{"number":27004,"comment_id":"1606030470","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-06-25T11:06:46Z","created_at":"2023-06-25T11:06:46Z","creator_user_login":"facebook-github-bot"}
{"number":26891,"comment_id":"1573316029","body":"Hi @Anupreet1213! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326891). Thanks!","updated_at":"2023-06-02T07:57:54Z","created_at":"2023-06-02T07:57:54Z","creator_user_login":"facebook-github-bot"}
{"number":26891,"comment_id":"1573322332","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: e1ad4aa3615333009d76f947ff05ddeff01039c6...6d70b0ca94d1bad0cfa7f5ee827dd8e36a65ef6b\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/6d70b0ca94d1bad0cfa7f5ee827dd8e36a65ef6b/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=e1ad4aa3615333009d76f947ff05ddeff01039c6) | **=** | 164.23 kB | 164.23 kB | = | 51.73 kB | 51.73 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/6d70b0ca94d1bad0cfa7f5ee827dd8e36a65ef6b/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=e1ad4aa3615333009d76f947ff05ddeff01039c6) | **=** | 171.67 kB | 171.67 kB | = | 53.97 kB | 53.97 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/6d70b0ca94d1bad0cfa7f5ee827dd8e36a65ef6b/files/facebook-www/ReactDOM-prod.classic.js?compare=e1ad4aa3615333009d76f947ff05ddeff01039c6) | **=** | 570.12 kB | 570.12 kB | = | 100.57 kB | 100.57 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/6d70b0ca94d1bad0cfa7f5ee827dd8e36a65ef6b/files/facebook-www/ReactDOM-prod.modern.js?compare=e1ad4aa3615333009d76f947ff05ddeff01039c6) | **=** | 553.90 kB | 553.90 kB | = | 97.75 kB | 97.75 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 6d70b0ca94d1bad0cfa7f5ee827dd8e36a65ef6b\n</p>\n","updated_at":"2023-06-02T08:03:00Z","created_at":"2023-06-02T08:03:00Z","creator_user_login":"react-sizebot"}
{"number":26891,"comment_id":"1573403395","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-06-02T09:04:57Z","created_at":"2023-06-02T09:04:57Z","creator_user_login":"facebook-github-bot"}
{"number":26991,"comment_id":"1605347521","body":"when we want to trigger a synthetic event in react we can use the createSyntheticEvent function provided by react-dom/test-utils. \r\n\r\n```\r\nimport {createSyntheticEvent from \"react-dom/test-utils\r\n\r\nfunction onClick(e) {\r\nsetValue(e.currentTarget.textContent);\r\n\r\nconst syntheticEvent = createSyntheticEvent('change', {\r\ntarget: e.currentTarget,\r\ncurrentTarget: e.currentTarget\r\n)\r\n};\r\nif(props.onChange) props.onChange(syntheticEvent);\r\n```\r\n\r\nin this example the createSyntheticEvent function is used to create a synthetic event of type change. we can then pass an object with target and currentTarget properties to mimic the necessary event. using this approach we can trigger a synthetic event similar to native events and call the onChange call back with the synthetic event object.\r\n`","updated_at":"2023-06-24T09:56:53Z","created_at":"2023-06-24T09:56:53Z","creator_user_login":"pcha07"}
{"number":26991,"comment_id":"1605685881","body":"> React**Test**Utils [react-dom/_**test**_-utils] makes it easy to _**test**_ React components in the _**testing framework**_ of your choice.\r\n\r\n— [React documentation](https://legacy.reactjs.org/docs/test-utils.html#overview)\r\nEven with the best tree shaking available, I'd rather not import in my production build code that is not designed to be used outside of tests\r\n\r\n> Note:\r\nWe recommend using [React Testing Library](https://testing-library.com/react) which is designed to enable and encourage writing tests that use your components as the end users do.\r\n\r\n—  [React documentation again](https://legacy.reactjs.org/docs/test-utils.html#overview)\r\nWe don't even depend directly on ReactTestUtils since we're using React-testing-library so that would mean adding a dependency which we're not to keen on doing.\r\n\r\n> ReactTestUtils API : \r\n- [act()](https://legacy.reactjs.org/docs/test-utils.html#act)\r\n- [mockComponent()](https://legacy.reactjs.org/docs/test-utils.html#mockcomponent)\r\n- [isElement()](https://legacy.reactjs.org/docs/test-utils.html#iselement)\r\n- [isElementOfType()](https://legacy.reactjs.org/docs/test-utils.html#iselementoftype)\r\n- [isDOMComponent()](https://legacy.reactjs.org/docs/test-utils.html#isdomcomponent)\r\n- [isCompositeComponent()](https://legacy.reactjs.org/docs/test-utils.html#iscompositecomponent)\r\n- [isCompositeComponentWithType()](https://legacy.reactjs.org/docs/test-utils.html#iscompositecomponentwithtype)\r\n- [findAllInRenderedTree()](https://legacy.reactjs.org/docs/test-utils.html#findallinrenderedtree)\r\n- [scryRenderedDOMComponentsWithClass()](https://legacy.reactjs.org/docs/test-utils.html#scryrendereddomcomponentswithclass)\r\n- [findRenderedDOMComponentWithClass()](https://legacy.reactjs.org/docs/test-utils.html#findrendereddomcomponentwithclass)\r\n- [scryRenderedDOMComponentsWithTag()](https://legacy.reactjs.org/docs/test-utils.html#scryrendereddomcomponentswithtag)\r\n- [findRenderedDOMComponentWithTag()](https://legacy.reactjs.org/docs/test-utils.html#findrendereddomcomponentwithtag)\r\n- [scryRenderedComponentsWithType()](https://legacy.reactjs.org/docs/test-utils.html#scryrenderedcomponentswithtype)\r\n- [findRenderedComponentWithType()](https://legacy.reactjs.org/docs/test-utils.html#findrenderedcomponentwithtype)\r\n- [renderIntoDocument()](https://legacy.reactjs.org/docs/test-utils.html#renderintodocument)\r\n- [Simulate](https://legacy.reactjs.org/docs/test-utils.html#simulate)\r\n\r\n—  [still React documentation](https://legacy.reactjs.org/docs/test-utils.html#overview)\r\n\r\nIt seems createSyntheticEvent is not standard.","updated_at":"2023-06-27T10:00:03Z","created_at":"2023-06-24T18:51:04Z","creator_user_login":"Mintoo200"}
{"number":26576,"comment_id":"1500925918","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 7b0642bb989ec659c6c9891ea16daa0420caab4d...d0116f866b013331e581c1daac4542a24c7fe761\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d0116f866b013331e581c1daac4542a24c7fe761/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=7b0642bb989ec659c6c9891ea16daa0420caab4d) | **=** | 164.35 kB | 164.33 kB | = | 51.65 kB | 51.64 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/d0116f866b013331e581c1daac4542a24c7fe761/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=7b0642bb989ec659c6c9891ea16daa0420caab4d) | **=** | 166.79 kB | 166.77 kB | = | 52.31 kB | 52.30 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/d0116f866b013331e581c1daac4542a24c7fe761/files/facebook-www/ReactDOM-prod.classic.js?compare=7b0642bb989ec659c6c9891ea16daa0420caab4d) | **=** | 564.28 kB | 564.18 kB | = | 99.34 kB | 99.33 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/d0116f866b013331e581c1daac4542a24c7fe761/files/facebook-www/ReactDOM-prod.modern.js?compare=7b0642bb989ec659c6c9891ea16daa0420caab4d) | **=** | 548.07 kB | 547.97 kB | = | 96.64 kB | 96.63 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against d0116f866b013331e581c1daac4542a24c7fe761\n</p>\n","updated_at":"2023-04-13T19:20:31Z","created_at":"2023-04-08T16:23:21Z","creator_user_login":"react-sizebot"}
{"number":26576,"comment_id":"1504005631","body":"I'll let @acdlite confirm there's no reason to keep these, but this looks good to me.","updated_at":"2023-04-11T19:53:35Z","created_at":"2023-04-11T19:53:35Z","creator_user_login":"sophiebits"}
{"number":26576,"comment_id":"1688216164","body":"Hi, I noticed that this PR hasn't been merged yet. Should I close it? 👀 @sophiebits  ","updated_at":"2023-08-22T13:42:56Z","created_at":"2023-08-22T13:42:56Z","creator_user_login":"evrenkaraarslan"}
{"number":26576,"comment_id":"1688544356","body":"Feel free to leave it open until someone has a chance to review.","updated_at":"2023-08-22T16:28:43Z","created_at":"2023-08-22T16:28:43Z","creator_user_login":"sophiebits"}
{"number":26545,"comment_id":"1494821258","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 58742c21b8c3237e8b66c7df4e200504846a01ae...1b24282e48463d8e92819a42175b53bcf0d9e7cc\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/1b24282e48463d8e92819a42175b53bcf0d9e7cc/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=58742c21b8c3237e8b66c7df4e200504846a01ae) | **=** | 164.01 kB | 163.93 kB | = | 51.43 kB | 51.41 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/1b24282e48463d8e92819a42175b53bcf0d9e7cc/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=58742c21b8c3237e8b66c7df4e200504846a01ae) | **=** | 166.40 kB | 166.32 kB | = | 51.99 kB | 51.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/1b24282e48463d8e92819a42175b53bcf0d9e7cc/files/facebook-www/ReactDOM-prod.classic.js?compare=58742c21b8c3237e8b66c7df4e200504846a01ae) | **=** | 562.84 kB | 562.22 kB | = | 98.87 kB | 98.82 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/1b24282e48463d8e92819a42175b53bcf0d9e7cc/files/facebook-www/ReactDOM-prod.modern.js?compare=58742c21b8c3237e8b66c7df4e200504846a01ae) | **=** | 546.67 kB | 546.05 kB | = | 96.18 kB | 96.14 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [react-native/implementations/ReactNativeRenderer-profiling.fb.js](https://react-builds.vercel.app/commits/1b24282e48463d8e92819a42175b53bcf0d9e7cc/files/react-native/implementations/ReactNativeRenderer-profiling.fb.js?compare=58742c21b8c3237e8b66c7df4e200504846a01ae) | **=** | 365.21 kB | 364.43 kB | = | 63.75 kB | 63.73 kB\n| [react-native/implementations/ReactFabric-profiling.fb.js](https://react-builds.vercel.app/commits/1b24282e48463d8e92819a42175b53bcf0d9e7cc/files/react-native/implementations/ReactFabric-profiling.fb.js?compare=58742c21b8c3237e8b66c7df4e200504846a01ae) | **=** | 356.34 kB | 355.57 kB | = | 61.95 kB | 61.93 kB\n| [react-native/implementations/ReactNativeRenderer-profiling.js](https://react-builds.vercel.app/commits/1b24282e48463d8e92819a42175b53bcf0d9e7cc/files/react-native/implementations/ReactNativeRenderer-profiling.js?compare=58742c21b8c3237e8b66c7df4e200504846a01ae) | **=** | 346.43 kB | 345.66 kB | = | 60.57 kB | 60.54 kB\n| [facebook-www/ReactART-prod.classic.js](https://react-builds.vercel.app/commits/1b24282e48463d8e92819a42175b53bcf0d9e7cc/files/facebook-www/ReactART-prod.classic.js?compare=58742c21b8c3237e8b66c7df4e200504846a01ae) | **=** | 343.70 kB | 342.92 kB | = | 58.17 kB | 58.13 kB\n| [react-native/implementations/ReactNativeRenderer-prod.fb.js](https://react-builds.vercel.app/commits/1b24282e48463d8e92819a42175b53bcf0d9e7cc/files/react-native/implementations/ReactNativeRenderer-prod.fb.js?compare=58742c21b8c3237e8b66c7df4e200504846a01ae) | **=** | 337.81 kB | 337.04 kB | = | 59.47 kB | 59.45 kB\n| [react-native/implementations/ReactFabric-profiling.js](https://react-builds.vercel.app/commits/1b24282e48463d8e92819a42175b53bcf0d9e7cc/files/react-native/implementations/ReactFabric-profiling.js?compare=58742c21b8c3237e8b66c7df4e200504846a01ae) | **=** | 337.55 kB | 336.77 kB | = | 58.84 kB | 58.82 kB\n| [facebook-www/ReactART-prod.modern.js](https://react-builds.vercel.app/commits/1b24282e48463d8e92819a42175b53bcf0d9e7cc/files/facebook-www/ReactART-prod.modern.js?compare=58742c21b8c3237e8b66c7df4e200504846a01ae) | **=** | 332.70 kB | 331.93 kB | = | 56.25 kB | 56.21 kB\n| [react-native/implementations/ReactFabric-prod.fb.js](https://react-builds.vercel.app/commits/1b24282e48463d8e92819a42175b53bcf0d9e7cc/files/react-native/implementations/ReactFabric-prod.fb.js?compare=58742c21b8c3237e8b66c7df4e200504846a01ae) | **=** | 328.92 kB | 328.15 kB | = | 57.75 kB | 57.73 kB\n| [react-native/implementations/ReactNativeRenderer-prod.js](https://react-builds.vercel.app/commits/1b24282e48463d8e92819a42175b53bcf0d9e7cc/files/react-native/implementations/ReactNativeRenderer-prod.js?compare=58742c21b8c3237e8b66c7df4e200504846a01ae) | **=** | 326.88 kB | 326.10 kB | = | 57.32 kB | 57.29 kB\n| [react-native/implementations/ReactFabric-prod.js](https://react-builds.vercel.app/commits/1b24282e48463d8e92819a42175b53bcf0d9e7cc/files/react-native/implementations/ReactFabric-prod.js?compare=58742c21b8c3237e8b66c7df4e200504846a01ae) | **=** | 317.98 kB | 317.21 kB | = | 55.63 kB | 55.61 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-profiling.js](https://react-builds.vercel.app/commits/1b24282e48463d8e92819a42175b53bcf0d9e7cc/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-profiling.js?compare=58742c21b8c3237e8b66c7df4e200504846a01ae) | **=** | 312.60 kB | 311.83 kB | = | 54.64 kB | 54.62 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-prod.js](https://react-builds.vercel.app/commits/1b24282e48463d8e92819a42175b53bcf0d9e7cc/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-prod.js?compare=58742c21b8c3237e8b66c7df4e200504846a01ae) | **=** | 296.72 kB | 295.94 kB | = | 52.19 kB | 52.16 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 1b24282e48463d8e92819a42175b53bcf0d9e7cc\n</p>\n","updated_at":"2023-04-11T15:38:37Z","created_at":"2023-04-03T18:59:03Z","creator_user_login":"react-sizebot"}
{"number":26598,"comment_id":"1502712724","body":"Might be a duplicate of https://github.com/facebook/react/issues/18098","updated_at":"2023-04-11T05:36:17Z","created_at":"2023-04-11T05:36:17Z","creator_user_login":"Andarist"}
{"number":26598,"comment_id":"1504962282","body":"On the linked documentation page it literally says that this is expected:\r\n\r\n> Although in some cases React may still need to call your component before skipping the children, it shouldn’t affect your code","updated_at":"2023-04-12T09:32:50Z","created_at":"2023-04-12T09:32:50Z","creator_user_login":"vkurchatkin"}
{"number":26598,"comment_id":"1506159784","body":"Here is the full text of the set state optimization [as at 13th April]:\r\n\r\n> If the new value you provide is identical to the current state, as determined by an [Object.is](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is) comparison, React will skip re-rendering the component and its children. This is an optimization. Although in some cases React may still need to call your component before skipping the children, it shouldn’t affect your code.\r\n>\r\n> [useState docs](https://react.dev/reference/react/useState)\r\n\r\nI think that wording the caveat that the re-render optimization is skipped \"in some cases\" implies that the de-optimization should only occur in outlier circumstances (eg nested set states in an effect), and not for standard happy path cases. \r\n\r\nI think that skipping the re-render optimization for a happy path case is a bug.\r\n\r\nI appreciate that component renders should be pure, and so an additional re-render should not cause any functional problems. However, I still think that this current behaviour is incorrect. \r\n\r\nThe current behaviour hurt me when I was trying to write a test to assert that a component should not render after a particular event, but a render did occur. It would be fair to ask: \"Why assert render behaviour in a test?\". I think it is fair to assert re-rendering behaviour given that re-rendering can be expensive with react\r\n","updated_at":"2023-04-13T03:30:21Z","created_at":"2023-04-13T00:56:26Z","creator_user_login":"alexreardon"}
{"number":26598,"comment_id":"1523104503","body":"It could be a joke but... Have you tried to remove the StictMode?\r\n\r\nhttps://react.dev/reference/react/StrictMode","updated_at":"2023-04-26T09:38:36Z","created_at":"2023-04-26T09:38:36Z","creator_user_login":"brayanjeshua"}
{"number":26598,"comment_id":"1526829813","body":"I can confirm that this bug appears without strict mode on","updated_at":"2023-04-28T00:56:10Z","created_at":"2023-04-28T00:56:10Z","creator_user_login":"alexreardon"}
{"number":26562,"comment_id":"1498513433","body":"Hi @kbdharun! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326562). Thanks!","updated_at":"2023-04-06T05:31:04Z","created_at":"2023-04-06T05:31:04Z","creator_user_login":"facebook-github-bot"}
{"number":26562,"comment_id":"1498515622","body":"~~I will the CLA in 2 hours when I get back to my PC.~~ \r\n\r\nUpdate: Done, signed now. It should be reflected here soon.","updated_at":"2023-04-06T08:03:25Z","created_at":"2023-04-06T05:33:44Z","creator_user_login":"kbdharun"}
{"number":26562,"comment_id":"1498658541","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-04-06T08:09:28Z","created_at":"2023-04-06T08:09:28Z","creator_user_login":"facebook-github-bot"}
{"number":26562,"comment_id":"1499558477","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 9cfba0f6ecc15a342ef184552742c5db6c7f2d3e...18a3474d9f06fc0fc43677f0767ed984bcdce172\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/18a3474d9f06fc0fc43677f0767ed984bcdce172/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=9cfba0f6ecc15a342ef184552742c5db6c7f2d3e) | **=** | 165.08 kB | 165.08 kB | = | 51.84 kB | 51.84 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/18a3474d9f06fc0fc43677f0767ed984bcdce172/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=9cfba0f6ecc15a342ef184552742c5db6c7f2d3e) | **=** | 166.66 kB | 166.66 kB | = | 52.35 kB | 52.35 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/18a3474d9f06fc0fc43677f0767ed984bcdce172/files/facebook-www/ReactDOM-prod.classic.js?compare=9cfba0f6ecc15a342ef184552742c5db6c7f2d3e) | **=** | 554.97 kB | 554.97 kB | = | 98.39 kB | 98.39 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/18a3474d9f06fc0fc43677f0767ed984bcdce172/files/facebook-www/ReactDOM-prod.modern.js?compare=9cfba0f6ecc15a342ef184552742c5db6c7f2d3e) | **=** | 538.82 kB | 538.82 kB | = | 95.71 kB | 95.71 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 18a3474d9f06fc0fc43677f0767ed984bcdce172\n</p>\n","updated_at":"2023-04-06T20:10:40Z","created_at":"2023-04-06T20:10:40Z","creator_user_login":"react-sizebot"}
{"number":26603,"comment_id":"1505289006","body":"Hi\r\n\r\nThis happens because If you render your React component into a detached element, React will call focus() too soon. This will result in the input not focusing when your React tree gets added to the DOM.\r\n### Solution\r\n**So to achieve this goal you can use the Anchor element Ref and the call the focus() method  when the component did mount.**\r\nYou can see this approach code in my code sandbox ;\r\n\r\n[https://codesandbox.io/embed/react-link-autofocus-forked-lod3su?fontsize=14&hidenavigation=1&theme=dark](url)\r\n\r\nI should also emphasize that you can focus on one element (also the first element) in each page load with this approach or autofocus attribute. and will ignore others.\r\n\r\nRead more on MDN ;\r\nhttps://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autofocus\r\n\r\n\r\n","updated_at":"2023-04-12T13:33:30Z","created_at":"2023-04-12T13:33:30Z","creator_user_login":"amirmahdizare"}
{"number":26603,"comment_id":"1505336464","body":"@amirmahdizare Thank you for your reply, but I don't think it applies in my case. As you can see from my sandbox, I'm not rendering into a detached element. (To demonstrate, modify the sandbox to set `autoFocus` on the `Button` component, which is rendered at the same time - the button receives the focus as expected.) I'm familiar with using a ref with the `focus()` method, but the idea of the autofocus attribute is to avoid having to write imperative code to manipulate the focus like this.","updated_at":"2023-04-12T14:03:36Z","created_at":"2023-04-12T14:03:36Z","creator_user_login":"joshkel"}
{"number":26603,"comment_id":"1510433538","body":"React DOM handles `autoFocus` only for buttons, inputs, selects and textareas but not for links. See [finalizeInitialChildren ](https://github.com/facebook/react/blame/b6006201b5fdfcc5720160f169b80ddb7b8d7467/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js#L468) and [commitMount ](https://github.com/facebook/react/blame/b6006201b5fdfcc5720160f169b80ddb7b8d7467/packages/react-dom-bindings/src/client/ReactFiberConfigDOM.js#L618)\r\n","updated_at":"2023-04-16T17:05:44Z","created_at":"2023-04-16T17:05:44Z","creator_user_login":"rothsandro"}
{"number":26603,"comment_id":"1511628365","body":"@rothsandro Thank you. That was my conclusion from looking at the React code; however, I think it's incorrect, since autoFocus is a global attribute, and since using button-style links is a common enough web design technique.","updated_at":"2023-04-17T15:47:02Z","created_at":"2023-04-17T15:47:02Z","creator_user_login":"joshkel"}
{"number":26603,"comment_id":"1512527184","body":"@joshkel I am not an expert into the issue but, I think the issue is with the href attribute, change the \"/\" to a \"#\" and the issue is resolved for me : from **href=\"/\"**  to **href=\"#\"**\r\nI tried making another button without autofocus with the href=\"/' and the unexpected behavior was still there.","updated_at":"2023-04-18T06:46:05Z","created_at":"2023-04-18T06:44:48Z","creator_user_login":"priyanshu-code"}
{"number":26603,"comment_id":"1518483589","body":"Related conversation - https://github.com/facebook/react/issues/11851#issuecomment-351672131\r\n\r\nBut still not clear why it’s working for some elements, not for every focusable one","updated_at":"2023-04-22T02:59:45Z","created_at":"2023-04-22T02:59:45Z","creator_user_login":"theKashey"}
{"number":26605,"comment_id":"1504697273","body":"Hi @swarupe7! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326605). Thanks!","updated_at":"2023-04-12T05:54:41Z","created_at":"2023-04-12T05:54:41Z","creator_user_login":"facebook-github-bot"}
{"number":26605,"comment_id":"1504704735","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 5426af3d50ff706f3ebeb4764f838e0a3812bf9a...60460547949722c6a506cdad8894923067059be0\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/60460547949722c6a506cdad8894923067059be0/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **=** | 164.40 kB | 164.40 kB | = | 51.65 kB | 51.65 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/60460547949722c6a506cdad8894923067059be0/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **=** | 166.84 kB | 166.84 kB | = | 52.30 kB | 52.31 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/60460547949722c6a506cdad8894923067059be0/files/facebook-www/ReactDOM-prod.classic.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **=** | 565.32 kB | 565.32 kB | = | 99.49 kB | 99.49 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/60460547949722c6a506cdad8894923067059be0/files/facebook-www/ReactDOM-prod.modern.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **=** | 549.11 kB | 549.11 kB | = | 96.79 kB | 96.79 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 60460547949722c6a506cdad8894923067059be0\n</p>\n","updated_at":"2023-04-12T06:01:16Z","created_at":"2023-04-12T06:01:16Z","creator_user_login":"react-sizebot"}
{"number":26605,"comment_id":"1504775047","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-04-12T07:07:49Z","created_at":"2023-04-12T07:07:49Z","creator_user_login":"facebook-github-bot"}
{"number":26683,"comment_id":"1515996731","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 22d5942675fcbd8b15b532284b49db4cb00d7144...60a2f465fdd52e1884a00338ecfbe994a9a9f7d8\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/60a2f465fdd52e1884a00338ecfbe994a9a9f7d8/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=22d5942675fcbd8b15b532284b49db4cb00d7144) | **=** | 164.67 kB | 164.59 kB | = | 51.81 kB | 51.80 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/60a2f465fdd52e1884a00338ecfbe994a9a9f7d8/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=22d5942675fcbd8b15b532284b49db4cb00d7144) | **=** | 168.43 kB | 168.34 kB | = | 52.93 kB | 52.93 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/60a2f465fdd52e1884a00338ecfbe994a9a9f7d8/files/facebook-www/ReactDOM-prod.classic.js?compare=22d5942675fcbd8b15b532284b49db4cb00d7144) | **=** | 568.32 kB | 568.04 kB | = | 100.61 kB | 100.60 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/60a2f465fdd52e1884a00338ecfbe994a9a9f7d8/files/facebook-www/ReactDOM-prod.modern.js?compare=22d5942675fcbd8b15b532284b49db4cb00d7144) | **=** | 552.05 kB | 551.77 kB | = | 97.91 kB | 97.90 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-profiling.js](https://react-builds.vercel.app/commits/60a2f465fdd52e1884a00338ecfbe994a9a9f7d8/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-profiling.js?compare=22d5942675fcbd8b15b532284b49db4cb00d7144) | **=** | 312.24 kB | 311.55 kB | = | 55.03 kB | 54.99 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 60a2f465fdd52e1884a00338ecfbe994a9a9f7d8\n</p>\n","updated_at":"2023-04-20T09:16:42Z","created_at":"2023-04-20T09:16:42Z","creator_user_login":"react-sizebot"}
{"number":26683,"comment_id":"1516005682","body":"lint error is not because of the file which i changed","updated_at":"2023-04-20T09:23:33Z","created_at":"2023-04-20T09:23:33Z","creator_user_login":"Blithe07"}
{"number":26609,"comment_id":"1505304064","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 5426af3d50ff706f3ebeb4764f838e0a3812bf9a...a755b4a03d08da33550005c25180932fa16edc94\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **=** | 164.40 kB | 164.40 kB | = | 51.65 kB | 51.65 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **=** | 166.84 kB | 166.84 kB | = | 52.30 kB | 52.30 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/facebook-www/ReactDOM-prod.classic.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **=** | 565.32 kB | 565.32 kB | = | 99.49 kB | 99.49 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/facebook-www/ReactDOM-prod.modern.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **=** | 549.11 kB | 549.11 kB | = | 96.79 kB | 96.79 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/scheduler/cjs/scheduler.development.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/oss-experimental/scheduler/cjs/scheduler.development.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+1.15%** | 18.04 kB | 18.25 kB | +1.16% | 5.08 kB | 5.14 kB\n| [oss-stable-semver/scheduler/cjs/scheduler.development.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/oss-stable-semver/scheduler/cjs/scheduler.development.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+1.15%** | 18.04 kB | 18.25 kB | +1.16% | 5.08 kB | 5.14 kB\n| [oss-stable/scheduler/cjs/scheduler.development.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/oss-stable/scheduler/cjs/scheduler.development.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+1.15%** | 18.04 kB | 18.25 kB | +1.16% | 5.08 kB | 5.14 kB\n| [facebook-react-native/scheduler/cjs/Scheduler-dev.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/facebook-react-native/scheduler/cjs/Scheduler-dev.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+1.15%** | 18.08 kB | 18.28 kB | +1.16% | 5.09 kB | 5.15 kB\n| [facebook-www/Scheduler-dev.classic.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/facebook-www/Scheduler-dev.classic.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.79%** | 26.09 kB | 26.30 kB | +0.83% | 6.87 kB | 6.93 kB\n| [facebook-www/Scheduler-dev.modern.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/facebook-www/Scheduler-dev.modern.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.79%** | 26.09 kB | 26.30 kB | +0.83% | 6.87 kB | 6.93 kB\n| [oss-experimental/scheduler/cjs/scheduler.production.min.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/oss-experimental/scheduler/cjs/scheduler.production.min.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.72%** | 4.30 kB | 4.33 kB | +0.50% | 1.80 kB | 1.81 kB\n| [oss-stable-semver/scheduler/cjs/scheduler.production.min.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/oss-stable-semver/scheduler/cjs/scheduler.production.min.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.72%** | 4.30 kB | 4.33 kB | +0.50% | 1.80 kB | 1.81 kB\n| [oss-stable/scheduler/cjs/scheduler.production.min.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/oss-stable/scheduler/cjs/scheduler.production.min.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.72%** | 4.30 kB | 4.33 kB | +0.50% | 1.80 kB | 1.81 kB\n| [facebook-react-native/scheduler/cjs/Scheduler-prod.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/facebook-react-native/scheduler/cjs/Scheduler-prod.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.46%** | 10.53 kB | 10.58 kB | +0.41% | 2.66 kB | 2.67 kB\n| [facebook-react-native/scheduler/cjs/Scheduler-profiling.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/facebook-react-native/scheduler/cjs/Scheduler-profiling.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.43%** | 11.14 kB | 11.19 kB | +0.36% | 2.80 kB | 2.81 kB\n| [facebook-www/Scheduler-prod.classic.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/facebook-www/Scheduler-prod.classic.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.41%** | 11.84 kB | 11.89 kB | +0.41% | 2.93 kB | 2.94 kB\n| [facebook-www/Scheduler-prod.modern.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/facebook-www/Scheduler-prod.modern.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.41%** | 11.84 kB | 11.89 kB | +0.41% | 2.93 kB | 2.94 kB\n| [facebook-www/Scheduler-profiling.classic.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/facebook-www/Scheduler-profiling.classic.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.30%** | 16.01 kB | 16.06 kB | +0.32% | 3.72 kB | 3.74 kB\n| [facebook-www/Scheduler-profiling.modern.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/facebook-www/Scheduler-profiling.modern.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.30%** | 16.01 kB | 16.06 kB | +0.32% | 3.72 kB | 3.74 kB\n| [oss-stable-semver/react/umd/react.profiling.min.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/oss-stable-semver/react/umd/react.profiling.min.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.25%** | 12.18 kB | 12.21 kB | +0.17% | 4.73 kB | 4.74 kB\n| [oss-stable-semver/react/umd/react.production.min.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/oss-stable-semver/react/umd/react.production.min.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.25%** | 12.18 kB | 12.21 kB | +0.19% | 4.73 kB | 4.74 kB\n| [oss-stable/react/umd/react.profiling.min.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/oss-stable/react/umd/react.profiling.min.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.25%** | 12.20 kB | 12.23 kB | +0.15% | 4.76 kB | 4.76 kB\n| [oss-stable/react/umd/react.production.min.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/oss-stable/react/umd/react.production.min.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.25%** | 12.20 kB | 12.23 kB | +0.17% | 4.76 kB | 4.76 kB\n| [oss-experimental/react/umd/react.profiling.min.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/oss-experimental/react/umd/react.profiling.min.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.24%** | 12.90 kB | 12.93 kB | +0.14% | 4.97 kB | 4.98 kB\n| [oss-experimental/react/umd/react.production.min.js](https://react-builds.vercel.app/commits/a755b4a03d08da33550005c25180932fa16edc94/files/oss-experimental/react/umd/react.production.min.js?compare=5426af3d50ff706f3ebeb4764f838e0a3812bf9a) | **+0.24%** | 12.90 kB | 12.94 kB | +0.16% | 4.97 kB | 4.97 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against a755b4a03d08da33550005c25180932fa16edc94\n</p>\n","updated_at":"2023-04-12T13:43:26Z","created_at":"2023-04-12T13:43:26Z","creator_user_login":"react-sizebot"}
{"number":26123,"comment_id":"1421455425","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 01a0c4e12c6aa9732d290e13b1452f72d276934d...29d2a711ead474b46db2ecf32c80a6d47319ce20\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/29d2a711ead474b46db2ecf32c80a6d47319ce20/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=01a0c4e12c6aa9732d290e13b1452f72d276934d) | **=** | 154.84 kB | 154.84 kB | = | 49.12 kB | 49.12 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/29d2a711ead474b46db2ecf32c80a6d47319ce20/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=01a0c4e12c6aa9732d290e13b1452f72d276934d) | **=** | 156.85 kB | 156.85 kB | = | 49.78 kB | 49.78 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/29d2a711ead474b46db2ecf32c80a6d47319ce20/files/facebook-www/ReactDOM-prod.classic.js?compare=01a0c4e12c6aa9732d290e13b1452f72d276934d) | **=** | 533.79 kB | 533.79 kB | = | 95.06 kB | 95.06 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/29d2a711ead474b46db2ecf32c80a6d47319ce20/files/facebook-www/ReactDOM-prod.modern.js?compare=01a0c4e12c6aa9732d290e13b1452f72d276934d) | **=** | 518.81 kB | 518.81 kB | = | 92.82 kB | 92.82 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 29d2a711ead474b46db2ecf32c80a6d47319ce20\n</p>\n","updated_at":"2023-02-07T21:10:07Z","created_at":"2023-02-07T21:10:07Z","creator_user_login":"react-sizebot"}
{"number":26123,"comment_id":"1631990610","body":"Hi @nmelhado! \n\nThank you for your pull request. \n\nWe **require** contributors to sign our **Contributor License Agreement**, and yours needs attention.\n\nYou currently have a record in our system, but the CLA is no longer valid, and will need to be **resubmitted**.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326123). Thanks!","updated_at":"2023-07-12T07:27:16Z","created_at":"2023-07-12T07:27:16Z","creator_user_login":"facebook-github-bot"}
{"number":26136,"comment_id":"1424601004","body":"Hi @edkimmel! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326136). Thanks!","updated_at":"2023-02-09T18:02:19Z","created_at":"2023-02-09T18:02:19Z","creator_user_login":"facebook-github-bot"}
{"number":26136,"comment_id":"1424613527","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 28fcae062bff2b611cd935911f8666b0627b9551...967770e06e212e72d021c9c6d4e306683257b6ff\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/967770e06e212e72d021c9c6d4e306683257b6ff/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=28fcae062bff2b611cd935911f8666b0627b9551) | **=** | 154.83 kB | 154.83 kB | = | 49.12 kB | 49.12 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/967770e06e212e72d021c9c6d4e306683257b6ff/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=28fcae062bff2b611cd935911f8666b0627b9551) | **=** | 156.83 kB | 156.83 kB | = | 49.73 kB | 49.73 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/967770e06e212e72d021c9c6d4e306683257b6ff/files/facebook-www/ReactDOM-prod.classic.js?compare=28fcae062bff2b611cd935911f8666b0627b9551) | **=** | 533.54 kB | 533.54 kB | = | 94.99 kB | 94.99 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/967770e06e212e72d021c9c6d4e306683257b6ff/files/facebook-www/ReactDOM-prod.modern.js?compare=28fcae062bff2b611cd935911f8666b0627b9551) | **=** | 518.81 kB | 518.81 kB | = | 92.84 kB | 92.84 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 967770e06e212e72d021c9c6d4e306683257b6ff\n</p>\n","updated_at":"2023-02-10T09:55:02Z","created_at":"2023-02-09T18:08:41Z","creator_user_login":"react-sizebot"}
{"number":26136,"comment_id":"1424690253","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-09T19:15:13Z","created_at":"2023-02-09T19:15:13Z","creator_user_login":"facebook-github-bot"}
{"number":26175,"comment_id":"1439780160","body":"This is by-default feature of input type=date, when your type=date so it's validate first and then display. So your input is `0 ` then validator check the given value is true or if false then it will print perfect date either it will print simple `dd-mm-yyyy` .","updated_at":"2023-02-22T10:29:20Z","created_at":"2023-02-22T10:29:20Z","creator_user_login":"kalp2525"}
{"number":26175,"comment_id":"1439786987","body":"It isn't by default, and date inputs don't do that. You can play with it on [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date) and see for yourself. \r\n\r\nThis is how Firefox handles `0` in month: \r\n<img width=\"159\" alt=\"изображение\" src=\"https://user-images.githubusercontent.com/180167/220594675-87f18efe-dfd9-421b-b750-41d121fb6a09.png\">\r\n\r\nInput's value in this state is `\"\"`.\r\n","updated_at":"2023-02-22T10:35:27Z","created_at":"2023-02-22T10:34:14Z","creator_user_login":"vasa-chi"}
{"number":26175,"comment_id":"1439798716","body":" This [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date) given by you which was working perfect into my Firefox browser. I don't know why this not working in your Firefox browser. Please see the version of your browser and update it.","updated_at":"2023-02-22T10:42:53Z","created_at":"2023-02-22T10:42:53Z","creator_user_login":"kalp2525"}
{"number":26175,"comment_id":"1439809036","body":"@kalp2525 What do you get, when you input `0` in month part of the input?","updated_at":"2023-02-22T10:50:37Z","created_at":"2023-02-22T10:50:37Z","creator_user_login":"vasa-chi"}
{"number":26175,"comment_id":"1439812935","body":"![image](https://user-images.githubusercontent.com/122508708/220599565-be7338f3-239e-4397-accc-7d548eeb75e4.png)\r\nI getting this when my input 0 in month","updated_at":"2023-02-22T10:53:25Z","created_at":"2023-02-22T10:53:25Z","creator_user_login":"kalp2525"}
{"number":26175,"comment_id":"1439816821","body":"I've checked FF 110.0 on macOS and Windows. Both give me this:\r\n<img width=\"159\" alt=\"изображение\" src=\"https://user-images.githubusercontent.com/180167/220594675-87f18efe-dfd9-421b-b750-41d121fb6a09.png\">\r\n\r\nMaybe this behaviour is locale-related? I'm on `ru_RU`","updated_at":"2023-02-22T10:56:07Z","created_at":"2023-02-22T10:56:07Z","creator_user_login":"vasa-chi"}
{"number":26175,"comment_id":"1439821130","body":"I have FF 110.0 same like you so you check again and solve this issue. ","updated_at":"2023-02-22T10:59:34Z","created_at":"2023-02-22T10:59:34Z","creator_user_login":"kalp2525"}
{"number":26033,"comment_id":"1400328079","body":"It is expected that old states will be kept in memory as long as there are references to them. This is because JavaScript's garbage collector does not immediately remove objects from memory when they are no longer in use, but instead waits until the next garbage collection cycle to determine which objects are eligible for removal.\r\n\r\nIn this case, it sounds like the references to the old states are coming from the HTMLElement.__reactFiberxyz object, which is likely related to React's internal representation of the component tree. These objects are used by React to keep track of the component hierarchy and update the DOM efficiently.\r\n\r\nIt is possible that these references are preventing the garbage collector from removing the old states from memory. However, this behavior is likely intended by React and is not a memory leak.\r\n\r\nIt is important to note that JavaScript's garbage collector is a complex system that can be difficult to predict. It may not always behave in the way we expect it to. Therefore, it's important to monitor your app's memory usage and performance, and investigate if you notice any issues. You could use tools like chrome dev tools or profiler to investigate the memory usage and see if you find any problems.\r\n\r\nIt's also worth noting that you're running on a very old version of React (17.0.2) which has been end-of-lifed, you may want to consider upgrading to a more recent version to ensure you have access to all the latest performance improvements and bug fixes.","updated_at":"2023-01-23T13:19:44Z","created_at":"2023-01-23T13:19:44Z","creator_user_login":"Skand17"}
{"number":26033,"comment_id":"1409224977","body":"@Skand17  - are you responding to this thread as a member of react team?\r\n\r\nI don't expect memory to be cleaned up right away, I understand that it will be cleared once GC kicks in - problem is that there are still references to the old states so even if GC runs it won't be able to remove it. The only way these get removed is after app is used for some more time and more states are created - as if there is states queue with certain capacity that are preserved.\r\n\r\nSo the app is working with an suboptimal memory footprint, in browser it works fine but in web view on ios devices it happens that occasionally os decides to shut down web view process (probably due to excessive memory usage) which is very annoying to out app users - I am hoping if we were to reduce memory footprint this would happen less frequently.\r\n","updated_at":"2023-01-30T19:36:39Z","created_at":"2023-01-30T19:36:39Z","creator_user_login":"milantomic6"}
{"number":26033,"comment_id":"1426864680","body":"Don't you think that , we can use a different method to store data, which is more efficient than this.","updated_at":"2023-02-11T19:56:45Z","created_at":"2023-02-11T19:56:45Z","creator_user_login":"abhishek20111"}
{"number":26033,"comment_id":"1428460388","body":"@abhishek20111 - not sure I quite follow you, can you explain what you meant? - if your questions is whether we can optimize app to use less memory, there is no easy way to do that.","updated_at":"2023-02-13T18:35:34Z","created_at":"2023-02-13T18:35:34Z","creator_user_login":"milantomic6"}
{"number":26065,"comment_id":"1421063063","body":"It doesn't look like this bug report has enough info for one of us to reproduce it.\r\n\r\nPlease provide a CodeSandbox (https://react.new), or a link to a repository on GitHub.\r\n\r\nHere are some tips for providing a minimal example: https://stackoverflow.com/help/mcve\r\n\r\n<!-- mui template next: https://material-ui.com/r/issue-template-next -->\r\n<!-- mui template stable: https://material-ui.com/r/issue-template-latest -->\r\n<!-- react template: https://react.new/ -->","updated_at":"2023-02-07T16:30:23Z","created_at":"2023-02-07T16:30:23Z","creator_user_login":"eps1lon"}
{"number":26065,"comment_id":"1421079374","body":"https://codesandbox.io/s/stoic-tu-kle13g?file=/src/App.js","updated_at":"2023-02-07T16:40:39Z","created_at":"2023-02-07T16:40:39Z","creator_user_login":"m1gu3l"}
{"number":26065,"comment_id":"1422829206","body":"When we do this, we should also add cancel and run for consistency. Seems like these weren't added because they didn't exist when that particular code was written.\r\n\r\nNot sure how much work is required to get this into the current synthetic event system. But then there are also plans to drop the synthetic event system at which point `onTransitionStart` will just start working automatically.","updated_at":"2023-02-08T15:45:22Z","created_at":"2023-02-08T15:45:22Z","creator_user_login":"eps1lon"}
{"number":26065,"comment_id":"1442760042","body":"Should be easy to add to the list, I think.","updated_at":"2023-02-24T03:32:39Z","created_at":"2023-02-24T03:32:39Z","creator_user_login":"gaearon"}
{"number":26065,"comment_id":"1667622357","body":"This has been supported by every major browser since March 2020. https://caniuse.com/mdn-api_element_transitionstart_event\r\n\r\n(Is this React thing still active?)","updated_at":"2023-08-07T17:41:32Z","created_at":"2023-08-07T10:43:15Z","creator_user_login":"pauldraper"}
{"number":26071,"comment_id":"1465258870","body":"Note that it's [now](https://chromestatus.com/feature/5161240576393216) `shadowrootmode` and not `shadowroot`.","updated_at":"2023-03-12T17:52:11Z","created_at":"2023-03-12T17:52:11Z","creator_user_login":"jacobrask"}
{"number":26071,"comment_id":"1584992145","body":"Just removing my previous comments as they weren't as relevant as I believed before I got this far down the rabbit hole. For the time being, I may just steal some of your documentation about the suggestion to patch `react-dom`, I'm glad you identified this issue and it helped me understand it.\r\n\r\nhttps://github.com/jonathandewitt-dev/react-shadow-scope/issues/2","updated_at":"2023-06-09T18:37:44Z","created_at":"2023-06-09T18:37:44Z","creator_user_login":"jonathandewitt-dev"}
{"number":26071,"comment_id":"1657225446","body":"I tried this in the latest version of both Remix and Next.js. It’s definitely an issue.","updated_at":"2023-07-30T17:26:38Z","created_at":"2023-07-30T17:26:38Z","creator_user_login":"o-t-w"}
{"number":26071,"comment_id":"1703207491","body":"@gaearon Is this on anyone's radar to fix? The issues are very distracting in my current Next project. I'd really rather not abandon React and Next, but unless this issue gets fixed, I might find myself with no other option.","updated_at":"2023-09-01T19:06:48Z","created_at":"2023-09-01T19:06:48Z","creator_user_login":"jonathandewitt-dev"}
{"number":26071,"comment_id":"1703386266","body":"Side note @mayerraphael, at some point Next started precompiling `react-dom` so now you have to make changes to this thing to see any difference:\r\n\r\n`node_modules/next/dist/compiled/react-dom/cjs/react-dom.development.js`\r\n\r\nIn case someone lands here from Google, here's what I had to do to make it work: Search for `function beginWork$1`. On the line BEFORE `switch (workInProgress.tag)`, add the following:\r\n\r\n```js\r\nvar isDSD = workInProgress.type === 'template' && (\r\n  workInProgress.pendingProps.shadowrootmode === 'open'\r\n  || workInProgress.pendingProps.shadowrootmode === 'closed'\r\n);\r\n\r\nif (isDSD) {\r\n  return null;\r\n}\r\n```","updated_at":"2023-09-01T22:55:55Z","created_at":"2023-09-01T22:25:07Z","creator_user_login":"jonathandewitt-dev"}
{"number":26790,"comment_id":"1537536304","body":"Hi @hph! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326790). Thanks!","updated_at":"2023-05-07T20:43:09Z","created_at":"2023-05-07T20:43:09Z","creator_user_login":"facebook-github-bot"}
{"number":26790,"comment_id":"1537540824","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-05-07T21:07:16Z","created_at":"2023-05-07T21:07:16Z","creator_user_login":"facebook-github-bot"}
{"number":26790,"comment_id":"1537543196","body":"The tests pass, but it looks like the build is failing because this implementation uses a feature that can't be transpiled by the closure compiler:\r\n\r\n```\r\n[JSC_UNTRANSPILABLE] Cannot convert ECMASCRIPT_2018 feature \"RegExp unicode property escape\" to targeted output language.\r\n```\r\n\r\nDoes this also apply to the ESLint plugins? Presumably they don't really need to be transpiled. Otherwise I'll update the PR so that it doesn't use this feature, it shouldn't be a problem.","updated_at":"2023-05-10T11:21:52Z","created_at":"2023-05-07T21:20:08Z","creator_user_login":"hph"}
{"number":26731,"comment_id":"1524298829","body":"@nbrignol _Why_ are you trying to write a hook as a class? There's no reason to.","updated_at":"2023-04-27T00:35:39Z","created_at":"2023-04-27T00:35:39Z","creator_user_login":"markerikson"}
{"number":26731,"comment_id":"1540339450","body":"@nbrignol you are returning react hooks from the class based component that in itself breaking the reack hook rules. Let us know your usecase we will try to help you with that.","updated_at":"2023-05-09T15:09:12Z","created_at":"2023-05-09T15:09:12Z","creator_user_login":"yanup2913"}
{"number":26731,"comment_id":"1540380150","body":"> @nbrignol _Why_ are you trying to write a hook as a class? There's no reason to.\r\n\r\nBecause I want to :p. Class methods are functions, right ?\r\nAnd in this case because classes are great for abstractions : I can abstract my hook behind an interface for exemple.\r\n\r\nActually this is working very well. The problems comes from the linter's message that is not right.\r\nIf it's forbidden (I'd like to know why and) the message should be dedicated : this is not a class component.\r\nAnd if it's not (what I think and hope) the message should not be triggered here.\r\n\r\n","updated_at":"2023-05-09T15:24:00Z","created_at":"2023-05-09T15:24:00Z","creator_user_login":"nbrignol"}
{"number":26731,"comment_id":"1540387758","body":"@nbrignol there is genuinely _no good reason_ to do this that I can think of.  There's no benefit. A hook doesn't need to be \"abstracted behind an interface\".  It _shouldn't_ have access to class field methods.  It needs to be based solely on the inputs and calling other hooks.  \r\n\r\nYou're running into a problem you've created for yourself :)  Just write it as a normal standalone function and move on.","updated_at":"2023-05-09T15:26:48Z","created_at":"2023-05-09T15:26:48Z","creator_user_login":"markerikson"}
{"number":26731,"comment_id":"1540494918","body":"> @nbrignol there is genuinely _no good reason_ to do this that I can think of. There's no benefit. A hook doesn't need to be \"abstracted behind an interface\". It _shouldn't_ have access to class field methods. It needs to be based solely on the inputs and calling other hooks.\r\n> \r\n> You're running into a problem you've created for yourself :) Just write it as a normal standalone function and move on.\r\n\r\nAgain I think this is not the point.\r\n\r\nEither it's a technical limitation and can't do that : I can understand, and I think you should add a dedicated message because this one does not match the context;\r\nor it's not a problem in itself (even if is not a traditional way to work) and the error should not be triggered.\r\n\r\nIn both case, ESLint doesn't handle well this situation, that's why I am filling this \"bug\". \r\n(Of course I understand this is not a priority matter for the project !)\r\n\r\nThanks for your time.","updated_at":"2023-05-09T16:25:37Z","created_at":"2023-05-09T16:25:37Z","creator_user_login":"nbrignol"}
{"number":26713,"comment_id":"1520442966","body":"Would you mind turning this into two CodeSandbox'es? Thanks!","updated_at":"2023-04-24T16:01:00Z","created_at":"2023-04-24T16:01:00Z","creator_user_login":"gaearon"}
{"number":26713,"comment_id":"1520821861","body":"@gaearon I created this [CodeSandbox with the code](https://codesandbox.io/s/react18safariskiprenderpropschanged-vlz19f). Unfortunately, the issue does not reproduce in CodeSandbox. You can certainly view the code. Is there any chance you could test out the repo that I created on your machine?\r\n\r\nThanks.","updated_at":"2023-04-24T21:03:12Z","created_at":"2023-04-24T21:02:44Z","creator_user_login":"evanbernstein"}
{"number":26713,"comment_id":"1520837601","body":"@gaearon My best guess is that everything runs just a bit slower in CodeSandbox and thus the renders don't get skipped, at least on my Intel Mac. You are probably a much better expert than I am.\r\n\r\nI did just try the CodeSandbox implementation on an m1 mac, and it was not reproducible there.","updated_at":"2023-04-24T21:16:29Z","created_at":"2023-04-24T21:16:29Z","creator_user_login":"evanbernstein"}
{"number":26713,"comment_id":"1582908508","body":"True, tested on my MacBook (M1 Pro) with Safari 16.5.","updated_at":"2023-06-08T15:58:07Z","created_at":"2023-06-08T15:58:07Z","creator_user_login":"nicolawebdev"}
{"number":26713,"comment_id":"1677355263","body":"Test on MacBook (M2 Pro) with Safari 16.6. Can confirm I'm facing this issue as well.","updated_at":"2023-08-14T13:50:53Z","created_at":"2023-08-14T13:50:53Z","creator_user_login":"draysams"}
{"number":26755,"comment_id":"1530264635","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fda1f0b902b527089fe5ae7b3aa573c633166ec9...fed72e3af4b109005866795be3474ae55ee7244d\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/fed72e3af4b109005866795be3474ae55ee7244d/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fda1f0b902b527089fe5ae7b3aa573c633166ec9) | **=** | 164.19 kB | 164.19 kB | = | 51.78 kB | 51.78 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/fed72e3af4b109005866795be3474ae55ee7244d/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fda1f0b902b527089fe5ae7b3aa573c633166ec9) | **=** | 171.55 kB | 171.55 kB | = | 53.98 kB | 53.98 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/fed72e3af4b109005866795be3474ae55ee7244d/files/facebook-www/ReactDOM-prod.classic.js?compare=fda1f0b902b527089fe5ae7b3aa573c633166ec9) | **=** | 570.13 kB | 570.13 kB | = | 100.62 kB | 100.62 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/fed72e3af4b109005866795be3474ae55ee7244d/files/facebook-www/ReactDOM-prod.modern.js?compare=fda1f0b902b527089fe5ae7b3aa573c633166ec9) | **=** | 553.87 kB | 553.87 kB | = | 97.80 kB | 97.80 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against fed72e3af4b109005866795be3474ae55ee7244d\n</p>\n","updated_at":"2023-05-09T23:28:51Z","created_at":"2023-05-01T21:03:54Z","creator_user_login":"react-sizebot"}
{"number":26755,"comment_id":"1530298191","body":"Yeah I figured I'd not add warnings for existing code and I was thinking the non-React form container might happen. But you're right it's probably rare so maybe we just should.","updated_at":"2023-05-01T21:17:51Z","created_at":"2023-05-01T21:17:51Z","creator_user_login":"sophiebits"}
{"number":26755,"comment_id":"1530318047","body":"Even if we add the warning for non-functions for existing code behind a flag for later, it seems nicer to get the warning earlier rather than later. Since this is something that seems like you could accidentally do even during a simple refactor.\r\n\r\nAnother interesting thing is that we don't warn for nested forms in the case where you render into one so you might be tempted to add one as a wrapper when you get this warning which wouldn't be quite correct. Although it probably works as long as it's not SSR.","updated_at":"2023-05-01T21:28:01Z","created_at":"2023-05-01T21:28:01Z","creator_user_login":"sebmarkbage"}
{"number":26755,"comment_id":"1541028889","body":"Weirdly we would catch invalid form nesting if the container is a form, but not if the container is inside a form. I left that logic as-is for now. I suppose since you can reparent containers that makes sense in some sense. For SSR into a form ancestor you wouldn't get the warning but you would get the hydration error, which seems fine since it should be rare.\r\n\r\nWith diffInCommitPhase it looks like the bindings currently don't have access to hostContext anytime during updates.","updated_at":"2023-05-09T23:49:00Z","created_at":"2023-05-09T23:49:00Z","creator_user_login":"sophiebits"}
{"number":26760,"comment_id":"1531744817","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 5dd90c562354758942c833b0a46923176e92208e...87d0433d61b50e8dd404c1162647cd7efd7fdff9\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/87d0433d61b50e8dd404c1162647cd7efd7fdff9/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=5dd90c562354758942c833b0a46923176e92208e) | **+0.09%** | 164.18 kB | 164.32 kB | +0.08% | 51.78 kB | 51.82 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/87d0433d61b50e8dd404c1162647cd7efd7fdff9/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=5dd90c562354758942c833b0a46923176e92208e) | **+0.08%** | 171.57 kB | 171.71 kB | +0.06% | 53.99 kB | 54.02 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/87d0433d61b50e8dd404c1162647cd7efd7fdff9/files/facebook-www/ReactDOM-prod.classic.js?compare=5dd90c562354758942c833b0a46923176e92208e) | **+0.09%** | 570.19 kB | 570.72 kB | +0.09% | 100.62 kB | 100.71 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/87d0433d61b50e8dd404c1162647cd7efd7fdff9/files/facebook-www/ReactDOM-prod.modern.js?compare=5dd90c562354758942c833b0a46923176e92208e) | **+0.10%** | 553.93 kB | 554.46 kB | +0.09% | 97.80 kB | 97.88 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [facebook-www/ReactDOMServerStreaming-prod.modern.js](https://react-builds.vercel.app/commits/87d0433d61b50e8dd404c1162647cd7efd7fdff9/files/facebook-www/ReactDOMServerStreaming-prod.modern.js?compare=5dd90c562354758942c833b0a46923176e92208e) | **=** | 140.85 kB | 140.44 kB | +0.03% | 26.70 kB | 26.71 kB\n| [facebook-www/ReactDOMServer-prod.classic.js](https://react-builds.vercel.app/commits/87d0433d61b50e8dd404c1162647cd7efd7fdff9/files/facebook-www/ReactDOMServer-prod.classic.js?compare=5dd90c562354758942c833b0a46923176e92208e) | **=** | 139.36 kB | 138.95 kB | +0.02% | 26.01 kB | 26.01 kB\n| [facebook-www/ReactDOMServer-prod.modern.js](https://react-builds.vercel.app/commits/87d0433d61b50e8dd404c1162647cd7efd7fdff9/files/facebook-www/ReactDOMServer-prod.modern.js?compare=5dd90c562354758942c833b0a46923176e92208e) | **=** | 135.83 kB | 135.43 kB | = | 25.29 kB | 25.29 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 87d0433d61b50e8dd404c1162647cd7efd7fdff9\n</p>\n","updated_at":"2023-05-02T16:21:32Z","created_at":"2023-05-02T16:10:39Z","creator_user_login":"react-sizebot"}
{"number":26778,"comment_id":"1534336890","body":"Hi @lmk123! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326778). Thanks!","updated_at":"2023-05-04T08:54:29Z","created_at":"2023-05-04T08:54:29Z","creator_user_login":"facebook-github-bot"}
{"number":26778,"comment_id":"1534343189","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: aef7ce5547c9489dc48e31f69b002cd17206e0cb...aa226f48e4450dc71c753c5292f3f9b27377521a\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/aa226f48e4450dc71c753c5292f3f9b27377521a/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=aef7ce5547c9489dc48e31f69b002cd17206e0cb) | **=** | 164.19 kB | 164.19 kB | = | 51.78 kB | 51.78 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/aa226f48e4450dc71c753c5292f3f9b27377521a/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=aef7ce5547c9489dc48e31f69b002cd17206e0cb) | **=** | 171.55 kB | 171.55 kB | = | 53.98 kB | 53.99 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/aa226f48e4450dc71c753c5292f3f9b27377521a/files/facebook-www/ReactDOM-prod.classic.js?compare=aef7ce5547c9489dc48e31f69b002cd17206e0cb) | **=** | 570.13 kB | 570.14 kB | = | 100.62 kB | 100.62 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/aa226f48e4450dc71c753c5292f3f9b27377521a/files/facebook-www/ReactDOM-prod.modern.js?compare=aef7ce5547c9489dc48e31f69b002cd17206e0cb) | **=** | 553.87 kB | 553.88 kB | = | 97.80 kB | 97.80 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against aa226f48e4450dc71c753c5292f3f9b27377521a\n</p>\n","updated_at":"2023-05-04T08:59:03Z","created_at":"2023-05-04T08:59:03Z","creator_user_login":"react-sizebot"}
{"number":26778,"comment_id":"1534357843","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-05-04T09:08:08Z","created_at":"2023-05-04T09:08:08Z","creator_user_login":"facebook-github-bot"}
{"number":26805,"comment_id":"1546118542","body":"If I'm understanding this correctly, the bug occurs when you use your event handlers to clear the input/text and re-focus onto the input/textarea, and the application is not registering the text input coming from the IME. \r\n\r\nCould you try adding inputRef.current.blur() and textAreaRef.current.blur(), prior to setting the Input and areaText to empty string? So the order will be: blur --> clear input --> focus.\r\n\r\nIf the behavior seems random, then we can try wrapping the clear input and focus within a promise so we can ensure it executes after the blur event. ","updated_at":"2023-05-12T18:22:47Z","created_at":"2023-05-12T18:22:47Z","creator_user_login":"Ykk2"}
{"number":26805,"comment_id":"1546602372","body":"@Ykk2 Thank you, I tried both ways you suggested, and here is what happened:\r\n  - in case that I add textAreaRef.current.blur(),  i still got the same bug as before\r\n```\r\ntextAreaRef.current.blur();\r\n    setAreaText('');\r\n    textAreaRef.current.focus();\r\n```\r\n  - Incase that i use Promise to make sure they are executed in order ( blur --> clear input --> focus. ), in IOS: the virtual keyboard is hidden when the button is pressed, while in Android, virtual keyboard is hidden but it shows up immediately, and textarea is focus\r\n With the code that I provided from the beginning, this is what happens on android: https://screenpal.com/watch/c0hIjGVAIJw , and I think this is how it should be on IOS, without adding any code. But as i said, it might cause by IOS IME, so if you have another solution to fix this, plz reply, thanks a lot","updated_at":"2023-05-13T09:05:26Z","created_at":"2023-05-13T09:03:54Z","creator_user_login":"ytutyg0"}
{"number":26805,"comment_id":"1555862398","body":"@ytutyg0 \r\n\r\nCan you try adding the below two handlers and check.\r\n\r\n  const handleCompositionStart = () => {\r\n    // When composition starts, clear the areaText state\r\n    setAreaText('');\r\n  };\r\n\r\n  const handleCompositionEnd = (e) => {\r\n    // When composition ends, update the areaText state with the composed text\r\n    setAreaText(e.target.value);\r\n  };\r\n\r\n  \r\n <textarea\r\n   className=\"textarea-field\"\r\n   ref={textAreaRef}\r\n   onChange={(e) => setAreaText(e.target.value)}\r\n   onCompositionStart={handleCompositionStart}\r\n   onCompositionEnd={handleCompositionEnd}\r\n   value={areaText}\r\n />;\r\n","updated_at":"2023-05-20T08:42:35Z","created_at":"2023-05-20T08:30:01Z","creator_user_login":"bsuryab"}
{"number":26805,"comment_id":"1562179724","body":"@bsuryab sorry for the late response and thanks for your help, i tried your suggested way but it didn't work","updated_at":"2023-05-25T02:46:53Z","created_at":"2023-05-25T02:46:53Z","creator_user_login":"ytutyg0"}
{"number":25262,"comment_id":"1246367834","body":"@sparkbuzz: We're sorry you've seen this error. ❤️\n\nIt looks like you forgot to specify a valid URL. (This means that we will not be able to reproduce the problem you're reporting.)\n\nPlease help us by providing a link to a CodeSandbox (https://codesandbox.io/s/new), a repository on GitHub, or a minimal code example that reproduces the problem. (Screenshots or videos can also be helpful if they help provide context on how to repro the bug.)\n\nHere are some tips for providing a minimal example: https://stackoverflow.com/help/mcve\n\nIssues without repros are automatically closed but we will re-open if you update with repro info.","updated_at":"2022-09-14T07:38:36Z","created_at":"2022-09-14T07:38:36Z","creator_user_login":"github-actions[bot]"}
{"number":25262,"comment_id":"1246420050","body":"Thank you for providing repro steps! Re-opening issue now for triage.","updated_at":"2022-09-14T08:27:16Z","created_at":"2022-09-14T08:27:16Z","creator_user_login":"github-actions[bot]"}
{"number":25549,"comment_id":"1295830665","body":"> facebook#25548\r\n1. I have added the style tests.\r\n2. **React Native support [array of styles](https://reactnative.dev/docs/style).**\r\n```\r\nThe style prop can be a plain old JavaScript object. That's what we usually use for example code. \r\nYou can also pass an array of styles - the last style in the array has precedence, so you can use this to inherit styles.\r\n```\r\nUse `renderToString` to parse React Native code will be error : \r\n`renderToString(<Text style={[{left:0}, {right:0}]}>array of styles</Text>)` => `style=\"0:[Object],1:[Object]\"`\r\n\r\n","updated_at":"2022-10-29T13:03:08Z","created_at":"2022-10-29T13:03:08Z","creator_user_login":"linjinze999"}
{"number":25549,"comment_id":"1296780020","body":"> Use renderToString to parse React Native code will be error :\r\n\r\nYou're changing code for rendering react-dom components though. Rendering components that target a different renderer (here: react-native) is not supported by `react-dom/server`.\r\n\r\nIt sounds like you have a use case for rendering React Native to a string? I would suggest filing this as a feature request against https://github.com/facebook/react-native","updated_at":"2022-10-31T08:50:58Z","created_at":"2022-10-31T08:50:58Z","creator_user_login":"eps1lon"}
{"number":25549,"comment_id":"1299475557","body":"Do React consider adding array style properties? I think it's very useful.","updated_at":"2022-11-02T02:27:23Z","created_at":"2022-11-02T02:27:23Z","creator_user_login":"linjinze999"}
{"number":18940,"comment_id":"630071072","body":"I think React follow the HTML spec. regarding the input types.\r\nhttps://html.spec.whatwg.org/multipage/input.html#attr-input-type\r\n\r\nThere is no such thing as `<input type=\"textarea\"`","updated_at":"2020-05-18T09:45:15Z","created_at":"2020-05-18T09:45:15Z","creator_user_login":"kunukn"}
{"number":18940,"comment_id":"674508701","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-08-16T10:23:30Z","created_at":"2020-08-16T10:23:30Z","creator_user_login":"stale[bot]"}
{"number":18940,"comment_id":"674513305","body":"As I pointed out in my original request, `<textarea>` doesn't follow the HTML spec, instead it does something that makes more sense. Why not do the thing that makes a lot of sense and use `<input type=\"textarea\">`?","updated_at":"2020-08-16T11:12:11Z","created_at":"2020-08-16T11:12:11Z","creator_user_login":"JasonWoof"}
{"number":18940,"comment_id":"751254259","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T14:06:35Z","created_at":"2020-12-25T14:06:35Z","creator_user_login":"stale[bot]"}
{"number":18965,"comment_id":"631733668","body":"### addendum\r\n\r\nw3c sees this feature as standard, so it should not be overridden by any.","updated_at":"2020-05-20T21:21:46Z","created_at":"2020-05-20T21:21:28Z","creator_user_login":"welsen"}
{"number":18965,"comment_id":"631854208","body":"i wrote an [example](https://codesandbox.io/s/hopeful-paper-1zodm?file=/src/App.js), hope help to you\r\n","updated_at":"2020-05-21T03:16:37Z","created_at":"2020-05-21T03:16:37Z","creator_user_login":"iosh"}
{"number":18965,"comment_id":"631865246","body":"> i wrote an [example](https://codesandbox.io/s/hopeful-paper-1zodm?file=/src/App.js), hope help to you\r\n\r\nThanks, but the example is still not context sensitive :(","updated_at":"2020-05-21T04:00:19Z","created_at":"2020-05-21T04:00:19Z","creator_user_login":"welsen"}
{"number":18965,"comment_id":"631875265","body":"![sample](https://user-images.githubusercontent.com/266681/82522705-832e4200-9b2a-11ea-8bd3-887cb5a15a18.png)\r\n\r\nHere is a mock sample notice the caret position, and the select box.\r\n\r\n1. the caret is in the `h1` DOM element\r\n2. the caret is in the first `p` DOM element\r\n\r\nAs you navigate the caret the `<select>` should change to the proper value\r\n\r\nIn the example you have the edit field which has a state that is our context, and we have the combobox which also has a state. The edit field has the reference object from the select element, so it can set the state of that.\r\n\r\nAll together we have two objects with different states which can communicate, we also have the context data where our caret is, it should be simple to set the state of the select object, and as it should represent the new state, which it is not doing.\r\n\r\nDebug shows that the `<select>` has the new state, still showing the wrong value, also the `<select>` element is updated on said change.\r\n\r\nTo have the correct behavior I had to set the proper `<option>` elements `selected` attribute, whereas I'm receiving a big red message:\r\n\r\n```\r\nWarning: Use the `defaultValue` or `value` props on <select> instead of setting `selected` on <option>.\r\n```\r\n\r\n**The selected attribute is a boolean attribute. It represents the default selectedness of the element.**\r\n\r\nhttps://www.w3.org/TR/2011/WD-html5-author-20110809/the-select-element.html\r\n\r\nhttps://www.w3.org/TR/2011/WD-html5-author-20110809/the-option-element.html\r\n","updated_at":"2020-05-21T04:40:27Z","created_at":"2020-05-21T04:40:27Z","creator_user_login":"welsen"}
{"number":18965,"comment_id":"676511327","body":"Hi there, could you recreate this in a [codesandbox](https://codesandbox.io/) so I can confirm it reproduces?","updated_at":"2020-08-19T15:55:17Z","created_at":"2020-08-19T15:55:17Z","creator_user_login":"rachelnabors"}
{"number":18965,"comment_id":"717944490","body":"@rachelnabors I converted the code snippet in the issue description into a Code Sandbox that repros:\r\nhttps://codesandbox.io/s/frosty-leftpad-n96nu?file=/src/App.js\r\n\r\nI'm not sure I agree with the suggested outcome of this issue though, so I'm going to tag this as \"discussion\" for now.","updated_at":"2020-10-28T13:47:21Z","created_at":"2020-10-28T13:47:21Z","creator_user_login":"bvaughn"}
{"number":18616,"comment_id":"614356277","body":"@hanq08 \r\n\r\nYou could achieve it by using an effect and attaching an event listener to the button:\r\n\r\n```js\r\nfunction WindowPortal({ children }) {\r\n  const [container, setContainer] = useState(document.createElement(\"div\"));\r\n\r\n  useEffect(() => {\r\n    const newWindow = window.open(\r\n      \"\",\r\n      \"\",\r\n      \"width=600,height=400,left=200,top=200\"\r\n    );\r\n    newWindow.document.body.appendChild(container);\r\n  }, [container]);\r\n\r\n  return ReactDOM.createPortal(children, container);\r\n}\r\n\r\nexport default function App() {\r\n  const [value, setValue] = useState(\"unclicked\");\r\n  const buttonRef = useRef(null);\r\n  const handleClick = () => setValue(\"clicked\");\r\n\r\n  useEffect(() => {\r\n    if (buttonRef.current) {\r\n      buttonRef.current.addEventListener(\"click\", handleClick);\r\n\r\n      return () => buttonRef.current.removeEventListener(\"click\", handleClick);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <div>Portal Test</div>\r\n      <WindowPortal>\r\n        <button ref={buttonRef}>{value}</button>\r\n      </WindowPortal>\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\nLooks like something to be made into a nice custom hook?","updated_at":"2020-04-16T01:09:08Z","created_at":"2020-04-16T01:09:08Z","creator_user_login":"tombrowndev"}
{"number":18616,"comment_id":"614356988","body":"Maybe for official support we could introduce new event properties such as `nativeOnClick`?","updated_at":"2020-04-16T01:11:20Z","created_at":"2020-04-16T01:11:20Z","creator_user_login":"tombrowndev"}
{"number":18616,"comment_id":"614909829","body":"@tombrowndev yep that should work. But I don't know if there are any potential issues by mixing event delegation system and events binding to ref arbitrarily. I feel like the whole app should either use native event binding or event delegation rather than having some event delegated to the root and some bind to the host dom. ","updated_at":"2020-04-16T21:37:29Z","created_at":"2020-04-16T21:37:29Z","creator_user_login":"hanq08"}
{"number":18616,"comment_id":"657541481","body":"We've had a couple of discussions around event propagation and portals in the past (see also https://github.com/facebook/react/issues/11387). Seems like this is a part of that discussion","updated_at":"2020-07-13T12:50:45Z","created_at":"2020-07-13T12:50:45Z","creator_user_login":"rachelnabors"}
{"number":13400,"comment_id":"413046377","body":"Another fun inconsistency I've just noticed is that `BOOLEANISH_STRING` props (e.g. `draggable`, `spellCheck`) treat `\"\"` as _truthy_ (the way HTML does), the opposite of how `BOOLEAN` props behave. This too has been the case since React 0.14 or earlier.","updated_at":"2018-08-14T23:35:19Z","created_at":"2018-08-14T23:20:32Z","creator_user_login":"motiz88"}
{"number":13400,"comment_id":"413048688","body":"Maybe we should always warn when passing a string to a boolean attribute? Seems like it's always counter-intuitive what you'd get.","updated_at":"2018-08-14T23:33:12Z","created_at":"2018-08-14T23:33:12Z","creator_user_login":"gaearon"}
{"number":13400,"comment_id":"413056690","body":"@gaearon Yeah, I'd definitely be on board with that as a way to unify this and #13372.\r\n\r\nAlthough, thinking about the case of a newly-specced HTML attribute: Looks like currently `foobar=\"foobar\"` is the most reliable thing to do, as it will behave the same whether or not React DOM has `foobar` in its whitelist. So maybe that's one tentative argument against a blanket warning on string values passed to boolean attributes, and for focusing on actually-ambiguous cases instead.","updated_at":"2018-08-15T00:22:01Z","created_at":"2018-08-15T00:22:01Z","creator_user_login":"motiz88"}
{"number":27237,"comment_id":"1681606226","body":"@mattlohkamp I would like to work on this ","updated_at":"2023-08-17T04:46:04Z","created_at":"2023-08-17T04:46:04Z","creator_user_login":"tusharrana786"}
{"number":27237,"comment_id":"1681631581","body":"@mattlohkamp  Adding an import statement to import React in App.js fixes this issue for newer versions of node.\r\nmy current node version is 18.17.0. \r\n      ","updated_at":"2023-08-17T05:21:45Z","created_at":"2023-08-17T05:21:45Z","creator_user_login":"tusharrana786"}
{"number":27237,"comment_id":"1683040754","body":"@tusharrana786 - confirmed, updating App.js to \r\n\r\n```js\r\nimport React from \"react\";\r\nexport default function Square() {\r\n\treturn <button className=\"square\">X</button>;\r\n}\r\n```\r\n\r\ndoes fix the problem, works fine in latest version of node (v20.5.1)\r\n\r\nso it seems like it should be easy enough to address this issue by updating the source code provided in the tutorial?","updated_at":"2023-08-17T22:07:53Z","created_at":"2023-08-17T22:07:53Z","creator_user_login":"mattlohkamp"}
{"number":27237,"comment_id":"1683209650","body":"I can open a different ticket for it, but this is not the only node version related problem with the tutorial code - very nearly the next step instructs you to add a fragment like so:\r\n\r\n```jsx\r\nimport React from \"react\";\r\nexport default function Square() {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<button className=\"square\">X</button>\r\n\t\t\t<button className=\"square\">X</button>\r\n\t\t</>\r\n\t);\r\n}\r\n```\r\n\r\nwhich results in an error in node v20 -\r\n\r\n> Syntax error: Unexpected token (24:5)\r\n\r\nbut works fine in node v15.\r\n\r\nI'll go ahead and keep walking through the tutorial steps, but this does seem like it's going to require a bit of work to dig out version incompatibilities. This is the first tutorial that users are directed to after landing on the site, so it's a bit worrisome how easy it is to run into these roadblocks, without much in the way of warning as to what's causing the issues.","updated_at":"2023-08-18T01:40:18Z","created_at":"2023-08-18T01:40:18Z","creator_user_login":"mattlohkamp"}
{"number":27237,"comment_id":"1683359264","body":"@mattlohkamp i believe this error is caused by babel not by node, the app currently uses babel 6.26.3 which does not support the shorthand syntax for react fragments as mentioned in the article below\r\nhttps://reactjs.org/blog/2017/11/28/react-v16.2.0-fragment-support.html#support-for-fragment-syntax\r\npossible solution might be updating the babel version used in the application.\r\n   ","updated_at":"2023-08-18T05:06:51Z","created_at":"2023-08-18T05:06:51Z","creator_user_login":"tusharrana786"}
{"number":27237,"comment_id":"1683383417","body":"well it might be a coincidence, but node v20 fails on the shorthand fragment syntax, while node v15 works just fine - maybe the node version has implications for how babel functions, or which version of babel is installed as a dependency somehow?","updated_at":"2023-08-18T05:44:01Z","created_at":"2023-08-18T05:43:26Z","creator_user_login":"mattlohkamp"}
{"number":27237,"comment_id":"1683417768","body":"It might be the case, can't find any conclusive evidence to support the statement but i have verified the fact that it's working fine for nodev15 and under.","updated_at":"2023-08-18T06:29:59Z","created_at":"2023-08-18T06:29:41Z","creator_user_login":"tusharrana786"}
{"number":27237,"comment_id":"1694290793","body":"I am brand new to react and js and it is funny that all I hear about is how react projects are a dependency nightmare and that projects break all the time. The first tutorial I try and it is broken due to changes in how to approach react development. \r\n\r\nI concur that adding the import statement is a quick fix - but it is the same problem that I see over and over: a quick fix. \r\n\r\nIt is my understanding that the latest versions of react do not require the import statement. In an attempt to follow what I could online, I followed https://kinsta.com/knowledgebase/react-must-be-in-scope-when-using-jsx/ which suggested the following additions to the package.json file:\r\n```\r\n\"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\"\r\n    ],\r\n    \"rules\": {\r\n      \"react/jsx-uses-react\": \"off\",\r\n      \"react/react-in-jsx-scope\": \"off\"\r\n    }\r\n  },\r\n```\r\n\r\nThis however did not work. After deleting node_modules and trying again, which failed the same way, so I attempted to `npm install react-scripts@latest` which then caused the following:\r\n\r\n```\r\n113 vulnerabilities (11 low, 64 moderate, 28 high, 10 critical)\r\n\r\nTo address issues that do not require attention, run:\r\n  npm audit fix\r\n\r\nTo address all issues, run:\r\n  npm audit fix --force\r\n```\r\nAnd running that did not work:\r\n```\r\nnpm WARN using --force Recommended protections disabled.\r\nnpm WARN audit Updating react-scripts to 5.0.1,which is a SemVer major change.\r\nnpm ERR! code ENOTEMPTY\r\nnpm ERR! syscall rename\r\nnpm ERR! path /home/qwert/code/react/tictactoe/node_modules/babel-loader\r\nnpm ERR! dest /home/qwert/code/react/tictactoe/node_modules/.babel-loader-hpLZW4ai\r\nnpm ERR! errno -39\r\nnpm ERR! ENOTEMPTY: directory not empty, rename '/home/qwert/code/react/tictactoe/node_modules/babel-loader' -> '/home/qwert/code/react/tictactoe/node_modules/.babel-loader-hpLZW4ai'\r\n```\r\nThen subsequent commands would error out with:\r\n```\r\nnpm install react@latest react-dom@latest\r\nnpm WARN EBADENGINE Unsupported engine {\r\nnpm WARN EBADENGINE   package: 'cssstyle@3.0.0',\r\nnpm WARN EBADENGINE   required: { node: '>=14' },\r\nnpm WARN EBADENGINE   current: { node: 'v12.22.9', npm: '8.5.1' }\r\nnpm WARN EBADENGINE }\r\nnpm WARN EBADENGINE Unsupported engine {\r\nnpm WARN EBADENGINE   package: 'data-urls@4.0.0',\r\nnpm WARN EBADENGINE   required: { node: '>=14' },\r\nnpm WARN EBADENGINE   current: { node: 'v12.22.9', npm: '8.5.1' }\r\nnpm WARN EBADENGINE }\r\n...\r\n```\r\n\r\nI was only able to remedy the situation by nuking the changes I had made and then following the suggestion here of adding the `import React from \"react\";` line to `App.js`. \r\n\r\nI can see why the quick fix is tempting, after all, you simply just add the one line and the project works again. However, there is something deeper that is broken in this tutorial as it requires a hack to allow \"modern\" react development. \r\n","updated_at":"2023-08-26T11:32:52Z","created_at":"2023-08-26T11:32:52Z","creator_user_login":"sethgrid"}
{"number":27237,"comment_id":"1694324162","body":"not sure if it is the same bug or a different one since it is about versions. \r\nFollowing the tutorial, I am unable to use the more modern fragment syntax:\r\n```\r\nFailed to compile.\r\n\r\n./src/App.js\r\nSyntax error: Unexpected token (5:5)\r\n\r\n  3 | export default function Square() {\r\n  4 |   return (\r\n> 5 |     <>\r\n    |      ^\r\n  6 |       <div className=\"board-row\">\r\n  7 |         <button className=\"square\">X</button>\r\n  8 |         <button className=\"square\">X</button>\r\n```\r\nMy workaround is to not use `<></>` but to use `<div></div>`","updated_at":"2023-08-26T11:51:14Z","created_at":"2023-08-26T11:51:14Z","creator_user_login":"sethgrid"}
{"number":27237,"comment_id":"1701677484","body":"Yep, I ran into that issue with fragments as well. I think the more proper workaround would be to use the full template tag rather than the abbreviated one - `<React.Fragment></React.Fragment>` - if your goal is still to use fragments.","updated_at":"2023-08-31T19:38:32Z","created_at":"2023-08-31T19:38:32Z","creator_user_login":"mattlohkamp"}
{"number":26854,"comment_id":"1563281066","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: a1f97589fd298cd71f97339a230f016139c7382f...cb060e88b8fee5b3630d2b4baf94a81126f3de03\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.04%** | 164.23 kB | 164.30 kB | +0.02% | 51.77 kB | 51.78 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.15%** | 171.67 kB | 171.92 kB | +0.14% | 54.01 kB | 54.08 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/facebook-www/ReactDOM-prod.classic.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.02%** | 570.42 kB | 570.55 kB | +0.04% | 100.64 kB | 100.68 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/facebook-www/ReactDOM-prod.modern.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.02%** | 554.16 kB | 554.29 kB | +0.04% | 97.82 kB | 97.86 kB\n| [oss-experimental/react-is/cjs/react-is.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-is/cjs/react-is.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+3.70%** | 2.30 kB | 2.39 kB | +2.40% | 0.79 kB | 0.81 kB\n| [oss-experimental/react-is/umd/react-is.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-is/umd/react-is.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+3.56%** | 2.39 kB | 2.47 kB | +2.59% | 0.89 kB | 0.91 kB\n| [oss-experimental/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react/cjs/react.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+2.52%** | 9.16 kB | 9.39 kB | +1.38% | 3.42 kB | 3.46 kB\n| [oss-experimental/react-is/cjs/react-is.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-is/cjs/react-is.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+2.52%** | 7.35 kB | 7.54 kB | +1.64% | 2.01 kB | 2.04 kB\n| [oss-experimental/react-is/umd/react-is.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-is/umd/react-is.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+2.38%** | 7.95 kB | 8.14 kB | +1.42% | 2.11 kB | 2.14 kB\n| [oss-stable-semver/react-is/cjs/react-is.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-stable-semver/react-is/cjs/react-is.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+2.06%** | 7.33 kB | 7.48 kB | +2.64% | 2.01 kB | 2.06 kB\n| [oss-stable/react-is/cjs/react-is.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-stable/react-is/cjs/react-is.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+2.06%** | 7.33 kB | 7.48 kB | +2.64% | 2.01 kB | 2.06 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/react-is/cjs/react-is.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-is/cjs/react-is.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+3.70%** | 2.30 kB | 2.39 kB | +2.40% | 0.79 kB | 0.81 kB\n| [oss-experimental/react-is/umd/react-is.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-is/umd/react-is.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+3.56%** | 2.39 kB | 2.47 kB | +2.59% | 0.89 kB | 0.91 kB\n| [oss-experimental/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react/cjs/react.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+2.52%** | 9.16 kB | 9.39 kB | +1.38% | 3.42 kB | 3.46 kB\n| [oss-experimental/react-is/cjs/react-is.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-is/cjs/react-is.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+2.52%** | 7.35 kB | 7.54 kB | +1.64% | 2.01 kB | 2.04 kB\n| [oss-experimental/react-is/umd/react-is.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-is/umd/react-is.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+2.38%** | 7.95 kB | 8.14 kB | +1.42% | 2.11 kB | 2.14 kB\n| [oss-stable-semver/react-is/cjs/react-is.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-stable-semver/react-is/cjs/react-is.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+2.06%** | 7.33 kB | 7.48 kB | +2.64% | 2.01 kB | 2.06 kB\n| [oss-stable/react-is/cjs/react-is.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-stable/react-is/cjs/react-is.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+2.06%** | 7.33 kB | 7.48 kB | +2.64% | 2.01 kB | 2.06 kB\n| [oss-stable-semver/react-is/umd/react-is.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-stable-semver/react-is/umd/react-is.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+1.93%** | 7.93 kB | 8.08 kB | +2.47% | 2.10 kB | 2.15 kB\n| [oss-stable/react-is/umd/react-is.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-stable/react-is/umd/react-is.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+1.93%** | 7.93 kB | 8.08 kB | +2.47% | 2.10 kB | 2.15 kB\n| [oss-experimental/react/umd/react.profiling.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react/umd/react.profiling.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+1.67%** | 12.98 kB | 13.20 kB | +1.12% | 4.99 kB | 5.04 kB\n| [oss-experimental/react/umd/react.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react/umd/react.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+1.67%** | 12.98 kB | 13.20 kB | +1.14% | 4.98 kB | 5.04 kB\n| [facebook-www/React-prod.modern.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/facebook-www/React-prod.modern.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+1.23%** | 21.30 kB | 21.56 kB | +0.83% | 5.31 kB | 5.35 kB\n| [facebook-react-native/react/cjs/React-prod.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/facebook-react-native/react/cjs/React-prod.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+1.23%** | 21.33 kB | 21.59 kB | +0.79% | 5.35 kB | 5.39 kB\n| [facebook-www/React-prod.classic.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/facebook-www/React-prod.classic.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+1.22%** | 21.60 kB | 21.86 kB | +0.80% | 5.38 kB | 5.42 kB\n| [facebook-react-native/react/cjs/React-profiling.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/facebook-react-native/react/cjs/React-profiling.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+1.22%** | 21.64 kB | 21.91 kB | +0.81% | 5.40 kB | 5.44 kB\n| [facebook-www/React-profiling.modern.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/facebook-www/React-profiling.modern.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+1.20%** | 21.91 kB | 22.17 kB | +0.85% | 5.43 kB | 5.48 kB\n| [facebook-www/React-profiling.classic.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/facebook-www/React-profiling.classic.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+1.18%** | 22.20 kB | 22.46 kB | +0.82% | 5.51 kB | 5.55 kB\n| [facebook-react-native/react-is/cjs/ReactIs-dev.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/facebook-react-native/react-is/cjs/ReactIs-dev.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+1.14%** | 7.29 kB | 7.38 kB | +1.12% | 1.97 kB | 1.99 kB\n| [facebook-www/ReactIs-dev.modern.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/facebook-www/ReactIs-dev.modern.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+1.08%** | 7.66 kB | 7.75 kB | +1.08% | 2.03 kB | 2.06 kB\n| [facebook-www/ReactIs-dev.classic.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/facebook-www/ReactIs-dev.classic.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+1.08%** | 7.67 kB | 7.75 kB | +1.03% | 2.03 kB | 2.06 kB\n| [oss-experimental/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react/cjs/react.shared-subset.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.72%** | 8.35 kB | 8.41 kB | +0.52% | 3.44 kB | 3.46 kB\n| [oss-experimental/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-server/cjs/react-server.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.55%** | 25.39 kB | 25.53 kB | +0.32% | 8.65 kB | 8.68 kB\n| [oss-experimental/react/cjs/react.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react/cjs/react.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.53%** | 101.58 kB | 102.12 kB | +0.47% | 27.41 kB | 27.54 kB\n| [oss-experimental/react/umd/react.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react/umd/react.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.45%** | 125.22 kB | 125.78 kB | +0.41% | 32.29 kB | 32.42 kB\n| [oss-experimental/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react/cjs/react-jsx-dev-runtime.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.43%** | 42.93 kB | 43.12 kB | +0.27% | 12.52 kB | 12.56 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react/cjs/react-jsx-runtime.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.43%** | 43.53 kB | 43.71 kB | +0.26% | 12.70 kB | 12.73 kB\n| [facebook-react-native/react/cjs/React-dev.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/facebook-react-native/react/cjs/React-dev.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.36%** | 120.04 kB | 120.48 kB | +0.36% | 31.60 kB | 31.72 kB\n| [oss-stable-semver/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-stable-semver/react/cjs/react-jsx-dev-runtime.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.35%** | 42.96 kB | 43.11 kB | +0.37% | 12.53 kB | 12.58 kB\n| [oss-stable/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-stable/react/cjs/react-jsx-dev-runtime.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.35%** | 42.96 kB | 43.11 kB | +0.37% | 12.53 kB | 12.58 kB\n| [oss-experimental/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react/cjs/react.shared-subset.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.35%** | 85.70 kB | 85.99 kB | +0.35% | 23.79 kB | 23.87 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-stable-semver/react/cjs/react-jsx-runtime.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.35%** | 43.56 kB | 43.71 kB | +0.36% | 12.70 kB | 12.75 kB\n| [oss-stable/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-stable/react/cjs/react-jsx-runtime.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.35%** | 43.56 kB | 43.71 kB | +0.36% | 12.70 kB | 12.75 kB\n| [facebook-www/React-dev.modern.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/facebook-www/React-dev.modern.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.34%** | 126.66 kB | 127.10 kB | +0.40% | 33.45 kB | 33.59 kB\n| [facebook-www/React-dev.classic.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/facebook-www/React-dev.classic.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.34%** | 127.76 kB | 128.19 kB | +0.40% | 33.70 kB | 33.83 kB\n| [oss-experimental/react-art/cjs/react-art.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-art/cjs/react-art.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.25%** | 98.26 kB | 98.51 kB | +0.15% | 30.15 kB | 30.20 kB\n| [oss-experimental/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-server/cjs/react-server.development.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.24%** | 147.64 kB | 148.00 kB | +0.05% | 36.78 kB | 36.80 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.23%** | 61.54 kB | 61.68 kB | +0.16% | 18.51 kB | 18.54 kB\n| [oss-experimental/react-dom/umd/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-dom/umd/react-dom-server-legacy.browser.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.23%** | 61.71 kB | 61.85 kB | +0.20% | 18.78 kB | 18.82 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-dom/cjs/react-dom-static.browser.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.23%** | 62.22 kB | 62.36 kB | +0.18% | 19.26 kB | 19.30 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.23%** | 62.34 kB | 62.48 kB | +0.17% | 19.32 kB | 19.35 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.edge.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-dom/cjs/react-dom-static.edge.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.23%** | 62.56 kB | 62.70 kB | +0.15% | 19.39 kB | 19.42 kB\n| [facebook-react-native/react/cjs/JSXDEVRuntime-dev.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/facebook-react-native/react/cjs/JSXDEVRuntime-dev.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.22%** | 37.02 kB | 37.10 kB | +0.17% | 10.66 kB | 10.68 kB\n| [oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.22%** | 62.50 kB | 62.64 kB | +0.12% | 19.57 kB | 19.60 kB\n| [facebook-react-native/react/cjs/JSXRuntime-dev.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/facebook-react-native/react/cjs/JSXRuntime-dev.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.22%** | 37.62 kB | 37.70 kB | +0.23% | 10.83 kB | 10.85 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.22%** | 115.19 kB | 115.44 kB | +0.12% | 35.18 kB | 35.22 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-dom/cjs/react-dom-server.bun.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.21%** | 65.41 kB | 65.55 kB | +0.13% | 20.03 kB | 20.06 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.21%** | 66.40 kB | 66.54 kB | +0.10% | 20.07 kB | 20.10 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.edge.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-dom/cjs/react-dom-server.edge.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.21%** | 66.69 kB | 66.83 kB | +0.12% | 20.81 kB | 20.83 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.21%** | 66.79 kB | 66.93 kB | +0.12% | 20.86 kB | 20.89 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.21%** | 66.83 kB | 66.97 kB | +0.15% | 20.88 kB | 20.91 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/cb060e88b8fee5b3630d2b4baf94a81126f3de03/files/oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=a1f97589fd298cd71f97339a230f016139c7382f) | **+0.20%** | 124.20 kB | 124.45 kB | +0.17% | 37.36 kB | 37.42 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against cb060e88b8fee5b3630d2b4baf94a81126f3de03\n</p>\n","updated_at":"2023-05-27T18:51:30Z","created_at":"2023-05-25T17:44:55Z","creator_user_login":"react-sizebot"}
{"number":26854,"comment_id":"1671340490","body":"Is this stale or what is the plan with this? Looking to get that next issue referenced above unblocked @acdlite ","updated_at":"2023-08-09T13:35:31Z","created_at":"2023-08-09T13:35:31Z","creator_user_login":"baked-dev"}
{"number":26854,"comment_id":"1671389199","body":"\r\n\r\n![image](https://github.com/facebook/react/assets/37938090/b1c1c9bf-f14f-4406-a027-4ba1033a0792)\r\n","updated_at":"2023-08-09T14:03:03Z","created_at":"2023-08-09T14:03:03Z","creator_user_login":"danieljpgo"}
{"number":26962,"comment_id":"1594923137","body":"@Nodge : are you _manually_ calling `useSyncExternalStore`?\r\n\r\nIs there a reason you're not using React-Redux for that?  (It already relies on `uSES` internally)\r\n\r\nAlso, in general it looks like the pattern you're using definitely breaks the rules of React rendering.\r\n\r\nYou _can_ call `setState()` while rendering, in _very specific cases_, to force an immediate re-render:\r\n\r\n- https://blog.isquaredsoftware.com/2020/05/blogged-answers-a-mostly-complete-guide-to-react-rendering-behavior/#setting-state-while-rendering\r\n\r\nBut you can't trigger renders for _other_ components while rendering, and you shouldn't be dispatching global actions while rendering either.","updated_at":"2023-06-16T16:09:36Z","created_at":"2023-06-16T16:07:54Z","creator_user_login":"markerikson"}
{"number":26962,"comment_id":"1607994279","body":"@markerikson,\r\n\r\nI simplified the example code to only include the necessary parts that reproduce the problem. But in my actual project, I’m using slightly modified versions of React-Redux and RTKQ, to integrate it with Suspense for data fetching. Basically, during the render phase, the only action I dispatch is the RTKQ endpoint initiate which gives me a promise for Suspense integration. I understand that dispatching global actions on the render phase is an anti-pattern, and I should find a way to rework it. I agree that the warning is not a bug in React.\r\n\r\nThe only thing left to address in this issue is the warning logging behavior. Should React log the warning more consistently? (see \"strange behavior 1,2\" in the description)","updated_at":"2023-06-26T18:18:56Z","created_at":"2023-06-26T18:18:56Z","creator_user_login":"Nodge"}
{"number":26962,"comment_id":"1608833712","body":"@Nodge huh. Getting off-topic, but: \"modified versions of React-Redux / RTKQ for Suspense\"?\r\n\r\nCould you file a discussion thread over in the Redux Toolkit repo to discuss what you're trying to do?  We don't have an official Suspense solution yet, largely because too many things with React have been changing and it's unclear how we're supposed to support things.  But, it would be nice to see what kinds of use cases people have and what you're trying to do to play with those.\r\n\r\n(Not sure on what's up with the warning behavior, tbh.)","updated_at":"2023-06-27T05:43:37Z","created_at":"2023-06-27T05:43:37Z","creator_user_login":"markerikson"}
{"number":26962,"comment_id":"1631328856","body":"I seem to have the same problem. Everything renders fine, but the warning frightens me a bit. Here's a simplified playground:\r\n\r\nhttps://playcode.io/1530521\r\n\r\nThe store looks like this:\r\n\r\n```js\r\n/*\r\nHere we store <select> options in the form of:\r\n\r\n{\r\n    [name]: {\r\n        loading: bool // if the options are still loading from some backend\r\n        options: [...] // list of string values\r\n    }\r\n}\r\n */\r\nlet snapshot = {};\r\n\r\n// Array of listeners of the store\r\nlet listeners = [];\r\n\r\nconst Store = {\r\n  setValuesLoading(name, silent = false) {\r\n    snapshot = { ...snapshot, [name]: { loading: true, options: [] } };\r\n    if (!silent) {\r\n      notify();\r\n    }\r\n  },\r\n\r\n  setOptions(name, options) {\r\n    snapshot = { ...snapshot, [name]: { loading: false, options } };\r\n    notify();\r\n  },\r\n\r\n  subscribe(listener) {\r\n    listeners = [...listeners, listener];\r\n    return () => {\r\n      listeners = listeners.filter(l => !Object.is(l, listener));\r\n    };\r\n  },\r\n  getSnapshot() {\r\n    return snapshot;\r\n  }\r\n};\r\n\r\n\r\n// Trivial listener notifier.\r\nconst notify = () => {\r\n  for (let listener of listeners) {\r\n    listener();\r\n  }\r\n};\r\n```\r\n\r\nTo use it, I've written a custom hook, that triggers an \"API\" to load data if necessary:\r\n\r\n```js\r\n\r\n\r\nexport function useOptions(name) {\r\n  let store = useSyncExternalStore(Store.subscribe, Store.getSnapshot);\r\n\r\n  // If data is in cache – return it\r\n  if (store[name]) {\r\n    return store[name];\r\n  }\r\n\r\n  // Updating the store, do not notify anyone (we are within render currently)\r\n  Store.setValuesLoading(name, false);\r\n\r\n  // loading data\r\n  loadOptions(name).then(options => Store.setOptions(name, options));\r\n\r\n  return { loading: true, options: [] };\r\n}\r\n\r\n// Imitate API fetch\r\nfunction loadOptions(name) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => resolve([\"one\", \"two\", \"three\"]), 1000);\r\n  });\r\n}\r\n```\r\n\r\nUsage is trivial:\r\n\r\n```jsx\r\nimport { useOptions } from './store.jsx';\r\n\r\nexport function Select({ name }) {\r\n  let { options } = useOptions(name);\r\n\r\n  return (\r\n    <select>\r\n      {options.map(opt => (\r\n        <option value={opt} key={opt}>\r\n          {opt}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}\r\n```\r\n\r\nThe problem somehow happens ONLY if I dynamically add a `Select`. Multiple `Select`'s, rendered statically, don't cause any warnings.\r\n\r\n```jsx\r\nimport React, { useState } from 'react';\r\n\r\nimport { Select } from './Select'\r\n\r\nexport function App(props) {\r\n  let [show, setShow] = useState(false)\r\n  return (\r\n    <div className='App'>\r\n      <Select name=\"one\" />\r\n      <Select name=\"two\" />\r\n      <button onClick={() => setShow(true)}>CLICK ME TO TRIGGER A WARNING IN CONSOLE</button>\r\n\r\n      {show ? <Select name=\"three\" /> : null}\r\n\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\nReact 18.2.0","updated_at":"2023-07-11T18:42:28Z","created_at":"2023-07-11T18:42:28Z","creator_user_login":"vasa-chi"}
{"number":26962,"comment_id":"1656742586","body":"Fwiw/afaiu this also easily/regularly happens with any library that is trying to bring observables/signals to React, i.e. Mobx or Legend State, and wants to cross the \"React props <=> observables/signal world\" divide.\r\n\r\nFor example, if I have two components:\r\n\r\n* Parent component `<Author name=bob />` and\r\n* Child component `<AuthorTitle author=authorSignal />`\r\n\r\nWhere the `Author` component internally initializes an observable/signal, and then passes the `authorSignal` around to other components.\r\n\r\nIf the `Author` is passed a new name prop, and naively does:\r\n\r\n```tsx\r\nfunction Author({ name }) {\r\n  // create a stable observable on 1st render\r\n  const author = useMemo(() => observable({ name });\r\n  // Keep the observable updated on Nth render\r\n  author.name = name;\r\n  // render name + any components using the new name\r\n  return <div>{name} <AuthorTitle author={author} /></div>\r\n});\r\n```\r\n\r\nThen the `author.name = name` line will cause this warning that the `AuthorTitle` reactive infra (i.e. a `useComputed` or `observer` HOC, whether either `useState`/tick-based or `useSES`-based) registered a change for `AuthorTitle` to re-render.\r\n\r\nGranted, the correct behavior is to shunt all \"maybe updating an observable\" operations through `useEffect`s:\r\n\r\n```tsx\r\nfunction Author({ name }) {\r\n  // create a stable observable\r\n  const author = useMemo(() => observable({ name });\r\n  // Keep the observable updated\r\n  useEffect(() => author.name = name, [name]);\r\n  // render the potentially-updated name\r\n  return <div>{name} <AuthorTitle author={author} /></div>\r\n});\r\n```\r\n\r\nBut that is tedious, boilerplatey, and can also cause double renders if `Author` is itself using a calculated value from the observable:\r\n\r\n```tsx\r\nfunction Author({ name }) {\r\n  // create a stable observable\r\n  const author = useMemo(() => observable({\r\n    name,\r\n    // use some reactive/computed business logic\r\n    initials: () => getInitials(this.name)\r\n   });\r\n  // Keep the observable updated\r\n  useEffect(() => author.name = name, [name]);\r\n  // When props.name changes, we'll do one render with new name +\r\n  // old initials (not updated yet) and then after useEffect has\r\n  // updated the observable, a 2nd render that has the non-torn\r\n  // new name/new initials\r\n  return <div>{name} {author.initials} <AuthorTitle author={author} /></div>\r\n});\r\n```\r\n\r\nThis update-observables-via-`useEffect` pales particularly to the props-based way of telling `AuthorTitle` to re-render, which is just \"pass the prop via JSX\":\r\n\r\n```tsx\r\n  return <div>{name} <AuthorTitle authorName={name} /></div>\r\n```\r\n\r\nSo, using props/JSX to tell `AuthorTitle` to _render during my render_ is fine, but I'm unable to tell `AuthorTitle` to _render during my render_ if I'm using an observable.\r\n\r\nGranted, I get it, in React props are first-class and observables are not, so I shouldn't be surprised that observables have worse ergonomics.\r\n\r\nBut imo this dichotomy is really what I expected `useSES` to fix, b/c fundamentally it focus on components needing to \"reactively\" re-render based on \"other things happening\", i.e. external syncs, typically AJAX updates, 3rd-party-stores whatever.\r\n\r\nBecause, for those of us pretending to write Solid in React :-D, the props of components like `Author` (that cross the props/observable divide), if you squint, are essentially their own \"external source of change\" for components that are consuming the observable.\r\n\r\nHence, I think this warning should be removed for `useSES`.\r\n","updated_at":"2023-07-29T14:28:48Z","created_at":"2023-07-29T14:27:49Z","creator_user_login":"stephenh"}
{"number":25687,"comment_id":"1315826518","body":"I really appreciate that you're thinking about structures outside of the default JSON-stuff.\r\n\r\nMaybe there's a world where React itself doesn't do the heavy lifting, but you instead allow developers to add their own serialization libraries? \r\n\r\nThere's [devalue](https://github.com/Rich-Harris/devalue), [superjson](https://github.com/blitz-js/superjson), and others that can do a lot more than the built-in limitations of `JSON.stringify`/`JSON.parse()`\r\n\r\nI for one would love to be able to use `BigInt` & [`Temporal`](https://tc39.es/proposal-temporal/docs/) polyfills for date objects (which I both currently can use with superjson together with [tRPC](https://trpc.io/)).","updated_at":"2022-11-15T20:27:31Z","created_at":"2022-11-15T20:27:31Z","creator_user_login":"KATT"}
{"number":25687,"comment_id":"1315856547","body":"The serialization algorithm itself is most of what the RSC server is and it has a lot of special features as part of that. So it's not as easily pluggable.\r\n\r\nAnother consideration is that for static types to be preserved, it needs to get the same type on both sides. E.g. `toJSON()` is not supported even though it's supported in `JSON.stringify` because that changes the type on the receiving side.\r\n\r\nIt's also important to us that code is interchangeable between projects and that npm packages are able to support. It's easy for a plug-in system to go out of control.\r\n\r\nThat said, we already support or want to support most things that those other libraries support, so if you have specific examples it would be good to add to the list.\r\n\r\nIt seems likely that `Temporal` would soon be added to structured clone, but it would be good to get that confirmed and that there's no blockers to doing so in the web spec.","updated_at":"2022-11-15T20:59:13Z","created_at":"2022-11-15T20:59:13Z","creator_user_login":"sebmarkbage"}
{"number":25687,"comment_id":"1315968617","body":"For me, it's all about getting static types to be preserved and used interchangeably across the HTTP boundary. \r\n\r\nIdeally, I'd like to be able to have some sort of mapper where I can interpret any sort of object and serialize/deserialize according to my own preference since that allows me to statically type an object and \"know\" its integrity will remain the same throughout the serialization. \r\n\r\nI don't think React itself should be the gatekeeper or responsible for what data types can or cannot be serialized.\r\n\r\nI do see how something like supporting promises will make this hard as this seems very specific to the RSC implementation, but I don't think opening this up would impede the use of making code interchangeable across projects - most likely, any open-source project would not depend on a special type. ","updated_at":"2022-11-15T22:46:28Z","created_at":"2022-11-15T22:46:28Z","creator_user_login":"KATT"}
{"number":25687,"comment_id":"1337875033","body":"> RegExp: These are pretty straightforward but can possibly have security implications.\r\n\r\nWhat's the security risk here?","updated_at":"2022-12-05T18:06:48Z","created_at":"2022-12-05T18:06:48Z","creator_user_login":"sophiebits"}
{"number":25687,"comment_id":"1445172084","body":"> What's the security risk here?\r\n\r\nThe main attack vector that I'm concerned about right now is the reverse form, when you can pass it back into the server as an argument to an action. That can trick code to execute a regexp that itself has a zero-day. Since regexps implementations in C++ has been known to have those.\r\n\r\nPassing out to the client is a little less concerning since a user supplied object. The programmer would have to opt-in to letting the user provide a regexp. However, it can limit the usefulness of the protocol for things like mashups/federation where you take an RSC response from a third party.","updated_at":"2023-02-25T18:07:35Z","created_at":"2023-02-25T18:07:35Z","creator_user_login":"sebmarkbage"}
{"number":25687,"comment_id":"1465363327","body":"We could consider DOMPoint/DOMRect/DOMMatrix/DOMQuad if that's actually something people want to use and if those get proper polyfills in server environments. One question is whether these will actually end up being replaced by value types or views over typed arrays.","updated_at":"2023-03-13T01:15:57Z","created_at":"2023-03-13T01:15:15Z","creator_user_login":"sebmarkbage"}
{"number":25687,"comment_id":"1589156858","body":"One of the things we ran into when starting to adopt RSC within Next is that URL instances can't be passed as prop values down into client components, did some digging and it seems like it's also not supported in `structuredClone` as well (which seems odd to me). Would it be possible to support URL's within the RSC serialization?\r\n\r\nFor the short term, we've opted to `.toString()` the value and then pass it back into the URL constructor on the other side within the client component. But this adds a bit of overhead/complexity when jumping between the boundary.","updated_at":"2023-06-13T11:56:44Z","created_at":"2023-06-13T11:56:44Z","creator_user_login":"hamlim"}
{"number":25687,"comment_id":"1589294118","body":"URL has been brought up before. If it’s a frequent enough exception then maybe it’s worth breaking rules but we have to have some guideline for what we include and not. In generally things that have significant benefits to the serialization format or can’t be done any other way are favored.\r\n\r\nIdeally it would get brought up as a Web proposal first so that it’s clear that it’ll keep working and not break in the future. E.g. if stateful stuff are added to that data structure in the future we may not be able to support it.\r\n\r\nAnother complexity is that URLs have a validation step that something is a valid url which can change over time or have divergent implementations. With Date and Temporal there’s always some standard format that we can use in the transfer but that’s not always true for URL. So it might not be possible to transfer a URL from one environment to another. This is somewhat of an edge case but it does show that it’s a bit sketchy to support if we’re not confident that we can keep it seamless. I’m favoring holding off on it for now.","updated_at":"2023-06-13T13:15:22Z","created_at":"2023-06-13T13:15:22Z","creator_user_login":"sebmarkbage"}
{"number":25687,"comment_id":"1589786363","body":"That sounds reasonable to me 👍 ","updated_at":"2023-06-13T17:59:18Z","created_at":"2023-06-13T17:59:18Z","creator_user_login":"hamlim"}
{"number":25710,"comment_id":"1320904987","body":"It would be great to have a self-contained example (no third party code) to confirm whether it's a React bug or not.","updated_at":"2022-11-19T15:10:12Z","created_at":"2022-11-19T15:10:12Z","creator_user_login":"gaearon"}
{"number":25710,"comment_id":"1320905629","body":"This worked\r\n```js\r\nexport const routeConfig = createRouteConfig().addChildren([\r\n  postRoute,\r\n  indexRoute,\r\n]);\r\n```\r\nMaybe the issue is related to `@tanstack/react-router`","updated_at":"2022-11-19T15:15:12Z","created_at":"2022-11-19T15:14:17Z","creator_user_login":"hosseinmd"}
{"number":25710,"comment_id":"1320906608","body":"> This worked\r\n> \r\n> ```js\r\n> export const routeConfig = createRouteConfig().addChildren([\r\n>   postRoute,\r\n>   indexRoute,\r\n> ]);\r\n> ```\r\n> \r\n> Maybe the issue is related to `@tanstack/react-router`\r\n\r\nThis only triggers one suspense boundary. So that’s expected.","updated_at":"2022-11-19T15:19:03Z","created_at":"2022-11-19T15:19:03Z","creator_user_login":"tannerlinsley"}
{"number":25710,"comment_id":"1320907239","body":"> It would be great to have a self-contained example (no third party code) to confirm whether it's a React bug or not.\r\n\r\nI fully agree. I’ll do my best. But if the issue is with the way I’m implanting suspenseful patterns in the library I would equally want to know why. ","updated_at":"2022-11-19T15:22:23Z","created_at":"2022-11-19T15:22:23Z","creator_user_login":"tannerlinsley"}
{"number":25710,"comment_id":"1320912824","body":"Yea, I just mean that if there's a smaller example then (even if the issue is with the pattern) I'd be able to tell why. In fact just copy pasting the library into the sandbox so that we can start narrowing it down would be helpful. The issue is just that since it's on npm, it's impossible to work by removing pieces and seeing what's essential to the problem.","updated_at":"2022-11-19T15:53:19Z","created_at":"2022-11-19T15:53:19Z","creator_user_login":"gaearon"}
{"number":25710,"comment_id":"1320913574","body":"I trust me I know the pain. I’ll improve the material as I can.\n\nTanner Linsley\nOn Nov 19, 2022 at 8:53 AM -0700, dan ***@***.***>, wrote:\n> Yea, I just mean that if there's a smaller example then (even if the issue is with the pattern) I'd be able to tell why. In fact just copy pasting the library into the sandbox so that we can start narrowing it down would be helpful. The issue is just that since it's on npm, it's impossible to work by removing pieces and seeing what's essential to the problem.\n> —\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n> You are receiving this because you authored the thread.Message ID: ***@***.***>\n","updated_at":"2022-11-19T15:57:41Z","created_at":"2022-11-19T15:57:41Z","creator_user_login":"tannerlinsley"}
{"number":25710,"comment_id":"1321470216","body":"Got a very watered down example that I'm using to bridge the gaps, so it's still a WIP, but its here: https://stackblitz.com/edit/github-k3gulh?file=src%2FApp.tsx,src%2Fentry-server.tsx,src%2Fstore.tsx,src%2Fentry-client.tsx\r\n\r\nSomething I noticed: The working example streams a script tag in that looks like this: \r\n```js\r\nfunction $RC(a,b){a=document.getElementById(a);b=document.getElementById(b);b.parentNode.removeChild(b);if(a){a=a.previousSibling;var f=a.parentNode,c=a.nextSibling,e=0;do{if(c&&8===c.nodeType){var d=c.data;if(\"/$\"===d)if(0===e)break;else e--;else\"$\"!==d&&\"$?\"!==d&&\"$!\"!==d||e++}d=c.nextSibling;f.removeChild(c);c=d}while(c);for(;b.firstChild;)f.insertBefore(b.firstChild,c);a.data=\"$\";a._reactRetry&&a._reactRetry()}};$RC(\"B:0\",\"S:0\")\r\n```\r\n\r\nBut I don't see anything similar in my buggy example. Is this a helpful difference?","updated_at":"2022-11-21T04:59:34Z","created_at":"2022-11-21T04:59:34Z","creator_user_login":"tannerlinsley"}
{"number":25710,"comment_id":"1322106345","body":"Re: https://github.com/facebook/react/issues/25710#issuecomment-1321470216, just to clarify — what is the expected behavior and what is the actual behavior?","updated_at":"2022-11-21T13:57:31Z","created_at":"2022-11-21T13:57:31Z","creator_user_login":"gaearon"}
{"number":25710,"comment_id":"1322290572","body":"https://github.com/facebook/react/issues/25710#issuecomment-1321470216 Works fine and as expected. So now I’m trying to find the differences between the two. ","updated_at":"2022-11-21T16:05:24Z","created_at":"2022-11-21T16:05:24Z","creator_user_login":"tannerlinsley"}
{"number":25710,"comment_id":"1352456042","body":"Looking again at the original example:\r\n\r\n<img width=\"428\" alt=\"Screenshot 2022-12-15 at 01 52 37\" src=\"https://user-images.githubusercontent.com/810438/207753965-83af27d6-523e-4f68-a8c2-e5ab86b630c2.png\">\r\n\r\nThis seems to suggest there's a `<Suspense>` boundary outside of the `<body>`. **Having `<Suspense>` outside of `<body>` is not supported and should error, but it seems like we don't have an error for this.** So maybe this is why it gets into a confused state later.\r\n\r\nThe reason why this is not supported is that there's \"nowhere\" to render the fallback. E.g. `<Suspense fallback={<Spinner />}><html>...</html></Suspense>` tells React to render the spinner outside `<html>` which doesn't make sense. So we should error for this on the server.\r\n\r\nSlightly tangential, but a Suspense boundary at the very root is not recommended. The user needs to be able to pick where the shell of the app \"ends\". The shell is [defined](https://beta.reactjs.org/apis/react-dom/server/renderToPipeableStream#specifying-what-goes-into-the-shell) as the place outside all Suspense boundaries. It is important for the user to be able to choose what UI goes there — e.g. to tell React to always emit a skeleton of head+main+sidebar+footer as a minimal page instead of a spinner around them.\r\n\r\n*(I don't know if this is actually the cause btw — but if there's a sandbox with the router as one of the files so I can edit its code, I can check that).*","updated_at":"2022-12-15T02:05:23Z","created_at":"2022-12-15T01:58:36Z","creator_user_login":"gaearon"}
{"number":25710,"comment_id":"1352532140","body":"You might be on to something. I do in fact have a suspense boundary around the `<html>` of the app. I had no idea this isn't supported. \r\n\r\nIf this *does* turn out to be the issue, I will inevitably ask why we can't support it. Seems like a valid use case.","updated_at":"2022-12-15T04:08:05Z","created_at":"2022-12-15T04:08:05Z","creator_user_login":"tannerlinsley"}
{"number":25710,"comment_id":"1352715921","body":"> If this does turn out to be the issue, I will inevitably ask why we can't support it. Seems like a valid use case.\r\n\r\nI think this was already answered by Dan:\r\n\r\n> The reason why this is not supported is that there's \"nowhere\" to render the fallback. E.g. `<Suspense fallback={<Spinner />}><html>...</html></Suspense>` tells React to render the spinner outside `<html>` which doesn't make sense. So we should error for this on the server.\r\n\r\n","updated_at":"2022-12-15T10:25:01Z","created_at":"2022-12-15T08:29:35Z","creator_user_login":"Andarist"}
{"number":25710,"comment_id":"1352852272","body":"To clarify, to the best of my knowledge, *suspending* in the shell is supported, including outside the body. This will hold back the shell until the data resolves. (If you're hitting bugs, it's worth checking whether `react@next` + `react-dom@next` release channel fixes them.) It's specifically `<Suspense>` node outside `<body>` that's not supported — both for the reason I mentioned earlier and because it defeats the point. The point is that React should wait for the minimal shell to complete before starting the stream. Not emit the fallback immediately.","updated_at":"2022-12-15T10:24:42Z","created_at":"2022-12-15T10:24:14Z","creator_user_login":"gaearon"}
{"number":25710,"comment_id":"1353119773","body":"This makes way more sense. In hindsight, it’s obvious now that you weren’t referring to suspending in general. Phew!! 😅 Y’all had me scared for a moment that I couldn’t suspend in the shell!","updated_at":"2022-12-15T13:52:50Z","created_at":"2022-12-15T13:52:50Z","creator_user_login":"tannerlinsley"}
{"number":25710,"comment_id":"1641037705","body":"I’ll see what I can do. ","updated_at":"2023-07-18T21:47:34Z","created_at":"2023-07-18T21:47:34Z","creator_user_login":"tannerlinsley"}
{"number":27041,"comment_id":"1619649802","body":"Hi, @mayank1513 can you try the code I have mentioned below , I think it will solve your problem and let me know if there is anything wrong.\r\n\r\n`export default function App() {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        console.log(\"form submitted!\");\r\n      }}\r\n    >\r\n      {!clicked ? (\r\n        <button type=\"submit\" onClick={() => setClicked(true)}>\r\n          \"button\"\r\n        </button>\r\n      ) : (\r\n        <button type=\"button\" onClick={() => setClicked(false)}>\r\n          \"submit\"\r\n        </button>\r\n      )}\r\n    </form>\r\n  );\r\n}`\r\n\r\n\r\n","updated_at":"2023-07-04T07:13:22Z","created_at":"2023-07-04T07:13:22Z","creator_user_login":"den319"}
{"number":27041,"comment_id":"1619853703","body":"Hi, why are you tagging type=\"submit\" as \"button\" and vice-versa? These values are used to demonstrate the current working and understand why it is working this way.","updated_at":"2023-07-04T09:08:56Z","created_at":"2023-07-04T09:08:56Z","creator_user_login":"mayank1513"}
{"number":27041,"comment_id":"1620065159","body":"sorry for my misunderstanding as you mentioned in issue that expected\r\nbehaviour should be when I click on \"submit\" type button, the form should\r\nsubmitted. That is why I changed the types of buttons.\r\nSo can you please elaborate the issue like what kind of behaviour do you\r\nexpect and at which situation.\r\nThank you.\r\n\r\n\r\n\r\nOn Tue, Jul 4, 2023 at 2:39 PM Mayank ***@***.***> wrote:\r\n\r\n> Hi, why are you tagging type=\"submit\" as \"button\" and vice-versa? These\r\n> values are used to demonstrate the current working and understand why it is\r\n> working this way.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/facebook/react/issues/27041#issuecomment-1619853703>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/A25L4LQGFQNGEV7WNJHSSI3XOPMTNANCNFSM6AAAAAAZ34KK3A>\r\n> .\r\n> You are receiving this because you commented.Message ID:\r\n> ***@***.***>\r\n>\r\n","updated_at":"2023-07-04T11:23:16Z","created_at":"2023-07-04T11:23:16Z","creator_user_login":"den319"}
{"number":27041,"comment_id":"1620069381","body":"Action corresponding to the button which I click should be triggered. Not the other button.","updated_at":"2023-07-04T11:26:25Z","created_at":"2023-07-04T11:26:25Z","creator_user_login":"mayank1513"}
{"number":27041,"comment_id":"1624527021","body":"This behavior that you are seeing is because the form's onSubmit event is triggered regardless of the button type always.... Maybe you should move your state modifiers outside the buttons\r\n\r\nTry this\r\n```js\r\nimport { useState } from \"react\";\r\n\r\nexport default function App() {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (clicked) {\r\n      setClicked(false)\r\n      console.log('form submitted!');\r\n      // Perform other necessary actions\r\n    } else {\r\n      setClicked(true)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      {!clicked ? (\r\n        <button type=\"button\" onClick={(e)=>handleFormSubmit(e)}>\r\n          Type \"button\"\r\n        </button>\r\n      ) : (\r\n        <button type=\"submit\" onClick={(e)=>handleFormSubmit(e)}>\r\n          Type \"submit\"\r\n        </button>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n````\r\n\r\nYou can also use `e.target.form.submit` inside the handler to in fact submit the form.","updated_at":"2023-07-07T01:55:07Z","created_at":"2023-07-07T01:55:07Z","creator_user_login":"matheusschreiber"}
{"number":27041,"comment_id":"1624584244","body":"Please check the code sandbox carefully. Event is triggered only for one type of button, not both. You can even verify this by removing the condition and rendering both buttons together.","updated_at":"2023-07-07T03:06:38Z","created_at":"2023-07-07T03:06:38Z","creator_user_login":"mayank1513"}
{"number":27041,"comment_id":"1627773000","body":"To resolve it, I assigned each button unique `key` prop. Hope this helped solve the problem ","updated_at":"2023-07-09T17:00:46Z","created_at":"2023-07-09T16:59:13Z","creator_user_login":"vitaliyirtlach"}
{"number":27041,"comment_id":"1627981998","body":"> To resolve it, I assigned each button unique `key` prop. Hope this helped solve the problem\r\n\r\nAfter assigning a unique key, the form-submit event is not fired at all.","updated_at":"2023-07-10T02:29:58Z","created_at":"2023-07-10T02:29:58Z","creator_user_login":"mayank1513"}
{"number":27041,"comment_id":"1628854439","body":"I changed code and add a preventDefault to button\r\n\r\n```jsx\r\nimport { useState } from \"react\";\r\n\r\nexport default function App() {\r\n  const [clicked, setClicked] = useState(false);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        setClicked(true);\r\n        console.log(\"form submitted!\");\r\n      }}\r\n    >\r\n      {!clicked ? (\r\n        <button type=\"submit\">Type \"submit\"</button>\r\n      ) : (\r\n        <button\r\n          type=\"button\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            setClicked(false);\r\n          }}\r\n        >\r\n          Type \"button\"\r\n        </button>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\n```","updated_at":"2023-07-10T12:24:09Z","created_at":"2023-07-10T12:24:09Z","creator_user_login":"vitaliyirtlach"}
{"number":27041,"comment_id":"1630160894","body":"so can you explain why this unususal behaviour was happening? I mean when we are clicking \"type= button\" button the onSubmit event was triggering.\r\n","updated_at":"2023-07-11T05:29:40Z","created_at":"2023-07-11T05:29:40Z","creator_user_login":"den319"}
{"number":27041,"comment_id":"1630289454","body":"> I changed code and add a preventDefault to button\r\n> \r\n> ```js\r\n> import { useState } from \"react\";\r\n> \r\n> export default function App() {\r\n>   const [clicked, setClicked] = useState(false);\r\n> \r\n>   return (\r\n>     <form\r\n>       onSubmit={(e) => {\r\n>         e.preventDefault();\r\n>         setClicked(true);\r\n>         console.log(\"form submitted!\");\r\n>       }}\r\n>     >\r\n>       {!clicked ? (\r\n>         <button type=\"submit\">Type \"submit\"</button>\r\n>       ) : (\r\n>         <button\r\n>           type=\"button\"\r\n>           onClick={(e) => {\r\n>             e.preventDefault();\r\n>             setClicked(false);\r\n>           }}\r\n>         >\r\n>           Type \"button\"\r\n>         </button>\r\n>       )}\r\n>     </form>\r\n>   );\r\n> }\r\n> ```\r\n\r\nThis does not address the issue.","updated_at":"2023-07-11T07:24:04Z","created_at":"2023-07-11T07:24:04Z","creator_user_login":"mayank1513"}
{"number":27041,"comment_id":"1630570266","body":"```\r\nimport { useState } from \"react\";\r\n\r\nexport default function App() {\r\n  const [clicked, setClicked] = useState(true);\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        console.log(\"form submitted!\");\r\n      }}\r\n    >\r\n      {clicked && (\r\n        <button type=\"submit\" onClick={() => setClicked(false)}>\r\n          Type \"submit\"\r\n        </button>\r\n      )}\r\n      <button type=\"submit\" onClick={() => setClicked(true)}>\r\n        Type \"submit 2\"\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n```\r\n\r\n\r\ni believe when state change from false to true it will immediately remove Type \"submit\" button and it will also clean pending effects like form submit check above code \r\n- conditional rendering and without conditional rendering ","updated_at":"2023-07-11T10:26:56Z","created_at":"2023-07-11T10:26:40Z","creator_user_login":"meetvanapariya"}
{"number":27041,"comment_id":"1643626081","body":"Greetings @mayank1513 Here is the modified code.\r\n\r\n```\r\nimport { useState } from \"react\";\r\n\r\nexport default function App() {\r\nconst [clicked, setClicked] = useState(false);\r\n\r\nreturn (\r\n<form\r\nonSubmit={(e) => {\r\ne.preventDefault();\r\nconsole.log(\"form submitted!\");\r\n}}\r\n>\r\n{!clicked ? (\r\n<button\r\ntype=\"button\"\r\nonClick={() => {\r\nconst timer = setTimeout(() => {\r\nsetClicked(true);\r\nclearTimeout(timer);\r\n}, 0);\r\n}}\r\n>\r\nType \"button\"\r\n\r\n) : (\r\n<button\r\ntype=\"submit\"\r\nonClick={() => {\r\nconst timer = setTimeout(() => {\r\nsetClicked(false);\r\nclearTimeout(timer);\r\n}, 0);\r\n}}\r\n>\r\nType \"submit\"\r\n\r\n)}\r\n\r\n);\r\n}\r\n```\r\n\r\nThe issue was that React updates the virtual dom faster than the real dom. So we must add the async behaviour to the onClick event where the state is being changed.","updated_at":"2023-07-20T09:55:22Z","created_at":"2023-07-20T09:55:22Z","creator_user_login":"arslanarjumand012"}
{"number":27041,"comment_id":"1643716549","body":"> Greetings @mayank1513 Here is the modified code.\r\n> \r\n> ```\r\n> import { useState } from \"react\";\r\n> \r\n> export default function App() {\r\n> const [clicked, setClicked] = useState(false);\r\n> \r\n> return (\r\n> <form\r\n> onSubmit={(e) => {\r\n> e.preventDefault();\r\n> console.log(\"form submitted!\");\r\n> }}\r\n> >\r\n> {!clicked ? (\r\n> <button\r\n> type=\"button\"\r\n> onClick={() => {\r\n> const timer = setTimeout(() => {\r\n> setClicked(true);\r\n> clearTimeout(timer);\r\n> }, 0);\r\n> }}\r\n> >\r\n> Type \"button\"\r\n> \r\n> ) : (\r\n> <button\r\n> type=\"submit\"\r\n> onClick={() => {\r\n> const timer = setTimeout(() => {\r\n> setClicked(false);\r\n> clearTimeout(timer);\r\n> }, 0);\r\n> }}\r\n> >\r\n> Type \"submit\"\r\n> \r\n> )}\r\n> \r\n> );\r\n> }\r\n> ```\r\n> \r\n> The issue was that React updates the virtual dom faster than the real dom. So we must add the async behaviour to the onClick event where the state is being changed.\r\n\r\nThis is not the expected behavior. Moreover, when you add unique keys to buttons, none of them submit. We are not looking for workarounds, but trying to improve React library itself to handle this gracefully.","updated_at":"2023-07-20T11:00:36Z","created_at":"2023-07-20T11:00:36Z","creator_user_login":"mayank1513"}
{"number":24722,"comment_id":"1166830064","body":"nicee~","updated_at":"2022-06-27T04:28:30Z","created_at":"2022-06-27T04:28:30Z","creator_user_login":"devntv"}
{"number":24722,"comment_id":"1180245569","body":"Maybe you should rename hook to `useComposeRef`.","updated_at":"2022-07-11T10:51:25Z","created_at":"2022-07-11T10:49:43Z","creator_user_login":"hosseinmd"}
{"number":24722,"comment_id":"1249623183","body":"I'm actually not convinced why such snippet doesn't show up in the `Material UI` source code. But thank you very much @lejahmie , very useful piece.\r\n\r\nNOTE: maybe material ui chopped it into pieces, https://github.com/mui/material-ui/blob/002ab79b77d4d88add840e21c5101137a4a7de5a/packages/mui-utils/src/setRef.ts  . I don't really know.","updated_at":"2022-09-16T17:44:17Z","created_at":"2022-09-16T17:40:57Z","creator_user_login":"windmaomao"}
{"number":24722,"comment_id":"1249638611","body":"> Maybe you should rename hook to `useComposeRef`.\r\n\r\nNoa, this is more like the `useCopyRef`, or `useCloneRef`, basically it's doing a clone in the React syntax.  ","updated_at":"2022-09-16T17:49:59Z","created_at":"2022-09-16T17:46:35Z","creator_user_login":"windmaomao"}
{"number":24722,"comment_id":"1250855671","body":"EDIT: the original example is correct, I made a mistake wiring the old ref :)\r\n\r\n------------------------\r\n\r\nNice proposal @lejahmie \r\n\r\nI copied your example into my code and it almost work, for anyone having problem with it, here is updated version:\r\n```ts\r\nconst useForwardRef = <T,>(\r\n  ref: ForwardedRef<T>,\r\n  initialValue: any = null\r\n) => {\r\n  const targetRef = useRef<T>(initialValue);\r\n\r\n  useEffect(() => {\r\n    if (!ref) return;\r\n\r\n    if (typeof ref === 'function') {\r\n      ref(targetRef.current);\r\n    } else {\r\n      targetRef.current = ref.current;\r\n    }\r\n  }, [ref]);\r\n\r\n  return targetRef;\r\n};\r\n\r\nconst InputField = React.forwardRef<HTMLInputElement, InputFieldProps>(\r\n  (props, ref) => {\r\n   const forwardedRef = useForwardRef<HTMLInputElement>(ref);\r\n   // Cool code....\r\n  }\r\n );\r\n```\r\n\r\nBasically I updated `ref.current = targetRef.current` with `targetRef.current = ref.current`. I do not know if this is only for my specific case, but it helped me so it might helped someone else.","updated_at":"2022-09-19T21:15:46Z","created_at":"2022-09-19T10:43:17Z","creator_user_login":"klis87"}
{"number":24722,"comment_id":"1250970911","body":"> Basically I updated `ref.current = targetRef.current` with `targetRef.current = ref.current`. I do not know if this is only for my specific case, but it helped me so it might helped someone else.\r\n\r\nI don't think the change is correct @klis87 , you most likely didn't wire the ref returned from this hook to the element. You are not supposed to wire the old ref any more.","updated_at":"2022-09-19T12:44:16Z","created_at":"2022-09-19T12:44:16Z","creator_user_login":"windmaomao"}
{"number":24722,"comment_id":"1251559776","body":"@windmaomao \r\n> You are not supposed to wire the old ref any more\r\n\r\nYes, this was the thing I did, nice guess!","updated_at":"2022-09-19T21:14:28Z","created_at":"2022-09-19T21:14:28Z","creator_user_login":"klis87"}
{"number":24722,"comment_id":"1539108412","body":"sorry I have dumb question. I don't quite get how this proposed hook will work with forwardRef. With `const forwardedRef = useForwardRef<HTMLInputElement>(ref);`, when `forwardedRef.current` is set to a new value, how can `ref.current` be synced with the latest value? The effect won't be triggered because `ref` never changes.","updated_at":"2023-05-08T21:59:57Z","created_at":"2023-05-08T21:59:57Z","creator_user_login":"zerofirework"}
{"number":24722,"comment_id":"1593823341","body":"You're right @zerofirework, if the component has conditional logic for rendering then the forwarded ref will not be synced.\r\n\r\nThe only fix for this hook is to remove dependencies from `useEffect` which will force it to run on every render.  \r\nThis shouldn't impact performance in any meaningful way.\r\n\r\n---\r\n\r\nFor anyone having trouble with this I have a simpler proposal:\r\n\r\nJust use a ref callback that assigns the value to both the local and the forwarded ref:\r\n\r\n```js\r\n<div ref={shareRef(localRef, forwardedRef)}/>\r\n```\r\n\r\n[Here's the implementation for that function](https://stackoverflow.com/a/76485900/2100372)\r\n","updated_at":"2023-06-15T22:59:35Z","created_at":"2023-06-15T22:59:35Z","creator_user_login":"ZoranRavic"}
{"number":23214,"comment_id":"1032058471","body":"Is there anyone taking a look or what else do I need to provide for further investigation?","updated_at":"2022-02-07T23:51:53Z","created_at":"2022-02-07T23:51:53Z","creator_user_login":"snakepoongmail"}
{"number":23214,"comment_id":"1032754659","body":"Hello @snakepoongmail,\r\n\r\nis this causing you any troubles? I think this is a side effect of how React Fiber holds onto pieces of data and is harmless. The data will eventually be cleaned up.","updated_at":"2022-02-08T15:46:38Z","created_at":"2022-02-08T15:46:38Z","creator_user_login":"sammy-SC"}
{"number":23214,"comment_id":"1033226724","body":"> Hello @snakepoongmail,\r\n> \r\n> is this causing you any troubles? I think this is a side effect of how React Fiber holds onto pieces of data and is harmless. The data will eventually be cleaned up.\r\n\r\nHello @sammy-SC , thx for your responding.\r\n\r\nThe issue now is I'm not quite sure about the timing when this data will be clean up. During the test, I've tried waiting for about 5 mins, clicking GC button in devTool, but it won't help freeing those occupied memory.\r\n\r\nThose Detached DOM elements should be considered as memory leak, in my application there are other detached DOM elements found held by React Fiber as well which means they are not able to be collected by GC, the size of the leak could be incrementing over time may end up crashing the application by consuming too many memory. Especially for building big and long running applications, memory leak is fatal for not being tackle well. \r\n \r\n\r\n","updated_at":"2022-02-09T01:12:33Z","created_at":"2022-02-09T01:12:33Z","creator_user_login":"snakepoongmail"}
{"number":23214,"comment_id":"1058130670","body":"@snakepoongmail in DEV tools you can see exactly what is retaining the object. In another issue it was DevTools. Please check what is retaining the object.","updated_at":"2022-03-03T15:02:19Z","created_at":"2022-03-03T15:02:19Z","creator_user_login":"salazarm"}
{"number":23214,"comment_id":"1273030925","body":"It seems like we are experiencing this issue with React 17 in our app. The number of nodes just grows and never they never get clean up.\r\n\r\nI've tried switching to React 18 without success.\r\n\r\nIs there anything we can do? Are there any known workarounds or ways to investigate?","updated_at":"2022-10-10T09:25:41Z","created_at":"2022-10-10T09:25:41Z","creator_user_login":"gyzerok"}
{"number":23214,"comment_id":"1274884021","body":"@gyzerok \r\n\r\ncould it be that you have retain cycles in your app? Are resources correctly cleaned up when component is unmounted?\r\n\r\nAlternatively, could you try to use React past this commit: https://github.com/facebook/react/commit/d1bb1c586117df11123859d1ef59228bbf7c750a to see if it resolves it? ","updated_at":"2022-10-11T15:29:10Z","created_at":"2022-10-11T15:29:10Z","creator_user_login":"sammy-SC"}
{"number":23214,"comment_id":"1276976469","body":"Hello @sammy-SC!\r\n\r\nThank you for getting back to me. Not sure what you mean by retain cycles, can you elaborate?\r\n\r\nBy investigating deeper we discovered that the leak is caused by a `contenteditable` ref. We have it deep down our tree and after unmount it and all of it parents are kept in memory. Due to the nature of how people use our app it quicly leads to gigabytes of leaked memory.\r\n\r\nLooking at the code we see nothing that could be causing it. Whatever needs to be clean up (like `addEventListener`) gets cleaned up. Commenting things for search puprposes does not show any specific place (unless you comment everything).\r\n\r\nOne specific thing about this code is that ref is used in multiple function wrapped into `useCallback`. Not sure when exactly React cleans this memory, but I can imagine how it can lead to the leaks.\r\n\r\nAnd by looking at the devtools I can see that `FiberNode` seems to be memory holder here.\r\n\r\n> Alternatively, could you try to use React past this commit: https://github.com/facebook/react/commit/d1bb1c586117df11123859d1ef59228bbf7c750a to see if it resolves it?\r\nAre there any instructions available on how to install React from specific commit?\r\n\r\nAlso are these fixes going to be available for React 17? We are using it and it's unlikely we will be able to migrate soon.","updated_at":"2022-10-13T03:24:12Z","created_at":"2022-10-13T03:24:12Z","creator_user_login":"gyzerok"}
{"number":23214,"comment_id":"1285645819","body":"> Not sure what you mean by retain cycles, can you elaborate?\r\n\r\nBy retain cycles I meant things like missing `removeEventListener` calls or similar. Something that would prevent component form getting garbage collected. So you found `contenteditable`, were you able to fix it?  \r\n\r\n> Also are these fixes going to be available for React 17? We are using it and it's unlikely we will be able to migrate soon.\r\n\r\nThe fix is for problem specific to React 18, so that probably won't be the issue you're running into.","updated_at":"2022-10-20T14:27:51Z","created_at":"2022-10-20T14:27:51Z","creator_user_login":"sammy-SC"}
{"number":23214,"comment_id":"1329107140","body":" +1","updated_at":"2022-11-28T13:39:34Z","created_at":"2022-11-28T13:39:02Z","creator_user_login":"whatwg6"}
{"number":23214,"comment_id":"1335180334","body":"This seems to be a related issue to the one I posted recently: #25772 \r\nMaybe this will help to understand what's going on.","updated_at":"2022-12-02T12:47:51Z","created_at":"2022-12-02T12:47:51Z","creator_user_login":"TUTOR03"}
{"number":24655,"comment_id":"1146215671","body":"Hey! Thanks for reporting this! I created a test account but am unable to sign in\r\n\r\n![image](https://user-images.githubusercontent.com/2735514/171918688-e0e86799-3749-4594-91cb-bae4bdfc2b50.png)\r\n\r\nDo you know how to sign in, or could you create a dummy app that doesn't need authentication for us to test with? Thanks!","updated_at":"2022-06-03T17:48:06Z","created_at":"2022-06-03T17:48:06Z","creator_user_login":"lunaruan"}
{"number":24655,"comment_id":"1146466807","body":"hi, sorry I was working on the projects,the valid credentials are aya@aya.com 123123123, thanks","updated_at":"2022-06-04T00:01:07Z","created_at":"2022-06-04T00:01:07Z","creator_user_login":"msanmaz"}
{"number":24655,"comment_id":"1150280038","body":"<img width=\"770\" alt=\"image\" src=\"https://user-images.githubusercontent.com/2735514/172694393-b6154bfe-4e0d-4f4e-a914-2ffbd4389fb1.png\">\r\nI'm getting a missing database error.  Could you create a smaller repro of this issue on codesandbox so we more easily repro? Unfortunately it's hard with all the noise 😕","updated_at":"2022-06-08T18:55:50Z","created_at":"2022-06-08T18:55:50Z","creator_user_login":"lunaruan"}
{"number":24655,"comment_id":"1150462285","body":"Oh I see, .env file is missing, I've created a codesandbox here with .env files in it, that should work smooth. \r\n\r\nhttps://codesandbox.io/s/keen-leavitt-hpcdwb?file=/pages/index.js:410-443\r\n\r\nthanks","updated_at":"2022-06-08T22:05:32Z","created_at":"2022-06-08T22:05:32Z","creator_user_login":"msanmaz"}
{"number":24655,"comment_id":"1155527822","body":"I tried to repro it. but Profiling was fine for me. Was there something specific you were doing to make the profiling fail?","updated_at":"2022-06-14T18:08:09Z","created_at":"2022-06-14T18:08:09Z","creator_user_login":"lunaruan"}
{"number":24655,"comment_id":"1208418313","body":"I am also running into this issue.\r\n\r\n```\r\nUncaught Error: Commit tree already contains fiber \"1\". This is a bug in React DevTools.\r\nThe error was thrown at updateTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:25514:19)\r\n    at getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:25447:20)\r\n    at ProfilingCache_ProfilingCache.getCommitTree (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:25975:11)\r\n    at CommitFlamegraphAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44083:33)\r\n    at Ai (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:15407:7)\r\n    at Oj (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:16299:7)\r\n    at Gl (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:19329:86)\r\n    at Fl (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18930:11)\r\n    at El (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18922:23)\r\n    at tl (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:18906:5)\r\nThe error occurred at CommitFlamegraphAutoSizer (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:44066:34)\r\n    at div\r\n    at div\r\n    at div\r\n    at SettingsModalContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:36399:3)\r\n    at Profiler_Profiler (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:54176:34)\r\n    at ErrorBoundary_ErrorBoundary (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:37920:5)\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:38092:3)\r\n    at PortaledContent (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:38122:5)\r\n    at div\r\n    at div\r\n    at div\r\n    at ThemeProvider (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:38092:3)\r\n    at TimelineContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:43336:3)\r\n    at ProfilerContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:42781:3)\r\n    at TreeContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:30676:3)\r\n    at SettingsContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:31302:3)\r\n    at ModalDialogContextController (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:38517:3)\r\n    at DevTools_DevTools (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:54684:3)\r\n```\r\n\r\nIn my case, I don't believe I did anything special other than checking \"Record why each component rendered while profiling\" and selecting a different commit. Unchecking this git it to work again.","updated_at":"2022-08-08T17:41:54Z","created_at":"2022-08-08T17:41:54Z","creator_user_login":"thebitguru"}
{"number":24655,"comment_id":"1208451285","body":"> <img alt=\"image\" width=\"770\" src=\"https://user-images.githubusercontent.com/2735514/172694393-b6154bfe-4e0d-4f4e-a914-2ffbd4389fb1.png\">\r\n\r\nI'm still getting this error on the codesandbox.\r\n\r\n@thebitguru Do you have a repro of this issu?","updated_at":"2022-08-08T18:14:51Z","created_at":"2022-08-08T18:14:51Z","creator_user_login":"lunaruan"}
{"number":24655,"comment_id":"1208566332","body":"It happened with a local, proprietary repo and I cannot seem to reproduce it now. Sorry!\r\n\r\nI will post an update if I see this issue again.","updated_at":"2022-08-08T20:15:54Z","created_at":"2022-08-08T20:15:54Z","creator_user_login":"thebitguru"}
{"number":19482,"comment_id":"681842711","body":"@gaearon just like [this](https://github.com/facebook/react/issues/16728#issuecomment-664913171) comment, I filed a new issue. And in this issue, I gave a real use case, hoping this will draw you guys' attention.","updated_at":"2020-08-27T09:43:03Z","created_at":"2020-08-27T09:43:03Z","creator_user_login":"xialvjun"}
{"number":19482,"comment_id":"687084694","body":"Although react lifecycle order works right, it lacks `componentDidUnmounted`.\r\n\r\nRelated issue: https://github.com/facebook/react/issues/6424 . This issue is closed because\r\n\r\n> Closing as React's design is moving away from class-based lifecycle methods\r\n\r\nBut HookApi doesn't solve the problem of **parent component can not clean up resource shared by its children**.","updated_at":"2020-09-04T15:23:20Z","created_at":"2020-09-04T11:21:53Z","creator_user_login":"xialvjun"}
{"number":19482,"comment_id":"689270559","body":"To solve the problem of **parent component can not clean up resource shared by its children**, there is a hack way: https://github.com/facebook/react/issues/6424#issuecomment-351760732\r\n\r\nAnd by imitating the above method I wrote a hook which can express 6 lifecycles: **`willMount, didMount, willUpdate, didUpdate, willUnmount, didUnmount`**. And the parent children lifecycles running order is right: `Parent willMount, Child willMount, Child didMount, Parent didMount, Parent willUpdate, Child willUpdate, Child didUpdate, Parent didUpdate, Parent willUnmount, Child willUnmount, Child didUnmount, Parent didUnmount`, it's `pccp*(1+n+1)` which is `cppc*(1+n+1)`(this issue's useEffect expected behavior) transform to `pc + cppc*(1+n+1) + cp`\r\n```tsx\r\ntype life = \"mount\" | \"update\" | \"unmount\";\r\nexport const useWillDid = <T extends (life: life) => void | ((life: life) => any), D extends any[]>(\r\n  fn: T,\r\n  deps?: D,\r\n) => {\r\n  const inv = useRef<void | ((life: life) => any)>();\r\n  const mounted = useRef(false);\r\n  const is_last = useRef(false);\r\n  is_last.current = false;\r\n  inv.current = useMemo(() => {\r\n    return fn(mounted.current ? \"update\" : \"mount\");\r\n  }, deps);\r\n  useEffect(() => {\r\n    if (inv.current) {\r\n      inv.current(mounted.current ? \"update\" : \"mount\");\r\n    }\r\n    mounted.current = true;\r\n    is_last.current = true;\r\n    return () => {\r\n      if (is_last.current) {\r\n        inv.current = fn(\"unmount\");\r\n      }\r\n    };\r\n  }, [inv.current]);\r\n  const style = useMemo(() => ({ display: \"none\" }), []);\r\n  const ref = useMemo(\r\n    () => (ele: any) => {\r\n      if (!ele && inv.current) {\r\n        inv.current(\"unmount\");\r\n      }\r\n    },\r\n    [],\r\n  );\r\n  return <span ref={ref} style={style}></span>;\r\n};\r\n```\r\n\r\nEven though I have wrote this hook which can solve my problem, I still thought It should be done by `react`. Hope you consider it more.","updated_at":"2020-09-09T03:04:18Z","created_at":"2020-09-09T03:04:18Z","creator_user_login":"xialvjun"}
{"number":19482,"comment_id":"731459890","body":"What about using `setTimeout` in the parent's cleanup function?","updated_at":"2020-11-20T23:31:19Z","created_at":"2020-11-20T23:31:19Z","creator_user_login":"mbest"}
{"number":19482,"comment_id":"870204905","body":"If useing `setTimeout`, what about parent's parent?","updated_at":"2021-06-29T03:36:47Z","created_at":"2021-06-29T03:36:47Z","creator_user_login":"xialvjun"}
{"number":19482,"comment_id":"945032199","body":"> If useing `setTimeout`, what about parent's parent?\r\n\r\nTrue. It doesn't solve the problem well, since the `setTimeout` callbacks will run in the wrong order.","updated_at":"2021-10-17T01:25:24Z","created_at":"2021-10-17T01:25:24Z","creator_user_login":"mbest"}
{"number":19482,"comment_id":"1057841397","body":"Any news on this? I'm also using Mapbox and wanted to do the same thing and hit the same problem.","updated_at":"2022-03-03T09:22:33Z","created_at":"2022-03-03T09:22:33Z","creator_user_login":"derzwen"}
{"number":19482,"comment_id":"1441951453","body":"We also have this problem. I've made a [simple React app with maplibre](https://codesandbox.io/p/github/tengl/maplibre-remove-layer/main?workspaceId=9ff0059d-30f3-48b7-8673-d4122e313e37&file=%2Fsrc%2FMaplibre.jsx&selection=%5B%7B%22endColumn%22%3A7%2C%22endLineNumber%22%3A34%2C%22startColumn%22%3A7%2C%22startLineNumber%22%3A34%7D%5D&workspace=%257B%2522activeFileId%2522%253A%2522cleh5gog2000mg6hvb7d8e0og%2522%252C%2522openFiles%2522%253A%255B%2522%252Fsrc%252FMaplibre.jsx%2522%252C%2522%252FREADME.md%2522%252C%2522%252Fsrc%252FMaplibreLayer.jsx%2522%255D%252C%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522gitSidebarPanel%2522%253A%2522COMMIT%2522%252C%2522spaces%2522%253A%257B%2522cleh5gpjm000x2v6i6yx11k8k%2522%253A%257B%2522key%2522%253A%2522cleh5gpjm000x2v6i6yx11k8k%2522%252C%2522name%2522%253A%2522Default%2522%252C%2522devtools%2522%253A%255B%257B%2522type%2522%253A%2522PREVIEW%2522%252C%2522taskId%2522%253A%2522start%2522%252C%2522port%2522%253A3000%252C%2522key%2522%253A%2522cleh8l95e012s2v6j2vebbyhf%2522%252C%2522isMinimized%2522%253Afalse%257D%252C%257B%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522start%2522%252C%2522key%2522%253A%2522cleh8l6s700yx2v6j1wryjp77%2522%252C%2522isMinimized%2522%253Afalse%257D%255D%257D%257D%252C%2522currentSpace%2522%253A%2522cleh5gpjm000x2v6i6yx11k8k%2522%252C%2522spacesOrder%2522%253A%255B%2522cleh5gpjm000x2v6i6yx11k8k%2522%255D%252C%2522hideCodeEditor%2522%253Afalse%257D) to demonstrate the issue, and two possible work arounds. If someone has a better solution I'd be happy to hear it. \r\n\r\n","updated_at":"2023-02-23T15:09:45Z","created_at":"2023-02-23T15:09:45Z","creator_user_login":"tengl"}
{"number":19732,"comment_id":"685156217","body":"@bgirard looks like you're right; 'The parent component rendered' is the default when no changes are detected. I thought for now we could change it to 'Not verified. Likely that parent component rendered.' I think that makes it clear that it's a default; what do you think?\r\n","updated_at":"2020-09-01T21:59:31Z","created_at":"2020-09-01T21:59:31Z","creator_user_login":"bpernick"}
{"number":19732,"comment_id":"685157965","body":"It appears that the code handles context changes -- or thinks it does; I might submit a pr with the wording change right now and then poke around to see if I can figure out what broke it for you specifically","updated_at":"2020-09-01T22:04:10Z","created_at":"2020-09-01T22:04:10Z","creator_user_login":"bpernick"}
{"number":19732,"comment_id":"685205385","body":"Yea, any wording change for now would be great. If you can't find the root cause tell me know and I'll dig a bit more in my project to reduce it. But I'm fairly sure it was a `useContext(...)` that changed.","updated_at":"2020-09-02T00:29:18Z","created_at":"2020-09-02T00:29:18Z","creator_user_login":"bgirard"}
{"number":19732,"comment_id":"686457490","body":"should we close this, as @bpernick commited the fix for it?","updated_at":"2020-09-03T12:33:50Z","created_at":"2020-09-03T12:33:50Z","creator_user_login":"kambleaa007"}
{"number":19732,"comment_id":"751247001","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:58Z","created_at":"2020-12-25T13:07:58Z","creator_user_login":"stale[bot]"}
{"number":19732,"comment_id":"853877642","body":"the PR with the fix isn't merged yet and I'm seeing this issue today - I have:\r\n\r\n```js\r\nconst MyComponentMemo = React.memo(MyComponent)\r\nMyComponentMemo.displayName = 'MyComponentMemo'\r\n```\r\n\r\nIn dev tools (4.13.5-0ae5290b54) I can see that MyComponentMemo does not render, but MyComponent does render. The reason given is \"The parent component rendered\".","updated_at":"2021-06-03T13:40:28Z","created_at":"2021-06-03T13:40:28Z","creator_user_login":"penx"}
{"number":19732,"comment_id":"986792717","body":"Still seeing the same thing in Version 4.21.0 (10/31/2021). Incorrect reporting of 'The parent component rendered' when it didn't. Looks like PR is still open. ","updated_at":"2021-12-06T13:48:39Z","created_at":"2021-12-06T13:47:54Z","creator_user_login":"Undistraction"}
{"number":19732,"comment_id":"1104646529","body":"Still seeing the same thing in Version 4.24.3 (4/21/2022). Incorrect reporting of 'The parent component rendered' when it didn't.\r\n![image](https://user-images.githubusercontent.com/30256809/164360561-0b5829ef-6ce1-423b-a343-ae90f2f57839.png)\r\n","updated_at":"2022-04-21T02:37:37Z","created_at":"2022-04-21T02:37:37Z","creator_user_login":"Lxylona"}
{"number":19732,"comment_id":"1107530593","body":"It would help a lot if someone could provide a minimal reproduction. In a large codebase start removing code until you can no longer reproduce the problem. Either share this reproduciton via https://react.new or a cloneable GitHub repository.\r\n\r\nA context change has it's own message so it's likely not the cause of this issue: https://codesandbox.io/s/context-change-why-did-this-render-message-9rwf8i\r\nTested with DevTools version: [4.24.3-46a98cff2](https://github.com/facebook/react/blob/main/packages/react-devtools/CHANGELOG.md#4243)","updated_at":"2022-04-24T08:56:46Z","created_at":"2022-04-23T16:30:45Z","creator_user_login":"eps1lon"}
{"number":19078,"comment_id":"639827212","body":"Did some research:\r\n\r\nI used even simpler code:\r\n\r\n``` js\r\nfunction onChange() {\r\n  console.log('onChange');\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n        <form>\r\n          <input type=\"checkbox\" onChange={onChange} />\r\n          <button type=\"reset\">Reset</button>\r\n        </form>\r\n  );\r\n}\r\n```\r\n\r\n- It only happens when then checkbox is checked when you reset the form then check it again.\r\n- It does NOT happen when the checkbox is unchecked when you reset the form then check it.\r\n\r\nIn the first case it happens when checking the second time because in `updateValueIfChanged`  `lastValue` and `nextValue` are both `true`. So the function returns `false` and the `onChange` will be skipped.\r\n\r\nThe `tracker` on the `node` did not record the reset. I see that a `reset` event is fired for the target `form` but nothing seems to happen with that event. I do not see any code in `react-dom` that collect all inputs of a form to do something, so I am a bit reluctant to start adding something that big.\r\n\r\nI would be interested in trying to make a fix for this.\r\n","updated_at":"2020-06-05T21:36:33Z","created_at":"2020-06-05T21:22:55Z","creator_user_login":"Jacco"}
{"number":19078,"comment_id":"640409966","body":"@Jacco Hi, thank you for your feedback. Is there a plan to fix it? Let him keep the same with other inputs","updated_at":"2020-06-08T07:03:52Z","created_at":"2020-06-08T07:03:52Z","creator_user_login":"imagine10255"}
{"number":19078,"comment_id":"647007994","body":"Hi @bvaughn, Shall I work on this? (I'm new to opensource contribution)","updated_at":"2020-06-20T15:12:45Z","created_at":"2020-06-20T15:12:45Z","creator_user_login":"vinodsai-a"}
{"number":19078,"comment_id":"647153230","body":"If you'd like to, sure thing","updated_at":"2020-06-21T16:51:17Z","created_at":"2020-06-21T16:51:17Z","creator_user_login":"bvaughn"}
{"number":19078,"comment_id":"647153975","body":"Thanks @bvaughn . I'll try.","updated_at":"2020-06-21T16:57:30Z","created_at":"2020-06-21T16:57:30Z","creator_user_login":"vinodsai-a"}
{"number":19078,"comment_id":"647260887","body":"vinodsai-a <notifications@github.com> 於 2020年6月22日 週一 上午12:57寫道：\n\n> Thanks @bvaughn <https://github.com/bvaughn> . I'll try.\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/facebook/react/issues/19078#issuecomment-647153975>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABMBAWLX7VZBOFR2JIAGDHLRXY3YTANCNFSM4NTLCGGQ>\n> .\n>\n","updated_at":"2020-06-22T04:05:43Z","created_at":"2020-06-22T04:05:43Z","creator_user_login":"imagine10255"}
{"number":19078,"comment_id":"649765261","body":"> Did some research:\r\n> \r\n> I used even simpler code:\r\n> \r\n> ```js\r\n> function onChange() {\r\n>   console.log('onChange');\r\n> }\r\n> \r\n> function App() {\r\n>   return (\r\n>         <form>\r\n>           <input type=\"checkbox\" onChange={onChange} />\r\n>           <button type=\"reset\">Reset</button>\r\n>         </form>\r\n>   );\r\n> }\r\n> ```\r\n> \r\n> * It only happens when then checkbox is checked when you reset the form then check it again.\r\n> * It does NOT happen when the checkbox is unchecked when you reset the form then check it.\r\n> \r\n> In the first case it happens when checking the second time because in `updateValueIfChanged` `lastValue` and `nextValue` are both `true`. So the function returns `false` and the `onChange` will be skipped.\r\n> \r\n> The `tracker` on the `node` did not record the reset. I see that a `reset` event is fired for the target `form` but nothing seems to happen with that event. I do not see any code in `react-dom` that collect all inputs of a form to do something, so I am a bit reluctant to start adding something that big.\r\n> \r\n> I would be interested in trying to make a fix for this.\r\n\r\nI wrote a pice of code but I'm not sure if it's on the right place, did this directly on `react-dom.development.js`.\r\n\r\n@bvaughn, Is `dispatchEvent` the right place for this kind of actions?\r\n\r\n```js\r\nfunction attemptToResetTrackers(nativeEvent) {\r\n  var target = nativeEvent.target\r\n\r\n  if (target && target.tagName === 'FORM') {\r\n    for (var i = 0; i <= nativeEvent.target.length; i++) {\r\n      var node = nativeEvent.target[i]\r\n\r\n      if (node) {\r\n        var tracker = getTracker(node)\r\n\r\n        if (tracker) {\r\n          tracker.setValue(node.defaultValue)\r\n        }\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n```js\r\nfunction dispatchEvent(topLevelType, eventSystemFlags, container, nativeEvent) {\r\n  if (!_enabled) {\r\n    return;\r\n  }\r\n\r\n  // Reset trackers when reset is called\r\n  if (topLevelType === 'reset') {\r\n    attemptToResetTrackers(nativeEvent)\r\n  }\r\n\r\n  if (hasQueuedDiscreteEvents() && isReplayableDiscreteEvent(topLevelType)) {\r\n    // If we already have a queue of discrete events, and this is another discrete\r\n    // event, then we can't dispatch it regardless of its target, since they\r\n    // need to dispatch in order.\r\n    queueDiscreteEvent(null, // Flags that we're not actually blocked on anything as far as we know.\r\n    topLevelType, eventSystemFlags, container, nativeEvent);\r\n    return;\r\n  }\r\n\r\n  var blockedOn = attemptToDispatchEvent(topLevelType, eventSystemFlags, container, nativeEvent);\r\n\r\n  if (blockedOn === null) {\r\n    // We successfully dispatched this event.\r\n    clearIfContinuousEvent(topLevelType, nativeEvent);\r\n    return;\r\n  }\r\n\r\n  if (isReplayableDiscreteEvent(topLevelType)) {\r\n    // This this to be replayed later once the target is available.\r\n    queueDiscreteEvent(blockedOn, topLevelType, eventSystemFlags, container, nativeEvent);\r\n    return;\r\n  }\r\n\r\n  if (queueIfContinuousEvent(blockedOn, topLevelType, eventSystemFlags, container, nativeEvent)) {\r\n    return;\r\n  } // We need to clear only if we didn't queue because\r\n  // queueing is accummulative.\r\n\r\n\r\n  clearIfContinuousEvent(topLevelType, nativeEvent); // This is not replayable so we'll invoke it but without a target,\r\n  // in case the event system needs to trace it.\r\n\r\n  {\r\n    dispatchEventForLegacyPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, null);\r\n  }\r\n} // Attempt dispatching an event. Returns a SuspenseInstance or Container if it's blocked.\r\n```","updated_at":"2020-06-25T19:16:53Z","created_at":"2020-06-25T19:09:55Z","creator_user_login":"kassiomaia"}
{"number":19078,"comment_id":"649872000","body":"I'm probably not the right person to review event stuff. Can you make the changes to the source files, then submit a PR?","updated_at":"2020-06-25T23:48:11Z","created_at":"2020-06-25T23:48:11Z","creator_user_login":"bvaughn"}
{"number":26566,"comment_id":"1500244430","body":"Hi @madhusudhan123-star! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326566). Thanks!","updated_at":"2023-04-07T12:24:57Z","created_at":"2023-04-07T12:24:57Z","creator_user_login":"facebook-github-bot"}
{"number":26566,"comment_id":"1500247307","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 9a9da7721e5b73a8af242807e463e2af842c58ee...4264c369613c80bb6f18ae6168ccf0646e558ac6\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/4264c369613c80bb6f18ae6168ccf0646e558ac6/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=9a9da7721e5b73a8af242807e463e2af842c58ee) | **=** | 164.58 kB | 164.58 kB | = | 51.68 kB | 51.69 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/4264c369613c80bb6f18ae6168ccf0646e558ac6/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=9a9da7721e5b73a8af242807e463e2af842c58ee) | **=** | 166.15 kB | 166.15 kB | = | 52.20 kB | 52.20 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/4264c369613c80bb6f18ae6168ccf0646e558ac6/files/facebook-www/ReactDOM-prod.classic.js?compare=9a9da7721e5b73a8af242807e463e2af842c58ee) | **=** | 554.05 kB | 554.05 kB | = | 98.17 kB | 98.17 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/4264c369613c80bb6f18ae6168ccf0646e558ac6/files/facebook-www/ReactDOM-prod.modern.js?compare=9a9da7721e5b73a8af242807e463e2af842c58ee) | **=** | 537.89 kB | 537.89 kB | = | 95.51 kB | 95.51 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 4264c369613c80bb6f18ae6168ccf0646e558ac6\n</p>\n","updated_at":"2023-04-10T11:32:45Z","created_at":"2023-04-07T12:29:47Z","creator_user_login":"react-sizebot"}
{"number":26566,"comment_id":"1500274981","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-04-07T13:08:04Z","created_at":"2023-04-07T13:08:04Z","creator_user_login":"facebook-github-bot"}
{"number":26566,"comment_id":"1500520072","body":"Hi @madhusudhan123-star 👋 , even though this is a simple documentation change, it would be great if you could still use a more descriptive PR title. This helps others understand the purpose of your PR more easily. Possibly something like \"Add Yarn package link to README\".\r\n\r\nAlso it seems you have linked to the `create-react-app` package, which is different from `react` itself. This is the link for the yarn `react` package:\r\nhttps://yarnpkg.com/package/react","updated_at":"2023-04-07T18:12:23Z","created_at":"2023-04-07T18:11:58Z","creator_user_login":"harrygz889"}
{"number":26566,"comment_id":"1500890698","body":"Thank you for the information and for guiding me. I will try to change it. I am first time contributing in GitHub.","updated_at":"2023-04-08T13:20:24Z","created_at":"2023-04-08T13:20:24Z","creator_user_login":"madhusudhan123-star"}
{"number":26566,"comment_id":"1501712391","body":"Thank you\r\n","updated_at":"2023-04-10T11:26:33Z","created_at":"2023-04-10T11:26:33Z","creator_user_login":"madhusudhan123-star"}
{"number":26670,"comment_id":"1558840829","body":"I was just about to report the same issue (my repro case can be found [here](https://stackblitz.com/edit/react-ts-tjuru8?file=App.tsx,Page2.tsx,Page1.tsx), it's prepared based on @jmca's repro for [the issue](https://github.com/emotion-js/emotion/issues/3038) caused by this - but it's essentially the same repro as yours).\r\n\r\nI think that `useInsertionEffect` is essentially the same as `useLayoutEffect`, it's just that they have a \"higher priority\" and they are executed first, in a batch, before `useLayoutEffect`s. So I'm heavily leaning towards your conclusion - this is a bug in React. All other semantics of layout effects should be shared between `useInsertionEffect` and `useLayoutEffect` (such as [semantics in suspense boundaries](https://github.com/facebook/react/pull/21079), [mounting/unmounting them appropriately in Offscreen components](https://github.com/facebook/react/pull/21386), their [reappearing](https://github.com/facebook/react/pull/21898) and more)","updated_at":"2023-05-23T10:25:28Z","created_at":"2023-05-23T08:53:19Z","creator_user_login":"Andarist"}
{"number":26670,"comment_id":"1559454483","body":"Seems like a bug. Anyone wants to look into fixing it?","updated_at":"2023-05-23T14:02:53Z","created_at":"2023-05-23T14:02:53Z","creator_user_login":"gaearon"}
{"number":26670,"comment_id":"1559674580","body":"@gaearon yes! I actually started to work on a PR locally - it's very draft-ish and I only fixed one of the discrepancies so far. Gonna open a draft PR later today.","updated_at":"2023-05-23T15:31:55Z","created_at":"2023-05-23T15:31:55Z","creator_user_login":"Andarist"}
{"number":26670,"comment_id":"1559874977","body":"To rephrase what the observed issue here is:\r\n1. insertion effects are not disconnected when the suspended subtree gets hidden\r\n2. they are also not disconnected when a different subtree gets finally rendered (when Suspense resumes~)\r\n3. to get them to disconnect we need to \"revisit\" the old component and switch away from it **without** suspending.\r\n4. this doesn't match how any other type of effects work. I'd expect those effects to get disconnected in the similar vein as layout effects are but if that's not desirable for some reason then they likely should be disconnected just like passive effects (or using some different semantics of their own but the bottom line is that they should be disconnected *at some point*)","updated_at":"2023-05-23T17:35:40Z","created_at":"2023-05-23T17:35:40Z","creator_user_login":"Andarist"}
{"number":26670,"comment_id":"1685121303","body":"This is intentional to avoid layout thrash when things are hidden and restored. It's also to allow for hidden trees to be able to do early preemptive layout calculations for hidden trees so that they can be instantly restored.","updated_at":"2023-08-19T22:12:41Z","created_at":"2023-08-19T22:12:41Z","creator_user_login":"sebmarkbage"}
{"number":26670,"comment_id":"1685122333","body":"Hmm, but that cleanup has to be called at some point in time - when that is?","updated_at":"2023-08-19T22:21:56Z","created_at":"2023-08-19T22:21:56Z","creator_user_login":"Andarist"}
{"number":26670,"comment_id":"1685275848","body":"When the Suspense boundary itself is committed and deleted or if an update changes it to no longer be visible. I could imagine the second case being a bug since it’s a thing we typically don’t model at all.","updated_at":"2023-08-20T12:43:37Z","created_at":"2023-08-20T12:43:37Z","creator_user_login":"sebmarkbage"}
{"number":26670,"comment_id":"1685286401","body":"> When the Suspense boundary itself is committed and deleted\r\n\r\nunless i'm misunderstanding, this doesn't seem to be the case\r\nhttps://stackblitz.com/edit/react-ts-3vk942?file=App.tsx,Page2.tsx,Page1.tsx\r\n\r\nRepro: press \"Go to Page 1\", \"Go to Page 2\", \"Just unmount the whole thing\". the suspense boundary and the suspending children below all get destroyed, but the background stays pink (i.e. Page1's `useInsertionEffect` is not actually cleaned up)\r\n\r\nInterestingly, this only acts \"strange\" when Page1 or Page2 suspend, not when they're already available. reproducible like this:\r\n- Initial page\r\n- Go to Page 1 (suspends, then makes the background pink)\r\n- Go to Page 2 (suspends, Page1's insertion **isn't cleaned up** = bg stays pink)\r\n- Go back to Page 1 (doesn't suspend anymore, runs insertion effect)\r\n- Go to Page 2 (doesn't suspend anymore, Page1's insertion effect **is cleaned up this time** = bg restored to white)\r\n\r\nmaybe i'm missing something, but i'd expect insertion cleanups to behave the same regardless of whether something suspensey happened (i.e Page2 suspended, Page1 got hidden, and never came back) or not.","updated_at":"2023-08-20T13:45:48Z","created_at":"2023-08-20T13:30:15Z","creator_user_login":"lubieowoce"}
{"number":14125,"comment_id":"436646137","body":"Want to look into a fix?","updated_at":"2018-11-07T14:44:40Z","created_at":"2018-11-07T14:44:40Z","creator_user_login":"gaearon"}
{"number":14125,"comment_id":"436648713","body":"Sure thing, thanks for confirming.  I'll look into it.","updated_at":"2018-11-07T14:51:52Z","created_at":"2018-11-07T14:51:52Z","creator_user_login":"Matthew-Goldberg"}
{"number":14125,"comment_id":"436918129","body":"@Matthew-Goldberg I just tried to figure out what is wrong with it, but I don't have any ideas with it. So if you stack on it - you could try [this](https://codesandbox.io/s/rmjmlmxv64) - works in all modern browsers","updated_at":"2018-11-08T08:50:19Z","created_at":"2018-11-08T08:50:19Z","creator_user_login":"mmarkelov"}
{"number":14125,"comment_id":"437148320","body":"Just to narrow it down, v16.2.0 works and v16.3.0 doesn't, so it's somewhere in there.","updated_at":"2018-11-08T20:42:01Z","created_at":"2018-11-08T20:42:01Z","creator_user_login":"heyimalex"}
{"number":14125,"comment_id":"437189020","body":"bisected to [this commit](https://github.com/facebook/react/commit/fd69c239a0bb8fde412aa7c1c0cea9c7fda287a9)","updated_at":"2018-11-08T23:05:57Z","created_at":"2018-11-08T23:05:57Z","creator_user_login":"chasestarr"}
{"number":14125,"comment_id":"437359308","body":"Thank you @chasestarr that makes sense.  It also happens in plain HTML the cursor will be at the end if you set the value using script `input.value = 'something'` instead of attribute `<input value=\"something\"`","updated_at":"2018-11-09T13:28:31Z","created_at":"2018-11-09T13:28:31Z","creator_user_login":"Matthew-Goldberg"}
{"number":14125,"comment_id":"437369949","body":"@mmarkelov I think this will be hard to write a test, it seems `jsdom` is showing that the `selectionStart` is `0` even though in the browser the same code shows `selectionStart` is the end/length of the text value.","updated_at":"2018-11-09T14:08:59Z","created_at":"2018-11-09T14:08:59Z","creator_user_login":"Matthew-Goldberg"}
{"number":14125,"comment_id":"578738686","body":"OK the `jsdom` issue is now fixed: https://github.com/jsdom/jsdom/pull/2799\r\nWhen that is released we can upgrade the `jsdom` version to pick up the fix, and re-implement the test which should now be useful.","updated_at":"2020-01-27T13:09:17Z","created_at":"2020-01-27T13:09:17Z","creator_user_login":"Matthew-Goldberg"}
{"number":14125,"comment_id":"603577624","body":"(#14171)\r\nStrictly speaking it looks like a feature rather than a bug because it is reasonable to place cursor at the end of input to use backspace immediately","updated_at":"2020-03-25T04:12:53Z","created_at":"2020-03-25T00:42:57Z","creator_user_login":"bl00mber"}
{"number":14125,"comment_id":"603690169","body":"> (#14171)\r\n> Strictly speaking it looks like a feature rather than a bug because it is reasonable to place cursor at the end of input to use backspace immediately\r\n\r\nHum, for me it depends on the use case. But the thing is in React 16 the behavior changed without any info about it, so for me it's just a regression until it's proven that it's the desired effect for most use cases.","updated_at":"2020-03-25T07:45:56Z","created_at":"2020-03-25T07:45:56Z","creator_user_login":"xrutayisire"}
{"number":13681,"comment_id":"422488949","body":"We've observed the opposite: in large products people have error boundaries all over the place, *accidentally* catching and failing to surface legitimate bugs in tests.","updated_at":"2018-09-18T17:56:47Z","created_at":"2018-09-18T17:56:47Z","creator_user_login":"gaearon"}
{"number":13681,"comment_id":"422515557","body":"It is certainly a valuable tool and should not be removed outright. But by retaining this behavior as a permanent path in specs, it eliminates the option to gracefully detect and assert around render failures in specs. This is especially important in non-sandboxed spec frameworks, where failures in the global scope are both disruptive to the flow of specs and often tricky to debug. Jest and JSDom eliminate this form of pollution. But the choice of those two tools is not available for every project.\r\n\r\nAllowing this behavior as an option would ensure that the intended convenience remains for those who can benefit from it and that projects depending on non-sandboxed spec frameworks are not hindered by the conflicts this behavior can introduce into a spec suite.","updated_at":"2018-09-18T19:19:17Z","created_at":"2018-09-18T19:19:17Z","creator_user_login":"jneander"}
{"number":13681,"comment_id":"422527877","body":"Can you add an error handler, like\r\n\r\n```js\r\nwindow.addEventListener('error', e => {\r\n  e.preventDefault();\r\n});\r\n```\r\n\r\n? ","updated_at":"2018-09-18T19:52:20Z","created_at":"2018-09-18T19:52:20Z","creator_user_login":"gaearon"}
{"number":13681,"comment_id":"422533464","body":"Probably. But that seems … hacky. It would also smother any non- render-related errors that could be relevant during specs. Having more deliberate error handling could be a valuable addition to the ReactDOM.render api, where its use determines whether render errors are surfaced globally or through a designated handler.","updated_at":"2018-09-18T20:07:22Z","created_at":"2018-09-18T20:07:22Z","creator_user_login":"jneander"}
{"number":13681,"comment_id":"423701942","body":"@gaearon `error` handler can interfere with error handling in other places. As the issue states, the problem can occur in tests. I would expect that test framework may use `error` handler for its own needs and start to malfunction if we mess with it.","updated_at":"2018-09-22T00:19:47Z","created_at":"2018-09-22T00:19:47Z","creator_user_login":"bisubus"}
{"number":13681,"comment_id":"431008038","body":"I want to be able to throw things like network or authentication errors anywhere in my tree and catch them at a boundary to show an error message, instead of handling these errors at every place they can occur in my application. Like I would use `try/catch`.\r\n\r\nIf a network error occurs in a regular image somewhere I can just show alternative content or nothing, if it happens in a gallery it is a fatal error that I want to handle differently, but my image component can throw the same error. Error boundaries are great for this use case.\r\n\r\nThe console and Sentry will be spammed with errors because of this though, and adding a global error handler will silence legitimate errors that I have *not* caught with either `try/catch` or `componentDidCatch`.\r\n\r\nIt was surprising and unintuitive to me that `componentDidCatch` behaved differently than `catch`.","updated_at":"2018-10-18T13:27:51Z","created_at":"2018-10-18T13:27:51Z","creator_user_login":"jacobrask"}
{"number":13681,"comment_id":"537284752","body":"I believe I've observed something similar - I could never work out why subsequent tests would fail, but subsequent test _suites_ would pass. Given that separate components are rendered between tests would explain that.\r\n\r\n> When the error occurs, a spec runner such as Mocha will fail the test with the uncaught error, then continue with the next test. After advancing, the second render of the component will complete and call the ReactDOM.render callback, which continues code from the already-failed test while a subsequent test is in progress. This pollutes the spec suite and leads to other issues that are not produced when using the Production version of React.\r\n\r\nIs this an issue with error handling specifically, or maybe that React isn't properly being \"cleaned up\" between tests? I would expect to be able to run tests in isolation and use abandon the paused (on caught exceptions) render and start again. \r\n\r\nI appreciate there are cases for maintaining the same instance of React across tests, it would be good to have the choice 👐","updated_at":"2019-10-02T00:27:48Z","created_at":"2019-10-02T00:27:48Z","creator_user_login":"andycarrell"}
{"number":14049,"comment_id":"435436538","body":"Hmm. I don't quite see why this is unexpected.\r\n\r\nIt seems to me like resetting the error in `getDerivedStateFromProps` is generally a bad idea, no? Unless you compare the props and *decide* to reset the error (e.g. maybe route changed). In which case I'd actually expect it to work.\r\n\r\nAm I missing some practical scenario?","updated_at":"2018-11-02T16:28:36Z","created_at":"2018-11-02T16:28:36Z","creator_user_login":"gaearon"}
{"number":14049,"comment_id":"435579470","body":"I think I agree, but since this caused a production crasher from updating a minor version of React I wanted to report it to see if there's anything that can be done to avoid it, but might also just be legacy code breaking due to intentional changes in React.\r\n\r\nBasically, what happened in our case is that `getDerivedStateFromProps` was relied upon to not trigger twice in a row if an error occurred while rendering but `children` did not change (the only value that *can* change). Since 16.4 it changed (I just found #12898 so I see this has been discussed at length) and now `getDerivedStateFromProps` can be called twice due to a single update if an error occurs in the first render. Since `error` is reset in the second `getDerivedStateFromProps`, there's never a `render()` call that will render with it set to something, now causing two crashes in a row, which in turn causes the error boundary to be skipped, causing React to unmount entirely.\r\n\r\nFrom what I can understand (I wasn't there when it was written) the goal was to keep `error` null for as much of the time possible, since the `children` need to be \"probed\" for fixes (either a prop change in the child or a replacement of the child may fix it). But never null for two erroneous renders in a row, since then the error boundary fails.\r\n\r\n(Footnote, `componentDidCatch` was used in the legacy code since obviously `getDerivedStateFromError` didn't exist, but the end result would be the same in this case.)","updated_at":"2018-11-03T11:18:45Z","created_at":"2018-11-03T11:09:31Z","creator_user_login":"blixt"}
{"number":14049,"comment_id":"435613964","body":"I guess what I’m trying to say is that any code that returns something unconditionally from `getDerivedStateFromProps` is a symptom of a bug. It means your code relies on *when* updates happen rather than *what* changes. ","updated_at":"2018-11-03T19:20:59Z","created_at":"2018-11-03T19:20:59Z","creator_user_login":"gaearon"}
{"number":14049,"comment_id":"435661879","body":"Fair enough, it should definitely rely on what changes. Given the following scenario, what's the correct way to set `this.state.error` to `null` when `this.props.children` changes (eg a property change)?\r\n\r\n```javascript\r\nstatic getDerivedStateFromError(error) {\r\n    return { error };\r\n}\r\n\r\nrender() {\r\n    if (this.state.error) {\r\n        // Child component is in error state, show red box.\r\n        return <RedBox />;\r\n    }\r\n    return this.props.children;\r\n}\r\n```\r\n\r\nHere's a sandbox: https://codesandbox.io/s/035nw47kkp\r\n\r\n(This indicates a bug in the child component, but it's a component out of our control and our UI will need to handle it and for good user experience recover once the component has been replaced or updated to work again.)\r\n\r\nThe options I can think of are:\r\n\r\n* Find every place that the error boundary is used and imperatively tell it to reset its error before rendering (since if there's an error the `setState` will only happen once at this level, even as the component renders twice to recover from the error).\r\n* Rely on the user to press a \"Retry\" button in the error boundary.\r\n* Compare the `this.props.children` value that the component had upon error with the current value upon render and only show the error if it's identity equal to the erroring `this.props.children`.\r\n* Some other way to attempt a re-render (eg by resetting `error`) when something further up the stack changes to probe `this.props.children` for potential errors and either recover from or retain the error state.","updated_at":"2018-11-04T11:31:08Z","created_at":"2018-11-04T11:31:08Z","creator_user_login":"blixt"}
{"number":14049,"comment_id":"692654716","body":"I am not sure if this adds to the discussion\r\n\r\nWe have a similar situation situation where a third party component throws an error during render. Throwing errors during the render phase is bad, but it is not something we can fix in the short term.\r\n\r\nThe error comes up in rare occasions as a result of user input.\r\n\r\nSo our idea is: when the error is thrown we catch it, reset the user input and rerender the component.\r\n\r\nSimplified it would look like this:\r\n\r\n```jsx\r\nclass ErrorBoundary extends React.Component {\r\n  static getDerivedStateFromError(e) {\r\n    return { hasError: true }\r\n  }\r\n  state = { hasError: false }\r\n  render() {\r\n    return !this.state.hasError && this.props.children\r\n  }\r\n  componentDidCatch(e) {\r\n    this.props.onError(e)\r\n    this.setState({ hasError: false }) // the documentation states this will be deprecated\r\n  }\r\n}\r\n```\r\n\r\nIt would however be better if we could tell this component that a recovery took place and it can safely resume its render duties.\r\n","updated_at":"2020-09-15T11:28:27Z","created_at":"2020-09-15T11:28:27Z","creator_user_login":"EECOLOR"}
{"number":14049,"comment_id":"1006257605","body":"I would like to have the componentDidCatch cause an error toast message to occur, but have the application continue rendering. Is it possible to resume the render? \r\nI understand that i will need to resolve the state issues myself","updated_at":"2022-01-06T03:31:54Z","created_at":"2022-01-06T03:31:54Z","creator_user_login":"tonypee"}
{"number":13798,"comment_id":"428600459","body":"That would be great. Unfortunately I don't have a good strategy for how to reliably detect iOS or Safari WebViews to only apply the hack there.","updated_at":"2018-10-10T14:44:54Z","created_at":"2018-10-10T14:44:54Z","creator_user_login":"gaearon"}
{"number":13798,"comment_id":"428601960","body":"I started looking at a PR for this. I was looking at\r\nhttps://stackoverflow.com/questions/3007480/determine-if-user-navigated-from-mobile-safari\r\n\r\n\r\nand came up with\r\n```\r\n  const userAgent = window.navigator.userAgent;\r\n  const isIos = !!userAgent.match(/(iPod|iPhone|iPad)/);\r\n  const isWebkit = !!userAgent.match(/WebKit/);\r\n  const iosSafari = isIos && isWebkit && !userAgent.match(/CriOS/i);\r\n```\r\n\r\nbut seems very brittle ","updated_at":"2018-10-10T14:48:48Z","created_at":"2018-10-10T14:48:48Z","creator_user_login":"Lily418"}
{"number":13798,"comment_id":"428602678","body":"@Lily418 The problem with relying on the user agent is that webviews can overwrite them (I think) which would break our feature test and onClick events in React 😕 Check out #12989 for more context.","updated_at":"2018-10-10T14:51:30Z","created_at":"2018-10-10T14:50:44Z","creator_user_login":"philipp-spiess"}
{"number":13798,"comment_id":"430047885","body":"we just upgraded our project from 3 days and our accessibilty got broken and we did downgrade","updated_at":"2018-10-15T23:23:51Z","created_at":"2018-10-15T23:23:33Z","creator_user_login":"EmanAskar"}
{"number":13798,"comment_id":"431246825","body":"Yeah, I know in Android for instance you can do something like `WebView.android.getSettings().setUserAgentString(“your-custom-user-agent”);` to manipulate the User-Agent directly, so I assume that is doable in almost every scenario (non-Android ofc). So that is a good point!","updated_at":"2018-10-19T05:13:08Z","created_at":"2018-10-19T05:12:31Z","creator_user_login":"ghost"}
{"number":13798,"comment_id":"435157494","body":"@EmanAskar \r\n\r\n>we just upgraded our project from 3 days and our accessibilty got broken and we did downgrade\r\n\r\nThis code has been in React for many years. Don't know what you mean.","updated_at":"2018-11-01T19:27:40Z","created_at":"2018-11-01T19:27:40Z","creator_user_login":"gaearon"}
{"number":13798,"comment_id":"435189302","body":"We upgraded from 15.6 to latest react then the issue started to happen","updated_at":"2018-11-01T21:13:16Z","created_at":"2018-11-01T21:13:16Z","creator_user_login":"EmanAskar"}
{"number":13798,"comment_id":"436031116","body":"I am not sure why you should worry about the change of user agent? Guess you mean the case like viewing website from inside the Twitter app and Twitter happen have defined some weird user agent? ","updated_at":"2018-11-05T20:54:40Z","created_at":"2018-11-05T20:54:40Z","creator_user_login":"weyert"}
{"number":13798,"comment_id":"458700935","body":"This is a tricky problem… it is usually caused by click handlers.  JAWS (and NVDA) announce \"clickable\" when an element or one of its ancestors has a click event handler.\r\n\r\nFor example, \"clickable\" is announced each time a JAWS user presses down arrow to read the p lines in the following div:\r\n\r\n`         <div onclick=\"\">\r\n            <p>The quick brown fox</p>\r\n            <p>jumps over the lazy dog.</p>\r\n         </div>`","updated_at":"2019-01-29T20:48:00Z","created_at":"2019-01-29T20:48:00Z","creator_user_login":"jkatherman"}
{"number":26131,"comment_id":"1437423447","body":"Even with react version 17, the `console.log('UseReducer Render')` is re-rendered on every state update. Here is the same useReducer behavior in version 17 - [Repl-Link](https://replit.com/@hhkk0010/react-issue-26131-v17) and in version 18 [Repl-Link](https://replit.com/@hhkk0010/react-issue-26131-v18) I don't think this is a bug.","updated_at":"2023-02-21T04:20:08Z","created_at":"2023-02-20T18:45:56Z","creator_user_login":"hhkk28"}
{"number":26131,"comment_id":"1442157683","body":"@hhkk28 There's a difference between v17 and v18 for the \"reset\" button. The v17 version is working as described in the docs (https://reactjs.org/docs/hooks-reference.html#bailing-out-of-a-dispatch):\r\n\r\n> Bailing out of a dispatch\r\nIf you return the same value from a Reducer Hook as the current state, React will bail out without rendering the children or firing effects. (React uses the [Object.is comparison algorithm](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is#Description).)\r\n\r\n> Note that React may still need to render that specific component again before bailing out. That shouldn’t be a concern because React won’t unnecessarily go “deeper” into the tree. If you’re doing expensive calculations while rendering, you can optimize them with useMemo.\r\n\r\n\r\nCheck out the following example: https://codesandbox.io/s/wispy-hooks-0vytuh?file=%2Fsrc%2FApp.js\r\nReact should bail out from continuously re-rendering the component (one additional render is expected).","updated_at":"2023-02-23T17:23:54Z","created_at":"2023-02-23T17:23:54Z","creator_user_login":"mikirejf"}
{"number":26131,"comment_id":"1442183475","body":"I see, now i understand the issue. According to the PR - [#22445](https://github.com/facebook/react/pull/22445) I think this bailout behavior is removed for useReducer.","updated_at":"2023-02-23T17:45:27Z","created_at":"2023-02-23T17:43:50Z","creator_user_login":"hhkk28"}
{"number":26131,"comment_id":"1442297835","body":"@hhkk28 Thanks for pointing out the PR. Much appreciated!","updated_at":"2023-02-23T19:11:33Z","created_at":"2023-02-23T19:11:33Z","creator_user_login":"mikirejf"}
{"number":26131,"comment_id":"1445224487","body":"Does that mean this issue can be closed @mikirejf ?","updated_at":"2023-02-25T23:10:45Z","created_at":"2023-02-25T23:10:45Z","creator_user_login":"tomdevisser"}
{"number":26131,"comment_id":"1445279789","body":"@tomdevisser \n\nCan be closed 👍","updated_at":"2023-02-26T06:32:38Z","created_at":"2023-02-26T06:32:38Z","creator_user_login":"mikirejf"}
{"number":26131,"comment_id":"1445464948","body":"@sshubham681 \r\n\r\n> @tomdevisser\r\n> \r\n> Can be closed 👍\r\n\r\n","updated_at":"2023-02-26T20:56:14Z","created_at":"2023-02-26T20:56:14Z","creator_user_login":"tomdevisser"}
{"number":26806,"comment_id":"1546622053","body":"@NkOffiCiAL07 totally agreed on your point. \r\nOn the other hand don't you think developers can handle forms in a very opinionated way. React being a library should be abstracted of built-in pattens which makes it different from frameworks like Angular where features like form handling comes built-in.","updated_at":"2023-05-13T10:59:04Z","created_at":"2023-05-13T10:59:04Z","creator_user_login":"shiv11x10"}
{"number":26806,"comment_id":"1569375852","body":"Lately, [react-hook-form](https://react-hook-form.com/) has been gaining a lot of popularity.","updated_at":"2023-05-31T01:57:15Z","created_at":"2023-05-31T01:57:15Z","creator_user_login":"alvgaona"}
{"number":26806,"comment_id":"1576509893","body":"what's the issue you're facing ??","updated_at":"2023-06-05T10:09:02Z","created_at":"2023-06-05T10:09:02Z","creator_user_login":"iamSuccessful72"}
{"number":26806,"comment_id":"1618913576","body":"> @NkOffiCiAL07 totally agreed on your point. On the other hand don't you think developers can handle forms in a very opinionated way. React being a library should be abstracted of built-in pattens which makes it different from frameworks like Angular where features like form handling comes built-in.\r\n\r\nYes, i agree with you here. It's a UI library should be responsible for that only. ","updated_at":"2023-07-03T17:22:06Z","created_at":"2023-07-03T17:22:06Z","creator_user_login":"merzainc"}
{"number":25895,"comment_id":"1354875729","body":"Hi @krishnavamshi0708! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2325895). Thanks!","updated_at":"2022-12-16T14:04:48Z","created_at":"2022-12-16T14:04:48Z","creator_user_login":"facebook-github-bot"}
{"number":25895,"comment_id":"1354910094","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: fabef7a6b71798fe2477720e59d090a0e74e0009...310db9feecc34e1756bdcc867aa19fe5107c82a2\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/310db9feecc34e1756bdcc867aa19fe5107c82a2/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=fabef7a6b71798fe2477720e59d090a0e74e0009) | **=** | 154.75 kB | 154.75 kB | = | 49.08 kB | 49.08 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/310db9feecc34e1756bdcc867aa19fe5107c82a2/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=fabef7a6b71798fe2477720e59d090a0e74e0009) | **=** | 156.70 kB | 156.70 kB | = | 49.73 kB | 49.73 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/310db9feecc34e1756bdcc867aa19fe5107c82a2/files/facebook-www/ReactDOM-prod.classic.js?compare=fabef7a6b71798fe2477720e59d090a0e74e0009) | **=** | 534.49 kB | 534.49 kB | = | 95.15 kB | 95.15 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/310db9feecc34e1756bdcc867aa19fe5107c82a2/files/facebook-www/ReactDOM-prod.modern.js?compare=fabef7a6b71798fe2477720e59d090a0e74e0009) | **=** | 519.59 kB | 519.59 kB | = | 92.96 kB | 92.96 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 310db9feecc34e1756bdcc867aa19fe5107c82a2\n</p>\n","updated_at":"2022-12-16T14:12:11Z","created_at":"2022-12-16T14:12:11Z","creator_user_login":"sizebot"}
{"number":25763,"comment_id":"1333639109","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: b14d7fa4b88dad5f0017d084e462952c700aa2ad...e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 154.37 kB | 154.37 kB | = | 48.97 kB | 48.98 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 156.29 kB | 156.29 kB | = | 49.63 kB | 49.63 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/facebook-www/ReactDOM-prod.classic.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 533.12 kB | 533.12 kB | = | 94.96 kB | 94.96 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/facebook-www/ReactDOM-prod.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 518.22 kB | 518.22 kB | = | 92.76 kB | 92.76 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/facebook-www/ReactDOMForked-prod.classic.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 533.12 kB | 533.12 kB | = | 94.96 kB | 94.96 kB\n| [react-native/shims/ReactNativeTypes.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/react-native/shims/ReactNativeTypes.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+17.35%** | 7.20 kB | 8.45 kB | +9.55% | 2.01 kB | 2.20 kB\n| [react-native/implementations/ReactFabric-prod.fb.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/react-native/implementations/ReactFabric-prod.fb.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.40%** | 327.70 kB | 338.84 kB | +2.12% | 58.17 kB | 59.41 kB\n| [react-native/implementations/ReactNativeRenderer-prod.fb.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/react-native/implementations/ReactNativeRenderer-prod.fb.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.28%** | 333.50 kB | 344.44 kB | +1.97% | 59.12 kB | 60.29 kB\n| [react-native/implementations/ReactFabric-profiling.fb.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/react-native/implementations/ReactFabric-profiling.fb.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.09%** | 354.75 kB | 365.72 kB | +1.76% | 62.40 kB | 63.50 kB\n| [react-native/implementations/ReactNativeRenderer-profiling.fb.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/react-native/implementations/ReactNativeRenderer-profiling.fb.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.98%** | 360.63 kB | 371.37 kB | +1.60% | 63.35 kB | 64.36 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [react-native/shims/ReactNativeTypes.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/react-native/shims/ReactNativeTypes.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+17.35%** | 7.20 kB | 8.45 kB | +9.55% | 2.01 kB | 2.20 kB\n| [react-native/implementations/ReactFabric-prod.fb.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/react-native/implementations/ReactFabric-prod.fb.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.40%** | 327.70 kB | 338.84 kB | +2.12% | 58.17 kB | 59.41 kB\n| [react-native/implementations/ReactNativeRenderer-prod.fb.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/react-native/implementations/ReactNativeRenderer-prod.fb.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.28%** | 333.50 kB | 344.44 kB | +1.97% | 59.12 kB | 60.29 kB\n| [react-native/implementations/ReactFabric-profiling.fb.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/react-native/implementations/ReactFabric-profiling.fb.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.09%** | 354.75 kB | 365.72 kB | +1.76% | 62.40 kB | 63.50 kB\n| [react-native/implementations/ReactNativeRenderer-profiling.fb.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/react-native/implementations/ReactNativeRenderer-profiling.fb.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.98%** | 360.63 kB | 371.37 kB | +1.60% | 63.35 kB | 64.36 kB\n| [react-native/implementations/ReactFabric-dev.fb.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/react-native/implementations/ReactFabric-dev.fb.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.45%** | 880.57 kB | 893.35 kB | +0.67% | 190.60 kB | 191.88 kB\n| [react-native/implementations/ReactNativeRenderer-dev.fb.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/react-native/implementations/ReactNativeRenderer-dev.fb.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.43%** | 889.24 kB | 901.97 kB | +0.67% | 192.83 kB | 194.11 kB\n| [facebook-www/ReactIs-dev.classic.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/facebook-www/ReactIs-dev.classic.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 9.56 kB | 9.49 kB | = | 2.54 kB | 2.50 kB\n| [facebook-www/ReactIs-dev.modern.js](https://react-builds.vercel.app/commits/e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9/files/facebook-www/ReactIs-dev.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 9.56 kB | 9.49 kB | = | 2.53 kB | 2.50 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against e3d67126c1d21351e0003aa6fdbc6dfd3a7eb1c9\n</p>\n","updated_at":"2022-12-09T18:00:13Z","created_at":"2022-12-01T11:43:06Z","creator_user_login":"sizebot"}
{"number":25763,"comment_id":"1345828528","body":"I'm not familiar with `__REACT_DEVTOOLS_GLOBAL_HOOK__` and I haven't looked. But couldn't we just formalize the API and hide/abstract the internal details? This would make this PR less invasible, easier to review and reduce code size impact.\r\n\r\nThe capabilities added by this PR will make perf work a lot easier, particularly on mobile.","updated_at":"2022-12-12T03:47:58Z","created_at":"2022-12-12T03:47:58Z","creator_user_login":"bgirard"}
{"number":25763,"comment_id":"1346264271","body":"> I'm not familiar with `__REACT_DEVTOOLS_GLOBAL_HOOK__` and I haven't looked. But couldn't we just formalize the API and hide/abstract the internal details? This would make this PR less invasible, easier to review and reduce code size impact.\r\n\r\nI think you looked at the old example that used that hook, instead of the new API that uses the one exposed in this API.\r\n\r\n> But couldn't we just formalize the API and hide/abstract the internal details?\r\n\r\nThat's exactly what this PR does (so we can migrate away from the DevTools hook).","updated_at":"2022-12-12T10:51:45Z","created_at":"2022-12-12T10:51:45Z","creator_user_login":"rubennorte"}
{"number":25763,"comment_id":"1478324695","body":"@acdlite could you please take a look at this?","updated_at":"2023-03-21T17:37:55Z","created_at":"2023-03-21T17:37:55Z","creator_user_login":"rubennorte"}
{"number":25889,"comment_id":"1374824725","body":"```js\r\njest.useRealTimers();\r\n\r\nconst { screen, render } = require(\"@testing-library/react\");\r\nconst { createElement, useEffect, useState } = require(\"react\");\r\n```\r\n\r\nThis works, just useRealTimers before importing react stuff","updated_at":"2023-01-08T12:30:41Z","created_at":"2023-01-08T12:30:30Z","creator_user_login":"sunderls"}
{"number":25889,"comment_id":"1374847481","body":"This is however not viable when you use `import` statements instead of `require`. It could work only if the global `jest.useRealTimers()` calls were auto-hoisted by the `jest-hoist` Babel plugin, like `jest.mock` calls are.","updated_at":"2023-01-08T14:18:17Z","created_at":"2023-01-08T14:18:17Z","creator_user_login":"jsnajdr"}
{"number":25889,"comment_id":"1398776101","body":"May be to fix this bug, it is necessary to force React to use real timers instead of fake timers when initializing references to the timing functions, by using the current value of globalThis.setImmediate or globalThis.queueMicrotask.\r\n\r\nAn example : \r\n```js \r\nconst localSetImmediate = typeof globalThis.setImmediate === 'function' ? (cb) => globalThis.setImmediate(cb) : /* ... fallbacks */;\r\n```\r\nIn my opinion, when using the waitFor function from the Testing Library, it is necessary to disable the React Act environment so that updates occur \"naturally\" using native timers rather than being wrapped in act(). However, this should be used with caution according to the documentation, as it can lead to similar timing bugs.\r\n\r\nThe scheduleMicrotask function also uses the fake version of queueMicrotask, so this should be taken into account in cases where useSyncExternalStore is used.\r\n\r\nI recommend testing the code after making these modifications to ensure that the bug has been fixed. 😅.","updated_at":"2023-01-20T18:32:54Z","created_at":"2023-01-20T18:27:17Z","creator_user_login":"rardooba"}
{"number":27314,"comment_id":"1699505097","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 2fba484cd095ea79b940364cea5107fa4ca9f0c8...a6011c2bba62aa3405781ae8c46312f90d5ee802\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **=** | 165.63 kB | 165.63 kB | = | 51.88 kB | 51.88 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **=** | 174.70 kB | 174.70 kB | = | 54.61 kB | 54.61 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/facebook-www/ReactDOM-prod.classic.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **=** | 570.44 kB | 570.44 kB | = | 100.45 kB | 100.45 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/facebook-www/ReactDOM-prod.modern.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **=** | 554.21 kB | 554.21 kB | = | 97.61 kB | 97.61 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+33.15%** | 4.62 kB | 6.15 kB | +35.88% | 2.03 kB | 2.76 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+33.15%** | 4.62 kB | 6.15 kB | +35.88% | 2.03 kB | 2.76 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+33.15%** | 4.62 kB | 6.15 kB | +35.88% | 2.03 kB | 2.76 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+4.55%** | 0.90 kB | 0.94 kB | +2.57% | 0.51 kB | 0.52 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+4.55%** | 0.90 kB | 0.94 kB | +2.57% | 0.51 kB | 0.52 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+4.55%** | 0.90 kB | 0.94 kB | +2.57% | 0.51 kB | 0.52 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.99%** | 55.57 kB | 57.78 kB | +4.92% | 13.60 kB | 14.27 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.99%** | 55.57 kB | 57.78 kB | +4.92% | 13.60 kB | 14.27 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.85%** | 56.29 kB | 58.46 kB | +4.75% | 13.75 kB | 14.40 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.85%** | 56.29 kB | 58.46 kB | +4.75% | 13.75 kB | 14.40 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-flight-client.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-flight-client.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.80%** | 1.84 kB | 1.91 kB | +3.63% | 0.80 kB | 0.83 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-flight-client.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-flight-client.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.80%** | 1.84 kB | 1.91 kB | +3.63% | 0.80 kB | 0.83 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-flight-client.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-flight-client.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.80%** | 1.84 kB | 1.91 kB | +3.63% | 0.80 kB | 0.83 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.70%** | 54.33 kB | 56.34 kB | +4.94% | 13.21 kB | 13.86 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.70%** | 54.33 kB | 56.34 kB | +4.94% | 13.21 kB | 13.86 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.65%** | 60.61 kB | 62.83 kB | +4.56% | 14.62 kB | 15.29 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.54%** | 61.34 kB | 63.50 kB | +4.41% | 14.77 kB | 15.42 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.39%** | 59.37 kB | 61.38 kB | +4.55% | 14.23 kB | 14.87 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.61%** | 11.37 kB | 11.67 kB | +2.40% | 4.41 kB | 4.52 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.61%** | 11.37 kB | 11.67 kB | +2.40% | 4.41 kB | 4.52 kB\n| [oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.61%** | 10.65 kB | 10.92 kB | +2.72% | 4.11 kB | 4.22 kB\n| [oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.61%** | 10.65 kB | 10.92 kB | +2.72% | 4.11 kB | 4.22 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.61%** | 11.05 kB | 11.34 kB | +2.85% | 4.28 kB | 4.40 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.61%** | 11.05 kB | 11.34 kB | +2.85% | 4.28 kB | 4.40 kB\n| [oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-client.node.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-client.node.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.51%** | 53.04 kB | 54.38 kB | +2.96% | 12.88 kB | 13.27 kB\n| [oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-client.node.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-client.node.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.51%** | 53.04 kB | 54.38 kB | +2.96% | 12.88 kB | 13.27 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.34%** | 12.38 kB | 12.67 kB | +2.56% | 4.65 kB | 4.77 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.34%** | 12.70 kB | 13.00 kB | +2.21% | 4.79 kB | 4.90 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.33%** | 52.83 kB | 54.07 kB | +3.10% | 12.83 kB | 13.22 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.33%** | 52.83 kB | 54.07 kB | +3.10% | 12.83 kB | 13.22 kB\n| [oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.32%** | 11.98 kB | 12.25 kB | +2.34% | 4.49 kB | 4.60 kB\n| [oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.31%** | 56.22 kB | 57.52 kB | +3.25% | 13.03 kB | 13.45 kB\n| [oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.31%** | 56.22 kB | 57.52 kB | +3.25% | 13.03 kB | 13.45 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.29%** | 11.63 kB | 11.90 kB | +2.38% | 4.50 kB | 4.61 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.29%** | 11.63 kB | 11.90 kB | +2.38% | 4.50 kB | 4.61 kB\n| [oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-client.node.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-client.node.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.29%** | 58.09 kB | 59.42 kB | +2.72% | 13.91 kB | 14.28 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.13%** | 57.88 kB | 59.11 kB | +2.90% | 13.82 kB | 14.23 kB\n| [oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.10%** | 61.57 kB | 62.87 kB | +2.94% | 14.06 kB | 14.47 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.06%** | 12.95 kB | 13.22 kB | +2.03% | 4.88 kB | 4.98 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+33.15%** | 4.62 kB | 6.15 kB | +35.88% | 2.03 kB | 2.76 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+33.15%** | 4.62 kB | 6.15 kB | +35.88% | 2.03 kB | 2.76 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+33.15%** | 4.62 kB | 6.15 kB | +35.88% | 2.03 kB | 2.76 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+4.55%** | 0.90 kB | 0.94 kB | +2.57% | 0.51 kB | 0.52 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+4.55%** | 0.90 kB | 0.94 kB | +2.57% | 0.51 kB | 0.52 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+4.55%** | 0.90 kB | 0.94 kB | +2.57% | 0.51 kB | 0.52 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.99%** | 55.57 kB | 57.78 kB | +4.92% | 13.60 kB | 14.27 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.99%** | 55.57 kB | 57.78 kB | +4.92% | 13.60 kB | 14.27 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.85%** | 56.29 kB | 58.46 kB | +4.75% | 13.75 kB | 14.40 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.85%** | 56.29 kB | 58.46 kB | +4.75% | 13.75 kB | 14.40 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-flight-client.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-flight-client.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.80%** | 1.84 kB | 1.91 kB | +3.63% | 0.80 kB | 0.83 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-flight-client.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-flight-client.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.80%** | 1.84 kB | 1.91 kB | +3.63% | 0.80 kB | 0.83 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-flight-client.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-flight-client.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.80%** | 1.84 kB | 1.91 kB | +3.63% | 0.80 kB | 0.83 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.70%** | 54.33 kB | 56.34 kB | +4.94% | 13.21 kB | 13.86 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.70%** | 54.33 kB | 56.34 kB | +4.94% | 13.21 kB | 13.86 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.65%** | 60.61 kB | 62.83 kB | +4.56% | 14.62 kB | 15.29 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.54%** | 61.34 kB | 63.50 kB | +4.41% | 14.77 kB | 15.42 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+3.39%** | 59.37 kB | 61.38 kB | +4.55% | 14.23 kB | 14.87 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.61%** | 11.37 kB | 11.67 kB | +2.40% | 4.41 kB | 4.52 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.61%** | 11.37 kB | 11.67 kB | +2.40% | 4.41 kB | 4.52 kB\n| [oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.61%** | 10.65 kB | 10.92 kB | +2.72% | 4.11 kB | 4.22 kB\n| [oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.61%** | 10.65 kB | 10.92 kB | +2.72% | 4.11 kB | 4.22 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.61%** | 11.05 kB | 11.34 kB | +2.85% | 4.28 kB | 4.40 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.61%** | 11.05 kB | 11.34 kB | +2.85% | 4.28 kB | 4.40 kB\n| [oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-client.node.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-client.node.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.51%** | 53.04 kB | 54.38 kB | +2.96% | 12.88 kB | 13.27 kB\n| [oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-client.node.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-client.node.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.51%** | 53.04 kB | 54.38 kB | +2.96% | 12.88 kB | 13.27 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.34%** | 12.38 kB | 12.67 kB | +2.56% | 4.65 kB | 4.77 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.34%** | 12.70 kB | 13.00 kB | +2.21% | 4.79 kB | 4.90 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.33%** | 52.83 kB | 54.07 kB | +3.10% | 12.83 kB | 13.22 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.33%** | 52.83 kB | 54.07 kB | +3.10% | 12.83 kB | 13.22 kB\n| [oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.32%** | 11.98 kB | 12.25 kB | +2.34% | 4.49 kB | 4.60 kB\n| [oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.31%** | 56.22 kB | 57.52 kB | +3.25% | 13.03 kB | 13.45 kB\n| [oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.31%** | 56.22 kB | 57.52 kB | +3.25% | 13.03 kB | 13.45 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.29%** | 11.63 kB | 11.90 kB | +2.38% | 4.50 kB | 4.61 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.29%** | 11.63 kB | 11.90 kB | +2.38% | 4.50 kB | 4.61 kB\n| [oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-client.node.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-client.node.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.29%** | 58.09 kB | 59.42 kB | +2.72% | 13.91 kB | 14.28 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.13%** | 57.88 kB | 59.11 kB | +2.90% | 13.82 kB | 14.23 kB\n| [oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.10%** | 61.57 kB | 62.87 kB | +2.94% | 14.06 kB | 14.47 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+2.06%** | 12.95 kB | 13.22 kB | +2.03% | 4.88 kB | 4.98 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+1.48%** | 10.38 kB | 10.54 kB | +1.06% | 4.04 kB | 4.09 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+1.48%** | 10.38 kB | 10.54 kB | +1.06% | 4.04 kB | 4.09 kB\n| [oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+1.44%** | 10.65 kB | 10.80 kB | +0.99% | 4.14 kB | 4.18 kB\n| [oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+1.44%** | 10.65 kB | 10.80 kB | +0.99% | 4.14 kB | 4.18 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+1.32%** | 11.70 kB | 11.85 kB | +0.79% | 4.41 kB | 4.45 kB\n| [oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+1.28%** | 11.96 kB | 12.12 kB | +0.89% | 4.52 kB | 4.56 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+1.17%** | 98.15 kB | 99.30 kB | +1.80% | 23.63 kB | 24.05 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+1.17%** | 98.15 kB | 99.30 kB | +1.80% | 23.63 kB | 24.05 kB\n| [oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+1.16%** | 103.79 kB | 104.99 kB | +1.78% | 24.00 kB | 24.43 kB\n| [oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+1.16%** | 103.79 kB | 104.99 kB | +1.78% | 24.00 kB | 24.43 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+1.12%** | 103.01 kB | 104.16 kB | +1.68% | 24.52 kB | 24.94 kB\n| [oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+1.10%** | 108.89 kB | 110.08 kB | +1.67% | 24.88 kB | 25.29 kB\n| [oss-stable-semver/react-client/cjs/react-client-flight.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-client/cjs/react-client-flight.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.87%** | 9.51 kB | 9.60 kB | +0.94% | 3.73 kB | 3.76 kB\n| [oss-stable/react-client/cjs/react-client-flight.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-client/cjs/react-client-flight.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.87%** | 9.51 kB | 9.60 kB | +0.94% | 3.73 kB | 3.76 kB\n| [oss-experimental/react-client/cjs/react-client-flight.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-client/cjs/react-client-flight.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.78%** | 10.70 kB | 10.78 kB | +0.91% | 4.05 kB | 4.09 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.64%** | 98.56 kB | 99.19 kB | +1.09% | 23.74 kB | 24.00 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.64%** | 98.56 kB | 99.19 kB | +1.09% | 23.74 kB | 24.00 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.61%** | 103.42 kB | 104.06 kB | +1.00% | 24.65 kB | 24.89 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.61%** | 103.90 kB | 104.54 kB | +1.03% | 24.82 kB | 25.08 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.61%** | 103.90 kB | 104.54 kB | +1.03% | 24.82 kB | 25.08 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.58%** | 108.32 kB | 108.95 kB | +0.97% | 25.56 kB | 25.81 kB\n| [oss-stable-semver/react-client/cjs/react-client-flight.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-client/cjs/react-client-flight.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.41%** | 49.45 kB | 49.65 kB | +0.46% | 12.35 kB | 12.41 kB\n| [oss-stable/react-client/cjs/react-client-flight.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-client/cjs/react-client-flight.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.41%** | 49.45 kB | 49.65 kB | +0.46% | 12.35 kB | 12.41 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.41%** | 25.32 kB | 25.42 kB | +0.49% | 8.62 kB | 8.66 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.41%** | 25.32 kB | 25.42 kB | +0.49% | 8.62 kB | 8.66 kB\n| [oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.39%** | 25.50 kB | 25.60 kB | +0.34% | 8.72 kB | 8.75 kB\n| [oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.39%** | 25.50 kB | 25.60 kB | +0.34% | 8.72 kB | 8.75 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.39%** | 26.53 kB | 26.64 kB | +0.45% | 8.92 kB | 8.96 kB\n| [oss-experimental/react-client/cjs/react-client-flight.development.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-client/cjs/react-client-flight.development.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.37%** | 54.49 kB | 54.70 kB | +0.40% | 13.38 kB | 13.43 kB\n| [oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.37%** | 26.72 kB | 26.82 kB | +0.33% | 9.03 kB | 9.06 kB\n| [oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-client.browser.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-client.browser.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.22%** | 9.68 kB | 9.70 kB | +0.27% | 3.76 kB | 3.77 kB\n| [oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-client.browser.production.min.js](https://react-builds.vercel.app/commits/a6011c2bba62aa3405781ae8c46312f90d5ee802/files/oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-client.browser.production.min.js?compare=2fba484cd095ea79b940364cea5107fa4ca9f0c8) | **+0.22%** | 9.68 kB | 9.70 kB | +0.27% | 3.76 kB | 3.77 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against a6011c2bba62aa3405781ae8c46312f90d5ee802\n</p>\n","updated_at":"2023-08-30T16:34:50Z","created_at":"2023-08-30T16:34:50Z","creator_user_login":"react-sizebot"}
{"number":27321,"comment_id":"1701478862","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 7022e8d6a3222c97d287dfa0f2361acc8a30683a...79ca08fff57bc035772c8d45ed1c6c9e5869bd6f\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.14%** | 165.63 kB | 165.86 kB | +0.10% | 51.88 kB | 51.93 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.31%** | 174.70 kB | 175.24 kB | +0.29% | 54.61 kB | 54.77 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/facebook-www/ReactDOM-prod.classic.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.02%** | 570.44 kB | 570.58 kB | +0.02% | 100.45 kB | 100.47 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/facebook-www/ReactDOM-prod.modern.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.02%** | 554.21 kB | 554.30 kB | +0.01% | 97.61 kB | 97.63 kB\n| [oss-experimental/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-server/cjs/react-server.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+2.05%** | 27.99 kB | 28.56 kB | +2.37% | 9.38 kB | 9.60 kB\n| [oss-experimental/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-server/cjs/react-server.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+2.01%** | 160.52 kB | 163.75 kB | +2.24% | 39.95 kB | 40.84 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-server/cjs/react-server.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+2.05%** | 27.99 kB | 28.56 kB | +2.37% | 9.38 kB | 9.60 kB\n| [oss-experimental/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-server/cjs/react-server.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+2.01%** | 160.52 kB | 163.75 kB | +2.24% | 39.95 kB | 40.84 kB\n| [facebook-www/ReactDOMServerStreaming-dev.modern.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/facebook-www/ReactDOMServerStreaming-dev.modern.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+1.00%** | 352.59 kB | 356.13 kB | +1.23% | 78.00 kB | 78.95 kB\n| [facebook-www/ReactDOMServer-dev.modern.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/facebook-www/ReactDOMServer-dev.modern.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.99%** | 357.39 kB | 360.93 kB | +1.23% | 79.15 kB | 80.12 kB\n| [facebook-www/ReactDOMServer-dev.classic.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/facebook-www/ReactDOMServer-dev.classic.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.97%** | 364.82 kB | 368.36 kB | +1.21% | 80.80 kB | 81.78 kB\n| [oss-experimental/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/umd/react-dom-server.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.95%** | 383.74 kB | 387.40 kB | +1.14% | 82.82 kB | 83.77 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-server.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.95%** | 366.25 kB | 369.73 kB | +1.13% | 81.95 kB | 82.88 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.edge.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-server.edge.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.95%** | 366.66 kB | 370.14 kB | +1.13% | 82.08 kB | 83.00 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-server.node.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.95%** | 367.19 kB | 370.66 kB | +1.13% | 81.99 kB | 82.92 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-server.bun.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.95%** | 362.08 kB | 365.50 kB | +1.14% | 81.19 kB | 82.11 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-static.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.94%** | 364.30 kB | 367.72 kB | +1.13% | 81.85 kB | 82.78 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.edge.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-static.edge.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.94%** | 364.71 kB | 368.13 kB | +1.13% | 81.98 kB | 82.91 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-static.node.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.93%** | 366.44 kB | 369.87 kB | +1.12% | 82.18 kB | 83.10 kB\n| [oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.93%** | 382.03 kB | 385.58 kB | +1.13% | 82.50 kB | 83.44 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.92%** | 364.63 kB | 368.00 kB | +1.12% | 81.67 kB | 82.58 kB\n| [oss-stable-semver/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-server/cjs/react-server.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.92%** | 25.91 kB | 26.15 kB | +0.67% | 8.78 kB | 8.84 kB\n| [oss-stable/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-server/cjs/react-server.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.92%** | 25.91 kB | 26.15 kB | +0.67% | 8.78 kB | 8.84 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.92%** | 366.54 kB | 369.91 kB | +1.11% | 82.12 kB | 83.03 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.84%** | 67.22 kB | 67.79 kB | +0.98% | 20.71 kB | 20.91 kB\n| [oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.83%** | 67.36 kB | 67.92 kB | +1.14% | 20.96 kB | 21.20 kB\n| [facebook-www/ReactDOMServer-prod.classic.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/facebook-www/ReactDOMServer-prod.classic.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.81%** | 155.99 kB | 157.24 kB | +1.33% | 28.33 kB | 28.70 kB\n| [facebook-www/ReactDOMServer-prod.modern.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/facebook-www/ReactDOMServer-prod.modern.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.80%** | 155.23 kB | 156.47 kB | +1.30% | 28.11 kB | 28.47 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-static.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.79%** | 66.73 kB | 67.25 kB | +1.06% | 20.64 kB | 20.86 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.edge.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-static.edge.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.79%** | 67.05 kB | 67.58 kB | +0.99% | 20.76 kB | 20.97 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.edge.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-server.edge.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.79%** | 71.66 kB | 72.23 kB | +0.97% | 22.21 kB | 22.43 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.79%** | 71.81 kB | 72.38 kB | +1.05% | 22.31 kB | 22.54 kB\n| [facebook-www/ReactDOMServerStreaming-prod.modern.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/facebook-www/ReactDOMServerStreaming-prod.modern.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.76%** | 157.36 kB | 158.55 kB | +1.23% | 29.08 kB | 29.44 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-server.bun.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.75%** | 69.69 kB | 70.21 kB | +0.92% | 21.32 kB | 21.51 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.74%** | 71.39 kB | 71.92 kB | +1.02% | 22.22 kB | 22.45 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.73%** | 66.14 kB | 66.63 kB | +0.91% | 19.94 kB | 20.12 kB\n| [oss-experimental/react-dom/umd/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/umd/react-dom-server-legacy.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.73%** | 66.30 kB | 66.78 kB | +1.01% | 20.33 kB | 20.54 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.68%** | 71.27 kB | 71.76 kB | +0.90% | 21.60 kB | 21.79 kB\n| [oss-stable-semver/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-server/cjs/react-server.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.52%** | 149.57 kB | 150.36 kB | +0.58% | 37.25 kB | 37.47 kB\n| [oss-stable/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-server/cjs/react-server.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.52%** | 149.57 kB | 150.36 kB | +0.58% | 37.25 kB | 37.47 kB\n| [oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-server.node.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-server.node.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.52%** | 24.17 kB | 24.30 kB | +0.44% | 8.39 kB | 8.43 kB\n| [oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-server.node.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-server.node.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.52%** | 24.17 kB | 24.30 kB | +0.44% | 8.39 kB | 8.43 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.49%** | 25.32 kB | 25.45 kB | +0.41% | 8.62 kB | 8.65 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.49%** | 25.32 kB | 25.45 kB | +0.41% | 8.62 kB | 8.65 kB\n| [oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-server.node.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-server.node.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.49%** | 25.33 kB | 25.45 kB | +0.45% | 8.66 kB | 8.70 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.49%** | 25.64 kB | 25.77 kB | +0.40% | 8.72 kB | 8.76 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.49%** | 25.64 kB | 25.77 kB | +0.40% | 8.72 kB | 8.76 kB\n| [oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.47%** | 25.50 kB | 25.62 kB | +0.40% | 8.72 kB | 8.76 kB\n| [oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.47%** | 25.50 kB | 25.62 kB | +0.40% | 8.72 kB | 8.76 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.47%** | 26.53 kB | 26.66 kB | +0.39% | 8.92 kB | 8.96 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.47%** | 26.58 kB | 26.71 kB | +0.45% | 9.06 kB | 9.10 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.47%** | 26.58 kB | 26.71 kB | +0.45% | 9.06 kB | 9.10 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.47%** | 26.85 kB | 26.98 kB | +0.38% | 9.02 kB | 9.05 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.46%** | 27.11 kB | 27.24 kB | +0.41% | 9.22 kB | 9.26 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.46%** | 27.11 kB | 27.24 kB | +0.41% | 9.22 kB | 9.26 kB\n| [oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.45%** | 26.72 kB | 26.84 kB | +0.45% | 9.03 kB | 9.07 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.45%** | 27.74 kB | 27.86 kB | +0.42% | 9.34 kB | 9.38 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.44%** | 28.27 kB | 28.39 kB | +0.40% | 9.51 kB | 9.54 kB\n| [oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-server.node.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-server.node.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.31%** | 94.77 kB | 95.06 kB | +0.32% | 22.56 kB | 22.63 kB\n| [oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-server.node.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-server.node.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.31%** | 94.77 kB | 95.06 kB | +0.32% | 22.56 kB | 22.63 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.31%** | 174.70 kB | 175.24 kB | +0.29% | 54.61 kB | 54.77 kB\n| [oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.30%** | 103.79 kB | 104.10 kB | +0.30% | 24.01 kB | 24.08 kB\n| [oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.30%** | 103.79 kB | 104.10 kB | +0.30% | 24.01 kB | 24.08 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.30%** | 98.15 kB | 98.45 kB | +0.31% | 23.63 kB | 23.71 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.30%** | 98.15 kB | 98.45 kB | +0.31% | 23.63 kB | 23.71 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.30%** | 98.56 kB | 98.86 kB | +0.31% | 23.74 kB | 23.82 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.30%** | 98.56 kB | 98.86 kB | +0.31% | 23.74 kB | 23.82 kB\n| [oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-server.node.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-server.node.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.29%** | 99.19 kB | 99.48 kB | +0.32% | 23.32 kB | 23.39 kB\n| [oss-experimental/react-dom/cjs/react-dom-unstable_testing.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-unstable_testing.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.29%** | 180.91 kB | 181.45 kB | +0.24% | 56.97 kB | 57.11 kB\n| [oss-experimental/react-dom/cjs/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom.profiling.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.29%** | 184.35 kB | 184.88 kB | +0.29% | 57.00 kB | 57.16 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.29%** | 101.86 kB | 102.16 kB | +0.31% | 24.22 kB | 24.29 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.29%** | 101.86 kB | 102.16 kB | +0.31% | 24.22 kB | 24.29 kB\n| [oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.28%** | 108.89 kB | 109.20 kB | +0.31% | 24.88 kB | 24.96 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.28%** | 103.02 kB | 103.31 kB | +0.30% | 24.53 kB | 24.60 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.28%** | 103.43 kB | 103.72 kB | +0.30% | 24.65 kB | 24.72 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.28%** | 103.91 kB | 104.20 kB | +0.29% | 24.83 kB | 24.90 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.28%** | 103.91 kB | 104.20 kB | +0.29% | 24.83 kB | 24.90 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.27%** | 106.28 kB | 106.57 kB | +0.30% | 24.98 kB | 25.05 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.27%** | 108.32 kB | 108.62 kB | +0.32% | 25.56 kB | 25.65 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-dom/cjs/react-dom-server.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.26%** | 63.71 kB | 63.88 kB | +0.25% | 19.70 kB | 19.75 kB\n| [oss-stable/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-dom/cjs/react-dom-server.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.26%** | 63.74 kB | 63.91 kB | +0.25% | 19.72 kB | 19.77 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-dom/umd/react-dom-server.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.26%** | 63.86 kB | 64.03 kB | +0.25% | 19.97 kB | 20.02 kB\n| [oss-stable/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-dom/umd/react-dom-server.browser.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.26%** | 63.89 kB | 64.06 kB | +0.24% | 19.99 kB | 20.04 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.edge.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-dom/cjs/react-dom-server.edge.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.25%** | 67.95 kB | 68.12 kB | +0.18% | 21.13 kB | 21.17 kB\n| [oss-stable/react-dom/cjs/react-dom-server.edge.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-dom/cjs/react-dom-server.edge.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.25%** | 67.97 kB | 68.14 kB | +0.17% | 21.16 kB | 21.19 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.25%** | 68.00 kB | 68.17 kB | +0.21% | 21.14 kB | 21.19 kB\n| [oss-stable/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-dom/cjs/react-dom-server.node.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.25%** | 68.03 kB | 68.20 kB | +0.20% | 21.17 kB | 21.21 kB\n| [oss-experimental/react-dom/umd/react-dom.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/umd/react-dom.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.24%** | 174.50 kB | 174.92 kB | +0.27% | 54.89 kB | 55.03 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.24%** | 116.34 kB | 116.62 kB | +0.27% | 35.44 kB | 35.54 kB\n| [oss-experimental/react-dom/umd/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/umd/react-dom.profiling.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.23%** | 183.50 kB | 183.92 kB | +0.25% | 57.26 kB | 57.40 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.22%** | 125.36 kB | 125.64 kB | +0.20% | 37.71 kB | 37.79 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-dom/cjs/react-dom-server.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.21%** | 348.23 kB | 348.96 kB | +0.25% | 78.48 kB | 78.68 kB\n| [oss-stable/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-dom/cjs/react-dom-server.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.21%** | 348.26 kB | 348.99 kB | +0.25% | 78.51 kB | 78.70 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.edge.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-dom/cjs/react-dom-server.edge.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.21%** | 348.64 kB | 349.37 kB | +0.25% | 78.61 kB | 78.80 kB\n| [oss-stable/react-dom/cjs/react-dom-server.edge.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-dom/cjs/react-dom-server.edge.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.21%** | 348.67 kB | 349.40 kB | +0.25% | 78.63 kB | 78.83 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-dom/umd/react-dom-server.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.21%** | 364.95 kB | 365.72 kB | +0.25% | 79.33 kB | 79.53 kB\n| [oss-stable/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-dom/umd/react-dom-server.browser.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.21%** | 364.98 kB | 365.74 kB | +0.25% | 79.36 kB | 79.56 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable-semver/react-dom/cjs/react-dom-server.node.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.21%** | 349.71 kB | 350.44 kB | +0.25% | 78.52 kB | 78.71 kB\n| [oss-stable/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-stable/react-dom/cjs/react-dom-server.node.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.21%** | 349.73 kB | 350.46 kB | +0.25% | 78.54 kB | 78.74 kB\n| [oss-experimental/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.20%** | 1,328.81 kB | 1,331.52 kB | +0.21% | 293.29 kB | 293.91 kB\n| [oss-experimental/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/umd/react-dom.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.20%** | 1,392.89 kB | 1,395.72 kB | +0.21% | 296.33 kB | 296.97 kB\n| [oss-experimental/react-dom/cjs/react-dom-unstable_testing.development.js](https://react-builds.vercel.app/commits/79ca08fff57bc035772c8d45ed1c6c9e5869bd6f/files/oss-experimental/react-dom/cjs/react-dom-unstable_testing.development.js?compare=7022e8d6a3222c97d287dfa0f2361acc8a30683a) | **+0.20%** | 1,346.87 kB | 1,349.57 kB | +0.21% | 297.68 kB | 298.30 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 79ca08fff57bc035772c8d45ed1c6c9e5869bd6f\n</p>\n","updated_at":"2023-08-31T18:42:35Z","created_at":"2023-08-31T17:37:08Z","creator_user_login":"react-sizebot"}
{"number":24650,"comment_id":"1143874781","body":"See also #24649. I've actually discovered it because of `Maximum update depth exceeded` warning, although I decided not to replicate it in my example. But the root cause is likely the same.","updated_at":"2022-06-01T16:55:54Z","created_at":"2022-06-01T16:55:44Z","creator_user_login":"Dremora"}
{"number":24650,"comment_id":"1157517137","body":" I think the expected behavior should be no error at all. \r\n\r\nThis is an interesting scenario because if you replace the dependency array with `[state.values.foo]`, the issue doesn't happen anymore.\r\n\r\nThis leads me to think useEffect is seeing changes in `state.values` object with each re-render, which cause it to fire, which updates the state and cause a re-render ..... etc ultimately getting into an infinite loop. \r\n\r\nThe question is, why does the issue happen when the dependency array has an object but doesn't happen with \r\nprimitive variables ? ","updated_at":"2022-06-16T19:53:46Z","created_at":"2022-06-16T10:48:43Z","creator_user_login":"Baribj"}
{"number":24650,"comment_id":"1157530017","body":"@ritwaldev \r\n> This is an interesting scenario because if you replace the dependency array with [state.values.foo], the issue doesn't happen anymore.\r\n\r\nI think because a literal value \"has more chance\" to look equal, on useEffect perspective, even if updates are applied out of order on the other hand `values` instance changes at every keystroke, so if it's out of sync the instance looks always different.","updated_at":"2022-06-16T11:04:20Z","created_at":"2022-06-16T11:04:20Z","creator_user_login":"gffuma"}
{"number":24650,"comment_id":"1181411634","body":"Do you think this issue could be related to the following one?\r\n\r\nhttps://github.com/jaredpalmer/formik/issues/3602\r\n","updated_at":"2022-07-12T07:24:47Z","created_at":"2022-07-12T07:24:47Z","creator_user_login":"antonvialibri1"}
{"number":24650,"comment_id":"1181415791","body":"@antonvialibri1 Yes i found this issue while using formik submit in useEffect.","updated_at":"2022-07-12T07:29:24Z","created_at":"2022-07-12T07:29:24Z","creator_user_login":"gffuma"}
{"number":24650,"comment_id":"1201258304","body":"@gffuma Yeah, hopefully Formik maintainers will address this issue soon.","updated_at":"2022-08-01T14:10:19Z","created_at":"2022-08-01T14:10:19Z","creator_user_login":"antonvialibri1"}
{"number":24650,"comment_id":"1203095516","body":"@antonvialibri1 in my opinion this is an issue with React, or at least, this  behaviour should be documented. ","updated_at":"2022-08-02T18:54:37Z","created_at":"2022-08-02T18:54:37Z","creator_user_login":"gffuma"}
{"number":24650,"comment_id":"1203595955","body":"@gffuma My assumption is that it's related to [Automatic Batching](https://reactjs.org/blog/2022/03/29/react-v18.html#new-feature-automatic-batching) which was introduced with React 18.\r\n\r\nI tried debugging Formik's code to understand what happens. If you look at my issue [here](https://github.com/jaredpalmer/formik/issues/3602#issue-1300883085) you will that for this Formik code:\r\n\r\n![image](https://user-images.githubusercontent.com/99957910/182550601-cb4b6e59-c865-4961-ac2c-635dfcd03799.png)\r\n\r\n![image](https://user-images.githubusercontent.com/99957910/182550623-c8fafcb4-c350-4cd4-8bc9-ad3139c2afb7.png)\r\n\r\nworks like this with React 17:\r\n\r\n- Formik's `setFieldValue` is called;\r\n- dispatch `SET_FIELD_VALUE`\r\n- Reducer for `SET_FIELD_VALUE` is executed (no batching)\r\n- `validateFormWithHightPriority` is then executed ✅\r\n\r\nWhereas, with React 18:\r\n\r\n- Formik's `setFieldValue` is called;\r\n- dispatch `SET_FIELD_VALUE`\r\n- `validateFormWithHightPriority` is executed ❗(I guess it's because of batching, React doesn't execute the state reducer for `SET_FIELD_VALUE` right away as it used to do in React 17)\r\n- Reducer for `SET_ISVALIDATING` is executed\r\n- Reducer for `SET_FIELD_VALUE` is never executed for some reason ⚠️.\r\n\r\nIt's a tiny implementation detail, but I think it potentially affect other use cases and therefore should be treated as a React 18 breaking change, even though they mention that upgrading from version 17 to version 18 should happen seamlessly.\r\n\r\nThe Formik team could address the issue and come up with a workaround, but I agree with you, the main issue is with React 18.","updated_at":"2022-08-03T07:41:35Z","created_at":"2022-08-03T07:38:09Z","creator_user_login":"antonvialibri1"}
{"number":24650,"comment_id":"1324024160","body":"@jaredpalmer this is a show stopper to me, any chance for a comment or advice?","updated_at":"2022-11-22T17:33:22Z","created_at":"2022-11-22T17:33:22Z","creator_user_login":"matths"}
{"number":24650,"comment_id":"1324645397","body":"@antonvialibri1 how did you solve your problem from August then?\r\nDowngrade React, patch/fork Formik, other workaround?\r\nOr does a switch to the legacy root api (https://github.com/reactwg/react-18/discussions/5) work out, until Formik is updated for the better?","updated_at":"2022-11-23T07:32:20Z","created_at":"2022-11-23T07:22:12Z","creator_user_login":"matths"}
{"number":24650,"comment_id":"1325235906","body":"Hi @matths,\r\n\r\nin my case the issue was due to a `useEffect` calling `helpers.setValue()`:\r\n\r\n```jsx\r\nconst SomeComponent = (props) => {\r\n  const [field, meta, helpers] = useField(props);\r\n  \r\n  const [value, setValue] = useState(field.value || 'initial');\r\n  \r\n  useEffect(\r\n    () => {\r\n      if (field.value !== value) {\r\n        helpers.setValue(value);\r\n      }\r\n    },\r\n    // For React 18, I needed to remove `field.value` and `helpers` from the deps array\r\n    // as an infinite loop was caused by `helpers.setValue(value);` when using React 18.\r\n    // I've created an issue on the Formik repo on GitHub that's worth tracking: https://github.com/jaredpalmer/formik/issues/3602\r\n    //\r\n    // This might actually be a bug of `useReducer` that was introduced in React 18: https://github.com/facebook/react/issues/24650\r\n    //\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [value /*, field.value, helpers */]\r\n  );\r\n  \r\n  // ...\r\n}\r\n```\r\n\r\nThe temporary solution was to comment out `field.value` and `helpers` from the `useEffect`'s deps, as `field.value` may change and needs to be synced with the `value`/`setValue` state returned by the `useState` hook and `helpers` is not stable across re-renders.\r\n\r\nI hope this issue is addressed by Formik's maintaners at some point. To me it feels like a React breaking change though.\r\n\r\nHope this helps!","updated_at":"2022-11-23T15:16:20Z","created_at":"2022-11-23T15:16:20Z","creator_user_login":"antonvialibri1"}
{"number":24650,"comment_id":"1325292402","body":"Hi @antonvialibri1,\r\n\r\nthank you for your quick reply, but I don't get it.\r\nMy use case is a react-select dropdown with a couple of options given from outside.\r\nWhenever options has a length of 1 only, it should set the field value to that single option if this is not already the case.\r\nI am fully aware this would trigger a re-rendering, but only one, right?\r\nWith React 18 the field value is not changed, so it runs into an infinite loop.\r\n\r\n```javascript\r\nconst SelectFormField = ({options}) => {\r\n\r\n  const [field] = useField(props);\r\n  const {setFieldValue} = useFormikContext();\r\n\r\n  useEffect(() => {\r\n    if (options.length === 1 && field.value !== options[0]) {\r\n      console.log(\"DEBUG: \", field.value, options[0]);\r\n      setFieldValue(field.name, options[0]);\r\n    }\r\n  }, [options, field.name, field.value, setFieldValue]);\r\n\r\n  return (\r\n    <Select\r\n      {...field}\r\n      options={options}\r\n    />\r\n  );\r\n};\r\n````\r\nI am able to wrap the `setFieldValue` into a flushSync to prevent this, but it produces another warning, because flushSync shall not be used in useEffect.\r\n\r\nLeaving out `field.value` and `setFieldValue` from the deps of useEffect produces even more warnings.\r\n\r\nAnd it doesn't matter if I use setValue from the useField hook or setFieldValue from the useFormikContext hook.","updated_at":"2022-11-23T15:54:53Z","created_at":"2022-11-23T15:52:26Z","creator_user_login":"matths"}
{"number":23165,"comment_id":"1020026964","body":"Hello @m4theushw,\r\n\r\nI don't think that's a correct use of `React.useImperativeHandle`, I tried using `ref={ref}` and childRef was not null inside `onBlur`. This code was already in your example, it was just commented out. I also noticed the call to `inputRef.current.focus()` is unconditional, even when pressing `TAB` to focus from input to button, is this expected? \r\n\r\nI'm just going to attach docs for [React.useImperativeHandle](https://reactjs.org/docs/hooks-reference.html#useimperativehandle), because that's why I think your example does not correctly uses `React.useImperativeHandle`","updated_at":"2022-01-24T12:03:21Z","created_at":"2022-01-24T12:03:21Z","creator_user_login":"sammy-SC"}
{"number":23165,"comment_id":"1020059664","body":"> I don't think that's a correct use of React.useImperativeHandle\r\n\r\n@sammy-SC  What's wrong with it?\r\n\r\n@m4theushw it seems that you can work around this issue if you add an empty `deps` array to `useImperativeHandle`, which you probably should do anyway, if that is possible in your case","updated_at":"2022-01-24T12:48:44Z","created_at":"2022-01-24T12:42:23Z","creator_user_login":"vkurchatkin"}
{"number":23165,"comment_id":"1020064858","body":"Never mind :) I just re-read the question and I misunderstood it. My bad.","updated_at":"2022-01-24T12:49:15Z","created_at":"2022-01-24T12:48:58Z","creator_user_login":"sammy-SC"}
{"number":23165,"comment_id":"1020073728","body":"It looks like a legitimate issue, for whatever reason the order of events is the following:\r\n\r\n - ref is cleared (set to null)\r\n - onBlur is called\r\n - new value for ref is created\r\n - ref is updated with this value\r\n\r\nThe same can be observed with `<div ref={ref} />`, but only if `ref` is a function","updated_at":"2022-01-24T12:59:41Z","created_at":"2022-01-24T12:59:41Z","creator_user_login":"vkurchatkin"}
{"number":23165,"comment_id":"1020121209","body":"> I don't think that's a correct use of React.useImperativeHandle, I tried using ref={ref} and childRef was not null inside onBlur.\r\n\r\n@sammy-SC This ref of this component is not forwarded to a DOM element but to a set of methods to imperatively control it. `React.useImperativeHandle` is necessary in this case.\r\n\r\n> This code was already in your example, it was just commented out.\r\n\r\nYes, I left there to show that the bug seems to occur only with `React.useImperativeHandle` + `onBlur` + `React.useEffect`.\r\n\r\n> it seems that you can work around this issue if you add an empty deps array to useImperativeHandle, which you probably should do anyway, if that is possible in your case\r\n\r\n@vkurchatkin It turns out that we do have the `deps` array. It was only missing in the example. Even though having it, the bug still occurs in the real components that are being simulated in the demo. I'll try to see what is missing in the example to reproduce the bug.\r\n\r\n","updated_at":"2022-01-24T13:51:10Z","created_at":"2022-01-24T13:50:31Z","creator_user_login":"m4theushw"}
{"number":23165,"comment_id":"1020127537","body":"> 3. Observe the console\r\n\r\nCould you specify what the expected and intended output is? \r\n\r\nI tried reproducing the issue described but in my console `childRef.current` is **not** null which seems to match your expectations.\r\n\r\nIf I just recorded a different behavior from the one you observed, please include browser and operating system.\r\n\r\nAlso:\r\nIs there still an issue when using React 18 (`react@next` and `createRoot` usage)?","updated_at":"2022-01-24T13:57:48Z","created_at":"2022-01-24T13:57:48Z","creator_user_login":"eps1lon"}
{"number":23165,"comment_id":"1020760178","body":"I updated the [example](https://codesandbox.io/s/hardcore-pine-u4qn2?file=/src/App.js) to show the bug even if `React.useImperativeHandle` has a deps array. From what I found, the bug happens if on each rerender the ref is invalidated. In the demo, this is achieved by putting the `classes` prop as dependency of `React.useCallback`. This prop has a default value that changes on every render. In our components, we use this prop to allow to pass custom CSS classes to the component so it's normal for it to be an empty object as default. Memoizing this prop could be a solution but I don't know if this is not only a workaround and the bug will persist if the prop also changes during the blur event, invalidating the ref.\r\n\r\n> Could you specify what the expected and intended output is?\r\n\r\n![image](https://user-images.githubusercontent.com/42154031/150902019-684e5e8b-804e-4ad2-a768-bb03b503db14.png)\r\n\r\n@eps1lon Above it's logging when the button receives a blur event. To the right, is the ref value of another component. I want this ref to not be null.\r\n\r\nAs explained in https://github.com/facebook/react/issues/23165#issuecomment-1020073728, before the blur it's cleaning the ref, then calling `onBlur`. It believe it should call `onBlur` before cleaning the ref.\r\n\r\n> Is there still an issue when using React 18 (react@next and createRoot usage)?\r\n\r\nYes, https://codesandbox.io/s/flamboyant-jones-d1mo2?file=/src/App.js","updated_at":"2022-01-25T02:58:09Z","created_at":"2022-01-25T02:58:09Z","creator_user_login":"m4theushw"}
{"number":23165,"comment_id":"1020913870","body":"> I updated the example to show the bug even if React.useImperativeHandle has a deps array. \r\n\r\nDo you remember what you changed? Yesterday I couldn't reproduce it, now I can. \r\n\r\nPlease \"freeze\" codesandboxes once you opened an issue referencing them. Otherwise it's really hard to reproduce issues later on.","updated_at":"2022-01-25T08:13:03Z","created_at":"2022-01-25T08:12:22Z","creator_user_login":"eps1lon"}
{"number":23165,"comment_id":"1020944808","body":"The issue is that before starting to commit new layout effects we cleanup **every** previously committed effect. Then we start committing the effects one by one. Once we reach `<Input />`, we `focus` thus triggering `onBlur`. But by that time we haven't reached `Child` yet.\r\n\r\nSo it breaks your expectation for \r\n\r\n```js\r\n<Input hasFocus={focusIndex === 0} />\r\n<Child ref={childRef} />\r\n```\r\nbut not\r\n```js\r\n<Child ref={childRef} />\r\n<Input hasFocus={focusIndex === 0} />\r\n```\r\n\r\nI'd be surprised if this hasn't come up before. \r\n\r\nBasically we probably want to assign all refs and then run all layout effects. Right now they're intertwined.\r\n\r\nSimplified repro: https://codesandbox.io/s/inconsistent-refs-during-layout-effect-thqeg","updated_at":"2022-01-25T08:59:27Z","created_at":"2022-01-25T08:52:16Z","creator_user_login":"eps1lon"}
{"number":23165,"comment_id":"1023830975","body":"Two things are still unclear to me.\r\n\r\n> Once we reach <Input />, we focus thus triggering onBlur. But by that time we haven't reached Child yet.\r\n\r\n@eps1lon The `onBlur` is called even if `inputRef.current.focus` is not called. But the ref is only `null` when the input is also explicitly focused inside the layout effect. If I log when the effect runs I see that `onBlur` is called after it, that's way the title of this issue. Shouldn't be the inverse: `onBlur` first, then the effect?\r\n\r\n```jsx\r\nReact.useLayoutEffect(() => {\r\n  console.log(\"focusing\");\r\n  inputRef.current.focus();\r\n}, [hasFocus]);\r\n```\r\n\r\nWhy the ref is correctly assigned if, instead of `React.useImperativeHandle`, I forward it to a DOM element?","updated_at":"2022-01-28T02:44:16Z","created_at":"2022-01-28T02:37:46Z","creator_user_login":"m4theushw"}
{"number":23165,"comment_id":"1025247038","body":"> Why the ref is correctly assigned if, instead of React.useImperativeHandle, I forward it to a DOM element?\r\n\r\nBecause when it's forwarded, there's no cleanup of the ref happening during the lifetime of the demo. The DOM ref is attached only once since the DOM node doesn't change. However, with `useImperativeHandle` we have to constantly re-attach the ref since the dependencies change. If you remove dependencies from `useImperativeHandle` you observe the same behavior (with regards to `ref.current`) as with DOM refs.\r\n\r\n> The onBlur is called even if inputRef.current.focus is not called. But the ref is only null when the input is also explicitly focused inside the layout effect.\r\n\r\n`onBlur` being called outside of layout effects is expected due to the DOM markup and user input. The ref is only `null` for the layout effects, because effects are cleaned up once and then are created again one after another. The other `onBlur` call is from user input where no effect cleanup happens.","updated_at":"2022-02-07T14:23:39Z","created_at":"2022-01-30T22:28:42Z","creator_user_login":"eps1lon"}
{"number":23165,"comment_id":"1032697680","body":"I took a look at this and it is a known issue. React traverses the tree in depth-first manner. `useLayoutEffect` is called on a node after all its children have refs assigned, not its siblings. To work around this, access refs in a common parent.","updated_at":"2022-02-08T14:54:54Z","created_at":"2022-02-08T14:54:54Z","creator_user_login":"sammy-SC"}
{"number":22794,"comment_id":"975618944","body":"The decision to change touch/wheel events to passive is explained with a bit of background in #19651 and #19654. I'm not aware of any plans to change this for 18.\r\n\r\n> so my approach is failing because of desync of changes made in active listener vs other props changes.\r\n\r\nCan you clarify what this means?","updated_at":"2021-11-22T15:04:37Z","created_at":"2021-11-22T15:04:37Z","creator_user_login":"bvaughn"}
{"number":22794,"comment_id":"975622323","body":"I have zoom/pan board element in my app.\r\nZoom I implemented in mouse wheel event listener using css transform/scale and pan I implemented utilizing native browser scrollTop \\ scrollLeft assigned via ref.\r\nSo when user scrolls mouse wheel I prevent default to block native scrolling and do scaling instead.\r\nBut to make scale properly I need also to adjust scrolling offset synchronously, to keep screen centered on mouse pointer.\r\nSo in react v17 scrollTop \\ scrollLeft assigned in native mousewheel event listener was in same timeframe as rendering canvas component with new scale value and all worked fine.\r\n\r\nIn v18 render I have two renders instead one, \r\n- first scrolling is applied so the canvas jerks with same scale\r\n- second scale prop change comes to render method and canvas jerks back to correct position because now scroll and scale are matching as expected.\r\n\r\nhere is a piece of my active native mousewheel event listener:\r\n```js\r\n//...\r\n          e.preventDefault();\r\n          let newScale =\r\n            scale + Math.sign(e.deltaY || e.deltaX || e.deltaZ) * -diagramDefaults.wheelStep;\r\n          if (newScale < minScale) newScale = minScale;\r\n          else if (newScale > diagramDefaults.maxScale) newScale = diagramDefaults.maxScale;\r\n          // below scroll changes happen immediately\r\n          containerRef.current.scrollTop =\r\n            ((containerRef.current.scrollTop + e.clientY) * newScale) / scale - e.clientY;\r\n\r\n          containerRef.current.scrollLeft =\r\n            ((containerRef.current.scrollLeft + e.clientX) * newScale) / scale - e.clientX;\r\n\r\n          // ref.current.style.transform = `scale(${newScale})`; // here I tried to dirty fix this issue but with low effect\r\n          // triggered scale prop update comes to render with delay in v18, while in v17 it was in same js event loop cycle.\r\n          onScale(newScale);\r\n//...\r\n```","updated_at":"2021-11-22T15:10:33Z","created_at":"2021-11-22T15:07:57Z","creator_user_login":"YuriGor"}
{"number":22794,"comment_id":"975625702","body":"Gotcha. Thanks for explaining your use case.\r\n\r\nReact DevTools (written with React DOM v18) has some \"wheel\" events code but it is just added in an event so that it can `preventDefault`.\r\n\r\nI'm not really up to date with the latest thinking around this event decision. @gaearon may know more (or it may be that his most recent update– linked above– still reflects our current thinking).","updated_at":"2021-11-22T15:11:14Z","created_at":"2021-11-22T15:11:14Z","creator_user_login":"bvaughn"}
{"number":22794,"comment_id":"975725814","body":"Yes, I remember that discussion, I implemented my current solution inspired by comments there.\r\nIt looks bad and will not work in the future.\r\nHaving something like `onWheelActive` in v18 would be very helpful.\r\nor maybe like this:\r\n```\r\nfunction handleWheel(e){ /*...*/ }\r\nhandleWheel.active = true;\r\n//..\r\n<div onWheel={handleWheel}`/>\r\n```\r\n..so react will just check `active` prop on handler before making listener passive or not.\r\nWe could consistently support this for all events, so setting it to boolean `false` (to distinguish from `undefined`) will make passive listeners even if they are active by default currently.\r\n\r\nBrowser gives this choice, why react takes it away from me, it does not help at all :cry: \r\n@gaearon what do you think?","updated_at":"2021-11-22T16:54:13Z","created_at":"2021-11-22T16:54:13Z","creator_user_login":"YuriGor"}
{"number":22794,"comment_id":"1092971834","body":"What log spam are you seeing?","updated_at":"2022-04-08T15:08:35Z","created_at":"2022-04-08T15:08:35Z","creator_user_login":"gaearon"}
{"number":22794,"comment_id":"1093130532","body":"I think there is a misunderstanding.\r\n\r\nThis issue is about support for marking events as **not passive** because they *are* passive by default.\r\n\r\nThe warning you're showing is the exact opposite. Can you please show which callsite the warning highlights? I have a suspicion that it's either not React, or it's some older version.","updated_at":"2022-04-08T17:46:27Z","created_at":"2022-04-08T17:46:27Z","creator_user_login":"gaearon"}
{"number":22794,"comment_id":"1093144999","body":"You're right, it's not React. It's in fact Kefir (inside `useEffect`).\r\n\r\nReally sorry for wasting your time! Thanks for your work. :)","updated_at":"2022-04-08T18:02:04Z","created_at":"2022-04-08T18:02:04Z","creator_user_login":"cha0s"}
{"number":22794,"comment_id":"1093203962","body":"No problem!","updated_at":"2022-04-08T18:39:55Z","created_at":"2022-04-08T18:39:55Z","creator_user_login":"gaearon"}
{"number":22794,"comment_id":"1367139531","body":"Same issue, I need to call `preventDefault()` inside `onWheel`, `onTouchMove` and `onTouchStart` event handlers to prevent the page from scrolling when user interacts with my component. This does not work because these even handler are passive. Is there an API in React to add a non-passive event handler? (currently I have to attach event handlers manually with `myElement.addEventListener` inside `useEffect`).","updated_at":"2022-12-29T08:10:39Z","created_at":"2022-12-29T08:04:30Z","creator_user_login":"evgenyneu"}
{"number":22794,"comment_id":"1564961231","body":"I am working on a carousel component that sometimes needs to prevent vertical scrolling of the window, and this design decision is apparently going to force me to add the listener manually as well.\r\n\r\nThis is fine, but I do wonder how the React team thinks nobody would ever want to use `preventDefault` on a pointer event.","updated_at":"2023-05-26T21:12:54Z","created_at":"2023-05-26T21:12:54Z","creator_user_login":"minervabot"}
{"number":22794,"comment_id":"1576707317","body":"Any workaround for this? If I want to handle mousewheels in a special way within a component (e.g. in a game or UI with special requirements), then I need to be able to do `event.preventDefault()` or it scrolls the page at the same time.\r\n\r\nWould a safe workaround be to use `useRef` to get a ref for the element, and attach my listener via `ref.current.addEventListener` within a `useEffect` callback? That seems to work but I'm concerned about the possibilty that React may replace the `div` dynamically at some point and my effect won't be re-run so the event listener won't be attached to the new div.","updated_at":"2023-06-05T12:36:51Z","created_at":"2023-06-05T12:36:51Z","creator_user_login":"callumlocke"}
{"number":22794,"comment_id":"1581547476","body":"@callumlocke You probably want to use a ref callback on the JSX element instead passing an actual ref. https://react.dev/reference/react-dom/components/common#ref-callback\r\n\r\nAlso, make sure to clean up the listeners when they are no longer needed. In newer versions of React I think you can return a cleanup function like `useEffect`, but in older versions, you might need to do something else.","updated_at":"2023-06-07T21:40:56Z","created_at":"2023-06-07T21:40:56Z","creator_user_login":"minervabot"}
{"number":18661,"comment_id":"615865042","body":"Haven’t looked at the issue yet (and might not for a bit). But we need a lot stronger fuzz coverage for Suspense, SuspenseList, and priority scheduling. See the recent closed bugs with “concurrent mode” label for examples of how things go wrong and what catches them. If you’d like to contribute, coming up with a stronger fuzz and submitting failing tests would be much appreciated. ","updated_at":"2020-04-18T12:56:19Z","created_at":"2020-04-18T12:56:19Z","creator_user_login":"gaearon"}
{"number":18661,"comment_id":"615865572","body":"For SuspenseList specifically I don’t remember what the semantics for *updating* are. There was something subtle there. So maybe this isn’t a bug per se. ","updated_at":"2020-04-18T12:58:41Z","created_at":"2020-04-18T12:58:41Z","creator_user_login":"gaearon"}
{"number":18661,"comment_id":"615865927","body":"I agree with you this looks weird though. Can you submit an isolated failing case PR for now that’s manually written?\r\n\r\nAnd then add fuzz separately. ","updated_at":"2020-04-18T13:00:29Z","created_at":"2020-04-18T13:00:29Z","creator_user_login":"gaearon"}
{"number":18661,"comment_id":"615868398","body":"I also opened https://github.com/facebook/react/issues/18669 for the broader fuzz question. ","updated_at":"2020-04-18T13:12:13Z","created_at":"2020-04-18T13:12:13Z","creator_user_login":"gaearon"}
{"number":18661,"comment_id":"615933008","body":"> Can you submit an isolated failing case PR for now that’s manually written?\r\n\r\nYes, I will open a specific PR only containing a failing unit test related to this potential bug.\r\n\r\n> And then add fuzz separately.\r\n\r\nAnd then open PRs to discuss fuzzing on SuspenseList. And link them to #18669.\r\n","updated_at":"2020-04-18T19:35:44Z","created_at":"2020-04-18T19:35:44Z","creator_user_login":"dubzzz"}
{"number":18661,"comment_id":"617387066","body":"Updates are indeed strange. Nesting is also strange.\r\n\r\nWhat happens here is that we have two rules that can yield counter intuitive results:\r\n\r\n- A row is not allowed to show content until the previous row is done.\r\n- A row is not allowed to show partial content until the whole row is done.\r\n- Never hide already shown content until it explicitly resuspends, to avoid content disappearing.\r\n\r\nWhat's happening here is that the inner Suspense list is also a row. We follow the rule: \"A row is not allowed to show partial content until the whole row is done.\"\r\n\r\nIt gets extra confusing because A is still showing due to the rule \"Never hide already shown content until it explicitly resuspends, to avoid content disappearing\".\r\n\r\nSo this behavior is \"intentional\" according to the rules.\r\n\r\nWe might have the wrong heuristics but a real world use case would be helpful to inform how they should change.\r\n\r\nWhen you have two Suspense boundaries in a row that aren't wrapped in a SuspenseList there has to be kind of an implicit list there to decide how they should work with regard to each other. You wouldn't want the last one to pop in before the first one. So a good default is \"A row is not allowed to show partial content until the whole row is done\". It is as if the list was wrapped in SuspenseList revealOrder=\"together\". However, I could imagine a rule like if all boundaries are in a single SuspenseList in a row, then that list decides.","updated_at":"2020-04-21T20:09:58Z","created_at":"2020-04-21T20:08:52Z","creator_user_login":"sebmarkbage"}
{"number":18661,"comment_id":"617948956","body":"@sebmarkbage \r\nThanks a lot for the explanation. Now I think I understand part of the behaviour I see:\r\n- We see A in the second render because of the rule: _Never hide already shown content until it explicitly resuspends, to avoid content disappearing_\r\n\r\nThere is still something I don't fully get - Why is the behaviour different if I directly render:\r\n```js\r\nrender(\r\n  <SuspenseList key=\"1\" revealOrder=\"forwards\">\r\n    <SuspenseList key=\"1.1\" revealOrder=\"forwards\">\r\n      <Suspense key=\"1.1.a\" fallback={<div>Loading A</div>}>\r\n        <A />\r\n      </Suspense>\r\n      <Suspense key=\"1.1.b\" fallback={<div>Loading B</div>}>\r\n        <B />\r\n      </Suspense>\r\n      <Suspense key=\"1.1.c\" fallback={<div>Loading C</div>}>\r\n        <C />\r\n      </Suspense>\r\n    </SuspenseList>\r\n  </SuspenseList>\r\n)\r\n```\r\nCase of the issue: https://codesandbox.io/s/mutable-rain-3ikor?file=/src/App.js (click on update)\r\nCase with direct render: https://codesandbox.io/s/trusting-hoover-4cffd?file=/src/App.js\r\n\r\nI mean according to your explanation I'd have expected to see `Loading A / Loading B / Loading C` but I see `A / B / Loading C` instead 🤔 \r\n\r\n(What is a `row`? A `Suspense`? A `SuspenseList`? Both? Something else?)","updated_at":"2020-04-22T18:22:17Z","created_at":"2020-04-22T18:22:17Z","creator_user_login":"dubzzz"}
{"number":18661,"comment_id":"617957639","body":"I think a \"row\" is an immediate child of SuspenseList?","updated_at":"2020-04-22T18:38:27Z","created_at":"2020-04-22T18:38:27Z","creator_user_login":"gaearon"}
{"number":18661,"comment_id":"619263026","body":"@dubzzz In your example I see `A / Loading B / Loading C`.\r\n\r\nThat's because we are not allowed to turn A back into \"Loading A\" because:\r\n_\"Never hide already shown content until it explicitly resuspends, to avoid content disappearing.\"_\r\n\r\nWe're not allowed to show \"B\" because:\r\n_\"A row is not allowed to show partial content until the whole row is done.\"_.\r\nThe row in this case is the whole list because it's a row of the outer list.\r\n\r\nThe solution btw is to wrap it in another Suspense boundary. Because that kind of \"resets\".\r\n\r\n```\r\n<SuspenseList key=\"1\" revealOrder=\"forwards\">\r\n  <Suspense>\r\n    <SuspenseList key=\"1.1\" revealOrder=\"forwards\">\r\n      <Suspense key=\"1.1.a\" fallback={<div>Loading A</div>}>\r\n          <A />\r\n      </Suspense>\r\n      <Suspense key=\"1.1.b\" fallback={<div>Loading B</div>}>\r\n          <B />\r\n      </Suspense>\r\n      <Suspense key=\"1.1.c\" fallback={<div>Loading C</div>}>\r\n          <C />\r\n      </Suspense>\r\n    </SuspenseList>\r\n  </Suspense>\r\n</SuspenseList>\r\n```","updated_at":"2020-04-24T22:23:42Z","created_at":"2020-04-24T22:21:13Z","creator_user_login":"sebmarkbage"}
{"number":18661,"comment_id":"619349452","body":"@sebmarkbage Thanks a lot for this very detailed explanation. I get a better idea of how updates are supposed to be working.\r\n\r\n**Maybe one last question: Do these rules only apply on updates? (not first render)**\r\n\r\nIndeed, they seem not to apply on first render. See the following example not behaving the same way?\r\n\r\n> https://codesandbox.io/s/trusting-hoover-4cffd?file=/src/App.js\r\n\r\n\r\n\r\nIn this second example I directly render: (with A, B already resolved BUT C still pending)\r\n```jsx\r\nrender(\r\n  <SuspenseList key=\"1\" revealOrder=\"forwards\">\r\n    <SuspenseList key=\"1.1\" revealOrder=\"forwards\">\r\n      <Suspense key=\"1.1.a\" fallback={<div>Loading A</div>}>\r\n        <A />\r\n      </Suspense>\r\n      <Suspense key=\"1.1.b\" fallback={<div>Loading B</div>}>\r\n        <B />\r\n      </Suspense>\r\n      <Suspense key=\"1.1.c\" fallback={<div>Loading C</div>}>\r\n        <C />\r\n      </Suspense>\r\n    </SuspenseList>\r\n  </SuspenseList>\r\n)\r\n```\r\n\r\nSo given your explanation I expect to have `Loading A / Loading B / Loading C`.\r\n\r\nIndeed neither A, nor B have already been displayed so \"_Never hide already shown content until it explicitly resuspends, to avoid content disappearing._\" does not apply (first render).\r\n\r\nAdditionally as \"_A row is not allowed to show partial content until the whole row is done._\", nothing from the row should be shown as C is still loading.\r\n\r\nAs a consequence of those two rules I expect to have `Loading A / Loading B / Loading C` but I get `A / B / Loading C`.","updated_at":"2020-04-25T09:22:44Z","created_at":"2020-04-25T09:22:44Z","creator_user_login":"dubzzz"}
{"number":18661,"comment_id":"619401126","body":"Yea that one is kind of surprising to me too.\r\n\r\nRegardless I came across a case where we might want to change the rules like I mentioned above.\r\n\r\nIf you have a row that you want to consistently show in its loading state while popping in additional items one by one before it, then you need an inner list with tail=collapsed/hidden and an outer one which is not collapsed. But we force the last item not to show its fallback.\r\n\r\nHowever if you do that then the inner one isn’t allowed to partially suspend.\r\n\r\nSo regardless I think we need to change this.","updated_at":"2020-04-25T16:02:31Z","created_at":"2020-04-25T16:02:31Z","creator_user_login":"sebmarkbage"}
{"number":18661,"comment_id":"632577008","body":"What is the latest version of concurrent mode?","updated_at":"2020-05-22T08:47:00Z","created_at":"2020-05-22T08:47:00Z","creator_user_login":"hosseinmd"}
{"number":19756,"comment_id":"686292737","body":"> No errors are thrown.\r\n\r\nThe code you post catches this error. Are you saying that the code should not have caught exceptions?\r\n\r\nI don't find this reasonable to expect. React has a couple of instances where it attempts \"something\" and catches a potential error. `react` and `react-dom` catch \"expected errors\" in some places as well.\r\n\r\nYou're essentially demanding that nobody should ever catch errors since that hinders your debug workflow.","updated_at":"2020-09-03T06:51:02Z","created_at":"2020-09-03T06:51:02Z","creator_user_login":"eps1lon"}
{"number":19756,"comment_id":"686307491","body":"The `regeneratorRuntime` should not be `undefined`. I think is a bundling issue.","updated_at":"2020-09-03T07:23:39Z","created_at":"2020-09-03T07:23:39Z","creator_user_login":"leidegre"}
{"number":19756,"comment_id":"686308188","body":"> The `regeneratorRuntime` should not be `undefined`. I think is a bundling issue.\r\n\r\nThen I don't understand why that block would be wrapped in a try-catch","updated_at":"2020-09-03T07:25:13Z","created_at":"2020-09-03T07:25:13Z","creator_user_login":"eps1lon"}
{"number":19756,"comment_id":"686424413","body":"Okay, so, I don't know what target the React Dev Tools have in mind for browser compatibility but the `regeneratorRuntime` is something Babel inject to transpile async/await. It can be disabled if you're okay with supporting more modern browsers primarily. For the React Dev Tools that is. And is is webpack configuration.","updated_at":"2020-09-03T11:28:31Z","created_at":"2020-09-03T11:25:15Z","creator_user_login":"leidegre"}
{"number":19756,"comment_id":"686456387","body":"we can suppress this error, can we?","updated_at":"2020-09-03T12:31:40Z","created_at":"2020-09-03T12:31:40Z","creator_user_login":"kambleaa007"}
{"number":19756,"comment_id":"686611725","body":"DevTools backend uses the `lru-cache` package which uses `yallist` which uses a generator function.\r\n\r\nContributions would be welcome if you'd like to change the Babel config for the extension (and ensure that things still work).","updated_at":"2020-09-03T16:35:09Z","created_at":"2020-09-03T16:34:34Z","creator_user_login":"bvaughn"}
{"number":19756,"comment_id":"686897617","body":"I like to give a try, Fingers crossed\r\n​​​​","updated_at":"2020-09-04T04:29:01Z","created_at":"2020-09-04T04:29:01Z","creator_user_login":"kambleaa007"}
{"number":19756,"comment_id":"686935010","body":"`react-devtools-extension` has `webpack.backend.js` configured   \r\n```\r\noutput: {\r\n    path: __dirname + '/build',\r\n    filename: 'react_devtools_backend.js',\r\n  },\r\n\r\n```","updated_at":"2020-09-04T06:14:02Z","created_at":"2020-09-04T06:13:37Z","creator_user_login":"kambleaa007"}
{"number":19756,"comment_id":"686947321","body":"for me its not coming in even catch block\r\n\r\n`try {\r\n  // add if support for Symbol.iterator is present\r\n  __webpack_require__(23)(Yallist);\r\n} catch (er) {}`","updated_at":"2020-09-04T06:41:16Z","created_at":"2020-09-04T06:41:16Z","creator_user_login":"kambleaa007"}
{"number":19756,"comment_id":"687074448","body":"> for me its not coming in even catch block\r\n> \r\n> `try { // add if support for Symbol.iterator is present __webpack_require__(23)(Yallist); } catch (er) {}`\r\n\r\nNote that you have to enable \"Pause on caught exceptions\" in the script debugger.","updated_at":"2020-09-04T10:55:31Z","created_at":"2020-09-04T10:55:31Z","creator_user_login":"leidegre"}
{"number":19756,"comment_id":"687074711","body":"> DevTools backend uses the `lru-cache` package which uses `yallist` which uses a generator function.\r\n> \r\n> Contributions would be welcome if you'd like to change the Babel config for the extension (and ensure that things still work).\r\n\r\nWhat's the min spec? Is okay to assume a modern browser (with built in support for async/await)?","updated_at":"2020-09-04T10:56:11Z","created_at":"2020-09-04T10:56:11Z","creator_user_login":"leidegre"}
{"number":19756,"comment_id":"687077637","body":"well, im getting it now,\r\n![image](https://user-images.githubusercontent.com/19818679/92232550-5715b180-eecc-11ea-88f0-6a7344569cfd.png)\r\n\r\nfor me its at,\r\ninjectGlobalHook.js file,\r\nchrome-extension://jjeclbmchofefamidmcjnkgaddnpnngm/build/injectGlobalHook.js\r\n```\r\nmodule.exports = function (Yallist) {\r\n  Yallist.prototype[Symbol.iterator] = /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\r\n    var walker;\r\n```\r\nat one place e.stack getting undefined and keep throwing exceptions...\r\n\r\n","updated_at":"2020-09-04T11:12:10Z","created_at":"2020-09-04T11:03:31Z","creator_user_login":"kambleaa007"}
{"number":19756,"comment_id":"687121647","body":"> What's the min spec? Is okay to assume a modern browser (with built in support for async/await)?\r\n\r\nYes, async/await and generators are supported by all browsers this extension targets (and all semi recent versions of Node that the standalone version targets).","updated_at":"2020-09-04T12:46:53Z","created_at":"2020-09-04T12:46:53Z","creator_user_login":"bvaughn"}
{"number":19756,"comment_id":"687559054","body":"After some digging around it looks to me that the min spec is actually given by the manifest files in `packages\\react-devtools-extensions/chrome|edge|firefox/manifest.json` which is currently sitting at 49 for Chrome. I think async was added somewhere around [55](https://caniuse.com/#search=async)\r\n\r\nBut... there are additional targets to consider.\r\n\r\n\\[packages\\react-devtools-shared\\babel.config.js\\]:\r\n\r\n```js\r\n  if (isTest) {\r\n    targets.node = 'current';\r\n  } else {\r\n    targets.chrome = minChromeVersion.toString();\r\n    targets.firefox = minFirefoxVersion.toString();\r\n\r\n    // This targets RN/Hermes.\r\n    targets.ie = '11';\r\n  }\r\n```\r\n\r\nIf the lowest common denominator is going to be IE11 due to Hermes then I don't think messing with the targets will help.\r\n\r\nIt is possible to do things like `\"exclude\": [\"transform-regenerator\"]`.\r\n\r\nSo, this:\r\n\r\n```js\r\nreturn {\r\n    plugins,\r\n    presets: [\r\n      ['@babel/preset-env', {targets}],\r\n      '@babel/preset-react',\r\n      '@babel/preset-flow',\r\n    ],\r\n  };\r\n```\r\n\r\nChanges into...\r\n\r\n```js\r\nreturn {\r\n    plugins,\r\n    presets: [\r\n      ['@babel/preset-env', {targets, exclude: ['transform-regenerator']}],\r\n      '@babel/preset-react',\r\n      '@babel/preset-flow',\r\n    ],\r\n  };\r\n```\r\n\r\nBut now I'm uncertain what's going to happen if this code really needs to include a regenerator runtime for Hermes support.\r\n","updated_at":"2020-09-05T06:17:12Z","created_at":"2020-09-05T06:16:13Z","creator_user_login":"leidegre"}
{"number":19756,"comment_id":"688881208","body":"> After some digging around it looks to me that the min spec is actually given by the manifest files in `packages\\react-devtools-extensions/chrome|edge|firefox/manifest.json` which is currently sitting at 49 for Chrome.\r\n\r\nTrue, although I think this is because we *could* target that min spec, not because we actually need to (or even care to).\r\n\r\nThe question about Hermes is a good one though!\r\n\r\nWe could fork the Babel configs so that the inline and the browser extension packages inject the exclude.","updated_at":"2020-09-08T13:39:38Z","created_at":"2020-09-08T13:39:38Z","creator_user_login":"bvaughn"}
{"number":19756,"comment_id":"751246970","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:46Z","created_at":"2020-12-25T13:07:46Z","creator_user_login":"stale[bot]"}
{"number":19756,"comment_id":"786584497","body":"React Developer Tools 4.10.1 (12/4/2020) — still reproducible\r\n\r\nCould it be possible to do conditional check on babel internals to avoid try/catch, e.g.\r\n```\r\nif (regeneratorRuntime && Symbol.iterator) {\r\n  require('Yallist');\r\n}\r\n```\r\n?","updated_at":"2021-02-26T11:16:37Z","created_at":"2021-02-26T11:16:37Z","creator_user_login":"erictheswift"}
{"number":26998,"comment_id":"1605472543","body":"My current workaround is, add the `key` to the `<input />`:\r\n\r\n```tsx\r\n<input\r\n  type=\"search\"\r\n  key={defaultValue}\r\n  defaultValue={defaultValue}\r\n/>\r\n```\r\n\r\nThis can make React reset `<input />` when the `defaultValue` changes, and then `X` button can correctly trigger `onChange`.","updated_at":"2023-06-24T13:41:29Z","created_at":"2023-06-24T13:07:02Z","creator_user_login":"SukkaW"}
{"number":26998,"comment_id":"1606952474","body":"https://stackoverflow.com/questions/30727837/react-change-input-defaultvalue-by-passing-props","updated_at":"2023-06-26T08:20:31Z","created_at":"2023-06-26T08:20:31Z","creator_user_login":"nusr"}
{"number":26998,"comment_id":"1607081441","body":"> https://stackoverflow.com/questions/30727837/react-change-input-defaultvalue-by-passing-props\r\n\r\nIt is not related at all.\r\n\r\nThe issue **is not** the React DOM can't apply \"asynchronous\" `defaultValue`. As you can see in my reproduction, though the new `defaultValue` is only loaded after more than 1 second, React DOM still correctly applies it.\r\n\r\nThe issue is that after React DOM applies `defaultValue`, \"reset\" the input won't trigger `onChange`.","updated_at":"2023-06-26T09:34:12Z","created_at":"2023-06-26T09:34:12Z","creator_user_login":"SukkaW"}
{"number":26998,"comment_id":"1607607356","body":"[defaultValue is uncontrolled inputs](https://zh-hans.react.dev/reference/react-dom/components/input).\r\nConsider using value instead, it will become normal.","updated_at":"2023-06-26T14:26:58Z","created_at":"2023-06-26T14:26:58Z","creator_user_login":"zhenmang"}
{"number":26998,"comment_id":"1608591479","body":"> [defaultValue is uncontrolled inputs](https://zh-hans.react.dev/reference/react-dom/components/input). Consider using value instead, it will become normal.\r\n\r\nI AM creating uncontrolled input. That's why I need the `onChange` to fire normally even with dynamic `defaultValue`.","updated_at":"2023-06-27T02:01:03Z","created_at":"2023-06-27T02:01:03Z","creator_user_login":"SukkaW"}
{"number":26998,"comment_id":"1612002706","body":"The problem is not related to the search input or its clear button but can be reproduced with a normal text input by selecting the whole text and clearing it at once.\r\n\r\n---\r\n\r\nReact tracks the value of the input and emits the onChange event only if the value has actually changed. In this scenario, React initially sets the `defaultValue` but not the `value` property as it's already empty. When the default value is changed, React updates the `defaultValue` but not the `value` property (which is correct) - the value tracker doesn't notice that the value of the input has changed (but it has changed because the value has not yet been set so the browser uses the new defaultValue). When you now clear the input, both, the previous value (hold by the value tracker) and the new value of the input, are an empty string. For React it looks like nothing has changed and it doesn't emit the event.\r\n\r\nIf a non-empty string is initially provided as default value (and later updated), React initially sets both, the `defaultValue` and the `value` property. The latter is captured by the value tracker and when clearing the input it detects an actual change and emits the event.\r\n\r\nMaybe React could update the tracker value (to the current node value) when it updates the `defaultValue` property. This way the tracker would be aware of the new value.","updated_at":"2023-06-28T19:41:11Z","created_at":"2023-06-28T19:41:11Z","creator_user_login":"rothsandro"}
{"number":26998,"comment_id":"1612371158","body":"> The problem is not related to the search input or its clear button but can be reproduced with a normal text input by selecting the whole text and clearing it at once ... React tracks the value of the input and emits the onChange event only if the value has actually changed ... This way the tracker would be aware of the new value.\r\n\r\nThanks for your detailed explanation! \r\n","updated_at":"2023-06-29T03:07:38Z","created_at":"2023-06-29T03:07:38Z","creator_user_login":"SukkaW"}
{"number":26998,"comment_id":"1627310882","body":"While going through this thread, I opened up react code for the first time.\r\nhttps://github.com/facebook/react/blob/8ec962d825fc948ffda5ab863e639cd4158935ba/packages/react-dom-bindings/src/client/ReactDOMInput.js\r\n\r\nWhy do function parameters have data types written along side them even though it is a .js file?\r\n\r\n ","updated_at":"2023-07-08T13:59:30Z","created_at":"2023-07-08T13:58:58Z","creator_user_login":"parth-bhadra"}
{"number":26998,"comment_id":"1627315562","body":"> While going through this thread, I opened up react code for the first time. https://github.com/facebook/react/blob/8ec962d825fc948ffda5ab863e639cd4158935ba/packages/react-dom-bindings/src/client/ReactDOMInput.js\r\n> \r\n> Why do function parameters have data types written along side them even though it is a .js file?\r\n\r\nOff-topic though. Let me answer this for you, the React source codes are written in [flow](https://github.com/facebook/flow).","updated_at":"2023-07-08T14:05:51Z","created_at":"2023-07-08T14:03:24Z","creator_user_login":"SukkaW"}
{"number":14540,"comment_id":"572915939","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-10T07:53:34Z","created_at":"2020-01-10T07:53:34Z","creator_user_login":"stale[bot]"}
{"number":14540,"comment_id":"573392837","body":"With the React.Flare deprecation this issue is still very valuable.","updated_at":"2020-01-12T08:20:13Z","created_at":"2020-01-12T08:20:13Z","creator_user_login":"theKashey"}
{"number":14540,"comment_id":"612374918","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-04-11T09:17:02Z","created_at":"2020-04-11T09:17:02Z","creator_user_login":"stale[bot]"}
{"number":14540,"comment_id":"612391583","body":"Bump","updated_at":"2020-04-11T10:49:21Z","created_at":"2020-04-11T10:49:21Z","creator_user_login":"diegohaz"}
{"number":14540,"comment_id":"656968816","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-07-11T02:16:57Z","created_at":"2020-07-11T02:16:57Z","creator_user_login":"stale[bot]"}
{"number":14540,"comment_id":"656985299","body":"Sorry StaleBot, but we need some solution.","updated_at":"2020-07-11T04:22:43Z","created_at":"2020-07-11T04:22:34Z","creator_user_login":"theKashey"}
{"number":14540,"comment_id":"706813353","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-10-12T01:56:52Z","created_at":"2020-10-12T01:56:52Z","creator_user_login":"stale[bot]"}
{"number":14540,"comment_id":"751260784","body":"Closing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please create a new issue with up-to-date information. Thank you!\n","updated_at":"2020-12-25T15:06:37Z","created_at":"2020-12-25T15:06:37Z","creator_user_login":"stale[bot]"}
{"number":14540,"comment_id":"1114341641","body":"Bump. It would be great to have a solution to this.","updated_at":"2022-05-01T21:31:43Z","created_at":"2022-05-01T21:31:43Z","creator_user_login":"kalda341"}
{"number":14540,"comment_id":"1114554964","body":"I think this is still relevant so re-opening. \r\n\r\nI've seen the recommendation to use `Node.contains` a couple of times and this recommendation is problematic since in the DOM we (always?) have the guarantee that a bubbled event means that the `event.currentTarget.contains(event.target)`. But this guarantee is definitely broken if we have a `ReactDOM.createPortal` in between. \r\n\r\nWould be interesting to check if `event.currentTarget.contains(event.target)` is true for all events (e.g. what happens with submit FormEvent in `<input type=\"submit\" form=\"my-form\"><form id=\"my-form\" onSubmit={handleSubmit} />`).\r\n\r\nSince we don't have the tools to introspect the React tree (and I think it was made clear that we never will have), we currently don't truly now if the currentTarget of a React event contains the target of a React event. This is relevant for focus-trapping but I think so far we've been able to fix it in userland?\r\n\r\nSo it would be nice to create a comprehensive list of `Node.contains` use cases, how `ReactDOM.createPortal` breaks this, and if and how these work around `ReactDOM.createPortal` existence. Ideally with an eye on how DOM related \"portaling\" APIs affect these scenarios (e.g. [`form`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#form), [`aria-owns`](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-owns) and others if there are some)","updated_at":"2022-05-02T07:02:32Z","created_at":"2022-05-02T07:02:32Z","creator_user_login":"eps1lon"}
{"number":14540,"comment_id":"1352292533","body":"Bump. We have the same issue and it's really annoying.\r\n\r\nNested portals are a pretty reasonable thing, and there is no way to tell if an event originated from a nested child portal.\r\n\r\nFor example, a modal (portal) with a dropdown (portal) inside it. If I click outside the modal, both should close. If I click the inner dropdown, the outer modal should stay open. However, the outer modal thinks the inner click is an external dom node, so it closes. \r\n\r\nWe are solving this by adding a Context wrapper around our portals which passes down a setter that each child portal can call in order to save its node in the parent. It works, but this feels really silly since React KNOWS that these are parent/child in the virtual dom. Being locked out of the virtual dom's knowledge feels really bad here.\r\n\r\nEdit: And before anyone says \"don't use portals,\" please trust that we have good reasons for this and portals are the best solution for our use case.","updated_at":"2022-12-14T22:19:22Z","created_at":"2022-12-14T22:17:14Z","creator_user_login":"eseakin"}
{"number":14540,"comment_id":"1353837412","body":"I also ended up managing portals from the user space via ContextApi/subscriptions, but while such solution works perfectly - it works perfectly only for me and cannot be _shared_ with some third-party library as it is \"not standard\".","updated_at":"2022-12-15T23:18:34Z","created_at":"2022-12-15T23:18:34Z","creator_user_login":"theKashey"}
{"number":15739,"comment_id":"498614996","body":"Uncontrolled value saved on the window, whereas the controlled input value saved in their state.\r\nOnce the state has gone their value gone as well.","updated_at":"2019-06-04T10:27:15Z","created_at":"2019-06-04T10:27:15Z","creator_user_login":"anupmishra203"}
{"number":15739,"comment_id":"572915975","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-10T07:53:39Z","created_at":"2020-01-10T07:53:39Z","creator_user_login":"stale[bot]"}
{"number":15739,"comment_id":"575518433","body":"Closing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please create a new issue with up-to-date information. Thank you!\n","updated_at":"2020-01-17T07:59:47Z","created_at":"2020-01-17T07:59:47Z","creator_user_login":"stale[bot]"}
{"number":15739,"comment_id":"607525578","body":"Oh wow. Good find. I guess this is also due to attribute syncing. We're going to fix this eventually but it would be a breaking change so for now let's keep it open.","updated_at":"2020-04-01T22:42:36Z","created_at":"2020-04-01T22:42:36Z","creator_user_login":"gaearon"}
{"number":15739,"comment_id":"770188990","body":"@gaearon: Are there any plans to fix this? It almost 2 years since the report and at least in my eyes this is a huge UX bug. \r\n\r\nThis bug affects other frameworks (antd, material UI):\r\n* mui-org/material-ui#16943\r\n* ant-design/ant-design#21232\r\n\r\nI'm also not getting it, why this one should be a breaking change.\r\n\r\nIf **autoComplete is \"on\"** react could to this **setAttribute('value', '');** under the hood and it would be fine.\r\nOr are there any side effects if you are doing this?","updated_at":"2021-01-30T10:18:41Z","created_at":"2021-01-30T10:18:41Z","creator_user_login":"Hadsch"}
{"number":15739,"comment_id":"834479448","body":"Same problem here","updated_at":"2021-05-07T14:51:57Z","created_at":"2021-05-07T14:51:57Z","creator_user_login":"hejtmii"}
{"number":15739,"comment_id":"934391038","body":"autoComplete is Not working for controlled Input.\r\n\r\nhttps://jsfiddle.net/bootleq/hos4r6qd/","updated_at":"2021-10-05T13:01:59Z","created_at":"2021-10-05T13:01:59Z","creator_user_login":"snehabn92"}
{"number":15739,"comment_id":"938488971","body":"This also affects Formik performance, which is very bad\r\nhttps://github.com/formium/formik/issues/3165","updated_at":"2021-10-08T09:22:57Z","created_at":"2021-10-08T09:22:57Z","creator_user_login":"handhikadj"}
{"number":15739,"comment_id":"1009919769","body":"I am not even using controlled input. Still I am facing this issue when using Firefox. I am just using input type text and the fetching the value using id on the time of submit form. Still it won't show the auto-fill suggestion box.\r\nAnyone has any idea?\r\nI have already kept \"Remember search and form history\" in Firefox settings checked.","updated_at":"2022-01-11T12:35:12Z","created_at":"2022-01-11T12:30:56Z","creator_user_login":"TejSanura"}
{"number":15739,"comment_id":"1009938059","body":"Just to mention that there is a \"workaround\" (=wild hack) we used successfully for more than a year now:\r\nhttps://github.com/facebook/react/issues/18986#issuecomment-636354428","updated_at":"2022-01-11T12:56:31Z","created_at":"2022-01-11T12:56:03Z","creator_user_login":"ahoisl"}
{"number":15739,"comment_id":"1215045384","body":"There actually has been some activity on the Firefox side to solve this: https://bugzilla.mozilla.org/show_bug.cgi?id=1642570\r\n\r\nIt's already working in Firefox Nightly for me and seems to be scheduled for release in version 105, [2022-09-20](https://wiki.mozilla.org/Release_Management/Calendar)\r\n","updated_at":"2022-08-15T13:58:42Z","created_at":"2022-08-15T13:58:42Z","creator_user_login":"lindskogen"}
{"number":15739,"comment_id":"1300282496","body":"Tested it right now in Firefox 106.0.3 and it seems to work!","updated_at":"2022-11-02T12:24:40Z","created_at":"2022-11-02T12:24:40Z","creator_user_login":"lindskogen"}
{"number":15171,"comment_id":"475343639","body":"Do you want to try to fix it?","updated_at":"2019-03-21T18:10:00Z","created_at":"2019-03-21T18:10:00Z","creator_user_login":"gaearon"}
{"number":15171,"comment_id":"475347933","body":"@gaearon sure! :) Already dove into it a bit","updated_at":"2019-03-21T18:21:55Z","created_at":"2019-03-21T18:21:39Z","creator_user_login":"petetnt"}
{"number":15171,"comment_id":"572957109","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-10T09:52:42Z","created_at":"2020-01-10T09:52:42Z","creator_user_login":"stale[bot]"}
{"number":15171,"comment_id":"575557465","body":"Closing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please create a new issue with up-to-date information. Thank you!\n","updated_at":"2020-01-17T09:59:03Z","created_at":"2020-01-17T09:59:03Z","creator_user_login":"stale[bot]"}
{"number":15171,"comment_id":"607530317","body":"Still relevant?","updated_at":"2020-04-01T22:58:31Z","created_at":"2020-04-01T22:58:31Z","creator_user_login":"gaearon"}
{"number":15171,"comment_id":"615120071","body":"I think i may have ran into this today. Haven't done that much research, and i'm pretty new in the react world. Is there any kind of work around?","updated_at":"2020-04-17T08:36:44Z","created_at":"2020-04-17T08:36:44Z","creator_user_login":"olaj"}
{"number":15171,"comment_id":"615120959","body":"Sorry, I forgot totally about this...\r\n\r\n","updated_at":"2020-04-17T08:38:38Z","created_at":"2020-04-17T08:38:38Z","creator_user_login":"petetnt"}
{"number":15171,"comment_id":"615121712","body":"Hmm ... but im not sure it was this for me. Or it seemed that i tried to render a `<p>` inside a` <p>` and when i removed the parent` <p>` it seems to work. Not sure if that is expected or not.","updated_at":"2020-04-17T08:42:59Z","created_at":"2020-04-17T08:40:12Z","creator_user_login":"olaj"}
{"number":15171,"comment_id":"687408271","body":"I think I may be hitting this issue with a Gatsby site. I will see if I can create a streamlined version of the site that can reliably recreate the issue and I will share that as a debugging tool.\r\n\r\nReact v16.13.1\r\nReact-DOM v16.13.1\r\n\r\nEdit: What @olaj mentioned seems to fix the issue in my case","updated_at":"2020-09-04T21:52:27Z","created_at":"2020-09-04T21:51:03Z","creator_user_login":"jbutz"}
{"number":15171,"comment_id":"823359835","body":"I hit this issue today and here's a quick [repro](https://codesandbox.io/s/exciting-browser-1s8u0?file=/src/App.js). \r\n\r\nI'm not completely sure about what the desired behavior should be here, as nesting paragraph elements isn't compliant with HTML5's spec.  \r\n\r\nUsing straight JSX produces the \"desired\" output, even though incorrect\r\n![image](https://user-images.githubusercontent.com/56842442/115421286-d0e37c80-a1c9-11eb-855b-e45674257526.png)\r\n\r\n\r\nOn the other hand, using `dangerouslySetInnerHTML` automatically closes nested paragraph elements\r\n![image](https://user-images.githubusercontent.com/56842442/115421425-eeb0e180-a1c9-11eb-9fed-0d1e75cdcdbb.png)\r\n","updated_at":"2021-04-20T15:18:27Z","created_at":"2021-04-20T15:18:27Z","creator_user_login":"celso-vts"}
{"number":15171,"comment_id":"1065294907","body":"> Hmm ... but im not sure it was this for me. Or it seemed that i tried to render a **<p>** inside a  **<p>** and when i removed the parent` <p>` it seems to work. Not sure if that is expected or not.\r\n\r\nIt works for me, i was doing the same thing. This error was in my console as well:\r\n![image](https://user-images.githubusercontent.com/48016312/157910530-23551a08-9d13-4f2c-97b2-52041ea5065e.png)\r\n","updated_at":"2022-03-11T16:48:58Z","created_at":"2022-03-11T16:48:58Z","creator_user_login":"arthurpolon"}
{"number":15171,"comment_id":"1082481011","body":"Could somebody please provide a sandbox showing the issue?","updated_at":"2022-03-30T00:02:16Z","created_at":"2022-03-30T00:02:16Z","creator_user_login":"gaearon"}
{"number":15171,"comment_id":"1082481485","body":"Re: https://github.com/facebook/react/issues/15171#issuecomment-823359835\r\n\r\nThere is a console error explaining that you're rendering invalid markup:\r\n\r\n<img width=\"727\" alt=\"Screenshot 2022-03-30 at 01 02 57\" src=\"https://user-images.githubusercontent.com/810438/160725413-3e4d8533-005c-4634-96fd-a022b6de7e6b.png\">\r\n\r\nThat's why it doesn't work.\r\n","updated_at":"2022-03-30T00:03:10Z","created_at":"2022-03-30T00:03:10Z","creator_user_login":"gaearon"}
{"number":14356,"comment_id":"442836918","body":"@Bastian thanks for reporting. I can reproduce this behavior as well. Does not seem to happen on a native `email` field: https://codesandbox.io/s/mz5669rwyy\r\n\r\nI think the next step is to find out which DOM APIs we're calling to cause this invalid state and see if this is a Chrome bug or something that we're doing wrong. Do you want to look into this? 🙂 ","updated_at":"2018-11-29T13:40:14Z","created_at":"2018-11-29T13:40:14Z","creator_user_login":"philipp-spiess"}
{"number":14356,"comment_id":"442840618","body":"Thanks for confirming the bug. I'll look into it :)","updated_at":"2018-11-29T13:52:09Z","created_at":"2018-11-29T13:52:09Z","creator_user_login":"Bastian"}
{"number":14356,"comment_id":"442862100","body":"After some investigation, I don't think it is possible to fix this on React's side.\r\nCalling `element.value` already converts the `ß` to `ss` and there seems to be no way to get the \"real\" content of the input field. So using this value to append new letters is causing the `ß` to be replaced by `ss`.\r\n\r\nSee https://codesandbox.io/s/ovv5zkzm05","updated_at":"2018-11-29T14:56:31Z","created_at":"2018-11-29T14:54:20Z","creator_user_login":"Bastian"}
{"number":14356,"comment_id":"443133543","body":"I found ß will convert to ss after 'someword@' in Chrome 70.0.3538.110 macOS 10.13.6 (17G65)","updated_at":"2018-11-30T08:47:43Z","created_at":"2018-11-30T08:47:43Z","creator_user_login":"xuzhanhh"}
{"number":14356,"comment_id":"443458926","body":"@Bastian Thanks for checking this out 👍 \r\n\r\nIt seems like the conversion on `element.value` is the spec-conform behavior: The `.value` of an `email` input should be [punycoded](https://en.wikipedia.org/wiki/Punycode):\r\n\r\n> User agents should convert punycode in the domain labels of the value to Internationalized Domain Names in the display, and vice versa.\r\n\r\nSee [this Chrome issue](https://bugs.chromium.org/p/chromium/issues/detail?id=410937) and [the HTML spec](https://www.w3.org/TR/html52/sec-forms.html#email-state-typeemail).\r\n\r\nThis appears to only be the case in Chrome though, the value won’t be punycoded in Safari, Firefox, and Edge. \r\n\r\nOne interesting aspect here is the _\"vice versa\"_. Indeed, setting the `.value` to something like `foo@xn--c1yn36f.com` will appear as `foo@點看.com` in the input field in Chrome.\r\n\r\nI found bugs with that as well. E.g. `foo@xn--ls8h.com` won’t appear as `foo@💩.com` although the `.value` of the latter will be puny-coded. This results in the same bug that you’re seeing for `ß` in React controlled inputs.\r\n\r\nMaybe this is fixable on our side. Check out this example which sets `input.value` to `input.value` and doesn’t cause the `ß` to be converted (although the `.value` will report it punycoded): https://codesandbox.io/s/7wq72ol78q\r\n\r\nI’m not super familiar with the code for controlled inputs but a next step here would be to step through the instructions and find out what we do that causes the input to break. Maybe this won’t be necessary when some [React Fire](https://github.com/facebook/react/issues/13525) changes are in as we’re probably going to make controlled components a lot easier.\r\n","updated_at":"2018-12-01T21:12:44Z","created_at":"2018-12-01T21:12:44Z","creator_user_login":"philipp-spiess"}
{"number":14356,"comment_id":"443495724","body":"> Maybe this is fixable on our side. Check out this example which sets `input.value` to `input.value` and doesn’t cause the ß to be converted (although the `.value` will report it punycoded)\r\n\r\nYes, but as soon as you try to alter the input in any way, you run into problems. Just adding `toLowerCase()` will already cause issues again. Even tho I think this time it's a Chrome-Bug:\r\nhttps://codesandbox.io/s/p73737253j\r\n\r\nMy only modification was to add `.toLowerCase()` and if you try to type something like `foo@TEßT.DE`, it will behave very weird and end as `foo@teßt.DE`:\r\n![](https://i.imgur.com/pcSQQLF.gif)\r\nAlso notice that the `T` is upper case first and then will be converted to lower case after typing the point.","updated_at":"2018-12-02T10:05:21Z","created_at":"2018-12-02T10:05:21Z","creator_user_login":"Bastian"}
{"number":14356,"comment_id":"446255550","body":"Seems to be checking if the format is valid as an email address and doing the unicode normalisation *only* if so.\r\n\r\nWhen the value does correctly validate (e.g. `xxx@yyy` or `xxx@yyy.zz` but not `xxx@yyy.`), you get the disparity between normalised value and non-normalised display and thus lose the lowercasing effect on the display, which is why `xxx@yyy` works (no unicode to normalise, so no disparity, so lowercasing works), xxx@yyyßZZZ doesn't (unicode is normalised, creating a display disparity, so the lowercasing doesn't show) but then as soon as you add a `.` at the end, the email is invalid so no unicode normalisation happens, so the lowercasing suddenly works as there's no disparity. Interesting case!","updated_at":"2018-12-11T15:59:57Z","created_at":"2018-12-11T15:59:57Z","creator_user_login":"alexrussell"}
{"number":14356,"comment_id":"646135754","body":"I made a fix in chrome which should fix this problem which should be released in chrome 85, try it out on canary: https://www.google.com/chrome/canary/","updated_at":"2020-06-18T16:16:42Z","created_at":"2020-06-18T16:16:42Z","creator_user_login":"josepharhar"}
{"number":14356,"comment_id":"646268089","body":"Thank you very much!\r\n\r\nI can confirm that this fixes the bug. Here's an updated codesandbox, as the old one seems to be broken: https://codesandbox.io/s/sad-fog-2kxj5\r\n\r\nHowever, I still get a bug (less severe) when I try to modify the input. This happens when I try to modify the input (in this example `.toLowerCase()`):\r\n![email-input](https://user-images.githubusercontent.com/5033001/85064407-d0461800-b1ab-11ea-978c-c02dd5a0a208.gif)\r\nhttps://codesandbox.io/s/stupefied-architecture-6sz6l\r\nI was typing the following text on my keyboard: `FOO@TEßT.DE ABC`\r\n\r\nThis has nothing to do with React though and also happens with plain Javascript (see codesandbox https://codesandbox.io/s/p73737253j from https://github.com/facebook/react/issues/14356#issuecomment-443495724).","updated_at":"2020-06-18T19:51:13Z","created_at":"2020-06-18T19:41:07Z","creator_user_login":"Bastian"}
{"number":13651,"comment_id":"421368024","body":"@nhunzaker What are your thoughts on this? I'm not actually sure this is a bug.","updated_at":"2018-09-14T14:01:42Z","created_at":"2018-09-14T14:01:42Z","creator_user_login":"gaearon"}
{"number":13651,"comment_id":"421374918","body":"I guess this is the default behaviour of the input element, not related to React, properly.\r\n\r\nhttps://www.w3.org/TR/2010/WD-html-markup-20101019/input.number.html#input.number.attrs.value","updated_at":"2018-09-14T14:24:41Z","created_at":"2018-09-14T14:24:41Z","creator_user_login":"oirodolfo"}
{"number":13651,"comment_id":"421377570","body":"Assuming I'm thinking about this correctly, it looks like the issue is that the value _attribute_ is reporting as \"01\" when it should be aligned with state.\r\n\r\nThis is happening because the value attribute gets synced based on `node.value` here:\r\n\r\nhttps://github.com/facebook/react/blob/8bc0bcabe7505a991e9e40a4b8ad1d3eb9b5723f/packages/react-dom/src/events/ChangeEventPlugin.js#L242-L245 \r\n\r\nI think this is a bug. To fix it, we'd need to figure out the best way to get `props.value` at this point. We'd also need to make sure it worked if the value was set in an event callback on blur.","updated_at":"2018-09-14T14:48:50Z","created_at":"2018-09-14T14:33:13Z","creator_user_login":"nhunzaker"}
{"number":13651,"comment_id":"421379977","body":"If this is in regard to the value property (what the user sees when they type \"01\"):\r\n\r\nReact does not strictly modify the value property on number inputs because it's tricky. User input can be in progress, and different character strings can represent the same value, or be important as a user is typing. It's too easy for React to accidentally take a way a user's input or change it in an unexpected way.\r\n\r\nFor example:\r\n\r\n1. A user starts to type 1.001\r\n2. They make it to 1.\r\n3. The user types 0\r\n4. Converting \"1.0\" to a number turns it into \"1\"\r\n5. The user's input is lost as the input reverts back to \"1\"","updated_at":"2018-09-14T14:40:57Z","created_at":"2018-09-14T14:40:57Z","creator_user_login":"nhunzaker"}
{"number":13651,"comment_id":"573006300","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-10T11:52:44Z","created_at":"2020-01-10T11:52:44Z","creator_user_login":"stale[bot]"}
{"number":13651,"comment_id":"575956924","body":"Closing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please create a new issue with up-to-date information. Thank you!\n","updated_at":"2020-01-19T01:48:36Z","created_at":"2020-01-19T01:48:36Z","creator_user_login":"stale[bot]"}
{"number":13651,"comment_id":"727243929","body":"> I guess this is the default behaviour of the input element, not related to React, properly.\r\n> \r\n> https://www.w3.org/TR/2010/WD-html-markup-20101019/input.number.html#input.number.attrs.value\r\n\r\nI've just run into this problem. \r\nCan you clarify to me why this works with native js and HTML? https://codesandbox.io/s/ecstatic-rosalind-h3u09\r\n","updated_at":"2020-11-14T18:03:39Z","created_at":"2020-11-14T18:03:39Z","creator_user_login":"mallchel"}
{"number":13651,"comment_id":"727244841","body":"Worth to notice that I can around this weird situation by wrapping ```parseInt(e.target.value, 10)``` with String(), and then 01 will update on 1\r\nhttps://codesandbox.io/s/magical-snow-eih6o","updated_at":"2020-11-14T18:10:13Z","created_at":"2020-11-14T18:10:13Z","creator_user_login":"mallchel"}
{"number":13651,"comment_id":"923977878","body":"@gaearon I think this issue is same with [this issue](https://github.com/facebook/react/issues/9402). please close this issue.","updated_at":"2021-09-21T13:16:04Z","created_at":"2021-09-21T13:16:04Z","creator_user_login":"khg0712"}
{"number":14319,"comment_id":"444512637","body":"+1 here. My current solution to smoke testing React.memo components is to add a custom attribute such as\r\n\r\n`qa-my-child-component`\r\n\r\nand then with jest-enzyme\r\n\r\n`shallow(<MyComponent />).find('[qa-my-child-component]').toHaveLength(1)`.\r\n\r\nIdeally, I'd like to do\r\n\r\n`shallow(<MyComponent />).find('MyChildComponent')`","updated_at":"2018-12-05T14:53:35Z","created_at":"2018-12-05T14:53:35Z","creator_user_login":"martinmckenna"}
{"number":14319,"comment_id":"444571853","body":"`forwardRef` does use the inner function name as the displayName, e.g. `ForwardRef(InnerName)`","updated_at":"2018-12-05T17:30:25Z","created_at":"2018-12-05T17:30:25Z","creator_user_login":"jquense"}
{"number":14319,"comment_id":"444576655","body":"@jquense In what version? It has a display name in `react-devtools` but no actual property `displayName`.","updated_at":"2018-12-05T17:44:18Z","created_at":"2018-12-05T17:44:18Z","creator_user_login":"eps1lon"}
{"number":14319,"comment_id":"451057471","body":"Any updates?","updated_at":"2019-01-03T05:14:58Z","created_at":"2019-01-03T05:14:58Z","creator_user_login":"hronro"}
{"number":14319,"comment_id":"451127480","body":"@foisonocean Upvote the issue, subscribe and wait for updates. Asking for updates is just noise for other people watching for updates.","updated_at":"2019-01-03T12:16:45Z","created_at":"2019-01-03T12:16:45Z","creator_user_login":"eps1lon"}
{"number":14319,"comment_id":"572987117","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-10T10:52:41Z","created_at":"2020-01-10T10:52:41Z","creator_user_login":"stale[bot]"}
{"number":14319,"comment_id":"575579271","body":"Closing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please create a new issue with up-to-date information. Thank you!\n","updated_at":"2020-01-17T10:59:00Z","created_at":"2020-01-17T10:59:00Z","creator_user_login":"stale[bot]"}
{"number":14319,"comment_id":"575596660","body":"Not stale. If possible, please reopen as currently we have to wrap in custom display name helpers that infer name of the module from the Webpack API","updated_at":"2020-01-17T11:52:47Z","created_at":"2020-01-17T11:52:47Z","creator_user_login":"o-alexandrov"}
{"number":14319,"comment_id":"575606833","body":"I just clicked read all since stale bot just spammed my notifications (watching full repo). Maybe I missed some announcement regarding how open source is viewed in this repository but letting stale bot loose is a clear push back against outside contributions. If the core team does not handle outside contributions who is supposed to? We're just expected to spam the threads to keep them alive?","updated_at":"2020-01-17T12:27:59Z","created_at":"2020-01-17T12:27:59Z","creator_user_login":"eps1lon"}
{"number":14319,"comment_id":"575813345","body":"@stale bot gives a full week to allow anyone to comment on an issue so that it considers it no longer stale. In this case, no one commented and so the issue was closed.\r\n\r\nI understand why this bot could seem a little frustrating to external contributors, especially combined with the fact that PRs often wait for a long time before someone on the core team reviews them. Unfortunately the PR situation is a natural result of the React community being very large (yay! 🥳) and our team being very small (only 8 developers).\r\n\r\n@stale bot is something new we are trying. We think it will help clean up the repo over time. (A lot of things it identifies as stale are legitimately stale!) In cases where we have false positives, issues can be re-opened.\r\n\r\nLike this one 🙂","updated_at":"2020-01-17T22:05:33Z","created_at":"2020-01-17T22:04:58Z","creator_user_login":"bvaughn"}
{"number":14319,"comment_id":"614990371","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-04-17T01:46:07Z","created_at":"2020-04-17T01:46:07Z","creator_user_login":"stale[bot]"}
{"number":14319,"comment_id":"614994355","body":"bump","updated_at":"2020-04-17T01:57:14Z","created_at":"2020-04-17T01:57:14Z","creator_user_login":"eps1lon"}
{"number":14319,"comment_id":"660438703","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-07-18T06:48:16Z","created_at":"2020-07-18T06:48:16Z","creator_user_login":"stale[bot]"}
{"number":14319,"comment_id":"660455585","body":"bump","updated_at":"2020-07-18T09:24:54Z","created_at":"2020-07-18T09:24:54Z","creator_user_login":"o-alexandrov"}
{"number":14319,"comment_id":"751260763","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T15:06:25Z","created_at":"2020-12-25T15:06:25Z","creator_user_login":"stale[bot]"}
{"number":14319,"comment_id":"751264084","body":"any comment","updated_at":"2020-12-25T15:36:46Z","created_at":"2020-12-25T15:36:46Z","creator_user_login":"hronro"}
{"number":26230,"comment_id":"1444173830","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: ca2cf319fdfcf6e5f048e082f5169bc1b849c129...5e6fa47e029fd54ef00faef0b457033fba38f6f5\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5e6fa47e029fd54ef00faef0b457033fba38f6f5/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=ca2cf319fdfcf6e5f048e082f5169bc1b849c129) | **=** | 154.46 kB | 154.46 kB | = | 48.75 kB | 48.75 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/5e6fa47e029fd54ef00faef0b457033fba38f6f5/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=ca2cf319fdfcf6e5f048e082f5169bc1b849c129) | **=** | 156.45 kB | 156.45 kB | = | 49.41 kB | 49.42 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/5e6fa47e029fd54ef00faef0b457033fba38f6f5/files/facebook-www/ReactDOM-prod.classic.js?compare=ca2cf319fdfcf6e5f048e082f5169bc1b849c129) | **=** | 530.70 kB | 530.70 kB | = | 94.57 kB | 94.57 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/5e6fa47e029fd54ef00faef0b457033fba38f6f5/files/facebook-www/ReactDOM-prod.modern.js?compare=ca2cf319fdfcf6e5f048e082f5169bc1b849c129) | **=** | 514.63 kB | 514.63 kB | = | 92.12 kB | 92.12 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 5e6fa47e029fd54ef00faef0b457033fba38f6f5\n</p>\n","updated_at":"2023-02-27T17:00:29Z","created_at":"2023-02-24T18:11:17Z","creator_user_login":"react-sizebot"}
{"number":26230,"comment_id":"1445009564","body":"Could you check the same steps as the test plan in https://github.com/facebook/react/pull/25231? \n\nI guess my PR had to patch some files because it's still on old Rollup?","updated_at":"2023-02-25T06:25:47Z","created_at":"2023-02-25T06:25:47Z","creator_user_login":"eps1lon"}
{"number":26230,"comment_id":"1445262103","body":"Ah missed that there was already a PR for this. Any reason it hasn't been merged?","updated_at":"2023-02-26T03:55:56Z","created_at":"2023-02-26T03:55:56Z","creator_user_login":"devongovett"}
{"number":26230,"comment_id":"1446719909","body":"@eps1lon Fixed a couple small things and ran your test repo against the latest commit and all passes now.","updated_at":"2023-02-27T17:13:13Z","created_at":"2023-02-27T17:13:13Z","creator_user_login":"devongovett"}
{"number":26230,"comment_id":"1446783705","body":"> For backward compatibility I have included all files in the package in the exports map, since non-exported files will throw an error.\r\n\r\nSo this change could be released as SemVer Minor while https://github.com/facebook/react/pull/25231 would be SemVer Major?","updated_at":"2023-02-27T17:52:54Z","created_at":"2023-02-27T17:52:54Z","creator_user_login":"eps1lon"}
{"number":26230,"comment_id":"1446887091","body":"I think so, yes.","updated_at":"2023-02-27T18:59:28Z","created_at":"2023-02-27T18:59:28Z","creator_user_login":"devongovett"}
{"number":26230,"comment_id":"1599987273","body":"Hiya, folks. I'm working on upgrading React-Redux to have full ESM/CJS compat for our upcoming v9.0 major, and just ran into this lovely problem myself.\r\n\r\nIn our case, we'll need to be importing `\"use-sync-external-store/with-selector\"` and are dropping the shim usage, but same issue overall.\r\n\r\nI just did a quick check and confirmed that hand-editing a locally installed `node_modules/use-sync-external-store/package.json` file with these `\"exports\"` changes appears to allow a simple `.mjs` test script to run okay:\r\n\r\n```ts\r\nimport { useSelector } from \"react-redux\";\r\nconsole.log(useSelector)\r\n```\r\n\r\nCould we get this merged and released?","updated_at":"2023-06-21T02:44:55Z","created_at":"2023-06-21T02:41:51Z","creator_user_login":"markerikson"}
{"number":25581,"comment_id":"1296269804","body":"a good solution to splitting UI and business logic, see: https://github.com/hawx1993/hooks-view-model","updated_at":"2022-10-30T14:12:09Z","created_at":"2022-10-30T14:12:09Z","creator_user_login":"hawx1993"}
{"number":25581,"comment_id":"1296339413","body":"> a good solution to splitting UI and business logic, see: https://github.com/hawx1993/hooks-view-model\r\n\r\ngood suggestion but not form tho. Also I really want to see this feature in react since to other 3rd party lib does this and I have no idea why.","updated_at":"2023-01-08T12:00:17Z","created_at":"2022-10-30T20:03:13Z","creator_user_login":"anasouardini"}
{"number":25581,"comment_id":"1310130613","body":"If im not mistaking what you are looking for, context will solve your issue. To be honest accessing and changing global state, especially updating global state, from a component which is nested really down, will make the code messy","updated_at":"2022-11-10T11:16:17Z","created_at":"2022-11-10T11:16:17Z","creator_user_login":"hasanbisha"}
{"number":25581,"comment_id":"1311563606","body":"> If im not mistaking what you are looking for, context will solve your issue. To be honest accessing and changing global state, especially updating global state, from a component which is nested really down, will make the code messy\r\n\r\ncontext is not good from states that are changing a lot though.\r\n\r\nWhat I actually want is a way to access a state of a component from any other component, without having to prop-drill or extracting the state to some global object.\r\n\r\nI want to be able to read the state or re-render a component from any other component. just by writing a component's key or name and a state name in that target component.\r\n\r\nI've wrote a simple one before, and it was a good and clean way to pass states between components, read some state in a child of a sibling component or re-render it and so on.\r\n\r\nI can precisely access components flexibly from everywhere without any overhead. It feels like I have more control and flexibility.\r\n\r\nAlso in my opinion this should be built-in. I should not have to install a library for this simple but often needed functionality.\r\nAnd since it's not going to make this library opinionated, I think a lot of devs would like such simple yet helpful feature to be a default.","updated_at":"2022-11-28T16:06:48Z","created_at":"2022-11-11T11:14:13Z","creator_user_login":"anasouardini"}
{"number":25564,"comment_id":"1291046927","body":"@jschuler: We're sorry you've seen this error. ❤️\n\nIt looks like you forgot to specify a valid URL. (This means that we will not be able to reproduce the problem you're reporting.)\n\nPlease help us by providing a link to a CodeSandbox (https://codesandbox.io/s/new), a repository on GitHub, or a minimal code example that reproduces the problem. (Screenshots or videos can also be helpful if they help provide context on how to repro the bug.)\n\nHere are some tips for providing a minimal example: https://stackoverflow.com/help/mcve\n\nIssues without repros are automatically closed but we will re-open if you update with repro info.","updated_at":"2022-10-25T19:39:20Z","created_at":"2022-10-25T19:39:20Z","creator_user_login":"github-actions[bot]"}
{"number":25564,"comment_id":"1291048298","body":"Thank you for providing repro steps! Re-opening issue now for triage.","updated_at":"2022-10-25T19:40:33Z","created_at":"2022-10-25T19:40:33Z","creator_user_login":"github-actions[bot]"}
{"number":25564,"comment_id":"1292424266","body":"Hei @jschuler ,maybe i'm missing something but react dev tool won't be able to render source file for a prod build because of how bundling works? \r\nIt does do that for dev builds tho as far as i can see, if that's what you meant?\r\n","updated_at":"2022-10-26T18:17:54Z","created_at":"2022-10-26T18:16:46Z","creator_user_login":"DantrazTrev"}
{"number":25564,"comment_id":"1296269920","body":"a good solution to splitting UI and business logic, see: https://github.com/hawx1993/hooks-view-model","updated_at":"2022-10-31T08:42:48Z","created_at":"2022-10-30T14:12:40Z","creator_user_login":"hawx1993"}
{"number":26676,"comment_id":"1516236356","body":"I was looking for up to date information to understand Reacts Control Flow better and that's where I'd expect to find that information. Sadly the rabbit hole ends here for now :(","updated_at":"2023-04-20T12:24:08Z","created_at":"2023-04-20T12:24:08Z","creator_user_login":"JustusW"}
{"number":26676,"comment_id":"1521959430","body":"Could I work on this issue?\r\n","updated_at":"2023-04-25T15:08:06Z","created_at":"2023-04-25T15:07:53Z","creator_user_login":"kristof1345"}
{"number":26676,"comment_id":"1552394697","body":"Assign me this issue","updated_at":"2023-05-18T04:50:38Z","created_at":"2023-05-18T04:50:38Z","creator_user_login":"ayushgupta9906"}
{"number":26676,"comment_id":"1552944874","body":"@kristof1345 @ayushgupta9906 you're free to make a pr if you find a solution","updated_at":"2023-05-18T11:54:15Z","created_at":"2023-05-18T11:54:15Z","creator_user_login":"akirataguchi115"}
{"number":26676,"comment_id":"1556040139","body":"I only found this link : https://github.com/facebook/react/blob/main/CODE_OF_CONDUCT.md\r\nbut there is no how to contribute section in this like in the legacy site.","updated_at":"2023-05-20T23:12:25Z","created_at":"2023-05-20T23:12:25Z","creator_user_login":"tusharkashyap11"}
{"number":26676,"comment_id":"1559623093","body":"Should I make a pr for this to redirect to this link ?\r\n\r\n> I only found this link : https://github.com/facebook/react/blob/main/CODE_OF_CONDUCT.md but there is no how to contribute section in this like in the legacy site.\r\n\r\n","updated_at":"2023-05-23T15:02:04Z","created_at":"2023-05-23T15:02:04Z","creator_user_login":"tusharkashyap11"}
{"number":26676,"comment_id":"1560012166","body":"Sorry for the late response, @tusharkashyap11 ! To my understanding CODE_OF_CONDUCT.md is different from CONTRIBUTING.md The former describes the expected behavior of the contributors and the latter describes what type of contributions are welcome from the contributors.\r\n\r\nAs such there's not much need to open a PR just yet. However if you do find some material discussing CONTRIBUTING.md or something alike you're more than welcome to open a PR and link this issue to it! :octocat: ","updated_at":"2023-05-23T19:29:21Z","created_at":"2023-05-23T19:29:21Z","creator_user_login":"akirataguchi115"}
{"number":26676,"comment_id":"1560020486","body":"@akirataguchi115 Thanks for the reply. I got your point, so I'll just look for some other material that explains CONTRIBUTE.md or similar to that.","updated_at":"2023-05-23T19:36:49Z","created_at":"2023-05-23T19:36:49Z","creator_user_login":"tusharkashyap11"}
{"number":25604,"comment_id":"1298921374","body":"It may also be the case that the original example from the official React documentation site is buggy.\r\n\r\nHowever, if that is the case, that example should at least be marked as obsolete or wrong, or maybe replaced.","updated_at":"2022-11-01T18:13:12Z","created_at":"2022-11-01T18:13:03Z","creator_user_login":"MelvinWM"}
{"number":25329,"comment_id":"1259172731","body":"Hi @mdjastrzebski! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Freact%20%2325329). Thanks!","updated_at":"2022-09-27T08:35:16Z","created_at":"2022-09-27T08:35:16Z","creator_user_login":"facebook-github-bot"}
{"number":25329,"comment_id":"1259179137","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: ea04a486a7c27771f7eea896565c0980927ed3b4...6deb332bb4d037caca7b2f3ab2395725ea9c96ea\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/6deb332bb4d037caca7b2f3ab2395725ea9c96ea/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=ea04a486a7c27771f7eea896565c0980927ed3b4) | **=** | 135.46 kB | 135.46 kB | = | 43.41 kB | 43.41 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/6deb332bb4d037caca7b2f3ab2395725ea9c96ea/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=ea04a486a7c27771f7eea896565c0980927ed3b4) | **=** | 147.72 kB | 147.72 kB | = | 47.17 kB | 47.17 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/6deb332bb4d037caca7b2f3ab2395725ea9c96ea/files/facebook-www/ReactDOM-prod.classic.js?compare=ea04a486a7c27771f7eea896565c0980927ed3b4) | **=** | 491.70 kB | 491.70 kB | = | 87.49 kB | 87.49 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/6deb332bb4d037caca7b2f3ab2395725ea9c96ea/files/facebook-www/ReactDOM-prod.modern.js?compare=ea04a486a7c27771f7eea896565c0980927ed3b4) | **=** | 477.00 kB | 477.00 kB | = | 85.24 kB | 85.24 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/6deb332bb4d037caca7b2f3ab2395725ea9c96ea/files/facebook-www/ReactDOMForked-prod.classic.js?compare=ea04a486a7c27771f7eea896565c0980927ed3b4) | **=** | 491.70 kB | 491.70 kB | = | 87.49 kB | 87.49 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable-semver/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/6deb332bb4d037caca7b2f3ab2395725ea9c96ea/files/oss-stable-semver/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=ea04a486a7c27771f7eea896565c0980927ed3b4) | **+0.39%** | 92.59 kB | 92.95 kB | +0.32% | 28.54 kB | 28.63 kB\n| [oss-stable/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/6deb332bb4d037caca7b2f3ab2395725ea9c96ea/files/oss-stable/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=ea04a486a7c27771f7eea896565c0980927ed3b4) | **+0.39%** | 92.61 kB | 92.97 kB | +0.32% | 28.54 kB | 28.63 kB\n| [oss-stable-semver/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/6deb332bb4d037caca7b2f3ab2395725ea9c96ea/files/oss-stable-semver/react-test-renderer/umd/react-test-renderer.production.min.js?compare=ea04a486a7c27771f7eea896565c0980927ed3b4) | **+0.39%** | 92.84 kB | 93.20 kB | +0.32% | 29.01 kB | 29.11 kB\n| [oss-stable/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/6deb332bb4d037caca7b2f3ab2395725ea9c96ea/files/oss-stable/react-test-renderer/umd/react-test-renderer.production.min.js?compare=ea04a486a7c27771f7eea896565c0980927ed3b4) | **+0.39%** | 92.86 kB | 93.22 kB | +0.33% | 29.01 kB | 29.11 kB\n| [oss-experimental/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/6deb332bb4d037caca7b2f3ab2395725ea9c96ea/files/oss-experimental/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=ea04a486a7c27771f7eea896565c0980927ed3b4) | **+0.37%** | 97.33 kB | 97.69 kB | +0.32% | 29.87 kB | 29.96 kB\n| [oss-experimental/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/6deb332bb4d037caca7b2f3ab2395725ea9c96ea/files/oss-experimental/react-test-renderer/umd/react-test-renderer.production.min.js?compare=ea04a486a7c27771f7eea896565c0980927ed3b4) | **+0.37%** | 97.57 kB | 97.93 kB | +0.28% | 30.28 kB | 30.36 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-prod.js](https://react-builds.vercel.app/commits/6deb332bb4d037caca7b2f3ab2395725ea9c96ea/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-prod.js?compare=ea04a486a7c27771f7eea896565c0980927ed3b4) | **+0.26%** | 280.77 kB | 281.50 kB | +0.27% | 49.73 kB | 49.86 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-profiling.js](https://react-builds.vercel.app/commits/6deb332bb4d037caca7b2f3ab2395725ea9c96ea/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-profiling.js?compare=ea04a486a7c27771f7eea896565c0980927ed3b4) | **+0.25%** | 296.35 kB | 297.08 kB | +0.26% | 52.09 kB | 52.23 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 6deb332bb4d037caca7b2f3ab2395725ea9c96ea\n</p>\n","updated_at":"2022-10-04T21:00:19Z","created_at":"2022-09-27T08:41:04Z","creator_user_login":"sizebot"}
{"number":25329,"comment_id":"1259205557","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-09-27T09:03:55Z","created_at":"2022-09-27T09:03:55Z","creator_user_login":"facebook-github-bot"}
{"number":25329,"comment_id":"1259205643","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-09-27T09:03:59Z","created_at":"2022-09-27T09:03:59Z","creator_user_login":"facebook-github-bot"}
{"number":25329,"comment_id":"1266899596","body":"Pinging so this PR doesn't get closed. I'm looking forward for some feedback on it.\r\n\r\nThe change is small, it's tested, and would be really useful for Test Renderer users, as indicated in #14539 :-) ","updated_at":"2022-10-04T12:15:27Z","created_at":"2022-10-04T12:15:27Z","creator_user_login":"mdjastrzebski"}
{"number":25329,"comment_id":"1267304593","body":"A test that mimics how you would use, would help. Looks like none of the existing tests really showcase a need for this feature since it's just used on the root.","updated_at":"2022-10-04T17:06:53Z","created_at":"2022-10-04T17:06:53Z","creator_user_login":"eps1lon"}
{"number":25329,"comment_id":"1267314373","body":"On the web, we've moved away from recommending the test renderer, and instead recommended to query the native tree. I wonder if instead of expanding the API surface of the Test Renderer, whether we've considered to do something similar on RN. I don't mean literally running Android/iOS, but more like whether we can expose something on the RN tree level and use that as the way forward. We've been adding some test selector APIs (https://github.com/facebook/react/pull/18607) which aren't used anywhere yet but I think they should also (?) work on RN.","updated_at":"2022-10-04T17:16:09Z","created_at":"2022-10-04T17:16:09Z","creator_user_login":"gaearon"}
{"number":25329,"comment_id":"1267570266","body":"@eps1lon I've added tests for more complex tree structure with mixed host & composite elements, re-using existing arrangement from traversal tests. I used `toEqual` matcher instead of `toMatchSnapshot/InlineSnapshot` to be consistent with existing root-level `toJSON()` tests.\r\n\r\n@gaearon sounds like an interesting idea to consider, yet quite complex one, as its appears to work on lower level of abstraction than Test Renderer. One aspect that bothers me though is the \"experimental\" status of these queries. Will research more on that, and discuss with other RNTL maintainers. \r\n\r\nMeanwhile, I would argue that merging this PR would still benefit the existing RN projects using RNTL/Test Renderer with immediate benefit of focused snapshot testing. Using Test Renderer is currently the main solution for writing component & TL-style integration tests in RN world, with a lot of projects being heavily invested in creating their automated tests. While the cost is relatively minor addition to Test Renderer package.\r\n","updated_at":"2022-10-04T20:57:03Z","created_at":"2022-10-04T20:57:03Z","creator_user_login":"mdjastrzebski"}
{"number":25329,"comment_id":"1267628864","body":"> One aspect that bothers me though is the \"experimental\" status of these queries\r\n\r\nIt's implemented. The only reason they're called experimental is because we never deployed or exposed them anywhere so they're just... kind of there. ","updated_at":"2022-10-04T22:03:43Z","created_at":"2022-10-04T22:03:43Z","creator_user_login":"gaearon"}
{"number":25329,"comment_id":"1285897811","body":"@gaearon is there any recommendation of moving from react-test-renderer to test selector API? Some plans to deprecate it maybe? If you could confirm whether this approach works with RN or not, that would be great 👍🏼 ","updated_at":"2022-10-20T17:19:03Z","created_at":"2022-10-20T17:19:03Z","creator_user_login":"thymikee"}
{"number":25329,"comment_id":"1300334965","body":"@eps1lon I've added more tests for `toJSON()` method as you requested. Is there anything more I can do/change/implement to move forward this PR?","updated_at":"2022-11-02T12:47:28Z","created_at":"2022-11-02T12:47:28Z","creator_user_login":"mdjastrzebski"}
{"number":25329,"comment_id":"1325382436","body":"It's me again, I wanted to check with the React team, if this PR has chances to move forward.\r\n\r\nTo give you some more context, React Test Renderer is the primary solution used for testing in the React Native ecosystem, so while it might seem a bit odd to use in on the web, there are a lot of RN apps that use it directly or through React Native Testing Library, which I maintain, to provide solid integration & component test coverage. This PR would really bring value to RN space. \r\n\r\nI believe that having `toJSON()` implementation inside React Test Renderer is the best place as it uses the internal fiber APIs, which are encapsulated through TestRenderer and ReactTestInstance types.\r\n\r\n@eps1lon, @gaearon pls help","updated_at":"2022-11-23T16:54:44Z","created_at":"2022-11-23T16:54:44Z","creator_user_login":"mdjastrzebski"}
{"number":25329,"comment_id":"1492455180","body":"Curious if there has been any movement on this. I'm a React Native developer, and these changes would be a huge benefit to my testing workflow if this were merged and React Native Testing Library were able to take advantage of this. Thanks all!","updated_at":"2023-03-31T19:00:41Z","created_at":"2023-03-31T19:00:41Z","creator_user_login":"stevehanson"}
{"number":25329,"comment_id":"1619006599","body":"would also like to see this implemented","updated_at":"2023-07-03T18:52:51Z","created_at":"2023-07-03T18:52:51Z","creator_user_login":"brittanyvaldez"}
{"number":19162,"comment_id":"647629991","body":"Have you tried using the \"location\" [component filter](https://github.com/facebook/react/blob/master/packages/react-devtools/CHANGELOG.md#component-filters) to hide things within that NPM package","updated_at":"2020-06-22T16:27:00Z","created_at":"2020-06-22T16:27:00Z","creator_user_login":"bvaughn"}
{"number":19162,"comment_id":"648142988","body":"Hey  @bvaughn  I tried the following alternatives (all of the options presume the first option set to `location`)\r\n\r\n- `@material-ui/core`\r\n- `@material-ui/core/*`\r\n- `node_modules/@material-ui/core`\r\n- `node_modules/@material-ui/core/*`\r\n\r\nSadly none of these worked. I'm not quite sure how I should exactly specify the path location given it does not have example in the docs / link you provided and I'm not even sure if wildcards like `*` are valid or it needs to be an absolute path. \r\n\r\nBecause obviously it would be bit over the top, to filter out every single MUI component per-file basis. \r\n\r\nAm I just entering it incorrectly, or?","updated_at":"2020-06-23T13:22:56Z","created_at":"2020-06-23T13:21:48Z","creator_user_login":"samuelhulla"}
{"number":19162,"comment_id":"648155955","body":"> I'm not even sure if wildcards like * are valid or it needs to be an absolute path.\r\n\r\nLocation filters support regex:\r\nhttps://github.com/facebook/react/blob/6ba25b96df5d4179bf8aba3c3fe1ace3dce28234/packages/react-devtools-shared/src/backend/renderer.js#L501-L504\r\n\r\nComponents will be filtered *if* (1) they are built with `_debugSource` info and (2) the file name matches the path:\r\nhttps://github.com/facebook/react/blob/6ba25b96df5d4179bf8aba3c3fe1ace3dce28234/packages/react-devtools-shared/src/backend/renderer.js#L619-L627\r\n\r\nThe debug source info is typically DEV-only, and gets added [here](https://github.com/facebook/react/blob/280bcfa9f596a6747bdb99c5e416e924bc400644/src/renderers/shared/fiber/ReactFiber.js#L311) to the `Fiber`, and it is on the element from [this Babel plugin](https://www.npmjs.com/package/babel-plugin-transform-react-jsx-source)- so maybe Material components aren't built with this plug-in?","updated_at":"2020-06-23T13:41:23Z","created_at":"2020-06-23T13:41:23Z","creator_user_login":"bvaughn"}
{"number":19162,"comment_id":"648220305","body":"> it is on the element from this Babel plugin- so maybe Material components aren't built with this plug-in?\r\n\r\nComponent libraries need to apply this transform? I thought this was for app code only. \r\n\r\nIf we do this then wouldn't the source point to a relative path within node_modules? Do the devtools resolve the path?\r\n\r\nThis basically means that we need to ship another bundle for development which means we need to double the bundles unless we want to enforce a particular module system for the development build.\r\n\r\nI just searched my node_modules where I installed `antd`, `reakit`, `@reach/tabs` and `semantic-ui-react` and it seems like neither of these modules was build with the plugin since I couldn't find any occurrence of `__source` nor `_debugSource`\r\n\r\n\r\n","updated_at":"2020-06-23T15:01:39Z","created_at":"2020-06-23T15:00:39Z","creator_user_login":"eps1lon"}
{"number":19162,"comment_id":"648252470","body":"> Component libraries need to apply this transform?\r\n\r\n\"Need to\"? No. Just pointing out that the file name filtering won't work if this meta info isn't available.\r\n\r\nJust to clarify things: React DevTools as a browser extension doesn't know anything about your file system or where a given React component's underlying source file is. This issue is asking how to filter a set of components that share a file system location in common, so I mentioned the location filter as a possibility.\r\n\r\nMaybe that specific transform could be configured to run against `node_module` source files as well? Then you could just hide anything with `node_modules` in the path.","updated_at":"2020-06-23T15:52:03Z","created_at":"2020-06-23T15:51:50Z","creator_user_login":"bvaughn"}
{"number":19162,"comment_id":"648267781","body":"> \"Need to\"? No. Just pointing out that the file name filtering won't work if this meta info isn't available.\r\n\r\nNo of course we don't \"need to\" in a literal sense. \r\n\r\nBut if a devtools feature requires additional work for component libraries so that it works as intended then we should do the extra work. It's apparently problematic since no widely adopted component library does this.  So there's either a documentation issue (why should component libraries do this? is there some recommended way to do it? etc) or the feature is incomplete because it doesn't support a common use case.\r\n\r\nIt's also confusing because \"go to source\" works perfectly fine. Now I suspect that this is because these features have a different implementation but this isn't a good explanation for a software user. At a surface level \"go to source\" and \"exclude this source\" are the same. One doesn't support all locations though which is confusing. \r\n\r\nIn the end statements like \"the components aren't build to support this feature\" don't help if virtually no component library is build that way.\r\n\r\n","updated_at":"2020-06-23T16:17:23Z","created_at":"2020-06-23T16:17:23Z","creator_user_login":"eps1lon"}
{"number":19162,"comment_id":"648279259","body":"Go-to-source uses function identity and the browser DevTool's built-in `inspect` method. Filter-by-location does not use function identity. They are vaguely related in topic but they are quite different in practice.\r\n\r\n> the components aren't build to support this feature\r\n\r\nThis...is your statement. I never said this. :smile: I just said maybe the component wasn't built using a certain plug-in. I also suggested that you could configure the plug-in to be used in your app?\r\n> Maybe that specific transform could be configured to run against node_module source files as well? Then you could just hide anything with node_modules in the path.\r\n\r\nUltimately I'm just trying to provide ideas here for things to try.","updated_at":"2020-06-23T16:38:36Z","created_at":"2020-06-23T16:38:36Z","creator_user_login":"bvaughn"}
{"number":19162,"comment_id":"648897162","body":"~~I don't think this issue is really actionable so I'm going to close it. Happy to keep talking here, sharing ideas, etc. If something actionable comes up, we can reopen.~~\r\n\r\nEh, I'll just re-open this for now since there's active discussion","updated_at":"2020-06-24T16:13:43Z","created_at":"2020-06-24T15:36:54Z","creator_user_login":"bvaughn"}
{"number":19162,"comment_id":"648908248","body":"> Maybe that specific transform could be configured to run against node_module source files as well? Then you could just hide anything with node_modules in the path.\r\n\r\nResponding to my own suggestion here: I don't think this is viable, because the JSX -> `createElement` transform has already been applied.\r\n\r\nMaybe a new plug-in? (Maybe one already exists that I'm unaware of?) I'll ask on Twitter.","updated_at":"2020-06-24T15:57:37Z","created_at":"2020-06-24T15:56:22Z","creator_user_login":"bvaughn"}
{"number":19162,"comment_id":"648917988","body":"### Edit for clarity\r\n\r\nThe idea I am proposing here would be a new transform, similar to [`babel-plugin-transform-react-jsx-source`](https://www.npmjs.com/package/babel-plugin-transform-react-jsx-source) but meant only for shared component libraries. This transform would insert only part of the `__source` object, and would follow the convention of \"node_modules/<package-name>\", e.g.\r\n```js\r\ncreateElement(\r\n  type,\r\n  {\r\n    ...props,\r\n    __source: {\r\n      fileName: \"node_modules/react-window\",\r\n    },\r\n  },\r\n  ...args\r\n);\r\n```\r\n\r\nAlternately we could add a new, package-only field, e.g. \r\n```js\r\ncreateElement(\r\n  type,\r\n  {\r\n    ...props,\r\n    __source: {\r\n      packageName: \"react-window\",\r\n    },\r\n  },\r\n  ...args\r\n);\r\n```\r\n\r\nBut this would also require an update to the DevTools filtering logic.\r\n\r\n---\r\n\r\nAs a proof of concept, I created a small project with create-react-app and the react-window NPM package, then I hacked this into the react-window built source:\r\n\r\n```js\r\nimport { createElement as createElementReact, PureComponent } from 'react';\r\n\r\n// Hacky test only; don't copy this.\r\nlet createElement = createElementReact;\r\nif (process.env.NODE_ENV !== 'production') {\r\n  createElement = (type, props, ...args) => {\r\n    return createElementReact(\r\n      type,\r\n      {\r\n        ...props,\r\n        __source: {\r\n          fileName: 'node_modules/react-window',\r\n        },\r\n      },\r\n      ...args\r\n    );\r\n  }\r\n}\r\n```\r\n\r\nThen I was able to filter out all of the components internal to the react-window package using a location filter with a value of \"react-window\":\r\n![Screen Shot 2020-06-24 at 12 14 32 PM](https://user-images.githubusercontent.com/29597/85592571-4915fb80-b614-11ea-81d4-755e5b394956.png)\r\n\r\n## No filter\r\n![Screen Shot 2020-06-24 at 12 10 05 PM](https://user-images.githubusercontent.com/29597/85591945-b8d7b680-b613-11ea-90a5-391388e7ddc1.png)\r\n\r\n## With filter\r\n![Screen Shot 2020-06-24 at 12 10 14 PM](https://user-images.githubusercontent.com/29597/85591960-bd03d400-b613-11ea-8eae-9efd518ad746.png)\r\n\r\nNote that this didn't filter the outermost `<List>` element, because that was declared in my project source directly. So it's unclear if this is *exactly* what you want or not, but I think it is?","updated_at":"2020-07-06T16:02:17Z","created_at":"2020-06-24T16:13:08Z","creator_user_login":"bvaughn"}
{"number":19162,"comment_id":"654308400","body":"That makes sense to me. So the source of the component doesn't matter. It's the source of the element creation","updated_at":"2020-07-06T15:30:14Z","created_at":"2020-07-06T15:30:14Z","creator_user_login":"kentcdodds"}
{"number":19162,"comment_id":"690594611","body":"> Hello, recently we've overhauled a client's website with the usage of [Material UI](https://material-ui.com/). It's been an enjoyable experience, however one thing that really irks me - given the project is pretty large and there's multiple people working on it, sometimes it gets chaotic which component is exactly what and you need to find out which component you should be working on.\r\n> \r\n> My general fallback was using the [React Develeloper Tools](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=en) extension, however given MUI consists of ready-made JSX components, it essentially spams and halts the usefulness of the 'Components' tab.\r\n> \r\n> ![image](https://user-images.githubusercontent.com/17268815/85140844-25cf0300-b246-11ea-98ec-e0d37aea2707.png)\r\n> \r\n> Is there perhaps any way that would allow for filtering of specific packages / jsx elements inside the React Developer Tools?\r\n> \r\n> I know I could technically user regex to filter out a list of all the known MUI Components, but that seems bit overkill. I sadly suspect such a thing is not supported, but you never know unless you ask.\r\n\r\n","updated_at":"2020-09-10T18:14:17Z","created_at":"2020-09-10T18:14:17Z","creator_user_login":"Bugimaster"}
{"number":19851,"comment_id":"694439442","body":"So I guess the 3 options I see would be:\r\n1. Disallow Symbol keys but handle them with a graceful error message that doesn't crash the app\r\n2. Allow Symbol keys but convert them to a string with Symbol.toString()\r\n3. (possibly) Allow Symbol keys to remain as symbols\r\n\r\nI think I'd lean toward option 2 -- what do y'all think?","updated_at":"2020-09-17T19:07:26Z","created_at":"2020-09-17T19:07:26Z","creator_user_login":"bpernick"}
{"number":19851,"comment_id":"694473060","body":"A possible solution for option 2?\r\n\r\n```js\r\nif (hasValidKey(config)) {\r\n  key = typeof config.key === 'symbol' \r\n    ? config.key.toString()\r\n    : '' + config.key;\r\n}\r\n```\r\n","updated_at":"2020-09-17T20:10:28Z","created_at":"2020-09-17T20:10:28Z","creator_user_login":"kunukn"}
{"number":19851,"comment_id":"694478898","body":"@kunukn you read my mind. Working on that pr now :)","updated_at":"2020-09-17T20:23:15Z","created_at":"2020-09-17T20:23:15Z","creator_user_login":"bpernick"}
{"number":19851,"comment_id":"694496683","body":"FWIW, `key`s *should be strings*. (So far as I'm aware, this has been the case since 2014, 5aab0bddaa9dd2684049194a2488d57517d89cae.) The `'' + key` fallback was a convenience concession for Array indices-as-keys.\r\n\r\nSome previous discussion about this: #11996\r\n\r\nThis comment in particular raises a good concern wrt using symbols for keys: https://github.com/facebook/react/issues/11996#issuecomment-411831270\r\n\r\nAlthough I suppose you could argue that using `Symbol.for` would negate that concern.","updated_at":"2020-09-17T21:06:16Z","created_at":"2020-09-17T20:59:17Z","creator_user_login":"bvaughn"}
{"number":19851,"comment_id":"694588807","body":"Hmm thanks Brian! It looks like fully supporting symbol keys is unlikely to be useful and likely to be dangerous because it could circumvent React's checks for duplicate keys among siblings.\r\n\r\nRather than actually supporting Symbol keys I just tried to make sure they were automatically stringified. The 3 advantages I see are:\r\n\r\n1. Now Symbol keys are treated the same way as number keys, etc.\r\n2. Symbol keys don't automatically crash the app.\r\n3. If the dev does something bad, like \" return (<><div key={ Symbol('foo') } ><div key={ Symbol('foo') } ></> \", they will get a descriptive error about duplicate keys, rather than the arcane one Omar received.\r\n\r\nLet me know what you think -- If we decide no, perhaps another solution would be to disallow symbols explicitly in hasValidKey","updated_at":"2020-09-18T01:24:08Z","created_at":"2020-09-18T01:10:36Z","creator_user_login":"bpernick"}
{"number":19851,"comment_id":"694595484","body":"My initial inclination would be to add a DEV-only check + warning that symbols-as-keys isn't supported.\r\n\r\nThat being said, I don't really speak for the team on this particular issue :smile: ","updated_at":"2020-09-18T01:29:55Z","created_at":"2020-09-18T01:29:31Z","creator_user_login":"bvaughn"}
{"number":19851,"comment_id":"694596096","body":"@bvaughn Ok! Happy to do that if that's what we decide :)\r\n","updated_at":"2020-09-18T01:33:24Z","created_at":"2020-09-18T01:31:50Z","creator_user_login":"bpernick"}
{"number":19851,"comment_id":"694827103","body":"> Hmm thanks Brian! It looks like fully supporting symbol keys is unlikely to be useful and likely to be dangerous because it could circumvent React's checks for duplicate keys among siblings.\n> \n> Rather than actually supporting Symbol keys I just tried to make sure they were automatically stringified. The 3 advantages I see are:\n> \n> 1. Now Symbol keys are treated the same way as number keys, etc.\n> 2. Symbol keys don't automatically crash the app.\n> 3. If the dev does something bad, like \" return (<><div key={ Symbol('foo') } ><div key={ Symbol('foo') } ></> \", they will get a descriptive error about duplicate keys, rather than the arcane one Omar received.\n> \n> Let me know what you think -- If we decide no, perhaps another solution would be to disallow symbols explicitly in hasValidKey\n\nThe third point is not true, you won't receive an error, on that case you will receive 2 different values. ","updated_at":"2020-09-18T12:00:33Z","created_at":"2020-09-18T12:00:33Z","creator_user_login":"juanjorge"}
{"number":19851,"comment_id":"694848725","body":">> If the dev does something bad, like \" return (<><div key={ Symbol('foo') } ><div key={ Symbol('foo') } ></> \", they will get a descriptive error about duplicate keys, rather than the arcane one Omar received.\r\n>\r\n> The third point is not true, you won't receive an error, on that case you will receive 2 different values.\r\n\r\nThe context of the above comment is that if React called `toString` on symbols, then two symbols which were not equal before (`Symbol('foo') !== Symbol('foo')`) would now be equal (`\"Symbol(foo)\" === \"Symbol(foo)\"`).\r\n\r\nThat is, unless you're suggesting we allow `Symbol` as key *without* converting to a string– in which case, we'd need to consider how symbols would work with server side rendering (how they get serialized and sent to the client). For example, even if React handled the serialization– how would it know how to reconstitute a symbol on the client? Should it use `Symbol(\"...\")` or `Symbol.for(\"...\")`? Each one is significantly different in terms of behavior.","updated_at":"2020-09-18T12:56:40Z","created_at":"2020-09-18T12:51:41Z","creator_user_login":"bvaughn"}
{"number":19851,"comment_id":"694915548","body":"yeah, that's a good point, the `hydrate`, in the global context, should get it using `Symbol.for(\"...\")` in the client, but should be tested, im not sure..","updated_at":"2020-09-18T14:52:59Z","created_at":"2020-09-18T14:52:59Z","creator_user_login":"juanjorge"}
{"number":19851,"comment_id":"694921760","body":"I agree that using `Symbol.for(\"...\")` would probably be the better option, but there's the possibility that `Symbol(\"...\")` was used intentionally (to create unique symbols regardless of their string content) at which point– using `Symbol.for(\"...\")` during hydration would almost certainly cause errors.\r\n\r\nI don't know if this was part of the reason why symbols have never been supported as keys 😄  I don't think I've ever had a conversation about this with other team members. Does seem like an added consideration though.","updated_at":"2020-09-18T15:04:36Z","created_at":"2020-09-18T15:04:36Z","creator_user_login":"bvaughn"}
{"number":19851,"comment_id":"694953480","body":"```\r\nMy initial inclination would be to add a DEV-only check + warning that symbols-as-keys isn't supported.\r\n\r\nThat being said, I don't really speak for the team on this particular issue 😄\r\n```\r\n\r\nI think we have to deal with symbols as we deal with objects. At the moment when we add an object as a key we don't get an error message or a warning we get the key which becomes `[object Object]`.\r\nIf we add a warning for the Symbol we have to do it for all the other types that are not a String.","updated_at":"2020-09-18T16:08:45Z","created_at":"2020-09-18T16:05:43Z","creator_user_login":"omarsy"}
{"number":19851,"comment_id":"694955971","body":"But I think that if javascript supports Symbol as the key to an object we should also support it. But maybe I'm wrong","updated_at":"2020-09-18T16:11:01Z","created_at":"2020-09-18T16:11:01Z","creator_user_login":"omarsy"}
{"number":19851,"comment_id":"696392012","body":"Any further thoughts on this?","updated_at":"2020-09-21T21:38:01Z","created_at":"2020-09-21T21:38:01Z","creator_user_login":"bpernick"}
{"number":19851,"comment_id":"697397359","body":"> At the moment when we add an object as a key we don't get an error message or a warning we get the key which becomes `[object Object]`.\r\n\r\nAs a React developer for the last couple of years I did not know this was the case. And the [docs](https://reactjs.org/docs/lists-and-keys.html#keys) doesn't really make that clear either. I think it would be helpful to show a dev warning for all non-primitive keys, as well as make it clear in the docs that all keys are converted to strings.","updated_at":"2020-09-23T13:58:03Z","created_at":"2020-09-23T13:58:03Z","creator_user_login":"johnloven"}
{"number":19851,"comment_id":"701715830","body":"So in addition to the things below, I tried adding a dev warning for any type of key other than a string or number. What do yall think?\r\n\r\n> 1. Now Symbol keys are treated the same way as number keys, etc.\r\n> 2. Symbol keys don't automatically crash the app.\r\n> 3. If the dev does something bad, like \" return (<><div key={ Symbol('foo') } ><div key={ Symbol('foo') } ></> \", they will get a descriptive error about duplicate keys, rather than the arcane one Omar received.\r\n\r\n","updated_at":"2020-10-01T00:31:06Z","created_at":"2020-10-01T00:28:29Z","creator_user_login":"bpernick"}
{"number":19851,"comment_id":"701736979","body":"Someone will have to review the PR, @bpernick. This often takes a while as there are only a couple of core contributors and we're juggling a lot of things. 🙇  Sorry.","updated_at":"2020-10-01T01:38:34Z","created_at":"2020-10-01T01:38:34Z","creator_user_login":"bvaughn"}
{"number":18499,"comment_id":"609472839","body":"And this is how we do it today: https://github.com/react-spring/react-spring/tree/master/src/targets\r\n\r\nThe original idea for this is by @vjeux (from the animated library). Each target defines a function that is able to transport props into the target system. This of course isn't dynamic, targets have to added and maintained, and it's also superfluous since reconcilers have that knowledge.","updated_at":"2020-04-05T19:54:03Z","created_at":"2020-04-05T19:54:03Z","creator_user_login":"drcmda"}
{"number":18499,"comment_id":"609473103","body":"When you mean \"reconcilers\", you mean \"renderers\", right?","updated_at":"2020-04-05T19:56:10Z","created_at":"2020-04-05T19:56:10Z","creator_user_login":"gaearon"}
{"number":18499,"comment_id":"609473389","body":"Yes. As an example, here's react-three-fibers commitUpdate: https://github.com/react-spring/react-three-fiber/blob/master/src/reconciler.tsx#L382 which calls an apply function here: https://github.com/react-spring/react-three-fiber/blob/master/src/reconciler.tsx#L108\r\n\r\ncommitUpdate has full knowledge of platform details. This is of course also how React handles props on re-rendering. ","updated_at":"2020-04-05T19:58:25Z","created_at":"2020-04-05T19:58:25Z","creator_user_login":"drcmda"}
{"number":18499,"comment_id":"609473475","body":"Let me try to rephrase your request to make sure I understand it.\r\n\r\nI think you're asking for a way for renderer-agnostic libraries to tell React to imperatively synchronously update a host node with given props. But without actually specifying *how* that update gets applied because presumably the renderer's host config already knows that. So the host node itself is opaque.","updated_at":"2020-04-05T19:59:04Z","created_at":"2020-04-05T19:59:04Z","creator_user_login":"gaearon"}
{"number":18499,"comment_id":"609473983","body":"Yes, that is exactly it.","updated_at":"2020-04-05T20:02:40Z","created_at":"2020-04-05T20:02:40Z","creator_user_login":"drcmda"}
{"number":18499,"comment_id":"609474285","body":"Do you always know the desired prop values at the moment of the call? Or can they depend on previous prop values?\r\n\r\nHow would you express a request to delete a prop with your proposed API? Should that even be possible?","updated_at":"2020-04-05T20:05:06Z","created_at":"2020-04-05T20:04:39Z","creator_user_login":"gaearon"}
{"number":18499,"comment_id":"609474952","body":"The values are known, it wouldn't have to depend on previous values. Although they are available anyway through ref.current pointing to the actual object. But, \r\n\r\n```jsx\r\nconst [ref, set] = useMutation()\r\n\r\nset(obj => ({ ... }))\r\n```\r\n\r\nwould be more than welcome, why not.\r\n\r\nDeletion isn't required, just like you can do:\r\n\r\n```jsx\r\n<xyz something={123} />\r\n\r\n// later\r\n\r\n<xyz />\r\n\r\nset({ x: 0 })\r\nset({ x: undefined }) // i guess? it's just like setState, which technically doesn't delete\r\n```\r\n\r\nThe reconciler handles it through commitUpdate(..., oldProps, newProps).","updated_at":"2020-04-05T20:15:39Z","created_at":"2020-04-05T20:10:34Z","creator_user_login":"drcmda"}
{"number":18499,"comment_id":"609475599","body":">Deletion isn't required, just like you can do:\r\n\r\nThere is a difference between deleting a prop and having a prop with a `null` or `undefined` value. Whether or not the renderer interprets them the same or differently is up to the renderer, but technically these are two different things. So I think we need to be clearer about the behavior here. If I pass `set({ a: 1 })` and then `set({ a: 2, b: 1 })` and then `set({ b: 2 })`, what happens exactly?\r\n\r\n","updated_at":"2020-04-05T20:15:53Z","created_at":"2020-04-05T20:15:31Z","creator_user_login":"gaearon"}
{"number":18499,"comment_id":"609475836","body":"It's interesting that `commitUpdate` doesn't exist [in the persistent mode](https://github.com/facebook/react/blob/1fd45437d781b1b905be2308447aa7793bbcb571/packages/react-reconciler/src/forks/ReactFiberHostConfig.custom.js#L109-L122). Which the new React Native renderer uses. If this is built into React, we'd need a way for it to work across both modes somehow.","updated_at":"2020-04-05T20:17:19Z","created_at":"2020-04-05T20:17:19Z","creator_user_login":"gaearon"}
{"number":18499,"comment_id":"609476200","body":"```jsx\r\nconst [ref, set] = useMutation()\r\n\r\nset({ a: 1 }) ---> obj.a === 1\r\nset({ a: 2, b: 1 }) ---> obj.a === 2, b === 1\r\nset({ b: 2 }) ---> obj.a === 2, b === 2\r\n```\r\n\r\nno deletion required imo. it's a escape hatch, similar to dangerouslysetinnerhtml. i guess the name \"useMutation\" is also too harmless, it should have a threatening, evil name with underscores. \r\n\r\n> commitUpdate doesn't exist in the persistent mode. Which the new React Native renderer uses. If this is built into React, we'd need a way for it to work across both modes somehow.\r\n\r\nIm curious how it can do that. I have never understood these modes in depth.","updated_at":"2020-04-05T20:20:59Z","created_at":"2020-04-05T20:20:02Z","creator_user_login":"drcmda"}
{"number":18499,"comment_id":"609476561","body":">Im curious how it can do that. I have never understood these modes in depth.\r\n\r\nMutation mode is for host APIs where you're dealing with mutable nodes that have methods like `insert` / `append` / `remove` / `update`. Like DOM.\r\n\r\nPersistent mode is for host APIs where the only way to update something is to create a copy of the tree with changes and then `replaceRoot(copy)`. Essentially an immutable host API. The new RN engine is written like this to better take advantage of multi-threading. I'm not sure how this proposal would work with it.","updated_at":"2020-04-05T20:23:59Z","created_at":"2020-04-05T20:22:35Z","creator_user_login":"gaearon"}
{"number":18499,"comment_id":"609477770","body":"I guess this is similar to the concept of the NativeDriver animations in RN, except the \"native\" part is actually still JavaScript. The way they solve the problem there is that **only non-layout props are animatable** — therefore, it is safe to do imperative updates \"out of band\" without worrying about what happens to the persistent data structures used for layout.","updated_at":"2020-04-05T20:30:53Z","created_at":"2020-04-05T20:30:53Z","creator_user_login":"gaearon"}
{"number":18499,"comment_id":"609479007","body":"I think what you're essentially asking for is a generalized `setNativeProps` which is (was) a thing in RN. However, I think that was deprecated in Fabric. @sebmarkbage and @shergin might be able to tell us more about how the thinking has been changing there. I know there's been a few iterations.","updated_at":"2020-04-05T20:39:51Z","created_at":"2020-04-05T20:39:33Z","creator_user_login":"gaearon"}
{"number":18499,"comment_id":"609479297","body":"In animatedjs, react-spring and framer-motion the user makes a specific commitment. Something like:\r\n\r\n```jsx\r\nconst props = useAnimation({ x: props.x }, [props.x])\r\nreturn <a.div style={{ left: x }} />\r\n```\r\n\r\nthese libs use \"<a.xyz>\" so that they can receive props directly, so that it is all still declarative on the outside and there is no conflict between props and mutations. They do mutate internally and \"a\" packs the platform knowledge.\r\n\r\nBut i imagine that hook as a very simple, no-rules tool. Whoever's using this knows what they are doing, and it's their responsibility to serve this in a way that's safe to use from the outside.\r\n\r\n> I think what you're essentially asking for is a generalized setNativeProps\r\n\r\nYes. Something like this as a hook, basically going through the same channel as a props update, but sync and without re-render.","updated_at":"2020-04-05T20:41:58Z","created_at":"2020-04-05T20:41:41Z","creator_user_login":"drcmda"}
{"number":18499,"comment_id":"650686427","body":"setNativeProps was removed in Fabric because it had undefined behavior that couldn't be modeled the same way between paper and fabric. Also, in paper all of the communication is async so this function could t happen sync. That could work in Fabric though.\n\nThe land mines with setNativeProps is that it was essentially setting state on the native views and there wasn't a guarantee for when that would get reset since it can be out of sync with a React render.\n\nFor example:\nReact renders a view with background blue\nSetNativeProps to set the background to green\nReact update to change border color. Should background reset to blue?\n\nReact doesn't know that the background is green, only the native view (or div) does. This makes it more complicated when that native view is actually removed from the hierarchy because of view flattening. That should be totally transparent to the user, but it can change the views that are rendered.\n\nIf something like this is added, it should have defined behavior for these kinds of gotchas. ","updated_at":"2020-06-28T03:43:46Z","created_at":"2020-06-28T03:43:46Z","creator_user_login":"TheSavior"}
{"number":26839,"comment_id":"1557516655","body":"I believe that's intentional to prevent collisions with manually chosen IDs.\r\n\r\nNot sure if there's a more appropriate solution for your case.","updated_at":"2023-05-22T16:13:44Z","created_at":"2023-05-22T16:13:44Z","creator_user_login":"gaearon"}
{"number":26839,"comment_id":"1557687709","body":"@gaearon I figured the naming scheme was to avoid any potential conflict. My preference would be an ID generation model that uses a non-special character wrapping or just a GUID.\r\n\r\ne.g. `REACTIDS1` or `f2ba2bd18ae847a0beb78f57f58d836d`\r\n\r\nHowever, if the wrapping characters were changed from `:` (colon) to either `-` (dash) or `_` (underscore) then the IDs _at least_ wouldn't conflict with CSS.\r\n\r\ne.g. `_S1_` or `-S1-`\r\n\r\nI know React itself isn't really supposed to be making changes specific to the web, but I do think underscores in particular are far less likely to conflict with other DSLs. I also feel like this is a good use-case for `useId` which is made more challenging because of this issue (this case is actually the first time I've needed `useId`, personally).","updated_at":"2023-05-22T18:22:52Z","created_at":"2023-05-22T18:19:20Z","creator_user_login":"EthanStandel"}
{"number":26839,"comment_id":"1618244898","body":"In my project, I utilize [adobe/react-spectrum](https://github.com/adobe/react-spectrum), which has recently integrated React.useId() for generating IDs for elements. You can find an example of this integration [here](https://github.com/adobe/react-spectrum/blob/main/packages/%40react-aria/ssr/src/SSRProvider.tsx#L158-L164).\r\n\r\nOn the surface, this change appears harmless. However, a problem arises when the generated ID serves not only as a mere identifier but also as a link between various elements, such as in the case of the 'aria-labelledby' attribute.\r\n\r\nFor instance, consider the following example, which was valid before react-spectrum began utilizing `React.useId()`:\r\n\r\n```javascript\r\nnotifications\r\n  .getButton()\r\n  .should('have.attr', 'aria-labelledby')\r\n  .then((ariaLabelledBy) => {\r\n    cy.get(`#${ariaLabelledBy}`)\r\n      .should('match', 'label')\r\n  });\r\n```\r\nAs evident from the above code snippet, we do not have control over the button's ID or the 'aria-labelledby' value. Consequently, this code fails with the new version since the colon (:) is not a valid selector and causes cy.get to fail. \r\n\r\nThis situation begs the question: who should be responsible for supplying a valid ID value?","updated_at":"2023-07-03T13:17:04Z","created_at":"2023-07-03T13:17:04Z","creator_user_login":"dkryaklin"}
{"number":26839,"comment_id":"1618845756","body":"The reason I would argue that I think that it's reasonable for React to own this fix is that the `id` prop for HTML elements is the defacto use-case given in the React docs the the `useId` hook.\r\n\r\nAlso React owns useInsertionEffect which they say is specifically for supporting CSS-in-JS libraries.\r\n\r\nSo I don't think that `useId` IDs being able to be used in HTML and referenced in CSS (or Cypress queries) should be considered outside of the bounds of React's responsibilities.","updated_at":"2023-07-03T16:31:04Z","created_at":"2023-07-03T16:31:04Z","creator_user_login":"EthanStandel"}
{"number":26839,"comment_id":"1630410099","body":"Accessibility libraries are using `useId` here to generate unique IDs on elements that are referenced\r\n\r\nThe cypress test above looks to be testing an accessibility criteria that the `id` should match the value of an `aria-labelledby` element\r\n\r\nThis can also apply for many other accessibility criteria such as:\r\n- htmlFor\r\n- aria-owns\r\n- aria-controls\r\n- aria-describedby\r\n- aria-activedescendant\r\n- etc....\r\n\r\nIt's then reasonable to assume that consumers of the library would be testing that these implementations of a11y attributes are rendered correctly... as they would aim to be library agnostic of course... and now each consumer will face these invalid characters in the unique ID...\r\n\r\nWhy not just make the IDs use valid characters...?\r\n\r\nAre you suggesting that libraries should write their own `useId` implementation for unique ID generation so that they can support these a11y criteria? That would give them complications for consistent IDs on server side rendering - I'd assume it would make sense to support their use case with the inbuilt hook","updated_at":"2023-07-11T08:49:37Z","created_at":"2023-07-11T08:47:02Z","creator_user_login":"beamery-tomht"}
{"number":26839,"comment_id":"1630941109","body":"To be clear, the ids generated by react _are_ valid, and do work correctly for accessibility purposes. In your tests, you can use `getElementById` to find the element instead of `querySelector` with a manually prepended `#`. Alternatively if you need a more complex selector, the id can be escaped with the built in `CSS.escape` function:\n\n```js\ndocument.querySelector(`#${CSS.escape(someId)} > .foo`)\n```","updated_at":"2023-07-11T14:30:39Z","created_at":"2023-07-11T14:30:39Z","creator_user_login":"devongovett"}
{"number":26839,"comment_id":"1631007019","body":"But in terms of generating CSS (which you may want to do by creating a style element which may happen on the server), you may not have access to `CSS.escape`. Plus, it's kind of weird that we should have to escape it in the fairly common use-case of a CSS query.","updated_at":"2023-07-11T15:08:59Z","created_at":"2023-07-11T15:08:59Z","creator_user_login":"EthanStandel"}
{"number":26839,"comment_id":"1631153106","body":"> Alternatively if you need a more complex selector, the id can be escaped with the built in CSS.escape function:\r\n\r\nThis is what we've had to do and cost us a lot of wasted time updating all of our tests to dodge this strange decision of putting colons in id values","updated_at":"2023-07-11T16:43:44Z","created_at":"2023-07-11T16:43:44Z","creator_user_login":"beamery-tomht"}
{"number":26839,"comment_id":"1676645715","body":"Hi\r\nI am Alfez mansuri.\r\nI am new to open source and just came across this issue and tried my hands on it.\r\nhttps://stackblitz.com/edit/react-ts-kvrc8e?file=Example.tsx\r\nPlease go through this.\r\nI have added a function that removes the special characters from id.","updated_at":"2023-08-14T04:14:35Z","created_at":"2023-08-14T04:14:35Z","creator_user_login":"AMalfez"}
{"number":26839,"comment_id":"1678014644","body":"> Hi I am Alfez mansuri. I am new to open source and just came across this issue and tried my hands on it. https://stackblitz.com/edit/react-ts-kvrc8e?file=Example.tsx Please go through this. I have added a function that removes the special characters from id.\r\n\r\nThat functionally works but... it's not really a good idea. The problem here is that React owns the generation of the ID. If you put this function in your code and then React changes how their ID generation implementation works and then you update React, you could end up with overlapping IDs. Like say that these become two separate IDs that React may return: `as:df` & `as-df`. Your function would convert them both to `asdf`, meaning that you'd have two copies of the same ID. If you use `CSS.escape` as is used in my example, there's no possible risk of that issue but of course `CSS.escape` doesn't work on the server. You could reimplement that, but you _really shouldn't modify the ID_.\r\n\r\nIn general though, this is definitely something that React must own the fix of so that the rest of us don't have to worry about it, or monkeypatch primitive hooks, or have to be concerned with how to handle the logic on the client & server separately for a DSL as commonly needed with React as CSS.","updated_at":"2023-08-14T20:29:38Z","created_at":"2023-08-14T20:29:38Z","creator_user_login":"EthanStandel"}
{"number":14398,"comment_id":"445128944","body":"You can save the previous context value in the component state","updated_at":"2018-12-07T05:41:39Z","created_at":"2018-12-07T05:41:39Z","creator_user_login":"nanmon"}
{"number":14398,"comment_id":"445194939","body":"Could you give an example how? I would have thought that without #13970 it would be the same problem","updated_at":"2018-12-07T10:47:38Z","created_at":"2018-12-07T10:47:38Z","creator_user_login":"Lexicality"}
{"number":14398,"comment_id":"518880208","body":"this is a big problem i'm running into, it causes an infinite loop that I have no good way of preventing it","updated_at":"2019-08-06T23:27:23Z","created_at":"2019-08-06T23:27:23Z","creator_user_login":"mgenev"}
{"number":14398,"comment_id":"537552562","body":"@mgenev You can set an instance variable for `previousContext` in `componentDidMount` then check it in `componentDidUpdate` against `this.context`. You'll need to update the previous context here also. This is still just a workaround. I'm annoyed that context is type `any` also.\r\n\r\n```js\r\nclass MyComponent extends Component {\r\n    private previousContext;\r\n\r\n    static contextType = MyContext;\r\n\r\n    componentDidMount() {\r\n        this.previousContext = context;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.previousContext.someProperty !== this.context.someProperty) {\r\n            this.doSomething();\r\n        }\r\n\r\n        this.previousContext = this.context;\r\n    }\r\n}\r\n```","updated_at":"2019-10-02T15:40:13Z","created_at":"2019-10-02T15:40:13Z","creator_user_login":"JoshClose"}
{"number":14398,"comment_id":"578496888","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-26T12:24:01Z","created_at":"2020-01-26T12:24:01Z","creator_user_login":"stale[bot]"}
{"number":14398,"comment_id":"578828520","body":"This issue is also still relevant, unless class components are being deprecated?\r\n\r\n","updated_at":"2020-01-27T16:23:58Z","created_at":"2020-01-27T16:23:58Z","creator_user_login":"Lexicality"}
{"number":14398,"comment_id":"578839888","body":"I sure hope not. I went full in on hooks and found I really don't like them. Class components with typescript are so much better IMO.","updated_at":"2020-01-27T16:46:54Z","created_at":"2020-01-27T16:46:54Z","creator_user_login":"JoshClose"}
{"number":14398,"comment_id":"619589380","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-04-26T17:22:34Z","created_at":"2020-04-26T17:22:34Z","creator_user_login":"stale[bot]"}
{"number":14398,"comment_id":"620072202","body":"Bump.","updated_at":"2020-04-27T15:51:04Z","created_at":"2020-04-27T15:51:04Z","creator_user_login":"JoshClose"}
{"number":14398,"comment_id":"620594050","body":"I would appreciate input from the React team on whether or not class components are deprecated","updated_at":"2020-04-28T13:05:47Z","created_at":"2020-04-28T13:05:47Z","creator_user_login":"Lexicality"}
{"number":14398,"comment_id":"631361467","body":"@Lexicality Read the docs:\r\nhttps://reactjs.org/docs/hooks-intro.html#gradual-adoption-strategy\r\n\r\n> TLDR: There are no plans to remove classes from React.\r\n","updated_at":"2020-05-20T09:34:40Z","created_at":"2020-05-20T09:34:40Z","creator_user_login":"tennox"}
{"number":14398,"comment_id":"631376253","body":"Removing and deprecation aren't the same thing.\r\nI'd like to know if I need to keep bothering to bump these real issues regarding context and class components or if I should let the stalebot kill them all because class components are dead and just being allowed to float behind functional components + hooks.","updated_at":"2020-05-20T10:02:20Z","created_at":"2020-05-20T10:02:20Z","creator_user_login":"Lexicality"}
{"number":14398,"comment_id":"678684695","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-08-22T19:46:58Z","created_at":"2020-08-22T19:46:58Z","creator_user_login":"stale[bot]"}
{"number":14398,"comment_id":"679190396","body":"bump","updated_at":"2020-08-24T15:17:28Z","created_at":"2020-08-24T15:17:28Z","creator_user_login":"JoshClose"}
{"number":14398,"comment_id":"714657302","body":"@Lexicality  As the workaround you can create HOC, pass context value as props and compare it in componentDidUpdate.\r\n\r\n```\r\nconst withContextValue = Component => props => {\r\n  return (\r\n    <ExampleContext.Consumer>\r\n      {value => <Component {...props} contextValue={value} />}\r\n    </ExampleContext.Consumer>\r\n  );\r\n};\r\n\r\nwithContextValue(\r\n  class DemoComponent extends Component {\r\n    componentDidUpdate(prevProps) {\r\n      if (prevProps.contextValue !== this.props.contextValue) {\r\n        //... do something\r\n      }\r\n    }\r\n  }\r\n);\r\n```\r\n","updated_at":"2020-10-22T17:51:21Z","created_at":"2020-10-22T17:51:21Z","creator_user_login":"slavik-chapelskyi"}
{"number":14398,"comment_id":"716568839","body":"> I would appreciate input from the React team on whether or not class components are deprecated\r\n\r\nWe don't have plans to remove class components. We also don't have plans to expand the class component API.","updated_at":"2020-10-26T14:06:16Z","created_at":"2020-10-26T14:06:16Z","creator_user_login":"bvaughn"}
{"number":14398,"comment_id":"717391378","body":"Does that mean this issue and #13970 won't be fixed?\r\nBoth of them caused fairly serious issues for me using the new context API in the past. I had to resort to workarounds like the one @slavik-chapelskyi suggested which make the `contextType` attribute basically useless. ","updated_at":"2020-10-27T17:09:47Z","created_at":"2020-10-27T17:09:47Z","creator_user_login":"Lexicality"}
{"number":13424,"comment_id":"414389263","body":"@gaearon I would love to take this one whats the difficulty level?","updated_at":"2018-08-20T17:01:00Z","created_at":"2018-08-20T17:01:00Z","creator_user_login":"Kachulio1"}
{"number":13424,"comment_id":"414400862","body":"I’m not sure but since it has always been broken I guess it’s not the easiest one. I’m not even sure it can be solved nicely. ","updated_at":"2018-08-20T17:37:22Z","created_at":"2018-08-20T17:37:22Z","creator_user_login":"gaearon"}
{"number":13424,"comment_id":"417574935","body":"@gaearon Can it be solved by passing the input value at that moment along before running setState?\r\n\r\nhttps://github.com/facebook/react/blob/672e859d311536ddf5f09fb47dcb84007703aa65/packages/react-reconciler/src/ReactFiberClassComponent.js#L174-L190\r\n\r\n","updated_at":"2018-08-31T08:05:37Z","created_at":"2018-08-31T07:15:38Z","creator_user_login":"whs-dot-hk"}
{"number":13424,"comment_id":"417608416","body":"Maybe, I haven't dived deep into it. Send a PR?","updated_at":"2018-08-31T09:28:42Z","created_at":"2018-08-31T09:28:42Z","creator_user_login":"gaearon"}
{"number":13424,"comment_id":"417689910","body":"Sorry I can't figure out another way but add another snapshot argument, which is ugly... so let it be","updated_at":"2018-09-03T03:19:59Z","created_at":"2018-08-31T14:56:02Z","creator_user_login":"whs-dot-hk"}
{"number":13424,"comment_id":"424429272","body":"Instead of using this ` onChange={this.handleChange}`, you can use `onChange={event => this.handleChange(event.target.value)} />`","updated_at":"2018-09-25T17:21:45Z","created_at":"2018-09-25T17:21:45Z","creator_user_login":"vinay72"}
{"number":13424,"comment_id":"614334988","body":"The issue here is not only because of **non-React capture phase listener** . I have a separate use case reproducing the same issue, since react makes batch updates to state once per event handler so if multiple events are attached (eg **onKeydown** and **onChange**) here onKeydown handler triggers a state update using the useReducer hook which in turn triggers a re-render thus re-setting the updated/changed DOM node value to what is present in the state thus not firing onChange event at all. \r\nThese two changes worked for me\r\n\r\n1. replacing the onKeydown with onKeyup thus triggering it after the onChange event\r\n2. handling the keyDown handler in an async way, refer to this for more details [https://reactjs.org/docs/events.html#event-pooling]()\r\n\r\n`\r\nonKeyDown = {(e) => \r\n{ \r\n       e.persist();\r\n       setTimeout(() => {\r\n           this.onKeyDown(e)\r\n       }, 0);\r\n }}\r\n`","updated_at":"2020-04-15T23:53:37Z","created_at":"2020-04-15T23:48:32Z","creator_user_login":"arkakkar"}
{"number":13424,"comment_id":"618453594","body":"Oh man, I wish I'd stumbled across this thread earlier - was banging my head against this issue for a while and thought I was going insane.\r\n\r\nI managed to reproduce my simplified use case [here](https://codesandbox.io/s/react-hooks-addeventlistener-conflict-db76e?file=/src/index.js).\r\n\r\nI have an application where I've started to add in keyboard shortcuts, hence why I was making use of `document.addEventListener` as well as other form inputs on the page.\r\n\r\nWhat I was seeing in my app while I was trying to debug this really confused me. When I added `debugger` statements within the relevant `useEffect` hook I could see the text appear in the input then disappear within the `useEffect` hook's cleanup function - all without firing the input's `onChange`.\r\n\r\nWhile I appreciate that it might not be pragmatic to try and fix what might be considered an \"extremely rare\" issue; how realistic would it be to add a warning for users about this potential conflict? Maybe even just adding a \"N.B.\" to the documentation?\r\n\r\nWhen I searched for \"addEventListener\" on the reactjs.org site it took me to [Handling Events](https://reactjs.org/docs/handling-events.html). Maybe a note here could save people some hassle? Or making a \"Gotchas\" page for known edge-case issues like this that are known but aren't going to be fixed anytime soon?\r\n\r\nIn any case, thanks for filing this issue in the first place - it gave me some much needed closure!","updated_at":"2020-04-23T15:11:36Z","created_at":"2020-04-23T15:11:36Z","creator_user_login":"owenDods"}
{"number":13424,"comment_id":"721694003","body":"I got this issue on a requirement where the select file dialog should automatically open when the form is opened/rendered/mounted (like an autofocus behaviour). I can't avoid the form re-render due to other code's part. In this case, the select file dialog opens but the input file onChange event doesn't trigger when the user confirms the select the files.\r\n\r\nEdit: in case someone is having the same required and is looking for a solution, I did a workaround by creating a second input outside the form.","updated_at":"2020-11-04T17:11:52Z","created_at":"2020-11-04T12:07:07Z","creator_user_login":"peluprvi"}
{"number":13424,"comment_id":"871775318","body":"I have come across this bug in practice - mouse coordinates are kept in state and communicated via props. The result is that controlled select elements are inoperable by the mouse, but work fine with the keyboard.","updated_at":"2021-06-30T22:48:54Z","created_at":"2021-06-30T22:47:58Z","creator_user_login":"ottworks"}
{"number":13424,"comment_id":"1036983681","body":"> I got this issue on a requirement where the select file dialog should automatically open when the form is opened/rendered/mounted (like an autofocus behaviour). I can't avoid the form re-render due to other code's part. In this case, the select file dialog opens but the input file onChange event doesn't trigger when the user confirms the select the files.\r\n> \r\n> Edit: in case someone is having the same required and is looking for a solution, I did a workaround by creating a second input outside the form.\r\n\r\nHi Can you show me what did you do on your work around please ? Thank you !","updated_at":"2022-02-12T04:13:09Z","created_at":"2022-02-12T04:13:09Z","creator_user_login":"westlife29"}
{"number":13424,"comment_id":"1046776565","body":"I was able to leverage queueMicrotask https://developer.mozilla.org/en-US/docs/Web/API/queueMicrotask without having to move the input out. @peluprvi ","updated_at":"2022-02-21T11:27:12Z","created_at":"2022-02-21T11:27:12Z","creator_user_login":"rudhman"}
{"number":13424,"comment_id":"1049195365","body":"Repro with React 18 and hooks: https://codesandbox.io/s/react-18-onchange-dropped-if-re-rendered-in-non-react-capture-listener-forked-slrhyh","updated_at":"2022-02-23T20:39:48Z","created_at":"2022-02-23T20:39:48Z","creator_user_login":"eps1lon"}
{"number":13956,"comment_id":"485135634","body":"If replicated in pure HTML without React, this behaves completely differently than the React examples above. Pure HTML behaviour seems to match more with my expectations than React's behaviour (with or without circumventing synthetic events).\r\n\r\nSimplest to see the [codesandbox][1] and compare (`styles.css` is reused from React examples).\r\n\r\n[1]: https://codesandbox.io/s/k38q266xmr","updated_at":"2019-04-20T15:24:23Z","created_at":"2019-04-20T15:23:50Z","creator_user_login":"nataliemarleny"}
{"number":13956,"comment_id":"572935952","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-10T08:53:41Z","created_at":"2020-01-10T08:53:41Z","creator_user_login":"stale[bot]"}
{"number":13956,"comment_id":"575536637","body":"Closing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please create a new issue with up-to-date information. Thank you!\n","updated_at":"2020-01-17T08:59:48Z","created_at":"2020-01-17T08:59:48Z","creator_user_login":"stale[bot]"}
{"number":13956,"comment_id":"575586001","body":"I'm facing a similar problem. I have a list with elements that represent entities, on hover I want to show actions for these entities, such as a delete action. When I delete an entity, the list moves up to fill the 'gap' that it would have created, placing the cursor on top of the next element, however this does not trigger the `onMouseEnter` event on that element, thus not showing the actions.\r\n\r\nAs far as I'm aware React does not provide other API's that would allow me to capture an event that the cursor has entered this element when the DOM's element change position instead of the user moving the mouse. I have also tried `onMouseOver`, but that also only triggers after the user having to move the mouse.","updated_at":"2020-01-17T11:18:21Z","created_at":"2020-01-17T11:18:21Z","creator_user_login":"elertan"}
{"number":13956,"comment_id":"737384838","body":"On my website I'm using `onMouseEnter` for tooltips, since this is fired while hovering on desktops but only after clicking on touch devices. By doing this I'm facing a similar problem where `onMouseEnter` is not fired on touch devices, if a Portal is closed before this action (and thus removing the Portal node from the DOM). \r\n\r\nIn my case it would be opening an overlay using a Portal, closing the overlay by either clicking the background or a close button and then opening a tooltip (by using `onMouseEnter`). \r\n\r\nI created a reproducible example of this: https://codesandbox.io/s/sweet-shtern-0dm47, where it's important to load the example as a touch device. If you open the overlay, close the overlay by clicking it and then click the log button it won't log anything on touch devices. After closing the overlay you first have to click another part of the page, before the `onMouseEnter` will trigger.\r\n\r\nI'm guessing the `onMouseEnter` doesn't trigger because internally in React it depends on the `onMouseOut` event of the removed node. I tried simulating mouse events after closing the overlay to get the mouse back in the document, which didn't work. Using the native `window.addEventListener('mouseenter', logFunction)` does work as expected.","updated_at":"2020-12-02T17:38:07Z","created_at":"2020-12-02T17:38:07Z","creator_user_login":"gaauwe"}
{"number":13956,"comment_id":"832973831","body":"The `onMouseEnter` event also isn't dispatched when a new element replaces an old element (this also applies to `onPointerEnter` too). See this codesandbox and check the console: https://codesandbox.io/s/react-mouseenter-bug-vq1zg?file=/src/App.js\r\n\r\nNote that the `onMouseOver` (and `onPointerOver`) event dispatches correctly, so one solution is to use `onMouseOver` instead of `onMouseEnter` and make the event handler idempotent.\r\n\r\nI ran into this when creating [React Interactive](https://github.com/rafgraph/react-interactive) and replaced `onMouseEnter` with `onMouseOver` to solve it.","updated_at":"2021-05-06T01:03:44Z","created_at":"2021-05-05T20:08:53Z","creator_user_login":"rafgraph"}
{"number":13956,"comment_id":"1082055744","body":"Same problem.\r\n\r\n## Case\r\n\r\nWhen some sibling child re-render, the `onMouseEnter` event doesn't dispatched.\r\n\r\n## Reproduce\r\n\r\n> ⚠️ Please, turn on mobile view in DevTools\r\n\r\nhttps://codesandbox.io/s/facebook-react-issues-13956-onmouseenter-doesnt-dispatched-if-sibling-child-re-render-iurgns\r\n\r\n![image](https://user-images.githubusercontent.com/5850354/160654397-07a67319-a5cd-4916-9316-c98da096e5bf.png)\r\n\r\n**Image 1.** ✅ Work correctly if sibling child doesn't re-render\r\n\r\n![image](https://user-images.githubusercontent.com/5850354/160654347-ec6ca951-8644-43c2-afd7-578044507190.png)\r\n\r\n**Image 2.** ❌ Work incorrectly if sibling child re-render\r\n\r\n<details>\r\n  <summary>Code backup, if the codesandbox link expires</summary>\r\n  \r\n  ```javascript\r\n  // @ts-nocheck\r\n  import React from \"react\";\r\n\r\n  const selectStyle = {\r\n    padding: \"8px 12px\",\r\n    border: \"1px solid\"\r\n  };\r\n\r\n  const dropdownStyle = {\r\n    padding: \"8px 12px\",\r\n    border: \"1px solid tomato\"\r\n  };\r\n\r\n  // Example with funciton component\r\n  const SelectFC = ({ options, searchable }) => {\r\n    const [opened, setOpened] = React.useState(false);\r\n    const [selected, setSelected] = React.useState(\"choose\");\r\n\r\n    const handleClick = React.useCallback(() => {\r\n      setOpened(true);\r\n    }, []);\r\n\r\n    const handleOptionClick = React.useCallback((event) => {\r\n      console.log(\"[handleOptionClick]\");\r\n      setSelected(event.currentTarget.dataset.label);\r\n      setOpened(false);\r\n    }, []);\r\n\r\n    const handleOptionHover = React.useCallback(() => {\r\n      console.log(\"[handleOptionHover]\");\r\n    }, []);\r\n\r\n    const handleOptionMouseDown = React.useCallback((event) => {\r\n      console.log(\"[handleOptionMouseDown]\");\r\n      event.preventDefault();\r\n    }, []);\r\n\r\n    const renderOption = React.useCallback(\r\n      ({ label, value }) => {\r\n        return (\r\n          <div\r\n            key={value}\r\n            data-label={label}\r\n            onClick={handleOptionClick}\r\n            onMouseDown={handleOptionMouseDown}\r\n            // ⚠️ Doesn't dispatched if sibling child re-render\r\n            onMouseEnter={handleOptionHover}\r\n          >\r\n            {label}\r\n          </div>\r\n        );\r\n      },\r\n      [handleOptionClick, handleOptionHover, handleOptionMouseDown]\r\n    );\r\n\r\n    const dropdownContent = options.map(renderOption);\r\n\r\n    return (\r\n      <div>\r\n        <div style={selectStyle}>\r\n          {opened && searchable ? (\r\n            <input type=\"text\" />\r\n          ) : (\r\n            <div onClick={handleClick}>{selected}</div>\r\n          )}\r\n        </div>\r\n        {opened && <div style={dropdownStyle}>{dropdownContent}</div>}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // Example with class component\r\n  class SelectClass extends React.Component {\r\n    scrollBoxRef = React.createRef();\r\n\r\n    state = {\r\n      opened: false,\r\n      selected: \"choose\"\r\n    };\r\n\r\n    open = () => {\r\n      this.setState(() => ({ opened: true }));\r\n    };\r\n\r\n    close = () => {\r\n      this.setState(() => ({ opened: false }));\r\n    };\r\n\r\n    handleClick = () => {\r\n      this.state.opened ? this.close() : this.open();\r\n    };\r\n\r\n    handleOptionClick = (event) => {\r\n      console.log(\"[handleOptionClick]\");\r\n      const label = event.currentTarget.dataset.label;\r\n      this.setState(() => ({\r\n        selected: label\r\n      }));\r\n      this.close();\r\n    };\r\n\r\n    handleOptionHover = () => {\r\n      console.log(\"[handleOptionHover]\");\r\n    };\r\n\r\n    handleOptionMouseDown = (event) => {\r\n      console.log(\"[handleOptionMouseDown]\");\r\n      event.preventDefault();\r\n    };\r\n\r\n    renderOption = ({ label, value }) => {\r\n      return (\r\n        <div\r\n          key={value}\r\n          data-label={label}\r\n          onClick={this.handleOptionClick}\r\n          onMouseDown={this.handleOptionMouseDown}\r\n          // ⚠️ Doesn't dispatched if sibling child re-render\r\n          onMouseEnter={this.handleOptionHover}\r\n        >\r\n          {label}\r\n        </div>\r\n      );\r\n    };\r\n\r\n    render() {\r\n      const { options, searchable } = this.props;\r\n      const { opened, selected } = this.state;\r\n      const dropdownContent = options.map(this.renderOption);\r\n\r\n      return (\r\n        <div>\r\n          <div style={selectStyle}>\r\n            {opened && searchable ? (\r\n              <input type=\"text\" />\r\n            ) : (\r\n              <div onClick={this.handleClick}>{selected}</div>\r\n            )}\r\n          </div>\r\n          {opened && (\r\n            <div ref={this.scrollBoxRef} style={dropdownStyle}>\r\n              {dropdownContent}\r\n            </div>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  const options = [\r\n    {\r\n      label: \"Apple\",\r\n      value: \"apple\"\r\n    },\r\n    {\r\n      label: \"Orange\",\r\n      value: \"orange\"\r\n    },\r\n    {\r\n      label: \"Bannana\",\r\n      value: \"bannana\"\r\n    }\r\n  ];\r\n\r\n  export const App = () => {\r\n    const [searchable, setSearchable] = React.useState(true);\r\n    return (\r\n      <div>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={searchable}\r\n            onChange={(event) => setSearchable(event.target.checked)}\r\n          />\r\n          searchable\r\n        </label>\r\n        <SelectClass options={options} searchable={searchable} />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  ReactDOM.render(\r\n    <App />,\r\n    document.getElementById(\"root\")\r\n  );\r\n  ```\r\n  \r\n</details>\r\n","updated_at":"2022-03-29T16:10:01Z","created_at":"2022-03-29T15:55:37Z","creator_user_login":"inomdzhon"}
{"number":13956,"comment_id":"1365613732","body":"same problem here","updated_at":"2022-12-27T05:03:18Z","created_at":"2022-12-27T05:03:18Z","creator_user_login":"tianzhich"}
{"number":14285,"comment_id":"440179666","body":"@merongmerongmerong what exactly would you expect to happen here? In this example the `Foo` component being unmounted when the effect's cleanup funciton is called. You can't update state for an unmounted component, so this behavior seems expected.\r\n\r\nIf you have an effect that gets cleaned up *in a component that isn't being unmounted* it calls the reducer as expected: https://codesandbox.io/s/vqr9olv4o7\r\n\r\nIn this case the behavior seems correct, but maybe it would be good to warn here.","updated_at":"2018-11-20T08:04:50Z","created_at":"2018-11-20T08:04:50Z","creator_user_login":"aweary"}
{"number":14285,"comment_id":"440191921","body":"@aweary \r\nthanks for your reply, I was trying to manage blob data using reducer(calling createObjectURL, revokeObjectURL). I expected the cleanup function would dispatch action which calls revokeObjectURL. \r\n\r\nI came to think of it now, I should not use reducer in this case. but, It is strange that `dispach(action)` is called but nothing is happened","updated_at":"2018-11-20T08:50:50Z","created_at":"2018-11-20T08:50:50Z","creator_user_login":"merongmerongmerong"}
{"number":14285,"comment_id":"440275761","body":"Reducers should be pure — so you shouldn't perform side effects like `revokeObjectURL` there.\r\n\r\n`dispatch` doesn't do anything when unmounting, just like `setState` doesn't do anything. Their only purpose is to re-render, but when unmounting it's too late for rendering.\r\n\r\n> It is strange that dispach(action) is called but nothing is happened\r\n\r\nWe should probably add a warning. I'll rename this issue to track that.","updated_at":"2018-11-20T13:36:44Z","created_at":"2018-11-20T13:36:44Z","creator_user_login":"gaearon"}
{"number":14285,"comment_id":"441211634","body":"Hi @gaearon,\r\n\r\nLooks doable, can I try this one?","updated_at":"2018-11-23T10:59:49Z","created_at":"2018-11-23T10:59:49Z","creator_user_login":"ThierryCols"}
{"number":14285,"comment_id":"441214787","body":"Sure ","updated_at":"2018-11-23T11:14:43Z","created_at":"2018-11-23T11:14:43Z","creator_user_login":"gaearon"}
{"number":14285,"comment_id":"441376873","body":"Damn, totally forgot I'm actually leaving for two weeks. I'll be more than happy to handle this when I'm back but if anybody feels like doing it I totally understand. 😢 ","updated_at":"2018-11-24T15:52:46Z","created_at":"2018-11-24T15:52:46Z","creator_user_login":"ThierryCols"}
{"number":14285,"comment_id":"460095449","body":"@gaearon It seems the reported issue of calling dispatch() from useEffect() cleanup function and not seeing \"bar\" logged to the console (because the reducer function was not evaluated on an unmounted component) is no longer the case on master. The same example logs \"foo\", \"bar\", \"baz\" to the console on master. \r\n\r\nDispatchAction now eagerly calls the reducer here https://github.com/facebook/react/blob/c21c41ecfad46de0a718d059374e48d13cf08ced/packages/react-reconciler/src/ReactFiberHooks.js#L1092\r\n\r\nIn a scenario like above where dispatch() was called from useEffect cleanup function, eagerState may not equal currentState and an extra scheduleWork is called (even though the component is unmounting). \r\n\r\nThis is my first dive into the React codebase so I may be misunderstanding this, but wanted to check in after doing some digging and make sure adding a warning is enough, or if the fact that the cleanup function is actually scheduling work changes this (or none of the above 🙂)\r\n","updated_at":"2019-02-03T22:34:33Z","created_at":"2019-02-03T22:34:33Z","creator_user_login":"tijwelch"}
{"number":14285,"comment_id":"461882688","body":"@tijwelch I think the actionable thing here is to add a test to `ReactHooks-test` so that we can confirm if the behavior is intentional and don't regress on it. Wanna do it?","updated_at":"2019-02-08T17:33:48Z","created_at":"2019-02-08T17:33:44Z","creator_user_login":"gaearon"}
{"number":14285,"comment_id":"462054803","body":"Sure. Will try this weekend.","updated_at":"2019-02-09T15:45:23Z","created_at":"2019-02-09T15:45:23Z","creator_user_login":"tijwelch"}
{"number":14285,"comment_id":"462073989","body":"Hi @gaearon. I submitted a PR with this test. \r\n\r\nWhen this issue was created, calling dispatch from the useEffect cleanup function did not call the reducer. As described in comments above, this seemed ok because the component was unmounting. In the current version of React, the reducer does get called in this scenario. The test in my PR confirms this.   ","updated_at":"2019-02-09T19:50:45Z","created_at":"2019-02-09T19:50:45Z","creator_user_login":"tijwelch"}
{"number":14285,"comment_id":"463291635","body":"As @acdlite explained here https://github.com/facebook/react/pull/14809#issuecomment-462493837, it's not ideal that the reducer gets called for a component that is being unmounted, but due to the eagerReducer optimization, this is currently happening.\r\n\r\nWould be curious to see how you think about this kind of thing. Does this warrant a warning when calling the reducer on an unmounting component? Or should the eager reducer optimization have a check to avoid calling the reducer if the component is unmounted? Or maybe the current state is fine. \r\n\r\nI realize this might be low on the hooks priority list but it's helping me understand the internals (and how decisions are made)","updated_at":"2019-02-13T17:32:15Z","created_at":"2019-02-13T17:32:15Z","creator_user_login":"tijwelch"}
{"number":14285,"comment_id":"466011364","body":"If we know for sure the component is being unmounted it seems wasteful to call the reducer. So maybe you can find a fix that prevents that from happening?","updated_at":"2019-02-21T14:05:52Z","created_at":"2019-02-21T14:05:52Z","creator_user_login":"gaearon"}
{"number":14285,"comment_id":"473018306","body":"@gaearon  can we have a `useReducer` version without the Warn or can tell me how to create one?.\r\nI some uses cases is desirable **do nothing** on dispatch calls. I just trying to avoid the `useEffect` cleanup cause I don't need make this check in a custom hook and because `useEffect` is a little heavy and slow down my code 3x  ","updated_at":"2019-03-14T19:14:01Z","created_at":"2019-03-14T19:11:56Z","creator_user_login":"bySabi"}
{"number":14285,"comment_id":"473201769","body":"Something is wrong with current `useEffect` implementation. \r\n\r\nThis is my case: rendering 5000 component like this:\r\n```\r\n const Comp = () => {\r\n     useState();\r\n     useEffect(()=>{}, []);\r\n     return null;\r\n}\r\n```\r\n\r\nThe line `useEffect(()=>{}, []);` that not do nothing slow down rendering time 3X compare to the same `Comp` without `useEffect`.\r\n\r\nTesting `Comp` with `useLayoutEffect(()=>{}, [])` it is working fine, it does not have any performance penalty.\r\n\r\nI do 4 rounds of **render 5000 components** and the problem is only on the first round.\r\n","updated_at":"2019-03-15T08:36:24Z","created_at":"2019-03-15T08:36:24Z","creator_user_login":"bySabi"}
{"number":14285,"comment_id":"819366666","body":"I was trying to use dispatch method of a parent component within an unmounting child component and \r\nthe next child component ( who is a consumer of the provider ) got the old state on mount and then it rerenders as parent state has been changed \r\n\r\nhere's the demo :  https://codesandbox.io/s/usereducer-behaviour-o6ejv\r\n\r\ntry changing value in either and click final tab.","updated_at":"2021-04-14T09:13:29Z","created_at":"2021-04-14T09:13:29Z","creator_user_login":"adharshmk96"}
{"number":14285,"comment_id":"1557819596","body":"Is this issue open @gaearon ? Can I work on it?","updated_at":"2023-05-22T19:27:24Z","created_at":"2023-05-22T19:27:24Z","creator_user_login":"Yashh221"}
{"number":25638,"comment_id":"1304263081","body":"Ignore the lint failures please, they're related to the files that I won't land!","updated_at":"2022-11-04T21:10:03Z","created_at":"2022-11-04T21:10:03Z","creator_user_login":"rbalicki2"}
{"number":25638,"comment_id":"1306383459","body":"> Jest\r\nI would love to add tests. But IMO, there aren't any reasonable unit tests to add here, and adding e2e tests is a larger undertaking that I don't have the bandwidth for right now.\r\n\r\nThe reason I think there aren't any reasonable unit tests to write is that the core of the logic deals with whether we are profiling, but the source of truth for whether we are profiling is in quite a few places. Testing one bit of that is essentially testing an implementation detail that doesn't guarantee the correctness of the larger system.","updated_at":"2022-11-07T23:48:22Z","created_at":"2022-11-07T23:48:22Z","creator_user_login":"rbalicki2"}
{"number":25638,"comment_id":"1516333003","body":"Hi @rbalicki2! \n\nThank you for your pull request. \n\nWe **require** contributors to sign our **Contributor License Agreement**, and yours needs attention.\n\nYou currently have a record in our system, but the CLA is no longer valid, and will need to be **resubmitted**.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2325638). Thanks!","updated_at":"2023-04-20T13:29:21Z","created_at":"2023-04-20T13:29:21Z","creator_user_login":"facebook-github-bot"}
{"number":25301,"comment_id":"1251766411","body":"Hi @wenzi0github! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Freact%20%2325301). Thanks!","updated_at":"2022-09-20T02:39:18Z","created_at":"2022-09-20T02:39:18Z","creator_user_login":"facebook-github-bot"}
{"number":25301,"comment_id":"1251769176","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: b2748907c3cffb226447417957f2608a7c60c27d...c851a50f4542c7a6a5753dc653d6dece352d5bf2\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/c851a50f4542c7a6a5753dc653d6dece352d5bf2/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=b2748907c3cffb226447417957f2608a7c60c27d) | **=** | 135.04 kB | 135.04 kB | = | 43.33 kB | 43.33 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/c851a50f4542c7a6a5753dc653d6dece352d5bf2/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=b2748907c3cffb226447417957f2608a7c60c27d) | **=** | 142.50 kB | 142.50 kB | = | 45.51 kB | 45.51 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/c851a50f4542c7a6a5753dc653d6dece352d5bf2/files/facebook-www/ReactDOM-prod.classic.js?compare=b2748907c3cffb226447417957f2608a7c60c27d) | **=** | 489.88 kB | 489.85 kB | = | 87.21 kB | 87.20 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/c851a50f4542c7a6a5753dc653d6dece352d5bf2/files/facebook-www/ReactDOM-prod.modern.js?compare=b2748907c3cffb226447417957f2608a7c60c27d) | **=** | 475.17 kB | 475.14 kB | = | 85.01 kB | 85.00 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/c851a50f4542c7a6a5753dc653d6dece352d5bf2/files/facebook-www/ReactDOMForked-prod.classic.js?compare=b2748907c3cffb226447417957f2608a7c60c27d) | **=** | 489.88 kB | 489.85 kB | = | 87.21 kB | 87.20 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against c851a50f4542c7a6a5753dc653d6dece352d5bf2\n</p>\n","updated_at":"2022-09-20T02:44:54Z","created_at":"2022-09-20T02:44:54Z","creator_user_login":"sizebot"}
{"number":25301,"comment_id":"1252461755","body":"successfully registerd on cla!","updated_at":"2022-09-20T14:43:47Z","created_at":"2022-09-20T14:43:47Z","creator_user_login":"wenzi0github"}
{"number":25301,"comment_id":"1252495066","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-09-20T15:04:34Z","created_at":"2022-09-20T15:04:34Z","creator_user_login":"facebook-github-bot"}
{"number":25301,"comment_id":"1252495165","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-09-20T15:04:38Z","created_at":"2022-09-20T15:04:38Z","creator_user_login":"facebook-github-bot"}
{"number":24590,"comment_id":"1147581703","body":"Related - would it also be possible to provide a UMD build as well?  We're looking to use this in the new version of `react-router` but having some trouble bundling our own UMD module without ESM or UMD support.","updated_at":"2022-06-06T15:29:55Z","created_at":"2022-06-06T15:29:55Z","creator_user_login":"brophdawg11"}
{"number":25637,"comment_id":"1310127687","body":"For my opinion react should not give className utilities, it will distract focus from other things. I would be a liar if I said that i don't use third party libraries for this thing, but it's not a big matter. I would suggest [clsx](https://www.npmjs.com/package/clsx)","updated_at":"2022-11-10T11:13:41Z","created_at":"2022-11-10T11:13:41Z","creator_user_login":"hasanbisha"}
{"number":25415,"comment_id":"1268201570","body":"I think I can do this,\r\nCan you assign this issue to me, please?\r\n","updated_at":"2022-10-05T09:52:46Z","created_at":"2022-10-05T09:45:10Z","creator_user_login":"muhammadjufry"}
{"number":25415,"comment_id":"1270323082","body":"You sure can do this","updated_at":"2022-10-06T15:59:15Z","created_at":"2022-10-06T15:59:15Z","creator_user_login":"greenlife-developer"}
{"number":25415,"comment_id":"1478851273","body":"Bumping. Any updates?\r\nI just had this happen to me and I can reproduce this.\r\nI can't post the code publicly because this is also an internal app but I am up for a screenshare or something to go through debugging it.","updated_at":"2023-03-22T02:58:06Z","created_at":"2023-03-22T02:55:34Z","creator_user_login":"elliot-huffman"}
{"number":25677,"comment_id":"1313676618","body":"It seems to be unfortunate, but expected behaviour. Suspended content is hidden using `display: none`, which means there is no good or simple way to make this affect portals as well.","updated_at":"2022-11-14T13:12:47Z","created_at":"2022-11-14T13:12:47Z","creator_user_login":"vkurchatkin"}
{"number":25602,"comment_id":"1298813222","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 6883d79445f38e2cdabf6fe1fa04cb44c2644c1c...ec6e0f737291b75439272f7d0b1b3ef8c182fe30\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/ec6e0f737291b75439272f7d0b1b3ef8c182fe30/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=6883d79445f38e2cdabf6fe1fa04cb44c2644c1c) | **=** | 153.14 kB | 153.14 kB | = | 48.80 kB | 48.80 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/ec6e0f737291b75439272f7d0b1b3ef8c182fe30/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=6883d79445f38e2cdabf6fe1fa04cb44c2644c1c) | **=** | 155.06 kB | 155.06 kB | = | 49.41 kB | 49.41 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/ec6e0f737291b75439272f7d0b1b3ef8c182fe30/files/facebook-www/ReactDOM-prod.classic.js?compare=6883d79445f38e2cdabf6fe1fa04cb44c2644c1c) | **=** | 528.79 kB | 528.79 kB | = | 94.47 kB | 94.47 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/ec6e0f737291b75439272f7d0b1b3ef8c182fe30/files/facebook-www/ReactDOM-prod.modern.js?compare=6883d79445f38e2cdabf6fe1fa04cb44c2644c1c) | **=** | 514.04 kB | 514.04 kB | = | 92.31 kB | 92.31 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/ec6e0f737291b75439272f7d0b1b3ef8c182fe30/files/facebook-www/ReactDOMForked-prod.classic.js?compare=6883d79445f38e2cdabf6fe1fa04cb44c2644c1c) | **=** | 528.79 kB | 528.79 kB | = | 94.47 kB | 94.47 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against ec6e0f737291b75439272f7d0b1b3ef8c182fe30\n</p>\n","updated_at":"2022-11-01T16:41:18Z","created_at":"2022-11-01T16:41:18Z","creator_user_login":"sizebot"}
{"number":25979,"comment_id":"1377789450","body":"To see this behavior in production today, in React 18, you can try resuspending a Suspense boundary without `startTransition`. You're not typically supposed to do this because they should use `startTransition` but it can happen.\r\n\r\n```\r\n<Suspense fallback={...}>\r\n  <ThingWithFocus />\r\n  <SuspendTemporarily />\r\n</Suspense>\r\n```\r\n\r\nIf this has already mounted once, so it's visible and you have the focus, then SuspendTemporarily resuspends it'll hide the current tree but it won't delete it from the DOM. It's the same DOM nodes so that they preserve their state. Although maybe we need to put it in \"Inert\" mode. It's virtually gone and there should be no way to interact with it.\r\n\r\nWhile the DOM nodes are technically still there, they're in an inert state and it doesn't make sense to navigate around them. So it makes sense that focus would need to go elsewhere while the boundary is loading. However, if it quickly restores, then maybe it makes sense to treat focus as if it didn't suspend.\r\n\r\nThe question isn't about what happens in DEV mode and StrictMode but what should happen in this scenario in production.\r\n\r\nThere are more cases like this we'll expand this concept to, like tab switching. There's a bunch of work on \"Offscreen\" that you can follow in the repo. There are many arguments for and against why effects should or shouldn't unmount when this happens. It's possible that we're wrong, however, we're a number of years into this and haven't found a case yet where it doesn't make sense.","updated_at":"2023-01-10T20:10:41Z","created_at":"2023-01-10T20:10:12Z","creator_user_login":"sebmarkbage"}
{"number":25979,"comment_id":"1377798545","body":"Yeah I think in general it should work like it unmounted (eg unsubscribing from data stores, etc.), but the focus case is different. In any case where the DOM node becomes hidden (either because it was removed from the DOM or became inert), focus should move somewhere else. The problem is that there isn't a way to distinguish these cases currently. I am not sure the right way to do that API wise (maybe a new type of effect 😬) but it does seem like a worthwhile problem to solve.","updated_at":"2023-01-10T20:19:01Z","created_at":"2023-01-10T20:19:01Z","creator_user_login":"devongovett"}
{"number":25979,"comment_id":"1377843099","body":"I'm not sure which case would need to be different - like if there was a new type of effect. Like if we removed from the document and then reinserted the same instances (to preserve state of the instance) instead of hiding it / inert, would it make a difference in this case? Focus is temporarily lost regardless.","updated_at":"2023-01-10T20:57:54Z","created_at":"2023-01-10T20:57:54Z","creator_user_login":"sebmarkbage"}
{"number":25979,"comment_id":"1377847293","body":"Another interesting scenario is a tab switcher. If I'm switching between tabs using keyboard shortcuts. When I switch to a new tab, focus would end up somewhere inside that tab - e.g. to read a header. Then I can change focus within the tab. Then I switch to another tab, and back again. I'd say that you'd probably want to restore focus to where it was before I switched to the other tab instead of resetting to the default.","updated_at":"2023-01-10T21:01:34Z","created_at":"2023-01-10T21:01:34Z","creator_user_login":"sebmarkbage"}
{"number":25979,"comment_id":"1377864761","body":"Maybe this is a case where React hooks are not the right fit? Restoring focus is not the \"cleanup\" of an actual effect, after all. If what ultimately matters is DOM mutations, maybe a `MutationObserver` is the right answer?","updated_at":"2023-01-10T21:13:06Z","created_at":"2023-01-10T21:13:06Z","creator_user_login":"poeschko"}
{"number":25979,"comment_id":"1377884157","body":"Yeah I can't really think of a real-world scenario where you would unmount a component but wouldn't want focus to be moved. The strict mode case might be the only one where React knows it is not really unmounting so it shouldn't move focus. Maybe some future animation snapshot API where a component could temporarily \"disconnect\" from updates but remain visible?\r\n\r\nThe tab switcher case seems like it could be solved in user land. Since offscreen components preserve state between mounts as I understand it, you could store the focused element on unmount and restore it on mount. You might want to distinguish between programmatic navigation (where focus is on something else and the tab changes) and when a user actually clicks on a tab though. Potentially you could do similar restoration with strict mode, but it could be a problem if you have many elements mounting and unmounting and moving focus at once.","updated_at":"2023-01-10T21:23:03Z","created_at":"2023-01-10T21:23:03Z","creator_user_login":"devongovett"}
{"number":25979,"comment_id":"1377933064","body":"> Maybe this is a case where React hooks are not the right fit? Restoring focus is not the \"cleanup\" of an actual effect, after all. If what ultimately matters is DOM mutations, maybe a MutationObserver is the right answer?\r\n\r\nThinking about this in terms of \"real DOM\" is the wrong mental model. It's an implementation detail if it's still in the DOM or not. What matters is that it's in accessible one way or another. We could also remove the DOM from the document.\r\n\r\nThere similarly is no \"real\" React unmount in this concept. Think of it as removing the DOM node from the document and then reinserting it later in plain imperative APIs without React. If you never reinsert it, there's no extra event that happens other than a WeakRef when it gets GC:ed.\r\n\r\nSo a component needs to be resilient to being temporarily lifted out (unmounted) and restored with the same state soon after.\r\n\r\nMy argument is that a component that restores focus to some previous owner after being unmounted, needs to also reclaim focus if it gets remounted - as long as it's still the \"owner\" of that focus. Otherwise that component isn't resilient to being temporarily in a suspended state or deeply nested inside a tab switcher like that.","updated_at":"2023-01-10T21:47:32Z","created_at":"2023-01-10T21:47:32Z","creator_user_login":"sebmarkbage"}
{"number":25979,"comment_id":"1377954900","body":"> as long as it's still the \"owner\" of that focus. \r\n\r\nThat's the problem. There is no way to know that. Imagine if you have multiple components which move focus on unmount, and re-claim it on mount. They can know whether to move focus on unmount based on whether `document.activeElement` is within them. When they re-mount, how should they know whether to restore focus or not? Focus could have completely moved since the last time they were mounted making restoration undesirable, multiple elements that have a previously stored focused element could re-mount at the same time (which one should get focus?), etc.","updated_at":"2023-01-10T22:08:36Z","created_at":"2023-01-10T22:05:41Z","creator_user_login":"devongovett"}
{"number":25979,"comment_id":"1399442600","body":"Don't use autofocus.\r\nGive focus to the component input in a useEffect on a ref to it.\r\nAnd restore focus to the previously focused item in the clean up of that useEffect.\r\nThat way everything will work well including in strict mode.\r\nAs soon as you \"clean\" things in a useEffect that you haven't set in that same useEffect, like in your example you're trying to \"clean\" the autofocus, you will have issues in some scenarios.\r\nThese issues might be reduced by removing strict mode, but not completely. Strict mode is there to help you to detect what will go wrong one day so better to keep it, and write proper clean code (cleaning what was set in the useEffect and not something set externally)","updated_at":"2023-01-22T09:52:13Z","created_at":"2023-01-22T09:52:13Z","creator_user_login":"frfancha"}
{"number":25979,"comment_id":"1399491939","body":"Auto focus is not the only case where this can happen, as I covered in the original issue.","updated_at":"2023-01-22T13:45:00Z","created_at":"2023-01-22T13:45:00Z","creator_user_login":"devongovett"}
{"number":25979,"comment_id":"1399544673","body":"> Auto focus is not the only case where this can happen, as I covered in the original issue.\r\n\r\nWhat is \"this\" ?\r\n\r\nIf you mean \"the component is mounted twice but not removed from the DOM\" that is as designed.\r\nReact will one day optimize performance trying to minimize the new DOM object creation.\r\nImagine you're writing a tab component with one tab visible at a time.\r\nRight now if you just render your visible tab conditionally a new component must be created anytime the user changes the visible tab. The current workaround is to use display:none instead of removing components from the virtual DOM and therefore from the DOM.\r\nThat won't be necessary anymore. But to be prepared for that logic you must stop thinking mounted = created in the DOM. That's what the strict mode is for: if your code is written correctly for strict mode, it will be correct when that optimization will be in production.\r\n\r\nAnd therefore the general conclusion stays the same: if you need to do something when the component is \"mounted\", the correct way to do it is a useEffect on [] with a clean action in that same useEffect.\r\n\r\n> It also wouldn't work if you didn't want to auto focus an element on initial mount but still wanted focus restoration on unmount.\r\n\r\nNo that will work perfectly.\r\n\r\n> Ideally there would be a way to avoid strict effects entirely for this use case.\r\n\r\nBad idea, writing code that works only without strict mode is writing code that will break in the future.\r\nBut if you really want no strict mode, that is a dev parameter only, once your code is built it disappear. And to remove it during dev just put Fragment instead of StrictMode in your index file.","updated_at":"2023-01-22T17:05:18Z","created_at":"2023-01-22T17:05:18Z","creator_user_login":"frfancha"}
{"number":25979,"comment_id":"1399555857","body":"I don't appreciate being talked down to. I know what strict mode is and why it's useful. But as discussed in the comments above, I think in this case it is not necessarily simulating what _should_ happen in a real world case (like the tabs example).\r\n\r\nHere is a very simple example showing the difference without auto focus. Focus should be moved to the outer input element on unmount. In the strict mode version, it is also moved there on mount. https://codesandbox.io/s/cranky-http-zg28jv?file=/src/App.js\r\n\r\nIn this case the mount effect and unmount effect are not opposites of each other (nor should they be), so strict mode becomes observable to the user.","updated_at":"2023-01-22T17:38:35Z","created_at":"2023-01-22T17:38:26Z","creator_user_login":"devongovett"}
{"number":25979,"comment_id":"1399563995","body":"Interesting demo.\r\nFor me the no strict mode version doesn't restore the focus when hidden unless I replace useLayoutEffect by useEffect, is it the same at your side?\r\nAnd indeed the strict mode version restore the focus immediately as expected in strict mode.\r\nIt won't happen once built though, so I would say strict mode is observable to the developer more than the user.\r\n\r\nIf I adapt your useEffect in Inner, it works as expected with or without StrictMode:\r\n```\r\n  const focusRef = useRef();\r\n  useEffect(() => {\r\n    if (focusRef.current) {\r\n      focusRef.current.focus();\r\n    }\r\n    let el = restoreRef.current;\r\n    return () => {\r\n      focusRef.current = document.activeElement;\r\n      // Restore focus to the outer input on unmount.\r\n      el.focus();\r\n    };\r\n  }, [restoreRef]);\r\n\r\n```\r\n\r\nWhat do you think?","updated_at":"2023-01-22T18:07:09Z","created_at":"2023-01-22T18:07:09Z","creator_user_login":"frfancha"}
{"number":25979,"comment_id":"1399566783","body":"Yeah it seems like it was not working in Chrome because the browser moved focus to the button instead. Adding `preventDefault` to `onMouseDown` made it behave consistently cross browser.\r\n\r\nYour approach of storing the active element on unmount and restoring on mount would work around the strict mode case, but it could also break other cases. For example, imagine the tabs case with the future React state restoration feature. The component could be re-mounted some time later, at which point it may or may not be desired to restore focus to the previously focused element from when it last unmounted. Focus could have moved somewhere completely different by that point and it might not make sense to restore it anymore. There may not be an obvious way to distinguish between this real-world case and the strict mode case. That's why I'm suggesting that React add a way to do so.","updated_at":"2023-01-22T18:20:57Z","created_at":"2023-01-22T18:20:57Z","creator_user_login":"devongovett"}
{"number":25979,"comment_id":"1399590569","body":"Yes you're right my code in no-strict mode is at best useless, and often buggy.\r\n\r\nIn fact StrictMode does all it can to make fake unmounts from StrictMode indistinguishable from \"true\" unmounts.\r\nLet's even forget about focus, imagine you need to maintain a counter on the 'true' number of unmounts there is just no way to do it in the unmounted component itself. You can do it in the component using the unmounted one though.\r\n\r\nSo... options:\r\n\r\nA-ignore the fact that the behaviour is not exactly the one you want in strict mode, strict mode disappears once your code is built anyway? (Not super I know, especially if that code is reused by other teams)\r\n\r\nB-decide that the correct way to do something on unmount of Inner is not to pass a ref to Inner for Inner to do it itself, but to do it yourself in the component using Inner, in a useEffect on the condition displaying Inner\r\n\r\nC-consider that if it makes sense to put the focus on X when Inner in unmounted, it means also that it makes sense for Inner to capture the focus when it appears, which restores the symmetry of your mount/unmount operations and solve the issue.\r\n\r\nD-develop in non Strict mode\r\n\r\nI would go for C or B, but it isn't my code of course, so that's easy to say for me.","updated_at":"2023-01-22T19:53:44Z","created_at":"2023-01-22T19:53:44Z","creator_user_login":"frfancha"}
{"number":25979,"comment_id":"1399597747","body":"Not super useful, but still here the code answering to the original scenario using autofocus:\r\n```\r\nfunction Inner({ restoreRef }) {\r\n  const myInputRef = useRef();\r\n  useEffect(() => {\r\n    myInputRef.current.focus();\r\n    return () => {\r\n      // Restore focus to the outer input on unmount.\r\n      restoreRef.current.focus();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: 10, background: \"pink\" }}>\r\n      <input ref={myInputRef} />\r\n    </div>\r\n  );\r\n}\r\n```","updated_at":"2023-01-22T20:23:43Z","created_at":"2023-01-22T20:23:43Z","creator_user_login":"frfancha"}
{"number":25843,"comment_id":"1340954548","body":"@Kilian: We're sorry you've seen this error. ❤️\n\nIt looks like you forgot to specify a valid URL. (This means that we will not be able to reproduce the problem you're reporting.)\n\nPlease help us by providing a link to a CodeSandbox (https://codesandbox.io/s/new), a repository on GitHub, or a minimal code example that reproduces the problem. (Screenshots or videos can also be helpful if they help provide context on how to repro the bug.)\n\nHere are some tips for providing a minimal example: https://stackoverflow.com/help/mcve\n\nIssues without repros are automatically closed but we will re-open if you update with repro info.","updated_at":"2022-12-07T13:16:31Z","created_at":"2022-12-07T13:16:31Z","creator_user_login":"github-actions[bot]"}
{"number":25843,"comment_id":"1340956069","body":"Thank you for providing repro steps! Re-opening issue now for triage.","updated_at":"2022-12-07T13:17:45Z","created_at":"2022-12-07T13:17:45Z","creator_user_login":"github-actions[bot]"}
{"number":25843,"comment_id":"1341327589","body":"Ah I see. I'll try implement a fallback logic and release a fix.","updated_at":"2022-12-07T17:35:28Z","created_at":"2022-12-07T17:35:28Z","creator_user_login":"mondaychen"}
{"number":25843,"comment_id":"1347907034","body":"I wrote up some quick downgrade instructions for Electron apps (replace \"Polypane\" with your app name): https://polypane.app/docs/downgrading-react-devtools/","updated_at":"2022-12-13T08:14:53Z","created_at":"2022-12-13T08:14:53Z","creator_user_login":"Kilian"}
{"number":25843,"comment_id":"1368733054","body":"Thanks @Kilian ; I turned your fix into a script, tested on Windows in Git Bash\r\n\r\n```bash\r\nextension=\"/path/to/your/data/extensions/fmkadmapgofadopljbjfkapdkoienihi\"\r\nmanifest=\"$extension/manifest.json\"\r\n\r\nif ! [ -f $manifest ]; then\r\n  echo manifest doesn\\'t exist, cannot patch\r\n  exit 0\r\nfi\r\n\r\nmd5=`md5sum $manifest | awk '{split($0,a,\" \"); print a[1]}'`\r\nif [ \"$md5\" = \"e821851e1ba9ff96244025afa8178b06\" ]; then\r\n  echo manifest is already correct\r\n  exit 0\r\nfi\r\n\r\necho fixing extension\r\ncurl https://polypane.app/fmkadmapgofadopljbjfkapdkoienihi.zip --output extensions-fix.zip\r\nrm -r $extension\r\nmkdir $extension\r\nunzip extensions-fix.zip -d $extension\r\nrm extensions-fix.zip\r\n```","updated_at":"2023-01-02T08:20:38Z","created_at":"2023-01-02T08:20:09Z","creator_user_login":"serg06"}
{"number":25843,"comment_id":"1397793265","body":"@mondaychen Hey, can I work on this issue? Any tips on how to start? Would be glad to help!","updated_at":"2023-01-20T00:48:35Z","created_at":"2023-01-20T00:48:35Z","creator_user_login":"filipefborba"}
{"number":25843,"comment_id":"1397881563","body":"@filipefborba sorry, I think I put the \"good first issue\" label there by mistake. It's a bit to complex to set things up if you are new to this project.","updated_at":"2023-01-20T03:28:05Z","created_at":"2023-01-20T03:28:05Z","creator_user_login":"mondaychen"}
{"number":25843,"comment_id":"1397882289","body":"Also my apologies to people who are impacted by this: I wanted to work on this earlier, but we are extremely understaffed at this moment, and I got pretty swamped in the past a few weeks. I should be able to work on this no later than next week.","updated_at":"2023-01-20T03:29:49Z","created_at":"2023-01-20T03:29:49Z","creator_user_login":"mondaychen"}
{"number":25843,"comment_id":"1397902678","body":"@mondaychen no worries! If you find anything other \"good first issue\" or want/need some help, let me know. Also, I'm sorry that you've been swamped, that's never cool. Hope everything gets better! =)","updated_at":"2023-01-20T04:13:06Z","created_at":"2023-01-20T04:13:06Z","creator_user_login":"filipefborba"}
{"number":25843,"comment_id":"1406766561","body":"tldr; This should be considered an Electron issue. For now, please follow the instructions at the end of this comment.\r\n\r\nHi everyone,\r\n\r\nAfter some digging into the issue, I realized that it's not possible to create a version that works on both the latest Chrome & Electron, because:\r\n\r\n- the old method of connecting to React requires an unsafe CSP, which is no longer allowed in Manifest V3\r\n- the new method requires `chrome.scripting` to work, which is not available in Electron\r\n- the fallback method does not work on Electron \r\n- It's not possible to dynamically provide a manifest.json file for an extension.\r\n\r\nThe only possible solution here is to revert the Manifest V3 upgrade. IMO that would be the wrong move. Chrome has announced that it will drop support for Manifest V2 by Jan 2023 (see https://developer.chrome.com/blog/mv2-transition/). Although they have decided to push back the hard deadline, it's unlikely that it will be pushed back forever. It's especially ironic that Electron also warns you \"Manifest version 2 is deprecated and support will be removed in 2023\" when you load an extension, while they don't have the API of Manifest V3.\r\n\r\nSo, in my opinion, Electron should add support for `chrome.scripting` as soon as possible. Before that, here is what I recommend:\r\n\r\n**Workaround**\r\n1. Download [this special Manifest V2 build of the extension](https://github.com/mondaychen/react/raw/017f120369d80a21c0e122106bd7ca1faa48b8ee/packages/react-devtools-extensions/ReactDevTools.zip)\r\n1. Instead of replacing the existing extension in your Chrome data folder, unzip it to another location, because it's possible that our next release will overwrite it.\r\n2. Update the path in `loadExtension`.","updated_at":"2023-01-27T16:52:10Z","created_at":"2023-01-27T16:46:59Z","creator_user_login":"mondaychen"}
{"number":25843,"comment_id":"1481604242","body":"Hi guys!\r\n\r\nIs this problem still there?\r\n\r\nI tried to get the latest version of [Electron React Boilerplate](https://github.com/electron-react-boilerplate/electron-react-boilerplate), and i still have problems with the DevTools extension.\r\n\r\nDo we have any news?\r\n\r\nThanks!\r\n\r\nDavide","updated_at":"2023-03-23T17:32:28Z","created_at":"2023-03-23T17:32:28Z","creator_user_login":"eltaurito"}
{"number":25843,"comment_id":"1483781797","body":"@eltaurito I just ran into the same problem with ERB as well\r\n","updated_at":"2023-03-25T09:53:49Z","created_at":"2023-03-25T09:53:49Z","creator_user_login":"madenney"}
{"number":25843,"comment_id":"1485445178","body":"@Kilian @eltaurito @madenney try this repo: https://github.com/xupea/electron-devtools-installer, which may ease your pain","updated_at":"2023-03-27T16:23:50Z","created_at":"2023-03-27T16:23:50Z","creator_user_login":"xupea"}
{"number":25843,"comment_id":"1486701884","body":"> this\r\n\r\nThank you @xupea !\r\n\r\nI've installed the [package](https://github.com/xupea/electron-devtools-installer):\r\n`\"electron-devtools-assembler\": \"^1.2.0\"`\r\n\r\n\r\n\r\n```\r\nimport installExtension, {\r\n  REACT_DEVELOPER_TOOLS,\r\n  REDUX_DEVTOOLS,\r\n} from 'electron-devtools-assembler';\r\n\r\n...\r\n\r\ninstallExtension([REDUX_DEVTOOLS, REACT_DEVELOPER_TOOLS])\r\n  .then((name) => console.log(`Added Extension:  ${name}`))\r\n  .catch((err) => console.log('An error occurred: ', err));\r\n\r\n...\r\n\r\n```\r\n\r\nBut this is what i get on the console:\r\n\r\n```\r\nAdded Extension:  React Developer Tools\r\n[14836:0328/133251.298:ERROR:extensions_browser_client.cc(58)] Extension Error:\r\n  OTR:     false\r\n  Level:   2\r\n  Source:  chrome-extension://ednhkiadhfhgjhonpebdamaajgpllfom/build/background.js\r\n  Message: Uncaught TypeError: Cannot read properties of undefined (reading 'registerContentScripts')\r\n  ID:      ednhkiadhfhgjhonpebdamaajgpllfom\r\n  Type:    RuntimeError\r\n  Context: chrome-extension://ednhkiadhfhgjhonpebdamaajgpllfom/build/background.js\r\n  Stack Trace:\r\n    {\r\n      Line:     107\r\n      Column:   1\r\n      URL:      chrome-extension://ednhkiadhfhgjhonpebdamaajgpllfom/build/background.js\r\n      Function: (anonymous function)\r\n    }\r\n```\r\n\r\nAnd if I try to run my project and open the **Components** extension i get this:\r\n\r\n![image](https://user-images.githubusercontent.com/48083249/228223525-e5e77b91-5a9d-42d7-9302-936e85ff475d.png)\r\n\r\n","updated_at":"2023-03-28T12:05:56Z","created_at":"2023-03-28T11:35:07Z","creator_user_login":"eltaurito"}
{"number":25843,"comment_id":"1486793637","body":"@eltaurito seems it's still using v3 of react devtool, and `chrome.scripting.registerContentScripts` is not supported by electron, can you try to delete the Electron extension folder in your %APPDATA% , then `npm start`","updated_at":"2023-03-28T12:26:01Z","created_at":"2023-03-28T12:25:42Z","creator_user_login":"xupea"}
{"number":25843,"comment_id":"1486853179","body":"> @eltaurito seems it's still using v3 of react devtool, and `chrome.scripting.registerContentScripts` is not supported by electron, can you try to delete the Electron extension folder in your %APPDATA% , then `npm start`\r\n\r\nI deleted the extension folder, now it works perfectly 👍👍 👍 \r\n\r\nThank you a lot @xupea !","updated_at":"2023-03-28T13:05:50Z","created_at":"2023-03-28T13:05:50Z","creator_user_login":"eltaurito"}
{"number":25843,"comment_id":"1491108927","body":"@xupea That worked for me as well, thanks so much.\r\n\r\nOn a Mac you can find Electron extensions here: `~/Library/Application Support/Electron/extensions`","updated_at":"2023-03-30T23:59:12Z","created_at":"2023-03-30T23:59:12Z","creator_user_login":"kitschpatrol"}
{"number":25843,"comment_id":"1499579653","body":"That version seems to be having issues with electron 24.\r\n\r\n~~Also that repo redirects CRX requests to the developers domain, instead of downloading directly from the chrome webstore. (see here https://github.com/xupea/electron-devtools-installer/blob/master/src/downloadChromeExtension.ts#L24)~~ - I now realize this is required, because google doesn't let you download historical chrome versions, unfortunately\r\n\r\n<img width=\"1062\" alt=\"capture 2023-04-06 at 1 22 26 PM\" src=\"https://user-images.githubusercontent.com/13029040/230486273-9450f04b-c448-469d-81f2-79bb79b99d90.png\">\r\n\r\n\r\nI published https://www.npmjs.com/package/electron-extension-installer to fix that (source code [here](https://github.com/jonluca/electron-extension-installer))\r\n\r\n\r\n```typescript\r\nimport { installExtension, REACT_DEVELOPER_TOOLS } from \"electron-extension-installer\";\r\n\r\napp.on(\"ready\", async () => {\r\n  await installExtension(REACT_DEVELOPER_TOOLS, {\r\n    loadExtensionOptions: {\r\n      allowFileAccess: true,\r\n    },\r\n  });\r\n});\r\n```","updated_at":"2023-04-06T21:57:44Z","created_at":"2023-04-06T20:23:31Z","creator_user_login":"jonluca"}
{"number":25843,"comment_id":"1501135048","body":"@jonluca what issues did you get?","updated_at":"2023-04-09T13:57:17Z","created_at":"2023-04-09T13:57:17Z","creator_user_login":"xupea"}
{"number":25843,"comment_id":"1616678866","body":"![image](https://github.com/facebook/react/assets/18443683/e1d863ff-fd6b-4864-a779-d31094d0e7db)\r\n@xupea, delete extensions still load failed.\r\n```\r\nimport installer, { REACT_DEVELOPER_TOOLS, MOBX_DEVTOOLS } from 'electron-devtools-assembler';\r\n// when ready\r\nawait installer(REACT_DEVELOPER_TOOLS, {\r\n                loadExtensionOptions: {\r\n                    allowFileAccess: true,\r\n                },\r\n            })\r\n                .then((name) => this.logger.log(`Added Extension:  ${name}`))\r\n                .catch((err) => this.logger.error('An error occurred: ', err));\r\n```\r\nelectron version is 22，node version is 16.14.0","updated_at":"2023-07-02T14:16:31Z","created_at":"2023-07-02T14:16:31Z","creator_user_login":"yuwanlin"}
{"number":25843,"comment_id":"1631423131","body":"I have a similar problem with Electron 25.2.\r\n![image](https://github.com/facebook/react/assets/6835891/1b338017-1f1e-40bf-9242-9e12acf272df)\r\n","updated_at":"2023-07-11T19:51:08Z","created_at":"2023-07-11T19:51:08Z","creator_user_login":"Slapbox"}
{"number":25843,"comment_id":"1698962027","body":"Kilian, the script link does not exist anymore: \"Page not found\"\r\nhttps://polypane.app/docs/downgrading-react-devtools/\r\nBR Peter","updated_at":"2023-08-30T11:13:54Z","created_at":"2023-08-30T11:13:54Z","creator_user_login":"mulgurul"}
{"number":25843,"comment_id":"1698988371","body":"Any news regarding this matter yet?","updated_at":"2023-08-30T11:33:34Z","created_at":"2023-08-30T11:33:34Z","creator_user_login":"mulgurul"}
{"number":25218,"comment_id":"1242608751","body":"It really happens, even on Chrome/Edge. But I think this is due to StrictMode. Could please try deleting StrictMode on `index.js`?\r\n\r\nIt will look like this.\r\n```jsx\r\nroot.render(<App />);\r\n```\r\n\r\nOn StrictMode react render twice. https://reactjs.org/docs/strict-mode.html\r\n\r\n> StrictMode renders components twice (on dev but not production) in order to detect any problems with your code and warn you about them","updated_at":"2022-09-10T03:37:26Z","created_at":"2022-09-10T03:36:07Z","creator_user_login":"MiguelMachado-dev"}
{"number":25218,"comment_id":"1243375676","body":"> It really happens, even on Chrome/Edge. But I think this is due to StrictMode. Could please try deleting StrictMode on `index.js`?\r\n> \r\n> It will look like this.\r\n> \r\n> ```js\r\n> root.render(<App />);\r\n> ```\r\n> \r\n> On StrictMode react render twice. https://reactjs.org/docs/strict-mode.html\r\n> \r\n> > StrictMode renders components twice (on dev but not production) in order to detect any problems with your code and warn you about them\r\n\r\nit doesn't help, in my example in codesandbox I tried to remove StrictMode, but the behavior is the same, there are two requests in network tab\r\nАnd on Chrome, if you open this https://c1i5n8.csb.app/ there are no two requests in network tab\r\n\r\n","updated_at":"2022-09-12T08:48:29Z","created_at":"2022-09-12T08:16:42Z","creator_user_login":"kapibaara"}
{"number":25218,"comment_id":"1243605070","body":"There is, check https://codesandbox.io/s/unruffled-jerry-9hli44?file=/src/index.js\r\nOn Edge and Firefox I still getting 2 requests, disabling strict-mode it stops. ","updated_at":"2022-09-12T11:30:28Z","created_at":"2022-09-12T11:30:28Z","creator_user_login":"MiguelMachado-dev"}
{"number":25218,"comment_id":"1243623931","body":"@MiguelMachado-dev, Just check this example (without `StrictMode`): https://codesandbox.io/s/goofy-stonebraker-pf0wg7?file=/src/index.js (https://pf0wg7.csb.app/)\r\n\r\nAnd there is screenshot with two requests:\r\n\r\n<img width=\"1730\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1208639/189645667-bd18813b-8f6d-4987-b3af-621298bd1aff.png\">\r\n\r\nWhat i'm doing wrong?","updated_at":"2022-09-12T11:49:57Z","created_at":"2022-09-12T11:49:57Z","creator_user_login":"sigorilla"}
{"number":25218,"comment_id":"1243677204","body":"Not sure, it does not happen to me. We should then wait for more people to see this. It only happen to me when using StrictMode.\r\n\r\nEdge:\r\n<img width=\"959\" alt=\"image\" src=\"https://user-images.githubusercontent.com/29252011/189654466-3c90adf7-6b5f-4ff7-9655-61be91455a63.png\">\r\n\r\nFirefox:\r\n<img width=\"1920\" alt=\"image\" src=\"https://user-images.githubusercontent.com/29252011/189654925-a59a5c23-685f-4aca-a9c7-7d278a569de6.png\">\r\n\r\n\r\n Both browsers up to date.","updated_at":"2022-09-12T12:35:40Z","created_at":"2022-09-12T12:35:40Z","creator_user_login":"MiguelMachado-dev"}
{"number":25218,"comment_id":"1244027036","body":"It really is an issue. Where can we find the root cause of this problem?","updated_at":"2022-09-12T16:59:10Z","created_at":"2022-09-12T16:58:48Z","creator_user_login":"arpitj007"}
{"number":25218,"comment_id":"1244072096","body":"@MiguelMachado-dev How can I contribute to fixing this bug?","updated_at":"2022-09-12T17:33:20Z","created_at":"2022-09-12T17:33:20Z","creator_user_login":"arpitj007"}
{"number":25218,"comment_id":"1244139758","body":"> @MiguelMachado-dev How can I contribute to fixing this bug?\r\n\r\nDo you know how to fix it?\r\n\r\nIf you know, you can fork the project and open a PR. Or a solution, you can comment here how he can fix it properly.","updated_at":"2022-09-12T18:34:31Z","created_at":"2022-09-12T18:34:31Z","creator_user_login":"MiguelMachado-dev"}
{"number":25218,"comment_id":"1245208875","body":"Hi! I repeated this case in https://codesandbox.io/ with clean HTML and get same result, then I try same code with corgi in https://codepen.io/sult4novars/pen/NWMRzRX  and get one request) ","updated_at":"2022-09-13T10:33:51Z","created_at":"2022-09-13T10:24:17Z","creator_user_login":"sult4novars"}
{"number":25218,"comment_id":"1245233489","body":"Maybe it depends on OS? I have MacOS 12 (M1), Firefox 104.0.2\r\n\r\nAnd I reproduced it on codepen: https://codepen.io/sult4novars/pen/NWMRzRX","updated_at":"2022-09-13T10:47:38Z","created_at":"2022-09-13T10:47:38Z","creator_user_login":"sigorilla"}
{"number":25218,"comment_id":"1245254994","body":"> Maybe it depends on OS? I have MacOS 12 (M1), Firefox 104.0.2\r\n> \r\n> And I reproduced it on codepen: https://codepen.io/sult4novars/pen/NWMRzRX\r\n\r\ni have same params  MacOS 12.6 (M1, 8gb ), Firefox 104.0.2\r\n\r\n<img width=\"1425\" alt=\"image\" src=\"https://user-images.githubusercontent.com/98759712/189886105-eabc296d-ccb0-43a6-b95d-e452babd031f.png\">\r\n","updated_at":"2022-09-13T11:08:25Z","created_at":"2022-09-13T11:08:25Z","creator_user_login":"sult4novars"}
{"number":25218,"comment_id":"1245274480","body":"> Maybe it depends on OS? I have MacOS 12 (M1), Firefox 104.0.2\r\n> \r\n> And I reproduced it on codepen: https://codepen.io/sult4novars/pen/NWMRzRX\r\n\r\n\r\nooo I reproduced to but when I reload page this case not reproduced\r\nbut i check status and see NS_BINDING_ABORTED and search this status, and what I found https://stackoverflow.com/questions/704561/ns-binding-aborted-shown-in-firefox-with-httpfox","updated_at":"2022-09-13T11:26:42Z","created_at":"2022-09-13T11:26:42Z","creator_user_login":"sult4novars"}
{"number":25218,"comment_id":"1245277512","body":"> Maybe it depends on OS? I have MacOS 12 (M1), Firefox 104.0.2\r\n> \r\n> And I reproduced it on codepen: https://codepen.io/sult4novars/pen/NWMRzRX\r\n\r\ntry with new image https://codepen.io/sult4novars/pen/NWMRzRX\r\n\r\nwhen I first reload:\r\n<img width=\"1203\" alt=\"image\" src=\"https://user-images.githubusercontent.com/98759712/189889657-dfe86d67-76db-44a7-bf2e-8bf21944fa20.png\">\r\n\r\nwhen i try to reload many times\r\n<img width=\"1313\" alt=\"image\" src=\"https://user-images.githubusercontent.com/98759712/189889806-3ab35744-7cc0-461a-8abd-46b03093b8b2.png\">\r\n\r\n\r\n","updated_at":"2022-09-13T11:29:41Z","created_at":"2022-09-13T11:29:41Z","creator_user_login":"sult4novars"}
{"number":25218,"comment_id":"1245380780","body":"when i try my example with react 17, there are not two requests in firefox\r\nhttps://codesandbox.io/s/wizardly-lena-yobcgz?file=/src/index.js\r\n","updated_at":"2022-09-13T13:02:25Z","created_at":"2022-09-13T13:01:02Z","creator_user_login":"kapibaara"}
{"number":25218,"comment_id":"1272730832","body":"Firefox is simply ignoring the cache expires value when you force reload the page. The NS_BINDING_ABORTED tries to indicate that the browser checks whether the img is stored in the cdn cache which is obviously not in this case as there are no extra cache expires headers being sent. \r\n\r\nThe request gets blocked because the page(codepen here) hasnt loaded yet and there is already another request (get image) being sent while the page request is yet to return completely. This isnt a typical React bug IMHO but more of a failsafe method Firefox implemented.\r\n\r\nYou can easily see the next reload request sent for the same img is served via cache as cache gets set to current whenever missing an expiry header. Have a look at the stack trace in dev console\r\n\r\n![image](https://user-images.githubusercontent.com/35381801/194793787-e738b0da-0ff6-4865-ad7f-c2741519530b.png)\r\n","updated_at":"2022-10-10T03:02:28Z","created_at":"2022-10-10T03:02:28Z","creator_user_login":"varunmulay22"}
{"number":25218,"comment_id":"1625339656","body":"We are observing the same behaviour. Firefox 115, Ubuntu Linux 23.04 and macOs. Unable to test on Windows yet.\r\n\r\nHere is some details.\r\n\r\nThe first request is initiated in react-dom.development.js, line 855:\r\n\r\n```js\r\nnode.setAttribute(\"src\", \"https://.../korgi-na-trave-960x540-1-960x540.jpg\");\r\n```\r\n\r\nHere is the stack trace.\r\n```\r\nsetValueForProperty           react-dom.development.js:855:12\r\nsetInitialDOMProperties       react-dom.development.js:9720:26\r\nsetInitialProperties          react-dom.development.js:9921:26\r\nfinalizeInitialChildren       react-dom.development.js:10950:23\r\ncompleteWork                  react-dom.development.js:22193:40\r\ncompleteUnitOfWork            react-dom.development.js:26596:16\r\nperformUnitOfWork             react-dom.development.js:26568:23\r\nworkLoopSync                  react-dom.development.js:26466:22\r\nrenderRootSync                react-dom.development.js:26434:7\r\nperformConcurrentWorkOnRoot   react-dom.development.js:25738:74\r\n...\r\n```\r\n\r\n\r\nThe second request is initiated here:\r\n\r\n```js\r\nfunction commitMount(domElement, type, newProps, internalInstanceHandle) {\r\n  // Despite the naming that might imply otherwise, this method only\r\n  // fires if there is an `Update` effect scheduled during mounting.\r\n  // This happens if `finalizeInitialChildren` returns `true` (which it\r\n  // does to implement the `autoFocus` attribute on the client). But\r\n  // there are also other cases when this might happen (such as patching\r\n  // up text content during hydration mismatch). So we'll check this again.\r\n  switch (type) {\r\n    case 'button':\r\n    case 'input':\r\n    case 'select':\r\n    case 'textarea':\r\n      if (newProps.autoFocus) {\r\n        domElement.focus();\r\n      }\r\n\r\n      return;\r\n\r\n    case 'img':\r\n      {\r\n        if (newProps.src) {\r\n          domElement.src = newProps.src; // <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< HERE\r\n        }\r\n\r\n        return;\r\n      }\r\n  }\r\n}\r\n```\r\n\r\n```\r\ncommitMount                       react-dom.development.js:11038\r\ncommitLayoutEffectOnFiber         react-dom.development.js:23407\r\ncommitLayoutMountEffects_complete react-dom.development.js:24688\r\ncommitLayoutEffects_begin         react-dom.development.js:24674\r\ncommitLayoutEffects_begin         react-dom.development.js:24656\r\ncommitLayoutEffects               react-dom.development.js:24612\r\ncommitRootImpl                    react-dom.development.js:26823\r\ncommitRoot                        react-dom.development.js:26682\r\nfinishConcurrentRender            react-dom.development.js:25981\r\nperformConcurrentWorkOnRoot       react-dom.development.js:25809\r\n...\r\n```\r\n\r\n`node`, in the first snippet, and `domElement`, in the 2nd, are the very same variable: the real  `<img>` DOM node.\r\n\r\n\r\nThe point is the browser is replacing the source of the imgage twice.\r\nIf the first request has not been completed when the `src` attribute is set the second time, the browser aborts the first request, leading to the `NS_BINDING_ABORTED` error.\r\nThis occurs despite the src value is the same both time.\r\n\r\nNote that the src is always converted to a  fully qualified URL (have a look : https://github.com/facebook/react/commit/f0dd459e0d97081cb3c313ec52285e3e422f8dbf): \r\n\r\n```js\r\nconst n = document.createElement(\"img\");\r\nn.src = \"/favicon.ico\"\r\nconsole.log(n.src); // prints https://wherever.you.are/favicon.ico\r\n```\r\n\r\nThis behaviour has been introduced in https://github.com/facebook/react/commit/086fa8ee2f80f0dc34b7d145be72f9843fca975d\r\n\r\nUsing Chromium, the request is only initated once, at the very end of the process.","updated_at":"2023-07-07T12:24:59Z","created_at":"2023-07-07T12:24:59Z","creator_user_login":"maxencelaurent"}
{"number":23045,"comment_id":"1082536273","body":"We don't recommend _libraries_ to implement Suspense for data fetching yet. (At this point, it's more suited for frameworks because they have full control over when things are called and usually provide a more constrained API.) In particular, a callback like `onSuccess` doesn't make sense to me in a Suspensey API.\r\n\r\nLike you've implemented, an effect is one way to fix the problem. However, fetching something in the child and then setting state on the parent seems like a suspicious pattern by itself (the data flow becomes inside-out). It would help to have a tiny sandbox demonstrating the exact UI pattern you're trying to accomplish that's extracted from the app you posted.\r\n\r\nThanks!","updated_at":"2022-03-30T01:57:38Z","created_at":"2022-03-30T01:57:21Z","creator_user_login":"gaearon"}
{"number":23045,"comment_id":"1082576261","body":"I think the pattern is not uncommon.  I'll think through a sandbox example and add it here. ","updated_at":"2022-03-30T03:13:18Z","created_at":"2022-03-30T03:13:18Z","creator_user_login":"pkellner"}
{"number":23045,"comment_id":"1082577791","body":"Awesome, thanks! It would really help me understand why so I can discuss with the team if there’s a more natural pattern with the same outcome. ","updated_at":"2022-03-30T03:16:33Z","created_at":"2022-03-30T03:16:33Z","creator_user_login":"gaearon"}
{"number":23045,"comment_id":"1083354204","body":"FYI, I posted an incorrect example (and deleted it). I'll modify and re-post here.","updated_at":"2022-03-30T16:23:33Z","created_at":"2022-03-30T16:23:09Z","creator_user_login":"pkellner99"}
{"number":23045,"comment_id":"1095193107","body":"\r\n# (TL;DR)\r\n\r\nIt seems that using Suspense with a simple data list-detail problem **adds significant complexity** to the required React app to achieve the same results as without using Suspense.\r\n\r\nHere is the before and after code sandboxes for the app built [with](https://codesandbox.io/s/github/pkellner/react-suspense-promise-issue-23045?file=/src/cityStuff/CityListAndDetail.js) and [without](https://codesandbox.io/s/github/pkellner/react-no-suspense-issue-23045?file=/src/cityStuff/CityListAndDetail.js) Suspense.\r\n\r\nI don't see a straight forward way around having really a really awkward ternary expression on [lines 7-11 here](https://github.com/pkellner/react-suspense-promise-issue-23045/blob/main/src/cityStuff/CityDetail.js)  as well as all the added complexity around passing around extra props to make this even work. I'd love to know I over-complicated this with Suspense somehow and what that easier way of solving this problem is.\r\n\r\n![animated-small-architecture](https://user-images.githubusercontent.com/241170/162770602-74250980-fb4b-4cf9-b015-90624a95e38a.gif)\r\n\r\n![ui](https://user-images.githubusercontent.com/241170/162772272-f4ee403f-74d6-4204-9989-d74d0c80768a.png)\r\n\r\n\r\n## Problem\r\n\r\nI've finally got a simple example of what I see as a big problem when building React apps that use Suspense (declarative) vs the imperative way of building React apps. That is imperative meaning taking advantage of `useEffect`. The main point here is that what seems quite straight forward to me previously, is now much harder (and more complex) to do with Suspense. \r\n\r\nWhat makes things difficult is dealing with displaying the first record of the city list on the right without having to click on that first row.  useSwr made it easy with there `onSuccess` option you assign to your call to `useSwr`, but if I were to code it with `useEffect`, it would not be that different. My understanding of Suspense is that it's antithetical to have an option like `onSuccess` with any Suspense support data library like SWR.  \r\n\r\nI started a long discussion the the [SWR repo](https://github.com/vercel/swr) with the committers of that rep. Those URLS are [URL1](https://github.com/vercel/swr/issues/1733) and [URL2](https://github.com/vercel/swr/issues/1906). There is another similar discussion involving Suspense here: [URL3](https://github.com/vercel/swr/issues/1898)\r\n\r\n## No Suspense\r\nhttps://github.com/pkellner/react-no-suspense-issue-23045\r\n\r\n[codesandbox equivalent to repo](https://codesandbox.io/s/github/pkellner/react-no-suspense-issue-23045?file=/src/cityStuff/CityListAndDetail.js)\r\n\r\n## With Suspense\r\nhttps://github.com/pkellner/react-suspense-promise-issue-23045\r\n\r\n[codesandbox equivalent to repo](https://codesandbox.io/s/github/pkellner/react-suspense-promise-issue-23045?file=/src/cityStuff/CityListAndDetail.js)\r\n\r\n# React 17, No Suspense Architecture\r\n\r\n![react17-no-suspense](https://user-images.githubusercontent.com/241170/162770935-e10d6f88-e9cd-413b-aa00-5c5f270c3250.png)\r\n\r\nWithout using Suspense, to implement a list and detail React app that shows the detail of the first row after the list is renders is very simple. It just requires two components with nested under an main component that each has their own async data calls. These components share common state (selectedCityId, setSelectedCityid) between them.  \r\n\r\nOn render completion in the CityList component, setSelectedCityId is called causing the CityDetail component to re-render, and its useEffect (implemented with onSuccess with useSwr) causes the detail data to be retrieved (without the user having to click on the first city in the list). \r\n\r\nHere is the simple code in the CityList component that includes passed in props and display logic.\r\n\r\n```JavaScript\r\nexport default function CityDetail({ selectedCityId }) {\r\n  const url = selectedCityId\r\n    ? `${restBase}/api/city/${selectedCityId}`\r\n    : \"noSelectedCityId\";\r\n```\r\n\r\n# React 18, With Suspense Architecture\r\n\r\n![react18-with-suspense-showing-boundaries](https://user-images.githubusercontent.com/241170/162771023-a237a8c4-4c47-48d9-b888-59992d507ea7.png)\r\n\r\nFor Suspense to work, my thinking is that I needed to move the CityDetail component inside the CityList component  so that CityDetail would have access to the CityList data, as well as the selectedCityId.  That way, the CityDetail component could check to see if the CityList data is loaded, and then, and only then show the appropriate city.\r\n\r\nWhat makes this tricky is that now, CityDetail has multiple concerns. It must worry about two cases.\r\n\r\n* After the apps intial renders, the first entry (or row) in the CityList's component should be asynchronously retrieved and shown in the detail component\r\n* When any row in the CityList is clicked, the detail component should asynchronously retrieve and show the data in the detail component.\r\n\r\nIn my solution, the complexity is increased in the following ways. It means passing the selectedCityId down two levels in the component hierarchy as well as now, having to pass the cityList data itself down one level to the cityDetail component. It also causes a complex ternary expression. Here is that expression and received props in CityDetail which bothers me as it's complex to get right and of course error prone.\r\n\r\n```JavaScript\r\nexport default function CityDetail({ selectedCityId, isPending, cities }) {\r\n  const selectedCityIdLocal = selectedCityId\r\n    ? selectedCityId\r\n    : cities && !selectedCityId\r\n    ? cities[0].id\r\n    : undefined;\r\n\r\n  const url = `${restBase}/api/city/${selectedCityIdLocal}`;\r\n```\r\n\r\n# Side Notes\r\n\r\nI have tried the solution where I add `useEffect` to the detail component where the side effect is setting the selectedCityId.  My concern there is that I don't believe that the useEffect function call will happen after the Suspense promises complete. Is that the case?  [I posted a question on StackOverflow](https://stackoverflow.com/questions/71789772/in-react-18-is-useeffects-function-guaranteed-to-run-after-a-suspense-promise) hoping to get some clarity there, but as of now, there are no responses. I don't know of any other place to look for an answer to that question.\r\n\r\nAlso, as discussed in [this issue](https://github.com/vercel/swr/issues/1906#issuecomment-1095105876), including a component that includes Suspense, causes NextJS to not process button click events correctly.  I don't know if that is a NextJS, SWR or React Suspense issue. \r\n\r\nMy bigger question though is that as now, React 18 and Suspense are released, I'm working on a Suspense course at Pluralsight where I get hundreds of learners a day watching [my courses](https://app.pluralsight.com/profile/author/peter-kellner) and I'm uncomfortable using SWR as [that team claims that their Suspense implementation is still experimental](https://github.com/vercel/swr/issues/1898#issuecomment-1094426113). \r\n\r\nI don't know of any data libraries that are not experimental that I should include in my upcoming Suspense course.  Please let me know of any such library (besides Relay, which requires GraphQL which is beyond the scope of my course).","updated_at":"2022-04-11T15:24:04Z","created_at":"2022-04-11T15:24:04Z","creator_user_login":"pkellner"}
{"number":23045,"comment_id":"1095286588","body":"I'll try to write a longer answer later.\r\n\r\nThe short answer is I would *not* recommend including a library like useSWR with its Suspense mode in a course at this time. As [noted](https://reactjs.org/blog/2022/03/29/react-v18.html#suspense-in-data-frameworks) in the release post, we only support opinionated frameworks at this point rather than ad-hoc component-level data fetching. Relay is the one we're aware of that works well. We anticipate that Next.js will add support for using Suspense with `getServerSideProps` and such in the future, and we'll support that when it's out. So maybe it's good to wait until that. We're not sure whether ad-hoc helpers like useSWR will ever be recommended to use with Suspense, so that's something we need to come back to later.","updated_at":"2022-04-11T17:40:49Z","created_at":"2022-04-11T16:40:25Z","creator_user_login":"gaearon"}
{"number":23045,"comment_id":"1101858756","body":"I'm holding off on courses for now that include Suspense and data, based on my understanding and [comments here from @gaearon ](https://github.com/vercel/swr/issues/1906#issuecomment-1099481998).\r\n\r\nPluralsight has asked me to both create a **\"What's New in React 18 Course\"**, as well as create a **blog post explaining what is going on with React 18**, Suspense and Data at the moment. Most of Pluralsight's customers are enterprise and for the most part will not be using Relay\r\n\r\nI've created the post that includes a discussion of **\"The Elephant in the Room\"** and I would really like to confirm that I've not gotten anything drastically wrong.  Here is the preliminary [URL](https://github.com/pkellner/pluralsight-suspense-blog-post). Ultimately, it will go to the [Pluralsight blog](https://www.pluralsight.com/blog/software-development/reasons-to-learn-react) similar to one I did before where the distribution is quite wide.\r\n\r\nhttps://github.com/pkellner/pluralsight-suspense-blog-post\r\n\r\nThat's topic 1.  **Second topic** is I plan on creating an example similar to the one Dan did a long time ago using a FakeApi.  I plan on being very very clear that this code is not to be copied and pasted into production.  I also may include a relay example that does the same thing but with very little programming instruction.  The course will likely be in total about an hour so I don't have time to really teach Relay and all that goes into it (specifically, GraphQL).\r\n\r\nI have most of the source code now built I plan on teaching from in my, _soon to be released_,  \"What's New in React 18\" course. Based on @gaearon 's [feedback from StackOverflow](https://stackoverflow.com/questions/71789772/in-react-18-is-useeffects-function-guaranteed-to-run-after-a-suspense-promise), I've taken care of the [initial issue that I was having with `onSuccess`](https://github.com/facebook/react/issues/23045) not being implement as part of `SWR` suspense mode.  Now I realize that `useSwr` is something that should not be used to explain Suspense so I promise not to ask any more questions about that until Suspense and Data is more fleshed out.\r\n\r\nHere is a link to my Code I plan to teach from using something similar to Dan's FakeAPI, and the associated CodeSandBox. I would love feedback on this code, with the complete understanding it is not production ready code.\r\n\r\nhttps://github.com/pkellner/pluralsight-react-18-whats-new-prelim\r\n\r\n[https://codesandbox.io/s/github/pkellner/pluralsight-react-18-whats-new-prelim](https://codesandbox.io/s/github/pkellner/pluralsight-react-18-whats-new-prelim?file=/src/cityStuff/CityListAndDetail.js)","updated_at":"2022-04-18T23:41:16Z","created_at":"2022-04-18T23:41:16Z","creator_user_login":"pkellner"}
{"number":23045,"comment_id":"1104407177","body":"One thing I want to flag early is that we've basically dropped the term \"concurrent mode\" completely because there is no \"mode\" now. It's just a set of features which are opt-in. See https://github.com/reactwg/react-18/discussions/64 for historical context. Our \"modern\" messaging is what you can see in the release blog posts (https://reactjs.org/blog/2022/03/29/react-v18.html) and ReactConf keynote (https://reactjs.org/blog/2021/12/17/react-conf-2021-recap.html#react-18-and-concurrent-features).","updated_at":"2022-04-20T20:03:30Z","created_at":"2022-04-20T20:03:30Z","creator_user_login":"gaearon"}
{"number":23045,"comment_id":"1104408611","body":"As for the framing of the post, I think the important note to convey is that Suspense will likely come to _frameworks_ first. Relay is one, but you will likely see Suspense support in Next.js/Remix/Gatsby etc before you see it in “libraries” like useSWR etc.","updated_at":"2022-04-20T20:05:21Z","created_at":"2022-04-20T20:05:21Z","creator_user_login":"gaearon"}
{"number":23045,"comment_id":"1279852561","body":"related. Maybe this will solve it?   https://github.com/reactjs/rfcs/pull/229","updated_at":"2022-10-15T23:39:06Z","created_at":"2022-10-15T23:39:06Z","creator_user_login":"pkellner"}
{"number":19778,"comment_id":"751246972","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:47Z","created_at":"2020-12-25T13:07:47Z","creator_user_login":"stale[bot]"}
{"number":19778,"comment_id":"751391755","body":"bump","updated_at":"2020-12-26T20:11:38Z","created_at":"2020-12-26T20:11:38Z","creator_user_login":"saranshkataria"}
{"number":19778,"comment_id":"770246643","body":"Maybe I don't understand how \"highlight updates when components render\" should work. It always highlights all components, doesn't matter they did render or not. I would think it should highlight only the ones that did render","updated_at":"2021-01-30T17:20:09Z","created_at":"2021-01-30T17:20:09Z","creator_user_login":"Karolis92"}
{"number":19778,"comment_id":"782572932","body":"> Maybe I don't understand how \"highlight updates when components render\" should work. It always highlights all components, doesn't matter they did render or not. I would think it should highlight only the ones that did render\r\n\r\nEven i force the child component not rerender through `shouldComponentUpdate`, it still highlight that child component due to its parents rerendered.","updated_at":"2021-03-18T07:35:26Z","created_at":"2021-02-20T06:41:43Z","creator_user_login":"AlanCutFlim"}
{"number":19778,"comment_id":"801580629","body":"My situation is the same as this issue.\r\n\r\nI think it's occurred by [Fragments](https://reactjs.org/docs/fragments.html).\r\n\r\nI changed\r\n\r\n> Link to code example: https://codesandbox.io/s/practical-lovelace-ch4mw\r\n\r\nlike below and \"highlight updates when components render\" seems to work fine.\r\n\r\nhttps://codesandbox.io/s/xenodochial-tharp-eq669\r\n\r\nL56-71\r\n```diff\r\n  return (\r\n-    <>\r\n+    <div>\r\n      <span>Images</span>\r\n      {images.map((image, index) => {\r\n        return (\r\n          <ImageContainer\r\n            key={image.title}\r\n            image={image.image}\r\n            title={image.title}\r\n            handleSelect={handleSelect}\r\n            selected={image.selected}\r\n            index={index}\r\n          />\r\n        );\r\n      })}\r\n-   </>\r\n+   </div>\r\n```\r\n\r\n","updated_at":"2021-03-18T03:01:36Z","created_at":"2021-03-18T03:01:36Z","creator_user_login":"yhor1e"}
{"number":19778,"comment_id":"819273548","body":"Here's a trivial example to demonstrate the issue ([codesandbox](https://codesandbox.io/s/loving-roentgen-zcwet?file=/src/App.js)):\r\n\r\n```js\r\nimport { memo, useState } from \"react\";\r\n\r\nconst BoringBtn = () => {\r\n  const [click, setClicks] = useState(0);\r\n\r\n  const act = () => {\r\n    setClicks((cl) => cl + 1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={act}>click me {click}</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst MemoBtn = memo(BoringBtn);\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <div>\r\n        This highlights: <BoringBtn />\r\n      </div>\r\n      <div>\r\n        This doesn't: <MemoBtn />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n```","updated_at":"2021-04-14T06:48:08Z","created_at":"2021-04-14T06:47:39Z","creator_user_login":"farcaller"}
{"number":19778,"comment_id":"829122677","body":"I've encountered a similar issue with mobx. The highlight does not work for components wrapped by mobx observer. According to the explanation from the author of mobx [here](https://github.com/mobxjs/mobx-react-lite/issues/255), it might relate to React.memo as well.","updated_at":"2021-04-29T10:37:03Z","created_at":"2021-04-29T10:37:03Z","creator_user_login":"dpyzo0o"}
{"number":19778,"comment_id":"846135044","body":"I use to have this issue and now I have opposite... Memoized compoents are not market even tho they are re-rendered, because props changed.","updated_at":"2021-05-21T17:53:27Z","created_at":"2021-05-21T17:53:27Z","creator_user_login":"Karolis92"}
{"number":19778,"comment_id":"890716270","body":"> My situation is the same as this issue.\r\n> \r\n> I think it's occurred by [Fragments](https://reactjs.org/docs/fragments.html).\r\n> \r\n> I changed\r\n> \r\n> > Link to code example: https://codesandbox.io/s/practical-lovelace-ch4mw\r\n> \r\n> like below and \"highlight updates when components render\" seems to work fine.\r\n> \r\n> https://codesandbox.io/s/xenodochial-tharp-eq669\r\n> \r\n> L56-71\r\n> \r\n> ```diff\r\n>   return (\r\n> -    <>\r\n> +    <div>\r\n>       <span>Images</span>\r\n>       {images.map((image, index) => {\r\n>         return (\r\n>           <ImageContainer\r\n>             key={image.title}\r\n>             image={image.image}\r\n>             title={image.title}\r\n>             handleSelect={handleSelect}\r\n>             selected={image.selected}\r\n>             index={index}\r\n>           />\r\n>         );\r\n>       })}\r\n> -   </>\r\n> +   </div>\r\n> ```\r\n\r\nThis solved my issue. This is my view on this issue.`React.Fragment` converts all the children of the component as siblings of parent's other children. In fact, unknowingly, this violates the expected behavior that it must act as an independent component. Hence when the parent re-renders, it automatically re-renders all its children. `React.Fragment` somehow doesn't prevent re-rendering the unchanged component. Replacing it with a `div` makes the component have the usual behavior. Hence the highlighting of all the children in the component stops. It is also to be noted that it is not an issue with `React.memo`. The same persists after removing `React.memo`.","updated_at":"2021-08-02T05:15:08Z","created_at":"2021-08-02T05:02:25Z","creator_user_login":"AbhayVAshokan"}
{"number":19778,"comment_id":"942443356","body":"The issue is also affecting me, just start using fragments","updated_at":"2021-10-13T15:52:26Z","created_at":"2021-10-13T15:52:26Z","creator_user_login":"DanielRios549"}
{"number":19778,"comment_id":"1120659537","body":"bump","updated_at":"2022-05-09T05:30:50Z","created_at":"2022-05-09T05:30:50Z","creator_user_login":"refaelo"}
{"number":19778,"comment_id":"1186515354","body":"bump","updated_at":"2022-07-17T13:16:56Z","created_at":"2022-07-17T13:16:56Z","creator_user_login":"meivinay"}
{"number":19778,"comment_id":"1257166858","body":"bump","updated_at":"2022-09-25T10:46:52Z","created_at":"2022-09-25T10:46:52Z","creator_user_login":"vavra7"}
{"number":19778,"comment_id":"1288797457","body":"mee to","updated_at":"2022-10-24T10:24:29Z","created_at":"2022-10-24T10:24:29Z","creator_user_login":"rogeliotg"}
{"number":19778,"comment_id":"1537176294","body":"me too","updated_at":"2023-05-06T16:27:49Z","created_at":"2023-05-06T16:27:49Z","creator_user_login":"hrvojegolcic"}
{"number":19778,"comment_id":"1550728361","body":"I still experience this bug with 4.27.1.","updated_at":"2023-05-17T04:50:18Z","created_at":"2023-05-17T04:50:18Z","creator_user_login":"bryan-davis"}
{"number":19778,"comment_id":"1596790548","body":"Still seeing this in v4.27.8-2468a8735","updated_at":"2023-06-19T09:00:32Z","created_at":"2023-06-19T09:00:32Z","creator_user_login":"uriklar"}
{"number":19778,"comment_id":"1685156647","body":"Still on `4.28.0-035a41c4e`","updated_at":"2023-08-20T02:15:33Z","created_at":"2023-08-20T02:15:33Z","creator_user_login":"gdfreitas"}
{"number":26091,"comment_id":"1412269906","body":">On SSR, a developer may want to use partial streaming and selective/async hydration to provide performance boost for the initial page-load sequence. For example, if an end user initially opens a page that includes the details of an article scattered among multiple nested components, it makes sense to stream/render/hydrate different components of the article’s details (photos, title/description, ratings, comments, etc.) separately and as soon as possible (with some optional priorities).\r\n\r\nWe're planning to add a lower-level feature that would let you \"chunk up\" hydration without associating a loading state with it. The main reason it can't be automatic everywhere is that this would break refs — it's not expected for them to randomly be `null`. So the points do need to be explicit.\r\n\r\n>For example, code-splitting is basically a separate subject from the other features. Because a developer may need code-splitting (for bundle size optimizations), but it doesn’t necessarily mean they want to render the lazy-loaded component in a delayed manner in the initial html coming from the SSR stream.\r\n\r\nIf the component does not suspend on the server, I believe it won't be delayed in the stream. So I think you should be able to make it lazy conditionally depending on whether you're bundling for the server or for the client. I'm not sure what the idiomatic way to write this is, though.\r\n\r\n>They also may not want to delay that component’s hydration after other (non-suspense) parts are hydrated either.\r\n\r\nWhy not, if its code is likely to still be loading? Also, we'd prioritize hydrating it regardless if there are any events inside that tree, so what is the downside?\r\n\r\n>So for example when the user clicks to show a similar article and the page has to update on the client side to show the data of this different article, the developer should have the choice to make the page’s content (photos, title/description, ratings, comments, etc.) update together in a single graceful step - or batch some of the nested components’ loadings together (regardless of whether nested suspense boundaries were used). As opposed to each component getting updated independently, showing their own fallbacks independently, and rendering the new content independently while another component is still showing the old content or a fallback. Basically, how/where to show fallback/loading states is a product/UX decision and the API shouldn’t force an approach.\r\n\r\nI agree with you here. Suspense boundaries should be placed only where you actually *want* the user to experience the loading states. Where is the contradiction?\r\n\r\n>it should still be possible to opt into interruptible/concurrent rendering on client side during runtime changes (after page-load) which allows pausing a rendering sequence and prioritizing user interactions, to benefit from the improvements to the user experience and the perceived performance.\r\n\r\nIt is possible — either by [marking updates as interruptible with `useTransition`](https://beta.reactjs.org/reference/react/useTransition#marking-a-state-update-as-a-non-blocking-transition), or by making a part of UI as deferred with [`useDeferredValue`](https://beta.reactjs.org/reference/react/useDeferredValue). What other use cases are you thinking about?","updated_at":"2023-02-01T15:40:26Z","created_at":"2023-02-01T15:40:26Z","creator_user_login":"gaearon"}
{"number":26091,"comment_id":"1413448838","body":"Thanks a lot for the quick response :)\r\n\r\n> We're planning to add a lower-level feature that would let you \"chunk up\" hydration without associating a loading state with it. The main reason it can't be automatic everywhere is that this would break refs — it's not expected for them to randomly be null. So the points do need to be explicit.\r\n\r\n&\r\n\r\n> I agree with you here. Suspense boundaries should be placed only where you actually want the user to experience the loading states. Where is the contradiction?\r\n\r\nTo clarify, the scenario I am referring to (from a user experience perspective), which I believe is the same as the one in the [linked issue](https://github.com/facebook/react/issues/25082), is this:\r\n- I have a page dynamically created from multiple (nested) components who can request their own data from backend and may include similar nested child components. I want to have these two features simultaneously available on this page:\r\n  1. During the **page-load** sequence, where the initial html is served by SSR, I want to send different parts of the page to the user as soon as possible, sending whichever is ready faster, first. I also want to hydrate them in the same way. Because we want the user to see some content ASAP instead of a blank page. (being able to define some priority here would be a bonus)\r\n  2. During **runtime** on client side when a change happens, which may cause adding/removing different nested components, with each component triggering their own requests, I want to have the choice to update the main wrapper component with its children in one go and show one main loader/fallback (unlike the page-load sequence). Because we want the user to have a more holistic experience here, and not be confused with a lot of items changing and showing fallback/loaders independently.\r\n\r\nNow to enable the first point (page-load), the current Suspense API provides a very convenient solution. I need to wrap each of the components that are allowed to be streamed and hydrated separately in a separate Suspense boundary and react also even takes care of the prioritization of them in case the user interacts with a component. This is what I also meant originally by this part:\r\n\r\n> - On SSR, a developer may want to use partial streaming and selective/async hydration to provide performance boost for the initial page-load sequence. For example, if an end user initially opens a page that includes the details of an article scattered among multiple nested components, it makes sense to stream/render/hydrate different components of the article’s details (photos, title/description, ratings, comments, etc.) separately and as soon as possible (with some optional priorities).\r\n\r\nBut to enable the second point (runtime), currently we don't have a working way either with only `Suspense` or in combination with `useTransition` - as is elaborated in the [linked issue](https://github.com/facebook/react/issues/25082). \r\nIn other words, because we had the use-case for the independent components during the page-load sequence, we are now stuck with the same behaviour during runtime. This was what I also meant originally by this part:\r\n\r\n> - So for example when the user clicks to show a similar article and the page has to update on the client side to show the data of this different article, the developer should have the choice to make the page’s content (photos, title/description, ratings, comments, etc.) update together in a single graceful step - or batch some of the nested components’ loadings together (regardless of whether nested suspense boundaries were used). As opposed to each component getting updated independently, showing their own fallbacks independently, and rendering the new content independently while another component is still showing the old content or a fallback. Basically, how/where to show fallback/loading states is a product/UX decision and the API shouldn’t force an approach.\r\n\r\nSo I believe a solution like introducing those new props (`hoistSuspenseHandling` and `handleChildrenSuspense`) would give developers the ultimate freedom to manage how to reflect the waiting situation of different (nested) Suspense boundaries onto UI. Meaning they can still decide where in the component tree they want to show this fallback/loading during runtime changes, regardless of what they needed during page-load sequence. \r\n(On SSR and initial hydration I could set `hoistSuspenseHandling` to `false` on the child Suspense boundary, and on another runtime update I could change it to `true` so its parents handle it)\r\n\r\n---\r\n\r\nRegarding code-splitting\r\n\r\n> If the component does not suspend on the server, I believe it won't be delayed in the stream. So I think you should be able to make it lazy conditionally depending on whether you're bundling for the server or for the client. I'm not sure what the idiomatic way to write this is, though.\r\n\r\n&\r\n\r\n> Why not, if its code is likely to still be loading? Also, we'd prioritize hydrating it regardless if there are any events inside that tree, so what is the downside?\r\n\r\nAs you explain elaborately in the [New Suspense SSR Architecture](https://github.com/reactwg/react-18/discussions/37) post, the parts of a page that are not wrapped in suspense, will be streamed and later hydrated in a single pass, and from my understanding, these parts may also have backend data dependencies, which in that case on SSR we wait until the data is ready and then start responding for example by streaming.\r\nBut imagine I have a component that is an important part of a page and needs to be treated like the above content: SSRed, streamed and then hydrated in a single pass.\r\nBut because the code for this module is very big, and this page is not one of the main pages of my application, I want to use code-splitting to only include the JS code of this component in this specific page - and not in the bundles of other pages. So now:\r\n- For code-splitting I have to use Suspense.\r\n- If I use suspense, this component will not be SSRed and hydrated immediately anymore.\r\n\r\n---\r\n\r\nRegarding the possibility to opt into interruptible/concurrent rendering\r\n\r\n> It is possible — either by marking updates as interruptible with useTransition, or by making a part of UI as deferred with useDeferredValue. What other use cases are you thinking about?\r\n\r\nI see. Then I think my only question is why couldn’t it be enabled as the default behavior for regular `setState`s and other updates, and instead we need to wrap all of those in `useTransition`s? Because it seems to me that the updates that absolutely need to be sync and uninterruptible are very rare, and it would be easier to enable the concurrent mode on a top level place and just have an API for exceptions.\r\n","updated_at":"2023-02-02T13:34:43Z","created_at":"2023-02-02T09:53:25Z","creator_user_login":"ghbakhtiari"}
{"number":26091,"comment_id":"1413878806","body":"If the update worked just like the page load (the entire container gets replaced with a spinner, then nested ones begin to reveal as they're ready), would that be satisfactory? If not, can you help me understand why it's a bad experience for updates but an okay experience for first load? Presumably if you're worried about layout jumps, they'd also be a problem for the first load.","updated_at":"2023-02-02T14:58:59Z","created_at":"2023-02-02T14:58:59Z","creator_user_login":"gaearon"}
{"number":26091,"comment_id":"1413948254","body":"I think ultimately the **choice** should be there for the developer (or UX designer) to decide what should happen in each case. And when react forces the _page-load_ and _runtime changes_ to behave in the same way, there should be a reason for that, not the other way around.\r\n\r\nBecause one could argue that when user goes from a state of _blank_ or _nothing_ to a page, it makes sense to see the content streamed, rendered and hydrated little by little.  But when a full-page change is supposed to happen (excluding header navbar for example), then the better user experience would be to let the user know for sure when the change starts and ends, to confidently know that all these bits and pieces of the page belong to the new state, and none of them are old/irrelevant/incorrect.\r\n\r\n(It's not about the layout jumps, as I agree that would be an issue on page-load as well - unless you handle the fallbacks' sizes correctly which would then fix both page-load and runtime)","updated_at":"2023-02-02T17:07:05Z","created_at":"2023-02-02T15:42:44Z","creator_user_login":"ghbakhtiari"}
{"number":26091,"comment_id":"1414092117","body":"Sorry, I do want to refocus the discussion on concrete UX cases rather than on philosophy. E.g. in a parallel discussion, https://github.com/facebook/react/issues/25082#issuecomment-1413994002 was very helpful because it shows a concrete case. I understand you have philosophical opinions about this too, but I'm asking to set them aside for a bit, and entertain the principle that *maybe* we can figure out how to do everything right automatically. The context behind this is that we've *had* more granular control before, and we've made a decision to remove it / not expose it. So far I believe our approach is right, but I'd need to see very concrete UX arguments for why it's bad rather than philosophical arguments about control.","updated_at":"2023-02-02T17:16:23Z","created_at":"2023-02-02T17:16:17Z","creator_user_login":"gaearon"}
{"number":26091,"comment_id":"1414093713","body":"So, to clarify, it helps me to see (a) concrete cases where UX \"feels bad\" — the closer to the real example, the better — and (b) concrete examples of how you want it to work instead.","updated_at":"2023-02-02T17:17:34Z","created_at":"2023-02-02T17:17:34Z","creator_user_login":"gaearon"}
{"number":26091,"comment_id":"1414189303","body":"> So, to clarify, it helps me to see (a) concrete cases where UX \"feels bad\" — the closer to the real example, the better — and (b) concrete examples of how you want it to work instead.\r\n\r\nI think the comment you referenced https://github.com/facebook/react/issues/25082#issuecomment-1413994002 is a good example for the problem here as well. It especially includes a good visualisation for the `(b) concrete examples of how you want it to work`.\r\n\r\nI'll try to come up with a visualisation for `(a) concrete cases where UX \"feels bad\"`, which is when a client-side change happens and it's not clear when the change starts and ends and whether pieces of the page belong to the new state or the old one. \r\nBut I think it would be somewhat similar to the initial example in the [same issue](https://github.com/facebook/react/issues/25082): https://codesandbox.io/s/romantic-haslett-psc4f4?file=/src/App.js\r\n\r\n> I understand you have philosophical opinions about this too, but I'm asking to set them aside for a bit, and entertain the principle that maybe we can figure out how to do everything right automatically. The context behind this is that we've had more granular control before, and we've made a decision to remove it / not expose it. So far I believe our approach is right, but I'd need to see very concrete UX arguments for why it's bad rather than philosophical arguments about control.\r\n\r\nWell I hope the philosophical type of issues are also accepted here since I'm also very interested in that part :)\r\nBecause -as also mentioned in React docs- different frameworks are expected to build features on top of React and its concurrent features. And in these frameworks I think it makes sense (even is expected) to be somewhat opinionated and to offer limited approaches and APIs, and maybe even lean towards some user experiences.\r\n\r\nBut the same type of limitations would tilt React to be biased towards a specific set of user experiences and even frameworks, and impairs its neutrality. \r\n\r\nEven if a specific user experience sounds \"good\" or \"bad\" here to us, it doesn't necessarily mean it'll be the same case in other products.","updated_at":"2023-02-02T18:33:54Z","created_at":"2023-02-02T18:33:54Z","creator_user_login":"ghbakhtiari"}
{"number":26091,"comment_id":"1554784669","body":"I tried a bit more for the visualisation for `(a) concrete cases where UX \"feels bad\"` but in the end the same [example](https://codesandbox.io/s/romantic-haslett-psc4f4?file=/src/App.js) in the [linked issue](https://github.com/facebook/react/issues/25082) is quite the same. So I refer to that example here as well.","updated_at":"2023-05-19T15:57:04Z","created_at":"2023-05-19T15:55:21Z","creator_user_login":"ghbakhtiari"}
{"number":26091,"comment_id":"1554793122","body":"For what it's worth, regarding this part of your comment\r\n> So far I believe our approach is right, but I'd need to see very concrete UX arguments for why it's bad rather than philosophical arguments about control.\r\n\r\nMy point is that the mentioned examples are simply different UX approaches that exist. And that should be enough of an argument here. That React should allow them.","updated_at":"2023-05-19T16:02:24Z","created_at":"2023-05-19T16:02:24Z","creator_user_login":"ghbakhtiari"}
{"number":25440,"comment_id":"1269377309","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: bdd3d0807c6e9f417909bab93ffe9795128b04d8...ff90b22e96c4c7045dd2932b4e6caca3f53e10a0\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/ff90b22e96c4c7045dd2932b4e6caca3f53e10a0/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=bdd3d0807c6e9f417909bab93ffe9795128b04d8) | **=** | 153.13 kB | 153.13 kB | = | 48.84 kB | 48.84 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/ff90b22e96c4c7045dd2932b4e6caca3f53e10a0/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=bdd3d0807c6e9f417909bab93ffe9795128b04d8) | **=** | 155.05 kB | 155.05 kB | = | 49.44 kB | 49.44 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/ff90b22e96c4c7045dd2932b4e6caca3f53e10a0/files/facebook-www/ReactDOM-prod.classic.js?compare=bdd3d0807c6e9f417909bab93ffe9795128b04d8) | **=** | 529.21 kB | 529.21 kB | = | 94.48 kB | 94.49 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/ff90b22e96c4c7045dd2932b4e6caca3f53e10a0/files/facebook-www/ReactDOM-prod.modern.js?compare=bdd3d0807c6e9f417909bab93ffe9795128b04d8) | **=** | 514.47 kB | 514.47 kB | = | 92.32 kB | 92.32 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/ff90b22e96c4c7045dd2932b4e6caca3f53e10a0/files/facebook-www/ReactDOMForked-prod.classic.js?compare=bdd3d0807c6e9f417909bab93ffe9795128b04d8) | **=** | 529.21 kB | 529.21 kB | = | 94.49 kB | 94.49 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/ff90b22e96c4c7045dd2932b4e6caca3f53e10a0/files/oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=bdd3d0807c6e9f417909bab93ffe9795128b04d8) | **+0.75%** | 26.61 kB | 26.81 kB | +0.48% | 9.08 kB | 9.13 kB\n| [oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/ff90b22e96c4c7045dd2932b4e6caca3f53e10a0/files/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=bdd3d0807c6e9f417909bab93ffe9795128b04d8) | **+0.75%** | 26.61 kB | 26.81 kB | +0.48% | 9.08 kB | 9.13 kB\n| [oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/ff90b22e96c4c7045dd2932b4e6caca3f53e10a0/files/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=bdd3d0807c6e9f417909bab93ffe9795128b04d8) | **+0.73%** | 27.31 kB | 27.51 kB | +0.45% | 9.24 kB | 9.29 kB\n| [oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/ff90b22e96c4c7045dd2932b4e6caca3f53e10a0/files/oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=bdd3d0807c6e9f417909bab93ffe9795128b04d8) | **+0.41%** | 92.46 kB | 92.84 kB | +0.46% | 21.80 kB | 21.90 kB\n| [oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/ff90b22e96c4c7045dd2932b4e6caca3f53e10a0/files/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=bdd3d0807c6e9f417909bab93ffe9795128b04d8) | **+0.41%** | 92.46 kB | 92.84 kB | +0.46% | 21.80 kB | 21.90 kB\n| [oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/ff90b22e96c4c7045dd2932b4e6caca3f53e10a0/files/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=bdd3d0807c6e9f417909bab93ffe9795128b04d8) | **+0.41%** | 92.65 kB | 93.04 kB | +0.48% | 21.83 kB | 21.93 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against ff90b22e96c4c7045dd2932b4e6caca3f53e10a0\n</p>\n","updated_at":"2022-10-29T08:35:10Z","created_at":"2022-10-06T06:04:57Z","creator_user_login":"sizebot"}
{"number":24740,"comment_id":"1554432230","body":"@eps1lon Hi! Is there an update on this issue?\nWould be nice to have support for.","updated_at":"2023-05-19T11:24:54Z","created_at":"2023-05-19T11:24:54Z","creator_user_login":"hiddenest"}
{"number":25453,"comment_id":"1272465617","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 513417d6951fa3ff5729302b7990b84604b11afa...68a57bd012ae7456db2c1afb827010a074fd289c\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/68a57bd012ae7456db2c1afb827010a074fd289c/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=513417d6951fa3ff5729302b7990b84604b11afa) | **=** | 135.47 kB | 135.47 kB | = | 43.44 kB | 43.44 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/68a57bd012ae7456db2c1afb827010a074fd289c/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=513417d6951fa3ff5729302b7990b84604b11afa) | **=** | 148.01 kB | 148.01 kB | = | 47.33 kB | 47.33 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/68a57bd012ae7456db2c1afb827010a074fd289c/files/facebook-www/ReactDOM-prod.classic.js?compare=513417d6951fa3ff5729302b7990b84604b11afa) | **=** | 492.51 kB | 492.51 kB | = | 87.52 kB | 87.52 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/68a57bd012ae7456db2c1afb827010a074fd289c/files/facebook-www/ReactDOM-prod.modern.js?compare=513417d6951fa3ff5729302b7990b84604b11afa) | **=** | 477.80 kB | 477.80 kB | = | 85.29 kB | 85.29 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/68a57bd012ae7456db2c1afb827010a074fd289c/files/facebook-www/ReactDOMForked-prod.classic.js?compare=513417d6951fa3ff5729302b7990b84604b11afa) | **=** | 492.51 kB | 492.51 kB | = | 87.52 kB | 87.53 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 68a57bd012ae7456db2c1afb827010a074fd289c\n</p>\n","updated_at":"2022-10-09T06:12:23Z","created_at":"2022-10-09T06:12:23Z","creator_user_login":"sizebot"}
{"number":25522,"comment_id":"1518595291","body":"Hi @nhunzaker,\r\n\r\nI noticed the same behavior but it is probably wanted; SVG elements have their own namespace and behavior, separate from HTML elements which probably allows scripts execution. The same behavior is present in other libraries too (https://codesandbox.io/s/exciting-danny-cd7xqu?file=/src/app/app.component.html).","updated_at":"2023-04-22T10:40:50Z","created_at":"2023-04-22T10:40:50Z","creator_user_login":"StefanoMartella"}
{"number":25472,"comment_id":"1279925573","body":"> Why is it necessary? Isn't it purely an artificial limitation?\r\n\r\nIt's necessary to have some way to distinguish what is a hook and what isn't. Pascal case was already how almost all hooks were accesed. Meanwhile it doesn't trigger many false-positives and there's a clear path how to avoid it.\r\n\r\nFor example, getting rid of this check would trigger `jest.useFakeTimers` which is fairly common in the ecosystems.\r\n\r\n","updated_at":"2022-10-16T08:59:28Z","created_at":"2022-10-16T08:59:28Z","creator_user_login":"eps1lon"}
{"number":25472,"comment_id":"1309032388","body":"> It's necessary to have some way to distinguish what is a hook and what isn't.\r\n\r\nHow about `useAccessor.useName()`?","updated_at":"2022-11-09T16:38:18Z","created_at":"2022-11-09T16:38:18Z","creator_user_login":"alexk111"}
{"number":25472,"comment_id":"1310007322","body":"We've finally come up with this style as a workaround:\r\n```ts\r\nconst { useName } = createEntityAccessor(entityId);\r\nconst name = useName();\r\n```","updated_at":"2022-11-10T09:32:37Z","created_at":"2022-11-10T09:32:37Z","creator_user_login":"mifopen"}
{"number":25326,"comment_id":"1257181827","body":"i want to work on this issue. please assign this to me.","updated_at":"2022-09-25T12:16:52Z","created_at":"2022-09-25T12:16:52Z","creator_user_login":"factscub"}
{"number":25326,"comment_id":"1257241688","body":"so, it is a bug?\r\nHow do I deal with this case?","updated_at":"2022-09-25T17:37:03Z","created_at":"2022-09-25T17:37:03Z","creator_user_login":"this-spring"}
{"number":25326,"comment_id":"1334753919","body":"@this-spring  not a bug, but \"by design\" as per #19651\r\nunfortunately they dont seem to care about preventDefault-s not working\r\nso the work-around is to not use react's onXxx and instead do addEventListener with { passive: false } as per #20999","updated_at":"2022-12-02T04:34:32Z","created_at":"2022-12-02T04:34:32Z","creator_user_login":"makc"}
{"number":25326,"comment_id":"1339576897","body":"okk thanks","updated_at":"2022-12-06T15:45:15Z","created_at":"2022-12-06T15:45:15Z","creator_user_login":"this-spring"}
{"number":27132,"comment_id":"1642822303","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: d445cee60f5635e52f15762be9bd8917edac7e93...364938d474ef327ea92b7f298cb757ae28d34a07\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.35%** | 164.38 kB | 164.96 kB | +0.37% | 51.77 kB | 51.96 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.34%** | 171.79 kB | 172.37 kB | +0.29% | 53.99 kB | 54.14 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/ReactDOM-prod.classic.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.20%** | 567.40 kB | 568.57 kB | +0.21% | 100.10 kB | 100.31 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/ReactDOM-prod.modern.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.21%** | 551.20 kB | 552.37 kB | +0.21% | 97.26 kB | 97.47 kB\n| [oss-experimental/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react/cjs/react-jsx-dev-runtime.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+6.42%** | 43.32 kB | 46.10 kB | +5.82% | 12.65 kB | 13.38 kB\n| [oss-stable-semver/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react/cjs/react-jsx-dev-runtime.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+6.41%** | 43.35 kB | 46.13 kB | +5.82% | 12.65 kB | 13.39 kB\n| [oss-stable/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react/cjs/react-jsx-dev-runtime.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+6.41%** | 43.35 kB | 46.13 kB | +5.82% | 12.65 kB | 13.39 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react/cjs/react-jsx-runtime.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+6.33%** | 43.92 kB | 46.70 kB | +5.75% | 12.82 kB | 13.56 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react/cjs/react-jsx-runtime.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+6.33%** | 43.94 kB | 46.72 kB | +5.76% | 12.83 kB | 13.56 kB\n| [oss-stable/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react/cjs/react-jsx-runtime.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+6.33%** | 43.94 kB | 46.72 kB | +5.76% | 12.83 kB | 13.56 kB\n| [facebook-www/JSXDEVRuntime-dev.modern.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/JSXDEVRuntime-dev.modern.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+6.23%** | 45.15 kB | 47.96 kB | +5.88% | 12.82 kB | 13.58 kB\n| [facebook-www/JSXDEVRuntime-dev.classic.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/JSXDEVRuntime-dev.classic.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+6.23%** | 45.15 kB | 47.96 kB | +5.88% | 12.82 kB | 13.58 kB\n| [oss-stable-semver/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react/cjs/react.shared-subset.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+3.28%** | 84.72 kB | 87.50 kB | +3.33% | 23.50 kB | 24.28 kB\n| [oss-stable/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react/cjs/react.shared-subset.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+3.28%** | 84.75 kB | 87.53 kB | +3.34% | 23.53 kB | 24.31 kB\n| [oss-experimental/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react/cjs/react.shared-subset.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+3.23%** | 86.09 kB | 88.87 kB | +3.36% | 23.92 kB | 24.72 kB\n| [oss-stable-semver/react/cjs/react.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react/cjs/react.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+2.79%** | 99.79 kB | 102.57 kB | +2.87% | 26.94 kB | 27.72 kB\n| [oss-stable/react/cjs/react.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react/cjs/react.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+2.79%** | 99.81 kB | 102.59 kB | +2.87% | 26.97 kB | 27.75 kB\n| [oss-experimental/react/cjs/react.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react/cjs/react.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+2.73%** | 101.98 kB | 104.76 kB | +2.74% | 27.52 kB | 28.28 kB\n| [oss-stable-semver/react/umd/react.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react/umd/react.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+2.34%** | 123.35 kB | 126.23 kB | +2.37% | 31.84 kB | 32.59 kB\n| [oss-stable/react/umd/react.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react/umd/react.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+2.34%** | 123.37 kB | 126.26 kB | +2.37% | 31.87 kB | 32.62 kB\n| [oss-experimental/react/umd/react.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react/umd/react.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+2.30%** | 125.63 kB | 128.51 kB | +2.37% | 32.42 kB | 33.19 kB\n| [facebook-www/React-dev.modern.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/React-dev.modern.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+2.24%** | 125.87 kB | 128.69 kB | +2.45% | 33.36 kB | 34.18 kB\n| [facebook-www/React-dev.classic.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/React-dev.classic.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+2.22%** | 126.97 kB | 129.78 kB | +2.56% | 33.61 kB | 34.47 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react/cjs/react-jsx-dev-runtime.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+6.42%** | 43.32 kB | 46.10 kB | +5.82% | 12.65 kB | 13.38 kB\n| [oss-stable-semver/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react/cjs/react-jsx-dev-runtime.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+6.41%** | 43.35 kB | 46.13 kB | +5.82% | 12.65 kB | 13.39 kB\n| [oss-stable/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react/cjs/react-jsx-dev-runtime.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+6.41%** | 43.35 kB | 46.13 kB | +5.82% | 12.65 kB | 13.39 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react/cjs/react-jsx-runtime.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+6.33%** | 43.92 kB | 46.70 kB | +5.75% | 12.82 kB | 13.56 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react/cjs/react-jsx-runtime.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+6.33%** | 43.94 kB | 46.72 kB | +5.76% | 12.83 kB | 13.56 kB\n| [oss-stable/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react/cjs/react-jsx-runtime.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+6.33%** | 43.94 kB | 46.72 kB | +5.76% | 12.83 kB | 13.56 kB\n| [facebook-www/JSXDEVRuntime-dev.modern.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/JSXDEVRuntime-dev.modern.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+6.23%** | 45.15 kB | 47.96 kB | +5.88% | 12.82 kB | 13.58 kB\n| [facebook-www/JSXDEVRuntime-dev.classic.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/JSXDEVRuntime-dev.classic.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+6.23%** | 45.15 kB | 47.96 kB | +5.88% | 12.82 kB | 13.58 kB\n| [oss-stable-semver/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react/cjs/react.shared-subset.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+3.28%** | 84.72 kB | 87.50 kB | +3.33% | 23.50 kB | 24.28 kB\n| [oss-stable/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react/cjs/react.shared-subset.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+3.28%** | 84.75 kB | 87.53 kB | +3.34% | 23.53 kB | 24.31 kB\n| [oss-experimental/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react/cjs/react.shared-subset.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+3.23%** | 86.09 kB | 88.87 kB | +3.36% | 23.92 kB | 24.72 kB\n| [oss-stable-semver/react/cjs/react.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react/cjs/react.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+2.79%** | 99.79 kB | 102.57 kB | +2.87% | 26.94 kB | 27.72 kB\n| [oss-stable/react/cjs/react.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react/cjs/react.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+2.79%** | 99.81 kB | 102.59 kB | +2.87% | 26.97 kB | 27.75 kB\n| [oss-experimental/react/cjs/react.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react/cjs/react.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+2.73%** | 101.98 kB | 104.76 kB | +2.74% | 27.52 kB | 28.28 kB\n| [oss-stable-semver/react/umd/react.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react/umd/react.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+2.34%** | 123.35 kB | 126.23 kB | +2.37% | 31.84 kB | 32.59 kB\n| [oss-stable/react/umd/react.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react/umd/react.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+2.34%** | 123.37 kB | 126.26 kB | +2.37% | 31.87 kB | 32.62 kB\n| [oss-experimental/react/umd/react.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react/umd/react.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+2.30%** | 125.63 kB | 128.51 kB | +2.37% | 32.42 kB | 33.19 kB\n| [facebook-www/React-dev.modern.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/React-dev.modern.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+2.24%** | 125.87 kB | 128.69 kB | +2.45% | 33.36 kB | 34.18 kB\n| [facebook-www/React-dev.classic.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/React-dev.classic.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+2.22%** | 126.97 kB | 129.78 kB | +2.56% | 33.61 kB | 34.47 kB\n| [oss-stable-semver/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-server/cjs/react-server.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+1.89%** | 146.76 kB | 149.54 kB | +2.02% | 36.60 kB | 37.34 kB\n| [oss-stable/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-server/cjs/react-server.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+1.89%** | 146.76 kB | 149.54 kB | +2.02% | 36.60 kB | 37.34 kB\n| [oss-experimental/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-server/cjs/react-server.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+1.88%** | 147.88 kB | 150.66 kB | +2.04% | 36.86 kB | 37.61 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-dom/cjs/react-dom-server.bun.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.77%** | 358.83 kB | 361.61 kB | +0.98% | 79.19 kB | 79.97 kB\n| [oss-stable/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-dom/cjs/react-dom-server.bun.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.77%** | 358.86 kB | 361.64 kB | +0.98% | 79.21 kB | 79.99 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-dom/cjs/react-dom-server.browser.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.77%** | 361.61 kB | 364.39 kB | +0.97% | 80.10 kB | 80.88 kB\n| [oss-stable/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-dom/cjs/react-dom-server.browser.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.77%** | 361.64 kB | 364.42 kB | +0.97% | 80.13 kB | 80.90 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.77%** | 361.86 kB | 364.64 kB | +0.95% | 79.80 kB | 80.56 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.77%** | 361.88 kB | 364.66 kB | +0.95% | 79.83 kB | 80.59 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.edge.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-dom/cjs/react-dom-server.edge.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.77%** | 362.02 kB | 364.80 kB | +0.96% | 80.22 kB | 80.99 kB\n| [oss-stable/react-dom/cjs/react-dom-server.edge.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-dom/cjs/react-dom-server.edge.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.77%** | 362.05 kB | 364.83 kB | +0.97% | 80.25 kB | 81.02 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-dom/cjs/react-dom-server.node.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.77%** | 363.09 kB | 365.87 kB | +0.97% | 80.14 kB | 80.92 kB\n| [oss-stable/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-dom/cjs/react-dom-server.node.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.77%** | 363.11 kB | 365.89 kB | +0.97% | 80.17 kB | 80.94 kB\n| [facebook-www/ReactDOMServerStreaming-dev.modern.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/ReactDOMServerStreaming-dev.modern.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.76%** | 368.05 kB | 370.86 kB | +0.98% | 79.96 kB | 80.74 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.76%** | 363.67 kB | 366.45 kB | +0.94% | 80.26 kB | 81.02 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.76%** | 363.70 kB | 366.48 kB | +0.94% | 80.29 kB | 81.04 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-dom/umd/react-dom-server.browser.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.76%** | 378.73 kB | 381.62 kB | +0.96% | 81.05 kB | 81.83 kB\n| [oss-stable/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-dom/umd/react-dom-server.browser.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.76%** | 378.76 kB | 381.65 kB | +0.96% | 81.07 kB | 81.85 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.76%** | 379.00 kB | 381.89 kB | +0.94% | 80.74 kB | 81.49 kB\n| [oss-stable/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.76%** | 379.02 kB | 381.91 kB | +0.94% | 80.76 kB | 81.52 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/cjs/react-dom-server.bun.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.75%** | 368.55 kB | 371.33 kB | +0.94% | 81.37 kB | 82.13 kB\n| [facebook-www/ReactDOMServer-dev.modern.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/ReactDOMServer-dev.modern.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.75%** | 373.22 kB | 376.04 kB | +0.94% | 81.25 kB | 82.01 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/cjs/react-dom-static.browser.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.75%** | 370.05 kB | 372.83 kB | +0.95% | 81.86 kB | 82.64 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.edge.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/cjs/react-dom-static.edge.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.75%** | 370.46 kB | 373.24 kB | +0.95% | 81.98 kB | 82.76 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/cjs/react-dom-server.browser.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.75%** | 370.75 kB | 373.53 kB | +0.95% | 82.04 kB | 82.82 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.edge.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/cjs/react-dom-server.edge.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.75%** | 371.16 kB | 373.94 kB | +0.95% | 82.16 kB | 82.94 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.75%** | 371.57 kB | 374.35 kB | +0.91% | 81.97 kB | 82.72 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/cjs/react-dom-static.node.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.75%** | 372.19 kB | 374.97 kB | +0.94% | 82.18 kB | 82.96 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/cjs/react-dom-server.node.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.75%** | 372.22 kB | 375.00 kB | +0.94% | 82.09 kB | 82.86 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.74%** | 373.39 kB | 376.17 kB | +0.90% | 82.43 kB | 83.18 kB\n| [oss-experimental/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/umd/react-dom-server.browser.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.74%** | 388.28 kB | 391.17 kB | +0.93% | 83.25 kB | 84.03 kB\n| [oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.74%** | 389.13 kB | 392.02 kB | +0.91% | 83.15 kB | 83.91 kB\n| [facebook-www/ReactDOMServer-dev.classic.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/ReactDOMServer-dev.classic.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.74%** | 380.65 kB | 383.46 kB | +0.91% | 82.87 kB | 83.62 kB\n| [oss-stable-semver/react-art/cjs/react-art.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-art/cjs/react-art.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.62%** | 94.43 kB | 95.02 kB | +0.60% | 29.03 kB | 29.21 kB\n| [oss-stable/react-art/cjs/react-art.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-art/cjs/react-art.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.62%** | 94.48 kB | 95.07 kB | +0.60% | 29.06 kB | 29.23 kB\n| [oss-experimental/react-art/cjs/react-art.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-art/cjs/react-art.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.60%** | 98.31 kB | 98.90 kB | +0.55% | 30.18 kB | 30.35 kB\n| [oss-stable-semver/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.57%** | 103.43 kB | 104.01 kB | +0.58% | 31.76 kB | 31.95 kB\n| [oss-stable/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.57%** | 103.48 kB | 104.07 kB | +0.58% | 31.79 kB | 31.97 kB\n| [oss-experimental/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.57%** | 103.60 kB | 104.19 kB | +0.57% | 31.82 kB | 32.01 kB\n| [oss-stable-semver/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-test-renderer/umd/react-test-renderer.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.57%** | 103.81 kB | 104.40 kB | +0.56% | 32.18 kB | 32.36 kB\n| [oss-stable/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-test-renderer/umd/react-test-renderer.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.57%** | 103.86 kB | 104.45 kB | +0.57% | 32.21 kB | 32.39 kB\n| [oss-experimental/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-test-renderer/umd/react-test-renderer.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.56%** | 103.99 kB | 104.58 kB | +0.60% | 32.26 kB | 32.45 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-reconciler/cjs/react-reconciler.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.53%** | 110.66 kB | 111.25 kB | +0.55% | 33.80 kB | 33.98 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-reconciler/cjs/react-reconciler.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.53%** | 110.69 kB | 111.28 kB | +0.55% | 33.82 kB | 34.01 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.52%** | 114.88 kB | 115.47 kB | +0.54% | 35.07 kB | 35.26 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.49%** | 119.68 kB | 120.27 kB | +0.50% | 36.01 kB | 36.19 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.49%** | 119.71 kB | 120.30 kB | +0.51% | 36.03 kB | 36.21 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.48%** | 123.91 kB | 124.50 kB | +0.50% | 37.29 kB | 37.48 kB\n| [oss-stable-semver/react-art/umd/react-art.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-art/umd/react-art.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.44%** | 131.72 kB | 132.30 kB | +0.46% | 41.19 kB | 41.38 kB\n| [oss-stable/react-art/umd/react-art.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-art/umd/react-art.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.44%** | 131.77 kB | 132.36 kB | +0.46% | 41.22 kB | 41.41 kB\n| [oss-experimental/react-art/umd/react-art.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-art/umd/react-art.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.43%** | 135.58 kB | 136.16 kB | +0.51% | 42.34 kB | 42.55 kB\n| [oss-stable-semver/react-dom/umd/react-dom.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-dom/umd/react-dom.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.35%** | 164.21 kB | 164.79 kB | +0.38% | 52.06 kB | 52.26 kB\n| [oss-stable/react-dom/umd/react-dom.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-dom/umd/react-dom.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.35%** | 164.28 kB | 164.87 kB | +0.38% | 52.08 kB | 52.28 kB\n| [oss-stable-semver/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-dom/cjs/react-dom.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.35%** | 164.30 kB | 164.88 kB | +0.36% | 51.74 kB | 51.93 kB\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.35%** | 164.38 kB | 164.96 kB | +0.37% | 51.77 kB | 51.96 kB\n| [oss-stable-semver/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-test-renderer/cjs/react-test-renderer.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.35%** | 786.82 kB | 789.60 kB | +0.45% | 172.62 kB | 173.39 kB\n| [oss-stable/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-test-renderer/cjs/react-test-renderer.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.35%** | 786.85 kB | 789.63 kB | +0.45% | 172.65 kB | 173.43 kB\n| [oss-experimental/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-test-renderer/cjs/react-test-renderer.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.35%** | 787.21 kB | 789.99 kB | +0.45% | 172.73 kB | 173.51 kB\n| [oss-stable-semver/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-test-renderer/umd/react-test-renderer.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.35%** | 824.08 kB | 826.97 kB | +0.44% | 174.43 kB | 175.19 kB\n| [oss-stable/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-test-renderer/umd/react-test-renderer.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.35%** | 824.10 kB | 826.99 kB | +0.44% | 174.46 kB | 175.22 kB\n| [oss-experimental/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-test-renderer/umd/react-test-renderer.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.35%** | 824.49 kB | 827.38 kB | +0.44% | 174.55 kB | 175.32 kB\n| [facebook-www/ReactTestRenderer-dev.modern.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/ReactTestRenderer-dev.modern.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.35%** | 805.23 kB | 808.05 kB | +0.45% | 174.85 kB | 175.63 kB\n| [facebook-www/ReactTestRenderer-dev.classic.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/ReactTestRenderer-dev.classic.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.35%** | 805.24 kB | 808.05 kB | +0.45% | 174.85 kB | 175.63 kB\n| [facebook-www/ReactART-prod.modern.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/ReactART-prod.modern.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.35%** | 335.50 kB | 336.67 kB | +0.41% | 57.10 kB | 57.34 kB\n| [oss-stable-semver/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-art/cjs/react-art.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.35%** | 805.44 kB | 808.22 kB | +0.43% | 176.35 kB | 177.11 kB\n| [oss-stable/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-art/cjs/react-art.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.35%** | 805.47 kB | 808.25 kB | +0.43% | 176.37 kB | 177.13 kB\n| [oss-experimental/react-dom/umd/react-dom.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/umd/react-dom.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.34%** | 171.62 kB | 172.21 kB | +0.28% | 54.30 kB | 54.45 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.34%** | 171.79 kB | 172.37 kB | +0.29% | 53.99 kB | 54.14 kB\n| [oss-stable-semver/react-dom/umd/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-dom/umd/react-dom.profiling.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.34%** | 173.19 kB | 173.78 kB | +0.28% | 54.47 kB | 54.62 kB\n| [oss-experimental/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-art/cjs/react-art.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.34%** | 827.45 kB | 830.23 kB | +0.42% | 180.73 kB | 181.50 kB\n| [oss-stable/react-dom/umd/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-dom/umd/react-dom.profiling.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.34%** | 173.27 kB | 173.85 kB | +0.29% | 54.50 kB | 54.65 kB\n| [facebook-www/ReactART-prod.classic.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/ReactART-prod.classic.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.34%** | 346.50 kB | 347.66 kB | +0.37% | 59.02 kB | 59.24 kB\n| [oss-stable-semver/react-dom/cjs/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-dom/cjs/react-dom.profiling.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.33%** | 173.94 kB | 174.52 kB | +0.30% | 54.16 kB | 54.32 kB\n| [oss-stable/react-dom/cjs/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-dom/cjs/react-dom.profiling.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.33%** | 174.02 kB | 174.60 kB | +0.31% | 54.18 kB | 54.35 kB\n| [oss-experimental/react-dom/cjs/react-dom-unstable_testing.production.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/cjs/react-dom-unstable_testing.production.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.33%** | 178.00 kB | 178.59 kB | +0.28% | 56.32 kB | 56.48 kB\n| [oss-experimental/react-dom/umd/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/umd/react-dom.profiling.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.32%** | 180.62 kB | 181.21 kB | +0.29% | 56.62 kB | 56.78 kB\n| [oss-experimental/react-dom/cjs/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/cjs/react-dom.profiling.min.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.32%** | 181.44 kB | 182.02 kB | +0.29% | 56.40 kB | 56.57 kB\n| [oss-stable-semver/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-art/umd/react-art.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.31%** | 920.29 kB | 923.18 kB | +0.39% | 195.40 kB | 196.17 kB\n| [oss-stable/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-art/umd/react-art.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.31%** | 920.32 kB | 923.21 kB | +0.39% | 195.43 kB | 196.20 kB\n| [facebook-www/ReactART-dev.modern.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/ReactART-dev.modern.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.31%** | 905.48 kB | 908.29 kB | +0.40% | 193.36 kB | 194.13 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-reconciler/cjs/react-reconciler.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.31%** | 901.99 kB | 904.77 kB | +0.39% | 193.89 kB | 194.65 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-reconciler/cjs/react-reconciler.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.31%** | 902.01 kB | 904.79 kB | +0.40% | 193.92 kB | 194.69 kB\n| [facebook-www/ReactART-dev.classic.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/ReactART-dev.classic.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.31%** | 916.68 kB | 919.50 kB | +0.39% | 195.66 kB | 196.42 kB\n| [oss-experimental/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-art/umd/react-art.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.31%** | 943.39 kB | 946.28 kB | +0.37% | 199.78 kB | 200.52 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-reconciler/cjs/react-reconciler.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.30%** | 925.49 kB | 928.27 kB | +0.39% | 198.67 kB | 199.44 kB\n| [oss-stable-semver/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-dom/cjs/react-dom.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.22%** | 1,266.12 kB | 1,268.90 kB | +0.26% | 280.98 kB | 281.71 kB\n| [oss-stable/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-dom/cjs/react-dom.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.22%** | 1,266.14 kB | 1,268.92 kB | +0.26% | 281.01 kB | 281.74 kB\n| [oss-stable-semver/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable-semver/react-dom/umd/react-dom.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.22%** | 1,327.30 kB | 1,330.19 kB | +0.27% | 283.97 kB | 284.72 kB\n| [oss-stable/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-stable/react-dom/umd/react-dom.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.22%** | 1,327.33 kB | 1,330.22 kB | +0.27% | 284.00 kB | 284.75 kB\n| [oss-experimental/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/cjs/react-dom.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.21%** | 1,310.39 kB | 1,313.17 kB | +0.26% | 290.62 kB | 291.37 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/ReactDOM-prod.modern.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.21%** | 551.20 kB | 552.37 kB | +0.21% | 97.26 kB | 97.47 kB\n| [oss-experimental/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/umd/react-dom.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.21%** | 1,373.64 kB | 1,376.53 kB | +0.26% | 293.55 kB | 294.33 kB\n| [oss-experimental/react-dom/cjs/react-dom-unstable_testing.development.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/oss-experimental/react-dom/cjs/react-dom-unstable_testing.development.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.21%** | 1,328.44 kB | 1,331.22 kB | +0.26% | 294.97 kB | 295.73 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/ReactDOM-prod.classic.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.20%** | 567.40 kB | 568.57 kB | +0.21% | 100.10 kB | 100.31 kB\n| [facebook-www/ReactDOMTesting-prod.modern.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/ReactDOMTesting-prod.modern.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.20%** | 567.74 kB | 568.91 kB | +0.20% | 101.35 kB | 101.55 kB\n| [facebook-www/ReactDOM-dev.modern.js](https://react-builds.vercel.app/commits/364938d474ef327ea92b7f298cb757ae28d34a07/files/facebook-www/ReactDOM-dev.modern.js?compare=d445cee60f5635e52f15762be9bd8917edac7e93) | **+0.20%** | 1,406.93 kB | 1,409.74 kB | +0.25% | 304.69 kB | 305.46 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 364938d474ef327ea92b7f298cb757ae28d34a07\n</p>\n","updated_at":"2023-07-20T07:38:54Z","created_at":"2023-07-19T22:08:45Z","creator_user_login":"react-sizebot"}
{"number":27132,"comment_id":"1642848629","body":"From circleci `build-lint`, it looks like React's umd bundles use ES5 ([eslintrc](https://github.com/facebook/react/blob/main/scripts/rollup/validate/eslintrc.umd.js#L71)). \r\n\r\n@acdlite this might be a noob q, but what is stopping us from using ES6 features?","updated_at":"2023-07-19T22:28:22Z","created_at":"2023-07-19T22:28:22Z","creator_user_login":"mofeiZ"}
{"number":27132,"comment_id":"1643441578","body":"I removed the use of classes and switched over to having the function that throws the control and sample errors be under an object property. I initially chose a class method because the Closure compiler would elide my initial attempts to separate the code that throws control and sample errors to a different function, but now with my current changes that doesn't appear to be case... (I assume it might have to do with me setting the `name` and `displayName` properties on the function).","updated_at":"2023-07-20T20:33:32Z","created_at":"2023-07-20T07:46:52Z","creator_user_login":"KarimP"}
{"number":27132,"comment_id":"1645053230","body":"🌹","updated_at":"2023-07-21T06:33:01Z","created_at":"2023-07-21T06:33:01Z","creator_user_login":"Error75757575"}
{"number":27132,"comment_id":"1662474195","body":"This looks good to me! I'd love for someone else to take a look before stamping -- @acdlite @gnoff are you familiar with this code (or know someone who is?)","updated_at":"2023-08-02T15:55:22Z","created_at":"2023-08-02T15:53:39Z","creator_user_login":"mofeiZ"}
{"number":19150,"comment_id":"650488901","body":"If I understand your proposed solution correctly, `React.$$useRealOnChange` would be a global variable that would change the behavior of `onChange` in code such as `<input onChange={event => handleChange(event)} />`. The goal is to __easily listen to the browser’s built-in `change` event__.\r\n\r\nI, too, wish that React allowed me to listen to the native `change` event. However, I have concerns about that specific solution. I worry that adding a global variable like `React.$$useRealOnChange` would cause surprising bugs and complicate testing. If you set `React.$$useRealOnChange` to `true` in one part of the code, it could affects parts of the code that were written assuming a value of `false` for it.\r\n\r\nI favor the solution proposed by this older issue: #14857 “Easily handle browser 'change' events”. That issue proposed supporting a __new attribute on `input` elements__ that act like a browser-native `onchange` attribute. It suggested these names as possibilities:\r\n\r\n- onChangeAndBlur\r\n- onChangeNative\r\n- onChangeCompleted\r\n- onCompleteChange\r\n\r\nThat issue was automatically closed for being “stale”, so perhaps this issue should become the new active issue about accessing the browser-native `onchange`.","updated_at":"2020-06-27T04:26:41Z","created_at":"2020-06-27T04:26:41Z","creator_user_login":"roryokane"}
{"number":19150,"comment_id":"650799457","body":"> would cause surprising bugs and complicate testing\r\n\r\nIndeed yes, but any dependence could correct their code by changing the `onchange` by `oninput`, this would not break anything, i suppose. Anyway changing this setting would be something advanced maybe react could console.warn us at each load in dev mode idk.\r\n\r\nI have to admit, the other solution is safer you're right.\r\n\r\nBut even without adding a secret variable, why not just expose the function responsible of that and let the possibility to redo the function as we wish.","updated_at":"2020-06-28T17:48:22Z","created_at":"2020-06-28T17:47:39Z","creator_user_login":"mr21"}
{"number":19150,"comment_id":"693043056","body":"Hey hey! Could you add an example in CodeSandbox? That would really help us look into this :)","updated_at":"2020-09-15T23:33:30Z","created_at":"2020-09-15T23:33:30Z","creator_user_login":"rachelnabors"}
{"number":19150,"comment_id":"693164491","body":"@rachelnabors Here’s an example I made that demonstrates the desired behavior, React not providing access to that behavior, and the way I personally wish React would give us access to that behavior:\r\n\r\n**[CodeSandbox demo requesting native `onchange` in React](https://codesandbox.io/s/muddy-shadow-w5pe7)**\r\n\r\n## Mirror of that demo page\r\n\r\n<details>\r\n\r\n<summary>As CodeSandbox is a third-party site I am unfamiliar with, I don’t trust it to stay up forever, so here’s a mirror of the important parts of that demo page:</summary>\r\n\r\n### `public/index.html`\r\n\r\n> ~~~html\r\n> <div>\r\n>   <script>\r\n>     function handleNativeOnChange(event) {\r\n>       console.log(\"native change event fired\", event.value);\r\n>     }\r\n>   </script>\r\n>   <h2>Demo of native <code>onchange</code> attribute</h2>\r\n>   <input type=\"number\" onchange=\"handleNativeOnChange(this)\" />\r\n> </div>\r\n> ~~~\r\n\r\n> ## Demo of native `onchange` attribute\r\n> \r\n> The above number-type `input` element logs a message when its [`change` event](https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/change_event) is fired. Such an event is fired when a change is *committed*. The exact conditions of the event firing depend on the type of input element and possibly the browser, but in my testing with this particular `input` element, the `change` event seems to fire when any of the following happen:\r\n> \r\n> -   The field is blurred after its value was changed.\r\n> -   The user presses Enter/Return on the keyboard after changing its value.\r\n> -   The user increments or decrements the number in the field by pressing Up or Down on the keyboard.\r\n\r\n### `src/App.js`\r\n\r\n> ~~~js\r\n> export default function App() {\r\n>   function handleOnChange(event) {\r\n>     console.log(\"React change event handler called\", event.target.value);\r\n>   }\r\n> \r\n>   return (\r\n>     <div className=\"App\">\r\n>       <h2>\r\n>         Demo of React <code>onChange</code> attribute\r\n>       </h2>\r\n>       <input type=\"number\" onChange={handleOnChange} />\r\n>     </div>\r\n>   );\r\n> }\r\n> ~~~\r\n\r\n> ## Demo of React `onChange` attribute\r\n> \r\n> The above number `input` logs a message on every `input` event, rather than only on `change` events. This is because React’s `onChange` attribute works the same as an `onInput` attribute.\r\n> \r\n> ## Requested feature for React\r\n> \r\n> It’s too late to redefine React’s `onChange` attribute, but can we add a way to get the same behavior as HTML’s `onchange` attribute without manually handling all the cases listed in that section?\r\n> \r\n> Multiple possible solutions are discussed in [React issue \\#19150](https://github.com/facebook/react/issues/19150), but the idea I currently favor is supporting a new attribute `onChangeCompleted` on `input` elements. If such an attribute existed, the following commented-out input element would work the same as in the native demo:\r\n\r\n> ~~~js\r\n> <input type=\"number\" onChangeCompleted={handleOnChange} />\r\n> ~~~\r\n\r\n</details>","updated_at":"2020-09-16T22:09:30Z","created_at":"2020-09-16T04:37:39Z","creator_user_login":"roryokane"}
{"number":19150,"comment_id":"693630663","body":"Thanks so much for explaining your approach to me! Unfortunately, a global configuration option would force every third party component author to be compatible with both modes—which we feel would put too much strain on the ecosystem. There have been previous discussions, and if you have feedback, we'd love for you to [join the conversation!](https://github.com/facebook/react/issues/9657) ","updated_at":"2020-09-17T11:58:14Z","created_at":"2020-09-16T19:53:36Z","creator_user_login":"rachelnabors"}
{"number":19150,"comment_id":"693689767","body":"@rachelnabors \r\n\r\n> Unfortunately, a global configuration option would force every third party component author to be compatible with both modes\r\n\r\nI think you overlooked a large part of [the demo I provided](https://codesandbox.io/s/muddy-shadow-w5pe7). I was not suggesting a global configuration option—that was only @mr21’s idea. In my demo, I suggested adding a **new attribute** to React `input` elements, `onChangeCompleted`. Such an addition would be **backwards-compatible** because currently that attribute is ignored (and logs a warning that it is unknown).\r\n\r\n> There have been previous discussions, and if you have feedback, we'd love for you to [join the conversation!](https://github.com/facebook/react/issues/9657)\r\n\r\nDiscussing how to listen to `input` `change` events with React is a bit confusing because there have been multiple solutions discussed in multiple places:\r\n\r\n- #14857 (_closed_) suggested the same thing I want to suggest, adding a new attribute such as `onChangeCompleted`. That issue was automatically closed due to inactivity.\r\n- #19150 (_open_) (this issue) suggested a global configuration option `$$useRealOnChange`.\r\n    - I then suggested an alternative, adding a new attribute such as `onChangeCompleted`.\r\n- #9657 (_open_) suggested a backwards-incompatible change to the existing attribute `onChange`.\r\n    - Later comments in that issue discuss the idea of a new attribute such as `onEveryChange`, but the new attribute would be _in addition_ to the backwards-incompatible change to `onChange`.\r\n\r\nIn which places would you like me to discuss my preferred solution of adding a backwards-compatible new attribute such as `onChangeCompleted`? You suggested #9657, but I’m thinking it would make the conversation clearer if you reopened issue #14857, or if I created a new issue and posted links to it in the other issues.","updated_at":"2020-09-16T22:11:59Z","created_at":"2020-09-16T22:04:48Z","creator_user_login":"roryokane"}
{"number":19150,"comment_id":"693714094","body":">I think you overlooked a large part of the demo I provided. \r\n\r\nI believe @rachelnabors was responding to the original post proposal. Yours is indeed different.\r\n\r\n>In which places would you like me to discuss my preferred solution of adding a backwards-compatible new attribute such as onChangeCompleted?\r\n\r\nIf you have a fully-formed proposal, http://github.com/reactjs/rfcs would be a good place to submit it as a PR.","updated_at":"2020-09-16T23:11:15Z","created_at":"2020-09-16T23:11:15Z","creator_user_login":"gaearon"}
{"number":19150,"comment_id":"751246948","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:38Z","created_at":"2020-12-25T13:07:38Z","creator_user_login":"stale[bot]"}
{"number":19150,"comment_id":"751392394","body":"Bump","updated_at":"2020-12-26T20:19:06Z","created_at":"2020-12-26T20:18:57Z","creator_user_login":"tkrotoff"}
{"number":19150,"comment_id":"870374200","body":"Bump","updated_at":"2021-06-29T08:05:39Z","created_at":"2021-06-29T08:05:39Z","creator_user_login":"AgainPsychoX"}
{"number":19150,"comment_id":"913337834","body":"+1 for `onChangeNative`, Redux goes ballistic when you dispatch actions on each key stroke 😟","updated_at":"2021-09-06T04:55:41Z","created_at":"2021-09-06T04:55:41Z","creator_user_login":"samikatz"}
{"number":19150,"comment_id":"1008199517","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2022-01-09T00:42:31Z","created_at":"2022-01-09T00:42:31Z","creator_user_login":"stale[bot]"}
{"number":19150,"comment_id":"1008231649","body":"Bump. This problem has not been solved yet: in [React’s documentation for `onChange`][react-onchange-docs] there is still no mention of an alternative attribute (which would have a name like `onChangeCompleted` or `onChangeNative`) that uses the browser’s native `onchange` event handler.\r\n\r\n[react-onchange-docs]: https://reactjs.org/docs/dom-elements.html#onchange","updated_at":"2022-01-09T05:08:27Z","created_at":"2022-01-09T05:08:27Z","creator_user_login":"roryokane"}
{"number":19150,"comment_id":"1374706395","body":"Definitely a bug IMO\r\nBroken useful native behavior of browser's tag without smooth backward compatible/workarounds (\r\nSad that this issue does not fixed yet","updated_at":"2023-01-08T04:32:25Z","created_at":"2023-01-08T04:32:25Z","creator_user_login":"NWPoul"}
{"number":19150,"comment_id":"1374721407","body":"unsubscribe\n<https://github.com/notifications/unsubscribe-auth/AUFSVP5YS762KBURJRPQK33WRI77ZANCNFSM4OBGJHDQ>\n\nOn Sun, Jan 8, 2023 at 8:07 AM Pavel ***@***.***> wrote:\n\n> Definitely a bug IMO\n> Broken useful native behavior of browser's tag without smooth backward\n> compatible/workarounds (\n> Sad that this issue does not fixed yet\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/facebook/react/issues/19150#issuecomment-1374706395>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AUFSVP5YS762KBURJRPQK33WRI77ZANCNFSM4OBGJHDQ>\n> .\n> You are receiving this because you are subscribed to this thread.Message\n> ID: ***@***.***>\n>\n","updated_at":"2023-01-08T06:10:17Z","created_at":"2023-01-08T06:10:17Z","creator_user_login":"ahmadmirjalili"}
{"number":19846,"comment_id":"694241217","body":"React `onChange` events do not map to the native `change` listener. Rather, they are a combination of `input` and a few other events. Can you reframe the issue around your actual goal — what do you want to do and why?","updated_at":"2020-09-17T13:38:37Z","created_at":"2020-09-17T13:38:33Z","creator_user_login":"gaearon"}
{"number":19846,"comment_id":"694436185","body":"Sure yes\r\n\r\nFirst just to clarify: We do want React's notion of onChange -- events for every character typed.\r\n\r\nMy expectation is just that a manually created `change` event would cause a react `change` event and that an `onChange` listener on some parent element should fire for those events just like they do for the `change` events that fire when you interact with native inputs.\r\n\r\n----\r\n\r\nI think it's worth being thorough here so my answer doesn't just raise more questions.\r\n\r\nWe have around 40 custom form input components -- many contain native inputs, some don't.  We used to use `onChange` for everything, but ~4 years ago we started using `onInput` for text inputs and some others for a few reasons -- I think there was a change in React that made `onChange` less reliable for `text` inputs, and I think at the time autocomplete events fired `input` but not `change`.  Also we've had this trouble firing custom `change` events.  We use these manually created events for things like \"Select all\" \"Deselect all\" buttons on a CheckboxGroup component.  More on that below.\r\n\r\nIn our setup we use a custom `form` component that catches bubbled events and fires actions for those events.  We've been under the impression that for our text inputs and any controls that need manually created events, we need to listen to `input` events while for others we can continue to use `change`.    We've coded our form to respond `change` events by default, but inputs can include a data attribute to signal to the form to respond to `input` events instead for that particular component (form looks for the data attribute on `e.target` on the bubbled event).\r\n\r\nNote: I just did a test and I'm seeing both events firing for text inputs and for autocomplete events, as well as a few others.  Our assumptions may be wrong or out of date...  Maybe we could move towards standardizing to use `input` events everywhere at this point?\r\n\r\n### Custom values on events\r\nIn the example of our CheckboxGroup component, the we want the `value` to be an object indicating what's checked.  Taking that object value in as a prop is easy.  Emitting events with that value is a little harder.  We have to catch the event just after it emits using a handler in the component, then attach a custom `e.value` property on it (and also call `e.persist()` until we get to React 17).  Our form component looks for `e.value` first, then falls back to `e.target.value` if that's not present.  \r\nWe can do this with\r\n* normal events: a checkbox is checked, event is fired, we stick the computed value on the event and done\r\n* manually created events: create the event, emit it either from a native input already in the component or from a `hidden` input, catch the emitted event and attach the value (you can't modify an event until it's emitted, even for these manually created ones)\r\n\r\nSo I guess my questions are\r\n* Is there a way to make this work with `change` events?\r\n* or should we switch everything to input events?\r\n* or are there some things that only work with change so we need to continue supporting both?\r\n\r\n----\r\n\r\nMy codepen above was the minimal repro.  What I'm actually working on is making a nice encapsulated way of dealing with all the details required to emit events with complex values.  I've got a draft component that uses `useImperativeHandle` to expose an `emit` method, so the API to consumers would be.\r\n```\r\nconst emitterRef = useRef();\r\n\r\n//in render\r\n<SyntheticEventEmitter name=\"myInput\" type=\"input\" ref={emitterRef} />\r\n\r\n// to fire an event with a custom value\r\nemitterRef.current.emit(customValueObject);\r\n```\r\n[Complete codepen demo.](https://codepen.io/jesseko/pen/gOrdbKW)\r\n\r\nIt works for `input` but not `change`, which seems strange to me and I've struggled to find explanation of the differences.\r\n\r\n\r\n\r\n","updated_at":"2020-09-17T19:01:15Z","created_at":"2020-09-17T19:01:15Z","creator_user_login":"jesseko"}
{"number":19846,"comment_id":"694443992","body":">My expectation is just that a manually created change event would cause a react change event \r\n\r\nThis is incorrect, since React `onChange` is not triggered by native `change` events.\r\n\r\n>What I'm actually working on is making a nice encapsulated way of dealing with all the details required to emit events with complex values. \r\n\r\nI haven't read in depth but my initial take is that you need to reconsider the approach and move *away* from emitting custom events. This is whack-a-mole where you're trying to guess implementation details that keep changing.\r\n\r\nCan we refocus on the initial product problem? E.g. the autocomplete issues — can we get a minimal repro of that? And if they're not relevant, what's stopping you from simply always using React `onChange` and never emitting events yourself?\r\n","updated_at":"2020-09-17T19:16:19Z","created_at":"2020-09-17T19:16:19Z","creator_user_login":"gaearon"}
{"number":19846,"comment_id":"694500382","body":"> This is incorrect, since React onChange is not triggered by native change events.\r\n\r\nOK, that does make sense.  \r\n\r\nWe can mostly do what we want with `input` events.  We wanted the flexibility that if a given component is normally expected to produce change events that our custom events should conform to that standard, but sounds like we should abandon attempts to make custom change events.  That's kind of the conclusion we came to earlier, but I always felt unsettled about it.  I can see how it makes sense though, give that React's onChange is actually something different.  Thanks for the clarity on that.\r\n\r\nFine to close this ticket then.  Thanks!\r\n\r\nI'll still answer this though:\r\n\r\n> what's stopping you from simply always using React `onChange` and never emitting events yourself?\r\n\r\nCustom events have been useful to us for two reasons:\r\n\r\n1) Some of our form components contain multiple inputs or controls, but we want to treat them as a single field in the store with a single value (though the value for some components may be an array or an object).\r\nWe need to handle clicks and keyboard events, and when those cause a change to the value of the component, we'd like to fire change events to communicate that.\r\nExamples:\r\n--Clicking `Select all` on a checkbox group changes the value of what's checked from ['a'] to ['a', 'b', 'c'].  we'd like a change event to fire to describe that.\r\n--If you interact with a custom Select or an autosuggest via keyboard, arrow down a few times and hit enter to select an option, we get a keydown event but we'd like to have a change event fire to report the new value.\r\n\r\n2) Throttling: For components that include sliders: the slider events come very quickly.  We generally stop all those, then use `_.throttle` to emit our own events at a slower pace.  Picture a mortgage calculator with a down payment slider where the store needs to recalculate multiple fields and run validation when changes happen.\r\n\r\n \r\nAs a bit of context on (1): I'm at Redfin and we may have an unusually strong interest in encapsulating complexity in components vs. just writing more store code. \r\nWe have a form builder tool where non-devs can build forms and the structure is stored in a DB, then sent to the client for display and we need to handle all forms build that way with some generic client store code that loads that structure, shows the form, and handles client validation and submit.  We want all our components to work with that generic store code with no special cases for particular field types.\r\nBut even when devs construct forms manually, we want to help them be efficient by giving them powerful components.  An address component makes it easy to add 5 inputs to your form, set up validation on the whole thing, and save the resulting address structure.","updated_at":"2020-09-17T22:17:26Z","created_at":"2020-09-17T21:07:31Z","creator_user_login":"jesseko"}
{"number":19846,"comment_id":"694553699","body":"FWIW others struggle with this as well\r\nhttps://stackoverflow.com/questions/23892547/what-is-the-best-way-to-trigger-onchange-event-in-react-js\r\nThe winning answer there just settles for `input` events.\r\n\r\nand React issue https://github.com/facebook/react/issues/11488\r\n\r\nIs there any way to manually create a React `change` event?  We don't actually need the native `change` event at all.  Just wish we could write custom stuff that integrates with the React event system to act more consistent to what native inputs do.","updated_at":"2020-09-17T23:35:29Z","created_at":"2020-09-17T23:28:57Z","creator_user_login":"jesseko"}
{"number":19846,"comment_id":"694590281","body":"I understand the desire for encapsulated components, the part I don't understand is why you want to fire native browser events instead of exposing *your own component's events via props*. `<MyInput onChange={...} />` and then do `props.onChange()` from `MyInput` whenever you need. What is the problem with that approach?","updated_at":"2020-09-18T01:14:32Z","created_at":"2020-09-18T01:14:32Z","creator_user_login":"gaearon"}
{"number":19846,"comment_id":"694654206","body":"We do use `onChange` props as well, but we still find that event bubbling is useful for a couple reasons:\r\n\r\n1) Most common usage is for instrumentation: you can listen to bubbled events from anywhere in the tree, which makes it easy to do things like track whether users interact with a certain section of the page (can fire an analytics event only for the first interaction in that section).\r\n\r\n    An advanced use of this: modify events intended for logging as they travel up the tree to gather context so you can log `(page, section, component, action)` without needing any knowledge of section from the input where an event originates.  i.e. the section component could catch the event and add a property `e.logging.section = \"mySectionName\"`.\r\n\r\n2) Centralizing handling: Our custom `Form` component is the thing that knows how to fire actions to the store and route them to the right form there.  Input components emit, then the form catches the bubbled events and fires actions using props the form has.  Again, saves us from having to pass that info down.\r\n\r\nIf we were starting from scratch we could use Context to accomplish a lot of this, but I'm not convinced it's a better path.  \r\n-If you want to keep the ability to modify an event more locally before it reaches someplace higher up, or just generally want the ability to get callbacks further up the tree, you end up needing to implement something that looks a whole lot like bubbling, and in that case why not just use the bubbling that's built in.\r\n-If you don't need that, Context could solve it well - just use it to pass down some bound functions or all the raw info needed for an input component to directly fire analytics events or actions to stores.\r\n\r\nIn our case, switching implementations would be expensive and risky, so just trying to continue to make it cleaner and easier to use without a drastic change.","updated_at":"2020-09-18T17:22:41Z","created_at":"2020-09-18T05:09:50Z","creator_user_login":"jesseko"}
{"number":19846,"comment_id":"695079494","body":"Here's an illustration of that scenario of logging `(page, section, component, action)`\r\n\r\nSay you're logging `(\"myPage\", \"articlesSection\", \"favoriteButton\", \"click\")`\r\n\r\nUsing event bubbling you can make a global setup where you handle sections like\r\n\r\n`<TrackingSection sectionName=\"articlesSection\">…content…`\r\n\r\nand deep down in there, some <FavoriteButton> component could do\r\n```\r\nonClick(e) {\r\n  e.trackingComponent = 'favoriteButton';\r\n  e.trackingAction = 'click';\r\n}\r\n```\r\nthen TrackingSection could have it’s own handlers where it does\r\n```\r\nonClick(e) {\r\n  if (e.trackingComponent && e.trackingAction) {\r\n    e.trackingSection = this.props.sectionName;\r\n  }\r\n}\r\n```\r\nand then we log the event when it hits the top of the page if the event has all the expected parts.\r\n\r\nIf the section needs to discern between events, only log some and not others, or attach extra info for some, that can all happen right there and everything further down the tree can be agnostic about where they're used - don't have to thread extra props through or read from Context or import some section-specific tracking util.\r\n\r\nIt's a really lightweight way of letting a button or input component say, \"this happened, if you care\" and letting a section say \"I do care, thanks\".  And if you need to modify the tracking at more places in the tree that's easy too.","updated_at":"2020-09-18T20:50:05Z","created_at":"2020-09-18T20:49:33Z","creator_user_login":"jesseko"}
{"number":19846,"comment_id":"696474648","body":"I would also like to be able to do this. I am building an AngularJS-in-React bridge, and I'm mapping Angular's concept of two-way binding to React change events. This allows React to see each bridged Angular component as something akin to a `<textarea />` and the calling React component can then capture its state and treat it as a controlled component.\r\n\r\nI recognize that the very idea of this is unpleasant, but it is helping my team refactor our legacy AngularJS components into React from the top down. I'm also using an `onChange` prop to make this happen, and I don't strictly need event bubbling, but it would make the abstraction less leaky to have a way of emitting change events from React components.","updated_at":"2020-09-22T09:10:36Z","created_at":"2020-09-22T02:15:49Z","creator_user_login":"AprilArcus"}
{"number":19846,"comment_id":"751246938","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:36Z","created_at":"2020-12-25T13:07:36Z","creator_user_login":"stale[bot]"}
{"number":19846,"comment_id":"827550050","body":"This is also useful for using **native web components** which can fire a `change` event when their value changes.\r\n```\r\nimport { MyCustomThing } from \"some-web-components-library\"; // Native components, not react!\r\n\r\n// doSomething() will not be triggered\r\n<MyCustomThing onChange={() => this.doSomething()} />\r\n```\r\n\r\nIt is surprising that React is not listening to `change` events inside an `onChange` handler.\r\n\r\nThis unfortunate implementation detail of react enforces developers to use a`Ref` and manual code/bind to keep web components updated with react's life cycle.","updated_at":"2021-04-27T11:58:50Z","created_at":"2021-04-27T11:58:50Z","creator_user_login":"segevofer"}
{"number":19846,"comment_id":"1346456246","body":"> I understand the desire for encapsulated components, the part I don't understand is why you want to fire native browser events instead of exposing _your own component's events via props_. `<MyInput onChange={...} />` and then do `props.onChange()` from `MyInput` whenever you need. What is the problem with that approach?\r\n\r\n@gaearon Are there any instructions on how to properly create synthetic event based on change event of input element?\r\n","updated_at":"2022-12-12T13:03:36Z","created_at":"2022-12-12T13:03:24Z","creator_user_login":"krutoo"}
{"number":19671,"comment_id":"678235200","body":"Is Async cleanups new feature？\r\nAs far as I know, It will be cleaned up before commit update.\r\nYou should ensure that a clearTimeout  callback is returned in useEffect.","updated_at":"2020-08-21T11:05:30Z","created_at":"2020-08-21T11:05:30Z","creator_user_login":"ghost"}
{"number":19671,"comment_id":"678244856","body":"@By-Meteora this is something that got implemented in the upcoming React 17 as an optimization. As you might see in my example I **do** return `() => clearTimeout(id)` from the example effect, the problem is that React 17 is introducing a change to the moment in which this cleanup function gets called.","updated_at":"2020-08-21T11:32:17Z","created_at":"2020-08-21T11:32:17Z","creator_user_login":"Andarist"}
{"number":19671,"comment_id":"678249337","body":">It's not obvious here that useLayoutEffect should be used here to achieve instant cleanup.\r\n\r\nWhy is it not? It does seem like the use case for it.","updated_at":"2020-08-21T11:45:33Z","created_at":"2020-08-21T11:45:22Z","creator_user_login":"gaearon"}
{"number":19671,"comment_id":"678250042","body":"> that this should be useLayoutEffect-based to achieve instant clean up as this is not related to layout, even remotely\r\n\r\nI concede that its naming is overly narrow (to discourage people from using it in cases except where *not* using it would cause visual artifacts). But conceptually it's just a \"synchronous useEffect\". If synchronous behavior is what you want (because otherwise the user would notice it), then `useLayoutEffect` is the tool for the job.","updated_at":"2020-08-21T11:47:23Z","created_at":"2020-08-21T11:47:23Z","creator_user_login":"gaearon"}
{"number":19671,"comment_id":"678250627","body":"Overall child unmounting causing something to happen in a parent is a somewhat confusing flow. I can totally understand how one might end up with this, but I'd still encourage to avoid it where you can. A child doesn't unmount for no reason — something is causing it to unmount by setting state. *That thing* should also have called whatever you're calling from the effect. Then you wouldn't need multiple render passes, and both updates could be batched.","updated_at":"2020-08-21T11:49:01Z","created_at":"2020-08-21T11:49:01Z","creator_user_login":"gaearon"}
{"number":19671,"comment_id":"678255495","body":"> Why is it not? It does seem like the use case for it.\r\n\r\n1. Its name - given your comments I believe that changing this to `useSynchronousEffect` would make more sense\r\n2. Docs don't really mention any other use case for it than \"layout\"-related stuff\r\n3. There was no difference between cleanup timing for `useEffect` and `useLayoutEffect` before, so this makes it difficult to change the mental model around this right now (not impossible, just harder)\r\n4. during SSR it's OK to call `useEffect` but it's not OK to call `useLayoutEffect` as React warns about it. This constraint doesn't make sense for me given the new model, because we might need to \"deopt\" to `useLayoutEffect` for business logic purposes\r\n5. it's weird for me because there might be times that I don't care about the synchronous setup (so I'd like to `useEffect` )but I definitely don't want to risk timing bugs regarding async cleanup so I might be \"forced\" to deopt to the `useLayoutEffect`.\r\n\r\n> If synchronous behavior is what you want (because otherwise the user would notice it), then useLayoutEffect is the tool for the job.\r\n\r\nRight, I agree with that - \"problem\" is that previously the use cases for this were limited to visual effects when component mounts, and right now you extend this to potentially non-visual stuff that might affect the logic of the application.\r\n\r\n> Overall child unmounting causing something to happen in a parent is a somewhat confusing flow. I can totally understand how one might end up with this, but I'd still encourage to avoid it where you can.\r\n\r\nI also agree that this is an anti-pattern that should mostly be avoided, but the described issue is not about \"child unmounting causing something to happen\" but rather \"logic bound to the child's lifetime is causing something to happen incorrectly\". The logic is on written to change anything when unmounting, it strictly wants to change something when the component is alive - there is only a disconnect between a moment component is disposed by React and the DOM (from what I understand) and a moment in which the component itself is being notified about it and it has a chance to execute code between those 2 points in time\r\n\r\n","updated_at":"2020-08-21T12:02:58Z","created_at":"2020-08-21T12:02:58Z","creator_user_login":"Andarist"}
{"number":19671,"comment_id":"678261837","body":"I struggle to follow what \"business logic\" has to do with it. The purpose of `useLayoutEffect` is to do things that *must be done* before paint. This hasn't changed.\r\n\r\n>Right, I agree with that - \"problem\" is that previously the use cases for this were limited to visual effects when component mounts, and right now you extend this to potentially non-visual stuff that might affect the logic of the application.\r\n\r\nI don't know where the \"non-visual stuff\" comes from here. We were just talking about animation, which is definitely visual. By definition, if it's not visual, then it's okay to run with a delay. If you have a different use case, let's discuss this use case directly.","updated_at":"2020-08-21T12:22:03Z","created_at":"2020-08-21T12:20:29Z","creator_user_login":"gaearon"}
{"number":19671,"comment_id":"678288379","body":"> The purpose of useLayoutEffect is to do things that must be done before paint. This hasn't changed.\r\n\r\nRight, I totally agree with this - but it's only really apparent when it comes to mounting because then without this you would end up with *visual glitches*. So this is a workaround for those.\r\n\r\nI believe though that the situation I'm describing is different - it's not really about visual glitches, but rather about some logic being executed incorrectly due to lack of synchronous cancelation. It could be anything - sending an event to WS, displaying a notification, playing sound, whatever.\r\n\r\n> I don't know where the \"non-visual stuff\" comes from here. We were just talking about animation, which is definitely visual. By definition, if it's not visual, then it's okay to run with a delay. If you have a different use case, let's discuss this use case directly.\r\n\r\nI have also mentioned the use case of a in-product tour. I think I might have come with a better one now though: playing sounds.\r\n\r\nWe could have a throttling effect that is supposed to play sounds based on some condition, we don't want to spam the user with sound notifications as this is annoying so we introduce a throttling mechanism to the mix. The component responsible for playing those sounds gets unmounted, other screen gets committed to the browser and at this moment a timeout from the throttle gets executed and the sound is played. The user gets confused because there is no visual element (anymore) associated with that sound notification. ","updated_at":"2020-08-21T13:23:20Z","created_at":"2020-08-21T13:23:20Z","creator_user_login":"Andarist"}
{"number":19671,"comment_id":"678300527","body":"> It could be anything - sending an event to WS, displaying a notification, playing sound, whatever.\r\n\r\nI do think we need to be specific here. I don't see how either of these examples would be incorrect if performed a few milliseconds after something has been hidden.\r\n\r\n>The component responsible for playing those sounds gets unmounted, other screen gets committed to the browser and at this moment a timeout from the throttle gets executed and the sound is played. The user gets confused because there is no visual element (anymore) associated with that sound notification.\r\n\r\nThe delay we're talking about is at most one frame. I don't quite see how it would be distinguishable to the user if it's not directly visual. In fact playing a sound via browser API is likely to be slightly delayed and isn't precise either.","updated_at":"2020-08-21T13:57:19Z","created_at":"2020-08-21T13:49:36Z","creator_user_login":"gaearon"}
{"number":19671,"comment_id":"678333404","body":"Hi Dan,\r\n\r\nWhat if in the meantime an action that pushes a notification to a global state was done ?\r\nThe notification will be displayed to the user despite that the component is unmounted (which generally indicates that the user moved on and no longer interested of what the component may produce (aborted)).","updated_at":"2020-08-21T14:55:01Z","created_at":"2020-08-21T14:55:01Z","creator_user_login":"incepter"}
{"number":19671,"comment_id":"678337743","body":"Consider a situation where with React 16, an action fires and you display the notification *just* before the unmounting — let's say, 10 milliseconds before that. Then 10 ms later component unmounts. What do you do with the notification? Do you delete it from the screen after it has already been shown? This seems like it would cause a flash that is not particularly helpful to the user. I'd argue that most apps would *keep* the notification even if it's no longer relevant.\r\n\r\nWe've just established that **even without asynchronous behavior, we may *already* have situation where the user sees a notification that's no longer relevant** (because the action fired just before the unmount). By this argument, since the user can't perceive the difference between \"10 ms before\" and \"10 ms after\", it's also fine to show it if the action fires a millisecond after unmount. The difference is simply not perceivable.\r\n\r\nI would agree to your argument if we were talking about behavior spanning a noticeable interval (e.g. a second) but we're talking about a single frame.","updated_at":"2020-08-21T15:01:36Z","created_at":"2020-08-21T15:01:12Z","creator_user_login":"gaearon"}
{"number":19671,"comment_id":"678766301","body":"> even without asynchronous behavior, we may already have situation where the user sees a notification that's no longer relevant.\r\n\r\nI totally agree with you on this.\r\n\r\nBy pushing a notification I was referring to a somehow orchestrated notification system that will display for several seconds a snackbar (with interactive user actions) or whatever on the screen.\r\n\r\nWhat bothers me about this, is that single frame is a place where side effects can be triggered. And a side effect, can do any sort of things (sockets, navigation, global mutations...). Which means for me that this is a place for bugs that are the hardest to find/debug.\r\n\r\nAlso, Let's say I have a unit test which is frame-exact in which I unmount a component and I expect a function not to be called. If I understand well the react 17 behavior, some of my tests may fail depending on the machine I am running my tests on. which would involve rewriting some tests and components while upgrading.\r\n\r\nOn the other side, If something resolves/changes in a single frame while unmounting and before the cleanup, it should be treated like a success operation.","updated_at":"2020-08-23T12:09:07Z","created_at":"2020-08-23T12:08:47Z","creator_user_login":"incepter"}
{"number":19671,"comment_id":"678785521","body":">By pushing a notification I was referring to a somehow orchestrated notification system that will display for several seconds a snackbar (with interactive user actions) or whatever on the screen.\r\n\r\nRight, in which case it doesn't strictly matter if it gets cancelled at the last moment or not. I think my argument above shows that, but let me know if I missed something.\r\n\r\n>What bothers me about this, is that single frame is a place where side effects can be triggered. And a side effect, can do any sort of things (sockets, navigation, global mutations...). Which means for me that this is a place for bugs that are the hardest to find/debug.\r\n\r\nThis is still too vague to respond to directly. Like I noted above, we need to discuss a specific case.\r\n\r\n>Also, Let's say I have a unit test which is frame-exact in which I unmount a component and I expect a function not to be called. If I understand well the react 17 behavior, some of my tests may fail depending on the machine I am running my tests on.\r\n\r\nI don't see how that would be the case. The behavior is deterministic — the effects are flushed after the component is unmounted. To wait for both to happen in tests, you should use `act()`, just like a warning tells if you (if you forget to do it).\r\n\r\nAgain, this fully mirrors the existing behavior of `useEffect` for mounting and updates.\r\n\r\n","updated_at":"2020-08-23T15:08:49Z","created_at":"2020-08-23T15:08:30Z","creator_user_login":"gaearon"}
{"number":19671,"comment_id":"692258905","body":"I have a similar concern about this with maybe a more concrete example;\r\n\r\n```javascript\r\nconst MyComponent = ({ destination }) => {\r\n  const handleMessage = useCallback((e) => {\r\n    fetch(destination); // or some other state changing action, such as mutating a reducer in a context\r\n  }, [destination]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('message', handleMessage);\r\n    return () => window.removeEventListener('message', handleMessage);\r\n  }, [handleMessage]);\r\n\r\n  return (<div>Listening for messages</div>);\r\n}\r\n```\r\n\r\n1. is the teardown still guaranteed to be called before the next setup? (e.g. if `destination` changes, is there any chance that both the old and new listener could be bound at the same time?)\r\n2. if I have a parent component like below, could 2 listeners be active at once during the layout transition?\r\n\r\n```javascript\r\nconst MyParentComponent = () => {\r\n  const narrowView = useIsWindowNarrow();\r\n\r\n  if (narrowView) {\r\n    return (<section><MyComponent /></section>);\r\n  } else {\r\n    return (<section><div><MyComponent /></div></section>); // (i.e. something which prevents reusing the existing MyComponent)\r\n  }\r\n}\r\n```\r\n\r\n---\r\n\r\nShould effects which use `addEventListener` be using `useLayoutEffect`? If so that should definitely be documented! or will this still be safe?","updated_at":"2020-09-14T19:16:53Z","created_at":"2020-09-14T19:16:53Z","creator_user_login":"davidje13"}
{"number":19671,"comment_id":"782171604","body":"I encountered a component like the following in our codebase and tried to understand if it's still correct after the changes to effect cleanup in React 17. It's supposed to act as any other controlled input component but fetch the city from our server instead of the user having to type it.\r\n```JSX\r\nfunction ZipCity({ zipCode, city, onChange }) {\r\n  useEffect(() => {\r\n    let isCanceled = false\r\n    getCityForZipCode(zipCode).then(\r\n      city => {\r\n        if (!isCanceled) onChange(city)\r\n      },\r\n      error => {\r\n        if (!isCanceled) onChange(\"Unknown city\")\r\n      }\r\n    )\r\n    return () => { isCanceled = true }\r\n  }, [onChange])\r\n  \r\n  return <input readOnly value={city} />\r\n}\r\n```\r\nThe code doesn't do anything layout related and it looks like it handles cancellation correctly but what happens if getCityForZipCode resolve just as the component get unmounted?\r\n\r\nHere is a a more contrived example that attempts to force it to resolve at a bad time. In React 16 clicking the Hide button always unmounts the component but in React 17 it sometimes immediately gets remounted.\r\nhttps://codesandbox.io/s/react-17-useeffect-race-condition-kn8hd?file=/src/App.js\r\n\r\nThis is a race condition that can occur any time a callback prop or context callback is called asynchronously in useEffect and that callback props sets state in an ancestor component. This doesn't seem like something that should be that uncommon.\r\n\r\nI realized that this race condition isn't limited to React 17 as something similar could happen during a component update instead of a component unmount in earlier versions.\r\n\r\nBeing a race condition it will most likely be very hard to debug and seem like a foot gun in React. It might only occur once every thousand executions.\r\n\r\nThe only proper solution i can see would be to always perform cleanup synchronously and instead recommend against expensive cleanup functions. Until then there should at least be a more detailed section in the docs on when you need to use useLayoutEffect instead of useEffect even if the code has nothing to do with layout.","updated_at":"2021-02-19T16:06:32Z","created_at":"2021-02-19T16:06:32Z","creator_user_login":"GabbeV"}
{"number":26224,"comment_id":"1442427970","body":"Seems like Next.js 13.2 has improved [their error overlays](https://nextjs.org/blog/next-13-2#improved-error-overlay) and local debugging experience for these - https://github.com/facebook/react/issues/24519#issuecomment-1439915463\r\n\r\nhttps://github.com/vercel/next.js/pull/45089 seems to be this PR\r\n\r\nEdit: These are dev only - which still means the production stacktraces still have the same problem - which is what we are looking to improve here.","updated_at":"2023-02-23T21:17:57Z","created_at":"2023-02-23T21:03:05Z","creator_user_login":"AbhiPrasad"}
{"number":26224,"comment_id":"1442741313","body":"Thanks for reaching out.\r\n\r\n>So with that in mind, are there ways we could make this easier for users? Could we attach a componentStack like we do with error boundaries for these errors? Could we point users to the element that was causing this issue? Any and all ideas/feeback greatly appreciated.\r\n\r\nI believe you should be receiving those in the `onRecoverableError` callback for `hydrateRoot` as the second argument. I think on main we might also be patching it onto the error object (not sure, would need to check).\r\n\r\nIs that helpful? Should we be doing more?","updated_at":"2023-02-24T03:12:35Z","created_at":"2023-02-24T03:12:35Z","creator_user_login":"gaearon"}
{"number":26224,"comment_id":"1443060791","body":"Appreciate the quick response!\r\n\r\n> I believe you should be receiving those in the `onRecoverableError` callback for `hydrateRoot` as the second argument\r\n\r\nSo this works pretty decently to a certain extent, we just have to convince framework authors to expose these hooks more easily, as it's better than nothing.\r\n\r\nFor [425](https://reactjs.org/docs/error-decoder.html/?invariant=425) and [418](https://reactjs.org/docs/error-decoder.html/?invariant=418), we get `componentStacks`:\r\n\r\n```\r\na\r\ndiv\r\ni\r\nu@http://0.0.0.0:3000/_next/static/chunks/main-705a528c766ed2ff.js:1:33240\r\n401/t.PathnameContextProviderAdapter@http://0.0.0.0:3000/_next/static/chunks/main-705a528c766ed2ff.js:1:42849\r\nG@http://0.0.0.0:3000/_next/static/chunks/main-705a528c766ed2ff.js:1:7595\r\nY@http://0.0.0.0:3000/_next/static/chunks/main-705a528c766ed2ff.js:1:9134\r\nea@http://0.0.0.0:3000/_next/static/chunks/main-705a528c766ed2ff.js:1:11907\r\n``` \r\n\r\nSo here `a`, `div`, and `i` are react components, which should help a lot with debugging. The only issue is that they don't have function names/line and col numbers - so we can't apply sourcemaps to transform these into readable component names. Of course people can set a `displayName`, but that's not realistic for a bigger application.\r\n\r\nHere's some basic boilerplate that will work to send this stuff to an error monitoring service:\r\n\r\n  ```js\r\nfunction onRecoverableError(error, errInfo) {\r\n   let context = {};\r\n  \r\n    if (errInfo && errInfo.componentStack) {\r\n       // generating this synthetic error allows services like Sentry to apply sourcemaps\r\n       // to unminify the stacktrace and make it readable.\r\n       const errorBoundaryError = new Error(error.message);\r\n       errorBoundaryError.name = `React ErrorBoundary ${errorBoundaryError.name}`;\r\n       errorBoundaryError.stack = errorInfo.componentStack;\r\n  \r\n       // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause\r\n       error.cause = errorBoundaryError\r\n  \r\n       // you can also just add the plain text as some kind of added event context\r\n       context.react = {\r\n         componentStack: errorInfo.componentStack\r\n       }\r\n    }\r\n   // feel free to replace with your favourite error monitoring service\r\n   Sentry.captureException(error, { context })\r\n}\r\n```\r\n\r\nIt seems like [423](https://reactjs.org/docs/error-decoder.html/?invariant=423) does not generate a `componentStack` though. Given though that the other invariants are always thrown with this, I think it's fine.\r\n\r\nSo with that in mind two immediate items:\r\n\r\n1. We have to convince framework authors to expose `onRecoverableError`. \r\n\r\nSeems like this has been a feature request in [Next.js](https://github.com/vercel/next.js/discussions/36641), and it seems [Astro can also improve here](https://github.com/withastro/astro/blob/a848a723f65b7feed31da7b89da4444e9331b221/packages/integrations/react/client.js#L35). Remix thankfully seems to be super [transparent with exposing `hydrateRoot`](https://github.com/remix-run/blues-stack/blob/b6a0442a7b43858ceac0192e3027d62842761ec3/app/entry.client.tsx#L7). [Gatsby also allows for this](https://www.gatsbyjs.com/docs/reference/config-files/gatsby-browser/#replaceHydrateFunction). We at Sentry can help talk to these folks!\r\n\r\n2. We need better frames for the react components in the `componentStack`.\r\n\r\nWithout proper frames, we can never apply sourcemaps, so users are stuck with minified component names.\r\n\r\nAs for anything else, I'm trying to brainstorm what other tools we can give to people to help identify what to fix here. Ideally most folks just want the line of code that they need to change.\r\n\r\nIf bundle size is a concern from adding new logic, perhaps we can add an API that returns a errored response to the server that CSR had to occur. Then the server could report many details about what kind of HTML it tried to serve, and as along as you can trace the error somehow between backend/frontend, you might be able to debug this faster.","updated_at":"2023-02-24T10:17:38Z","created_at":"2023-02-24T08:09:27Z","creator_user_login":"AbhiPrasad"}
{"number":26224,"comment_id":"1444303755","body":">So here a, div, and i are react components, which should help a lot with debugging. The only issue is that they don't have function names/line and col numbers - so we can't apply sourcemaps to transform these into readable component names.\r\n\r\nAren't these built-in ones like `<a>` etc? You should be able to map the actual React components further in the stack. Yes, this wouldn't tell the exact location, but would at least narrow it down to the component function.\r\n\r\n> we just have to convince framework authors to expose these hooks more easily, as it's better than nothing.\r\n\r\nOr maybe we should patch it onto the object. We already patch `err.digest` on main. I'll ask if we considered doing the same for `.componentStack` and why (not).\r\n\r\n>Here's some basic boilerplate that will work to send this stuff to an error monitoring service:\r\n\r\nFair, this could work too.\r\n\r\n>It seems like [423](https://reactjs.org/docs/error-decoder.html/?invariant=423) does not generate a componentStack though. Given though that the other invariants are always thrown with this, I think it's fine.\r\n\r\nCan you provide a repro case? I could have a look.\r\n\r\n>Without proper frames, we can never apply sourcemaps, so users are stuck with minified component names.\r\n\r\nIt's not obvious to me why the frames in the stack you mentioned aren't proper. They are reconstructed from actual stack lines merged together so they _should_ give you React component functions. The only missing parts are components like `<div>`. What am I missing?\r\n\r\n","updated_at":"2023-02-24T19:19:38Z","created_at":"2023-02-24T19:19:38Z","creator_user_login":"gaearon"}
{"number":26224,"comment_id":"1447973988","body":"> Or maybe we should patch it onto the object. We already patch `err.digest` on main. I'll ask if we considered doing the same for `.componentStack` and why (not).\r\n\r\nHaving `componentStack` as a property on hydration errors would be really cool and useful.\r\n\r\nEven though it would also be cool to have file/lineno/col for individual tags I don't think it is absolutely necessary - without it the component stack is already useful enough. Implementing this would probably mean having to patch the stack trace together somehow using synthetic errors which is probably quite expensive.","updated_at":"2023-02-28T10:57:59Z","created_at":"2023-02-28T10:57:59Z","creator_user_login":"lforst"}
{"number":26224,"comment_id":"1456057967","body":"@gaearon apologize for the delay, had gone on vacation last week!\r\n\r\nmade a quick example to help address some of the points you made: https://github.com/AbhiPrasad/nextjs-hydration-error-example using a nextjs app.\r\n\r\nI had to [monkeypatch `onRecoverableError`](https://github.com/AbhiPrasad/nextjs-hydration-error-example/blob/cc87bb1b477b49abbc18262f1023a47f2f971331/sentry.client.config.js#L12-L38) since next does not expose this, so please excuse that part of the code 😅. \r\n\r\n> Aren't these built-in ones like <a> etc? You should be able to map the actual React components further in the stack. Yes, this wouldn't tell the exact location, but would at least narrow it down to the component function.\r\n\r\nYou're right that they mostly help. We generally get a `componentStack` like so in prod builds: \r\n\r\n```\r\ndiv\r\nmain\r\np\r\ni@http://localhost:3000/_next/static/chunks/pages/_app-53818a55c8835939.js:14:12349\r\n6985/t.PathnameContextProviderAdapter@http://localhost:3000/_next/static/chunks/main-b1241a9a70bb7dcd.js:1:42869\r\nG@http://localhost:3000/_next/static/chunks/main-b1241a9a70bb7dcd.js:1:7600\r\nY@http://localhost:3000/_next/static/chunks/main-b1241a9a70bb7dcd.js:1:9138\r\nea@http://localhost:3000/_next/static/chunks/main-b1241a9a70bb7dcd.js:1:11913\r\n```\r\n\r\nThis + the URL of the page is usually good enough to figure out where the issue is. The problem is they aren't solely the built-in components all the time, so we get minified React component names in there for more complex use cases, which is still pretty confusing for users.\r\n\r\n```\r\np\r\ndiv\r\nm // minified name\r\ndiv\r\nf // minified name\r\ndiv\r\nh // minified name\r\nmain\r\np\r\ni@http://localhost:3000/_next/static/chunks/pages/_app-53818a55c8835939.js:14:12349\r\n6985/t.PathnameContextProviderAdapter@http://localhost:3000/_next/static/chunks/main-b1241a9a70bb7dcd.js:1:42869\r\nG@http://localhost:3000/_next/static/chunks/main-b1241a9a70bb7dcd.js:1:7600\r\nY@http://localhost:3000/_next/static/chunks/main-b1241a9a70bb7dcd.js:1:9138\r\nea@http://localhost:3000/_next/static/chunks/main-b1241a9a70bb7dcd.js:1:11913\r\n```\r\n\r\n> Or maybe we should patch it onto the object. We already patch err.digest on main. I'll ask if we considered doing the same for .componentStack and why (not).\r\n\r\nThis would be great!\r\n\r\n> Can you provide a repro case? I could have a look.\r\n\r\nWhen running https://github.com/AbhiPrasad/nextjs-hydration-error-example in production mode, [invariant 423](https://reactjs.org/docs/error-decoder.html/?invariant=423) does not generate a `componentStack` (message: `There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering.`)\r\n\r\n```ts\r\nconsole.log(error);\r\nconsole.log(errorInfo);\r\nconsole.log(errorInfo.componentStack);\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/18689448/223111215-88963a1a-3998-4ee5-a7fc-d56945fd756a.png)\r\n\r\n> It's not obvious to me why the frames in the stack you mentioned aren't proper. They are reconstructed from actual stack lines merged together so they should give you React component functions. The only missing parts are components like <div>. What am I missing?\r\n\r\nThis is partly a Sentry consequence, since we need the filename and line/col number to do source mapping, which helps with the case where there are minified component names in the stacktrace. Something like `G@http://localhost:3000/_next/static/chunks/main-b1241a9a70bb7dcd.js:1:7600` for example.\r\n\r\nBut we can live without this for now!\r\n\r\nFinally, when you generate a hydration issue, you get 3 errors thrown:\r\n\r\n1. [425](https://reactjs.org/docs/error-decoder.html/?invariant=425): `Text content does not match server-rendered HTML.`\r\n2. [418](https://reactjs.org/docs/error-decoder.html/?invariant=418): `Hydration failed because the initial UI does not match what was rendered on the server.`\r\n3. [423](https://reactjs.org/docs/error-decoder.html/?invariant=423): `There was an error while hydrating. Because the error happened outside of a Suspense boundary, the entire root will switch to client rendering.`\r\n\r\nI understand why all of these errors must be thrown (they all signal different parts of the problem), but IMO the experience of getting all of these in the console/in your production error monitoring system is confusing and can be overwhelming for users, especially those on the more junior side. Perhaps we can think of a way of reducing the amount of errors thrown?","updated_at":"2023-03-06T12:36:54Z","created_at":"2023-03-06T12:36:54Z","creator_user_login":"AbhiPrasad"}
{"number":26224,"comment_id":"1461755490","body":"Should we reduce the errors or describe better how to treat these?\r\n\r\n\r\nSomething in the direction of\r\n```diff\r\n-Text content does not match server-rendered HTML.\r\n+Hydration error: Text content does not match server-rendered HTML.\r\n\r\n- Hydration failed because the initial UI does not match what was rendered on the server.\r\n+ Hydration failed because the initial UI does not match what was rendered on the server. To fix this error, fix all the hydration errors above.\r\n```\r\n\r\n423 helps understand the impact. Though it would be nice to understand if 423 implies 418 or 418 implies 423 and what value there is in having these separated. For 425 I understand because we might have multiple 425 but just one 418 if I understood these correctly.","updated_at":"2023-03-09T10:30:36Z","created_at":"2023-03-09T10:30:36Z","creator_user_login":"eps1lon"}
{"number":26224,"comment_id":"1461832626","body":"I feel like the better description is a great first step - especially because it clearly shows how the errors are related together.\r\n\r\n> 423 helps understand the impact\r\n\r\nAgree here - though it would also be nice to somehow get an idea of the potential consequence of this error. Maybe this is something that Sentry or other performance monitoring tools can help with (show how LCP suffered because 423 fired on a page).\r\n\r\nA cool idea I had mulling around was that when react does it's client-side re-render, we attach [the `elementtiming` attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/elementtiming) somehow to the client-side rendered elements somehow.\r\n\r\n> Though it would be nice to understand if 423 implies 418 or 418 implies 423 and what value there is in having these separated. For 425 I understand because we might have multiple 425 but just one 418 if I understood these correctly\r\n\r\nYes, you might have multiple instances of 425, which I think should make sense to the average developer. Getting the `componentStack` directly on the error obj should also help even more here.","updated_at":"2023-03-09T11:16:42Z","created_at":"2023-03-09T11:16:42Z","creator_user_login":"AbhiPrasad"}
{"number":24569,"comment_id":"1129523575","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 357a61324f8d746a7f745dfc57009ba952c7d640...40e9162c191a243782c9d825c2d698be0319bc51\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 131.49 kB | 131.49 kB | = | 42.15 kB | 42.15 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 136.73 kB | 136.73 kB | = | 43.69 kB | 43.69 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 441.13 kB | 441.13 kB | = | 80.41 kB | 80.41 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 426.34 kB | 426.34 kB | = | 78.23 kB | 78.23 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 441.13 kB | 441.13 kB | = | 80.42 kB | 80.41 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-experimental/scheduler/cjs/scheduler.production.min.js | **=** | 4.24 kB | 4.22 kB | = | 1.78 kB | 1.77 kB\n| oss-stable-semver/scheduler/cjs/scheduler.production.min.js | **=** | 4.24 kB | 4.22 kB | = | 1.78 kB | 1.77 kB\n| oss-stable/scheduler/cjs/scheduler.production.min.js | **=** | 4.24 kB | 4.22 kB | = | 1.78 kB | 1.77 kB\n| facebook-www/Scheduler-dev.classic.js | **=** | 24.67 kB | 24.58 kB | = | 6.62 kB | 6.61 kB\n| facebook-www/Scheduler-dev.modern.js | **=** | 24.67 kB | 24.58 kB | = | 6.62 kB | 6.61 kB\n| facebook-react-native/scheduler/cjs/Scheduler-dev.js | **=** | 17.52 kB | 17.43 kB | = | 4.94 kB | 4.93 kB\n| oss-experimental/scheduler/cjs/scheduler.development.js | **=** | 17.50 kB | 17.41 kB | = | 4.93 kB | 4.92 kB\n| oss-stable-semver/scheduler/cjs/scheduler.development.js | **=** | 17.50 kB | 17.41 kB | = | 4.93 kB | 4.92 kB\n| oss-stable/scheduler/cjs/scheduler.development.js | **=** | 17.50 kB | 17.41 kB | = | 4.93 kB | 4.92 kB\n| facebook-www/Scheduler-profiling.classic.js | **=** | 15.90 kB | 15.81 kB | = | 3.71 kB | 3.70 kB\n| facebook-www/Scheduler-profiling.modern.js | **=** | 15.90 kB | 15.81 kB | = | 3.71 kB | 3.70 kB\n| facebook-www/Scheduler-prod.classic.js | **=** | 11.58 kB | 11.48 kB | = | 2.88 kB | 2.86 kB\n| facebook-www/Scheduler-prod.modern.js | **=** | 11.58 kB | 11.48 kB | = | 2.88 kB | 2.86 kB\n| facebook-react-native/scheduler/cjs/Scheduler-profiling.js | **=** | 10.88 kB | 10.78 kB | = | 2.74 kB | 2.72 kB\n| facebook-react-native/scheduler/cjs/Scheduler-prod.js | **=** | 10.27 kB | 10.18 kB | = | 2.60 kB | 2.58 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 40e9162c191a243782c9d825c2d698be0319bc51\n</p>\n","updated_at":"2022-05-18T03:22:07Z","created_at":"2022-05-18T03:18:11Z","creator_user_login":"sizebot"}
{"number":24647,"comment_id":"1145070291","body":"I have already fixed this bug so It's not an issue but if its it production the page won't crash so there goes one useEffect and one useState on a react web app, no worries though. but its better to correct that error. ","updated_at":"2022-06-02T16:32:15Z","created_at":"2022-06-02T16:32:15Z","creator_user_login":"nikikalwar"}
{"number":24647,"comment_id":"1528021784","body":"I'm still seeing this in `react-dom 18.2.0` running inside `next 13.3.1`:\r\n\r\n```\r\nUnhandled Runtime Error\r\nError: Should have a queue. This is likely a bug in React. Please file an issue.\r\n\r\nCall Stack\r\nupdateReducer\r\n../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js (16572:0)\r\nObject.useReducer\r\n../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js (17898:0)\r\nObject.useReducer\r\n../node_modules/.pnpm/react@18.2.0/node_modules/react/cjs/react.development.js (1626:0)\r\nReactDevOverlay\r\n../node_modules/.pnpm/next@13.3.1_react-dom@18.2.0_react@18.2.0/node_modules/next/dist/compiled/@next/react-dev-overlay/dist/client.js (851:955)\r\nrenderWithHooks\r\n../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js (16305:0)\r\nupdateFunctionComponent\r\n../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js (19588:0)\r\nbeginWork\r\n../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js (21601:0)\r\nHTMLUnknownElement.callCallback\r\n../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js (4164:0)\r\nObject.invokeGuardedCallbackDev\r\n../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js (4213:0)\r\ninvokeGuardedCallback\r\n../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js (4277:0)\r\nbeginWork$1\r\n../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js (27451:0)\r\nperformUnitOfWork\r\n../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js (26557:0)\r\nworkLoopSync\r\n../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js (26466:0)\r\nrenderRootSync\r\n../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js (26434:0)\r\nperformConcurrentWorkOnRoot\r\n../node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js (25738:0)\r\nworkLoop\r\n../node_modules/.pnpm/scheduler@0.23.0/node_modules/scheduler/cjs/scheduler.development.js (266:0)\r\nflushWork\r\n../node_modules/.pnpm/scheduler@0.23.0/node_modules/scheduler/cjs/scheduler.development.js (239:0)\r\nMessagePort.performWorkUntilDeadline\r\n../node_modules/.pnpm/scheduler@0.23.0/node_modules/scheduler/cjs/scheduler.development.js (533:0)\r\n```\r\n![Screenshot 2023-04-28 at 2 50 19 PM](https://user-images.githubusercontent.com/2007084/235241058-a7e448d0-e4d1-441c-99bb-0aa2edbb1172.png)\r\n![Screenshot 2023-04-28 at 2 50 31 PM](https://user-images.githubusercontent.com/2007084/235241097-075c1d2a-0e56-4485-b71d-07baf3de51b6.png)\r\n\r\n","updated_at":"2023-04-28T19:55:50Z","created_at":"2023-04-28T19:55:50Z","creator_user_login":"samuelgoff"}
{"number":24712,"comment_id":"1153263143","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: f7b44539ca9c2d126c7d12cfd0d9d4f13ad5851f...abf09f4d3cf0b2b644d7ce6b40f641b936c00593\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 131.78 kB | 131.78 kB | = | 42.31 kB | 42.31 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 137.05 kB | 137.05 kB | = | 43.90 kB | 43.90 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 441.11 kB | 441.11 kB | = | 80.68 kB | 80.68 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 426.42 kB | 426.42 kB | = | 78.49 kB | 78.49 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 441.82 kB | 441.82 kB | = | 80.90 kB | 80.90 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react/umd/react.production.min.js | **=** | 10.76 kB | 10.74 kB | = | 4.28 kB | 4.27 kB\n| oss-stable/react/umd/react.profiling.min.js | **=** | 10.76 kB | 10.74 kB | = | 4.28 kB | 4.27 kB\n| oss-stable-semver/react/umd/react.production.min.js | **=** | 10.74 kB | 10.71 kB | = | 4.26 kB | 4.25 kB\n| oss-stable-semver/react/umd/react.profiling.min.js | **=** | 10.74 kB | 10.71 kB | = | 4.25 kB | 4.25 kB\n| facebook-react-native/scheduler/cjs/Scheduler-dev.js | **=** | 17.52 kB | 17.48 kB | = | 4.94 kB | 4.94 kB\n| oss-experimental/scheduler/cjs/scheduler.development.js | **=** | 17.50 kB | 17.45 kB | = | 4.93 kB | 4.93 kB\n| oss-stable-semver/scheduler/cjs/scheduler.development.js | **=** | 17.50 kB | 17.45 kB | = | 4.93 kB | 4.93 kB\n| oss-stable/scheduler/cjs/scheduler.development.js | **=** | 17.50 kB | 17.45 kB | = | 4.93 kB | 4.93 kB\n| facebook-www/Scheduler-profiling.classic.js | **=** | 15.90 kB | 15.86 kB | = | 3.71 kB | 3.71 kB\n| facebook-www/Scheduler-profiling.modern.js | **=** | 15.90 kB | 15.86 kB | = | 3.71 kB | 3.71 kB\n| oss-experimental/scheduler/cjs/scheduler.production.min.js | **=** | 4.24 kB | 4.22 kB | +0.06% | 1.78 kB | 1.78 kB\n| oss-stable-semver/scheduler/cjs/scheduler.production.min.js | **=** | 4.24 kB | 4.22 kB | +0.06% | 1.78 kB | 1.78 kB\n| oss-stable/scheduler/cjs/scheduler.production.min.js | **=** | 4.24 kB | 4.22 kB | +0.06% | 1.78 kB | 1.78 kB\n| facebook-www/Scheduler-prod.classic.js | **=** | 11.58 kB | 11.54 kB | = | 2.88 kB | 2.87 kB\n| facebook-www/Scheduler-prod.modern.js | **=** | 11.58 kB | 11.54 kB | = | 2.88 kB | 2.87 kB\n| facebook-react-native/scheduler/cjs/Scheduler-profiling.js | **=** | 10.88 kB | 10.84 kB | = | 2.74 kB | 2.73 kB\n| facebook-react-native/scheduler/cjs/Scheduler-prod.js | **=** | 10.27 kB | 10.23 kB | = | 2.60 kB | 2.59 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against abf09f4d3cf0b2b644d7ce6b40f641b936c00593\n</p>\n","updated_at":"2022-06-12T19:03:38Z","created_at":"2022-06-12T19:03:38Z","creator_user_login":"sizebot"}
{"number":24600,"comment_id":"1138081696","body":"I tried a few times and haven't been able repro so far... Is this a stable repro on your side?","updated_at":"2022-05-26T02:35:30Z","created_at":"2022-05-26T02:35:30Z","creator_user_login":"mondaychen"}
{"number":24600,"comment_id":"1146804028","body":"yes it's happening and reproducible !!\r\n\r\nCan i look into this issue or any clue @gaearon what could have caused this then let me know i can work on this fix!\r\n\r\n<img width=\"726\" alt=\"Screenshot 2022-06-05 at 6 50 57 PM\" src=\"https://user-images.githubusercontent.com/10995431/172052550-d91d9c74-3483-448b-93e1-854554807cae.png\">\r\n","updated_at":"2022-06-05T13:23:53Z","created_at":"2022-06-05T13:23:53Z","creator_user_login":"sidverma32"}
{"number":24600,"comment_id":"1146834121","body":"I can reproduce this when a Suspense boundary hydrates. The Suspense boundary itself has no width in the flamechart but its children have. So if the siblings of a Suspense boundary have children then the children of the Suspense boundary will overlap with the children of the Suspense boundaries siblings.\r\n\r\nMinimal repro: https://codesandbox.io/s/overlapping-flamecharts-6402wk\r\n\r\nSuspense boundary not hydrated:\r\n![overlapping-flamechart-1](https://user-images.githubusercontent.com/12292047/172057871-04318b22-a841-4e65-97c1-6fe6ad568677.png)\r\nSuspense boundary was hydrated. The new `<Expensive />` looks like a child of another `<Expensive />` but it's actually a child of a Suspense boundary that has 0 width.\r\n![overlapping-flamechart-2](https://user-images.githubusercontent.com/12292047/172057909-6ca017a3-8c34-4b1b-b103-0acd7510941a.png)\r\n\r\n","updated_at":"2022-06-05T19:58:44Z","created_at":"2022-06-05T15:27:23Z","creator_user_login":"eps1lon"}
{"number":24696,"comment_id":"1153278670","body":"There's no \"inconsistency in the state\".  An update has been _queued_, but the update does not get _applied_ until the actual render pass.\r\n\r\nOne reason for this is that it's possible that if we set state in component A, other state updates may also get queued that could result in component A's parent no longer rendering A any more.  In that case, component A needs to be unmounted, not updated, and there's no point in trying to update its state.\r\n\r\n(Also, the way you're describing some of these aspects makes it sound like you're still using class components, rather than function components.  While the same basic answer I gave also applies to function components, note that there isn't any `this` in a function component, and it's also not necessarily a \"state object\".)","updated_at":"2022-06-12T20:00:05Z","created_at":"2022-06-12T20:00:05Z","creator_user_login":"markerikson"}
{"number":24696,"comment_id":"1295959831","body":"Is there any harm in decoupling the state update from the re-rendering logic? That is, move the code which updates state from the asynchronous function to setState()'s, and let the rest of the behavior remain as-is?\r\n\r\nWould there be a significant performance drop as a result of decoupling when state is updated from when the DOM is? Negative performance from immediate state updates would be offset by current workarounds implemented to manage next state values and aggregating multiple sub-states into a single state change. Or perhaps there is some other impact this decoupling causes?","updated_at":"2022-10-29T20:11:46Z","created_at":"2022-10-29T20:11:46Z","creator_user_login":"huperniketes"}
{"number":25525,"comment_id":"1287777336","body":"This can be resolved by adding a timeout\r\n\r\nsetTimeout(() => {\r\n        ref.current?.click();\r\n        URL.revokeObjectURL(url);\r\n      }, 100);","updated_at":"2022-10-22T12:29:40Z","created_at":"2022-10-22T12:29:40Z","creator_user_login":"72gm"}
{"number":25525,"comment_id":"1292183785","body":"@72gm Why is this timeout required though? Shouldn't it instantly download like in 17?","updated_at":"2022-10-26T14:58:51Z","created_at":"2022-10-26T14:58:51Z","creator_user_login":"SoulPancake"}
{"number":25525,"comment_id":"1292710090","body":"@Anuragkillswitch absolutely, it should work exactly the same in my opinion? I'd be interested to know why it doesn't?","updated_at":"2022-10-26T22:07:18Z","created_at":"2022-10-26T22:07:18Z","creator_user_login":"72gm"}
{"number":25525,"comment_id":"1293073924","body":"Support requests filed as GitHub issues often go unanswered. We want you to find the answer you're looking for, so we suggest the following alternatives:\r\n\r\nCoding Questions\r\nIf you have a coding question related to React and React DOM, it might be better suited for Stack Overflow. It's a great place to browse through frequent questions about using React, as well as ask for help with specific questions.\r\n\r\nhttps://stackoverflow.com/questions/tagged/react\r\n\r\nTalk to other React developers\r\nThere are many online forums which are a great place for discussion about best practices and application architecture as well as the future of React.\r\n\r\nhttps://reactjs.org/community/support.html","updated_at":"2022-10-27T06:52:35Z","created_at":"2022-10-27T06:52:35Z","creator_user_login":"eps1lon"}
{"number":25525,"comment_id":"1293776803","body":"@eps1lon can you advise why you don't think this is a bug?\r\n\r\nI believe this is the standard way to do this - and it works in v17, but not in v18... the same code, the only difference the version of React ... does this not make it a bug?","updated_at":"2022-10-27T16:23:45Z","created_at":"2022-10-27T16:23:33Z","creator_user_login":"72gm"}
{"number":25525,"comment_id":"1293927789","body":"Can you reduce this issue more? Try to remove as much files and indirection (e.g. by inlining functions) as possible. ","updated_at":"2022-10-27T18:45:41Z","created_at":"2022-10-27T18:45:41Z","creator_user_login":"eps1lon"}
{"number":24675,"comment_id":"1146843841","body":"I'm a bit confused. (Sorry, I don't know streams very well, so bear with me.) Isn't `renderToReadableStream` for W3C streams? Whereas you seem to be using `stream` which is Node.js streams. I believe `renderToPipeableStream` would give you a Node.js stream.","updated_at":"2022-06-05T16:30:05Z","created_at":"2022-06-05T16:30:05Z","creator_user_login":"gaearon"}
{"number":24675,"comment_id":"1147193005","body":"> I'm a bit confused. (Sorry, I don't know streams very well, so bear with me.) Isn't `renderToReadableStream` for W3C streams? Whereas you seem to be using `stream` which is Node.js streams. I believe `renderToPipeableStream` would give you a Node.js stream.\r\n\r\nMaybe the example could be even more correct, but it still should be iterable, take a look [here at the example](https://nodejs.org/api/webstreams.html#example-readablestream)","updated_at":"2022-06-06T08:35:48Z","created_at":"2022-06-06T08:35:48Z","creator_user_login":"tzachbon"}
{"number":24675,"comment_id":"1154524839","body":"The error you're seeing is that `ReadableStream` is not iterable, which is not specific to `ReactDOMServerReadableStream`\r\n\r\nThis is mostly an implementation issue for host environments (browsers, Node, Bun, etc). ReactDOM could subclass `ReadableStream` to add an async iterator implementation to work around it, but it'd be better for the host environment to fix it than React because hosts have more tools to make it performant","updated_at":"2022-06-13T23:00:26Z","created_at":"2022-06-13T22:49:25Z","creator_user_login":"Jarred-Sumner"}
{"number":24675,"comment_id":"1161200490","body":"@Jarred-Sumner I don't think `AsyncIterable` is something that can dependent on a host. Probably I don't know something, and we have hosts for React that somehow don't support EcmaScript? To be exact, how an implementation of `AsyncIterable` interface is different between Node and browser?\r\n\r\nIn addition to Node example above, here's [normative section](https://streams.spec.whatwg.org/#rs-asynciterator) about async iteration over ~W3C~WHATWG streams.","updated_at":"2022-06-21T03:48:10Z","created_at":"2022-06-21T03:29:49Z","creator_user_login":"reverofevil"}
{"number":24675,"comment_id":"1161213579","body":"At the moment DX is garbage: I have a `vite.transformIndexHtml` (_because, well, why would you want a stream? isn't memory infinite?_), so I have to convert a stream (_because, well, who needs to have a consistent API that generates same stuff as a string and as a stream?_) from React into a string first, and it turns out that, unlike all the \"modern\" streams it's not even `AsyncIterable` (_because, well, who cares about TC39 and their stupid proposals that are in production since 2017?_)","updated_at":"2022-06-21T03:42:04Z","created_at":"2022-06-21T03:42:04Z","creator_user_login":"reverofevil"}
{"number":24617,"comment_id":"1137773366","body":"When i remove that kind of stuff:         let elm = new Image() \r\nand all errors that come from\r\nmakes errors 1. \r\n```\r\n        <React.Suspense>\r\n            <Comp1 />\r\n            <Comp2 />\r\n        </React.Suspense>\r\n```\r\n\r\n\r\nworks way better 2. \r\n```\r\n        <React.Suspense>\r\n            <Comp1 />\r\n        </React.Suspense>\r\n        <React.Suspense>\r\n            <Comp2 />\r\n        </React.Suspense>\r\n```\r\n\r\nis it working but then i cant get \r\nelm.naturalHeight dynamicly which is bad. ","updated_at":"2022-05-25T19:37:02Z","created_at":"2022-05-25T19:36:06Z","creator_user_login":"Trackhe"}
{"number":15255,"comment_id":"584467792","body":"Is this something like **Application level tracing**?","updated_at":"2020-02-11T03:48:34Z","created_at":"2020-02-11T03:48:34Z","creator_user_login":"Brooooooklyn"}
{"number":24669,"comment_id":"1145981950","body":"This seems to be completely expected. When component suspends during initial render it is essentially not even mounted so it can't store any associated state, that is `useState`, `useRef`, etc. `useId` is not an exception","updated_at":"2022-06-03T13:45:36Z","created_at":"2022-06-03T13:45:36Z","creator_user_login":"vkurchatkin"}
{"number":24669,"comment_id":"1150943471","body":"@vkurchatkin That's besides the point: React does internally know that it's the same React element and, as a user, I'd expect React to provide the same `const id = useId()` since it's the same React element.\r\n\r\nI believe the mental model here to be \"same id\" <=> \"same React element\".\r\n\r\nThat's why I'd say it's a bug and not a feature request.\r\n\r\nBesides terminology, being able to use `useId()` with `<Suspense>` would be very convenient.\r\n\r\nFor me, it's actually the number 1 use case for `useId()`. (But I'm probably missing other use cases for `useId()`.)\r\n\r\nAnd, concretely, it's a blocker for the libraries I'm developing. For example:\r\n\r\n```js\r\nimport { useAsync } from 'react-streaming'\r\n\r\nfunction StarWarsMovies() {\r\n  return (\r\n    <div>\r\n      <p>List of Star Wars movies:</p>\r\n      <Suspense fallback={<p>Loading...</p>}>\r\n        <MovieList />\r\n      </Suspense>\r\n    </div>\r\n  )\r\n}\r\n\r\n// This component is isomorphic: it works on both the client-side and server-side.\r\n// The data fetched while SSR is automatically passed and re-used on the client for hydration.\r\nfunction MovieList() {\r\n  const movies = useAsync(async () => {\r\n    const response = await fetch('https://star-wars.brillout.com/api/films.json')\r\n    return response.json()\r\n  })\r\n  return (\r\n    <ul>\r\n      {movies.forEach((movie) => (\r\n        <li>\r\n          {movie.title} ({movie.release_date})\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n```\r\n\r\nBut this is currently not possible because `useId()` doesn't work with `<Suspsense>`.","updated_at":"2022-06-09T10:20:39Z","created_at":"2022-06-09T10:20:39Z","creator_user_login":"brillout"}
{"number":24669,"comment_id":"1151039392","body":"> That's besides the point: React does internally know that it's the same React element \r\n\r\nI don't think that it actually the case when a component suspends on initial render. There is simple no instance of the component in this case, so it can't be \"the same\"\r\n\r\n> For me, it's actually the number 1 use case for useId(). (But I'm probably missing other use cases for useId().)\r\n\r\nThe use case is spelled out in the documentation:\r\n\r\n> useId is a hook for generating unique IDs that are stable across the server and client, \r\n> while avoiding hydration mismatches.\r\n\r\nNo indication that it should work as you expect or support any use cases beyond hydration.\r\n\r\nThe reality is that you need for data fetching with Suspense you need to provide an explicit key. Every library in existance (e.g. React-Query) does just that.","updated_at":"2022-06-09T12:07:40Z","created_at":"2022-06-09T12:07:40Z","creator_user_login":"vkurchatkin"}
{"number":24669,"comment_id":"1151155470","body":"> The reality is that you need for data fetching with Suspense you need to provide an explicit key. Every library in existance (e.g. React-Query) does just that.\r\n\r\nYes, precisely, and being able to use `useId()` with `<Suspense>` would free users and library authors from the need for a cache key.\r\n\r\nI believe using `useId()` is more React idiomatic than a cache key. For example `useAsync()` fits the React mental model like a glove.\r\n\r\n> I don't think that it actually the case when a component suspends on initial render. There is simple no instance of the component in this case, so it can't be \"the same\"\r\n\r\nDoesn't React preserve siblings when a React component does a `throw promise`? That's what I would expect.\r\n\r\nIf yes, then React must have an internal bookkeeping to know which `throw promise` corresponds to which React element.\r\n\r\nAnd, in that case, it makes sense to say \"this is the same React element\".","updated_at":"2022-06-09T13:57:34Z","created_at":"2022-06-09T13:57:34Z","creator_user_login":"brillout"}
{"number":24669,"comment_id":"1151446985","body":"> I believe using useId() is more React idiomatic than a cache key. For example useAsync() fits the React mental model like a glove.\r\n\r\nIt can be idiomatic at the very least because it doesn't work and is based on a property of `useId` that never existed. Moreover it works strictly in \"Fetch-on-Render\" paradigm and for Suspense \"Render-as-You-Fetch\" is considered preferred and idiomatic. \" Render-as-You-Fetch\" requires explicit keys to populate the cache before you even start rendering and ids from `useId` are even known.","updated_at":"2022-06-09T18:14:35Z","created_at":"2022-06-09T18:14:35Z","creator_user_login":"vkurchatkin"}
{"number":24669,"comment_id":"1151549396","body":"I'm not sure I understand the problem.\r\n\r\nFor example:\r\n\r\n```jsx\r\nfunction TodoList() {\r\n  const todoList = useAsync(async () => {\r\n    const response = await fetch('https://api.todo-list.com')\r\n    return response.json()\r\n  })\r\n\r\n  return (\r\n    <ul>\r\n      {todoList.forEach((todoItem) => (\r\n        <li>\r\n          {todoItem.text}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  )\r\n}\r\n\r\nfunction App() {\r\n  <>\r\n    <SideBar>\r\n      <Navigation />\r\n    </SideBar>\r\n    <MainView>\r\n      <TodoList />\r\n    </MainView>\r\n  </>\r\n}\r\n```\r\n\r\nWhere do you see a problem with that?\r\n\r\nThis seems React idiomatic to me: the fetched data `todoList` of the component `<TodoList/>` is refetched only if `useId()` changes, that is when `<TodoList/>` is unmounted and mounted again. As a user, this is what I would expect.\r\n","updated_at":"2022-06-09T19:41:43Z","created_at":"2022-06-09T19:41:43Z","creator_user_login":"brillout"}
{"number":24669,"comment_id":"1151592020","body":"I don't see a problem with that, except:\r\n - it is not really possible implement (if you don't consider using `fn.toString()` as key)\r\n - it is definitely not idiomatic use of Suspense, since Suspense is design with [Render-as-You-Fetch](https://17.reactjs.org/docs/concurrent-mode-suspense.html#approach-3-render-as-you-fetch-using-suspense) strategy in mind, which means that fetching has to be triggered outside of the component \r\n\r\n\r\n","updated_at":"2022-06-09T20:32:57Z","created_at":"2022-06-09T20:32:57Z","creator_user_login":"vkurchatkin"}
{"number":24669,"comment_id":"1152981914","body":"> it is definitely not idiomatic use of Suspense\r\n\r\nIt's a matter of opinion, I don't see that to be a given fact.\r\n\r\nTelefunc is designed around the idea of Fetch-on-Render while circumventing Waterfalls.\r\n\r\nThe central idea of Telefunc is to collocate RPC with Components. And Render-as-You-Fetch doesn't fit Telefunc's world.","updated_at":"2022-06-11T18:58:33Z","created_at":"2022-06-11T18:58:33Z","creator_user_login":"brillout"}
{"number":24669,"comment_id":"1153285285","body":"I guess arguing whether it is or isn't idiomatic is beside the point. The actual point is: `useId` never worked the way you want it work nor it says anywhere in the documentation that it should work like this.","updated_at":"2022-06-12T20:28:54Z","created_at":"2022-06-12T20:28:54Z","creator_user_login":"vkurchatkin"}
{"number":24669,"comment_id":"1380714029","body":"The way I read the documentation for `useId` is that the ID should stay stable for the same position in the parent component tree. If a component suspends and has to be re-rendered later, that does not change its position in the parent tree and hence the `useId` output should stay the same as well. Deviating from that does sound like a bug.\r\n\r\nAnd yes, this would be an incredibly useful behaviour for libraries that need ad-hoc cache keys for fetching, processing, etc. For example, the [@pmndrs/react-three-lightmap](https://github.com/pmndrs/react-three-lightmap) library computes the lightmap based on passed-in scene content which is a ReactNode. Right now to suspend while computation happens I will need to ask the developer for an arbitrary cache key string. Relying on `useId` would conveniently produce an implicit key for me instead.","updated_at":"2023-01-12T16:52:20Z","created_at":"2023-01-12T16:52:20Z","creator_user_login":"unframework"}
{"number":24669,"comment_id":"1399228337","body":"@brillout It's unclear why you would want to call the `useId` hook, instead of using some kind of natural key, which should be there in all cases if the server knows what it's processing. Does your use case not have a natural key? Or is there a reason not to use it?","updated_at":"2023-01-21T10:58:42Z","created_at":"2023-01-21T10:58:42Z","creator_user_login":"Inwerpsel"}
{"number":24669,"comment_id":"1399229257","body":"@Inwerpsel I want to make the key optional. So that, by default, the data has the same lifespan than `useState()`.\r\n\r\nBecause of this issue I cannot do that and I've to force my users to use a key. I'd rather offer a sensible default that works most of the time.\r\n\r\nImagine forcing users to define a key everytime they use `useState()`: that'd be silly. That's how I see it.","updated_at":"2023-01-21T11:03:05Z","created_at":"2023-01-21T11:03:05Z","creator_user_login":"brillout"}
{"number":24669,"comment_id":"1399230224","body":"It's basically the same point than @unframework made:\r\n\r\n> I will need to ask the developer for an arbitrary cache key string. Relying on `useId` would conveniently produce an implicit key for me instead.\r\n\r\n(@unframework I like your username 😀 I'm also the author of [vite-plugin-ssr](https://vite-plugin-ssr.com/) which allows you to \"unframework\" React 😀.)","updated_at":"2023-01-21T11:09:00Z","created_at":"2023-01-21T11:09:00Z","creator_user_login":"brillout"}
{"number":24669,"comment_id":"1399283311","body":"I rather was asking for more details of the use case. If you're running React on the server, you're loading things from some sort of database, or static objects from code. If a task has to be suspended, it's doing something with some data. It needs some keys in order to find what to do, and the result set can also contain data with keys. Hence, most of the time, something that would qualify as a key is very likely to be present in scope already. Especially on the server.\r\n\r\nYou maybe misunderstood what I meant with \"natural key\". I don't mean to require a key as part of your API, but that the code that would use `useId` might be able to derive a key from something else. Could be using a prop or function argument, or a combination of them.\r\n\r\nI think `useId` was mostly built as an alternative to existing implementations which did this less efficiently in user land and were unreliable on the server. But if you already have something that qualifies as a key, that's always better than calling an additional hook.\r\n\r\nNow maybe your use case is entirely different and this doesn't apply. In fact I feel that might be the case. But if you don't provide more than the minimum detail, then people will just assume the most general use case and won't see the relevancy. Can you maybe point to the relevant lines of code where you need this behavior? Or some basic explanation of what purpose these IDs have in the application, across the line. How many components would be using the thing that uses `useId` under the hood, what does it mean for a component to use that thing?","updated_at":"2023-01-21T16:27:01Z","created_at":"2023-01-21T16:27:01Z","creator_user_login":"Inwerpsel"}
{"number":24669,"comment_id":"1399288950","body":"The use case is this:\r\n> This is a blocker for [useAsync](https://github.com/brillout/react-streaming#useasync), [Telefunc](https://telefunc.com/) and probably many other React tools.\r\n\r\nIn particular the former (https://github.com/brillout/react-streaming#useasync) which is representative for why I want to use `useId()`.\r\n\r\n> derive a key from [...] function argument\r\n\r\nWhile it would work, the problem is that it'd effectively become an infinite cache. When do you invalidate the cache?\r\n\r\nThe motivation to use `useId()` is essentially to have a cache the same way `useState()` has a cache (same lifespan).","updated_at":"2023-01-21T17:00:16Z","created_at":"2023-01-21T17:00:16Z","creator_user_login":"brillout"}
{"number":24669,"comment_id":"1399304961","body":"Ok, that's which libraries you want to use it in. Now, again, what will you do with those IDs? It doesn't matter you have multiple use cases in mind. Just pick the most convincing one and provide some detail to make a solid case for why `useId` has to be made more complex for everyone that uses React.\r\n\r\nWhat could you do with `useId` inside `Suspense` that you couldn't do as well with your own internal ID generation logic? Is this something that many people will be doing? Or is it fulfilling some very niche piece of functionality in a library that could just as well include this logic itself?\r\n\r\nIt's definitely not a \"bug\" (as in an oversight) that requires a quick look or quick fix. It's clear from the implementation that it's not trivial to make work with suspense. `useId` generates the ID from the position in the tree. Addressing the limitation would add complexity that may not be worth it if the use case is not general enough.\r\n\r\n> When do you invalidate the cache?\r\n\r\nI didn't mean cache at all. My point was in general being able to use `useId` in that way is not very useful, because in such contexts something to use as a key would likely be present anyway. That key would in almost all cases be easier to work with and more semantic than the keys React generates per rendering.","updated_at":"2023-01-21T18:44:12Z","created_at":"2023-01-21T18:20:59Z","creator_user_login":"Inwerpsel"}
{"number":24669,"comment_id":"1496569842","body":"@vkurchatkin\r\n\r\n`useId` *is* explicitly documented to work as others are expecting it to:\r\n\r\nFrom https://react.dev/reference/react/useId#why-is-useid-better-than-an-incrementing-counter\r\n\r\n> Inside React, useId is generated from the “parent path” of the calling component.\r\n\r\nThis implies that as long as the parent path is the same, the first use of `useId` in a render function should always generate the same ID.","updated_at":"2023-04-04T20:33:15Z","created_at":"2023-04-04T20:33:15Z","creator_user_login":"Diggsey"}
{"number":24669,"comment_id":"1496672505","body":"I haven't checked with the team, but I doubt that the intention of the API is for it to be reliable as a cache key. I think the expectation is more \"it's guaranteed to not clash\" and \"it's guaranteed to remain stable while a component is mounted\", not \"it's guaranteed to stay stable between attempts to mount\".","updated_at":"2023-04-04T22:18:31Z","created_at":"2023-04-04T22:18:14Z","creator_user_login":"gaearon"}
{"number":24669,"comment_id":"1511184815","body":"I suffered from this today and arrived at this issue from a different misunderstanding.\r\n\r\nReact doesn't behave the same if the component suspends in the initial render vs. in a later render. I wasn't expecting this. Once I discovered it, I thought \"oh, then if I use `useId`, I won't get a stable one either if I suspend during the first render, but I will if I get to suspend later\", and indeed that was the case. The same applies to `useCallback`, `useRef`... \r\n\r\nI think this is confusing because IMO, we shouldn't have to make the distinction between _while a component is mounted_ vs. _between attempts to mount_.","updated_at":"2023-04-17T11:41:37Z","created_at":"2023-04-17T11:41:37Z","creator_user_login":"dani-mp"}
{"number":24669,"comment_id":"1511194882","body":"> I haven't checked with the team, but I doubt that the intention of the API is for it to be reliable as a cache key. I think the expectation is more \"it's guaranteed to not clash\" and \"it's guaranteed to remain stable while a component is mounted\", not \"it's guaranteed to stay stable between attempts to mount\".\r\n\r\nMy thinking is that React must internally know that it's the same React \"element\", since otherwise React wouldn't be able to resolve the `<Suspense>` boundary. So I'm inclined to think that, in principle, it should be possible to make `useId()` also work for `<Suspense>`.","updated_at":"2023-04-17T11:50:35Z","created_at":"2023-04-17T11:50:35Z","creator_user_login":"brillout"}
{"number":24669,"comment_id":"1582696948","body":"I think this issue goes beyond stabilizing the id across suspension on client-side updates. This also affects SSR and client hydration. I recently ran into an issue where the id generated on the server was different than the id generated on the client which ultimately caused hydration issues. \r\n\r\nLet's say we have an SSR application that fetches data using some modern \"fetch-as-you-render\" library to load data from an external service. Now when rendering this on the server, the upper suspense boundary is going to suspend on the server and once the request resolved react fizz streams the html to the client. Now for the client we don't want to repeat the same request so instead, the server is injecting a small `<script>...</script>` snippet that will add the services response to some global \"cache\". Rendering now on the client means that we'd simply not suspend and just read from that global \"cache\". All good but this means now that our server is suspending once while the client is not, which (I think) then causes the same problem.\r\n\r\nI've created a small reproducible example: https://codesandbox.io/s/react-use-id-unstable-37kndi?file=/src/App.js\r\n\r\nRunning this will cause some hydration error because of the id, and in this case it is showing the use case for accessibility attributes as advertised in react docs and not \"just\" cache keys\r\n\r\n\r\n","updated_at":"2023-06-08T15:04:54Z","created_at":"2023-06-08T14:32:41Z","creator_user_login":"reneeichhorn"}
{"number":19695,"comment_id":"681056476","body":"> Run this code and check in browser what elements are destroyed or reused.\r\n\r\nHow exactly are you doing that?","updated_at":"2020-08-26T18:44:07Z","created_at":"2020-08-26T18:44:07Z","creator_user_login":"vkurchatkin"}
{"number":19695,"comment_id":"681106846","body":"> > Run this code and check in browser what elements are destroyed or reused.\r\n> \r\n> How exactly are you doing that?\r\n\r\nSorry if my description confused a bit. \r\n\r\nThe code is just a simple dummy example react app, it needs to be compiled to vanilla javascript that browser understands and be inserted into some HTML that has a DOM with id 'root'. I post the original js code just to make it easier to check.\r\n\r\nThen in web browser render the HTML and open dev tools (like Developer Tools in Chrome), check the DOM elements tree (expanded to the `li` level). On every button click (either `+` or `-`),  if `<li>` element got destroyed/created, you'll see the leading '&lt;li&gt;' flashed, if `<li>` was reused instead of being destroyed, you'll see only the class part flashed .\r\n\r\n[Quick example on codepen.](https://codepen.io/mark-night/pen/bGpqvyL)","updated_at":"2020-08-26T21:43:39Z","created_at":"2020-08-26T20:29:14Z","creator_user_login":"mark-night"}
{"number":19695,"comment_id":"681110314","body":"I don't think this is correct. AFAIK browser will also \"flash\" _moves_ even if nodes are the same. You really need to compare actual nodes there. Or make them uncontrolled inputs and check if the text is preserved","updated_at":"2020-08-26T20:36:19Z","created_at":"2020-08-26T20:36:19Z","creator_user_login":"gaearon"}
{"number":19695,"comment_id":"681133156","body":"> I don't think this is correct. AFAIK browser will also \"flash\" _moves_ even if nodes are the same. You really need to compare actual nodes there. Or make them uncontrolled inputs and check if the text is preserved\r\n\r\nThank you! I didn't know browser flashes on item moves too! Just tried your suggestion by replacing `<li>` with `<input>`, and it's clear that they are not destroyed at all because all texts inside input remain.\r\n\r\nWith that cleared out, a few more questions rise (I know this is not a place to ask/answer questions, but the issue still highly suspicious to be bug related so far ):\r\n\r\n1. In the real app where I came across with this issue, the children items were `<div>`s each has a `<img>` as its child. If `num` and `loop` are of same length, `-`  (insert a new item as the first and move all others down) cause all images reload, while `+` (shift out the first and push in a new item as the last) only reload image inside the last child. Looks to me, if browser \"flashes\" the element (not the class part), the `<img>` underneath it reloads. Besides, I have transitions setup for different classes, all `<div>` that flashed (child `<img>` reloaded) ignore the transitions set for the class they were assigned (should has nothing to do with the image reloading, as size for `<div>` is explicitly set). Although in the previous test, texts of `<input>` got kept, all other clues look like the item was destroyed and recreated.  \r\n\r\n2. **Most importantly,** if this is just a browser related issue, how come everything work as expected when `num.length > loop.length`? (`-` flashes only the first element and class part for all others, no image reloading, transitions work fine... just like how `+` does.) **The issue ONLY happens when `num` and `loop` are of same length.**  I've tried Firefox and Chrome, both behave the same. As browser only renders whatever React provides to it, no matter if `num.length` is greater than or equal to `loop.length`, browser is only asked to render `loop.length` of items, right? So, looks to me, React does things differently somehow, when `num.length === loop.length` comparing to when `num.length > loop.length`. Any clues?\r\n","updated_at":"2020-08-26T21:27:19Z","created_at":"2020-08-26T21:27:19Z","creator_user_login":"mark-night"}
{"number":19695,"comment_id":"681705429","body":"Flashing in DevTools is not a good indication of anything. If you want to really check if the component is remounted, you can use code like this:\r\n\r\n```js\r\nReact.useEffect(() => {\r\n  console.log('mounted');\r\n  \r\n  return () => {\r\n    console.log('unmounted');\r\n  };\r\n}, []);\r\n```","updated_at":"2020-08-27T07:40:00Z","created_at":"2020-08-27T07:40:00Z","creator_user_login":"vkurchatkin"}
{"number":19695,"comment_id":"682104265","body":"> Flashing in DevTools is not a good indication of anything. If you want to really check if the component is remounted, you can use code like this:\r\n> \r\n> ```js\r\n> React.useEffect(() => {\r\n>   console.log('mounted');\r\n>   \r\n>   return () => {\r\n>     console.log('unmounted');\r\n>   };\r\n> }, []);\r\n> ```\r\n\r\nThanks for the hint, tried that too, no surprise, console logs shows items are not unmounted when they shouldn't be, just like what the texts in input test showed. ([codesandbox](https://codesandbox.io/s/react-reconciliation-0vlug?file=/src/App.js))\r\n\r\nHowever, this doesn't explain why items reloaded and transitions ignored when `num.length === loop.length`.\r\n\r\nThe thing is, why things are different (e.g. transitions ignored) when `num.length === loop.length`? It doesn't look like some reason from the browser part, does it?\r\n\r\nGiven all the clues, a quick solution to my example could just be to insert some dummy item in `num` when it happens to have same length as `loop`, then skip the dummy item in render. But hey, doesn't this weird result interest anyone? ","updated_at":"2020-08-27T18:01:38Z","created_at":"2020-08-27T18:01:38Z","creator_user_login":"mark-night"}
{"number":19695,"comment_id":"682105429","body":"I'm not sure if this is a *bug* from React or not, it doesn't look like a browser issue though, no matter how many items `num` has, browser shouldn't even know or care.","updated_at":"2020-08-27T18:03:53Z","created_at":"2020-08-27T18:03:53Z","creator_user_login":"mark-night"}
{"number":19695,"comment_id":"683647622","body":"The reconciliation seems to work as intended because not all items are deleted or recreated.\r\n\r\nI made a quick demo based on your example using [MutationObserver](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver) to detect DOM changes.\r\n\r\nhttps://codesandbox.io/s/reactjs-reconciliation-result-on-list-elements-5gw67?file=/src/index.js\r\n\r\nNotice in the console log.\r\n\r\nI start with the items\r\n\r\n* 3\r\n* 4\r\n* 5\r\n* 6\r\n\r\nWhen I click the + button, then the UI changes to this\r\n\r\n* 4\r\n* 5\r\n* 6\r\n* 3\r\n\r\nIt will  say in the console\r\n\r\n`A child node has been removed <li class=\"3\">3</li>`\r\n`A child node has been added <li class=\"3\">3</li>`\r\n\r\nIt has removed the last element and added a new element at the bottom.\r\n","updated_at":"2020-08-31T08:38:30Z","created_at":"2020-08-31T08:38:30Z","creator_user_login":"kunukn"}
{"number":19695,"comment_id":"686164224","body":"@kunukn Thanks for looking into this. Sorry for the late checking back.\r\n\r\nIn your codesandbox example, if I click the - button, console gives\r\n```\r\nA child node has been removed <li class=\"3\">3</li>\r\nA child node has been added <li class=\"3\">3</li>\r\nA child node has been removed <li class=\"4\">4</li>\r\nA child node has been added <li class=\"4\">4</li>\r\nA child node has been removed <li class=\"5\">5</li>\r\nA child node has been added <li class=\"5\">5</li>\r\n```\r\nThis is exactly the issue I'm reporting. It seems that React first remove then recreate some items, which were recreated with the same config as before they were removed, although they maintain same config to be look like same, they are treated as new items by browser. This explains weird behavior I reported earlier, like image reloading and ignoring class transitions.\r\n\r\n**Please notice though,** this only happens when the two arrays are of the same length.\r\n\r\nThank you again, without your setup, the issue is really hard to be described clearly. **I guess this at least confirms the issue does exist?** \r\nI used a quick dirty fix (extend first array to make sure it is longer than the second) in my work to avoid this temporarily, however, it would be really great if this can be fixed officially.","updated_at":"2020-09-03T00:48:18Z","created_at":"2020-09-03T00:48:18Z","creator_user_login":"mark-night"}
{"number":19695,"comment_id":"686779463","body":"I can confirm that. \r\nWhen starting with the items\r\n\r\n- 3\r\n- 4\r\n- 5\r\n- 6\r\n\r\nWhen I click the - button, then the UI changes to this\r\n\r\n- 6\r\n- 3\r\n- 4\r\n- 5\r\n\r\nThen I get the same as you. All items except the last were removed and re-created.\r\nMaybe this is the worst-case scenario that could happen when the keys are rotating like that. Most DOM-nodes gets removed and re-created. \r\n\r\n","updated_at":"2020-09-03T21:42:58Z","created_at":"2020-09-03T21:42:58Z","creator_user_login":"kunukn"}
{"number":19695,"comment_id":"687277046","body":"@kunukn Thanks for confirming this.\n\nI think rotating child elements like this shouldn't be uncommon, like sliding images for example, allowing bidirectional slide is like a must. It might just not that common that element source available happen to be equal to the element counts, only then this weird issue happen.\n\nIt seems that React does things differently in this situation some how.","updated_at":"2020-09-04T17:14:21Z","created_at":"2020-09-04T17:14:21Z","creator_user_login":"mark-night"}
{"number":19695,"comment_id":"751246979","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:49Z","created_at":"2020-12-25T13:07:49Z","creator_user_login":"stale[bot]"}
{"number":19695,"comment_id":"839079273","body":"Thanks for filing this, @mark-night! I'm running into the same issue, however, rather than just being an implementation quirk, there are user facing repercussions to our application.\r\n\r\nOur page content is a long list of React elements in which folk's actions result in list order changing. The expected behavior is that the scroll position remains more or less the same as the items change order.\r\n\r\nI've updated the attached test case to demonstrate this behavior. If you click the `-` button while scrolled down on the page, you will see that the scroll position resets to the top of the page:\r\n\r\nhttps://codesandbox.io/s/reactjs-reconciliation-result-on-list-elements-forked-mddur\r\n\r\nThis video shows an example recreation-\r\n\r\nhttps://user-images.githubusercontent.com/437360/117874092-6e741e00-b255-11eb-9214-ba15dc82a3c9.mov\r\n\r\nMy expectation was that the reconciler would perform `insertBefore(previouslyTheLastNode, parentNode.firstChild)`, rather than re-creating the list by appending each of the sibling nodes, as is shown in this (low quality) video:\r\n\r\nhttps://user-images.githubusercontent.com/437360/117875729-5c937a80-b257-11eb-89c5-2702d152d653.mov\r\n\r\n@kunukn Do you have any clues as to where we might be able to fix this in the reconciler?","updated_at":"2021-05-11T22:52:28Z","created_at":"2021-05-11T19:55:06Z","creator_user_login":"ohaibbq"}
{"number":19695,"comment_id":"921399652","body":"I wonder if my issue is related. I'm reordering a list of elements, each of which have a static and unique identity. These elements are positioned with `transform: translate(0px, ${index * height}px` and `transition: transform 1s ease-in-out`.\r\n\r\nWhen re-ordered, elements successfully animate \"up\" but skip their transition when moving \"down\" the list. As far as I can see, the elements are not re-mounted during order change.\r\n\r\nhttps://user-images.githubusercontent.com/1691525/133713288-b80bb27a-c97e-478e-bf44-35c5cf82c4b7.mov\r\n\r\nTested with React 17.0.2\r\n\r\n```jsx\r\nimport shuffle from \"lodash.shuffle\";\r\nimport { useState } from \"react\";\r\nimport \"./styles.css\";\r\n\r\nconst data = [\r\n  { id: 1, name: \"Foo\" },\r\n  { id: 2, name: \"Bar\" },\r\n  { id: 3, name: \"Baz\" }\r\n];\r\n\r\nexport default function App() {\r\n  const [items, setItems] = useState(data);\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() => {\r\n          setItems(shuffle(data));\r\n        }}\r\n      >\r\n        Shuffle\r\n      </button>\r\n      <div style={{ position: \"relative\" }}>\r\n        {items.map(({ id, name }, index) => (\r\n          <div\r\n            key={id}\r\n            style={{\r\n              position: \"absolute\",\r\n              border: \"1px solid #ddd\",\r\n              width: \"100%\",\r\n              height: 42,\r\n              boxSizing: \"border-box\",\r\n              transition: \"transform 1s ease-in-out\",\r\n              transform: `translate(${0}px, ${index * 42}px)`\r\n            }}\r\n          >\r\n            {name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n```","updated_at":"2021-09-17T02:14:00Z","created_at":"2021-09-17T02:11:40Z","creator_user_login":"samcf"}
{"number":19695,"comment_id":"1008183425","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2022-01-08T23:42:52Z","created_at":"2022-01-08T23:42:52Z","creator_user_login":"stale[bot]"}
{"number":19695,"comment_id":"1008280381","body":">I wonder if my issue is related\r\n\r\nYes it seems related.\r\nIt can be confirmed by changing the key to something unique on every render. Then no animation happens.","updated_at":"2022-01-09T11:34:16Z","created_at":"2022-01-09T11:33:28Z","creator_user_login":"kunukn"}
{"number":19695,"comment_id":"1311841165","body":"I'm working on my TransitionGroup library and this is a problem for me.\r\nFor example, I'm removing a few items from a list. The component sets `opacity: 0; transition: all 1s;` for them. Then I shuffle the list and the items are instantly applied: `opacity: 0`. The transition is reset because the node was removed and re-inserted.\r\n\r\nhttps://user-images.githubusercontent.com/29482190/201373446-de6fc7e6-cd98-4ae0-9091-fc02d26073bf.mov\r\n\r\n","updated_at":"2022-11-11T15:37:22Z","created_at":"2022-11-11T15:37:22Z","creator_user_login":"hoqpe"}
{"number":19695,"comment_id":"1315258722","body":"This renders `0123456789` on the screen. After 2s item `4` will swap with `7` but on the next render, all the items between this two (`5` and `6`) also replay the opacity animation which means they were removed and reinserted in the DOM.\r\n\r\nHowever, if we use item's index as `key` (which means key never change), then the animation will not replay on the items swap.\r\n\r\n```typescript\r\nimport {useState, useEffect} from 'react';\r\nimport {createRoot} from 'react-dom/client';\r\n\r\nfunction App() {\r\n  const [item, setItem] = useState([...Array(10).keys()]);\r\n\r\n  useEffect(() => {\r\n    window.setTimeout(() => {\r\n      setItem(state => {\r\n        [state[4], state[7]] = [state[7], state[4]];\r\n        return [...state];\r\n      });\r\n    }, 2e3);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {item.map((item, index) => (\r\n        <div key={item} data-id={item} className=\"animate-opacity\">\r\n          {item}\r\n        </div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\ncreateRoot(document.getElementById('root')!).render(<App />);\r\n\r\n```","updated_at":"2022-11-18T00:58:51Z","created_at":"2022-11-15T12:43:24Z","creator_user_login":"Soberia"}
{"number":14785,"comment_id":"461633622","body":"Someone please correct me if I'm wrong but this might have been intentional? I was curious so stepping through the code, it looks like it bails out from setting the initial `value` in `ReactDOMInput#postMountWrapper` \r\n\r\n```\r\n    // Avoid setting value attribute on submit/reset inputs as it overrides the\r\n    // default value provided by the browser. See: #12872\r\n    if (isButton && (props.value === undefined || props.value === null)) {\r\n      return;\r\n    }\r\n```\r\nLooking at the #12872, it seems the reason for this is that the browser itself has a `defaultValue` ([or label?](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/submit#Value)) for these types (i.e. `submit` and `reset`). I guess this is a question of if these types should allow you to set a `defaultValue`?","updated_at":"2019-02-07T23:26:53Z","created_at":"2019-02-07T23:25:07Z","creator_user_login":"augbog"}
{"number":14785,"comment_id":"461675106","body":"@augbog I agree with you, I tracked until seeing it [code](https://github.com/facebook/react/blob/c954efa70f44a44be9c33c60c57f87bea6f40a10/packages/react-dom/src/client/ReactDOMInput.js#L251).\r\n\r\nI'm thinking on this possible fix: when the `input` is a button, why not check if exists the `_initialValue` and assign it to `node.value`?\r\n\r\n```jsx\r\n if (_initialValue) {\r\n   node.value = _initialValue;\r\n }\r\n```\r\n\r\nSomething like it:\r\n```jsx\r\n    var _initialValue = toString(node._wrapperState.initialValue);                                                                                                      \r\n                                                                                                                                                                        \r\n    // Avoid setting value attribute on submit/reset inputs as it overrides the                                                                                         \r\n    // default value provided by the browser. See: #12872                                                                                                               \r\n    if (isButton && (props.value === undefined || props.value === null)) {                                                                                              \r\n      if (_initialValue) {                                                                                                                                              \r\n        node.value = _initialValue;                                                                                                                                     \r\n      }                                                                                                                                                                 \r\n      return;                                                                                                                                                           \r\n    } \r\n```\r\n\r\nI did this local fix and is working here.\r\nGuys if you agree with it, could I open a pull request?","updated_at":"2019-02-08T14:03:52Z","created_at":"2019-02-08T03:02:38Z","creator_user_login":"leonascimento"}
{"number":25528,"comment_id":"1287658763","body":"Cold you, please, provide more code (or playground) from this use-case?","updated_at":"2022-10-22T07:23:34Z","created_at":"2022-10-22T07:23:34Z","creator_user_login":"Maverick17user"}
{"number":25528,"comment_id":"1287835426","body":"## Code\r\n\r\n              <div className=\"w-full mt-3\">\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    readOnly={true}\r\n                    ref={props?.posttype}\r\n                    id=\"posttype\"\r\n                    **value={props?.finalfile?.type}**\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\nI was setting the value in input element when user choose the file and the props.finalfile is the state created in parent component. yesterday I was using the onChange on this element that's why I was getting that warring, then I remove the onChange and used ref to getting the element value and apply readOnly rule to input element and I solved this. \r\n\r\nThis input element is just to show the value of select file that user will select and i grab that value using ref not by onChange as onChange on triggers when an event occurs to that element.\r\n\r\nBtw, Thank you for putting your time to my request.","updated_at":"2022-10-22T16:03:00Z","created_at":"2022-10-22T16:03:00Z","creator_user_login":"irtaza9"}
{"number":25528,"comment_id":"1295776292","body":"It doesn't look like this bug report has enough info for one of us to reproduce it.\r\n\r\nPlease provide a CodeSandbox (https://react.new), or a link to a repository on GitHub.\r\n\r\nHere are some tips for providing a minimal example: https://stackoverflow.com/help/mcve\r\n\r\n<!-- mui template next: https://material-ui.com/r/issue-template-next -->\r\n<!-- mui template stable: https://material-ui.com/r/issue-template-latest -->\r\n<!-- react template: https://react.new/ -->","updated_at":"2022-10-29T08:57:37Z","created_at":"2022-10-29T08:57:37Z","creator_user_login":"eps1lon"}
{"number":24744,"comment_id":"1158324815","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 56389e81ffe17c97f3137f18cc6446a4b2c956de...7ba1e65d8c545524afd4a9bf5aa95f3675f1ddec\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 131.64 kB | 131.64 kB | = | 42.30 kB | 42.30 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 136.92 kB | 136.92 kB | = | 43.89 kB | 43.89 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 440.83 kB | 440.83 kB | = | 80.64 kB | 80.64 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 426.13 kB | 426.13 kB | = | 78.45 kB | 78.45 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 441.61 kB | 441.61 kB | = | 80.87 kB | 80.87 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable-semver/react-test-renderer/cjs/react-test-renderer.production.min.js | **+0.32%** | 89.02 kB | 89.31 kB | +0.47% | 27.54 kB | 27.67 kB\n| oss-stable/react-test-renderer/cjs/react-test-renderer.production.min.js | **+0.32%** | 89.05 kB | 89.34 kB | +0.46% | 27.54 kB | 27.67 kB\n| oss-stable-semver/react-test-renderer/umd/react-test-renderer.production.min.js | **+0.32%** | 89.31 kB | 89.59 kB | +0.24% | 27.92 kB | 27.99 kB\n| oss-stable/react-test-renderer/umd/react-test-renderer.production.min.js | **+0.32%** | 89.33 kB | 89.62 kB | +0.24% | 27.92 kB | 27.99 kB\n| oss-experimental/react-test-renderer/cjs/react-test-renderer.production.min.js | **+0.31%** | 93.49 kB | 93.77 kB | +0.41% | 28.89 kB | 29.01 kB\n| oss-experimental/react-test-renderer/umd/react-test-renderer.production.min.js | **+0.30%** | 93.76 kB | 94.04 kB | +0.24% | 29.24 kB | 29.31 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 7ba1e65d8c545524afd4a9bf5aa95f3675f1ddec\n</p>\n","updated_at":"2022-06-19T16:49:01Z","created_at":"2022-06-17T00:23:05Z","creator_user_login":"sizebot"}
{"number":24701,"comment_id":"1160174627","body":"I have never used the createPortal() on body tag.if you had seen any bad effects. Just write and make an PR in the Reactdocs. ReactDocs is also open source :) ","updated_at":"2022-06-20T09:03:11Z","created_at":"2022-06-20T09:03:11Z","creator_user_login":"pyropecs"}
{"number":24701,"comment_id":"1275557573","body":"@alexandroppolus \r\n\r\n```jsx\r\nconst Modal: React.FC<ModalProps> = ({ children, size = 'm', open, onClose, closable = true }) => {\r\n    const dialogContainer = useRef<HTMLDivElement>(null);\r\n\r\n    useEffect(() => {\r\n        if (open) {\r\n            noScroll.on();\r\n        }\r\n        return () => {\r\n            noScroll.off();\r\n        };\r\n    }, [open]);\r\n\r\n    const clickedOutsideZone = (event: HTMLElementEventMap['mousedown'] | HTMLElementEventMap['touchstart']) => {\r\n        const containerNoClosable = event.target as Node;\r\n        const isClickedOutside = dialogContainer.current && dialogContainer.current.contains(containerNoClosable);\r\n        if (isClickedOutside) return;\r\n        onClose?.();\r\n    };\r\n\r\n    const removeEvents = (): void => {\r\n        document.removeEventListener('mousedown', clickedOutsideZone);\r\n        document.removeEventListener('touchstart', clickedOutsideZone);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (open && closable) {\r\n            document.addEventListener('mousedown', clickedOutsideZone);\r\n            document.addEventListener('touchstart', clickedOutsideZone);\r\n        } else removeEvents();\r\n\r\n        return () => removeEvents();\r\n    }, [onClose, open, closable]);\r\n\r\n    return ReactDOM.createPortal(\r\n        <ContainerModalBackground open={open}>\r\n            <div\r\n                style={{\r\n                    display: 'flex',\r\n                    width: '100%',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    height: '100%',\r\n                }}\r\n            >\r\n                {open && (\r\n                    <ContainerModal size={size} ref={dialogContainer}>\r\n                        {size !== 'full' && <FocusLock>{open && children}</FocusLock>}\r\n                        {size === 'full' && open && children}\r\n                        <CloseButtonContainer onClick={onClose}>\r\n                            <Close color={dismissDarker} />\r\n                        </CloseButtonContainer>\r\n                    </ContainerModal>\r\n                )}\r\n            </div>\r\n        </ContainerModalBackground>,\r\n        document.body\r\n    );\r\n};\r\nexport default Modal;\r\n```\r\n\r\nI have seen that many large libraries use portals with document.body, so far it has not given me any problems. ","updated_at":"2022-10-12T04:07:03Z","created_at":"2022-10-12T04:06:40Z","creator_user_login":"jnadroj"}
{"number":24701,"comment_id":"1279935715","body":"> I have seen that many large libraries use portals with document.body, so far it has not given me any problems.\r\n\r\nIt's a perf issue as far as I know: https://atfzl.com/don-t-attach-tooltips-to-document-body","updated_at":"2022-10-16T09:56:56Z","created_at":"2022-10-16T09:56:56Z","creator_user_login":"eps1lon"}
{"number":15293,"comment_id":"479836006","body":"So, the approach I'm going to provide relies on my personnal experience, but tries to take every concern you have into account. More than happy to discuss any part of it.\r\n\r\nI understand the appeal of using the `useEffect` diffing system, and I will go for that. However, I would never EVER have it inside my poor `List`. In my opinion, it should remain pure, taking only the results (maybe some other displaying configuration props, but not relevant here) as a prop. So, I would not consider your 2 first examples really separating view and logic.\r\n\r\nForked your 2nd example, you can follow along here https://codesandbox.io/s/826zymymkl\r\nI move the `useEffect` to the `ListContainer`. I'm annoyed by eslint that I don't provide `onLoadResult` to the deps, because I know its constant, but nevermind. And my `List` is pure, preventing any renders of `ListContainer` regarding the change or parameters to affect the render of `List`.\r\n\r\nBecause you seem concerned with extra renders, in your `switchFilter` action, I \"batch\" the change of the filter with the resetting of the page to 1.\r\n\r\nThat is pretty much all I would change. You will need to make `ListAutoFetcher` more generic to apply it to others lists and stuff, but again, it's another topic.","updated_at":"2019-04-04T10:08:23Z","created_at":"2019-04-04T10:08:23Z","creator_user_login":"Bear-Foot"}
{"number":15293,"comment_id":"479847908","body":"\r\nIn my opinion, the most important question is “As a state machine, the js environment changes because of signals from outside(from location, network io, screen interaction, etc...), or because of its own lifecycle(like renders)?”. When the effect is called, even the dom did not change.\r\n\r\nWhen paging, we need extra filter state, because the api is designed so. When submitting filter form, we need extra page state，also because of the api spec. These are logic about data(business logic), not about the view. \r\n\r\nSo I vote 3rd solution, even if it is without our new super hooks.\r\n\r\nBy the way, the name ‘hook’ is so evil.\r\n\r\nFor a long time, names like this are always for user context, not for engine it self.\r\n\r\nWhy they are not named as beforeRender, afterRender...?","updated_at":"2019-04-04T11:08:26Z","created_at":"2019-04-04T10:48:36Z","creator_user_login":"hanzhixing"}
{"number":15293,"comment_id":"806061014","body":"The longer-term idiomatic solution to this problem is Suspense, which would not rely on any of those things. I know it's not very satisfying since it's not something you can use today, but I just want to make it clear why it's somewhat awkward with all of these approaches. Neither of them natively matches the React paradigm very well.","updated_at":"2021-03-24T18:31:38Z","created_at":"2021-03-24T18:31:30Z","creator_user_login":"gaearon"}
{"number":15129,"comment_id":"473601768","body":">And it all works fine, apart from when the component is mounted and unmounted.\r\n\r\nCan you clarify what doesn’t work there? A sandbox would be helpful. ","updated_at":"2019-03-16T23:40:37Z","created_at":"2019-03-16T23:40:37Z","creator_user_login":"gaearon"}
{"number":15129,"comment_id":"473658649","body":"Here it is: https://codesandbox.io/s/m4kl160528\r\n\r\nSo, two points\r\n\r\n1. `useEffect` always runs which calls `makeRequest` and `debounce` everytime. \r\n\r\n2. I can't find a clear alternative to unmount. I know `[]` as second argument does this but it only uses initial values.\r\n\r\nWhile I'm at it, why isn't it possible to provide a callback to `setState`, in the same way I do in the codebox example?\r\n","updated_at":"2019-03-17T11:58:52Z","created_at":"2019-03-17T11:58:42Z","creator_user_login":"lichstam"}
{"number":15129,"comment_id":"473659178","body":"I should add that in a full implementation the first request wouldn't be sent since there is a condition `externalValue !== localValue`, so once the localValue is initialized this wouldn't pass. However, the debounced function will get an unnecessary call regardless.\r\n\r\n","updated_at":"2019-03-17T12:04:48Z","created_at":"2019-03-17T12:04:48Z","creator_user_login":"lichstam"}
{"number":15129,"comment_id":"473839749","body":"I just want to emphasize that I don't need help. I would love to hear opinions but my motive is to echo Patrick's point of hooks being perhaps a bit too ambigous for the broad mass.\r\nFor people just focusing on making products these kinds of questions can easily become a burden that slows the delivery process.\r\n\r\nI know this is new and there is work to be done so my objective here is to - hopefully - provide some insights into what kind of worries developers might have while using hooks.","updated_at":"2019-03-18T10:11:18Z","created_at":"2019-03-18T09:47:56Z","creator_user_login":"lichstam"}
{"number":24645,"comment_id":"1142595835","body":"Are you sure you don't have `supportsMutation` set to `true` as well? A minimal repro would be nice.\r\n\r\nAt least on `main` the `commitUpdate` call appears wrapped in the flag check:\r\n\r\nhttps://github.com/facebook/react/blob/be1fd48e96a617f3758d179ebfb0386a382af942/packages/react-reconciler/src/ReactFiberCommitWork.new.js#L2171-L2203","updated_at":"2022-05-31T20:11:28Z","created_at":"2022-05-31T20:11:09Z","creator_user_login":"gaearon"}
{"number":24645,"comment_id":"1144823305","body":"OK, I misunderstood what was happening -- the reconciler does NOT call `commitUpdate`, however if `prepareUpdate` returns `null` then the instance won't be cloned.\r\n\r\nThe documentation says that you need to implement `commitUpdate` if `prepareUpdate` returns something other than `null`, which isn't true in persistence mode. The documentation should say that in persistence mode, `commitUpdate` simply needs to return non-`null` if the props have changed, and then `cloneInstance` will be called to actually apply the update (but the return value of `commitUpdate` is not passed to `cloneInstance`).","updated_at":"2022-06-02T12:47:17Z","created_at":"2022-06-02T12:47:17Z","creator_user_login":"aquark"}
{"number":24645,"comment_id":"1145101996","body":"Sounds good. I think you accidentally opened the PR on your repo rather than ours, otherwise happy to merge","updated_at":"2022-06-02T17:08:27Z","created_at":"2022-06-02T17:08:27Z","creator_user_login":"gaearon"}
{"number":24645,"comment_id":"1145121132","body":"I unsubscribed from this repo but am still receiving emails. Please unsubscribe me.","updated_at":"2022-06-02T17:30:51Z","created_at":"2022-06-02T17:30:51Z","creator_user_login":"lfernandez55"}
{"number":24645,"comment_id":"1145347220","body":"@lfernandez55 we can’t unsubscribe you, it’s your GitHub settings. Please contact GitHub support if you have an issue. ","updated_at":"2022-06-02T21:14:04Z","created_at":"2022-06-02T21:14:04Z","creator_user_login":"gaearon"}
{"number":25446,"comment_id":"1271641906","body":"Yeah, TestUtils are essentially on life support. We try not to break them but they're frozen in functionality. `renderIntoDocument` doesn't do anything useful — it's an alias for `ReactDOM.render` into a new div (despite the naming). So I suggest to use `createRoot` directly or use Testing Library.","updated_at":"2022-10-07T14:04:56Z","created_at":"2022-10-07T14:04:56Z","creator_user_login":"gaearon"}
{"number":25446,"comment_id":"1271746550","body":"Gotcha! Thank you for the quick reply.","updated_at":"2022-10-07T15:32:22Z","created_at":"2022-10-07T15:32:22Z","creator_user_login":"raaaahman"}
{"number":25446,"comment_id":"1411967137","body":"> So I suggest to use createRoot directly\r\n\r\n@gaearon  but the legacy` ReactDOM.render` returns a reference to the root ReactComponent instance while the new api returns void from render ?\r\n\r\n>  or use Testing Library\r\n\r\nI wonder if this is what you meant .... i use the testing library to render the component and place a ref on it so i still have access to the component instance ?","updated_at":"2023-02-01T14:41:41Z","created_at":"2023-02-01T12:17:43Z","creator_user_login":"YLeventhal"}
{"number":25446,"comment_id":"1703988679","body":"Is there any progress on this issue?","updated_at":"2023-09-03T02:17:07Z","created_at":"2023-09-03T02:17:07Z","creator_user_login":"eryue0220"}
{"number":24731,"comment_id":"1164781507","body":"@lunaruan Can you assign it to me and give some hints?\r\nThanks :) ","updated_at":"2022-06-23T19:21:28Z","created_at":"2022-06-23T19:21:28Z","creator_user_login":"Hanaffi"}
{"number":24731,"comment_id":"1164804344","body":"@Hanaffi Hey! Sure, you can work on it if you want. Like @lwkchan said, `window.open` doesn't work in Firefox extensions, so for Firefox specifically, you'll have to use `browser.window.create`. This can't be called in extension content scripts or panels, however, so you'll have to pass it over from `background.js`. \r\n\r\nI took a look at this issue briefly and tried to solve it using message passing in the extension. However, as a heads up, it seems like message passing between content scripts and background scripts might also be broken in Firefox. You can take a look and see if you can make this solution work or find a different solution if you'd like! Good luck!","updated_at":"2022-06-23T19:49:21Z","created_at":"2022-06-23T19:47:38Z","creator_user_login":"lunaruan"}
{"number":24731,"comment_id":"1170725725","body":"I commit a PR, Fixed this by the way.\r\nhttps://github.com/facebook/react/pull/24797","updated_at":"2022-06-30T04:03:11Z","created_at":"2022-06-30T04:03:11Z","creator_user_login":"xlzy520"}
{"number":24731,"comment_id":"1174680753","body":"@lunaruan hello","updated_at":"2022-07-05T06:45:45Z","created_at":"2022-07-05T06:45:45Z","creator_user_login":"xlzy520"}
{"number":24731,"comment_id":"1462645534","body":"guys it is march 2023, PR is open still, anyone can take a look, please? it would really help firefox users @lunaruan @Hanaffi ","updated_at":"2023-03-09T19:23:42Z","created_at":"2023-03-09T19:23:42Z","creator_user_login":"ArtemRevaEpam"}
{"number":24731,"comment_id":"1547716965","body":"Hi @hoxyq  \r\nSorry for mentioning you like this.  \r\nI noticed that you've been maintaining DevTools lately and has PR merge access.  \r\nCould you please take a look at https://github.com/facebook/react/pull/24797? It looks short enough.   ","updated_at":"2023-05-15T11:58:22Z","created_at":"2023-05-15T11:57:28Z","creator_user_login":"HosseinAgha"}
{"number":24731,"comment_id":"1554479991","body":"> Hi @hoxyq Sorry for mentioning you like this. I noticed that you've been maintaining DevTools lately and has PR merge access. Could you please take a look at #24797? It looks short enough.\r\n\r\nHey @HosseinAgha, I am not sure if this is a solution we want to go with, but I will check if this problem can be resolved in a different way","updated_at":"2023-05-19T12:11:25Z","created_at":"2023-05-19T12:11:25Z","creator_user_login":"hoxyq"}
{"number":24731,"comment_id":"1554633633","body":"> > Hi @hoxyq Sorry for mentioning you like this. I noticed that you've been maintaining DevTools lately and has PR merge access. Could you please take a look at #24797? It looks short enough.\r\n> \r\n> Hey @HosseinAgha, I am not sure if this is a solution we want to go with, but I will check if this problem can be resolved in a different way\r\n\r\n@hoxyq Sure, if you have a different approach in mind, please let me know and I can help modify the pull request according to your requirements.","updated_at":"2023-05-19T14:07:39Z","created_at":"2023-05-19T14:07:39Z","creator_user_login":"xlzy520"}
{"number":18413,"comment_id":"650141842","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-06-26T12:00:46Z","created_at":"2020-06-26T12:00:46Z","creator_user_login":"stale[bot]"}
{"number":18413,"comment_id":"650144394","body":"bump","updated_at":"2020-06-26T12:07:16Z","created_at":"2020-06-26T12:07:16Z","creator_user_login":"eps1lon"}
{"number":18413,"comment_id":"751246953","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:40Z","created_at":"2020-12-25T13:07:40Z","creator_user_login":"stale[bot]"}
{"number":18413,"comment_id":"751283264","body":"Bump","updated_at":"2020-12-25T19:14:30Z","created_at":"2020-12-25T19:14:30Z","creator_user_login":"eps1lon"}
{"number":24743,"comment_id":"1370085582","body":"I too experienced this recently while implementing suspense support for Apollo Client. I found this behavior quite surprising as my mental model led me to believe suspending a component is akin to \"unmounting\" it, hence why I expected the state to be reset. \r\n\r\nPerhaps there is good reason for this behavior, and I'm willing to accept that, but I struggled to find anything in any RFC or discussion in regards to this behavior. At the very least, it would be useful to have this written down to avoid confusion.","updated_at":"2023-01-03T18:19:11Z","created_at":"2023-01-03T18:19:11Z","creator_user_login":"jerelmiller"}
{"number":24743,"comment_id":"1599563961","body":"I've also got bitten by this issue as well. I've been living under the same impression as the other folks here: I was expecting the state of the unmounted children to be reset. There still doesn't seem to be any mention of this behavior in the documentation. Can we rely on the current behavior to be preserved going forward?","updated_at":"2023-06-20T21:16:58Z","created_at":"2023-06-20T21:16:58Z","creator_user_login":"andrei-datcu"}
{"number":23202,"comment_id":"1024277865","body":"Unfortunately \"proprietary\" isn't a repro we can do anything with. Handing this back to you in hopes of getting something we can repro and look into, @steve-snow.\r\n\r\nGenerally it's helpful to reduce the problem locally to as little code as you can (including dependencies) and then host it on Code Sandbox.","updated_at":"2022-01-28T14:31:17Z","created_at":"2022-01-28T14:30:20Z","creator_user_login":"bvaughn"}
{"number":23202,"comment_id":"1025223123","body":"I can confirm that I have the same issue.","updated_at":"2022-01-30T20:23:14Z","created_at":"2022-01-30T20:23:14Z","creator_user_login":"RobIsHere"}
{"number":23202,"comment_id":"1025223472","body":"It also happens when I fill in a form field. As soon as this happens, parameters given to my component change and this bug immediately appears every time.","updated_at":"2022-01-30T20:25:10Z","created_at":"2022-01-30T20:25:10Z","creator_user_login":"RobIsHere"}
{"number":23202,"comment_id":"1025931957","body":"@RobIsHere Thanks for commenting! Unfortunately, without a reproducible repro on our side, we're unable to debug this issue. Could you create a repro of this on Code Sandbox? Thanks!","updated_at":"2022-01-31T15:56:56Z","created_at":"2022-01-31T15:56:56Z","creator_user_login":"lunaruan"}
{"number":23202,"comment_id":"1026264847","body":"I will try to create a repo, but may not happen until this weekend.\nSteve\n\nOn Mon, Jan 31, 2022 at 7:57 AM Luna Ruan ***@***.***> wrote:\n\n> @RobIsHere <https://github.com/RobIsHere> Thanks for commenting!\n> Unfortunately, without a reproducible repro on our side, we're unable to\n> debug this issue. Could you create a repro of this on Code Sandbox? Thanks!\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/facebook/react/issues/23202#issuecomment-1025931957>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AIJGYZH5JM6SB3MZGU4QLHDUY2WNNANCNFSM5M7B2JVQ>\n> .\n> Triage notifications on the go with GitHub Mobile for iOS\n> <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n> or Android\n> <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.\n>\n> You are receiving this because you were assigned.Message ID:\n> ***@***.***>\n>\n","updated_at":"2022-01-31T22:13:40Z","created_at":"2022-01-31T22:13:40Z","creator_user_login":"steve-snow"}
{"number":23202,"comment_id":"1026348763","body":"Thanks so much! That would be a huge help 😊","updated_at":"2022-02-01T00:28:20Z","created_at":"2022-02-01T00:28:20Z","creator_user_login":"lunaruan"}
{"number":23202,"comment_id":"1035530966","body":"I've been seeing this a lot myself lately! It looks like others have been seeing variations of it too:\r\nhttps://github.com/facebook/react/issues/21527\r\nhttps://github.com/facebook/react/issues/21529\r\nhttps://github.com/facebook/react/issues/21534\r\nhttps://github.com/facebook/react/issues/21563\r\nhttps://github.com/facebook/react/issues/21568\r\nhttps://github.com/facebook/react/issues/21636\r\nhttps://github.com/facebook/react/issues/21653\r\nhttps://github.com/facebook/react/issues/21755 (FYI I'm running `4.23.0`)\r\nhttps://github.com/facebook/react/issues/21764\r\nhttps://github.com/facebook/react/issues/22611\r\n\r\n\r\nFor a bug like this, maybe we need some better diagnostics? I can't identify any individual change in my code that made this happen.","updated_at":"2022-02-10T21:21:13Z","created_at":"2022-02-10T21:21:13Z","creator_user_login":"ariccio"}
{"number":23202,"comment_id":"1036993035","body":"This is going to take a bit more work to find the culprit. \r\nStarting with the basic react app and adding yup and formik did not cause the fatal crash with the syntax error trigger.  You will see the same yup error.  So I'll be iterating through the package.json differences until I get something that blows it up.  For now, this is the starting point.  But it is not the fatal error I was hoping to find.\r\n\r\nSpecifically, the syntax trigger was to change the following in the schema file:\r\n\r\n`    age: Yup.number()`\r\n\r\nto \r\n\r\n`    age: Yup.int()`\r\n\r\nhttps://github.com/steve-snow/react-validation-glitch-testing.git","updated_at":"2022-02-12T04:54:33Z","created_at":"2022-02-12T04:54:33Z","creator_user_login":"steve-snow"}
{"number":23202,"comment_id":"1065832823","body":"The error was thrown at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:26448:43\r\n    at bridge_Bridge.emit (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24400:22)\r\n    at chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:24566:14\r\n    at listener (chrome-extension://fmkadmapgofadopljbjfkapdkoienihi/build/main.js:54300:39)","updated_at":"2022-03-12T07:26:12Z","created_at":"2022-03-12T07:26:12Z","creator_user_login":"gibin-george-supersourcing"}
{"number":23202,"comment_id":"1070469647","body":"Everything was normal until today","updated_at":"2022-03-17T07:45:11Z","created_at":"2022-03-17T07:45:11Z","creator_user_login":"kux888"}
{"number":23202,"comment_id":"1070962471","body":"Hello everyone!\r\n\r\nWe are sorry to hear that this issue is affecting several people. It would help us a lot though if your comments contained the following information:\r\n* Which version of React DevTools are you using?\r\n* Which version of React/ReactDOM are you using?\r\n* How can we repro the problem you're seeing? (Give us a URL or a project we can check out or run.)\r\n\r\nWithout the info above, **we can't help you** even though we want to.\r\n\r\ncc @gibin-george-supersourcing @kux888 @ariccio @RobIsHere ","updated_at":"2022-03-17T14:19:21Z","created_at":"2022-03-17T14:19:21Z","creator_user_login":"bvaughn"}
{"number":23202,"comment_id":"1071182766","body":"Unfortunately, I'm seeing this issue at work so I can't share a URL/project. It happens every time I open the tools; they're inaccesible to me at the moment. Will at least share version info in hopes it's useful:\r\n\r\nReact DevTools: 4.13.5 (6/21/2021)\r\nReact: 17.0.2\r\nReactDOM: 17.0.2\r\n\r\n`@storybook/components@5.3.21` is installing React/ReactDOM 16 too, although nothing storybook related should end up on the main app bundle.\r\n\r\nChrome doesn't provide much info on `chrome://extensions` nor a way to export exceptions / stack traces, but if anything here is useful, let me know and I'll share more about it.\r\n\r\n<img width=\"724\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1285131/158870618-1b761dca-95c9-4220-9595-e06f775f11c2.png\">\r\n","updated_at":"2022-03-17T18:26:44Z","created_at":"2022-03-17T18:21:33Z","creator_user_login":"mrkev"}
{"number":23202,"comment_id":"1071190810","body":"> * React DevTools: 4.13.5 (6/21/2021)\r\n\r\n@mrkev Why are you using a year old version of DevTools? :)","updated_at":"2022-03-17T18:28:31Z","created_at":"2022-03-17T18:28:31Z","creator_user_login":"bvaughn"}
{"number":23202,"comment_id":"1071511198","body":"No idea, and the completely fell under my radar haha let me re-install\r\n\r\nEDIT: would you look at that, things are working for me again. I'm off to some profiling!","updated_at":"2022-03-17T21:24:03Z","created_at":"2022-03-17T21:21:38Z","creator_user_login":"mrkev"}
{"number":23202,"comment_id":"1073647398","body":"Just checked: my devtools are up to date and I'm seeing the bug. I'm not using any forms libraries but wired it up manually, so formik or whatever like suggested above is probably not the reason. I also tried to create a stripped down app for reproducing this bug, but could not successfully reproduce it.\r\nThe very special thing with the app where I'm seeing the bug is that I'm using two different react apps on the same page, one compiled as library and loaded and started inside of the other. Maybe this scenario is not supported?","updated_at":"2022-03-21T08:54:39Z","created_at":"2022-03-21T08:54:39Z","creator_user_login":"RobIsHere"}
{"number":23202,"comment_id":"1073958283","body":"@RobIsHere Hey! This scenario should be supported, though since it's not common there might be an issue with it. Did you try reproducing the bug with the two different react apps? To create a repro case, I would recommend removing chunks of your app until you get a small repro that still shows the bug.","updated_at":"2022-03-21T14:20:33Z","created_at":"2022-03-21T14:20:33Z","creator_user_login":"lunaruan"}
{"number":23202,"comment_id":"1076884020","body":"I got this error using react-devtools 4.24.1.\r\n\r\nReinstalling npm install react-devtools@4.2 solved my issue. (Also possible a fresh install helped.)\r\n\r\nAlso FWIW with 4.24.1, I had an issue where react-devtools loaded and seemed to connect but no components displayed (filters were removed). ","updated_at":"2022-03-23T22:28:39Z","created_at":"2022-03-23T22:28:39Z","creator_user_login":"evangrim"}
{"number":23202,"comment_id":"1101180251","body":"I am having the same issue when trying to switch the component rendered inside a Suspense.\r\n\r\nreact-devtools version: [4.24.3-46a98cff2](https://github.com/facebook/react/blob/main/packages/react-devtools/CHANGELOG.md#4243)\r\n\r\nDemo: https://codesandbox.io/s/amazing-blackburn-k2iql8?file=/src/App.js","updated_at":"2022-04-18T07:35:53Z","created_at":"2022-04-18T07:34:56Z","creator_user_login":"moisesrj97"}
{"number":23202,"comment_id":"1103200095","body":"Edit: see follow up below","updated_at":"2022-04-20T00:08:36Z","created_at":"2022-04-19T21:41:17Z","creator_user_login":"shamilovtim"}
{"number":23202,"comment_id":"1103278728","body":"UPDATE: See comment below for full fix and information.\r\n\r\nHello @lunaruan @bvaughn sorry for the tag but I thought I'd comment that I've isolated this issue to a specific DevTools release where it got introduced: between ~~4.13.0...4.13.1~~~  4.7.0 and 4.8.0 (UPDATE: See comment below,) I'll list our stack and see attached screengrabs for evidence.\r\n\r\n\r\nENV INFO:\r\n`node` is `v14.17.3` installed with nvm at `/Users/admin/.nvm/versions/node/v14.17.3/bin/node` \r\n`npm 8.5.5` installed at `/Users/admin/.nvm/versions/node/v14.17.3/bin/npm` \r\n`react: 17.0.2`\r\n`react-native: 0.65.2` which depends transitively on `react-dev-tools-core@^4.6.0` and resolved at `\"4.13.5\"`\r\n`react-dev-tools`: installed with `yarn global add react-devtools@4.7.0` at `/usr/local/bin/react-devtools`, which incrementing to `4.8.0` will consistently reproduce errors\r\n\r\n\r\nRegarding what I've tried. I've tried unlocking the local transitive to latest (4.24.4 or whatever) and installing global 4.24.4. This reproduces the node 161 error message. I've tried almost every version over 4.7.0 and all of them throw errors. I've tried installing those latest versions with `npm -g` instead of yarn and it didn't help. I've tried using latest react-devtools with node v16 as well as node v13, with react-devtools installed globally inside of each of those particular node versions and that didn't help either.\r\n\r\nMy conclusion is that despite react-native `0.65.2` specifying a transitive `^4.6.0` the reality is that it only supports `4.7.0` and lower. Given that this is an older version of RN, I doubt that they're going to make a patch release to fix this. So perhaps the ball is in the DevTools team's court to make react devtools > 4.7.0 backwards compatible? \r\n\r\nThanks for reading!","updated_at":"2022-04-20T00:59:31Z","created_at":"2022-04-20T00:06:57Z","creator_user_login":"shamilovtim"}
{"number":23202,"comment_id":"1103281817","body":"Thanks for the follow up info. I suspect 4.13.1 is maybe a bad lead though, in terms of when the bug was \"introduced\" – because that version included #21426 (which basically made DevTools stop silently swallowing certain types of Store errors). In other words, 4.13.0 (and older) were probably also broken but in a less obvious way.","updated_at":"2022-04-20T00:11:57Z","created_at":"2022-04-20T00:11:57Z","creator_user_login":"bvaughn"}
{"number":23202,"comment_id":"1103314940","body":"You're right @bvaughn it was just swallowing the error and neither the profiler tab nor the component tab were working. I've now isolated to no errors whatsoever. I did it by locking react native's transitive `react-devtools-core` to `4.7.0` (rather than ^4.6.0) and installed global devtools with `yarn global add react-devtools@4.7.0.` The break happens between `react-devtools` 4.7.0...4.8.0. I suspect React Native has not locked to the correct transitive version, which is why you guys can't reproduce this. They just need to remove the `^` from their transitive dependency on react-devtools-core in package.json. For backwards compat the fix is probably between those two versions. I'll update my previous comment to point here.\r\n\r\n4.7.0 success, both components and profiler working:\r\n<img width=\"1500\" alt=\"Screen Shot 2022-04-19 at 8 52 58 PM\" src=\"https://user-images.githubusercontent.com/3495974/164125518-13ac42f2-f501-4669-a442-144a693783c8.png\">\r\n","updated_at":"2022-04-20T00:56:04Z","created_at":"2022-04-20T00:55:39Z","creator_user_login":"shamilovtim"}
{"number":23202,"comment_id":"1103320885","body":"Interesting! Nice sleuthing.\r\n\r\nThings broke in version 4.8? 😮  That release was very small:\r\nhttps://github.com/facebook/react/blob/main/packages/react-devtools/CHANGELOG.md#480","updated_at":"2022-04-20T01:07:48Z","created_at":"2022-04-20T01:07:48Z","creator_user_login":"bvaughn"}
{"number":23202,"comment_id":"1119101026","body":"@shamilovtim Wow nice find! I tried reproducing with my local React Native app on v4.8, but I couldn't reproduce the bug. Do you have a link to your app that I can take a look at to see if I can repro on my side?","updated_at":"2022-05-05T22:29:50Z","created_at":"2022-05-05T22:29:50Z","creator_user_login":"lunaruan"}
{"number":23202,"comment_id":"1119114208","body":"> @shamilovtim Wow nice find! I tried reproducing with my local React Native app on v4.8, but I couldn't reproduce the bug. Do you have a link to your app that I can take a look at to see if I can repro on my side?\n\nAh sorry @lunaruan but Shipt is closed source. I wonder, did you test on the react native version that was experiencing this problem? We're on 0.65.x. I  assume this isn't worth hotfixing, you can probably just have this ticket serve as the solution for people still on older versions. ","updated_at":"2022-05-05T22:57:49Z","created_at":"2022-05-05T22:57:49Z","creator_user_login":"shamilovtim"}
{"number":23202,"comment_id":"1277444235","body":"```\r\n\"react-devtools-core\": \"4.24.3\",\r\n...\r\n\"resolutions\": {\r\n  \"react-devtools-core\": \"4.24.3\"\r\n},\r\n```\r\n\r\nhttps://github.com/facebook/flipper/issues/3649?fbclid=IwAR3wycD10ojRA2v3alwuaNeykbVzjnfiYkqsqHJX5Fj6YKj_QK0TtR1Fm7M#issuecomment-1272444843","updated_at":"2022-10-13T11:15:23Z","created_at":"2022-10-13T11:15:23Z","creator_user_login":"kofkgoing"}
{"number":25467,"comment_id":"1275447444","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: edbfc6399ffa31267a2e884a63194b5ea17514ff...0275531b939d6ee8364c6dee839783606dd136e2\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **=** | 154.35 kB | 154.37 kB | +0.02% | 48.99 kB | 49.00 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.50%** | 156.28 kB | 157.05 kB | +0.47% | 49.61 kB | 49.84 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactDOM-prod.classic.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.46%** | 533.20 kB | 535.66 kB | +0.53% | 94.44 kB | 94.94 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactDOM-prod.modern.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.47%** | 518.30 kB | 520.76 kB | +0.56% | 92.26 kB | 92.77 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactDOMForked-prod.classic.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.46%** | 533.20 kB | 535.66 kB | +0.53% | 94.44 kB | 94.94 kB\n| [oss-experimental/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/jest-react/cjs/jest-react.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+6.69%** | 2.42 kB | 2.59 kB | +3.33% | 1.17 kB | 1.21 kB\n| [oss-stable-semver/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable-semver/jest-react/cjs/jest-react.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+6.69%** | 2.42 kB | 2.59 kB | +3.33% | 1.17 kB | 1.21 kB\n| [oss-stable/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable/jest-react/cjs/jest-react.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+6.69%** | 2.42 kB | 2.59 kB | +3.33% | 1.17 kB | 1.21 kB\n| [oss-experimental/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/jest-react/cjs/jest-react.development.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+2.60%** | 10.65 kB | 10.92 kB | +1.51% | 3.77 kB | 3.82 kB\n| [oss-stable-semver/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable-semver/jest-react/cjs/jest-react.development.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+2.60%** | 10.65 kB | 10.92 kB | +1.51% | 3.77 kB | 3.82 kB\n| [oss-stable/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable/jest-react/cjs/jest-react.development.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+2.60%** | 10.65 kB | 10.92 kB | +1.51% | 3.77 kB | 3.82 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/jest-react/cjs/jest-react.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+6.69%** | 2.42 kB | 2.59 kB | +3.33% | 1.17 kB | 1.21 kB\n| [oss-stable-semver/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable-semver/jest-react/cjs/jest-react.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+6.69%** | 2.42 kB | 2.59 kB | +3.33% | 1.17 kB | 1.21 kB\n| [oss-stable/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable/jest-react/cjs/jest-react.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+6.69%** | 2.42 kB | 2.59 kB | +3.33% | 1.17 kB | 1.21 kB\n| [oss-experimental/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/jest-react/cjs/jest-react.development.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+2.60%** | 10.65 kB | 10.92 kB | +1.51% | 3.77 kB | 3.82 kB\n| [oss-stable-semver/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable-semver/jest-react/cjs/jest-react.development.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+2.60%** | 10.65 kB | 10.92 kB | +1.51% | 3.77 kB | 3.82 kB\n| [oss-stable/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable/jest-react/cjs/jest-react.development.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+2.60%** | 10.65 kB | 10.92 kB | +1.51% | 3.77 kB | 3.82 kB\n| [facebook-www/ReactIs-dev.modern.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactIs-dev.modern.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+1.51%** | 9.56 kB | 9.70 kB | +1.11% | 2.53 kB | 2.56 kB\n| [facebook-www/ReactIs-dev.classic.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactIs-dev.classic.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+1.51%** | 9.56 kB | 9.70 kB | +1.07% | 2.54 kB | 2.56 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.73%** | 12.53 kB | 12.62 kB | +0.86% | 3.74 kB | 3.77 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.73%** | 12.53 kB | 12.62 kB | +0.86% | 3.74 kB | 3.77 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.73%** | 12.53 kB | 12.62 kB | +0.86% | 3.74 kB | 3.77 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.72%** | 12.60 kB | 12.69 kB | +0.85% | 3.76 kB | 3.79 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.72%** | 12.60 kB | 12.69 kB | +0.85% | 3.76 kB | 3.79 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.72%** | 12.60 kB | 12.69 kB | +0.85% | 3.76 kB | 3.79 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.50%** | 156.28 kB | 157.05 kB | +0.47% | 49.61 kB | 49.84 kB\n| [oss-experimental/react-dom/cjs/react-dom-unstable_testing.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/react-dom/cjs/react-dom-unstable_testing.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.48%** | 160.68 kB | 161.45 kB | +0.46% | 51.43 kB | 51.66 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactDOM-prod.modern.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.47%** | 518.30 kB | 520.76 kB | +0.56% | 92.26 kB | 92.77 kB\n| [facebook-www/ReactDOMForked-prod.modern.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactDOMForked-prod.modern.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.47%** | 518.30 kB | 520.76 kB | +0.56% | 92.26 kB | 92.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/react-dom/cjs/react-dom.profiling.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.47%** | 165.79 kB | 166.56 kB | +0.44% | 52.10 kB | 52.33 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactDOM-prod.classic.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.46%** | 533.20 kB | 535.66 kB | +0.53% | 94.44 kB | 94.94 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactDOMForked-prod.classic.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.46%** | 533.20 kB | 535.66 kB | +0.53% | 94.44 kB | 94.94 kB\n| [facebook-www/ReactDOM-profiling.modern.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactDOM-profiling.modern.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.45%** | 548.44 kB | 550.90 kB | +0.50% | 96.77 kB | 97.25 kB\n| [facebook-www/ReactDOMForked-profiling.modern.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactDOMForked-profiling.modern.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.45%** | 548.44 kB | 550.90 kB | +0.50% | 96.77 kB | 97.26 kB\n| [facebook-www/ReactDOM-profiling.classic.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactDOM-profiling.classic.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.44%** | 563.43 kB | 565.89 kB | +0.49% | 98.96 kB | 99.45 kB\n| [facebook-www/ReactDOMForked-profiling.classic.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactDOMForked-profiling.classic.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.44%** | 563.43 kB | 565.89 kB | +0.49% | 98.96 kB | 99.45 kB\n| [oss-experimental/react-dom/umd/react-dom.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/react-dom/umd/react-dom.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.41%** | 156.28 kB | 156.92 kB | +0.44% | 50.36 kB | 50.58 kB\n| [oss-experimental/react-dom/umd/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/react-dom/umd/react-dom.profiling.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.38%** | 165.11 kB | 165.75 kB | +0.39% | 52.68 kB | 52.88 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer.development.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer.development.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.34%** | 34.72 kB | 34.84 kB | +0.33% | 7.83 kB | 7.86 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.development.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.development.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.34%** | 34.72 kB | 34.84 kB | +0.33% | 7.83 kB | 7.86 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer.development.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer.development.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.34%** | 34.72 kB | 34.84 kB | +0.33% | 7.83 kB | 7.86 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.34%** | 34.85 kB | 34.97 kB | +0.34% | 7.85 kB | 7.88 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.34%** | 34.85 kB | 34.97 kB | +0.34% | 7.85 kB | 7.88 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.34%** | 34.85 kB | 34.97 kB | +0.34% | 7.85 kB | 7.88 kB\n| [facebook-www/JSXDEVRuntime-dev.modern.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/JSXDEVRuntime-dev.modern.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.31%** | 46.52 kB | 46.66 kB | +0.23% | 13.16 kB | 13.19 kB\n| [facebook-www/JSXDEVRuntime-dev.classic.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/JSXDEVRuntime-dev.classic.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.31%** | 46.52 kB | 46.66 kB | +0.23% | 13.16 kB | 13.19 kB\n| [facebook-www/ReactTestUtils-dev.modern.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactTestUtils-dev.modern.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.29%** | 50.30 kB | 50.44 kB | +0.21% | 14.03 kB | 14.06 kB\n| [facebook-www/ReactTestUtils-dev.classic.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactTestUtils-dev.classic.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.29%** | 50.30 kB | 50.44 kB | +0.20% | 14.03 kB | 14.05 kB\n| [facebook-www/ReactDOMForked-dev.modern.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactDOMForked-dev.modern.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.26%** | 1,332.03 kB | 1,335.47 kB | +0.27% | 289.63 kB | 290.41 kB\n| [facebook-www/ReactDOM-dev.modern.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactDOM-dev.modern.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.26%** | 1,332.03 kB | 1,335.47 kB | +0.27% | 289.63 kB | 290.41 kB\n| [facebook-www/ReactDOMForked-dev.classic.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactDOMForked-dev.classic.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.25%** | 1,357.03 kB | 1,360.46 kB | +0.26% | 294.24 kB | 295.01 kB\n| [facebook-www/ReactDOM-dev.classic.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactDOM-dev.classic.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.25%** | 1,357.03 kB | 1,360.46 kB | +0.26% | 294.25 kB | 295.02 kB\n| [oss-experimental/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/react-dom/cjs/react-dom.development.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.23%** | 1,212.36 kB | 1,215.21 kB | +0.25% | 268.62 kB | 269.28 kB\n| [oss-experimental/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/react-dom/umd/react-dom.development.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.23%** | 1,271.36 kB | 1,274.29 kB | +0.24% | 271.57 kB | 272.24 kB\n| [oss-experimental/react-dom/cjs/react-dom-unstable_testing.development.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/react-dom/cjs/react-dom-unstable_testing.development.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.23%** | 1,205.50 kB | 1,208.23 kB | +0.24% | 267.20 kB | 267.83 kB\n| [facebook-www/ReactART-dev.modern.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactART-dev.modern.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.23%** | 873.45 kB | 875.42 kB | +0.27% | 184.36 kB | 184.85 kB\n| [facebook-www/ReactART-dev.classic.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/facebook-www/ReactART-dev.classic.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.22%** | 883.91 kB | 885.88 kB | +0.25% | 186.45 kB | 186.92 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.22%** | 107.57 kB | 107.81 kB | +0.28% | 32.74 kB | 32.84 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/0275531b939d6ee8364c6dee839783606dd136e2/files/oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=edbfc6399ffa31267a2e884a63194b5ea17514ff) | **+0.21%** | 116.46 kB | 116.70 kB | +0.26% | 34.90 kB | 34.99 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 0275531b939d6ee8364c6dee839783606dd136e2\n</p>\n","updated_at":"2022-12-02T01:17:51Z","created_at":"2022-10-12T00:55:45Z","creator_user_login":"sizebot"}
{"number":25467,"comment_id":"1334643936","body":"@acdlite  I update this PR to be based on the new approach of batching lanes","updated_at":"2022-12-02T01:13:59Z","created_at":"2022-12-02T01:13:59Z","creator_user_login":"tyao1"}
{"number":24637,"comment_id":"1140528921","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: a2766387efe68b318b23d8c35c70b850d1e6a250...e68ac36798923e4910c3e7d79171c3eefcaa9aaa\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 131.28 kB | 131.28 kB | = | 42.13 kB | 42.13 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 136.54 kB | 136.54 kB | = | 43.68 kB | 43.68 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 439.35 kB | 439.35 kB | = | 80.29 kB | 80.29 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 424.64 kB | 424.64 kB | = | 78.13 kB | 78.13 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 439.35 kB | 439.35 kB | = | 80.29 kB | 80.29 kB\n| oss-stable-semver/react-server/cjs/react-server.production.min.js | **+3.80%** | 20.36 kB | 21.13 kB | +2.64% | 6.97 kB | 7.15 kB\n| oss-stable/react-server/cjs/react-server.production.min.js | **+3.80%** | 20.36 kB | 21.13 kB | +2.64% | 6.97 kB | 7.15 kB\n| oss-experimental/react-server/cjs/react-server.production.min.js | **+3.74%** | 20.69 kB | 21.46 kB | +2.67% | 7.07 kB | 7.26 kB\n| oss-stable-semver/react-server/cjs/react-server.development.js | **+2.72%** | 126.28 kB | 129.72 kB | +2.08% | 31.63 kB | 32.29 kB\n| oss-stable/react-server/cjs/react-server.development.js | **+2.72%** | 126.28 kB | 129.72 kB | +2.08% | 31.63 kB | 32.29 kB\n| oss-experimental/react-server/cjs/react-server.development.js | **+2.70%** | 127.15 kB | 130.59 kB | +2.07% | 31.83 kB | 32.49 kB\n| oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.production.min.js | **+2.32%** | 32.96 kB | 33.72 kB | +1.61% | 10.84 kB | 11.02 kB\n| oss-stable/react-dom/cjs/react-dom-server-legacy.browser.production.min.js | **+2.32%** | 32.98 kB | 33.75 kB | +1.61% | 10.86 kB | 11.04 kB\n| oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.production.min.js | **+2.30%** | 33.11 kB | 33.87 kB | +1.46% | 11.00 kB | 11.16 kB\n| oss-stable/react-dom/umd/react-dom-server-legacy.browser.production.min.js | **+2.30%** | 33.13 kB | 33.89 kB | +1.46% | 11.02 kB | 11.18 kB\n| oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.production.min.js | **+2.29%** | 33.40 kB | 34.17 kB | +1.58% | 11.01 kB | 11.18 kB\n| oss-experimental/react-dom/umd/react-dom-server-legacy.browser.production.min.js | **+2.27%** | 33.55 kB | 34.31 kB | +1.38% | 11.16 kB | 11.31 kB\n| oss-stable-semver/react-dom/cjs/react-dom-server.browser.production.min.js | **+2.22%** | 34.09 kB | 34.85 kB | +1.66% | 11.59 kB | 11.78 kB\n| oss-stable/react-dom/cjs/react-dom-server.browser.production.min.js | **+2.22%** | 34.11 kB | 34.87 kB | +1.65% | 11.61 kB | 11.81 kB\n| oss-stable-semver/react-dom/umd/react-dom-server.browser.production.min.js | **+2.20%** | 34.22 kB | 34.97 kB | +1.68% | 11.72 kB | 11.91 kB\n| oss-stable/react-dom/umd/react-dom-server.browser.production.min.js | **+2.20%** | 34.24 kB | 34.99 kB | +1.69% | 11.74 kB | 11.94 kB\n| oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js | **+2.19%** | 34.53 kB | 35.29 kB | +1.62% | 11.76 kB | 11.95 kB\n| oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js | **+2.17%** | 34.66 kB | 35.41 kB | +1.63% | 11.87 kB | 12.06 kB\n| oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.production.min.js | **+2.08%** | 36.65 kB | 37.41 kB | +1.32% | 12.08 kB | 12.24 kB\n| oss-stable/react-dom/cjs/react-dom-server-legacy.node.production.min.js | **+2.08%** | 36.67 kB | 37.43 kB | +1.32% | 12.10 kB | 12.26 kB\n| oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js | **+2.06%** | 37.15 kB | 37.91 kB | +1.40% | 12.26 kB | 12.43 kB\n| oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js | **+2.02%** | 37.36 kB | 38.11 kB | +1.35% | 12.66 kB | 12.83 kB\n| oss-stable/react-dom/cjs/react-dom-server.node.production.min.js | **+2.02%** | 37.38 kB | 38.14 kB | +1.34% | 12.68 kB | 12.85 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable-semver/react-server/cjs/react-server.production.min.js | **+3.80%** | 20.36 kB | 21.13 kB | +2.64% | 6.97 kB | 7.15 kB\n| oss-stable/react-server/cjs/react-server.production.min.js | **+3.80%** | 20.36 kB | 21.13 kB | +2.64% | 6.97 kB | 7.15 kB\n| oss-experimental/react-server/cjs/react-server.production.min.js | **+3.74%** | 20.69 kB | 21.46 kB | +2.67% | 7.07 kB | 7.26 kB\n| oss-stable-semver/react-server/cjs/react-server.development.js | **+2.72%** | 126.28 kB | 129.72 kB | +2.08% | 31.63 kB | 32.29 kB\n| oss-stable/react-server/cjs/react-server.development.js | **+2.72%** | 126.28 kB | 129.72 kB | +2.08% | 31.63 kB | 32.29 kB\n| oss-experimental/react-server/cjs/react-server.development.js | **+2.70%** | 127.15 kB | 130.59 kB | +2.07% | 31.83 kB | 32.49 kB\n| oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.production.min.js | **+2.32%** | 32.96 kB | 33.72 kB | +1.61% | 10.84 kB | 11.02 kB\n| oss-stable/react-dom/cjs/react-dom-server-legacy.browser.production.min.js | **+2.32%** | 32.98 kB | 33.75 kB | +1.61% | 10.86 kB | 11.04 kB\n| oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.production.min.js | **+2.30%** | 33.11 kB | 33.87 kB | +1.46% | 11.00 kB | 11.16 kB\n| oss-stable/react-dom/umd/react-dom-server-legacy.browser.production.min.js | **+2.30%** | 33.13 kB | 33.89 kB | +1.46% | 11.02 kB | 11.18 kB\n| oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.production.min.js | **+2.29%** | 33.40 kB | 34.17 kB | +1.58% | 11.01 kB | 11.18 kB\n| oss-experimental/react-dom/umd/react-dom-server-legacy.browser.production.min.js | **+2.27%** | 33.55 kB | 34.31 kB | +1.38% | 11.16 kB | 11.31 kB\n| oss-stable-semver/react-dom/cjs/react-dom-server.browser.production.min.js | **+2.22%** | 34.09 kB | 34.85 kB | +1.66% | 11.59 kB | 11.78 kB\n| oss-stable/react-dom/cjs/react-dom-server.browser.production.min.js | **+2.22%** | 34.11 kB | 34.87 kB | +1.65% | 11.61 kB | 11.81 kB\n| oss-stable-semver/react-dom/umd/react-dom-server.browser.production.min.js | **+2.20%** | 34.22 kB | 34.97 kB | +1.68% | 11.72 kB | 11.91 kB\n| oss-stable/react-dom/umd/react-dom-server.browser.production.min.js | **+2.20%** | 34.24 kB | 34.99 kB | +1.69% | 11.74 kB | 11.94 kB\n| oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js | **+2.19%** | 34.53 kB | 35.29 kB | +1.62% | 11.76 kB | 11.95 kB\n| oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js | **+2.17%** | 34.66 kB | 35.41 kB | +1.63% | 11.87 kB | 12.06 kB\n| oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.production.min.js | **+2.08%** | 36.65 kB | 37.41 kB | +1.32% | 12.08 kB | 12.24 kB\n| oss-stable/react-dom/cjs/react-dom-server-legacy.node.production.min.js | **+2.08%** | 36.67 kB | 37.43 kB | +1.32% | 12.10 kB | 12.26 kB\n| oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js | **+2.06%** | 37.15 kB | 37.91 kB | +1.40% | 12.26 kB | 12.43 kB\n| oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js | **+2.02%** | 37.36 kB | 38.11 kB | +1.35% | 12.66 kB | 12.83 kB\n| oss-stable/react-dom/cjs/react-dom-server.node.production.min.js | **+2.02%** | 37.38 kB | 38.14 kB | +1.34% | 12.68 kB | 12.85 kB\n| oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js | **+1.99%** | 37.86 kB | 38.61 kB | +1.48% | 12.84 kB | 13.03 kB\n| facebook-www/ReactDOMServer-prod.modern.js | **+1.92%** | 75.71 kB | 77.16 kB | +1.83% | 15.74 kB | 16.02 kB\n| facebook-www/ReactDOMServerStreaming-prod.modern.js | **+1.84%** | 79.24 kB | 80.70 kB | +1.66% | 16.78 kB | 17.06 kB\n| facebook-www/ReactDOMServerStreaming-dev.modern.js | **+1.45%** | 234.94 kB | 238.35 kB | +1.12% | 56.26 kB | 56.89 kB\n| oss-stable-semver/react-dom/cjs/react-dom-server.browser.development.js | **+1.41%** | 232.83 kB | 236.12 kB | +1.05% | 56.93 kB | 57.52 kB\n| oss-stable/react-dom/cjs/react-dom-server.browser.development.js | **+1.41%** | 232.85 kB | 236.14 kB | +1.05% | 56.95 kB | 57.55 kB\n| oss-stable-semver/react-dom/cjs/react-dom-server.node.development.js | **+1.40%** | 233.99 kB | 237.28 kB | +1.05% | 56.86 kB | 57.46 kB\n| oss-stable/react-dom/cjs/react-dom-server.node.development.js | **+1.40%** | 234.02 kB | 237.30 kB | +1.05% | 56.89 kB | 57.48 kB\n| oss-experimental/react-dom/cjs/react-dom-server.browser.development.js | **+1.40%** | 234.40 kB | 237.69 kB | +1.04% | 57.33 kB | 57.93 kB\n| oss-stable-semver/react-dom/umd/react-dom-server.browser.development.js | **+1.40%** | 244.32 kB | 247.73 kB | +1.03% | 57.54 kB | 58.13 kB\n| oss-stable/react-dom/umd/react-dom-server.browser.development.js | **+1.40%** | 244.34 kB | 247.75 kB | +1.03% | 57.56 kB | 58.16 kB\n| oss-experimental/react-dom/cjs/react-dom-server.node.development.js | **+1.40%** | 235.56 kB | 238.85 kB | +1.04% | 57.27 kB | 57.86 kB\n| oss-experimental/react-dom/umd/react-dom-server.browser.development.js | **+1.39%** | 245.98 kB | 249.39 kB | +1.04% | 57.94 kB | 58.54 kB\n| facebook-www/ReactDOMServer-dev.modern.js | **+1.39%** | 238.42 kB | 241.73 kB | +1.03% | 57.05 kB | 57.64 kB\n| oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.development.js | **+1.38%** | 233.23 kB | 236.45 kB | +1.00% | 56.66 kB | 57.23 kB\n| oss-stable/react-dom/cjs/react-dom-server-legacy.browser.development.js | **+1.38%** | 233.26 kB | 236.47 kB | +1.00% | 56.69 kB | 57.25 kB\n| oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js | **+1.37%** | 234.80 kB | 238.02 kB | +0.99% | 57.11 kB | 57.67 kB\n| oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.development.js | **+1.37%** | 234.94 kB | 238.16 kB | +1.00% | 57.13 kB | 57.70 kB\n| oss-stable/react-dom/cjs/react-dom-server-legacy.node.development.js | **+1.37%** | 234.97 kB | 238.18 kB | +1.00% | 57.16 kB | 57.73 kB\n| oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.development.js | **+1.36%** | 244.75 kB | 248.09 kB | +0.98% | 57.31 kB | 57.88 kB\n| oss-stable/react-dom/umd/react-dom-server-legacy.browser.development.js | **+1.36%** | 244.78 kB | 248.12 kB | +0.99% | 57.34 kB | 57.90 kB\n| oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js | **+1.36%** | 236.51 kB | 239.73 kB | +0.99% | 57.58 kB | 58.15 kB\n| oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js | **+1.36%** | 246.41 kB | 249.75 kB | +1.00% | 57.71 kB | 58.29 kB\n| oss-experimental/react-noop-renderer/cjs/react-noop-renderer-server.development.js | **=** | 6.16 kB | 6.10 kB | = | 1.71 kB | 1.68 kB\n| oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-server.development.js | **=** | 6.16 kB | 6.10 kB | = | 1.71 kB | 1.68 kB\n| oss-stable/react-noop-renderer/cjs/react-noop-renderer-server.development.js | **=** | 6.16 kB | 6.10 kB | = | 1.71 kB | 1.68 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against e68ac36798923e4910c3e7d79171c3eefcaa9aaa\n</p>\n","updated_at":"2022-05-31T21:14:27Z","created_at":"2022-05-29T21:35:58Z","creator_user_login":"sizebot"}
{"number":24637,"comment_id":"1142642097","body":"> You can keep track of if the flushSegment just flushed a text edge in flushSubtree and if so insert a separator.\r\n\r\nI couldn't figure out how to do this. The challenge I see is segment.chunks are opaque so I need to stash the emitted types at the edges (between children) on the segments that interleave them.\r\n\r\nI was able to de-link the segment objects but I now am tracking both sides of a segments front and back edges so I can flush leading and/or trailing separators in the flushSegment.\r\n\r\nI pushed a rough version but there are some things I am not loving, for instance setting postEdge on the most recent segment if no new chunks have been written. This feels over-complicated and you seem to have an idea of how it could be done simply but I'm just not seeing it","updated_at":"2022-05-31T21:09:09Z","created_at":"2022-05-31T21:09:09Z","creator_user_login":"gnoff"}
{"number":25703,"comment_id":"1325443455","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: b14d7fa4b88dad5f0017d084e462952c700aa2ad...6fa5d40910c0c4eca30dd66d4294208f8eb5350c\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 154.37 kB | 154.37 kB | = | 48.97 kB | 48.97 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 156.29 kB | 156.29 kB | = | 49.63 kB | 49.63 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/facebook-www/ReactDOM-prod.classic.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 533.12 kB | 533.12 kB | = | 94.96 kB | 94.96 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/facebook-www/ReactDOM-prod.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 518.22 kB | 518.22 kB | = | 92.76 kB | 92.76 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/facebook-www/ReactDOMForked-prod.classic.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 533.12 kB | 533.12 kB | = | 94.96 kB | 94.96 kB\n| [oss-experimental/react-dom/server.node.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/server.node.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+13.47%** | 0.65 kB | 0.73 kB | +8.40% | 0.25 kB | 0.27 kB\n| [oss-stable-semver/react-dom/server.node.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/server.node.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+13.47%** | 0.65 kB | 0.73 kB | +8.40% | 0.25 kB | 0.27 kB\n| [oss-stable/react-dom/server.node.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/server.node.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+13.47%** | 0.65 kB | 0.73 kB | +8.40% | 0.25 kB | 0.27 kB\n| [oss-experimental/react-dom/unstable_server-external-runtime.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/unstable_server-external-runtime.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+12.93%** | 2.51 kB | 2.84 kB | +9.48% | 1.14 kB | 1.25 kB\n| [oss-stable-semver/react-dom/unstable_server-external-runtime.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/unstable_server-external-runtime.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+12.93%** | 2.51 kB | 2.84 kB | +9.48% | 1.14 kB | 1.25 kB\n| [oss-stable/react-dom/unstable_server-external-runtime.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/unstable_server-external-runtime.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+12.93%** | 2.51 kB | 2.84 kB | +9.48% | 1.14 kB | 1.25 kB\n| [oss-experimental/react-dom/server.browser.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/server.browser.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+8.05%** | 0.66 kB | 0.71 kB | +5.93% | 0.25 kB | 0.27 kB\n| [oss-stable-semver/react-dom/server.browser.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/server.browser.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+8.05%** | 0.66 kB | 0.71 kB | +5.93% | 0.25 kB | 0.27 kB\n| [oss-stable/react-dom/server.browser.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/server.browser.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+8.05%** | 0.66 kB | 0.71 kB | +5.93% | 0.25 kB | 0.27 kB\n| [oss-experimental/react-dom/server.bun.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/server.bun.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+7.49%** | 0.65 kB | 0.70 kB | +5.08% | 0.26 kB | 0.27 kB\n| [oss-stable-semver/react-dom/server.bun.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/server.bun.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+7.49%** | 0.65 kB | 0.70 kB | +5.08% | 0.26 kB | 0.27 kB\n| [oss-stable/react-dom/server.bun.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/server.bun.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+7.49%** | 0.65 kB | 0.70 kB | +5.08% | 0.26 kB | 0.27 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server.bun.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+5.69%** | 54.79 kB | 57.91 kB | +3.77% | 17.08 kB | 17.73 kB\n| [oss-stable/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server.bun.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+5.69%** | 54.81 kB | 57.93 kB | +3.75% | 17.11 kB | 17.75 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server.bun.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+5.65%** | 55.20 kB | 58.32 kB | +3.73% | 17.27 kB | 17.91 kB\n| [facebook-www/ReactDOMServer-prod.modern.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/facebook-www/ReactDOMServer-prod.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+4.84%** | 123.73 kB | 129.72 kB | +3.66% | 23.42 kB | 24.27 kB\n| [facebook-www/ReactDOMServer-prod.classic.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/facebook-www/ReactDOMServer-prod.classic.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+4.73%** | 126.87 kB | 132.87 kB | +3.82% | 24.04 kB | 24.96 kB\n| [facebook-www/ReactDOMServerStreaming-prod.modern.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/facebook-www/ReactDOMServerStreaming-prod.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+4.72%** | 128.86 kB | 134.94 kB | +3.64% | 24.73 kB | 25.63 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.60%** | 50.77 kB | 52.60 kB | +2.33% | 15.60 kB | 15.96 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server-legacy.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.59%** | 50.79 kB | 52.62 kB | +2.32% | 15.62 kB | 15.99 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.57%** | 51.12 kB | 52.95 kB | +2.26% | 15.77 kB | 16.12 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.56%** | 50.87 kB | 52.69 kB | +2.31% | 15.92 kB | 16.29 kB\n| [oss-stable/react-dom/umd/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/umd/react-dom-server-legacy.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.56%** | 50.90 kB | 52.71 kB | +2.32% | 15.94 kB | 16.31 kB\n| [oss-experimental/react-dom/umd/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/umd/react-dom-server-legacy.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.54%** | 51.23 kB | 53.04 kB | +2.30% | 16.06 kB | 16.43 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.29%** | 55.49 kB | 57.32 kB | +2.19% | 17.05 kB | 17.42 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server-legacy.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.29%** | 55.51 kB | 57.34 kB | +2.19% | 17.07 kB | 17.45 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.27%** | 55.90 kB | 57.73 kB | +2.12% | 17.23 kB | 17.60 kB\n| [facebook-www/ReactDOMServer-dev.modern.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/facebook-www/ReactDOMServer-dev.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.08%** | 337.37 kB | 347.77 kB | +1.66% | 75.12 kB | 76.37 kB\n| [facebook-www/ReactDOMServerStreaming-dev.modern.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/facebook-www/ReactDOMServerStreaming-dev.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.07%** | 332.61 kB | 342.84 kB | +1.65% | 74.04 kB | 75.27 kB\n| [facebook-www/ReactDOMServer-dev.classic.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/facebook-www/ReactDOMServer-dev.classic.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.02%** | 344.06 kB | 354.46 kB | +1.64% | 76.54 kB | 77.80 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.98%** | 52.01 kB | 53.56 kB | +3.68% | 16.55 kB | 17.16 kB\n| [oss-stable/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.97%** | 52.03 kB | 53.58 kB | +3.68% | 16.57 kB | 17.18 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.96%** | 52.36 kB | 53.91 kB | +3.57% | 16.70 kB | 17.30 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.95%** | 320.20 kB | 329.66 kB | +1.70% | 73.73 kB | 74.98 kB\n| [oss-stable/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.95%** | 320.23 kB | 329.68 kB | +1.70% | 73.75 kB | 75.00 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/umd/react-dom-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.95%** | 52.08 kB | 53.61 kB | +3.64% | 16.85 kB | 17.46 kB\n| [oss-stable/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/umd/react-dom-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.94%** | 52.10 kB | 53.64 kB | +3.64% | 16.87 kB | 17.48 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.94%** | 321.52 kB | 330.98 kB | +1.70% | 74.10 kB | 75.37 kB\n| [oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.93%** | 52.43 kB | 53.97 kB | +3.59% | 16.98 kB | 17.59 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server.bun.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.91%** | 317.02 kB | 326.25 kB | +1.62% | 72.85 kB | 74.03 kB\n| [oss-stable/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server.bun.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.91%** | 317.04 kB | 326.28 kB | +1.62% | 72.87 kB | 74.05 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/umd/react-dom-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.91%** | 335.76 kB | 345.54 kB | +1.63% | 74.50 kB | 75.72 kB\n| [oss-stable/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/umd/react-dom-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.91%** | 335.78 kB | 345.57 kB | +1.63% | 74.52 kB | 75.74 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server.bun.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.90%** | 318.33 kB | 327.57 kB | +1.61% | 73.23 kB | 74.41 kB\n| [oss-experimental/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/umd/react-dom-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.90%** | 337.16 kB | 346.94 kB | +1.63% | 74.87 kB | 76.09 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.90%** | 56.31 kB | 57.95 kB | +3.29% | 17.87 kB | 18.46 kB\n| [oss-stable/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.90%** | 56.34 kB | 57.97 kB | +3.29% | 17.89 kB | 18.48 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.90%** | 321.43 kB | 330.74 kB | +1.58% | 73.68 kB | 74.84 kB\n| [oss-stable/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.90%** | 321.45 kB | 330.76 kB | +1.58% | 73.70 kB | 74.86 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.88%** | 322.75 kB | 332.06 kB | +1.59% | 74.05 kB | 75.22 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.88%** | 56.73 kB | 58.36 kB | +3.24% | 18.03 kB | 18.62 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-static.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.39%** | 320.83 kB | 328.50 kB | +1.48% | 73.92 kB | 75.01 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-static.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.38%** | 322.71 kB | 330.38 kB | +1.48% | 74.14 kB | 75.24 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.31%** | 319.69 kB | 327.06 kB | +1.46% | 73.26 kB | 74.33 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.31%** | 319.72 kB | 327.09 kB | +1.46% | 73.28 kB | 74.35 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.30%** | 321.01 kB | 328.38 kB | +1.46% | 73.64 kB | 74.71 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.29%** | 321.40 kB | 328.77 kB | +1.45% | 73.73 kB | 74.80 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.29%** | 321.43 kB | 328.80 kB | +1.45% | 73.75 kB | 74.82 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.28%** | 322.72 kB | 330.09 kB | +1.45% | 74.11 kB | 75.18 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.27%** | 335.23 kB | 342.84 kB | +1.44% | 74.05 kB | 75.11 kB\n| [oss-stable/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.27%** | 335.25 kB | 342.86 kB | +1.44% | 74.07 kB | 75.13 kB\n| [oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.26%** | 336.63 kB | 344.24 kB | +1.43% | 74.42 kB | 75.48 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 23.26 kB | 22.49 kB | +1.17% | 8.19 kB | 8.28 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 23.22 kB | 22.45 kB | +1.19% | 8.17 kB | 8.27 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 23.22 kB | 22.45 kB | +1.19% | 8.17 kB | 8.27 kB\n| [oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 23.07 kB | 22.30 kB | +1.26% | 8.20 kB | 8.31 kB\n| [oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 23.03 kB | 22.26 kB | +1.27% | 8.19 kB | 8.29 kB\n| [oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 23.03 kB | 22.26 kB | +1.27% | 8.19 kB | 8.29 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 22.89 kB | 22.12 kB | +1.26% | 8.11 kB | 8.21 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 22.84 kB | 22.07 kB | +1.29% | 8.09 kB | 8.19 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 22.84 kB | 22.07 kB | +1.29% | 8.09 kB | 8.19 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/react-dom/server.node.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/server.node.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+13.47%** | 0.65 kB | 0.73 kB | +8.40% | 0.25 kB | 0.27 kB\n| [oss-stable-semver/react-dom/server.node.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/server.node.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+13.47%** | 0.65 kB | 0.73 kB | +8.40% | 0.25 kB | 0.27 kB\n| [oss-stable/react-dom/server.node.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/server.node.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+13.47%** | 0.65 kB | 0.73 kB | +8.40% | 0.25 kB | 0.27 kB\n| [oss-experimental/react-dom/unstable_server-external-runtime.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/unstable_server-external-runtime.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+12.93%** | 2.51 kB | 2.84 kB | +9.48% | 1.14 kB | 1.25 kB\n| [oss-stable-semver/react-dom/unstable_server-external-runtime.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/unstable_server-external-runtime.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+12.93%** | 2.51 kB | 2.84 kB | +9.48% | 1.14 kB | 1.25 kB\n| [oss-stable/react-dom/unstable_server-external-runtime.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/unstable_server-external-runtime.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+12.93%** | 2.51 kB | 2.84 kB | +9.48% | 1.14 kB | 1.25 kB\n| [oss-experimental/react-dom/server.browser.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/server.browser.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+8.05%** | 0.66 kB | 0.71 kB | +5.93% | 0.25 kB | 0.27 kB\n| [oss-stable-semver/react-dom/server.browser.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/server.browser.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+8.05%** | 0.66 kB | 0.71 kB | +5.93% | 0.25 kB | 0.27 kB\n| [oss-stable/react-dom/server.browser.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/server.browser.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+8.05%** | 0.66 kB | 0.71 kB | +5.93% | 0.25 kB | 0.27 kB\n| [oss-experimental/react-dom/server.bun.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/server.bun.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+7.49%** | 0.65 kB | 0.70 kB | +5.08% | 0.26 kB | 0.27 kB\n| [oss-stable-semver/react-dom/server.bun.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/server.bun.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+7.49%** | 0.65 kB | 0.70 kB | +5.08% | 0.26 kB | 0.27 kB\n| [oss-stable/react-dom/server.bun.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/server.bun.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+7.49%** | 0.65 kB | 0.70 kB | +5.08% | 0.26 kB | 0.27 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server.bun.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+5.69%** | 54.79 kB | 57.91 kB | +3.77% | 17.08 kB | 17.73 kB\n| [oss-stable/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server.bun.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+5.69%** | 54.81 kB | 57.93 kB | +3.75% | 17.11 kB | 17.75 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.bun.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server.bun.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+5.65%** | 55.20 kB | 58.32 kB | +3.73% | 17.27 kB | 17.91 kB\n| [facebook-www/ReactDOMServer-prod.modern.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/facebook-www/ReactDOMServer-prod.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+4.84%** | 123.73 kB | 129.72 kB | +3.66% | 23.42 kB | 24.27 kB\n| [facebook-www/ReactDOMServer-prod.classic.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/facebook-www/ReactDOMServer-prod.classic.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+4.73%** | 126.87 kB | 132.87 kB | +3.82% | 24.04 kB | 24.96 kB\n| [facebook-www/ReactDOMServerStreaming-prod.modern.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/facebook-www/ReactDOMServerStreaming-prod.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+4.72%** | 128.86 kB | 134.94 kB | +3.64% | 24.73 kB | 25.63 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.60%** | 50.77 kB | 52.60 kB | +2.33% | 15.60 kB | 15.96 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server-legacy.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.59%** | 50.79 kB | 52.62 kB | +2.32% | 15.62 kB | 15.99 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.57%** | 51.12 kB | 52.95 kB | +2.26% | 15.77 kB | 16.12 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.56%** | 50.87 kB | 52.69 kB | +2.31% | 15.92 kB | 16.29 kB\n| [oss-stable/react-dom/umd/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/umd/react-dom-server-legacy.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.56%** | 50.90 kB | 52.71 kB | +2.32% | 15.94 kB | 16.31 kB\n| [oss-experimental/react-dom/umd/react-dom-server-legacy.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/umd/react-dom-server-legacy.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.54%** | 51.23 kB | 53.04 kB | +2.30% | 16.06 kB | 16.43 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.29%** | 55.49 kB | 57.32 kB | +2.19% | 17.05 kB | 17.42 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server-legacy.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.29%** | 55.51 kB | 57.34 kB | +2.19% | 17.07 kB | 17.45 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.27%** | 55.90 kB | 57.73 kB | +2.12% | 17.23 kB | 17.60 kB\n| [facebook-www/ReactDOMServer-dev.modern.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/facebook-www/ReactDOMServer-dev.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.08%** | 337.37 kB | 347.77 kB | +1.66% | 75.12 kB | 76.37 kB\n| [facebook-www/ReactDOMServerStreaming-dev.modern.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/facebook-www/ReactDOMServerStreaming-dev.modern.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.07%** | 332.61 kB | 342.84 kB | +1.65% | 74.04 kB | 75.27 kB\n| [facebook-www/ReactDOMServer-dev.classic.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/facebook-www/ReactDOMServer-dev.classic.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+3.02%** | 344.06 kB | 354.46 kB | +1.64% | 76.54 kB | 77.80 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.98%** | 52.01 kB | 53.56 kB | +3.68% | 16.55 kB | 17.16 kB\n| [oss-stable/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.97%** | 52.03 kB | 53.58 kB | +3.68% | 16.57 kB | 17.18 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.96%** | 52.36 kB | 53.91 kB | +3.57% | 16.70 kB | 17.30 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.95%** | 320.20 kB | 329.66 kB | +1.70% | 73.73 kB | 74.98 kB\n| [oss-stable/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.95%** | 320.23 kB | 329.68 kB | +1.70% | 73.75 kB | 75.00 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/umd/react-dom-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.95%** | 52.08 kB | 53.61 kB | +3.64% | 16.85 kB | 17.46 kB\n| [oss-stable/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/umd/react-dom-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.94%** | 52.10 kB | 53.64 kB | +3.64% | 16.87 kB | 17.48 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.94%** | 321.52 kB | 330.98 kB | +1.70% | 74.10 kB | 75.37 kB\n| [oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.93%** | 52.43 kB | 53.97 kB | +3.59% | 16.98 kB | 17.59 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server.bun.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.91%** | 317.02 kB | 326.25 kB | +1.62% | 72.85 kB | 74.03 kB\n| [oss-stable/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server.bun.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.91%** | 317.04 kB | 326.28 kB | +1.62% | 72.87 kB | 74.05 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/umd/react-dom-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.91%** | 335.76 kB | 345.54 kB | +1.63% | 74.50 kB | 75.72 kB\n| [oss-stable/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/umd/react-dom-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.91%** | 335.78 kB | 345.57 kB | +1.63% | 74.52 kB | 75.74 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.bun.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server.bun.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.90%** | 318.33 kB | 327.57 kB | +1.61% | 73.23 kB | 74.41 kB\n| [oss-experimental/react-dom/umd/react-dom-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/umd/react-dom-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.90%** | 337.16 kB | 346.94 kB | +1.63% | 74.87 kB | 76.09 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.90%** | 56.31 kB | 57.95 kB | +3.29% | 17.87 kB | 18.46 kB\n| [oss-stable/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.90%** | 56.34 kB | 57.97 kB | +3.29% | 17.89 kB | 18.48 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.90%** | 321.43 kB | 330.74 kB | +1.58% | 73.68 kB | 74.84 kB\n| [oss-stable/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.90%** | 321.45 kB | 330.76 kB | +1.58% | 73.70 kB | 74.86 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.88%** | 322.75 kB | 332.06 kB | +1.59% | 74.05 kB | 75.22 kB\n| [oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.88%** | 56.73 kB | 58.36 kB | +3.24% | 18.03 kB | 18.62 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-static.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.39%** | 320.83 kB | 328.50 kB | +1.48% | 73.92 kB | 75.01 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-static.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.38%** | 322.71 kB | 330.38 kB | +1.48% | 74.14 kB | 75.24 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.31%** | 319.69 kB | 327.06 kB | +1.46% | 73.26 kB | 74.33 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.31%** | 319.72 kB | 327.09 kB | +1.46% | 73.28 kB | 74.35 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.30%** | 321.01 kB | 328.38 kB | +1.46% | 73.64 kB | 74.71 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.29%** | 321.40 kB | 328.77 kB | +1.45% | 73.73 kB | 74.80 kB\n| [oss-stable/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.29%** | 321.43 kB | 328.80 kB | +1.45% | 73.75 kB | 74.82 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-server-legacy.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.28%** | 322.72 kB | 330.09 kB | +1.45% | 74.11 kB | 75.18 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.27%** | 335.23 kB | 342.84 kB | +1.44% | 74.05 kB | 75.11 kB\n| [oss-stable/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.27%** | 335.25 kB | 342.86 kB | +1.44% | 74.07 kB | 75.13 kB\n| [oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/umd/react-dom-server-legacy.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+2.26%** | 336.63 kB | 344.24 kB | +1.43% | 74.42 kB | 75.48 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-static.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.40%** | 52.24 kB | 52.97 kB | +2.63% | 16.65 kB | 17.09 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-server.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-server.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.30%** | 3.24 kB | 3.28 kB | +0.74% | 1.21 kB | 1.22 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-server.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-server.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.30%** | 3.24 kB | 3.28 kB | +0.74% | 1.21 kB | 1.22 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-server.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-server.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.30%** | 3.24 kB | 3.28 kB | +0.74% | 1.21 kB | 1.22 kB\n| [oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-dom/cjs/react-dom-static.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.26%** | 56.73 kB | 57.44 kB | +2.66% | 18.02 kB | 18.50 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.18%** | 84.50 kB | 85.50 kB | +1.00% | 21.14 kB | 21.35 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.18%** | 84.50 kB | 85.50 kB | +1.00% | 21.14 kB | 21.35 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.18%** | 84.56 kB | 85.55 kB | +0.99% | 21.16 kB | 21.37 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.16%** | 85.75 kB | 86.75 kB | +0.98% | 21.21 kB | 21.42 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.16%** | 85.75 kB | 86.75 kB | +0.98% | 21.21 kB | 21.42 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.16%** | 85.81 kB | 86.80 kB | +0.96% | 21.23 kB | 21.43 kB\n| [oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.15%** | 88.71 kB | 89.72 kB | +0.96% | 21.39 kB | 21.60 kB\n| [oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.15%** | 88.71 kB | 89.72 kB | +0.96% | 21.39 kB | 21.60 kB\n| [oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+1.15%** | 88.77 kB | 89.79 kB | +0.94% | 21.41 kB | 21.61 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-server.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-server.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+0.87%** | 6.53 kB | 6.58 kB | +0.28% | 1.80 kB | 1.81 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-server.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-server.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+0.87%** | 6.53 kB | 6.58 kB | +0.28% | 1.80 kB | 1.81 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-server.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-server.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+0.87%** | 6.53 kB | 6.58 kB | +0.28% | 1.80 kB | 1.81 kB\n| [oss-stable-semver/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-server/cjs/react-server.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+0.69%** | 24.27 kB | 24.43 kB | +0.70% | 8.30 kB | 8.36 kB\n| [oss-stable/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-server/cjs/react-server.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+0.69%** | 24.27 kB | 24.43 kB | +0.70% | 8.30 kB | 8.36 kB\n| [oss-experimental/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-server/cjs/react-server.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+0.69%** | 24.51 kB | 24.68 kB | +0.67% | 8.39 kB | 8.44 kB\n| [oss-stable-semver/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-server/cjs/react-server.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+0.32%** | 145.62 kB | 146.08 kB | +0.21% | 36.24 kB | 36.31 kB\n| [oss-stable/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-server/cjs/react-server.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+0.32%** | 145.62 kB | 146.08 kB | +0.21% | 36.24 kB | 36.31 kB\n| [oss-experimental/react-server/cjs/react-server.development.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-server/cjs/react-server.development.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **+0.32%** | 146.24 kB | 146.70 kB | +0.24% | 36.42 kB | 36.51 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 23.26 kB | 22.49 kB | +1.17% | 8.19 kB | 8.28 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 23.22 kB | 22.45 kB | +1.19% | 8.17 kB | 8.27 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 23.22 kB | 22.45 kB | +1.19% | 8.17 kB | 8.27 kB\n| [oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 23.07 kB | 22.30 kB | +1.26% | 8.20 kB | 8.31 kB\n| [oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 23.03 kB | 22.26 kB | +1.27% | 8.19 kB | 8.29 kB\n| [oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 23.03 kB | 22.26 kB | +1.27% | 8.19 kB | 8.29 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 22.89 kB | 22.12 kB | +1.26% | 8.11 kB | 8.21 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 22.84 kB | 22.07 kB | +1.29% | 8.09 kB | 8.19 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/6fa5d40910c0c4eca30dd66d4294208f8eb5350c/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=b14d7fa4b88dad5f0017d084e462952c700aa2ad) | **=** | 22.84 kB | 22.07 kB | +1.29% | 8.09 kB | 8.19 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 6fa5d40910c0c4eca30dd66d4294208f8eb5350c\n</p>\n","updated_at":"2022-12-16T21:45:11Z","created_at":"2022-11-23T17:44:14Z","creator_user_login":"sizebot"}
{"number":25703,"comment_id":"1335509512","body":"Is this going to enable the ability to stream a React application that is responsible for rendering `<html>` and friends? eg.\r\n\r\n```js\r\nfunction App() {\r\n  return (\r\n    <Suspense>\r\n      <html>\r\n        <head></head>\r\n        <body></body>\r\n      </html>\r\n    </Suspense>\r\n  )\r\n}\r\n```","updated_at":"2022-12-02T16:35:18Z","created_at":"2022-12-02T16:33:30Z","creator_user_login":"tannerlinsley"}
{"number":25703,"comment_id":"1343038228","body":"@tannerlinsley I believe it's the other way around — this adds support for *not* rendering the entire document with React. ","updated_at":"2022-12-08T17:12:48Z","created_at":"2022-12-08T17:12:48Z","creator_user_login":"gaearon"}
{"number":25703,"comment_id":"1343353521","body":"That's right. Right now `renderToReadableStream` really only makes sense if you render from `<html>` or maybe from `<body>`.\r\n\r\nThe point of this new API is to stream into some DOM element that was sent via other means like a static html file. If you send the HTML first and then send the stream response this api will relocate the streamed in content into a dom node that has the ID you pass in.","updated_at":"2022-12-08T21:07:21Z","created_at":"2022-12-08T21:07:21Z","creator_user_login":"gnoff"}
{"number":25703,"comment_id":"1373194136","body":"@sebmarkbage worked out the issues with external fizz runtime. this PR is ready for review now","updated_at":"2023-01-06T06:23:34Z","created_at":"2023-01-06T06:23:34Z","creator_user_login":"gnoff"}
{"number":25703,"comment_id":"1385789909","body":"> Did you consider using writeCompletedRoot for this instead and maybe pass the boundary ID to it. That way you can create a special instruction that applies just to the root and only if a specific boundary ID is used?\r\n\r\nYeah, it's a little tricky. The bootstrap goes first when we are completing the root boundary with styles because we need to ensure the scripts are present before the instruction tries to relocate them. IF we did it after then it's possible we'd miss some bootstrap chunks. But in cases where you aren't using a root boundary or when the root boundary does not depend on styles and can do the swap synchronously we write the bootstrap after the instruction and don't put it in a temporary template.\r\n\r\nI could fork the entire `writeCompletedBoundaryInstruction` and have a `writeCompletedRootBoundary` instead though. I'll explore that","updated_at":"2023-01-17T17:39:54Z","created_at":"2023-01-17T17:39:41Z","creator_user_login":"gnoff"}
{"number":25703,"comment_id":"1386183745","body":">The goal is for the code that does the resolving of options into these to get inline in the code, which then have downstream effects like how the options undefined checks work, but because of how we set these up to today it doesn't happen.\r\n>\r\n>We could instead potentially split this out into separate createResponseState for different variants.\r\n\r\nIf I understand you correctly we want the `createResposneState` function to be inlined entirely? What do you mean about how options undefined checks changing based on whether it is inlined or not. Do you mean it would DCE those checks because we statically call the options with undefined?\r\n\r\nAs for getting it to inline, I tried making a separate `createResponseState` for `renderIntoContainer` so that it was only invoked from 1 place. that didn't cause any inlining. Then I tried moving the code that fills the bootstrapChunks into a separate function in case that couldn't be inlined but everything else could but that didn't lead to any inlining.\r\n\r\nWhen I look at closure documentation it seems to suggest that inlining is used during advanced compilation, but I know that isn't true entirely b/c we have inlining in many places today and we're on simple optimizations\r\n","updated_at":"2023-01-17T22:43:42Z","created_at":"2023-01-17T22:43:42Z","creator_user_login":"gnoff"}
{"number":25703,"comment_id":"1428930595","body":"Another question (not entirely related to `renderIntoContainer` API). \r\n\r\nWe current use JSON script tags to describe client-side callbacks / events. These are read by a MutationObserver on the client, which resolves + invokes the actual callback. This allows us to fulfill Binary Transparency requirements (i.e. no inline scripts execution).\r\ne.g.\r\n```\r\n<script type=\"application/json\" data-special-tag=\"\">{\"key\": \"value}</script>\r\n```\r\n\r\nTo use `renderIntoContainer` with our existing infra, we would want to specify `type` (i.e. some non executable MIME type) and `dataset` for bootstrap content and bootstrap fallback content. From my understanding, this would not conflict with React SSR's model -- users should be able to configure bootstrap contents as needed for non-React / above-React parts of their stream / runtime. The changes are also small (adding new types to `BootstrapScriptDescriptor`)\r\n\r\nI'm still new to this codebase though, so I can definitely be missing something. @gnoff @sebmarkbage \r\n do you think this is a valid use case to support?","updated_at":"2023-02-14T00:50:34Z","created_at":"2023-02-14T00:50:34Z","creator_user_login":"mofeiZ"}
{"number":25703,"comment_id":"1432260555","body":">We current use JSON script tags to describe client-side callbacks / events. These are read by a MutationObserver on the client, which resolves + invokes the actual callback.\r\n\r\nI'm hesitant to expand the bootstrap scripts description to allow for arbitrary inline scripts, also at the moment we only allow 1 inline script so it would be either executable or not based on the type but you couldn't have both. I get that this isn't really a problem for Meta given the BT constraints but it doesn't feel like the actual best API, just one that happens to be good enough for the use case for today\r\n\r\nCan you share more about the timing of these scripts.\r\n\r\nIs it important that their insertion happen in conjunction with the bootstrap phase? If they could go early and then be triggered by the bootstrap then you could just render them as part of the (implied) Root Boundary. They would be in the DOM before the bootstrap and then the bootstrap would kick off the whatever instruction processor needs to run. What sort of timing constraints exist?","updated_at":"2023-02-16T00:09:23Z","created_at":"2023-02-16T00:09:23Z","creator_user_login":"gnoff"}
{"number":15019,"comment_id":"469747851","body":"If the browser itself crashes then it's a browser bug. We can't fix it.","updated_at":"2019-03-05T16:28:04Z","created_at":"2019-03-05T16:28:04Z","creator_user_login":"gaearon"}
{"number":15019,"comment_id":"469970401","body":"emm..., I mean the browser isn't responding, memory is up, and it feels like the program might be in an infinite loop","updated_at":"2019-03-06T05:07:53Z","created_at":"2019-03-06T05:07:53Z","creator_user_login":"angular-moon"}
{"number":15019,"comment_id":"470110915","body":"Ok I see what you mean now. You’re saying React enters an infinite loop it lazy import resolves to undefined. That sounds like something we’d want to fix (even though it’s a bug in the application code). ","updated_at":"2019-03-06T13:41:21Z","created_at":"2019-03-06T13:41:21Z","creator_user_login":"gaearon"}
{"number":15019,"comment_id":"540929001","body":"I have the same problem after using React.lazy for code splitting,  sometimes there is memory soaring, the page is unresponsive, and the console is madly reporting an error.  Has this problem been solved in the current release? @gaearon @raunofreiberg   (⊙ˍ⊙)","updated_at":"2019-10-11T06:26:08Z","created_at":"2019-10-11T06:26:08Z","creator_user_login":"daychongyang"}
{"number":15019,"comment_id":"572748169","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-09T20:48:04Z","created_at":"2020-01-09T20:48:04Z","creator_user_login":"stale[bot]"}
{"number":14213,"comment_id":"438799615","body":"I think it's an issue with `Webkit/Safari` on iOS rather than React. I've tested it and from what I can see plain html input behaves the same as above. \r\n\r\nIn native apps on iOS after selecting Chinese quotes the cursor goes between those chars automatically so I'd recommend to address this issue [here](https://bugreport.apple.com/web/)\r\n","updated_at":"2018-11-14T20:04:42Z","created_at":"2018-11-14T20:04:42Z","creator_user_login":"kulek1"}
{"number":14213,"comment_id":"438900725","body":"> I think it's an issue with `Webkit/Safari` on iOS rather than React. I've tested it and from what I can see plain html input behaves the same as above.\r\n> \r\n> In native apps on iOS after selecting Chinese quotes the cursor goes between those chars automatically so I'd recommend to address this issue [here](https://bugreport.apple.com/web/)\r\n\r\nThanks for test, I've added a plain html element to the demo above.  You're right, it must be an issue with Webkit/Safari on iOS.","updated_at":"2018-11-15T03:06:55Z","created_at":"2018-11-15T03:06:55Z","creator_user_login":"ghost"}
{"number":25524,"comment_id":"1291178075","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: aa9988e5e669122ed0d76c72f2dea159eef872b4...a9537b1249b9656b623a5d5952b2a9d4b38c2eab\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.30%** | 135.47 kB | 135.87 kB | +0.33% | 43.44 kB | 43.58 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.75%** | 148.01 kB | 149.12 kB | +0.67% | 47.33 kB | 47.65 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOM-prod.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.90%** | 492.51 kB | 496.97 kB | +0.99% | 87.52 kB | 88.39 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOM-prod.modern.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.94%** | 477.80 kB | 482.27 kB | +1.07% | 85.29 kB | 86.20 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOMForked-prod.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.90%** | 492.51 kB | 496.97 kB | +0.99% | 87.52 kB | 88.39 kB\n| [oss-experimental/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/jest-react/cjs/jest-react.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+3.43%** | 2.42 kB | 2.50 kB | +2.82% | 1.17 kB | 1.20 kB\n| [oss-stable-semver/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/jest-react/cjs/jest-react.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+3.43%** | 2.42 kB | 2.50 kB | +2.82% | 1.17 kB | 1.20 kB\n| [oss-stable/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/jest-react/cjs/jest-react.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+3.43%** | 2.42 kB | 2.50 kB | +2.82% | 1.17 kB | 1.20 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler-constants.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-reconciler/cjs/react-reconciler-constants.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **=** | 1.05 kB | 0.96 kB | = | 0.44 kB | 0.43 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler-constants.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-reconciler/cjs/react-reconciler-constants.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **=** | 1.05 kB | 0.96 kB | = | 0.44 kB | 0.43 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler-constants.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-reconciler/cjs/react-reconciler-constants.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **=** | 1.05 kB | 0.96 kB | = | 0.44 kB | 0.43 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/jest-react/cjs/jest-react.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+3.43%** | 2.42 kB | 2.50 kB | +2.82% | 1.17 kB | 1.20 kB\n| [oss-stable-semver/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/jest-react/cjs/jest-react.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+3.43%** | 2.42 kB | 2.50 kB | +2.82% | 1.17 kB | 1.20 kB\n| [oss-stable/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/jest-react/cjs/jest-react.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+3.43%** | 2.42 kB | 2.50 kB | +2.82% | 1.17 kB | 1.20 kB\n| [facebook-www/ReactIs-dev.modern.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactIs-dev.modern.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+1.50%** | 9.62 kB | 9.77 kB | +1.10% | 2.54 kB | 2.57 kB\n| [facebook-www/ReactIs-dev.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactIs-dev.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+1.50%** | 9.62 kB | 9.77 kB | +1.10% | 2.54 kB | 2.57 kB\n| [oss-experimental/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/jest-react/cjs/jest-react.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+1.22%** | 10.65 kB | 10.78 kB | +1.09% | 3.76 kB | 3.80 kB\n| [oss-stable-semver/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/jest-react/cjs/jest-react.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+1.22%** | 10.65 kB | 10.78 kB | +1.09% | 3.76 kB | 3.80 kB\n| [oss-stable/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/jest-react/cjs/jest-react.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+1.22%** | 10.65 kB | 10.78 kB | +1.09% | 3.76 kB | 3.80 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOM-prod.modern.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.94%** | 477.80 kB | 482.27 kB | +1.07% | 85.29 kB | 86.20 kB\n| [facebook-www/ReactDOMForked-prod.modern.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOMForked-prod.modern.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.94%** | 477.80 kB | 482.27 kB | +1.07% | 85.29 kB | 86.21 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOM-prod.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.90%** | 492.51 kB | 496.97 kB | +0.99% | 87.52 kB | 88.39 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOMForked-prod.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.90%** | 492.51 kB | 496.97 kB | +0.99% | 87.52 kB | 88.39 kB\n| [facebook-www/ReactDOM-profiling.modern.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOM-profiling.modern.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.89%** | 507.61 kB | 512.12 kB | +1.02% | 89.80 kB | 90.71 kB\n| [facebook-www/ReactDOMForked-profiling.modern.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOMForked-profiling.modern.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.89%** | 507.61 kB | 512.12 kB | +1.02% | 89.80 kB | 90.71 kB\n| [facebook-www/ReactDOM-profiling.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOM-profiling.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.86%** | 522.39 kB | 526.89 kB | +0.90% | 92.13 kB | 92.96 kB\n| [facebook-www/ReactDOMForked-profiling.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOMForked-profiling.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.86%** | 522.39 kB | 526.89 kB | +0.90% | 92.13 kB | 92.96 kB\n| [oss-experimental/react-dom/cjs/react-dom-unstable_testing.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-dom/cjs/react-dom-unstable_testing.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.76%** | 146.57 kB | 147.68 kB | +0.70% | 47.13 kB | 47.46 kB\n| [facebook-www/ReactART-prod.modern.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactART-prod.modern.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.76%** | 319.00 kB | 321.42 kB | +0.99% | 54.46 kB | 55.00 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.75%** | 148.01 kB | 149.12 kB | +0.67% | 47.33 kB | 47.65 kB\n| [facebook-www/ReactART-dev.modern.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactART-dev.modern.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.74%** | 853.86 kB | 860.20 kB | +0.68% | 179.85 kB | 181.07 kB\n| [facebook-www/ReactART-dev.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactART-dev.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.73%** | 864.18 kB | 870.52 kB | +0.65% | 181.93 kB | 183.11 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.73%** | 12.51 kB | 12.60 kB | +0.83% | 3.73 kB | 3.76 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.73%** | 12.51 kB | 12.60 kB | +0.83% | 3.73 kB | 3.76 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.73%** | 12.51 kB | 12.60 kB | +0.83% | 3.73 kB | 3.76 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.72%** | 12.58 kB | 12.67 kB | +0.85% | 3.75 kB | 3.78 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.72%** | 12.58 kB | 12.67 kB | +0.85% | 3.75 kB | 3.78 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.72%** | 12.58 kB | 12.67 kB | +0.85% | 3.75 kB | 3.78 kB\n| [facebook-www/ReactART-prod.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactART-prod.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.72%** | 329.79 kB | 332.17 kB | +0.92% | 56.26 kB | 56.78 kB\n| [oss-experimental/react-dom/cjs/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-dom/cjs/react-dom.profiling.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.69%** | 157.49 kB | 158.58 kB | +0.65% | 49.80 kB | 50.13 kB\n| [oss-experimental/react-dom/umd/react-dom.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-dom/umd/react-dom.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.65%** | 148.00 kB | 148.97 kB | +0.69% | 48.03 kB | 48.36 kB\n| [facebook-www/ReactDOMForked-dev.modern.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOMForked-dev.modern.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.65%** | 1,229.06 kB | 1,237.01 kB | +0.58% | 268.34 kB | 269.90 kB\n| [facebook-www/ReactDOM-dev.modern.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOM-dev.modern.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.65%** | 1,229.06 kB | 1,237.01 kB | +0.58% | 268.34 kB | 269.90 kB\n| [facebook-www/ReactDOMForked-dev.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOMForked-dev.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.63%** | 1,252.91 kB | 1,260.86 kB | +0.58% | 272.86 kB | 274.43 kB\n| [facebook-www/ReactDOM-dev.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOM-dev.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.63%** | 1,252.91 kB | 1,260.86 kB | +0.58% | 272.86 kB | 274.43 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.63%** | 104.29 kB | 104.94 kB | +0.73% | 31.83 kB | 32.06 kB\n| [oss-experimental/react-dom/umd/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-dom/umd/react-dom.profiling.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.60%** | 156.81 kB | 157.75 kB | +0.71% | 50.31 kB | 50.66 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.56%** | 113.14 kB | 113.77 kB | +0.71% | 33.98 kB | 34.22 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-reconciler/cjs/react-reconciler.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.54%** | 830.70 kB | 835.22 kB | +0.53% | 175.89 kB | 176.82 kB\n| [oss-experimental/react-dom/cjs/react-dom-unstable_testing.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-dom/cjs/react-dom-unstable_testing.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.51%** | 1,094.06 kB | 1,099.59 kB | +0.48% | 244.39 kB | 245.56 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-prod.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-prod.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.49%** | 280.80 kB | 282.16 kB | +0.45% | 49.73 kB | 49.95 kB\n| [oss-experimental/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-dom/cjs/react-dom.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.49%** | 1,153.60 kB | 1,159.21 kB | +0.46% | 256.61 kB | 257.79 kB\n| [oss-experimental/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-dom/umd/react-dom.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.48%** | 1,209.89 kB | 1,215.67 kB | +0.45% | 259.35 kB | 260.53 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-reconciler/cjs/react-reconciler.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.47%** | 786.27 kB | 789.96 kB | +0.46% | 167.26 kB | 168.03 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-reconciler/cjs/react-reconciler.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.47%** | 786.30 kB | 789.98 kB | +0.46% | 167.28 kB | 168.06 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-profiling.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-profiling.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.46%** | 296.38 kB | 297.74 kB | +0.42% | 52.09 kB | 52.31 kB\n| [react-native/implementations/ReactFabric-dev.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/react-native/implementations/ReactFabric-dev.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.44%** | 812.53 kB | 816.13 kB | +0.41% | 176.20 kB | 176.93 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-dev.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-dev.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.44%** | 734.35 kB | 737.59 kB | +0.39% | 157.42 kB | 158.03 kB\n| [facebook-www/ReactTestRenderer-dev.modern.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactTestRenderer-dev.modern.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.44%** | 756.39 kB | 759.71 kB | +0.40% | 161.51 kB | 162.16 kB\n| [facebook-www/ReactTestRenderer-dev.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactTestRenderer-dev.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.44%** | 756.39 kB | 759.71 kB | +0.40% | 161.51 kB | 162.16 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-reconciler/cjs/react-reconciler.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.43%** | 96.80 kB | 97.22 kB | +0.52% | 29.74 kB | 29.90 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-reconciler/cjs/react-reconciler.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.43%** | 96.83 kB | 97.24 kB | +0.52% | 29.76 kB | 29.92 kB\n| [react-native/implementations/ReactNativeRenderer-dev.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/react-native/implementations/ReactNativeRenderer-dev.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.42%** | 822.05 kB | 825.50 kB | +0.40% | 178.76 kB | 179.48 kB\n| [oss-stable-semver/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-test-renderer/cjs/react-test-renderer.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.42%** | 691.48 kB | 694.36 kB | +0.40% | 150.21 kB | 150.80 kB\n| [oss-stable/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-test-renderer/cjs/react-test-renderer.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.42%** | 691.51 kB | 694.38 kB | +0.40% | 150.23 kB | 150.83 kB\n| [oss-stable-semver/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-test-renderer/umd/react-test-renderer.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.41%** | 724.25 kB | 727.25 kB | +0.40% | 151.76 kB | 152.37 kB\n| [oss-stable/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-test-renderer/umd/react-test-renderer.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.41%** | 724.28 kB | 727.27 kB | +0.40% | 151.78 kB | 152.39 kB\n| [react-native/implementations/ReactFabric-prod.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/react-native/implementations/ReactFabric-prod.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.41%** | 308.86 kB | 310.13 kB | +0.36% | 54.70 kB | 54.89 kB\n| [react-native/implementations/ReactFabric-dev.fb.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/react-native/implementations/ReactFabric-dev.fb.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.41%** | 850.74 kB | 854.22 kB | +0.40% | 182.94 kB | 183.67 kB\n| [oss-experimental/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-test-renderer/cjs/react-test-renderer.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.41%** | 720.36 kB | 723.30 kB | +0.40% | 155.93 kB | 156.55 kB\n| [oss-experimental/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-test-renderer/umd/react-test-renderer.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.41%** | 754.58 kB | 757.64 kB | +0.39% | 157.54 kB | 158.16 kB\n| [oss-stable-semver/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-art/cjs/react-art.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.40%** | 718.67 kB | 721.56 kB | +0.40% | 155.03 kB | 155.64 kB\n| [oss-stable/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-art/cjs/react-art.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.40%** | 718.69 kB | 721.59 kB | +0.40% | 155.05 kB | 155.67 kB\n| [react-native/implementations/ReactFabric-prod.fb.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/react-native/implementations/ReactFabric-prod.fb.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.40%** | 317.64 kB | 318.91 kB | +0.36% | 56.37 kB | 56.57 kB\n| [react-native/implementations/ReactNativeRenderer-prod.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/react-native/implementations/ReactNativeRenderer-prod.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.40%** | 315.64 kB | 316.90 kB | +0.38% | 55.77 kB | 55.98 kB\n| [oss-experimental/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-art/cjs/react-art.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.39%** | 760.04 kB | 762.99 kB | +0.39% | 163.36 kB | 164.00 kB\n| [react-native/implementations/ReactFabric-profiling.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/react-native/implementations/ReactFabric-profiling.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.39%** | 327.95 kB | 329.22 kB | +0.32% | 57.84 kB | 58.03 kB\n| [react-native/implementations/ReactNativeRenderer-dev.fb.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/react-native/implementations/ReactNativeRenderer-dev.fb.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.39%** | 860.24 kB | 863.56 kB | +0.38% | 185.56 kB | 186.26 kB\n| [react-native/implementations/ReactNativeRenderer-prod.fb.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/react-native/implementations/ReactNativeRenderer-prod.fb.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.39%** | 324.42 kB | 325.67 kB | +0.35% | 57.42 kB | 57.62 kB\n| [facebook-www/ReactDOMTesting-prod.modern.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOMTesting-prod.modern.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.38%** | 438.13 kB | 439.80 kB | +0.34% | 80.80 kB | 81.07 kB\n| [oss-experimental/react-art/cjs/react-art.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-art/cjs/react-art.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.38%** | 91.96 kB | 92.31 kB | +0.40% | 28.30 kB | 28.41 kB\n| [react-native/implementations/ReactNativeRenderer-profiling.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/react-native/implementations/ReactNativeRenderer-profiling.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.37%** | 334.82 kB | 336.07 kB | +0.35% | 58.89 kB | 59.10 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.37%** | 105.63 kB | 106.02 kB | +0.44% | 31.95 kB | 32.09 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.37%** | 105.65 kB | 106.04 kB | +0.44% | 31.97 kB | 32.11 kB\n| [oss-stable-semver/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-art/umd/react-art.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.37%** | 823.64 kB | 826.65 kB | +0.34% | 173.17 kB | 173.76 kB\n| [oss-stable/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-art/umd/react-art.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.37%** | 823.66 kB | 826.68 kB | +0.34% | 173.18 kB | 173.78 kB\n| [facebook-www/ReactDOMTesting-prod.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOMTesting-prod.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.36%** | 453.96 kB | 455.61 kB | +0.32% | 83.39 kB | 83.65 kB\n| [react-native/implementations/ReactFabric-profiling.fb.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/react-native/implementations/ReactFabric-profiling.fb.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.36%** | 344.30 kB | 345.53 kB | +0.35% | 60.49 kB | 60.71 kB\n| [oss-experimental/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.36%** | 97.34 kB | 97.69 kB | +0.33% | 29.88 kB | 29.98 kB\n| [facebook-www/ReactDOMTesting-dev.modern.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOMTesting-dev.modern.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.36%** | 1,090.52 kB | 1,094.39 kB | +0.30% | 243.34 kB | 244.06 kB\n| [oss-experimental/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-art/umd/react-art.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.35%** | 867.13 kB | 870.21 kB | +0.34% | 181.55 kB | 182.16 kB\n| [oss-experimental/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-test-renderer/umd/react-test-renderer.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.35%** | 97.58 kB | 97.92 kB | +0.41% | 30.28 kB | 30.41 kB\n| [oss-stable-semver/react-art/cjs/react-art.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-art/cjs/react-art.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.35%** | 85.29 kB | 85.58 kB | +0.46% | 26.47 kB | 26.59 kB\n| [oss-stable/react-art/cjs/react-art.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-art/cjs/react-art.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.35%** | 85.31 kB | 85.61 kB | +0.45% | 26.47 kB | 26.59 kB\n| [react-native/implementations/ReactNativeRenderer-profiling.fb.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/react-native/implementations/ReactNativeRenderer-profiling.fb.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.35%** | 351.15 kB | 352.37 kB | +0.36% | 61.52 kB | 61.74 kB\n| [facebook-www/ReactDOMTesting-dev.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactDOMTesting-dev.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.35%** | 1,119.38 kB | 1,123.26 kB | +0.30% | 249.06 kB | 249.80 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.34%** | 34.69 kB | 34.80 kB | +0.35% | 7.82 kB | 7.84 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.34%** | 34.69 kB | 34.80 kB | +0.35% | 7.82 kB | 7.84 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.34%** | 34.69 kB | 34.80 kB | +0.35% | 7.82 kB | 7.84 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.34%** | 34.82 kB | 34.94 kB | +0.33% | 7.84 kB | 7.86 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.34%** | 34.82 kB | 34.94 kB | +0.33% | 7.84 kB | 7.86 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.34%** | 34.82 kB | 34.94 kB | +0.33% | 7.84 kB | 7.86 kB\n| [oss-stable-semver/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.32%** | 92.60 kB | 92.90 kB | +0.40% | 28.54 kB | 28.66 kB\n| [oss-stable/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.32%** | 92.63 kB | 92.92 kB | +0.41% | 28.54 kB | 28.66 kB\n| [oss-stable-semver/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-test-renderer/umd/react-test-renderer.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.32%** | 92.85 kB | 93.14 kB | +0.45% | 29.01 kB | 29.14 kB\n| [oss-stable/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-test-renderer/umd/react-test-renderer.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.32%** | 92.87 kB | 93.17 kB | +0.45% | 29.01 kB | 29.14 kB\n| [oss-stable-semver/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-dom/cjs/react-dom.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.32%** | 1,067.74 kB | 1,071.11 kB | +0.29% | 238.55 kB | 239.23 kB\n| [oss-stable/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-dom/cjs/react-dom.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.32%** | 1,067.77 kB | 1,071.13 kB | +0.29% | 238.57 kB | 239.26 kB\n| [facebook-www/JSXDEVRuntime-dev.modern.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/JSXDEVRuntime-dev.modern.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.31%** | 45.80 kB | 45.94 kB | +0.23% | 12.99 kB | 13.02 kB\n| [facebook-www/JSXDEVRuntime-dev.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/JSXDEVRuntime-dev.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.31%** | 45.80 kB | 45.94 kB | +0.23% | 12.99 kB | 13.02 kB\n| [oss-stable-semver/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-dom/umd/react-dom.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.31%** | 1,119.86 kB | 1,123.35 kB | +0.29% | 241.33 kB | 242.03 kB\n| [oss-stable/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-dom/umd/react-dom.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.31%** | 1,119.88 kB | 1,123.38 kB | +0.29% | 241.35 kB | 242.05 kB\n| [oss-stable-semver/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-dom/cjs/react-dom.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.30%** | 135.45 kB | 135.85 kB | +0.33% | 43.44 kB | 43.58 kB\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.30%** | 135.47 kB | 135.87 kB | +0.33% | 43.44 kB | 43.58 kB\n| [oss-stable-semver/react-dom/umd/react-dom.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-dom/umd/react-dom.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.30%** | 135.56 kB | 135.96 kB | +0.38% | 44.08 kB | 44.25 kB\n| [oss-stable/react-dom/umd/react-dom.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-dom/umd/react-dom.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.30%** | 135.59 kB | 135.99 kB | +0.38% | 44.08 kB | 44.25 kB\n| [facebook-www/ReactTestUtils-dev.modern.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactTestUtils-dev.modern.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.29%** | 50.19 kB | 50.34 kB | +0.21% | 13.99 kB | 14.02 kB\n| [facebook-www/ReactTestUtils-dev.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactTestUtils-dev.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.29%** | 50.19 kB | 50.34 kB | +0.21% | 13.99 kB | 14.01 kB\n| [oss-experimental/react-art/umd/react-art.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-art/umd/react-art.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.27%** | 127.80 kB | 128.15 kB | +0.35% | 39.60 kB | 39.74 kB\n| [oss-stable-semver/react-dom/umd/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-dom/umd/react-dom.profiling.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.26%** | 144.37 kB | 144.74 kB | +0.30% | 46.35 kB | 46.49 kB\n| [oss-stable/react-dom/umd/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-dom/umd/react-dom.profiling.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.26%** | 144.39 kB | 144.77 kB | +0.30% | 46.35 kB | 46.49 kB\n| [oss-stable-semver/react-dom/cjs/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-dom/cjs/react-dom.profiling.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.26%** | 144.92 kB | 145.30 kB | +0.33% | 45.84 kB | 45.99 kB\n| [oss-stable/react-dom/cjs/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-dom/cjs/react-dom.profiling.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.26%** | 144.95 kB | 145.32 kB | +0.33% | 45.84 kB | 45.99 kB\n| [oss-stable-semver/react-art/umd/react-art.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-art/umd/react-art.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.24%** | 121.17 kB | 121.46 kB | +0.32% | 37.69 kB | 37.81 kB\n| [oss-stable/react-art/umd/react-art.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-art/umd/react-art.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.24%** | 121.19 kB | 121.49 kB | +0.32% | 37.69 kB | 37.81 kB\n| [facebook-www/ReactFlightDOMRelayServer-dev.classic.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactFlightDOMRelayServer-dev.classic.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.22%** | 65.98 kB | 66.12 kB | +0.18% | 16.65 kB | 16.68 kB\n| [facebook-www/ReactFlightDOMRelayServer-dev.modern.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/facebook-www/ReactFlightDOMRelayServer-dev.modern.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **+0.22%** | 66.03 kB | 66.18 kB | +0.18% | 16.67 kB | 16.70 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler-constants.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-reconciler/cjs/react-reconciler-constants.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **=** | 0.45 kB | 0.45 kB | = | 0.29 kB | 0.29 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler-constants.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-reconciler/cjs/react-reconciler-constants.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **=** | 0.45 kB | 0.45 kB | = | 0.29 kB | 0.29 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler-constants.production.min.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-reconciler/cjs/react-reconciler-constants.production.min.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **=** | 0.45 kB | 0.45 kB | = | 0.29 kB | 0.29 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler-constants.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-experimental/react-reconciler/cjs/react-reconciler-constants.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **=** | 1.05 kB | 0.96 kB | = | 0.44 kB | 0.43 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler-constants.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable-semver/react-reconciler/cjs/react-reconciler-constants.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **=** | 1.05 kB | 0.96 kB | = | 0.44 kB | 0.43 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler-constants.development.js](https://react-builds.vercel.app/commits/a9537b1249b9656b623a5d5952b2a9d4b38c2eab/files/oss-stable/react-reconciler/cjs/react-reconciler-constants.development.js?compare=aa9988e5e669122ed0d76c72f2dea159eef872b4) | **=** | 1.05 kB | 0.96 kB | = | 0.44 kB | 0.43 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against a9537b1249b9656b623a5d5952b2a9d4b38c2eab\n</p>\n","updated_at":"2022-11-05T03:04:58Z","created_at":"2022-10-25T21:46:25Z","creator_user_login":"sizebot"}
{"number":26241,"comment_id":"1444981156","body":"Hi @xiaosen7! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326241). Thanks!","updated_at":"2023-02-25T03:59:20Z","created_at":"2023-02-25T03:59:20Z","creator_user_login":"facebook-github-bot"}
{"number":26241,"comment_id":"1444982895","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 564166099b5f46dd33f3356b01a72c0314103a18...64d1935614a432cda8642eb149768972d990b3be\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/64d1935614a432cda8642eb149768972d990b3be/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 154.48 kB | 154.48 kB | = | 48.77 kB | 48.77 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/64d1935614a432cda8642eb149768972d990b3be/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 156.47 kB | 156.47 kB | = | 49.43 kB | 49.43 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/64d1935614a432cda8642eb149768972d990b3be/files/facebook-www/ReactDOM-prod.classic.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 530.88 kB | 530.88 kB | = | 94.58 kB | 94.58 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/64d1935614a432cda8642eb149768972d990b3be/files/facebook-www/ReactDOM-prod.modern.js?compare=564166099b5f46dd33f3356b01a72c0314103a18) | **=** | 514.80 kB | 514.80 kB | = | 92.13 kB | 92.13 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 64d1935614a432cda8642eb149768972d990b3be\n</p>\n","updated_at":"2023-02-25T04:05:57Z","created_at":"2023-02-25T04:05:57Z","creator_user_login":"react-sizebot"}
{"number":26241,"comment_id":"1445006834","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-25T06:04:48Z","created_at":"2023-02-25T06:04:48Z","creator_user_login":"facebook-github-bot"}
{"number":26241,"comment_id":"1445026321","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-25T08:06:43Z","created_at":"2023-02-25T08:06:43Z","creator_user_login":"facebook-github-bot"}
{"number":26241,"comment_id":"1445046374","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-25T10:06:50Z","created_at":"2023-02-25T10:06:50Z","creator_user_login":"facebook-github-bot"}
{"number":26241,"comment_id":"1445069490","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-25T12:07:22Z","created_at":"2023-02-25T12:07:22Z","creator_user_login":"facebook-github-bot"}
{"number":26241,"comment_id":"1445127590","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-25T14:07:14Z","created_at":"2023-02-25T14:07:14Z","creator_user_login":"facebook-github-bot"}
{"number":26241,"comment_id":"1445149639","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-25T16:07:05Z","created_at":"2023-02-25T16:07:05Z","creator_user_login":"facebook-github-bot"}
{"number":26241,"comment_id":"1445172054","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-25T18:07:28Z","created_at":"2023-02-25T18:07:28Z","creator_user_login":"facebook-github-bot"}
{"number":26241,"comment_id":"1445193796","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-25T20:05:58Z","created_at":"2023-02-25T20:05:58Z","creator_user_login":"facebook-github-bot"}
{"number":26241,"comment_id":"1445215835","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-25T22:06:58Z","created_at":"2023-02-25T22:06:58Z","creator_user_login":"facebook-github-bot"}
{"number":26241,"comment_id":"1445231246","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-26T00:05:48Z","created_at":"2023-02-26T00:05:48Z","creator_user_login":"facebook-github-bot"}
{"number":26241,"comment_id":"1445248696","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-26T02:07:39Z","created_at":"2023-02-26T02:07:39Z","creator_user_login":"facebook-github-bot"}
{"number":26241,"comment_id":"1445263580","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-26T04:06:24Z","created_at":"2023-02-26T04:06:24Z","creator_user_login":"facebook-github-bot"}
{"number":26241,"comment_id":"1445276743","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-26T06:06:30Z","created_at":"2023-02-26T06:06:30Z","creator_user_login":"facebook-github-bot"}
{"number":26241,"comment_id":"1445293697","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-26T08:07:33Z","created_at":"2023-02-26T08:07:33Z","creator_user_login":"facebook-github-bot"}
{"number":26241,"comment_id":"1445344589","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-02-26T12:06:32Z","created_at":"2023-02-26T12:06:32Z","creator_user_login":"facebook-github-bot"}
{"number":14443,"comment_id":"455723111","body":"I think this is a neat idea and would be easy to add. Filing this as a good first issue.","updated_at":"2019-01-18T23:45:49Z","created_at":"2019-01-18T23:45:49Z","creator_user_login":"nhunzaker"}
{"number":14443,"comment_id":"455725095","body":"We were just discussing this in https://github.com/facebook/react/pull/14572","updated_at":"2019-01-18T23:58:05Z","created_at":"2019-01-18T23:58:05Z","creator_user_login":"aweary"}
{"number":14443,"comment_id":"455796387","body":"I'd like to do it!","updated_at":"2019-01-19T16:55:54Z","created_at":"2019-01-19T16:55:54Z","creator_user_login":"jesperhodge"}
{"number":14443,"comment_id":"455881654","body":"As far as I could tell - I have been trying around a bit on a branch on my fork - the simplest way is just to compare the versions in a warning that relies, for example, on the version string passed as attribute of the `React` object in the `React.js` file.\r\n\r\n`ReactDOM` does not have something like that, at least at first glance, so I'd like to add a version attribute there, too.\r\n\r\nAnd right now the React version is imported from a file in the `shared` folder that just has the version hardcoded. In both of these cases, I prefer to read the version from the respective `package.json` before react is built for distribution. I'm just wondering if there is any reason not to do that (since it was not done that way before)? Is there an edge case where the value can end up wrong?\r\n\r\nForgive my very basic questions, I am yet a humble beginner in the react source code.","updated_at":"2019-01-20T16:41:03Z","created_at":"2019-01-20T16:41:03Z","creator_user_login":"jesperhodge"}
{"number":14443,"comment_id":"455938776","body":"Unfortunately didn't see that Aliin works on this issue and took a look too (:\r\n \r\n@Aliin probably in order to make code cleaner, since React version used in different packages.\r\n@aweary in which cases warning should be thrown? Diff even in path, or minor version?\r\n","updated_at":"2019-01-21T03:43:28Z","created_at":"2019-01-21T03:37:34Z","creator_user_login":"teleginzhenya"}
{"number":14443,"comment_id":"456151889","body":"Based on the conversation in https://github.com/facebook/react/pull/14572 it's not clear that this is actually something we want to do. We'll need some input from @gaearon and/or the other core team members.","updated_at":"2019-01-21T17:41:10Z","created_at":"2019-01-21T17:41:10Z","creator_user_login":"aweary"}
{"number":14443,"comment_id":"456190144","body":"Ah, sorry I'm just getting to this. I've re-labelled this and let's keep the conversation going.","updated_at":"2019-01-21T20:24:34Z","created_at":"2019-01-21T20:24:34Z","creator_user_login":"nhunzaker"}
{"number":14443,"comment_id":"456192064","body":"Based on what @gaearon said in that issue\r\n\r\n> We kind of wanted `react-dom` to keep working with `react` of the same major without breaking. I don't think a strict match is necessarily desired unless you're trying to use new features — in which case you should have _at least_ that version of both.\r\n\r\n\r\nThe ideal scenario is that React works fine with react-dom as long as the major version matches.  In that scenario, we wouldn't need warnings when there is a mismatch in the minor/patch numbers.  However, in my original issue, this is unfortunately not the case and there can be silent breaking changes between minor versions.  I don't think it is realistic to have extensive compatibility testing between each combination of versions to ensure these issues don't appear.  To me it is clear that some kind of warning should be presented, at a minimum.","updated_at":"2019-01-21T20:33:42Z","created_at":"2019-01-21T20:33:42Z","creator_user_login":"mjhoffm2"}
{"number":14443,"comment_id":"458735177","body":"I thought about it a bit, a warning would be really nice, but it does not seem like an optimal solution in any way. If there is a minor version mismatch that won't be fixed for some reason and does not cause problems, the warning can be annoying.\r\nSince the warning cannot fix the past version conflicts anyway, for the future this might just be a motivation instead to work even more on stability. It might be wise to test the upcoming release well against the last 2 minor versions of react-dom to prevent problems, either that or just add the warning temporarily for some of the minor releases if there is uncertainty. In the future the stability can be further improved, or another solution for mismatches can be explored. Just my thoughts on the issue.","updated_at":"2019-01-29T22:35:39Z","created_at":"2019-01-29T22:35:39Z","creator_user_login":"jesperhodge"}
{"number":24608,"comment_id":"1136043886","body":"Hi thanks for reporting, but your website link is 404 (private repo?), and your repro description is pretty vague. Any chance you can provide more details?","updated_at":"2022-05-24T15:01:05Z","created_at":"2022-05-24T15:01:05Z","creator_user_login":"mondaychen"}
{"number":24608,"comment_id":"1136075963","body":"> Hi thanks for reporting, but your website link is 404 (private repo?), and your repro description is pretty vague. Any chance you can provide more details?\r\n\r\nThat is because it's a private repo,","updated_at":"2022-05-24T15:28:33Z","created_at":"2022-05-24T15:28:33Z","creator_user_login":"Mancunia"}
{"number":24608,"comment_id":"1136077266","body":"So this happened whiles i was saving and retrieving data to and from a context to a local storage\r\n","updated_at":"2022-05-24T15:29:35Z","created_at":"2022-05-24T15:29:35Z","creator_user_login":"Mancunia"}
{"number":24608,"comment_id":"1136144621","body":"@Mancunia I understand it happens when you perform this action, but it's unlikely that's the direct cause of this issue. I worked on a React app that saves and retrieves data from localStorage and it does not trigger this bug. \r\nCan you please provide a way to reproduce this issue (preferably via something like codesandbox.io)? Thanks ","updated_at":"2022-05-24T16:31:02Z","created_at":"2022-05-24T16:31:02Z","creator_user_login":"mondaychen"}
{"number":24608,"comment_id":"1146068907","body":"<img width=\"1081\" alt=\"스크린샷 2022-06-04 오전 12 17 44\" src=\"https://user-images.githubusercontent.com/16129260/171883227-95a167db-97ca-4bd3-a16e-8e872382403d.png\">\r\nflipper","updated_at":"2022-06-03T15:19:42Z","created_at":"2022-06-03T15:19:08Z","creator_user_login":"2sem"}
{"number":24608,"comment_id":"1146735162","body":"How does DevTools calculate the node count? For example, I can consistently reproduce this issue by toggling my loading state to true and false, but the `Cannot remove node \"<node-count>\"` message is non-deterministic (granted it's* non-deterministic for me due to my little experience using the tool).\r\n\r\nI also am using Local Storage; however, did confirm that wasn't throwing any error(s).\r\n\r\nI'll try here a bit to see what I can do to create a simplified, reproducible version of my application as example.","updated_at":"2022-06-05T03:41:09Z","created_at":"2022-06-05T03:40:46Z","creator_user_login":"Segmentational"}
{"number":24608,"comment_id":"1146736064","body":"I was unable to reproduce easily. I'll check back sometime next week to see if an answer was provided to my first question. \r\n\r\nPush comes to shove, I'll try my best to get an example working next weekend!","updated_at":"2022-06-05T03:51:15Z","created_at":"2022-06-05T03:51:15Z","creator_user_login":"Segmentational"}
{"number":24608,"comment_id":"1169248911","body":"I have the same error from CodeSanbox found a reference in https://github.com/pmndrs/react-three-fiber/discussions/928 but it's not related to react-three-fiber.\r\n\r\nI have a basic reactJS app but with classes (Sorry, I'm refreshing my knowledge on old React).\r\n\r\nhttps://codesandbox.io/s/kind-zeh-wnz86j?file=/src/components/App.tsx\r\n\r\nand I have an error: `Cannot remove node 13 because no matching node was found in the Store.` the preview works fine, but I think that it simply hides the error because it's not dev mode. When I click submit it clears the console like in the editor, but I'm not 100% sure if the error is still there and not visible.\r\n\r\nI also think that it's related to React DevTools because I've disabled those.","updated_at":"2022-06-28T21:15:27Z","created_at":"2022-06-28T21:13:05Z","creator_user_login":"jcubic"}
{"number":24608,"comment_id":"1267482110","body":"https://github.com/facebook/react/issues/23202#issuecomment-1103314940","updated_at":"2022-10-04T19:28:41Z","created_at":"2022-10-04T19:28:41Z","creator_user_login":"yongmin86k"}
{"number":24608,"comment_id":"1293577571","body":"I found a solution for Cannot remove node \"0\"\r\n\r\n\"react-devtools-core\": \"4.24.3\",\r\n\r\n\"resolutions\": {\r\n\"react-devtools-core\": \"4.24.3\"\r\n},\r\n\r\nhttps://github.com/facebook/flipper/issues/3649#issuecomment-1272444843","updated_at":"2022-10-27T14:05:10Z","created_at":"2022-10-27T14:05:10Z","creator_user_login":"2sem"}
{"number":15238,"comment_id":"477952812","body":"This change was intentional I think: https://github.com/facebook/react/issues/11423.\r\n\r\nAs a workaround, maybe this works for you?\r\n\r\n```js\r\n        <noscript\r\n          dangerouslySetInnerHTML={{\r\n            __html: '<a href=\"page\">link</a>'\r\n          }}\r\n        />\r\n```\r\n\r\n?","updated_at":"2019-03-29T10:43:50Z","created_at":"2019-03-29T10:43:50Z","creator_user_login":"gaearon"}
{"number":15238,"comment_id":"478003012","body":"@gaearon thanks for the response!\r\n\r\nUnfortunately in my use case `dangerouslySetInnerHTML` doesn't work (without modifying the code) since it expects a string and not a React component.\r\n\r\nConsider the code:\r\n\r\n```\r\nconst Links = () => (\r\n  <div>\r\n    <a href=\"/cat\">Cat</a>\r\n    <a href=\"/dog\">Dog</a>\r\n  </div>\r\n);\r\n\r\nconst Component = () => (\r\n  <Fragment>\r\n    <FancyToggleOnClick element={Links}>\r\n      Toggle the links\r\n    </FancyToggleOnClick>\r\n\r\n    <noscript>\r\n      <Links />\r\n    </noscript>\r\n  </Fragment>\r\n);\r\n```\r\n\r\nPrior to 16.4.3, this worked fine: the HTML generated by React included the links in the `<noscript>` tag, a snapshot of the page was taken and served as plain HTML which was hydrated client-side, and users with and without JavaScript could use the application.\r\n\r\n---\r\n\r\nI read https://github.com/facebook/react/issues/11423 in more detail and it does seem like a pretty complicated issue. I can see why that solution was preferred. I do have two points to add:\r\n\r\n1. the change may have fixed some issues for people using a Node server, but it simultaneously broke `<noscript>` for anyone using a prerendering tool like [react-snap](https://github.com/stereobooster/react-snap), [Prerender SPA Plugin](https://github.com/chrisvfritz/prerender-spa-plugin), or [any of the alternatives](https://github.com/stereobooster/react-snap/blob/master/doc/alternatives.md).\r\n\r\n2. ~~the change was made in a patch version (`16.4.2` -> `16.4.3`) even though it changed the behavior of `<noscript>` pretty significantly. I think in the future large changes to `<noscript>` should go in at least a minor release.~~ The change was included in 16.5.0, there is no 16.4.3\r\n","updated_at":"2019-03-29T13:54:48Z","created_at":"2019-03-29T13:45:53Z","creator_user_login":"zfletch"}
{"number":15238,"comment_id":"484392786","body":"I just noticed this issue and as the one who caused it I would like to chip in, first of all, sorry for the trouble. 😄\r\n\r\nI don't think anyone (at least not me), were considering prerenderers in #11423 which is unfortunate, breaking this use case should of course have been an intentional choice rather than an unintentional side effect.\r\n\r\nThat said, I do still think the fix is a correct one. Using JS to create markup that will never be used in the current environment seems wasteful to the vast majority of targets that run this code. The `dangerouslySetInnerHTML`-workaround seems like a valid escape hatch when it is indeed needed?\r\n\r\nIf you need to put the result of a rendered component into a `<noscript>` in the browser, it might be possible to borrow a trick that was sometimes used on the serverside before #11423, using `ReactDOMServer.renderToString` to generate the markup. This isn't a great solution obviously.\r\n\r\nAll this said, if this use case is strong enough it should be possible to introduce a special prop on `<noscript>`-components that control this behaviour. Something like `<noscript alwaysRenderNoScriptContents>...</noscript>`. Not sure if this is desirable or not in the big picture. 🤷‍♂️ If it is, I could take a stab at implementing it.","updated_at":"2019-04-18T07:44:56Z","created_at":"2019-04-18T07:44:56Z","creator_user_login":"Ephem"}
{"number":15238,"comment_id":"675335930","body":"I've been struggling with this aswell, but we have a slightly different usecase.\r\n\r\nOur project leverages noscript for server markup intended for SEO crawlers. Then after the app is running clientside we use react-intersection-observer to infill the DOM. This preserves crawlability for some less advanced search engines and markedly improves Lighthouse's excessive DOM depth scores.\r\n\r\nI'm not an SEO expert by any stretch so the above might be overkill but I do think this is fairly standard practice?","updated_at":"2020-08-18T08:23:16Z","created_at":"2020-08-18T08:22:56Z","creator_user_login":"designreact"}
{"number":15238,"comment_id":"675528119","body":"@designreact Without knowing your exact usecase that sounds.. Complex. I'm not sure exactly what you are doing, but it _sounds_ like the noscript-part of that should work since it's generating the content serverside with `renderToString`?\r\n\r\nSo just to clear up any confusion, I'll try to summarize how this should work today (though I haven't tested in a while):\r\n\r\n```jsx\r\nfunction NoscriptFallback() {\r\n  return 'I will be shown only when JS is disabled';\r\n}\r\n\r\nfunction Component() {\r\n  return (\r\n    <noscript>\r\n      <NoscriptFallback />\r\n    </noscript>\r\n  );\r\n}\r\n```\r\n\r\n**Server**\r\n\r\nThe above code should work as intended when running on the server with `ReactDOMServer.renderToString()`, that is, if you turn off JS in the browser, you should see that message. Even if you don't disable JS, if you inspect the markup, you should see that message inside of a `<noscript>`-tag. (Note that I'm not sure if it shows up in the devtools Elements-pane, you might have to view source)\r\n\r\n**Hydration**\r\n\r\nIf you do `ReactDOM.hydrate()` on the above code, the `<NoscriptFallback />`-component should never run, but React leaves the existing content inside the noscript (delivered by the server-render) untouched.\r\n\r\n**Client only**\r\n\r\nIf you do `ReactDOM.render()` on the above code without having server-rendered anything, the `<NoscriptFallback />` will never run and no content will be generated. The reasoning here is that JS is already running, so that content will never be shown anyway. (Turns out this is not true for pre-renderers running in the browser as the original issue pointed out)\r\n\r\nTL;DR: Content gets generated inside of `<noscript>` on the server, but not on the client, though it does get preserved when hydrating server markup.","updated_at":"2020-08-18T14:54:17Z","created_at":"2020-08-18T14:54:17Z","creator_user_login":"Ephem"}
{"number":24636,"comment_id":"1140460811","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: a2766387efe68b318b23d8c35c70b850d1e6a250...08edbede7ad3ec6dd15f0a63a174f419e9f1ee62\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 131.28 kB | 131.28 kB | = | 42.13 kB | 42.13 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 136.54 kB | 136.54 kB | = | 43.68 kB | 43.68 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 439.35 kB | 439.35 kB | = | 80.29 kB | 80.29 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 424.64 kB | 424.64 kB | = | 78.13 kB | 78.13 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 439.35 kB | 439.35 kB | = | 80.29 kB | 80.29 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js | **+1.91%** | 25.67 kB | 26.15 kB | +1.84% | 8.79 kB | 8.96 kB\n| oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js | **+1.91%** | 25.67 kB | 26.15 kB | +1.84% | 8.79 kB | 8.96 kB\n| oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js | **+1.91%** | 25.67 kB | 26.15 kB | +1.84% | 8.79 kB | 8.96 kB\n| oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js | **+1.09%** | 87.66 kB | 88.61 kB | +0.99% | 20.81 kB | 21.01 kB\n| oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js | **+1.09%** | 87.66 kB | 88.61 kB | +0.99% | 20.81 kB | 21.01 kB\n| oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js | **+1.09%** | 87.66 kB | 88.61 kB | +0.99% | 20.81 kB | 21.01 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 08edbede7ad3ec6dd15f0a63a174f419e9f1ee62\n</p>\n","updated_at":"2022-05-29T14:50:40Z","created_at":"2022-05-29T14:29:15Z","creator_user_login":"sizebot"}
{"number":24636,"comment_id":"1142734296","body":"Upon further testing I've found that a primitive derived from a destructuring assignment is tripping the `declaredDependencyNode.type === 'Identifier'` -- any AST experts that could lend their expertise as to how to accurately determine that the `declaredDependencyNode.type` is indeed an Object/reference type please weigh in. In the mean time I will perform further testing and attempt to resolve.","updated_at":"2022-05-31T23:31:09Z","created_at":"2022-05-31T23:30:36Z","creator_user_login":"gnowland"}
{"number":24636,"comment_id":"1412480263","body":"Thanks, @gnowland for creating this PR! Bumping this up, as I had an issue with a similar thing. When there is a spread operator used ESLint _should_ report the error as this dependency _will_ change on every render.\r\n\r\n```\r\n// It could be memorized object from useMemo() too\r\nconst values = { a: 1, b: 2, c: 3 }\r\n\r\nconst TestComponent = () => {\r\n  const { a, ...rest } = values\r\n\r\n  useEffect(() => {\r\n    console.log(rest)\r\n  }, [rest])\r\n\r\n  return null\r\n}\r\n```\r\n\r\nI've ended up adding an additional check to https://github.com/facebook/react/blob/main/packages/eslint-plugin-react-hooks/src/ExhaustiveDeps.js#L1532\r\n\r\n```\r\n    if (node.name.parent.type === \"RestElement\") {\r\n      return [ref, 'variable defined by a rest spread']\r\n    }\r\n```\r\n\r\nbut I would love to have the option of avoiding all the objects in hooks dependencies.","updated_at":"2023-02-01T17:56:42Z","created_at":"2023-02-01T17:52:26Z","creator_user_login":"pawojciechowski"}
{"number":24636,"comment_id":"1491388601","body":"This should be a default rule. We just had a freeze in one of the main pages of our product because an object dependency in an effect triggered a (never ending) feedback loop... 😒 \r\n\r\nThank you for creating the PR, hope it gets merged soon!","updated_at":"2023-03-31T06:36:23Z","created_at":"2023-03-31T06:36:23Z","creator_user_login":"ahoisl"}
{"number":24636,"comment_id":"1668994106","body":"This is a good idea, but I found that as-is, it quickly runs into problems of mis-labeling things in a way that makes it useless in a large codebase. For example:\r\n\r\n```js\r\nconst [doTheThing, setDoTheThing] = useState(false);\r\n\r\nconst memoResult = useMemo(() => {\r\n  // some result here that changes based on doTheThing\r\n}, [doTheThing]) // this is an error\r\n```","updated_at":"2023-08-08T06:37:40Z","created_at":"2023-08-08T06:37:40Z","creator_user_login":"icopp"}
{"number":26926,"comment_id":"1586211668","body":"Hi @nksaraf! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326926). Thanks!","updated_at":"2023-06-11T15:18:20Z","created_at":"2023-06-11T15:18:20Z","creator_user_login":"facebook-github-bot"}
{"number":26926,"comment_id":"1586214989","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: ce6842d8f528977119b80d969306c8475099f66e...979563fa0e8c8980733463b6e46fccdcba87ed74\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **=** | 164.23 kB | 164.23 kB | = | 51.73 kB | 51.73 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **=** | 171.67 kB | 171.67 kB | = | 53.97 kB | 53.97 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/facebook-www/ReactDOM-prod.classic.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **=** | 570.12 kB | 570.12 kB | = | 100.58 kB | 100.57 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/facebook-www/ReactDOM-prod.modern.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **=** | 553.90 kB | 553.90 kB | = | 97.75 kB | 97.75 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 46.29 kB | +∞% | 0.00 kB | 11.46 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 9.22 kB | +∞% | 0.00 kB | 3.65 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-client.node.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-client.node.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 45.17 kB | +∞% | 0.00 kB | 11.29 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-client.node.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-client.node.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 8.93 kB | +∞% | 0.00 kB | 3.58 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-plugin.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-plugin.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 4.07 kB | +∞% | 0.00 kB | 1.63 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-runtime.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-runtime.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 7.58 kB | +∞% | 0.00 kB | 2.14 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-runtime.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-runtime.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 2.99 kB | +∞% | 0.00 kB | 1.00 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-server.node.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-server.node.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 91.13 kB | +∞% | 0.00 kB | 21.66 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-server.node.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-server.node.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 22.31 kB | +∞% | 0.00 kB | 7.84 kB\n| [oss-experimental/react-server-dom-vite/client.browser.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/client.browser.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.17 kB\n| [oss-experimental/react-server-dom-vite/client.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/client.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.06 kB | +∞% | 0.00 kB | 0.08 kB\n| [oss-experimental/react-server-dom-vite/client.node.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/client.node.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-experimental/react-server-dom-vite/esm/react-server-dom-vite-client.browser.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/esm/react-server-dom-vite-client.browser.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 46.13 kB | +∞% | 0.00 kB | 11.40 kB\n| [oss-experimental/react-server-dom-vite/esm/react-server-dom-vite-client.browser.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/esm/react-server-dom-vite-client.browser.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 33.99 kB | +∞% | 0.00 kB | 8.69 kB\n| [oss-experimental/react-server-dom-vite/index.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/index.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.28 kB | +∞% | 0.00 kB | 0.22 kB\n| [oss-experimental/react-server-dom-vite/plugin.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/plugin.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.08 kB | +∞% | 0.00 kB | 0.10 kB\n| [oss-experimental/react-server-dom-vite/runtime.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/runtime.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.24 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-experimental/react-server-dom-vite/server.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/server.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.19 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-experimental/react-server-dom-vite/server.node.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/server.node.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 46.29 kB | +∞% | 0.00 kB | 11.46 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 9.22 kB | +∞% | 0.00 kB | 3.65 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-client.node.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-client.node.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 45.17 kB | +∞% | 0.00 kB | 11.29 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-client.node.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-client.node.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 8.93 kB | +∞% | 0.00 kB | 3.58 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-plugin.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-plugin.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 4.07 kB | +∞% | 0.00 kB | 1.63 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-runtime.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-runtime.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 7.58 kB | +∞% | 0.00 kB | 2.14 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-runtime.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-runtime.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 2.99 kB | +∞% | 0.00 kB | 1.00 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-server.node.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-server.node.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 91.13 kB | +∞% | 0.00 kB | 21.66 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-server.node.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-server.node.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 22.31 kB | +∞% | 0.00 kB | 7.84 kB\n| [oss-stable-semver/react-server-dom-vite/client.browser.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/client.browser.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.17 kB\n| [oss-stable-semver/react-server-dom-vite/client.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/client.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.06 kB | +∞% | 0.00 kB | 0.08 kB\n| [oss-stable-semver/react-server-dom-vite/client.node.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/client.node.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-stable-semver/react-server-dom-vite/esm/react-server-dom-vite-client.browser.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/esm/react-server-dom-vite-client.browser.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 46.13 kB | +∞% | 0.00 kB | 11.40 kB\n| [oss-stable-semver/react-server-dom-vite/esm/react-server-dom-vite-client.browser.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/esm/react-server-dom-vite-client.browser.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 33.99 kB | +∞% | 0.00 kB | 8.69 kB\n| [oss-stable-semver/react-server-dom-vite/index.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/index.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.28 kB | +∞% | 0.00 kB | 0.22 kB\n| [oss-stable-semver/react-server-dom-vite/plugin.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/plugin.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.08 kB | +∞% | 0.00 kB | 0.10 kB\n| [oss-stable-semver/react-server-dom-vite/runtime.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/runtime.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.24 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-stable-semver/react-server-dom-vite/server.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/server.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.19 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-stable-semver/react-server-dom-vite/server.node.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/server.node.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 46.29 kB | +∞% | 0.00 kB | 11.46 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 9.22 kB | +∞% | 0.00 kB | 3.65 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-client.node.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-client.node.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 45.17 kB | +∞% | 0.00 kB | 11.29 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-client.node.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-client.node.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 8.93 kB | +∞% | 0.00 kB | 3.58 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-plugin.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-plugin.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 4.07 kB | +∞% | 0.00 kB | 1.63 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-runtime.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-runtime.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 7.58 kB | +∞% | 0.00 kB | 2.14 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-runtime.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-runtime.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 2.99 kB | +∞% | 0.00 kB | 1.00 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-server.node.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-server.node.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 91.13 kB | +∞% | 0.00 kB | 21.66 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-server.node.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-server.node.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 22.31 kB | +∞% | 0.00 kB | 7.84 kB\n| [oss-stable/react-server-dom-vite/client.browser.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/client.browser.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.17 kB\n| [oss-stable/react-server-dom-vite/client.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/client.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.06 kB | +∞% | 0.00 kB | 0.08 kB\n| [oss-stable/react-server-dom-vite/client.node.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/client.node.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-stable/react-server-dom-vite/esm/react-server-dom-vite-client.browser.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/esm/react-server-dom-vite-client.browser.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 46.13 kB | +∞% | 0.00 kB | 11.40 kB\n| [oss-stable/react-server-dom-vite/esm/react-server-dom-vite-client.browser.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/esm/react-server-dom-vite-client.browser.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 33.99 kB | +∞% | 0.00 kB | 8.69 kB\n| [oss-stable/react-server-dom-vite/index.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/index.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.28 kB | +∞% | 0.00 kB | 0.22 kB\n| [oss-stable/react-server-dom-vite/plugin.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/plugin.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.08 kB | +∞% | 0.00 kB | 0.10 kB\n| [oss-stable/react-server-dom-vite/runtime.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/runtime.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.24 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-stable/react-server-dom-vite/server.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/server.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.19 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-stable/react-server-dom-vite/server.node.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/server.node.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.16 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 46.29 kB | +∞% | 0.00 kB | 11.46 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 9.22 kB | +∞% | 0.00 kB | 3.65 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-client.node.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-client.node.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 45.17 kB | +∞% | 0.00 kB | 11.29 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-client.node.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-client.node.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 8.93 kB | +∞% | 0.00 kB | 3.58 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-plugin.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-plugin.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 4.07 kB | +∞% | 0.00 kB | 1.63 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-runtime.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-runtime.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 7.58 kB | +∞% | 0.00 kB | 2.14 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-runtime.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-runtime.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 2.99 kB | +∞% | 0.00 kB | 1.00 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-server.node.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-server.node.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 91.13 kB | +∞% | 0.00 kB | 21.66 kB\n| [oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-server.node.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/cjs/react-server-dom-vite-server.node.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 22.31 kB | +∞% | 0.00 kB | 7.84 kB\n| [oss-experimental/react-server-dom-vite/client.browser.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/client.browser.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.17 kB\n| [oss-experimental/react-server-dom-vite/client.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/client.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.06 kB | +∞% | 0.00 kB | 0.08 kB\n| [oss-experimental/react-server-dom-vite/client.node.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/client.node.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-experimental/react-server-dom-vite/esm/react-server-dom-vite-client.browser.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/esm/react-server-dom-vite-client.browser.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 46.13 kB | +∞% | 0.00 kB | 11.40 kB\n| [oss-experimental/react-server-dom-vite/esm/react-server-dom-vite-client.browser.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/esm/react-server-dom-vite-client.browser.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 33.99 kB | +∞% | 0.00 kB | 8.69 kB\n| [oss-experimental/react-server-dom-vite/index.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/index.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.28 kB | +∞% | 0.00 kB | 0.22 kB\n| [oss-experimental/react-server-dom-vite/plugin.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/plugin.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.08 kB | +∞% | 0.00 kB | 0.10 kB\n| [oss-experimental/react-server-dom-vite/runtime.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/runtime.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.24 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-experimental/react-server-dom-vite/server.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/server.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.19 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-experimental/react-server-dom-vite/server.node.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-experimental/react-server-dom-vite/server.node.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 46.29 kB | +∞% | 0.00 kB | 11.46 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 9.22 kB | +∞% | 0.00 kB | 3.65 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-client.node.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-client.node.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 45.17 kB | +∞% | 0.00 kB | 11.29 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-client.node.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-client.node.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 8.93 kB | +∞% | 0.00 kB | 3.58 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-plugin.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-plugin.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 4.07 kB | +∞% | 0.00 kB | 1.63 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-runtime.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-runtime.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 7.58 kB | +∞% | 0.00 kB | 2.14 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-runtime.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-runtime.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 2.99 kB | +∞% | 0.00 kB | 1.00 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-server.node.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-server.node.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 91.13 kB | +∞% | 0.00 kB | 21.66 kB\n| [oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-server.node.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/cjs/react-server-dom-vite-server.node.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 22.31 kB | +∞% | 0.00 kB | 7.84 kB\n| [oss-stable-semver/react-server-dom-vite/client.browser.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/client.browser.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.17 kB\n| [oss-stable-semver/react-server-dom-vite/client.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/client.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.06 kB | +∞% | 0.00 kB | 0.08 kB\n| [oss-stable-semver/react-server-dom-vite/client.node.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/client.node.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-stable-semver/react-server-dom-vite/esm/react-server-dom-vite-client.browser.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/esm/react-server-dom-vite-client.browser.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 46.13 kB | +∞% | 0.00 kB | 11.40 kB\n| [oss-stable-semver/react-server-dom-vite/esm/react-server-dom-vite-client.browser.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/esm/react-server-dom-vite-client.browser.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 33.99 kB | +∞% | 0.00 kB | 8.69 kB\n| [oss-stable-semver/react-server-dom-vite/index.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/index.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.28 kB | +∞% | 0.00 kB | 0.22 kB\n| [oss-stable-semver/react-server-dom-vite/plugin.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/plugin.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.08 kB | +∞% | 0.00 kB | 0.10 kB\n| [oss-stable-semver/react-server-dom-vite/runtime.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/runtime.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.24 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-stable-semver/react-server-dom-vite/server.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/server.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.19 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-stable-semver/react-server-dom-vite/server.node.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable-semver/react-server-dom-vite/server.node.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 46.29 kB | +∞% | 0.00 kB | 11.46 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-client.browser.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 9.22 kB | +∞% | 0.00 kB | 3.65 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-client.node.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-client.node.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 45.17 kB | +∞% | 0.00 kB | 11.29 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-client.node.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-client.node.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 8.93 kB | +∞% | 0.00 kB | 3.58 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-plugin.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-plugin.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 4.07 kB | +∞% | 0.00 kB | 1.63 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-runtime.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-runtime.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 7.58 kB | +∞% | 0.00 kB | 2.14 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-runtime.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-runtime.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 2.99 kB | +∞% | 0.00 kB | 1.00 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-server.node.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-server.node.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 91.13 kB | +∞% | 0.00 kB | 21.66 kB\n| [oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-server.node.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/cjs/react-server-dom-vite-server.node.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 22.31 kB | +∞% | 0.00 kB | 7.84 kB\n| [oss-stable/react-server-dom-vite/client.browser.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/client.browser.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.17 kB\n| [oss-stable/react-server-dom-vite/client.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/client.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.06 kB | +∞% | 0.00 kB | 0.08 kB\n| [oss-stable/react-server-dom-vite/client.node.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/client.node.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-stable/react-server-dom-vite/esm/react-server-dom-vite-client.browser.development.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/esm/react-server-dom-vite-client.browser.development.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 46.13 kB | +∞% | 0.00 kB | 11.40 kB\n| [oss-stable/react-server-dom-vite/esm/react-server-dom-vite-client.browser.production.min.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/esm/react-server-dom-vite-client.browser.production.min.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 33.99 kB | +∞% | 0.00 kB | 8.69 kB\n| [oss-stable/react-server-dom-vite/index.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/index.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.28 kB | +∞% | 0.00 kB | 0.22 kB\n| [oss-stable/react-server-dom-vite/plugin.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/plugin.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.08 kB | +∞% | 0.00 kB | 0.10 kB\n| [oss-stable/react-server-dom-vite/runtime.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/runtime.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.24 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-stable/react-server-dom-vite/server.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/server.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.19 kB | +∞% | 0.00 kB | 0.16 kB\n| [oss-stable/react-server-dom-vite/server.node.js](https://react-builds.vercel.app/commits/979563fa0e8c8980733463b6e46fccdcba87ed74/files/oss-stable/react-server-dom-vite/server.node.js?compare=ce6842d8f528977119b80d969306c8475099f66e) | **+∞%** | 0.00 kB | 0.25 kB | +∞% | 0.00 kB | 0.16 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 979563fa0e8c8980733463b6e46fccdcba87ed74\n</p>\n","updated_at":"2023-06-12T18:36:50Z","created_at":"2023-06-11T15:28:17Z","creator_user_login":"react-sizebot"}
{"number":26926,"comment_id":"1586248341","body":"For context and credit. There was some previous work done on a Vite plugin from @frandiox in https://github.com/facebook/react/pull/22952 which powered Hydrogen. That was done before we ratified the react-server conventions and ironed some details which is why it wasn't merged - since it wasn't following the new convention.\r\n\r\nThis new take seems to address those by building on top of the latest stack.","updated_at":"2023-06-11T17:04:17Z","created_at":"2023-06-11T17:04:02Z","creator_user_login":"sebmarkbage"}
{"number":26926,"comment_id":"1586250444","body":"> Reference IDs, how to represent: I have seen them being represented as module/path#export. I tried saving them as [\"module/path\",\"export\"]. But it looks like with form actions it treats the string as the ID and so it doesn't work well with the array representation. So might have to change it all to just use the old module/path#export format.\r\n\r\nYea, I'm not too happy about how that turned out. I expect us to do a few more iterations there on the format.\r\n\r\n> CSS asset handling for vite. By default it loads the CSS using JS in the browser. But this causes FOUC which is undesirable. We need to go through the module tree and track which CSS files are being imported in that tree and add link tags for those. Should be able to be handled at a meta-framework level.\r\n\r\nThe essence is that we support suspending on the CSS way later than you typically would in a JS module loader. E.g. you'd have to download the CSS before loading the JS. In our Webpack set up and Next.js we can load CSS in parallel while still rendering the next page that needs it. While it's more of a meta-framework concern, it could be good to show how that's intended to work in a meta-framework. E.g. the Webpack fixture still collects the CSS for the entry point and loads it using React at the root. That could all go into the fixture though. We don't really have an equivalent for the plain ESM fixture since there's not a solution to this problem in the pure ESM world that also works on the server. It's also less efficient due to the lack of parallelization.","updated_at":"2023-06-11T17:10:48Z","created_at":"2023-06-11T17:10:48Z","creator_user_login":"sebmarkbage"}
{"number":26926,"comment_id":"1586250716","body":"> For context and credit. There was some previous work done on a Vite plugin from @frandiox in #22952 which powered Hydrogen. That was done before we ratified the react-server conventions and ironed some details which is why it wasn't merged - since it wasn't following the new convention.\r\n> \r\n> This new take seems to address those by building on top of the latest stack.\r\n\r\nI want to give some credit too for all the different references I had to build this up including some direct work from @cyco130 when we worked on [cyco130/vite-rsc](https://github.com/cyco130/vite-rsc) together\r\n\r\n\r\n\r\n> > Reference IDs, how to represent: I have seen them being represented as module/path#export. I tried saving them as [\"module/path\",\"export\"]. But it looks like with form actions it treats the string as the ID and so it doesn't work well with the array representation. So might have to change it all to just use the old module/path#export format.\r\n> \r\n> Yea, I'm not too happy about how that turned out. I expect us to do a few more iterations there on the format.\r\n> \r\n> > CSS asset handling for vite. By default it loads the CSS using JS in the browser. But this causes FOUC which is undesirable. We need to go through the module tree and track which CSS files are being imported in that tree and add link tags for those. Should be able to be handled at a meta-framework level.\r\n> \r\n> The essence is that we support suspending on the CSS way later than you typically would in a JS module loader. E.g. you'd have to download the CSS before loading the JS. In our Webpack set up and Next.js we can load CSS in parallel while still rendering the next page that needs it. While it's more of a meta-framework concern, it could be good to show how that's intended to work in a meta-framework. E.g. the Webpack fixture still collects the CSS for the entry point and loads it using React at the root. That could all go into the fixture though. We don't really have an equivalent for the plain ESM fixture since there's not a solution to this problem in the pure ESM world that also works on the server. It's also less efficient due to the lack of parallelization.\r\n\r\nCool will add the CSS support in the fixture (had that in our experiments). I think for the module reference format I will revert to `module/path#export` for now as that involves less branching.","updated_at":"2023-06-11T17:12:06Z","created_at":"2023-06-11T17:12:06Z","creator_user_login":"nksaraf"}
{"number":26926,"comment_id":"1586273786","body":"@sebmarkbage added support for CSS files in the fixture. It uses an Async server component to load the css files imported in the module tree under an entry. During production, it uses the manifest to figure out what css files to include.\r\n\r\nAlso now using the `module/path#export` syntax for reference IDs","updated_at":"2023-06-11T18:25:19Z","created_at":"2023-06-11T18:21:25Z","creator_user_login":"nksaraf"}
{"number":26926,"comment_id":"1586308875","body":"Blocked by https://github.com/vitejs/vite/pull/13487. Right now vite is not respecting user config's `resolve.conditions` during its internal `nodeResolve` function. This PR fixes that.","updated_at":"2023-06-11T19:30:04Z","created_at":"2023-06-11T19:30:04Z","creator_user_login":"nksaraf"}
{"number":26926,"comment_id":"1587872543","body":"Made a change to actually move the module caching logic and async/sync distinction to outside the react-server-dom-vite/client bundle. I pushed it to user land to be customized by the framework author. Essentially ReactServerDOM will call __vite_preload__ and __vite_require__ in its `preloadModule` and `requireModule` functions respectively. They will directly pass the reference metadata (specifier, name) to the vite functions which will do their thing based on whether its on the browser, or node, or edge, and whether its in prod or development. This allows for much easier handling accounting for how vite has different mechanics during dev and prod.\r\n\r\nAlso changed the fixture to output CJS for the SSR and react-server chunks so that they can be sync required and initialized at the point they are needed.\r\n\r\n@sebmarkbage would love your thoughts on this","updated_at":"2023-06-12T18:37:25Z","created_at":"2023-06-12T18:36:27Z","creator_user_login":"nksaraf"}
{"number":26926,"comment_id":"1587883218","body":"> Made a change to actually move the module caching logic and async/sync distinction to outside the react-server-dom-vite/client bundle. I pushed it to user land to be customized by the framework author. Essentially ReactServerDOM will call vite_preload and vite_require in its preloadModule and requireModule functions respectively. \r\n\r\nSo we explicitly didn't do that with Webpack and won't do that with Turbopack. After all, we could just expose the methods we currently have in the config as runtime options if we wanted that. However, these boundary are not stable. We've already changed them before and will change them again. There's things missing now that @gnoff is working on like properly preloading integrated with the Fizz runtime so this won't be sufficient anyway.\r\n\r\nIt also only encourages more hacks on the consuming side and to keep both branches in the runtime for both, instead of tackling the underlying ideal data structure. Really, the goal here is for the bundler to expose more direct data structures for the ideal loading sequence and that way we can iterate on providing the ideal protocol on both ends. As it stands, this just invites all Vite based frameworks to provide a sub-optimal implementation.\r\n\r\nFor example, there really shouldn't be any need to have a module cache because Vite has one internally. Ideally we should have a way to bridge the gap to get access to an API to synchronously access it or expose the whole thing. Until then, the HMR issue should ideally just work out of the box and if we add hooks to do it in React, then that needs to be under the control of React to clear those entries.\r\n\r\nI think we need to have a stronger opinion here and not settle for what's easiest to implement.","updated_at":"2023-06-12T18:54:00Z","created_at":"2023-06-12T18:44:58Z","creator_user_login":"sebmarkbage"}
{"number":26926,"comment_id":"1587886528","body":"For dev and prod, React already builds two different versions so you can have different implementation details for each one. Another question that came up for Turbopack was whether we should have a 2x2 matrix of HMR/build bundler and development/production mode React, or if it's enough to just have production/development.","updated_at":"2023-06-12T18:47:28Z","created_at":"2023-06-12T18:47:28Z","creator_user_login":"sebmarkbage"}
{"number":26926,"comment_id":"1589369365","body":"> > Made a change to actually move the module caching logic and async/sync distinction to outside the react-server-dom-vite/client bundle. I pushed it to user land to be customized by the framework author. Essentially ReactServerDOM will call vite_preload and vite_require in its preloadModule and requireModule functions respectively.\r\n> \r\n> So we explicitly didn't do that with Webpack and won't do that with Turbopack. After all, we could just expose the methods we currently have in the config as runtime options if we wanted that. However, these boundary are not stable. We've already changed them before and will change them again. There's things missing now that @gnoff is working on like properly preloading integrated with the Fizz runtime so this won't be sufficient anyway.\r\n> \r\n> It also only encourages more hacks on the consuming side and to keep both branches in the runtime for both, instead of tackling the underlying ideal data structure. Really, the goal here is for the bundler to expose more direct data structures for the ideal loading sequence and that way we can iterate on providing the ideal protocol on both ends. As it stands, this just invites all Vite based frameworks to provide a sub-optimal implementation.\r\n> \r\n> For example, there really shouldn't be any need to have a module cache because Vite has one internally. Ideally we should have a way to bridge the gap to get access to an API to synchronously access it or expose the whole thing. Until then, the HMR issue should ideally just work out of the box and if we add hooks to do it in React, then that needs to be under the control of React to clear those entries.\r\n> \r\n> I think we need to have a stronger opinion here and not settle for what's easiest to implement.\r\n\r\nAgreed. I think I hold the same viewpoint. The trouble I had was in making the CJS choice a strict opinion and the abstraction started bending there. I think we would need to allow both ESM and CJS output while bundling, and so the runtime needs to allow the consumer to pick which one to use. The other issue was between the browser, edge and node clients. Only the node client will be able to support CJS require based sync initialization. The other would either need to bundle everything together and then just access the relevant thing syncronously. Or have async require using dynamic imports.\r\n\r\nDoes the react team have an opinion in that space too?","updated_at":"2023-06-13T13:55:57Z","created_at":"2023-06-13T13:55:57Z","creator_user_login":"nksaraf"}
{"number":26926,"comment_id":"1599479886","body":"There's three parts to the synchronous nature of increasing importance:\r\n\r\n1) Synchronous initialization of the module - CJS style. This could be implemented as CJS or it could be implemented as an initializer inside ESM that sets up a module (nobody does that yet but I think it would be cool). This unlocks the ability to lazily initialize modules which can improve performance - especially selective hydration performance.\r\n2) Sharing a synchronous cache between requests so that once a module has already been initialized once can be synchronously accessed again. In a system like Webpack that maintains its own module map, this can be implemented using the built-in map in the bundler ideally. With ESM this map isn't exposed to users, which is unfortunate, but it can be implemented using an external map temporarily until newer specs fixes this.\r\n3) Production builds must also include all recursive chunks you need to load in the \"chunks\" list for a module to resolve. I.e. we should be able to load all dependencies in a single round trip. There shouldn't be any waterfalls between chunks where we load one async dependency followed by another.\r\n4) Required: Synchronously access a module that has already been preloaded by this RSC request. This is needed because it's expected that there are a lot of nested Client Components and without it React would create a micro-task waterfall which is really bad for perf based on how React suspense currently works. This can be implement using a global map like (2) but it can also be implemented locally e.g. by stashing the result on the Promise that's imported.\r\n\r\nEach platform should implements as many of these as possible.\r\n\r\nFor the Webpack build we solved all four. For the ESM build I only solved 2 and 4 by using a shared global cache but not 1 and 3. Because it's the best we can do given the underlying system. The Vite version should be able to support at least 2, 3 and 4 in production.","updated_at":"2023-06-20T20:54:13Z","created_at":"2023-06-20T20:54:13Z","creator_user_login":"sebmarkbage"}
{"number":26926,"comment_id":"1599504496","body":"It doesn't look like you have a solution to 3 here. I suspect you'll need to have Vite generate a manifest that includes the recursive generated files you'll need for every client module.","updated_at":"2023-06-20T21:05:17Z","created_at":"2023-06-20T21:05:17Z","creator_user_login":"sebmarkbage"}
{"number":26926,"comment_id":"1600578874","body":"1. We could enforce cjs for the node build if the React team recommends it. But not sure how this is to be handled in the edge runtime case then. We will have to do different stuff there.\r\n\r\n2. Vite also has a module graph in hand during dev. During prod, we can maintain a global module cache for this too\r\n\r\n3. > It doesn't look like you have a solution to 3 here. I suspect you'll need to have Vite generate a manifest that includes the recursive generated files you'll need for every client module.\r\n\r\nYeah not yet. But yeah I can get it to emit a manifest for client modules and what other client imports it has. This should allow us to do 3. But also if we are doing synchronous loading, using CJS, does this chunks thing matter still?\r\n\r\n4. synchronous access after preload should work using the promise.status === 'fulfilled' trick.\r\n","updated_at":"2023-06-21T10:22:37Z","created_at":"2023-06-21T10:21:18Z","creator_user_login":"nksaraf"}
{"number":26926,"comment_id":"1601093927","body":">  But also if we are doing synchronous loading, using CJS, does this chunks thing matter still?\r\n\r\nThe chunks thing is a prerequisite for doing sync loading since you need to guarantee that you already have all the chunks loaded.","updated_at":"2023-06-21T15:51:07Z","created_at":"2023-06-21T15:51:07Z","creator_user_login":"sebmarkbage"}
{"number":26926,"comment_id":"1601101993","body":"> We could enforce cjs for the node build if the React team recommends it. But not sure how this is to be handled in the edge runtime case then. We will have to do different stuff there.\r\n\r\nWe don't have strong recommendation for Node builds. There's different tradeoffs depending on if you use a warm server or cold starts. It's also less sensitive because the downstream effect of a few extra microtasks is much lower in the SSR implementation. So I'd say that's not strictly necessary. Sync init can help cold starts on the server but it's not quite as impactful as on the client. So if you're not going to do it on the client, probably not worth it.","updated_at":"2023-06-21T15:56:11Z","created_at":"2023-06-21T15:56:11Z","creator_user_login":"sebmarkbage"}
{"number":26926,"comment_id":"1601308047","body":"> There's three parts to the synchronous nature of increasing importance:\r\n> \r\n> 1. Synchronous initialization of the module - CJS style. This could be implemented as CJS or it could be implemented as an initializer inside ESM that sets up a module (nobody does that yet but I think it would be cool). This unlocks the ability to lazily initialize modules which can improve performance - especially selective hydration performance.\r\n> 2. Sharing a synchronous cache between requests so that once a module has already been initialized once can be synchronously accessed again. In a system like Webpack that maintains its own module map, this can be implemented using the built-in map in the bundler ideally. With ESM this map isn't exposed to users, which is unfortunate, but it can be implemented using an external map temporarily until newer specs fixes this.\r\n> 3. Production builds must also include all recursive chunks you need to load in the \"chunks\" list for a module to resolve. I.e. we should be able to load all dependencies in a single round trip. There shouldn't be any waterfalls between chunks where we load one async dependency followed by another.\r\n> 4. Required: Synchronously access a module that has already been preloaded by this RSC request. This is needed because it's expected that there are a lot of nested Client Components and without it React would create a micro-task waterfall which is really bad for perf based on how React suspense currently works. This can be implement using a global map like (2) but it can also be implemented locally e.g. by stashing the result on the Promise that's imported.\r\n> \r\n> Each platform should implements as many of these as possible.\r\n> \r\n> For the Webpack build we solved all four. For the ESM build I only solved 2 and 4 by using a shared global cache but not 1 and 3. Because it's the best we can do given the underlying system. The Vite version should be able to support at least 2, 3 and 4 in production.\r\n\r\nCould you help me out with which ones of these needs to apply to the SSR or the browser or both? Syncronous loading on the client is probably more difficult problem. Will probably need to chunk things better and load those before the hydrating begins. Is that the idea?","updated_at":"2023-06-21T17:43:05Z","created_at":"2023-06-21T17:43:05Z","creator_user_login":"nksaraf"}
{"number":26926,"comment_id":"1601336869","body":"They're all relevant for both but more so on the client. For SSR it also depends on how you deploy. E.g. if you bundle the whole thing into one bundle then there might not be any chunks to load and so it just never will have an extra chunks.","updated_at":"2023-06-21T18:07:14Z","created_at":"2023-06-21T18:07:14Z","creator_user_login":"sebmarkbage"}
{"number":26926,"comment_id":"1637116986","body":"Haven't been updating this PR for a bit to actually explore how to do this kind of sync bundling in vite/rollup. Will probably get some help from the team there but right now going han solo to figure out how everything works.","updated_at":"2023-07-16T15:13:10Z","created_at":"2023-07-16T15:13:10Z","creator_user_login":"nksaraf"}
{"number":26926,"comment_id":"1649237796","body":"> 3\\. Production builds must also include all recursive chunks you need to load in the \"chunks\" list for a module to resolve. I.e. we should be able to load all dependencies in a single round trip. There shouldn't be any waterfalls between chunks where we load one async dependency followed by another.\r\n\r\n@nksaraf Sorry if I misunderstood anything but doesn't Vite already do that [automatically](https://vitejs.dev/guide/features.html#async-chunk-loading-optimization) in production?\r\n\r\nHave a look [here](https://stackblitz.com/edit/vitejs-vite-ncbemv?file=main.js&terminal=dev):\r\n- The chain of dependency goes like `a.js => b.js => c.js`.\r\n- Each of these three files are forced into their own chunks because of the dynamic imports in `main.js`.\r\n- When you click \"Load A\" in dev, it causes a waterfall as you'd expect.\r\n- But in the production build, (use `npm run build` and open the index file in `dist/assets/`) Vite optimizes the dynamic import of `a.js` into something like this (I disabled minification to make it clearer):\r\n  ```js\r\n  __vitePreload(\r\n    () => import('./a-14f6e541.js'),\r\n    ['assets/a-14f6e541.js', 'assets/b-85d91b69.js', 'assets/c-5dcf697c.js']\r\n  );\r\n  ```\r\n  which loads all transitive dependencies (`a.js`, `b.js`, and `c.js`) in parallel, avoiding waterfalls.\r\n\r\nDoesn't this solve `3`?","updated_at":"2023-07-25T07:19:13Z","created_at":"2023-07-25T06:59:47Z","creator_user_login":"cyco130"}
{"number":26926,"comment_id":"1649746414","body":"Yeah I think you are right, to use this feature we would have to create virtual modules that were dynamically importing the client components and using that for loading.. right now I was looking at a more runtime driven approach using a manifest so that I can import things at will during runtime without worrying. But I think I'm gonna explore how far using bite's default behavior can take us ","updated_at":"2023-07-25T12:29:53Z","created_at":"2023-07-25T12:29:53Z","creator_user_login":"nksaraf"}
{"number":26926,"comment_id":"1649764293","body":"Cool. All client components still need to be included in the client build somehow, either by naming them explicitly as entry points or using a virtual module like you mentioned. A virtual module (which would essentially serve as a client components manifest) would solve both problems so I thought it might be the easiest way. Especially since Vite would do all the heavy lifting for you automatically and would do it at build-time which is probably more efficient.","updated_at":"2023-07-25T12:41:59Z","created_at":"2023-07-25T12:41:59Z","creator_user_login":"cyco130"}
{"number":26926,"comment_id":"1676235579","body":"🅆1🄽🅃3🅁 🅂0🄻🄳13🅁 47\r\n🄹🄴🄽🄽🄰 🄲🄸🄳🄴\r\n🄲🄸🄲🄰🄳🄰3301\r\n🅉🄾🄳🄸🄰🄲\r\n\r\nOn Mon, 12 Jun 2023, 07:34 Nikhil Saraf, ***@***.***> wrote:\r\n\r\n> Blocked by vitejs/vite#13487 <https://github.com/vitejs/vite/pull/13487>.\r\n> Right now vite is not respecting user config's resolve.conditions during\r\n> its internal nodeResolve function. This PR fixes that.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/facebook/react/pull/26926#issuecomment-1586308875>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/AMLXNAP2FWR5TNW7B5HBRLDXKYMULANCNFSM6AAAAAAZCM2PP4>\r\n> .\r\n> You are receiving this because you are subscribed to this thread.Message\r\n> ID: ***@***.***>\r\n>\r\n","updated_at":"2023-08-13T05:30:06Z","created_at":"2023-08-13T05:30:06Z","creator_user_login":"W1NT3RS0LD13R"}
{"number":13838,"comment_id":"435159381","body":"Has this ever worked as you intend? Can you send a fix?","updated_at":"2018-11-01T19:34:04Z","created_at":"2018-11-01T19:34:04Z","creator_user_login":"gaearon"}
{"number":13838,"comment_id":"435165942","body":"We are solving the problem this way:\r\n```js\r\nimport Entities from 'html-entities/lib/html5-entities'\r\n\r\nconst entities = new Entities()\r\nconst contentRegExp = /content=\"([^\"]+)\"/g\r\nconst handleContent = (match, content) => {\r\n  return `content=\"${entities.decode(content)}\"`\r\n}\r\n\r\nhtml = html.replace(contentRegExp, handleContent)\r\n```\r\n\r\nWe spend ~1ms per request in the path. It's not too bad. I can give it a look at some point. ","updated_at":"2018-11-01T19:55:19Z","created_at":"2018-11-01T19:55:19Z","creator_user_login":"oliviertassinari"}
{"number":13838,"comment_id":"454020009","body":"I have found this related issue: #6873. Digging into the implementation, the behavior comes from\r\nhttps://github.com/facebook/react/blob/0005d1e3f54b79fe4707fbccc44b89e0fb4ce565/packages/react-dom/src/server/DOMMarkupOperations.js#L61\r\n⬇️\r\nhttps://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/server/quoteAttributeValueForBrowser.js#L17\r\n⬇️\r\nhttps://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/server/escapeTextForBrowser.js#L108\r\n\r\n---\r\n\r\nNow, all [the escaping tests](https://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/__tests__/escapeTextForBrowser-test.js#L15) I could find are covering the children use case:\r\nhttps://github.com/facebook/react/blob/b87aabdfe1b7461e7331abb3601d9e6bb27544bc/packages/react-dom/src/__tests__/escapeTextForBrowser-test.js#L23-L24\r\nI have limited knowledge of web escaping related security issues.\r\nI don't see any harm potential with:\r\n```jsx\r\n const response = ReactDOMServer.renderToString(<span data-src={'&'}></span>); \r\n expect(response).toMatch('<span data-reactroot=\"\" data-src=\"&\"></span>'); \r\n```","updated_at":"2019-01-14T14:20:39Z","created_at":"2019-01-14T14:19:14Z","creator_user_login":"oliviertassinari"}
{"number":13838,"comment_id":"470294454","body":"I have the same problem in the content of `<style>` elements:\r\n\r\n```jsx\r\nconst React = require(\"react\");\r\nconst ReactDOMServer = require(\"react-dom/server\");\r\n\r\nconsole.log(ReactDOMServer.renderToStaticMarkup(\r\n  <html>\r\n    <head>\r\n      <link\r\n        href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro\"\r\n        rel=\"stylesheet\"\r\n      />\r\n      <style>{`\r\n        html {\r\n          font-family: \"Source Sans Pro\", sans-serif;\r\n        }\r\n      `}</style>\r\n    </head>\r\n    <body>\r\n      <p>Test.</p>\r\n    </body>\r\n  </html>\r\n));\r\n```\r\n\r\nThis outputs:\r\n```html\r\n<html><head><link href=\"https://fonts.googleapis.com/css?family=Source+Sans+Pro\" rel=\"stylesheet\"/><style>\r\n        html {\r\n          font-family: &quot;Source Sans Pro&quot;, sans-serif;\r\n        }\r\n      </style></head><body><p>Test.</p></body></html>\r\n```\r\n\r\nBy the parsing rules in the HTML spec (I'm consulting WHATWG here), the contents of elements `style`, `xmp` and `iframe` (as well as `noscript`, `noframes` and `noembed` when they're not being rendered) are parsed with the RAWTEXT tokenizer state, which treats everything as plaintext until it finds a matching closing tag.\r\n\r\nEscaping the contents of `style` elements _is_, however, valid (in fact, mandatory for angled brackets) in the XML syntax of HTML; and indeed, adding an `xmlns=\"http://www.w3.org/1999/xhtml\"` attribute to the `<html>` element results in valid XML. But if the intention of `ReactDOMServer` is indeed to render XML syntax, that should be explicitly noted in the documentation, because there are a number of tools (such as Next.js) which serve the output of these functions with content-type `text/html`.","updated_at":"2019-03-06T22:08:16Z","created_at":"2019-03-06T22:00:08Z","creator_user_login":"andreubotella"}
{"number":13838,"comment_id":"470296607","body":"@andreubotella This is a different problem, you should use `dangerouslySetInnerHTML`. Can an admin mark the comments as \"resolved\"?","updated_at":"2019-03-06T22:07:28Z","created_at":"2019-03-06T22:07:05Z","creator_user_login":"oliviertassinari"}
{"number":13838,"comment_id":"572899451","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-10T06:53:42Z","created_at":"2020-01-10T06:53:42Z","creator_user_login":"stale[bot]"}
{"number":13838,"comment_id":"575500893","body":"Closing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please create a new issue with up-to-date information. Thank you!\n","updated_at":"2020-01-17T06:59:46Z","created_at":"2020-01-17T06:59:46Z","creator_user_login":"stale[bot]"}
{"number":13838,"comment_id":"675120125","body":"This is not a bug in React. Using an entity reference for `&` (e.g. `&amp;`) is the correct behavior for [xhtml documents](https://www.w3.org/TR/xhtml1/guidelines.html#C_12):\r\n\r\n> In both SGML and XML, the ampersand character (\"&\") declares the beginning of an entity reference (e.g., &reg; for the registered trademark symbol \"®\"). Unfortunately, many HTML user agents have silently ignored incorrect usage of the ampersand character in HTML documents - treating ampersands that do not look like entity references as literal ampersands. XML-based user agents will not tolerate this incorrect usage, and any document that uses an ampersand incorrectly will not be \"valid\", and consequently will not conform to this specification. In order to ensure that documents are compatible with historical HTML user agents and XML-based user agents, ampersands used in a document that are to be treated as literal characters must be expressed themselves as an entity reference (e.g. \"`&amp;`\"). For example, when the `href` attribute of the a`` element refers to a CGI script that takes parameters, it must be expressed as `http://my.site.dom/cgi-bin/myscript.pl?class=guest&amp;name=user` rather than as `http://my.site.dom/cgi-bin/myscript.pl?class=guest&name=user`.\r\n\r\nIn the [HTML spec](https://html.spec.whatwg.org/) you do not need to use a character reference for `&` as long as what follows it is not a string that forms a named character reference.\r\n\r\nThe example they give is:\r\n\r\n```html\r\n<a href=\"?bill&ted\">Bill and Ted</a> <!-- &ted is ok, since it's not a named character reference -->\r\n<a href=\"?art&amp;copy\">Art and Copy</a> <!-- the & has to be escaped, since &copy is a named character reference -->\r\n```\r\n\r\nPersonally, I feel like React made the right call with escaping `&` since that works in both `XHTML` and `HTML5`.","updated_at":"2020-08-17T21:16:44Z","created_at":"2020-08-17T21:16:44Z","creator_user_login":"jbraithwaite"}
{"number":13838,"comment_id":"675259763","body":"In meta tags escaped paths don't work... otherwise, this bug would not have be opened. ","updated_at":"2020-08-18T05:31:34Z","created_at":"2020-08-18T05:29:59Z","creator_user_login":"equinusocio"}
{"number":13838,"comment_id":"675270594","body":"This is the change needed to get the behavior you expect:\r\n\r\nReplace https://github.com/facebook/react/blob/ee409ea3b577f9ff37d36ccbfc642058ad783bb0/packages/react-dom/src/server/ReactPartialRenderer.js#L383\r\n\r\nwith an escape hatch:\r\n\r\n```js\r\nif (tagVerbatim === 'meta' && propKey === 'content') {\r\n  markup = 'content=\"' + propValue + '\"';\r\n} else {\r\n  markup = createMarkupForProperty(propKey, propValue);\r\n}\r\n```\r\n\r\nThis would explicitly exempt the `meta` tag's `content` attribute from being properly escaped which wouldn't help @oliviertassinari's issue of wanting `<span data-src={'&'}></span>`.\r\n\r\nA more generic solution would involve having something like `dangerouslySetAttributes`\r\n\r\n```jsx\r\n<span\r\n  dangerouslySetAttributes={{__attributes: [{name: 'data-src', value: '&'}]}}\r\n/>\r\n```\r\n\r\nThis could easily lead to parsing errors and unexpected results if any value after the `&` is a [named character reference](https://html.spec.whatwg.org/#named-character-references) e.g. `&copy` (without the `;`)\r\n\r\nAgain, the issue was with the HTML parser FB was using for the [Sharing Debugger](https://developers.facebook.com/tools/debug), not React. It is properly parsing the escaped paths now.","updated_at":"2020-08-18T17:59:22Z","created_at":"2020-08-18T05:58:49Z","creator_user_login":"jbraithwaite"}
{"number":13838,"comment_id":"806247708","body":"@equinusocio Anything reading the meta tags from the HTML should handle decoding the HTML encoded characters that React produces here. It's a bug with anything consuming the HTML if it doesn't decode the `&amp;`s correctly. If you're trying to test your work and want to read HTML-decoded value, then in dev tools element inspector, pick the meta tag element, and in the console run `$0.content`. That will return the proper value because the browser handles HTML decoding properly as anything parsing the HTML should.","updated_at":"2022-02-23T22:40:24Z","created_at":"2021-03-24T23:25:34Z","creator_user_login":"Macil"}
{"number":13838,"comment_id":"831822113","body":"Hello, I'm having this problem and can't find any fix. I'm on React 17.0.1. Would anyone have a hint ?","updated_at":"2021-05-04T09:56:28Z","created_at":"2021-05-04T09:56:28Z","creator_user_login":"YoannBuzenet"}
{"number":13838,"comment_id":"859236290","body":"I’ve spent the last little while trying to figure out this issue since the encoded URLs cause LinkedIn to not see Open Graph images.\r\n\r\nI’ve come up with a workaround for our Gatsby site that uses `ReactDOMServer.renderToStaticMarkup`, replacing `&amp;` to `&` in the string, then rendering using `dangerouslySetInnerHTML`:\r\n\r\n```jsx\r\nconst headHtml = ReactDOMServer.renderToStaticMarkup(headComponents).replace(\r\n  /&amp;/g,\r\n  '&'\r\n)\r\n\r\nreturn (\r\n  <html>\r\n    <head dangerouslySetInnerHTML={{ __html: headHtml }} />\r\n\r\n...\r\n```\r\n\r\nAnd here’s the full html.js for a Gatsby project: https://github.com/notsidney/gatsby-meta-encoded-url-workaround/blob/main/src/html.js#L6-L25","updated_at":"2021-06-11T03:30:28Z","created_at":"2021-06-11T03:30:28Z","creator_user_login":"notsidney"}
{"number":13838,"comment_id":"913875218","body":"Do I understand correctly that the issue is primarily due to the content scrapers that don’t consider encoded characters? So the React output is technically correct but some scrapers are too naïve? Or is there a reason why React behavior is technically incorrect?","updated_at":"2021-09-06T22:34:28Z","created_at":"2021-09-06T22:34:28Z","creator_user_login":"gaearon"}
{"number":13838,"comment_id":"913877631","body":"Yes and no. For example `https://resoc.io/setup` will fail showing you an image if you provide encoded characters (that means this service is unusable for React users). Same behavior is for `Next.JS`.\r\n\r\nInspired by https://github.com/vercel/next.js/issues/2006#issuecomment-900696618 \r\n`<meta property=\"og:image\" content='/api/share?one=1&two=2' />` will become `<meta property=\"og:image\" content='/api/share?one=1&amp;two=2' />`. \r\n\r\nIn the `api/share.ts`, (automatically) parsed request (`req.query`), will become an object with keys `{ one: 1, 'amp;two': 2 }`. It is incorrectly parsed and unusable. Libraries should handle this fine, but not all of them do. It is a bigger problem, but quite unique. \r\n\r\nUnfortunately there is no easy solution (`dangerouslySetInnerHTML`, decoding escaped HTML... - it does not suit for every problem).\r\n","updated_at":"2021-09-06T22:50:23Z","created_at":"2021-09-06T22:50:23Z","creator_user_login":"ihmpavel"}
{"number":13838,"comment_id":"913892749","body":">Yes and no\r\n\r\n\"No\" to which part?\r\n\r\n>For example https://resoc.io/setup will fail showing you an image if you provide encoded characters (that means this service is unusable for React users).\r\n\r\nI understand that _particular services_ may not work. What I'm asking is — technically would you agree that the problem is on _their_ end, or is the problem unambiguously on _our_ end? I don't mean to turn this into \"not our problem, bye\" kind of argument, but I think we need to get clarity on the ideal situation before we can move forward with any plan here. So is React producing _technically correct_ output (and resoc's parser is wrong) or is React producing _technically incorrect_ output? I understand this question may not be important to your use case (it doesn't work either way) but it is important to me.\r\n\r\n>Same behavior is for Next.JS.\r\n\r\nI don't know what you mean by this. Next.JS is using React so it's expected that it would have the same behavior. You mention \"same behavior\" after resoc.io which makes it sound like you're saying Next.JS is also incorrectly parsing something, but Next.JS is _producing, not consuming_, and it's producing via React, so I'm not sure if there's any extra meaning I'm missing here. I'd expect Next.JS to not be relevant in this issue because the issue is about React behavior itself, and discussing React alone should be enough to figure out the path forward here. But maybe I missed something!\r\n\r\n>Inspired by vercel/next.js#2006 (comment) `<meta property=\"og:image\" content='/api/share?one=1&two=2' />` will become `<meta property=\"og:image\" content='/api/share?one=1&amp;two=2' />`.\r\n\r\nOK so maybe this is what you mean by \"for Next.JS\". I think you're saying: \"when the URL is encoded, the request received by my API built with Next.JS contains incorrect parameter\". However, this assertion is missing an important detail: **what exactly is sending a request to your Next.JS API?** Is this Facebook? Twitter? LinkedIn? resoc.io? This is important — I need to understand which case exactly you are trying to solve, if there is a concrete one. \r\n\r\n>In the api/share.ts, (automatically) parsed request (req.query), will become an object with keys { one: 1, 'amp;two': 2 }. It is incorrectly parsed and unusable. Libraries should handle this fine, but not all of them do.\r\n\r\nIt is unclear which libraries you're referring to here. Next.JS? I believe Next.JS's behavior is correct here — if the request itself has an encoded string, Next.JS isn't supposed to unencode it. I believe unencoding should've been done by **whatever thing that parsed your meta tag**. This is why I'm asking what is the exact service you're trying to make this work with. And whether the same problem exists for other services now. E.g. if FB and Twitter treat this correctly, I think this could be a strong enough argument that you should report the problem _to the faulty service_ instead, and have them fix it.","updated_at":"2021-09-06T23:11:04Z","created_at":"2021-09-06T23:11:04Z","creator_user_login":"gaearon"}
{"number":13838,"comment_id":"914332194","body":"In my view it's just naïve scrapers, some if which are run by Facebook, see https://github.com/facebook/react/issues/6873#issuecomment-403089412","updated_at":"2021-09-07T14:01:17Z","created_at":"2021-09-07T14:01:17Z","creator_user_login":"depoulo"}
{"number":13838,"comment_id":"958587918","body":"fwiw afaict this makes you unable to write [inline scripts in NextJS](https://github.com/vercel/next.js/issues/26240).","updated_at":"2021-11-03T01:35:42Z","created_at":"2021-11-03T01:30:23Z","creator_user_login":"devanshj"}
{"number":13838,"comment_id":"1048629521","body":"Whilst React's approach might be technically correct, it doesn't work in the real world, because we have naive scrapers, from massive organisations like LinkedIn, Slack and WhatsApp. So you can choose to be technically correct and pedantic or to have your code work, in the real world, right now. I for one choose the latter.\r\n\r\nI'm trying to get open graph images with query params to work, now I need to look for a hacky workaround because I can't go and force these massive tech organisations to \"fix\" their code.","updated_at":"2022-02-23T10:16:42Z","created_at":"2022-02-23T10:16:42Z","creator_user_login":"phawk"}
{"number":13838,"comment_id":"1049340430","body":"I'm wondering if most of the people who believe this is an issue for themselves are mistaken. I first found this issue because I was trying to figure out why Twitter wasn't showing an image from one of my `<meta>` tags. I viewed the HTML my server was rendering with React, copied the URL from the content=\"...\" part of my meta tag, and found that it didn't work in my browser, so I assumed the reason that didn't work was the same reason Twitter wasn't loading my image. However, the reason that copied URL didn't work in my browser was just because I copied the raw HTML instead of the HTML-decoded string, and it was not the reason that Twitter wasn't loading my image. The actual issue was that I wasn't using the proper set of `<meta>` tags that Twitter respected. (There were no entries in my request logs from Twitter. If the issue had been that they weren't properly doing HTML decoding, then I would have seen entries in the request logs for URLs containing `&amp;` where there should have been `&`.)\r\n\r\nI also wonder if some people are improperly HTML-encoding some strings before giving them to React and then thinking the double-encoding is caused by React doing HTML-encoding. People of both of these situations are present in the related thread https://github.com/facebook/react/issues/6873, so it seems likely that at least a decent portion of people in this thread have the same confusions.\r\n\r\nBefore suggesting putting workarounds in React for other services' parsers, we should try to be sure the problem is not one of these other dev-side confusions, we should figure out a list of services we're sure have the issue, we should try to report the issue to them first, and only then move onto figuring out workarounds if the list of services with problems is still large.\r\n\r\n---\r\n\r\nSeveral people have suggested that LinkedIn is unable to handle properly HTML-encoded meta tags, but from my tests they seem to handle things fine. I created this test HTML page:\r\n\r\n```html\r\n<!DOCTYPE html>\r\n<html>\r\n  <head>\r\n    <title>test page</title>\r\n    <meta property=\"og:title\" content=\"Title of the article\" />\r\n    <meta property=\"og:image\" content=\"/1234567.png?a=b&amp;c=e\" />\r\n    <meta\r\n      property=\"og:description\"\r\n      content=\"Description that will show in the preview\"\r\n    />\r\n  </head>\r\n  <body>\r\n    this is a test page\r\n  </body>\r\n</html>\r\n```\r\n\r\nThe HTML for the meta og:image tag has `\"/1234567.png?a=b&amp;c=e\"`, which should decode to `\"/1234567.png?a=b&c=e\"`.\r\n\r\nI made a directory, put that file as \"index.html\" in it, put a random image named \"1234567.png\" in the directory too, I ran `npx http-server .` to host that directory through a local http server, and then I ran `ngrok http 8080` to get a public URL that leads to that HTTP server. I then put the URL into https://www.linkedin.com/post-inspector/.\r\n\r\nMy local HTTP server's logs immediately showed the following, confirming that it correctly decoded:\r\n\r\n```\r\n[2022-02-23T23:33:31.661Z]  \"GET /\" \"LinkedInBot/1.0 (compatible; Mozilla/5.0; Apache-HttpClient +http://www.linkedin.com)\"\r\n[2022-02-23T23:33:32.181Z]  \"GET /1234567.png?a=b&c=e\" \"LinkedInBot/1.0 (compatible; Mozilla/5.0; Apache-HttpClient +http://www.linkedin.com)\"\r\n```\r\n\r\nAdditionally, the LinkedIn Post Inspector page correctly showed the detected image URL as `https://a126-omitted-3fb7.ngrok.io/1234567.png?a=b&c=e`.\r\n\r\nIt seems like LinkedIn is handling things correctly and working with the standard HTML-encoding behavior React is following, and that no change or workaround in React is necessary to work here with them. If there are other parts of LinkedIn that do have an issue, then the issue could be demonstrated with a test like this.","updated_at":"2022-06-16T13:44:30Z","created_at":"2022-02-23T23:49:44Z","creator_user_login":"Macil"}
{"number":13838,"comment_id":"1135577946","body":"Same issue, using `og:image` where the url uses query parameters, twitter sees these and sends them to my server which doesn't recognize `&amp;query=value` instead of `&query=value`. ","updated_at":"2022-05-24T08:38:36Z","created_at":"2022-05-24T08:38:36Z","creator_user_login":"apecollector"}
{"number":13838,"comment_id":"1157445441","body":"@apecollector  I had the similar experience with `renderToStaticMarkup` method, which escapes html tags, new line etc. I used [unescape](https://lodash.com/docs/4.17.15#unescape) from lodash to fix it.\r\n```js\r\n_.unescape('&amp;query=value');\r\n```\r\noutputs\r\n```\r\n&query=value\r\n```","updated_at":"2022-06-16T09:35:17Z","created_at":"2022-06-16T09:35:17Z","creator_user_login":"talentedandrew"}
{"number":13838,"comment_id":"1241593329","body":"Hi all, I know this is a 4 year old issue and probably most of you have probably moved on, but I'm new to it and feel I must be missing something obvious.\r\n\r\nI suspect we're all adding content security policies to our React apps by now, and those policies have a `content` value often with single quotes in them. I'm running Next.JS with static site generation, and their advice is to add it into `/pages/_document.tsx`.  But this happens:\r\n\r\n```\r\n<meta httpEquiv=\"Content-Security-Policy\" content=\"default-src 'self'\" />\r\n```\r\nbecomes\r\n```\r\n<meta httpEquiv=\"Content-Security-Policy\" content=\"default-src &amp;self&amp;\" />\r\n```\r\n\r\nWhat's the recommended way to do this in 2022?","updated_at":"2022-09-09T07:15:09Z","created_at":"2022-09-09T07:14:00Z","creator_user_login":"sc0ttdav3y"}
{"number":13838,"comment_id":"1246305603","body":"Hi, I have the same issue as @sc0ttdav3y has, but in my case single quotes are escaping with `&#x27;` (Next.JS 12.3.0, ssg).","updated_at":"2022-09-14T06:33:24Z","created_at":"2022-09-14T06:33:24Z","creator_user_login":"devilportez"}
{"number":13838,"comment_id":"1246362862","body":"(I just tried the same thing with NextJS and the exact output I got is `<meta http-equiv=\"Content-Security-Policy\" content=\"default-src &#x27;self&#x27;\"/>`, consistent with https://github.com/facebook/react/issues/13838#issuecomment-1246305603, so I'm going to assume the different value in https://github.com/facebook/react/issues/13838#issuecomment-1241593329 was a copy-paste error of some kind.)\r\n\r\n@sc0ttdav3y @devilportez It should be fine that the value is html-encoded like that. The browser will decode html entities when reading the html and interpret the value of the meta tag the same way as `\"default-src 'self'\"`. You should see the CSP policy be in effect: if you make the page use something denied by the pollicy (like inline styles and scripts, which NextJS uses by default) then an error will appear in the console.","updated_at":"2022-09-14T07:33:40Z","created_at":"2022-09-14T07:33:40Z","creator_user_login":"Macil"}
{"number":13838,"comment_id":"1469019312","body":"Still happening in `next@13.1.6` and `react@18.2.0`.\r\n\r\nKind of killing my SEO because I can't use:\r\n\r\n```html\r\n<meta property=\"og:image\" content=\"url-with-&\" />\r\n```","updated_at":"2023-03-14T23:56:57Z","created_at":"2023-03-14T23:55:59Z","creator_user_login":"BrodaNoel"}
{"number":13838,"comment_id":"1573845170","body":"I ran into this escaping issue and tried a [hack from another issue](https://stackoverflow.com/a/64635334) I had also ran into.  It seemed to have fixed the escaping for me. You get a few unnecessary `<style></style>` elements injected, but may be a better option for some than parsing the final content. YMMV\r\n\r\n```\r\n<style\r\n  dangerouslySetInnerHTML={{\r\n    __html: `</style>\r\n      ${yourCode}\r\n    <style>`,\r\n  }}\r\n></style>","updated_at":"2023-06-02T14:37:31Z","created_at":"2023-06-02T14:37:31Z","creator_user_login":"aaronbarker"}
{"number":25454,"comment_id":"1272502371","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 6fb8133ed3aa6b23063375dd345c6e413b05f0fe...e0e03eb5079ef16917ac92384c88ac6affc740cf\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 153.62 kB | 153.27 kB | = | 48.83 kB | 48.72 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 155.55 kB | 155.19 kB | = | 49.47 kB | 49.36 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactDOM-prod.classic.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 530.40 kB | 529.51 kB | = | 94.14 kB | 93.95 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactDOM-prod.modern.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 515.66 kB | 514.77 kB | = | 91.95 kB | 91.76 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactDOMForked-prod.classic.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 530.40 kB | 529.51 kB | = | 94.14 kB | 93.95 kB\n| [oss-experimental/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/jest-react/cjs/jest-react.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+6.77%** | 2.42 kB | 2.59 kB | +4.69% | 1.17 kB | 1.23 kB\n| [oss-stable-semver/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/jest-react/cjs/jest-react.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+6.77%** | 2.42 kB | 2.59 kB | +4.69% | 1.17 kB | 1.23 kB\n| [oss-stable/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/jest-react/cjs/jest-react.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+6.77%** | 2.42 kB | 2.59 kB | +4.69% | 1.17 kB | 1.23 kB\n| [oss-experimental/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/jest-react/cjs/jest-react.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+2.86%** | 10.65 kB | 10.95 kB | +1.99% | 3.77 kB | 3.84 kB\n| [oss-stable-semver/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/jest-react/cjs/jest-react.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+2.86%** | 10.65 kB | 10.95 kB | +1.99% | 3.77 kB | 3.84 kB\n| [oss-stable/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/jest-react/cjs/jest-react.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+2.86%** | 10.65 kB | 10.95 kB | +1.99% | 3.77 kB | 3.84 kB\n| [facebook-react-native/react/cjs/JSXRuntime-prod.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-react-native/react/cjs/JSXRuntime-prod.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1.43 kB | 1.27 kB | = | 0.68 kB | 0.59 kB\n| [facebook-react-native/react/cjs/JSXRuntime-profiling.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-react-native/react/cjs/JSXRuntime-profiling.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1.43 kB | 1.27 kB | = | 0.68 kB | 0.59 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react/cjs/react-jsx-runtime.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 0.86 kB | 0.75 kB | = | 0.54 kB | 0.46 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react/cjs/react-jsx-runtime.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 0.86 kB | 0.75 kB | = | 0.54 kB | 0.46 kB\n| [oss-stable/react/cjs/react-jsx-runtime.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react/cjs/react-jsx-runtime.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 0.86 kB | 0.75 kB | = | 0.54 kB | 0.46 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react/cjs/react-jsx-runtime.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 0.86 kB | 0.75 kB | = | 0.54 kB | 0.46 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react/cjs/react-jsx-runtime.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 0.86 kB | 0.75 kB | = | 0.54 kB | 0.46 kB\n| [oss-stable/react/cjs/react-jsx-runtime.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react/cjs/react-jsx-runtime.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 0.86 kB | 0.75 kB | = | 0.54 kB | 0.46 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/jest-react/cjs/jest-react.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+6.77%** | 2.42 kB | 2.59 kB | +4.69% | 1.17 kB | 1.23 kB\n| [oss-stable-semver/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/jest-react/cjs/jest-react.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+6.77%** | 2.42 kB | 2.59 kB | +4.69% | 1.17 kB | 1.23 kB\n| [oss-stable/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/jest-react/cjs/jest-react.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+6.77%** | 2.42 kB | 2.59 kB | +4.69% | 1.17 kB | 1.23 kB\n| [oss-experimental/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/jest-react/cjs/jest-react.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+2.86%** | 10.65 kB | 10.95 kB | +1.99% | 3.77 kB | 3.84 kB\n| [oss-stable-semver/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/jest-react/cjs/jest-react.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+2.86%** | 10.65 kB | 10.95 kB | +1.99% | 3.77 kB | 3.84 kB\n| [oss-stable/jest-react/cjs/jest-react.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/jest-react/cjs/jest-react.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+2.86%** | 10.65 kB | 10.95 kB | +1.99% | 3.77 kB | 3.84 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+1.70%** | 34.72 kB | 35.31 kB | +0.61% | 7.83 kB | 7.88 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+1.70%** | 34.72 kB | 35.31 kB | +0.61% | 7.83 kB | 7.88 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+1.70%** | 34.72 kB | 35.31 kB | +0.61% | 7.83 kB | 7.88 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+1.70%** | 34.85 kB | 35.44 kB | +0.60% | 7.85 kB | 7.90 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+1.70%** | 34.85 kB | 35.44 kB | +0.60% | 7.85 kB | 7.90 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+1.70%** | 34.85 kB | 35.44 kB | +0.60% | 7.85 kB | 7.90 kB\n| [facebook-www/ReactFlightDOMRelayClient-dev.classic.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactFlightDOMRelayClient-dev.classic.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.72%** | 17.55 kB | 17.68 kB | = | 4.55 kB | 4.55 kB\n| [facebook-www/ReactFlightDOMRelayClient-dev.modern.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactFlightDOMRelayClient-dev.modern.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.72%** | 17.55 kB | 17.68 kB | = | 4.55 kB | 4.55 kB\n| [facebook-relay/flight/ReactFlightNativeRelayClient-dev.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-relay/flight/ReactFlightNativeRelayClient-dev.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.72%** | 17.61 kB | 17.74 kB | +0.02% | 4.57 kB | 4.57 kB\n| [oss-experimental/react-client/cjs/react-client-flight.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-client/cjs/react-client-flight.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.62%** | 20.36 kB | 20.49 kB | +0.06% | 5.41 kB | 5.41 kB\n| [oss-stable-semver/react-client/cjs/react-client-flight.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-client/cjs/react-client-flight.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.62%** | 20.36 kB | 20.49 kB | +0.06% | 5.41 kB | 5.41 kB\n| [oss-stable/react-client/cjs/react-client-flight.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-client/cjs/react-client-flight.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.62%** | 20.36 kB | 20.49 kB | +0.06% | 5.41 kB | 5.41 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.52%** | 24.55 kB | 24.68 kB | +0.03% | 6.39 kB | 6.39 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.52%** | 24.55 kB | 24.68 kB | +0.03% | 6.39 kB | 6.39 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.52%** | 24.55 kB | 24.68 kB | +0.03% | 6.39 kB | 6.39 kB\n| [oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-client.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-client.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.51%** | 26.22 kB | 26.35 kB | = | 6.52 kB | 6.52 kB\n| [oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-client.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-client.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.51%** | 26.22 kB | 26.35 kB | = | 6.52 kB | 6.52 kB\n| [oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-client.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-client.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.51%** | 26.22 kB | 26.35 kB | = | 6.52 kB | 6.52 kB\n| [facebook-react-native/react/cjs/JSXDEVRuntime-dev.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-react-native/react/cjs/JSXDEVRuntime-dev.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.34%** | 36.93 kB | 37.06 kB | +0.06% | 10.60 kB | 10.61 kB\n| [facebook-react-native/react/cjs/JSXRuntime-dev.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-react-native/react/cjs/JSXRuntime-dev.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.34%** | 37.53 kB | 37.66 kB | +0.06% | 10.78 kB | 10.79 kB\n| [oss-experimental/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react/cjs/react-jsx-dev-runtime.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.30%** | 42.69 kB | 42.82 kB | +0.06% | 12.49 kB | 12.49 kB\n| [oss-stable-semver/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react/cjs/react-jsx-dev-runtime.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.30%** | 42.71 kB | 42.84 kB | +0.06% | 12.49 kB | 12.50 kB\n| [oss-stable/react/cjs/react-jsx-dev-runtime.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react/cjs/react-jsx-dev-runtime.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.30%** | 42.71 kB | 42.84 kB | +0.06% | 12.49 kB | 12.50 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react/cjs/react-jsx-runtime.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.29%** | 43.29 kB | 43.42 kB | +0.06% | 12.67 kB | 12.67 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react/cjs/react-jsx-runtime.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.29%** | 43.31 kB | 43.44 kB | +0.06% | 12.67 kB | 12.68 kB\n| [oss-stable/react/cjs/react-jsx-runtime.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react/cjs/react-jsx-runtime.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.29%** | 43.31 kB | 43.44 kB | +0.06% | 12.67 kB | 12.68 kB\n| [facebook-www/JSXDEVRuntime-dev.modern.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/JSXDEVRuntime-dev.modern.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.27%** | 46.52 kB | 46.64 kB | +0.05% | 13.16 kB | 13.16 kB\n| [facebook-www/JSXDEVRuntime-dev.classic.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/JSXDEVRuntime-dev.classic.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **+0.27%** | 46.52 kB | 46.65 kB | +0.04% | 13.16 kB | 13.16 kB\n| [oss-experimental/react-dom/cjs/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-dom/cjs/react-dom.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 165.03 kB | 164.67 kB | = | 51.95 kB | 51.84 kB\n| [oss-experimental/react-dom/umd/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-dom/umd/react-dom.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 164.35 kB | 164.00 kB | = | 52.46 kB | 52.33 kB\n| [oss-experimental/react-client/cjs/react-client-flight.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-client/cjs/react-client-flight.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 5.55 kB | 5.54 kB | = | 2.22 kB | 2.22 kB\n| [oss-stable-semver/react-client/cjs/react-client-flight.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-client/cjs/react-client-flight.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 5.55 kB | 5.54 kB | = | 2.22 kB | 2.22 kB\n| [oss-stable/react-client/cjs/react-client-flight.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-client/cjs/react-client-flight.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 5.55 kB | 5.54 kB | = | 2.22 kB | 2.22 kB\n| [oss-stable/react-dom/cjs/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-dom/cjs/react-dom.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 163.10 kB | 162.75 kB | = | 51.35 kB | 51.23 kB\n| [oss-stable-semver/react-dom/cjs/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-dom/cjs/react-dom.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 163.08 kB | 162.73 kB | = | 51.35 kB | 51.23 kB\n| [oss-stable/react-dom/umd/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-dom/umd/react-dom.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 162.46 kB | 162.11 kB | = | 51.82 kB | 51.72 kB\n| [oss-stable-semver/react-dom/umd/react-dom.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-dom/umd/react-dom.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 162.44 kB | 162.09 kB | = | 51.82 kB | 51.73 kB\n| [oss-experimental/react-dom/cjs/react-dom-unstable_testing.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-dom/cjs/react-dom-unstable_testing.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 159.95 kB | 159.59 kB | = | 51.28 kB | 51.16 kB\n| [oss-experimental/react-dom/umd/react-dom.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-dom/umd/react-dom.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 155.55 kB | 155.20 kB | = | 50.17 kB | 50.06 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 155.55 kB | 155.19 kB | = | 49.47 kB | 49.36 kB\n| [oss-stable/react-dom/umd/react-dom.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-dom/umd/react-dom.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 153.65 kB | 153.30 kB | = | 49.55 kB | 49.43 kB\n| [oss-stable-semver/react-dom/umd/react-dom.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-dom/umd/react-dom.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 153.63 kB | 153.27 kB | = | 49.55 kB | 49.43 kB\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 153.62 kB | 153.27 kB | = | 48.83 kB | 48.72 kB\n| [oss-stable-semver/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-dom/cjs/react-dom.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 153.60 kB | 153.25 kB | = | 48.83 kB | 48.72 kB\n| [facebook-www/ReactART-prod.classic.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactART-prod.classic.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 333.46 kB | 332.57 kB | = | 56.56 kB | 56.37 kB\n| [facebook-relay/flight/ReactFlightNativeRelayClient-prod.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-relay/flight/ReactFlightNativeRelayClient-prod.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 10.36 kB | 10.33 kB | = | 2.67 kB | 2.66 kB\n| [facebook-www/ReactFlightDOMRelayClient-prod.classic.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactFlightDOMRelayClient-prod.classic.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 10.35 kB | 10.32 kB | = | 2.66 kB | 2.66 kB\n| [facebook-www/ReactFlightDOMRelayClient-prod.modern.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactFlightDOMRelayClient-prod.modern.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 10.35 kB | 10.32 kB | = | 2.66 kB | 2.66 kB\n| [oss-experimental/react-art/umd/react-art.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-art/umd/react-art.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 128.85 kB | 128.50 kB | = | 39.89 kB | 39.74 kB\n| [facebook-www/ReactART-prod.modern.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactART-prod.modern.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 322.67 kB | 321.78 kB | = | 54.70 kB | 54.51 kB\n| [oss-stable/react-art/umd/react-art.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-art/umd/react-art.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 127.43 kB | 127.08 kB | = | 39.40 kB | 39.28 kB\n| [oss-stable-semver/react-art/umd/react-art.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-art/umd/react-art.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 127.41 kB | 127.06 kB | = | 39.40 kB | 39.28 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 12.60 kB | 12.56 kB | = | 3.76 kB | 3.75 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 12.60 kB | 12.56 kB | = | 3.76 kB | 3.75 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 12.60 kB | 12.56 kB | = | 3.76 kB | 3.75 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 12.53 kB | 12.50 kB | = | 3.74 kB | 3.73 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 12.53 kB | 12.50 kB | = | 3.74 kB | 3.73 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 12.53 kB | 12.50 kB | = | 3.74 kB | 3.73 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 115.70 kB | 115.35 kB | = | 34.76 kB | 34.64 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 114.28 kB | 113.93 kB | = | 34.35 kB | 34.23 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 114.26 kB | 113.91 kB | = | 34.33 kB | 34.21 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 106.84 kB | 106.49 kB | = | 32.60 kB | 32.49 kB\n| [oss-experimental/react-dom/cjs/react-dom-unstable_testing.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-dom/cjs/react-dom-unstable_testing.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1,195.97 kB | 1,191.99 kB | = | 265.09 kB | 264.10 kB\n| [oss-experimental/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-dom/umd/react-dom.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1,261.63 kB | 1,257.42 kB | = | 269.44 kB | 268.45 kB\n| [facebook-www/ReactDOM-dev.classic.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactDOM-dev.classic.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1,347.59 kB | 1,343.09 kB | = | 292.17 kB | 291.16 kB\n| [facebook-www/ReactDOMForked-dev.classic.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactDOMForked-dev.classic.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1,347.59 kB | 1,343.09 kB | = | 292.17 kB | 291.15 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-reconciler/cjs/react-reconciler.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 105.42 kB | 105.07 kB | = | 32.19 kB | 32.07 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-reconciler/cjs/react-reconciler.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 105.40 kB | 105.05 kB | = | 32.16 kB | 32.05 kB\n| [oss-stable/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-dom/umd/react-dom.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1,251.03 kB | 1,246.82 kB | = | 267.50 kB | 266.51 kB\n| [oss-stable-semver/react-dom/umd/react-dom.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-dom/umd/react-dom.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1,251.01 kB | 1,246.80 kB | = | 267.47 kB | 266.49 kB\n| [oss-experimental/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-dom/cjs/react-dom.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1,203.07 kB | 1,199.00 kB | = | 266.61 kB | 265.63 kB\n| [facebook-www/ReactDOM-dev.modern.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactDOM-dev.modern.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1,322.75 kB | 1,318.25 kB | = | 287.59 kB | 286.59 kB\n| [facebook-www/ReactDOMForked-dev.modern.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactDOMForked-dev.modern.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1,322.74 kB | 1,318.25 kB | = | 287.59 kB | 286.58 kB\n| [oss-stable/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-dom/cjs/react-dom.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1,193.02 kB | 1,188.95 kB | = | 264.61 kB | 263.63 kB\n| [oss-stable-semver/react-dom/cjs/react-dom.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-dom/cjs/react-dom.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1,192.99 kB | 1,188.93 kB | = | 264.58 kB | 263.60 kB\n| [facebook-www/ReactDOMTesting-dev.classic.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactDOMTesting-dev.classic.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1,226.51 kB | 1,222.01 kB | = | 270.58 kB | 269.53 kB\n| [facebook-www/ReactDOMTesting-dev.modern.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactDOMTesting-dev.modern.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1,196.63 kB | 1,192.14 kB | = | 264.81 kB | 263.80 kB\n| [oss-experimental/react-art/cjs/react-art.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-art/cjs/react-art.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 93.02 kB | 92.66 kB | = | 28.61 kB | 28.50 kB\n| [oss-stable/react-art/cjs/react-art.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-art/cjs/react-art.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 91.60 kB | 91.25 kB | = | 28.22 kB | 28.11 kB\n| [oss-stable-semver/react-art/cjs/react-art.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-art/cjs/react-art.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 91.58 kB | 91.22 kB | = | 28.22 kB | 28.11 kB\n| [react-native/implementations/ReactNativeRenderer-profiling.fb.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/react-native/implementations/ReactNativeRenderer-profiling.fb.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 357.84 kB | 356.22 kB | = | 62.85 kB | 62.38 kB\n| [react-native/implementations/ReactFabric-profiling.fb.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/react-native/implementations/ReactFabric-profiling.fb.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 351.63 kB | 350.01 kB | = | 61.78 kB | 61.31 kB\n| [react-native/implementations/ReactNativeRenderer-profiling.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/react-native/implementations/ReactNativeRenderer-profiling.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 339.52 kB | 337.90 kB | = | 59.71 kB | 59.24 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-reconciler/cjs/react-reconciler.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 850.93 kB | 846.86 kB | = | 180.37 kB | 179.37 kB\n| [oss-experimental/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-test-renderer/umd/react-test-renderer.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 778.36 kB | 774.62 kB | = | 162.35 kB | 161.41 kB\n| [oss-stable/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-test-renderer/umd/react-test-renderer.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 778.25 kB | 774.51 kB | = | 162.31 kB | 161.37 kB\n| [oss-stable-semver/react-test-renderer/umd/react-test-renderer.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-test-renderer/umd/react-test-renderer.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 778.23 kB | 774.49 kB | = | 162.28 kB | 161.35 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-reconciler/cjs/react-reconciler.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 843.12 kB | 839.06 kB | = | 178.94 kB | 177.94 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-reconciler/cjs/react-reconciler.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 843.10 kB | 839.04 kB | = | 178.92 kB | 177.92 kB\n| [react-native/implementations/ReactFabric-profiling.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/react-native/implementations/ReactFabric-profiling.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 333.29 kB | 331.67 kB | = | 58.74 kB | 58.26 kB\n| [oss-experimental/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-test-renderer/cjs/react-test-renderer.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 743.00 kB | 739.38 kB | = | 160.63 kB | 159.75 kB\n| [oss-stable/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-test-renderer/cjs/react-test-renderer.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 742.89 kB | 739.28 kB | = | 160.60 kB | 159.72 kB\n| [oss-stable-semver/react-test-renderer/cjs/react-test-renderer.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-test-renderer/cjs/react-test-renderer.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 742.87 kB | 739.25 kB | = | 160.58 kB | 159.69 kB\n| [react-native/implementations/ReactNativeRenderer-prod.fb.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/react-native/implementations/ReactNativeRenderer-prod.fb.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 330.98 kB | 329.36 kB | = | 58.65 kB | 58.18 kB\n| [react-native/implementations/ReactFabric-prod.fb.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/react-native/implementations/ReactFabric-prod.fb.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 324.83 kB | 323.21 kB | = | 57.67 kB | 57.20 kB\n| [react-native/implementations/ReactNativeRenderer-prod.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/react-native/implementations/ReactNativeRenderer-prod.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 320.24 kB | 318.62 kB | = | 56.49 kB | 56.02 kB\n| [react-native/implementations/ReactNativeRenderer-dev.fb.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/react-native/implementations/ReactNativeRenderer-dev.fb.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 881.96 kB | 877.46 kB | = | 190.76 kB | 189.81 kB\n| [react-native/implementations/ReactFabric-dev.fb.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/react-native/implementations/ReactFabric-dev.fb.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 872.44 kB | 867.94 kB | = | 188.28 kB | 187.31 kB\n| [react-native/implementations/ReactFabric-prod.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/react-native/implementations/ReactFabric-prod.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 314.09 kB | 312.47 kB | = | 55.53 kB | 55.07 kB\n| [facebook-www/ReactTestRenderer-dev.classic.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactTestRenderer-dev.classic.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 773.49 kB | 769.40 kB | = | 165.41 kB | 164.44 kB\n| [facebook-www/ReactTestRenderer-dev.modern.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactTestRenderer-dev.modern.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 773.49 kB | 769.40 kB | = | 165.41 kB | 164.44 kB\n| [react-native/implementations/ReactNativeRenderer-dev.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/react-native/implementations/ReactNativeRenderer-dev.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 845.24 kB | 840.75 kB | = | 183.63 kB | 182.66 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-profiling.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-profiling.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 302.38 kB | 300.76 kB | = | 52.93 kB | 52.46 kB\n| [react-native/implementations/ReactFabric-dev.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/react-native/implementations/ReactFabric-dev.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 835.71 kB | 831.21 kB | = | 181.18 kB | 180.19 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-dev.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-dev.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 757.09 kB | 753.00 kB | = | 162.17 kB | 161.26 kB\n| [oss-experimental/react/umd/react.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react/umd/react.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 12.83 kB | 12.76 kB | = | 4.95 kB | 4.92 kB\n| [oss-experimental/react/umd/react.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react/umd/react.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 12.83 kB | 12.76 kB | = | 4.95 kB | 4.92 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-prod.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-prod.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 286.77 kB | 285.15 kB | = | 50.58 kB | 50.12 kB\n| [oss-stable/react/umd/react.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react/umd/react.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 12.14 kB | 12.07 kB | = | 4.74 kB | 4.69 kB\n| [oss-stable/react/umd/react.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react/umd/react.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 12.14 kB | 12.07 kB | = | 4.74 kB | 4.69 kB\n| [oss-stable-semver/react/umd/react.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react/umd/react.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 12.12 kB | 12.05 kB | = | 4.72 kB | 4.67 kB\n| [oss-stable-semver/react/umd/react.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react/umd/react.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 12.12 kB | 12.05 kB | = | 4.72 kB | 4.67 kB\n| [facebook-www/React-dev.classic.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/React-dev.classic.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 128.82 kB | 127.99 kB | = | 34.08 kB | 33.72 kB\n| [oss-experimental/react/umd/react.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react/umd/react.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 124.86 kB | 124.04 kB | = | 32.21 kB | 31.90 kB\n| [facebook-www/React-dev.modern.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/React-dev.modern.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 127.73 kB | 126.90 kB | = | 33.84 kB | 33.47 kB\n| [oss-stable/react/umd/react.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react/umd/react.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 122.88 kB | 122.07 kB | = | 31.69 kB | 31.38 kB\n| [oss-stable-semver/react/umd/react.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react/umd/react.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 122.86 kB | 122.04 kB | = | 31.67 kB | 31.35 kB\n| [facebook-react-native/react/cjs/React-dev.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-react-native/react/cjs/React-dev.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 118.01 kB | 117.18 kB | = | 31.17 kB | 30.90 kB\n| [oss-experimental/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-art/umd/react-art.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 878.83 kB | 871.98 kB | = | 184.31 kB | 182.33 kB\n| [oss-experimental/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react/cjs/react.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 9.07 kB | 8.99 kB | = | 3.38 kB | 3.36 kB\n| [oss-stable/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-art/umd/react-art.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 870.58 kB | 863.73 kB | = | 182.91 kB | 180.93 kB\n| [oss-stable-semver/react-art/umd/react-art.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-art/umd/react-art.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 870.56 kB | 863.71 kB | = | 182.89 kB | 180.91 kB\n| [oss-experimental/react/cjs/react.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react/cjs/react.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 100.87 kB | 100.07 kB | = | 27.30 kB | 27.00 kB\n| [facebook-www/ReactART-dev.classic.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactART-dev.classic.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 874.61 kB | 867.56 kB | = | 184.41 kB | 182.43 kB\n| [oss-stable/react/cjs/react.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react/cjs/react.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 98.97 kB | 98.18 kB | = | 26.78 kB | 26.50 kB\n| [oss-stable-semver/react/cjs/react.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react/cjs/react.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 98.95 kB | 98.15 kB | = | 26.76 kB | 26.47 kB\n| [facebook-www/ReactART-dev.modern.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/ReactART-dev.modern.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 864.30 kB | 857.25 kB | = | 182.34 kB | 180.34 kB\n| [oss-stable/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react/cjs/react.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 8.33 kB | 8.26 kB | = | 3.16 kB | 3.13 kB\n| [oss-experimental/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react/cjs/react.shared-subset.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 8.31 kB | 8.24 kB | = | 3.40 kB | 3.37 kB\n| [oss-stable-semver/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react/cjs/react.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 8.30 kB | 8.23 kB | = | 3.14 kB | 3.11 kB\n| [oss-experimental/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-art/cjs/react-art.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 771.27 kB | 764.67 kB | = | 166.13 kB | 164.18 kB\n| [oss-stable/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-art/cjs/react-art.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 763.47 kB | 756.87 kB | = | 164.71 kB | 162.75 kB\n| [oss-stable-semver/react-art/cjs/react-art.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-art/cjs/react-art.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 763.44 kB | 756.84 kB | = | 164.70 kB | 162.73 kB\n| [oss-stable/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react/cjs/react.shared-subset.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 7.90 kB | 7.83 kB | = | 3.28 kB | 3.24 kB\n| [oss-stable-semver/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react/cjs/react.shared-subset.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 7.88 kB | 7.81 kB | = | 3.26 kB | 3.22 kB\n| [oss-experimental/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react/cjs/react.shared-subset.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 85.04 kB | 84.24 kB | = | 23.65 kB | 23.39 kB\n| [oss-stable/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react/cjs/react.shared-subset.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 83.64 kB | 82.84 kB | = | 23.23 kB | 22.96 kB\n| [oss-stable-semver/react/cjs/react.shared-subset.development.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react/cjs/react.shared-subset.development.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 83.62 kB | 82.82 kB | = | 23.21 kB | 22.93 kB\n| [oss-experimental/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-test-renderer/umd/react-test-renderer.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 99.57 kB | 98.56 kB | = | 30.95 kB | 30.65 kB\n| [oss-stable/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-test-renderer/umd/react-test-renderer.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 99.51 kB | 98.50 kB | = | 30.93 kB | 30.62 kB\n| [oss-stable-semver/react-test-renderer/umd/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-test-renderer/umd/react-test-renderer.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 99.49 kB | 98.48 kB | = | 30.93 kB | 30.62 kB\n| [oss-experimental/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 99.32 kB | 98.31 kB | = | 30.53 kB | 30.21 kB\n| [oss-stable/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 99.26 kB | 98.25 kB | = | 30.50 kB | 30.18 kB\n| [oss-stable-semver/react-test-renderer/cjs/react-test-renderer.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react-test-renderer/cjs/react-test-renderer.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 99.24 kB | 98.23 kB | = | 30.50 kB | 30.18 kB\n| [facebook-www/React-profiling.classic.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/React-profiling.classic.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 21.96 kB | 21.65 kB | = | 5.48 kB | 5.42 kB\n| [facebook-www/React-profiling.modern.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/React-profiling.modern.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 21.67 kB | 21.37 kB | = | 5.40 kB | 5.34 kB\n| [facebook-www/React-prod.classic.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/React-prod.classic.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 21.36 kB | 21.05 kB | = | 5.35 kB | 5.29 kB\n| [facebook-react-native/react/cjs/React-profiling.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-react-native/react/cjs/React-profiling.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 21.35 kB | 21.04 kB | = | 5.30 kB | 5.24 kB\n| [facebook-www/React-prod.modern.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-www/React-prod.modern.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 21.07 kB | 20.76 kB | = | 5.27 kB | 5.21 kB\n| [facebook-react-native/react/cjs/React-prod.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-react-native/react/cjs/React-prod.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 20.74 kB | 20.43 kB | = | 5.18 kB | 5.11 kB\n| [facebook-react-native/react/cjs/JSXRuntime-prod.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-react-native/react/cjs/JSXRuntime-prod.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1.43 kB | 1.27 kB | = | 0.68 kB | 0.59 kB\n| [facebook-react-native/react/cjs/JSXRuntime-profiling.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/facebook-react-native/react/cjs/JSXRuntime-profiling.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 1.43 kB | 1.27 kB | = | 0.68 kB | 0.59 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react/cjs/react-jsx-runtime.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 0.86 kB | 0.75 kB | = | 0.54 kB | 0.46 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react/cjs/react-jsx-runtime.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 0.86 kB | 0.75 kB | = | 0.54 kB | 0.46 kB\n| [oss-stable/react/cjs/react-jsx-runtime.production.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react/cjs/react-jsx-runtime.production.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 0.86 kB | 0.75 kB | = | 0.54 kB | 0.46 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-experimental/react/cjs/react-jsx-runtime.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 0.86 kB | 0.75 kB | = | 0.54 kB | 0.46 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable-semver/react/cjs/react-jsx-runtime.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 0.86 kB | 0.75 kB | = | 0.54 kB | 0.46 kB\n| [oss-stable/react/cjs/react-jsx-runtime.profiling.min.js](https://react-builds.vercel.app/commits/e0e03eb5079ef16917ac92384c88ac6affc740cf/files/oss-stable/react/cjs/react-jsx-runtime.profiling.min.js?compare=6fb8133ed3aa6b23063375dd345c6e413b05f0fe) | **=** | 0.86 kB | 0.75 kB | = | 0.54 kB | 0.46 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against e0e03eb5079ef16917ac92384c88ac6affc740cf\n</p>\n","updated_at":"2022-11-17T10:29:25Z","created_at":"2022-10-09T09:45:07Z","creator_user_login":"sizebot"}
{"number":24594,"comment_id":"1134791035","body":"> What priority should we use for root.render or hydrateRoot?\r\n\r\nIt's the same as any other setState. Shouldn't need to do anything special.\r\n\r\n> How should we mock/test requestAnimationFrame (it doesn't flush with timers in jsdom)?\r\n\r\nDon't need to for our tests unless we're testing the behavior of React DOM specifically. In the open source build, people will either use `act` which bypasses it completely, or write e2e tests that do whatever the browser does.\r\n\r\n> Should ReactNoopRenderer include a rAF mock?\r\n\r\nNah I can't think of any reason why it should\r\n\r\n> Is the HostConfig the right place for scheduleAnimationFrame like schedulePostTask\r\n\r\nSounds right to me, that's where `scheduleMicrotask` already is\r\n\r\n>  Do we want to feature flag all added UnknownLane code, or just where we set the priority?\r\n\r\nThe only place in the reconciler where there should be a fork in behavior is in `ensureRootIsScheduled`. See: https://github.com/facebook/react/pull/24594#discussion_r879540758.\r\n\r\n> Are there more tests we should write for this behavior?\r\n\r\nThe main ones I can think of are\r\n\r\n- Unknown update followed by default update is batched, scheduled with rAF\r\n- Default update followed by unknown update is batched, scheduled with rAF\r\n- When allowConcurrentByDefault is enabled, unknown updates should be time sliced","updated_at":"2022-05-31T15:08:22Z","created_at":"2022-05-23T15:03:34Z","creator_user_login":"acdlite"}
{"number":24594,"comment_id":"1134815880","body":"Thanks for all the answers @acdlite!\r\n\r\n> don't think we should add a new lane.\r\n\r\nMy bad, I must have misheard that we wanted a separate lane. I'll switch this to a FiberRoot flag 👍\r\n\r\n> It's the same as any other setState. Shouldn't need to do anything special.\r\n\r\nWhen `render` is called `window.event` can be undefined, so should these updates be scheduled in a `rAF` when that happens?","updated_at":"2022-05-23T15:24:08Z","created_at":"2022-05-23T15:24:08Z","creator_user_login":"rickhanlonii"}
{"number":24594,"comment_id":"1134878035","body":"> When render is called window.event can be undefined, so should these updates be scheduled in a rAF when that happens?\r\n\r\nYeah I think so","updated_at":"2022-05-23T16:18:20Z","created_at":"2022-05-23T16:18:20Z","creator_user_login":"acdlite"}
{"number":24594,"comment_id":"1138668937","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 8186b19378d9085fcdec32c42e2ec8845c1f8ce0...7d03b2396bef083fe93a83483aa66638deb9c7e4\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **+0.16%** | 131.76 kB | 131.97 kB | +0.20% | 42.31 kB | 42.39 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **+0.73%** | 137.03 kB | 138.04 kB | +0.66% | 43.90 kB | 44.19 kB\n| facebook-www/ReactDOM-prod.classic.js | **+0.79%** | 441.08 kB | 444.58 kB | +0.80% | 80.68 kB | 81.33 kB\n| facebook-www/ReactDOM-prod.modern.js | **+0.82%** | 426.39 kB | 429.89 kB | +0.85% | 78.49 kB | 79.15 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **+0.79%** | 441.79 kB | 445.29 kB | +0.80% | 80.90 kB | 81.55 kB\n| oss-experimental/jest-react/cjs/jest-react.production.min.js | **+7.22%** | 2.35 kB | 2.52 kB | +3.24% | 1.14 kB | 1.18 kB\n| oss-stable-semver/jest-react/cjs/jest-react.production.min.js | **+7.22%** | 2.35 kB | 2.52 kB | +3.24% | 1.14 kB | 1.18 kB\n| oss-stable/jest-react/cjs/jest-react.production.min.js | **+7.22%** | 2.35 kB | 2.52 kB | +3.24% | 1.14 kB | 1.18 kB\n| oss-experimental/jest-react/cjs/jest-react.development.js | **+2.84%** | 9.93 kB | 10.21 kB | +1.48% | 3.46 kB | 3.51 kB\n| oss-stable-semver/jest-react/cjs/jest-react.development.js | **+2.84%** | 9.93 kB | 10.21 kB | +1.48% | 3.46 kB | 3.51 kB\n| oss-stable/jest-react/cjs/jest-react.development.js | **+2.84%** | 9.93 kB | 10.21 kB | +1.48% | 3.46 kB | 3.51 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-experimental/jest-react/cjs/jest-react.production.min.js | **+7.22%** | 2.35 kB | 2.52 kB | +3.24% | 1.14 kB | 1.18 kB\n| oss-stable-semver/jest-react/cjs/jest-react.production.min.js | **+7.22%** | 2.35 kB | 2.52 kB | +3.24% | 1.14 kB | 1.18 kB\n| oss-stable/jest-react/cjs/jest-react.production.min.js | **+7.22%** | 2.35 kB | 2.52 kB | +3.24% | 1.14 kB | 1.18 kB\n| oss-experimental/jest-react/cjs/jest-react.development.js | **+2.84%** | 9.93 kB | 10.21 kB | +1.48% | 3.46 kB | 3.51 kB\n| oss-stable-semver/jest-react/cjs/jest-react.development.js | **+2.84%** | 9.93 kB | 10.21 kB | +1.48% | 3.46 kB | 3.51 kB\n| oss-stable/jest-react/cjs/jest-react.development.js | **+2.84%** | 9.93 kB | 10.21 kB | +1.48% | 3.46 kB | 3.51 kB\n| facebook-www/ReactDOM-prod.modern.js | **+0.82%** | 426.39 kB | 429.89 kB | +0.85% | 78.49 kB | 79.15 kB\n| facebook-www/ReactDOMForked-prod.modern.js | **+0.82%** | 427.11 kB | 430.61 kB | +0.85% | 78.69 kB | 79.36 kB\n| facebook-www/ReactDOM-prod.classic.js | **+0.79%** | 441.08 kB | 444.58 kB | +0.80% | 80.68 kB | 81.33 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **+0.79%** | 441.79 kB | 445.29 kB | +0.80% | 80.90 kB | 81.55 kB\n| facebook-www/ReactDOM-profiling.modern.js | **+0.77%** | 457.14 kB | 460.68 kB | +0.77% | 82.99 kB | 83.63 kB\n| facebook-www/ReactDOMForked-profiling.modern.js | **+0.77%** | 457.87 kB | 461.41 kB | +0.80% | 83.18 kB | 83.84 kB\n| facebook-www/ReactIs-dev.modern.js | **+0.75%** | 9.98 kB | 10.05 kB | +0.50% | 2.58 kB | 2.59 kB\n| facebook-www/ReactIs-dev.classic.js | **+0.75%** | 9.98 kB | 10.05 kB | +0.46% | 2.58 kB | 2.59 kB\n| facebook-www/ReactDOM-profiling.classic.js | **+0.75%** | 471.90 kB | 475.44 kB | +0.78% | 85.25 kB | 85.91 kB\n| facebook-www/ReactDOMForked-profiling.classic.js | **+0.75%** | 472.61 kB | 476.15 kB | +0.77% | 85.47 kB | 86.13 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **+0.73%** | 137.03 kB | 138.04 kB | +0.66% | 43.90 kB | 44.19 kB\n| oss-experimental/react-noop-renderer/cjs/react-noop-renderer.production.min.js | **+0.73%** | 12.34 kB | 12.43 kB | +0.73% | 3.68 kB | 3.71 kB\n| oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.production.min.js | **+0.73%** | 12.34 kB | 12.43 kB | +0.73% | 3.68 kB | 3.71 kB\n| oss-stable/react-noop-renderer/cjs/react-noop-renderer.production.min.js | **+0.73%** | 12.34 kB | 12.43 kB | +0.73% | 3.68 kB | 3.71 kB\n| oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js | **+0.73%** | 12.41 kB | 12.50 kB | +0.70% | 3.70 kB | 3.73 kB\n| oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js | **+0.73%** | 12.41 kB | 12.50 kB | +0.70% | 3.70 kB | 3.73 kB\n| oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js | **+0.73%** | 12.41 kB | 12.50 kB | +0.70% | 3.70 kB | 3.73 kB\n| oss-experimental/react-dom/cjs/react-dom-unstable_testing.production.min.js | **+0.71%** | 140.55 kB | 141.55 kB | +0.63% | 45.39 kB | 45.68 kB\n| oss-experimental/react-dom/cjs/react-dom.profiling.min.js | **+0.68%** | 146.46 kB | 147.46 kB | +0.61% | 46.36 kB | 46.64 kB\n| oss-experimental/react-dom/umd/react-dom.production.min.js | **+0.63%** | 137.08 kB | 137.94 kB | +0.68% | 44.52 kB | 44.82 kB\n| facebook-www/ReactART-prod.modern.js | **+0.62%** | 268.91 kB | 270.57 kB | +0.61% | 48.00 kB | 48.29 kB\n| facebook-www/ReactART-prod.classic.js | **+0.60%** | 279.73 kB | 281.40 kB | +0.60% | 49.74 kB | 50.04 kB\n| oss-experimental/react-dom/umd/react-dom.profiling.min.js | **+0.59%** | 145.79 kB | 146.65 kB | +0.75% | 46.80 kB | 47.15 kB\n| facebook-www/ReactFlightDOMRelayClient-dev.modern.js | **+0.58%** | 12.94 kB | 13.01 kB | +0.34% | 3.80 kB | 3.82 kB\n| facebook-www/ReactFlightDOMRelayClient-dev.classic.js | **+0.58%** | 12.94 kB | 13.01 kB | +0.37% | 3.80 kB | 3.82 kB\n| oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js | **+0.53%** | 97.83 kB | 98.35 kB | +0.57% | 30.06 kB | 30.23 kB\n| facebook-www/ReactART-dev.modern.js | **+0.52%** | 764.25 kB | 768.26 kB | +0.43% | 163.17 kB | 163.87 kB\n| facebook-www/ReactART-dev.classic.js | **+0.52%** | 774.47 kB | 778.48 kB | +0.43% | 165.30 kB | 166.00 kB\n| facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-prod.js | **+0.50%** | 258.58 kB | 259.87 kB | +0.41% | 47.24 kB | 47.43 kB\n| oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js | **+0.49%** | 106.66 kB | 107.18 kB | +0.64% | 32.29 kB | 32.50 kB\n| facebook-www/ReactDOM-dev.modern.js | **+0.48%** | 1,133.14 kB | 1,138.60 kB | +0.42% | 250.40 kB | 251.44 kB\n| facebook-www/ReactDOMForked-dev.modern.js | **+0.48%** | 1,135.91 kB | 1,141.37 kB | +0.42% | 251.41 kB | 252.45 kB\n| facebook-www/ReactDOM-dev.classic.js | **+0.47%** | 1,156.65 kB | 1,162.11 kB | +0.41% | 254.82 kB | 255.87 kB\n| facebook-www/ReactDOMForked-dev.classic.js | **+0.47%** | 1,159.41 kB | 1,164.88 kB | +0.40% | 255.85 kB | 256.89 kB\n| facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-profiling.js | **+0.47%** | 273.66 kB | 274.94 kB | +0.41% | 49.50 kB | 49.70 kB\n| oss-experimental/react-reconciler/cjs/react-reconciler.development.js | **+0.42%** | 774.22 kB | 777.45 kB | +0.33% | 164.73 kB | 165.26 kB\n| oss-experimental/react-dom/cjs/react-dom-unstable_testing.development.js | **+0.41%** | 1,038.74 kB | 1,043.03 kB | +0.34% | 233.92 kB | 234.73 kB\n| react-native/implementations/ReactFabric-prod.js | **+0.41%** | 287.99 kB | 289.16 kB | +0.41% | 52.19 kB | 52.40 kB\n| oss-experimental/react-dom/cjs/react-dom.development.js | **+0.41%** | 1,056.42 kB | 1,060.71 kB | +0.35% | 236.45 kB | 237.28 kB\n| oss-experimental/react-dom/umd/react-dom.development.js | **+0.40%** | 1,108.39 kB | 1,112.80 kB | +0.37% | 239.03 kB | 239.91 kB\n| react-native/implementations/ReactFabric-prod.fb.js | **+0.40%** | 296.07 kB | 297.25 kB | +0.39% | 53.78 kB | 53.99 kB\n| react-native/implementations/ReactFabric-profiling.js | **+0.38%** | 307.17 kB | 308.35 kB | +0.37% | 55.42 kB | 55.62 kB\n| react-native/implementations/ReactNativeRenderer-prod.js | **+0.38%** | 295.02 kB | 296.14 kB | +0.32% | 53.31 kB | 53.48 kB\n| react-native/implementations/ReactNativeRenderer-prod.fb.js | **+0.37%** | 303.15 kB | 304.27 kB | +0.33% | 54.89 kB | 55.07 kB\n| react-native/implementations/ReactFabric-profiling.fb.js | **+0.36%** | 323.18 kB | 324.36 kB | +0.33% | 58.06 kB | 58.25 kB\n| react-native/implementations/ReactNativeRenderer-profiling.js | **+0.36%** | 314.28 kB | 315.40 kB | +0.32% | 56.43 kB | 56.61 kB\n| react-native/implementations/ReactNativeRenderer-profiling.fb.js | **+0.34%** | 330.34 kB | 331.46 kB | +0.31% | 59.11 kB | 59.29 kB\n| oss-experimental/react-noop-renderer/cjs/react-noop-renderer.development.js | **+0.34%** | 34.45 kB | 34.56 kB | +0.34% | 7.75 kB | 7.78 kB\n| oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.development.js | **+0.34%** | 34.45 kB | 34.56 kB | +0.34% | 7.75 kB | 7.78 kB\n| oss-stable/react-noop-renderer/cjs/react-noop-renderer.development.js | **+0.34%** | 34.45 kB | 34.56 kB | +0.34% | 7.75 kB | 7.78 kB\n| oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js | **+0.34%** | 34.58 kB | 34.70 kB | +0.32% | 7.77 kB | 7.80 kB\n| oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js | **+0.34%** | 34.58 kB | 34.70 kB | +0.32% | 7.77 kB | 7.80 kB\n| oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js | **+0.34%** | 34.58 kB | 34.70 kB | +0.32% | 7.77 kB | 7.80 kB\n| facebook-www/ReactDOMTesting-prod.modern.js | **+0.33%** | 416.72 kB | 418.09 kB | +0.28% | 78.35 kB | 78.57 kB\n| facebook-www/ReactFreshRuntime-dev.modern.js | **+0.33%** | 22.93 kB | 23.00 kB | +0.18% | 6.67 kB | 6.68 kB\n| facebook-www/ReactFreshRuntime-dev.classic.js | **+0.33%** | 22.93 kB | 23.00 kB | +0.18% | 6.67 kB | 6.68 kB\n| facebook-www/ReactDOMTesting-prod.classic.js | **+0.31%** | 432.82 kB | 434.18 kB | +0.27% | 80.79 kB | 81.01 kB\n| oss-experimental/react-art/cjs/react-art.production.min.js | **+0.28%** | 86.65 kB | 86.90 kB | +0.56% | 26.88 kB | 27.03 kB\n| facebook-www/ReactTestRenderer-dev.modern.js | **+0.27%** | 707.46 kB | 709.39 kB | +0.20% | 152.29 kB | 152.60 kB\n| facebook-www/ReactTestRenderer-dev.classic.js | **+0.27%** | 707.46 kB | 709.39 kB | +0.20% | 152.29 kB | 152.60 kB\n| oss-stable-semver/react-reconciler/cjs/react-reconciler.development.js | **+0.27%** | 746.67 kB | 748.70 kB | +0.20% | 158.94 kB | 159.27 kB\n| oss-stable/react-reconciler/cjs/react-reconciler.development.js | **+0.27%** | 746.70 kB | 748.73 kB | +0.20% | 158.97 kB | 159.29 kB\n| oss-experimental/react-test-renderer/cjs/react-test-renderer.development.js | **+0.27%** | 671.76 kB | 673.56 kB | +0.20% | 146.73 kB | 147.03 kB\n| facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-dev.js | **+0.27%** | 685.95 kB | 687.79 kB | +0.17% | 148.41 kB | 148.66 kB\n| oss-experimental/react-test-renderer/cjs/react-test-renderer.production.min.js | **+0.27%** | 91.78 kB | 92.02 kB | +0.53% | 28.34 kB | 28.49 kB\n| oss-experimental/react-test-renderer/umd/react-test-renderer.development.js | **+0.27%** | 703.91 kB | 705.78 kB | +0.20% | 148.42 kB | 148.72 kB\n| oss-experimental/react-test-renderer/umd/react-test-renderer.production.min.js | **+0.26%** | 92.06 kB | 92.30 kB | +0.48% | 28.75 kB | 28.89 kB\n| oss-experimental/react-art/cjs/react-art.development.js | **+0.25%** | 711.11 kB | 712.91 kB | +0.20% | 153.61 kB | 153.92 kB\n| oss-stable-semver/react-reconciler/cjs/react-reconciler.production.min.js | **+0.25%** | 92.95 kB | 93.18 kB | +0.36% | 28.62 kB | 28.72 kB\n| oss-stable/react-reconciler/cjs/react-reconciler.production.min.js | **+0.25%** | 92.98 kB | 93.21 kB | +0.36% | 28.64 kB | 28.74 kB\n| react-native/implementations/ReactFabric-dev.js | **+0.24%** | 766.33 kB | 768.15 kB | +0.16% | 167.72 kB | 168.00 kB\n| react-native/implementations/ReactFabric-dev.fb.js | **+0.23%** | 802.93 kB | 804.79 kB | +0.16% | 174.20 kB | 174.49 kB\n| oss-experimental/react-art/umd/react-art.development.js | **+0.23%** | 816.04 kB | 817.91 kB | +0.18% | 171.80 kB | 172.12 kB\n| oss-stable-semver/react-reconciler/cjs/react-reconciler.profiling.min.js | **+0.23%** | 101.77 kB | 102.00 kB | +0.27% | 30.91 kB | 30.99 kB\n| oss-stable/react-reconciler/cjs/react-reconciler.profiling.min.js | **+0.23%** | 101.80 kB | 102.03 kB | +0.27% | 30.93 kB | 31.01 kB\n| oss-stable-semver/react-test-renderer/cjs/react-test-renderer.development.js | **+0.22%** | 646.16 kB | 647.61 kB | +0.15% | 141.48 kB | 141.69 kB\n| oss-stable/react-test-renderer/cjs/react-test-renderer.development.js | **+0.22%** | 646.19 kB | 647.63 kB | +0.15% | 141.50 kB | 141.72 kB\n| oss-stable-semver/react-test-renderer/umd/react-test-renderer.development.js | **+0.22%** | 677.01 kB | 678.52 kB | +0.16% | 143.07 kB | 143.30 kB\n| oss-stable/react-test-renderer/umd/react-test-renderer.development.js | **+0.22%** | 677.04 kB | 678.54 kB | +0.16% | 143.10 kB | 143.32 kB\n| react-native/implementations/ReactNativeRenderer-dev.js | **+0.22%** | 776.39 kB | 778.11 kB | +0.15% | 170.08 kB | 170.34 kB\n| oss-stable-semver/react-art/cjs/react-art.production.min.js | **+0.22%** | 81.85 kB | 82.03 kB | +0.27% | 25.46 kB | 25.53 kB\n| oss-stable/react-art/cjs/react-art.production.min.js | **+0.22%** | 81.88 kB | 82.06 kB | +0.27% | 25.46 kB | 25.53 kB\n| react-native/implementations/ReactNativeRenderer-dev.fb.js | **+0.22%** | 813.06 kB | 814.82 kB | +0.14% | 176.68 kB | 176.94 kB\n| facebook-www/ReactDOMTesting-dev.modern.js | **+0.21%** | 1,038.24 kB | 1,040.44 kB | +0.14% | 233.47 kB | 233.80 kB\n| oss-stable-semver/react-art/cjs/react-art.development.js | **+0.21%** | 683.84 kB | 685.29 kB | +0.14% | 147.92 kB | 148.13 kB\n| oss-stable/react-art/cjs/react-art.development.js | **+0.21%** | 683.86 kB | 685.31 kB | +0.14% | 147.94 kB | 148.15 kB\n| oss-stable-semver/react-test-renderer/cjs/react-test-renderer.production.min.js | **+0.21%** | 87.32 kB | 87.50 kB | +0.30% | 27.04 kB | 27.12 kB\n| oss-stable/react-test-renderer/cjs/react-test-renderer.production.min.js | **+0.21%** | 87.35 kB | 87.53 kB | +0.30% | 27.04 kB | 27.12 kB\n| facebook-www/ReactDOMTesting-dev.classic.js | **+0.21%** | 1,066.86 kB | 1,069.07 kB | +0.15% | 239.26 kB | 239.61 kB\n| oss-stable-semver/react-test-renderer/umd/react-test-renderer.production.min.js | **+0.20%** | 87.60 kB | 87.78 kB | +0.32% | 27.46 kB | 27.55 kB\n| oss-stable/react-test-renderer/umd/react-test-renderer.production.min.js | **+0.20%** | 87.62 kB | 87.80 kB | +0.32% | 27.46 kB | 27.55 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 7d03b2396bef083fe93a83483aa66638deb9c7e4\n</p>\n","updated_at":"2022-06-15T16:12:24Z","created_at":"2022-05-26T14:56:36Z","creator_user_login":"sizebot"}
{"number":24594,"comment_id":"1139209886","body":"I believe this is ready for another review 🤝","updated_at":"2022-05-27T02:05:02Z","created_at":"2022-05-27T02:05:02Z","creator_user_login":"rickhanlonii"}
{"number":13559,"comment_id":"418561370","body":"Type: Umbrella, ella, ella, eh, eh","updated_at":"2018-09-05T00:37:53Z","created_at":"2018-09-05T00:37:53Z","creator_user_login":"bvaughn"}
{"number":13559,"comment_id":"433266233","body":"I would like to ask when is the official release?","updated_at":"2018-10-26T02:32:07Z","created_at":"2018-10-26T02:31:37Z","creator_user_login":"janryWang"}
{"number":13559,"comment_id":"433407972","body":"We don't know a release date yet, sorry.","updated_at":"2018-10-26T13:30:10Z","created_at":"2018-10-26T13:30:10Z","creator_user_login":"bvaughn"}
{"number":13559,"comment_id":"433454239","body":"Okay thanks.","updated_at":"2018-10-26T15:49:43Z","created_at":"2018-10-26T15:49:43Z","creator_user_login":"janryWang"}
{"number":25939,"comment_id":"1367275654","body":"Same, it is not working since a full month. Works fine in other browsers.\r\nI tried reinstalling the extension several times and it didn't help.\r\n![image](https://user-images.githubusercontent.com/84586440/209949147-84cd7b4a-1312-4664-a8c2-839b1037b70b.png)\r\n ","updated_at":"2022-12-29T12:09:15Z","created_at":"2022-12-29T12:09:15Z","creator_user_login":"Konigj"}
{"number":25939,"comment_id":"1372982562","body":"I am having the same issue. Anyone got a solution to this Loading React issue? ","updated_at":"2023-01-06T00:41:16Z","created_at":"2023-01-06T00:41:16Z","creator_user_login":"IqbalAhmadi"}
{"number":25939,"comment_id":"1373047927","body":"Same here but only at work. Works fine on personal computer.\r\n\r\nTested on react website.\r\nIn both cases Chrome 108 and extension version 4.27.1\r\n\r\nWhen I inspect the devtools inspector I can see following errors in console:\r\n![image](https://user-images.githubusercontent.com/96032/210915429-a6c056ad-1ddd-49fc-9c70-71c0d93b438c.png)\r\n","updated_at":"2023-01-06T02:09:42Z","created_at":"2023-01-06T02:09:42Z","creator_user_login":"mwisnicki"}
{"number":25939,"comment_id":"1373051288","body":"This is probably the same as #25818","updated_at":"2023-01-06T02:13:53Z","created_at":"2023-01-06T02:13:53Z","creator_user_login":"mwisnicki"}
{"number":25939,"comment_id":"1374948822","body":"I think computer restart helped with mine. Same chrome version but now works.","updated_at":"2023-01-08T22:49:34Z","created_at":"2023-01-08T22:49:34Z","creator_user_login":"mwisnicki"}
{"number":25939,"comment_id":"1375731596","body":"To fix this problem, you can update Chrome browser. \r\nI could not update it from the Settings > About Chrome page, so I just downloaded Chrome again, then installed it and it was fixed. \r\n","updated_at":"2023-01-09T14:45:56Z","created_at":"2023-01-09T14:45:56Z","creator_user_login":"Konigj"}
{"number":25939,"comment_id":"1440035475","body":"Seeing this with Chrome 110.0.5481.100, DevTools version: 4.27.2-1a88fbb67","updated_at":"2023-02-22T13:40:18Z","created_at":"2023-02-22T13:40:18Z","creator_user_login":"johnhunter"}
{"number":25939,"comment_id":"1442524077","body":"I have the same problem as @johnhunter, I see this exception in the console.\r\n\r\n<img width=\"401\" alt=\"Screenshot 2023-02-23 at 4 40 23 PM\" src=\"https://user-images.githubusercontent.com/7662849/221047037-6debabd0-a271-4572-a08d-8b638911281b.png\">\r\n","updated_at":"2023-02-23T22:41:05Z","created_at":"2023-02-23T22:38:56Z","creator_user_login":"aagarw33"}
{"number":25939,"comment_id":"1451322617","body":"On Windows this issue caused a BSOD for me. ","updated_at":"2023-03-02T05:29:23Z","created_at":"2023-03-02T05:29:23Z","creator_user_login":"gmanc2"}
{"number":25939,"comment_id":"1490145423","body":"Still happening for me with Chrome Version 111.0.5563.146, extension Version 4.27.3\r\n\r\nThis is on localhost. The following workaround is less than ideal but gets me out of a bind:\r\n\r\n- Close devtools panel\r\n- Go to the extension details\r\n- Toggle the extension off and on again\r\n- open devtools panel again\r\n- reload the page\r\n\r\nSeems worse the bigger the React app is. The workaround restores functionality for a while but it ends up failing again after a while.\r\n\r\nSeems similar to https://github.com/facebook/react/blob/main/packages/react-devtools/README.md#the-issue-with-chrome-v101-and-earlier but obviously were all on later versions.","updated_at":"2023-03-31T10:59:18Z","created_at":"2023-03-30T11:34:26Z","creator_user_login":"johnhunter"}
{"number":25939,"comment_id":"1491702260","body":"Same here. Chrome Version 111.0.5563.147. On localhost. Next JS 13 project. @johnhunter s solution worked for me for a bit.","updated_at":"2023-03-31T10:31:36Z","created_at":"2023-03-31T10:31:36Z","creator_user_login":"anders-kaffia"}
{"number":25939,"comment_id":"1523999947","body":"Closing as duplicate of https://github.com/facebook/react/issues/25818, lets consolidate conversation there.","updated_at":"2023-04-26T20:23:11Z","created_at":"2023-04-26T20:23:11Z","creator_user_login":"hoxyq"}
{"number":25939,"comment_id":"1584900183","body":"Remove the extension and install it again.\r\n","updated_at":"2023-06-09T17:08:56Z","created_at":"2023-06-09T17:08:56Z","creator_user_login":"wproman"}
{"number":25939,"comment_id":"1600407100","body":"> Remove the extension and install it again.\r\n\r\nThis did not resolve the problem. Still happening with fresh install of extension 4.27.8 and Chrome 114.0.5735.133","updated_at":"2023-06-21T08:24:14Z","created_at":"2023-06-21T08:24:14Z","creator_user_login":"johnhunter"}
{"number":25939,"comment_id":"1600413474","body":"@hoxyq can we reopen this issue please. It does not appear to be resolved and the behaviour is different from #25818 - thanks.","updated_at":"2023-06-21T08:28:48Z","created_at":"2023-06-21T08:28:48Z","creator_user_login":"johnhunter"}
{"number":25939,"comment_id":"1600544936","body":"> @hoxyq can we reopen this issue please. It does not appear to be resolved and the behaviour is different from #25818 - thanks.\r\n\r\nThanks for notifying. Opening only this one, lets keep all discussion here.\r\n\r\nI need more information about the problem:\r\n1. Any chance you have reproducible example? Or more details on when exactly it gets stuck?\r\n2. When it gets stuck, can you please check if there are some errors in Chrome's DevTools console? Not your application's console, but Chrome's DevTools, here is step by step description on how to do it:\r\n    2.1. Open a page with your application and open Chrome DevTools panel\r\n    2.2. Undock the panel into separate window (if not already)\r\n    2.3. Open React DevTools components tab\r\n    2.4. Open Chrome DevTools panel again (a separate one, you will have 2 after it). This one should attach to Chrome's DevTools process, which we can debug now and check if there are some errors in console.","updated_at":"2023-06-21T09:58:01Z","created_at":"2023-06-21T09:57:27Z","creator_user_login":"hoxyq"}
{"number":25939,"comment_id":"1600663533","body":"> I need more information about the problem\r\n\r\nThanks. I see a lot of `TimeoutError: Timed out while inspecting element nnn` errors once I undock the panel. But so far closing and reopening the DevTools seems to reload the react tree ok. I'll see if I can reproduce the issue over the day and report back.","updated_at":"2023-06-21T11:28:32Z","created_at":"2023-06-21T11:27:53Z","creator_user_login":"johnhunter"}
{"number":25939,"comment_id":"1600715035","body":"When the stuck condition occurs; undocking the panel and opening the console shows the following:\r\n<img width=\"955\" alt=\"image\" src=\"https://github.com/facebook/react/assets/219160/20fe5c4c-7bd5-4d92-b8f7-a5bb5f444f82\">\r\n\r\nClosing and reopening the DevTools panel seems to reset the tree. This is different to the initial problem where I had to toggle the extension off and on to reset the tree.\r\n\r\nSo definitely an improvement but still occurring. Its happening on a large React app that I cannot share and so far has been difficult to create a repro case. Hopefully the console output can help narrow down the issue.","updated_at":"2023-06-21T12:07:16Z","created_at":"2023-06-21T12:07:16Z","creator_user_login":"johnhunter"}
{"number":25939,"comment_id":"1600730197","body":"> When the stuck condition occurs; undocking the panel and opening the console shows the following: <img alt=\"image\" width=\"955\" src=\"https://user-images.githubusercontent.com/219160/247539507-20fe5c4c-7bd5-4d92-b8f7-a5bb5f444f82.png\">\r\n> \r\n> Closing and reopening the DevTools panel seems to reset the tree. This is different to the initial problem where I had to toggle the extension off and on to reset the tree.\r\n> \r\n> So definitely an improvement but still occurring. Its happening on a large React app that I cannot share and so far has been difficult to create a repro case. Hopefully the console output can help narrow down the issue.\r\n\r\nThanks, timeout errors probably the product of the stuck condition, but not its reason\r\n\r\nIn your screenshot, you are capturing the console of your application, you should open a second one for the Chrome's DevTools, where extension might report something, here is the example:\r\n<img width=\"860\" alt=\"Screenshot 2023-06-21 at 13 14 49\" src=\"https://github.com/facebook/react/assets/28902667/b70233cb-7bd6-473d-94ff-5cababb61439\">\r\n\r\nCheck out the title of this window\r\n","updated_at":"2023-06-21T12:18:15Z","created_at":"2023-06-21T12:18:15Z","creator_user_login":"hoxyq"}
{"number":25939,"comment_id":"1602214520","body":"Yep, that was the console in the screenshot. Here is the issue reproduced again.\r\n<img width=\"1372\" alt=\"image\" src=\"https://github.com/facebook/react/assets/219160/29a62450-1ef4-4309-b104-a8bd03263498\">\r\n\r\nIn this case the error log did not appear until I selected another DevTools panel tab and then reselected the react Components tab (that also triggered the unrelated violation warning). The \"stuck\" message appeared in the react panel the whole time.\r\n","updated_at":"2023-06-22T08:17:53Z","created_at":"2023-06-22T08:17:53Z","creator_user_login":"johnhunter"}
{"number":25939,"comment_id":"1676617296","body":"I'm getting the same behavior as the OP. I am using the stand alone server with a React plugin in Obsidian.md. Obsidian is built off of electron. It was working before but I recently upgraded my version of Obsidian.\r\n\r\nreact: 18.2.0\r\nreact-dom: 18.2.0\r\nreact-devtools: 4.28.0\r\nelectron: 24.3.1\r\nchromium: 112.0.5615.183\r\nos: Mac Ventura 13.2\r\n\r\n\r\nMy import statement is\r\n```javascript\r\nimport \"react-devtools\";`\r\nimport { createRoot, Root } from \"react-dom/client\";\r\n```\r\n\r\nHere is the socket log\r\n\r\n<img width=\"1197\" alt=\"image\" src=\"https://github.com/facebook/react/assets/40307803/f83ed673-cba0-4bc7-8403-aa6dda79e24b\">","updated_at":"2023-08-14T03:28:20Z","created_at":"2023-08-14T03:27:58Z","creator_user_login":"trey-wallis"}
{"number":19667,"comment_id":"751254248","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T14:06:28Z","created_at":"2020-12-25T14:06:28Z","creator_user_login":"stale[bot]"}
{"number":13934,"comment_id":"432452323","body":"The problem was https://github.com/facebook/react/commit/b5c0852fddda9abdab25b101a040e607877f4663 not updating `dependencies`. We should change our version check to verify `dependencies` and `peerDependencies` for our own packages.","updated_at":"2018-10-23T23:03:00Z","created_at":"2018-10-23T23:03:00Z","creator_user_login":"gaearon"}
{"number":25304,"comment_id":"1253042037","body":"Hi @mattvague! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Freact%20%2325304). Thanks!","updated_at":"2022-09-21T00:16:41Z","created_at":"2022-09-21T00:16:41Z","creator_user_login":"facebook-github-bot"}
{"number":25304,"comment_id":"1253045364","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: b2748907c3cffb226447417957f2608a7c60c27d...34ef3cf2dbc4aec395e3a7965c23a81d719aa439\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/34ef3cf2dbc4aec395e3a7965c23a81d719aa439/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=b2748907c3cffb226447417957f2608a7c60c27d) | **=** | 135.04 kB | 135.04 kB | = | 43.33 kB | 43.33 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/34ef3cf2dbc4aec395e3a7965c23a81d719aa439/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=b2748907c3cffb226447417957f2608a7c60c27d) | **=** | 142.50 kB | 142.50 kB | = | 45.51 kB | 45.51 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/34ef3cf2dbc4aec395e3a7965c23a81d719aa439/files/facebook-www/ReactDOM-prod.classic.js?compare=b2748907c3cffb226447417957f2608a7c60c27d) | **=** | 489.88 kB | 489.88 kB | = | 87.21 kB | 87.21 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/34ef3cf2dbc4aec395e3a7965c23a81d719aa439/files/facebook-www/ReactDOM-prod.modern.js?compare=b2748907c3cffb226447417957f2608a7c60c27d) | **=** | 475.17 kB | 475.17 kB | = | 85.01 kB | 85.01 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/34ef3cf2dbc4aec395e3a7965c23a81d719aa439/files/facebook-www/ReactDOMForked-prod.classic.js?compare=b2748907c3cffb226447417957f2608a7c60c27d) | **=** | 489.88 kB | 489.88 kB | = | 87.21 kB | 87.21 kB\n| [oss-experimental/react-server-dom-webpack/esm/react-server-dom-webpack-node-loader.js](https://react-builds.vercel.app/commits/34ef3cf2dbc4aec395e3a7965c23a81d719aa439/files/oss-experimental/react-server-dom-webpack/esm/react-server-dom-webpack-node-loader.js?compare=b2748907c3cffb226447417957f2608a7c60c27d) | **+12.73%** | 8.52 kB | 9.61 kB | +3.56% | 2.84 kB | 2.94 kB\n| [oss-stable-semver/react-server-dom-webpack/esm/react-server-dom-webpack-node-loader.js](https://react-builds.vercel.app/commits/34ef3cf2dbc4aec395e3a7965c23a81d719aa439/files/oss-stable-semver/react-server-dom-webpack/esm/react-server-dom-webpack-node-loader.js?compare=b2748907c3cffb226447417957f2608a7c60c27d) | **+12.73%** | 8.52 kB | 9.61 kB | +3.56% | 2.84 kB | 2.94 kB\n| [oss-stable/react-server-dom-webpack/esm/react-server-dom-webpack-node-loader.js](https://react-builds.vercel.app/commits/34ef3cf2dbc4aec395e3a7965c23a81d719aa439/files/oss-stable/react-server-dom-webpack/esm/react-server-dom-webpack-node-loader.js?compare=b2748907c3cffb226447417957f2608a7c60c27d) | **+12.73%** | 8.52 kB | 9.61 kB | +3.56% | 2.84 kB | 2.94 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-experimental/react-server-dom-webpack/esm/react-server-dom-webpack-node-loader.js](https://react-builds.vercel.app/commits/34ef3cf2dbc4aec395e3a7965c23a81d719aa439/files/oss-experimental/react-server-dom-webpack/esm/react-server-dom-webpack-node-loader.js?compare=b2748907c3cffb226447417957f2608a7c60c27d) | **+12.73%** | 8.52 kB | 9.61 kB | +3.56% | 2.84 kB | 2.94 kB\n| [oss-stable-semver/react-server-dom-webpack/esm/react-server-dom-webpack-node-loader.js](https://react-builds.vercel.app/commits/34ef3cf2dbc4aec395e3a7965c23a81d719aa439/files/oss-stable-semver/react-server-dom-webpack/esm/react-server-dom-webpack-node-loader.js?compare=b2748907c3cffb226447417957f2608a7c60c27d) | **+12.73%** | 8.52 kB | 9.61 kB | +3.56% | 2.84 kB | 2.94 kB\n| [oss-stable/react-server-dom-webpack/esm/react-server-dom-webpack-node-loader.js](https://react-builds.vercel.app/commits/34ef3cf2dbc4aec395e3a7965c23a81d719aa439/files/oss-stable/react-server-dom-webpack/esm/react-server-dom-webpack-node-loader.js?compare=b2748907c3cffb226447417957f2608a7c60c27d) | **+12.73%** | 8.52 kB | 9.61 kB | +3.56% | 2.84 kB | 2.94 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 34ef3cf2dbc4aec395e3a7965c23a81d719aa439\n</p>\n","updated_at":"2022-09-21T21:15:35Z","created_at":"2022-09-21T00:22:01Z","creator_user_login":"sizebot"}
{"number":25304,"comment_id":"1253071545","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2022-09-21T01:02:58Z","created_at":"2022-09-21T01:02:58Z","creator_user_login":"facebook-github-bot"}
{"number":25304,"comment_id":"1253111462","body":"Also: I know the flow types are broken, I'll fix them once I hear from someone that this is the right direction","updated_at":"2022-09-21T01:57:07Z","created_at":"2022-09-21T01:56:53Z","creator_user_login":"mattvague"}
{"number":25304,"comment_id":"1254097441","body":"Neat. I had just started a branch to do the same. Yea this is the right direction.","updated_at":"2022-09-21T18:49:39Z","created_at":"2022-09-21T18:49:39Z","creator_user_login":"sebmarkbage"}
{"number":25304,"comment_id":"1254196044","body":"@sebmarkbage Great! Two questions then:\r\n1. What would you recommend doing about the flow type for the `defaultTransformSource` arg for the [`parseExportNamesInto` function](https://github.com/facebook/react/blob/32011649786ce38dd4dd85e69fdf9d0f11a2406e/packages/react-server-dom-webpack/src/ReactFlightWebpackNodeLoader.js#L239) given that it's now used by both `load` and `transformSource` which have different signatures? I'm familiar with TS but new to Flow.\r\n2. How can I test this change / are there existing tests somewhere for this loader?","updated_at":"2022-09-21T20:30:16Z","created_at":"2022-09-21T20:30:16Z","creator_user_login":"mattvague"}
{"number":25304,"comment_id":"1254228258","body":"@sebmarkbage Also, while we're here: is there any chance of modifying react-server-dom-webpack so that it supports extensions other than `.server.js` / `.client.js`? In my project I'd like to be able to, for example, treat all `.mdx` files as server components as well as be able to support `.client.ts` and `.server.ts` files. Right now I've accomplished this with [patch-package](https://www.npmjs.com/package/patch-package) but it'd probably be nice to make it configureable. Would be happy to open a separate issue for this and/or submit a PR, but wanted to run the idea by you first","updated_at":"2022-09-21T21:06:38Z","created_at":"2022-09-21T21:06:38Z","creator_user_login":"mattvague"}
{"number":24682,"comment_id":"1148775112","body":"I'm not familiar with PnP, but looks like when react-devtools is trying to locate its file `app.js` via `require.resolve('./app')`, it points to a location within a zip file `react-devtools-npm-4.24.7-03a21e386b-297f6a2ba3.zip/node_modules/react-devtools/app.js`, thus does not work.\r\nThis is probably a bug on PnP side? If they change how `require` works, they should change how `require.resolve` works as well.","updated_at":"2022-06-07T14:45:57Z","created_at":"2022-06-07T14:45:57Z","creator_user_login":"mondaychen"}
{"number":24682,"comment_id":"1148867119","body":"I've opened a discussion over at https://github.com/yarnpkg/berry/discussions/4536 about this issue to see if someone can round out my understanding.","updated_at":"2022-06-07T16:02:36Z","created_at":"2022-06-07T16:02:36Z","creator_user_login":"wegry"}
{"number":24682,"comment_id":"1148889476","body":"> This is probably a bug on PnP side? If they change how `require` works, they should change how `require.resolve` works as well.\r\n\r\nIt does, that's why you get a path within a zip file.\r\n\r\nThis special virtual path can be loaded when the PnP runtime is live; we configure it via NODE_OPTIONS so usually it's not a problem, but perhaps Electron or react-devtools ignore this environment variable or override it.","updated_at":"2022-06-07T16:21:09Z","created_at":"2022-06-07T16:21:09Z","creator_user_login":"arcanis"}
{"number":24682,"comment_id":"1149069106","body":"@arcanis Thanks for the information. react-devtools is running electron via `spawn` https://github.com/facebook/react/blob/main/packages/react-devtools/bin.js#L32\r\nMaybe something got lost in the middle? I'll test it when I have time later today\r\n\r\nEdit: I made sure that `NODE_OPTIONS` is in `env`\r\n```\r\nNODE_OPTIONS: '--require /path/to/pnp-and-react-devtools/.pnp.cjs'\r\n```\r\nBut it's still not working. Maybe electron ignores it somehow.","updated_at":"2022-06-07T19:51:18Z","created_at":"2022-06-07T19:18:29Z","creator_user_login":"mondaychen"}
{"number":24682,"comment_id":"1155504072","body":"@mondaychen In reference to your comment on https://github.com/electron/electron/issues/34470\r\n\r\n~I believe I understand the problem and that there's a change needed on react-devtools.~\r\n\r\n~As evident in https://github.com/facebook/react/blob/main/packages/react-devtools/bin.js#L32 and from what I understand, there are no environment variables being set through `cross-spawn` to pass on to electron's process. Something like this would be needed for it to work:~\r\n\r\n```javascript\r\nconst electron = require('electron');\r\nconst result = spawn.sync(electron, [require.resolve('./app')].concat(argv), {\r\n  stdio: 'ignore',\r\n  env: { NODE_OPTIONS: ... }\r\n});\r\n```\r\n\r\n~Would you mind if I take this issue and open a pull request, if it works? 😃 The only question I have right now is whether the node process for devtools will have NODE_OPTIONS available within its environment (or argv). If yes, and assuming the `NODE_OPTIONS` are sanitary by default for devtools, passing `process.env.NODE_OPTIONS` should fix it.~\r\n\r\n**References**\r\n\r\nNote: cross-spawn seems to be using nodejs' `child_process.spawn` for processes.\r\nhttps://github.com/moxystudio/node-cross-spawn/blob/5d843849e1ed434b7030e0aa49281c2bf4ad2e71/index.js#L12\r\nhttps://nodejs.org/api/child_process.html#child_processspawncommand-args-options\r\n\r\nEdit: According to @arcanis's comment, and upon investigation, cross-spawn/spawn do seem to preserve env.","updated_at":"2022-06-15T03:53:07Z","created_at":"2022-06-14T17:40:32Z","creator_user_login":"m-yasir"}
{"number":24682,"comment_id":"1155514599","body":"Looking at https://github.com/electron/electron/issues/13402, it seems Electron purposefully ignores NODE_OPTIONS, so it cannot access files located within zip archives 😕\r\n\r\nSomething you can try is to run `yarn unplug react-devtools`, but I'm not 100% sure it will work fine, as the dependencies won't be available via the `node_modules` folder that the default Electron would expect.","updated_at":"2022-06-14T17:52:46Z","created_at":"2022-06-14T17:52:46Z","creator_user_login":"arcanis"}
{"number":24682,"comment_id":"1155523352","body":"@arcanis I believe that would be true for packaged apps, but devtools seems to be spinning up a non-packaged electron process, `--require` should not be ignored within `NODE_OPTIONS`, at least according to the docs.\r\n\r\nSee https://www.electronjs.org/docs/latest/api/environment-variables#node_options","updated_at":"2022-06-14T18:11:15Z","created_at":"2022-06-14T18:03:14Z","creator_user_login":"m-yasir"}
{"number":24682,"comment_id":"1155529953","body":"Interesting - afaik cross-spawn (and spawn) default to preserve the env, so if it's not explicitly overridden I'd expect it to work then 🤔","updated_at":"2022-06-14T18:10:27Z","created_at":"2022-06-14T18:10:27Z","creator_user_login":"arcanis"}
{"number":24682,"comment_id":"1155535991","body":"@m-yasir we would greatly appreciate a PR! But I believe, like @arcanis mentioned, `spawn` preserves existing `env` by default.","updated_at":"2022-06-14T18:17:31Z","created_at":"2022-06-14T18:17:31Z","creator_user_login":"mondaychen"}
{"number":24682,"comment_id":"1155578961","body":"@mondaychen That seems to be correct, bad speculation on my end. If environment is preserved then this is a non-issue. In any case, I think this would need further investigation and discussion before it gets to PR stage (if it's even needed). \r\n\r\nThis definitely looks like an interesting behaviour. I'll follow this issue in any case and investigate if I can 😃 ","updated_at":"2022-06-14T18:28:31Z","created_at":"2022-06-14T18:27:45Z","creator_user_login":"m-yasir"}
{"number":24682,"comment_id":"1200744392","body":"This is not only limited to `react-devtools`. It seems to be something in Electron and package installation with yarn 3.2.x\r\nThis is my `package.json` and I still get the same error when I do `yarn start`\r\n\r\n```\r\n{\r\n   ...\r\n  \"main\": \"public/electron.js\",\r\n  \"homepage\": \"./\",\r\n  \"dependencies\": {\r\n    \"@craco/craco\": \"^7.0.0-alpha.3\",\r\n    \"@types/node\": \"^18.6.3\",\r\n    \"autoprefixer\": \"^10.4.7\",\r\n    \"concurrently\": \"^7.3.0\",\r\n    \"cosmiconfig\": \"^7.0.1\",\r\n    \"cosmiconfig-typescript-loader\": \"^3.1.1\",\r\n    \"cross-env\": \"^7.0.3\",\r\n    \"global\": \"^4.4.0\",\r\n    \"postcss\": \"^8.4.14\",\r\n    \"react\": \"^18.2.0\",\r\n    \"react-dom\": \"^18.2.0\",\r\n    \"react-scripts\": \"latest\",\r\n    \"tailwindcss\": \"^3.1.7\",\r\n    \"tailwindcss-cli\": \"^0.1.2\",\r\n    \"ts-node\": \"^10.9.1\",\r\n    \"typescript\": \"^4.7.4\",\r\n    \"wait-on\": \"^6.0.1\",\r\n    \"web-vitals\": \"^2.1.0\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"concurrently \\\"cross-env BROWSER=none cross-env TAILWIND_MODE=watch craco start\\\" \\\"wait-on http://localhost:3000 && electron .\\\"\",\r\n    \"build\": \"craco build\",\r\n    \"test\": \"craco test\",\r\n    \"eslint\": \"eslint src/ public/ --ext .jsx,.js,.ts,.tsx --max-warnings 0\",\r\n    \"gen-lic\": \"yarn licenses list --ignore-platform > oss/oss-licenses.txt\",\r\n    \"gen-lic-disclaimer\": \"yarn licenses generate-disclaimer --ignore-platform  > oss/oss-licenses-disclaimer.txt\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": []\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  },\r\n  \"devDependencies\": {\r\n    \"@babel/core\": \"^7.18.9\",\r\n    \"@babel/plugin-syntax-flow\": \"^7.18.6\",\r\n    \"@babel/plugin-transform-react-jsx\": \"^7.18.6\",\r\n    \"@testing-library/dom\": \"^8.16.0\",\r\n    \"@testing-library/jest-dom\": \"^5.16.4\",\r\n    \"@testing-library/react\": \"^13.3.0\",\r\n    \"@testing-library/user-event\": \"^14.3.0\",\r\n    \"electron\": \"^19.0.10\",\r\n    \"eslint\": \"^8.20.0\",\r\n    \"eslint-config-prettier\": \"^8.5.0\",\r\n    \"eslint-config-standard\": \"^17.0.0\",\r\n    \"eslint-plugin-electron\": \"^7.0.0\",\r\n    \"eslint-plugin-flowtype\": \"^8.0.3\",\r\n    \"eslint-plugin-import\": \"^2.26.0\",\r\n    \"eslint-plugin-n\": \"^15.2.4\",\r\n    \"eslint-plugin-node\": \"^11.1.0\",\r\n    \"eslint-plugin-prettier\": \"^4.2.1\",\r\n    \"eslint-plugin-promise\": \"^6.0.0\",\r\n    \"eslint-plugin-react\": \"^7.30.1\",\r\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\r\n    \"eslint-plugin-simple-import-sort\": \"^7.0.0\",\r\n    \"prettier\": \"^2.7.1\",\r\n    \"react-dev-utils\": \"^12.0.1\",\r\n    \"typescript-eslint\": \"^0.0.1-alpha.0\",\r\n    \"webpack\": \"^5.74.0\"\r\n  },\r\n  \"packageManager\": \"yarn@3.2.2\"\r\n}\r\n```","updated_at":"2022-08-01T05:59:34Z","created_at":"2022-08-01T05:58:40Z","creator_user_login":"mnajafiy"}
{"number":15418,"comment_id":"483622187","body":"May I take this bug for PR?","updated_at":"2019-04-16T11:32:37Z","created_at":"2019-04-16T11:32:37Z","creator_user_login":"Nizarius"}
{"number":15418,"comment_id":"483661384","body":"@Nizarius for sure","updated_at":"2019-04-16T13:34:18Z","created_at":"2019-04-16T13:34:18Z","creator_user_login":"jordyvg"}
{"number":15418,"comment_id":"514380665","body":"Any progress update on this? I see that a PR was opened months ago, but it's still open. I'm still seeing this behavior today.","updated_at":"2019-07-23T20:56:18Z","created_at":"2019-07-23T20:56:18Z","creator_user_login":"justingish"}
{"number":15418,"comment_id":"559973259","body":"The PR is still open. Can I work on this?","updated_at":"2019-11-30T14:17:19Z","created_at":"2019-11-30T14:17:19Z","creator_user_login":"karthikpriyadarshan-alation"}
{"number":15418,"comment_id":"559974801","body":"@karthikpriyadarshan-alation thank you for your question! Do you want to work with my PR where it's fixed but needs a regression fixture to https://github.com/facebook/react/tree/master/fixtures/dom and a detailed test plan? I can give you rights to work with my repository.","updated_at":"2019-11-30T14:28:40Z","created_at":"2019-11-30T14:28:23Z","creator_user_login":"Nizarius"}
{"number":15418,"comment_id":"607505917","body":"See https://github.com/facebook/react/pull/18459. We should fix it but I think this needs to wait a bit more.","updated_at":"2020-04-01T21:46:06Z","created_at":"2020-04-01T21:46:06Z","creator_user_login":"gaearon"}
{"number":15418,"comment_id":"646128795","body":"I made a fix in chrome which should fix this problem which should be released in chrome 85, try it out on canary: https://www.google.com/chrome/canary/","updated_at":"2020-06-18T16:07:59Z","created_at":"2020-06-18T16:07:59Z","creator_user_login":"josepharhar"}
{"number":15418,"comment_id":"674862859","body":"@josepharhar Do you know if there are similar fixes for other browsers?","updated_at":"2020-08-17T12:52:22Z","created_at":"2020-08-17T12:52:22Z","creator_user_login":"gaearon"}
{"number":15418,"comment_id":"674952054","body":"> @josepharhar Do you know if there are similar fixes for other browsers?\r\n\r\nFirefox was never affected by this issue and I am planning on merging the fix to WebKit soon.","updated_at":"2020-08-17T15:33:58Z","created_at":"2020-08-17T15:33:58Z","creator_user_login":"josepharhar"}
{"number":15418,"comment_id":"723288141","body":"I *finally* landed the fix in webkit. I don't know anything about safari's release cycle or when it will get to stable.","updated_at":"2020-11-06T20:35:45Z","created_at":"2020-11-06T20:35:45Z","creator_user_login":"josepharhar"}
{"number":25282,"comment_id":"1249605757","body":"Hey @subha84 I'm interested to  work on it \r\nSo right now, you are working on it or not?\r\n","updated_at":"2022-09-16T17:22:23Z","created_at":"2022-09-16T17:22:23Z","creator_user_login":"umerprogramm"}
{"number":25282,"comment_id":"1249618107","body":"Yes, right now working on it. @umerprogramm \r\n","updated_at":"2022-09-16T17:36:40Z","created_at":"2022-09-16T17:35:58Z","creator_user_login":"subha84"}
{"number":25282,"comment_id":"1250017051","body":"@eps1lon  @gaearon Any ideas ?","updated_at":"2022-09-17T07:07:56Z","created_at":"2022-09-17T07:07:56Z","creator_user_login":"subha84"}
{"number":25282,"comment_id":"1250105140","body":"Hey @subha84! I saw you error in the codesanbox if you remove the third option in the event listener method, it seems to work.\r\nThe useEffect should look like this:\r\n\r\n```\r\n  useEffect(() => {\r\n    let onclick = function (event) {\r\n      setRandom(Math.floor(Math.random() * 10));\r\n    };\r\n    document.addEventListener(\"click\", onclick);\r\n    return function () {\r\n      document.removeEventListener(\"click\", onclick);\r\n    };\r\n  }, []);\r\n```\r\n","updated_at":"2022-09-17T16:56:59Z","created_at":"2022-09-17T16:56:59Z","creator_user_login":"LuBustos"}
{"number":25282,"comment_id":"1250887249","body":"> Hey @subha84! I saw you error in the codesanbox if you remove the third option in the event listener method, it seems to work. The useEffect should look like this:\r\n> \r\n> ```\r\n>   useEffect(() => {\r\n>     let onclick = function (event) {\r\n>       setRandom(Math.floor(Math.random() * 10));\r\n>     };\r\n>     document.addEventListener(\"click\", onclick);\r\n>     return function () {\r\n>       document.removeEventListener(\"click\", onclick);\r\n>     };\r\n>   }, []);\r\n> ```\r\n\r\n@LuBustos What would be an alternative if the event needs to be processed in the capture phase?","updated_at":"2022-09-19T11:19:34Z","created_at":"2022-09-19T11:19:34Z","creator_user_login":"riamahajan08"}
{"number":25282,"comment_id":"1255327677","body":"Is anyone working on this issue? I am new to open source contribution and I want to give this a go.","updated_at":"2022-09-22T17:23:24Z","created_at":"2022-09-22T17:23:24Z","creator_user_login":"ujjawalD07"}
{"number":25282,"comment_id":"1255342154","body":"I don't see any button in the reproducing case. How do I follow these instructions?","updated_at":"2022-09-22T17:35:46Z","created_at":"2022-09-22T17:35:46Z","creator_user_login":"gaearon"}
{"number":25282,"comment_id":"1255353635","body":"OK, so the button in the description seems irrelevant. The issue I'm seeing is that commenting out `setRandom` call makes the checkbox work. So the `setRandom` call somehow breaks the checkbox.\r\n\r\nI think this looks like a bug, though I'm not sure if it's fixable. I assume what happens here is:\r\n\r\n- Suppose controlled `checked` is `false` in the beginning.\r\n- When you click, the document capture level event fires.\r\n- The document capture level event handler updates the `random` state, re-rendering the component with `checked={false}`. **This updates the controlled checkbox to have `node.checked = false`, even though it was `true` just before.**\r\n- By the time React handles the checkbox change event, `node.checked` is `false`. So `setChecked(false)` keeps it unchecked.\r\n\r\nIntuitively I'd expect that the issue is with the bold step — I think a re-render shouldn't have forced the controlled value to change if we haven't had a chance to run React handlers yet. But I'm not sure if this is something we can fix. Someone would need to dig deeper into this.\r\n\r\n>Is anyone working on this issue? I am new to open source contribution and I want to give this a go.\r\n\r\nYou're always welcome to try — note this might be a difficult one since you need to figure out how controlled inputs are implemented, and which assumption is being broken here.","updated_at":"2022-09-22T17:45:06Z","created_at":"2022-09-22T17:45:06Z","creator_user_login":"gaearon"}
{"number":25282,"comment_id":"1255793565","body":"> OK, so the button in the description seems irrelevant. The issue I'm seeing is that commenting out `setRandom` call makes the checkbox work. So the `setRandom` call somehow breaks the checkbox.\r\n> \r\n> I think this looks like a bug, though I'm not sure if it's fixable. I assume what happens here is:\r\n> \r\n> * Suppose controlled `checked` is `false` in the beginning.\r\n> * When you click, the document capture level event fires.\r\n> * The document capture level event handler updates the `random` state, re-rendering the component with `checked={false}`. **This updates the controlled checkbox to have `node.checked = false`, even though it was `true` just before.**\r\n> * By the time React handles the checkbox change event, `node.checked` is `false`. So `setChecked(false)` keeps it unchecked.\r\n> \r\n> Intuitively I'd expect that the issue is with the bold step — I think a re-render shouldn't have forced the controlled value to change if we haven't had a chance to run React handlers yet. But I'm not sure if this is something we can fix. Someone would need to dig deeper into this.\r\n> \r\n> > Is anyone working on this issue? I am new to open source contribution and I want to give this a go.\r\n> \r\n> You're always welcome to try — note this might be a difficult one since you need to figure out how controlled inputs are implemented, and which assumption is being broken here.\r\n\r\n@gaearon exactly, setRandom is just simulate the use case to re-render the checkbox before the 'onChange' handler gets a chance to execute. We debugged into React code and we found the same reason you stated above, If we stop the re-render thinks work. We still haven't figured out the way to fix it considering the way the whole event system is designed. @riamahajan08 \r\n\r\n","updated_at":"2022-09-23T04:38:39Z","created_at":"2022-09-23T04:37:52Z","creator_user_login":"subha84"}
{"number":25282,"comment_id":"1257772140","body":"@gaearon and @subha84 \r\nI have a few thoughts on this \r\n  - Add Event listener function executed on capturing phase (document → html → body → parent → child) because of the third params passed as true on the event listener function - it won't wait to execute state updates.\r\n  - It can resolve if executed in the bubbling phase. like \r\n   ``` document.addEventListener(\"click\", onclick, false); ``` \r\n   \r\n ","updated_at":"2022-09-26T09:44:01Z","created_at":"2022-09-26T09:43:15Z","creator_user_login":"smchinna"}
{"number":25282,"comment_id":"1287870510","body":"I think the problem is from the code itself. \r\n`onclick` function runs perfectly fine for the `addEventListener` method. You don't need to return an extra function\r\n\r\n\r\n```\r\n useEffect(() => {\r\n    let onclick = function (event) {\r\n      setRandom(Math.floor(Math.random() * 10));\r\n      // or here\r\n      //  document.addEventListener(\"click\", onclick, true);\r\n    };\r\n     document.addEventListener(\"click\", onclick, true);\r\n    document.removeEventListener(\"click\", onclick, true)\r\n  }, []);\r\n\r\n```","updated_at":"2022-10-22T18:02:44Z","created_at":"2022-10-22T18:00:20Z","creator_user_login":"ayomidebajo"}
{"number":25282,"comment_id":"1296962296","body":"> I think the problem is from the code itself. `onclick` function runs perfectly fine for the `addEventListener` method. You don't need to return an extra function\r\n> \r\n> ```\r\n>  useEffect(() => {\r\n>     let onclick = function (event) {\r\n>       setRandom(Math.floor(Math.random() * 10));\r\n>       // or here\r\n>       //  document.addEventListener(\"click\", onclick, true);\r\n>     };\r\n>      document.addEventListener(\"click\", onclick, true);\r\n>     document.removeEventListener(\"click\", onclick, true)\r\n>   }, []);\r\n> ```\r\n\r\nWe are returning a function to stop event leakage. @ayomidebajo ","updated_at":"2022-10-31T11:37:53Z","created_at":"2022-10-31T11:37:32Z","creator_user_login":"subha84"}
{"number":25282,"comment_id":"1297076084","body":"Please explain how there will be an event leakage.\r\n\r\nThe dom Eventlistener is already handling the `onclick` function in its scope, recall that the dom event listener actually consumes the function, so it handles all the clearing up and there's no need to return an extra `onclick` function since you add the event listener directly into the dom without using react's attributes for event listeners.\r\n\r\nPlease try the code below and test whether it works.\r\n\r\n\r\n```\r\n  useEffect(() => {\r\n    let onclick = function (event) {\r\n      setRandom(Math.floor(Math.random() * 10));\r\n      setCheck(!check);\r\n      // or here\r\n      //  document.addEventListener(\"click\", onclick, true);\r\n    };\r\n    document.addEventListener(\"click\", onclick, true);\r\n    document.removeEventListener(\"click\", onclick, true);\r\n  }, [check]);\r\n```\r\n\r\n","updated_at":"2022-10-31T13:18:01Z","created_at":"2022-10-31T13:18:01Z","creator_user_login":"ayomidebajo"}
{"number":25360,"comment_id":"1262832441","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: abd7bcd8b2d2e4688a5427278003dd6e1b255c3b...e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **=** | 135.28 kB | 135.28 kB | = | 43.39 kB | 43.39 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **=** | 142.74 kB | 142.74 kB | = | 45.58 kB | 45.58 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/facebook-www/ReactDOM-prod.classic.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **=** | 490.70 kB | 490.70 kB | = | 87.32 kB | 87.32 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/facebook-www/ReactDOM-prod.modern.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **=** | 475.99 kB | 475.99 kB | = | 85.13 kB | 85.13 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/facebook-www/ReactDOMForked-prod.classic.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **=** | 490.70 kB | 490.70 kB | = | 87.32 kB | 87.32 kB\n| [oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **+9.79%** | 26.33 kB | 28.90 kB | +5.21% | 8.95 kB | 9.42 kB\n| [oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **+9.79%** | 26.33 kB | 28.90 kB | +5.21% | 8.95 kB | 9.42 kB\n| [oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **+9.63%** | 26.78 kB | 29.36 kB | +5.23% | 9.10 kB | 9.58 kB\n| [oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **+7.75%** | 91.00 kB | 98.06 kB | +3.11% | 21.53 kB | 22.20 kB\n| [oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **+7.75%** | 91.00 kB | 98.06 kB | +3.11% | 21.53 kB | 22.20 kB\n| [oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **+7.74%** | 91.13 kB | 98.18 kB | +3.12% | 21.55 kB | 22.22 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **+9.79%** | 26.33 kB | 28.90 kB | +5.21% | 8.95 kB | 9.42 kB\n| [oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **+9.79%** | 26.33 kB | 28.90 kB | +5.21% | 8.95 kB | 9.42 kB\n| [oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.production.min.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **+9.63%** | 26.78 kB | 29.36 kB | +5.23% | 9.10 kB | 9.58 kB\n| [oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/oss-stable-semver/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **+7.75%** | 91.00 kB | 98.06 kB | +3.11% | 21.53 kB | 22.20 kB\n| [oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/oss-stable/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **+7.75%** | 91.00 kB | 98.06 kB | +3.11% | 21.53 kB | 22.20 kB\n| [oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js](https://react-builds.vercel.app/commits/e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb/files/oss-experimental/eslint-plugin-react-hooks/cjs/eslint-plugin-react-hooks.development.js?compare=abd7bcd8b2d2e4688a5427278003dd6e1b255c3b) | **+7.74%** | 91.13 kB | 98.18 kB | +3.12% | 21.55 kB | 22.22 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against e002fc73f070dc4cdd90c20a2064d2b6bd40a4cb\n</p>\n","updated_at":"2022-10-01T16:08:03Z","created_at":"2022-09-29T21:24:41Z","creator_user_login":"sizebot"}
{"number":25360,"comment_id":"1264350802","body":"> I ran this through 2000 repositories.\r\n\r\nHow did you do that?\r\n\r\n>  Memoized objcet with uppercase functions + Uppercase component not returning JSX\r\n\r\nIn these false-positives, what would the existing react-hooks rules say? The idea was that it should flag everything that could also contain a hooks call. So \"false-positives\" of this rule would be false-negatives of the other rules i.e. it's not considered a false-positive since we established that uppercase functions are components. In those cases the author should just rename `ArrowDown` to `arrowDown`.\r\n\r\n> Memo + forwardRef\r\n\r\nThe memo+forwardRef is definitely something we should not flag 👍🏻 \r\n\r\n> Hook-like, not returninig JSX\r\n\r\nThat case needs a better message but is not a false-positive. The function is considered a hook and can thus be called during render.","updated_at":"2022-10-01T12:31:52Z","created_at":"2022-10-01T12:29:57Z","creator_user_login":"eps1lon"}
{"number":25360,"comment_id":"1264360489","body":"> > Memoized object with uppercase functions + Uppercase component not returning JSX\r\n>\r\n> In these false-positives, what would the existing react-hooks rules say?\r\n\r\nExisting `eslint-plugin-react-hooks` rules won't report anything in these cases. And the existing `eslint-plugin-react/no-unstable-nested-components` doesn't either since functions are not returning JSX or output of `React.createElement`.\r\n\r\n> In those cases the author should just rename `ArrowDown` to `arrowDown`.\r\n\r\nI agree this should be the recommended solution but not sure how this could be informed to users. Now this rule would confuse users by calling these functions components. Instead the rule should detect that these are not returning JSX, and recommend users to rename the **function** into lowercase.\r\n\r\n> > I ran this through 2000 repositories.\r\n> \r\n> How did you do that?\r\n\r\nStarted your react fork in Github Codespaces and installed [`eslint-remote-tester`](https://github.com/AriPerkkio/eslint-remote-tester#developing-new-eslint-rules). I'm always using it to see how rules under development work in real life projects. Unit tests are simply not enough.\r\n\r\n<details>\r\n  <summary>eslint-remote-tester.config.js</summary>\r\n\r\n```js\r\nconst eslintRemoteTesterRepositories = require('eslint-remote-tester-repositories');\r\n\r\nmodule.exports = {\r\n  repositories: eslintRemoteTesterRepositories\r\n    .getRepositories({ randomize: false })\r\n    .slice(0, 2000),\r\n\r\n  pathIgnorePattern: eslintRemoteTesterRepositories.getPathIgnorePattern(),\r\n\r\n  extensions: ['.js', '.jsx', '.ts', '.tsx'],\r\n\r\n  rulesUnderTesting: ['react-hooks/no-nested-components'],\r\n\r\n  cache: false,\r\n\r\n  eslintrc: {\r\n    root: true,\r\n    env: {\r\n      es6: true,\r\n    },\r\n    parser: '@typescript-eslint/parser',\r\n\r\n    parserOptions: {\r\n      ecmaVersion: 2020,\r\n      sourceType: 'module',\r\n      ecmaFeatures: {\r\n        jsx: true,\r\n      },\r\n    },\r\n    plugins: ['react-hooks'],\r\n    rules: {\r\n      'react-hooks/no-nested-components': ['error'],\r\n    },\r\n  },\r\n};\r\n```\r\n</details>\r\n\r\n","updated_at":"2022-10-01T13:06:47Z","created_at":"2022-10-01T13:06:47Z","creator_user_login":"AriPerkkio"}
{"number":25360,"comment_id":"1264371732","body":"> Existing eslint-plugin-react-hooks rules won't report anything in these cases. \r\n\r\nWhich is the problem. React thinks these are function components and allows calling hooks. And if it's a component, it should not allow nested declarations. Either we start flagging hook calls in these cases or we continue flagging nested component declarations. But having an inconsistent detection is the worst scenario since it requires knowledge how individual **rules** detect components. When you should just need to know what the **plugin** (or rather React itself) considers a function component.\r\n\r\n> I agree this should be the recommended solution but not sure how this could be informed to users. Now this rule would confuse users by calling these functions components.\r\n\r\nThis has been the narrative since rules-of-hooks was released (see https://reactjs.org/docs/hooks-faq.html#what-exactly-do-the-lint-rules-enforce). We can amend the error message to explain why this is considered a component and how to fix it by renaming.\r\n\r\n>  Instead the rule should detect that these are not returning JSX\r\n\r\nA component does not need to return JSX. It can return primitives as well. I would not change this detection mechanism in this PR. It should be consistent with the existing rules-of-hooks. If there are real-world scenarios where renaming does not make sense, we can follow-up later.","updated_at":"2022-10-01T14:35:33Z","created_at":"2022-10-01T13:55:35Z","creator_user_login":"eps1lon"}
{"number":19818,"comment_id":"701148662","body":"When you want to override the default behavior, e.g. backspace, you need to use `event.preventDefault()`.\r\n\r\n```jsx\r\ntodoOnKeyDown(e, todo) {\r\n  e.preventDefault();\r\n\r\n  if (e.key === \"Backspace\" && e.metaKey) {\r\n    const todoCollection = this.state.todoCollection.remove(todo);\r\n    this.focusedTodo = todoCollection.getWithPos(todo.position);\r\n\r\n    this.setState({ todoCollection });\r\n  }\r\n}\r\n```\r\n\r\nOr you can [look at the file todo.jsx line 45](https://codesandbox.io/s/todo-input-bugfix-forked-cojwf?file=/src/todos.jsx:905-1188)","updated_at":"2020-09-30T04:27:53Z","created_at":"2020-09-30T04:25:01Z","creator_user_login":"ryanrw"}
{"number":19713,"comment_id":"682225013","body":"Happy to write a PR if this is deemed a useful addition.","updated_at":"2020-08-27T22:35:51Z","created_at":"2020-08-27T22:35:51Z","creator_user_login":"markspolakovs"}
{"number":19713,"comment_id":"751247011","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:08:02Z","created_at":"2020-12-25T13:08:02Z","creator_user_login":"stale[bot]"}
{"number":19713,"comment_id":"751267674","body":"Bump - I don’t think this has changed lately?","updated_at":"2020-12-25T16:14:46Z","created_at":"2020-12-25T16:14:46Z","creator_user_login":"markspolakovs"}
{"number":15727,"comment_id":"495414507","body":"Each of these root level events could be dispatched along with the _inferred_ render priority so that they could be grouped by priority within a timeline view.","updated_at":"2019-05-24T16:29:18Z","created_at":"2019-05-23T23:01:33Z","creator_user_login":"bvaughn"}
{"number":15727,"comment_id":"506546620","body":"Maybe I could also add user-timing logging for these events in DEV mode? This would be useful info without being as slow as the current user timings that we log per fiber. (Similar idea as #15260)","updated_at":"2019-06-27T23:35:44Z","created_at":"2019-06-27T23:29:24Z","creator_user_login":"bvaughn"}
{"number":15727,"comment_id":"560203007","body":"I've hacked a prototype of this idea [into the Firefox profiler](https://github.com/bvaughn/profiler/tree/react-devtools-poc):\r\n\r\n![ff-profiler-2-Kapture 2019-12-02 at 2 13 08](https://user-images.githubusercontent.com/29597/69926569-de9d4280-14ac-11ea-90e5-7e135a99ded9.gif)\r\n","updated_at":"2019-12-02T02:39:17Z","created_at":"2019-12-02T02:39:17Z","creator_user_login":"bvaughn"}
{"number":22801,"comment_id":"974831658","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: c0c71a868560b3042847722659579418bfe2d7e1...81fdcaf4e1218cc8fa2b081efbc30edb9561dbab\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 129.68 kB | 129.68 kB | = | 41.46 kB | 41.46 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.66 kB | 134.66 kB | = | 42.94 kB | 42.94 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 424.11 kB | 424.11 kB | = | 78.18 kB | 78.18 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 412.66 kB | 412.66 kB | = | 76.43 kB | 76.43 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 424.11 kB | 424.11 kB | = | 78.18 kB | 78.18 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-experimental/react/cjs/react.production.min.js | **=** | 7.88 kB | 7.86 kB | = | 3.00 kB | 2.99 kB\n| oss-stable-semver/react/cjs/react.production.min.js | **=** | 7.29 kB | 7.27 kB | = | 2.85 kB | 2.84 kB\n| oss-stable/react/cjs/react.production.min.js | **=** | 7.29 kB | 7.27 kB | = | 2.85 kB | 2.84 kB\n| oss-experimental/react/cjs/react-unstable-shared-subset.production.min.js | **=** | 6.60 kB | 6.58 kB | = | 2.68 kB | 2.67 kB\n| facebook-www/React-profiling.classic.js | **=** | 18.02 kB | 17.96 kB | = | 4.59 kB | 4.58 kB\n| facebook-www/React-profiling.modern.js | **=** | 17.87 kB | 17.81 kB | = | 4.54 kB | 4.53 kB\n| facebook-react-native/react/cjs/React-profiling.js | **=** | 17.79 kB | 17.73 kB | = | 4.51 kB | 4.50 kB\n| facebook-www/React-prod.classic.js | **=** | 17.41 kB | 17.35 kB | = | 4.46 kB | 4.45 kB\n| facebook-www/React-prod.modern.js | **=** | 17.26 kB | 17.20 kB | = | 4.41 kB | 4.40 kB\n| facebook-react-native/react/cjs/React-prod.js | **=** | 17.19 kB | 17.13 kB | = | 4.38 kB | 4.37 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 81fdcaf4e1218cc8fa2b081efbc30edb9561dbab\n</p>\n","updated_at":"2021-11-21T14:56:23Z","created_at":"2021-11-21T14:56:23Z","creator_user_login":"sizebot"}
{"number":13508,"comment_id":"416988800","body":"I'm a bit perplexed on the Symbol case:\r\n\r\n![image](https://user-images.githubusercontent.com/590904/44796587-20c92d00-ab62-11e8-9314-88832fd9be76.png)\r\n\r\nMaybe we could just call `value.toString()` instead of `'' + value`. At the very least, that might get rid of the concern about stringifying symbols.\r\n\r\nIn any case, I think avoiding the need to ensure consistency would let us drop calls to [`getToStringValue`](https://github.com/facebook/react/blob/master/packages/react-dom/src/client/ToStringValue.js#L25-L37), which would be a nice win.","updated_at":"2018-08-29T15:08:16Z","created_at":"2018-08-29T15:08:16Z","creator_user_login":"nhunzaker"}
{"number":19692,"comment_id":"680178173","body":"Related: it seems that `onMouseLeave` in React is actually mapping to the native `mouseout` event. Which itself seems to have inconsistencies in browsers.","updated_at":"2020-08-25T17:52:17Z","created_at":"2020-08-25T17:52:17Z","creator_user_login":"dzearing"}
{"number":19692,"comment_id":"680185406","body":"Suspected root cause is: https://crbug.com/1121675.\r\n\r\nAlthough I don't know why some folks do not repro in Edge Dev 86.  For me the issue repros there as well.","updated_at":"2020-08-25T18:06:49Z","created_at":"2020-08-25T18:06:49Z","creator_user_login":"dandclark"}
{"number":19692,"comment_id":"751254230","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T14:06:22Z","created_at":"2020-12-25T14:06:22Z","creator_user_login":"stale[bot]"}
{"number":13450,"comment_id":"414648599","body":"Please see the discussion in https://github.com/facebook/react/pull/10597. It’s intentional. ","updated_at":"2018-08-21T11:56:34Z","created_at":"2018-08-21T11:56:34Z","creator_user_login":"gaearon"}
{"number":13450,"comment_id":"414726907","body":"👎 This is anti-beginner in my opinion. It is standard for Unpkg URLs to point to development builds, and we are breaking user expectations. It's much worse for the default URL to literally error because browsers do not support common JS than to serve a development build, which will be displayed in the React Devtools extension anyway.","updated_at":"2018-08-21T15:59:20Z","created_at":"2018-08-21T15:59:20Z","creator_user_login":"nickmccurdy"}
{"number":13450,"comment_id":"414730337","body":"By the way, if the concern is about the user not knowing the development build is provided by default (which they would probably already know by using other Unpkg packages), Unpkg redirects the user to the full UMD file path, making the path that is used by default clear.\r\n\r\nFor example, https://unpkg.com/jquery redirects to https://unpkg.com/jquery@3.3.1/dist/jquery.js, which is clearly unminified and build for development.","updated_at":"2018-08-21T16:11:19Z","created_at":"2018-08-21T16:09:46Z","creator_user_login":"nickmccurdy"}
{"number":13450,"comment_id":"414740873","body":">This is anti-beginner in my opinion.\r\n\r\nWe've been there before. If React doesn't make this choice then it's \"anti-beginner\". If React does, then it'll be \"anti-performance\". Either way somebody will be unhappy. See discussion in https://github.com/facebook/react/issues/8784. We have to educate developers about the differences between builds, and the only way to do so is to force them to choose one or the other. I think that if you can drop a script tag on the page without thinking about whether it should be a dev or a prod build, we're going to keep seeing sites ship development versions to production, and hurting the user experience.\r\n\r\n>Unpkg redirects the user to the full UMD file path, making the path that is used by default clear.\r\n\r\nOnly if you read the redirect result URL.\r\n\r\n>It is standard for Unpkg URLs to point to development builds, and we are breaking user expectations.\r\n\r\nWhat do you mean by \"standard\"? Do all libraries do that? For libraries that do, are their DEV builds several times larger and smaller, like React DEV build is?\r\n\r\n>It's much worse for the default URL to literally error because browsers do not support common JS than to serve a development build\r\n\r\nI agree! I don't know why `unpkg` attempts to serve a CommonJS entry point (which `main` stands for). Instead it would be great if it served some page that suggested to find the proper UMD build inside.","updated_at":"2018-08-21T16:43:22Z","created_at":"2018-08-21T16:41:39Z","creator_user_login":"gaearon"}
{"number":13450,"comment_id":"414743579","body":"Unpkg could provide first-class support for multiple explicitly chosen UMD versions.\r\nFor example:\r\n\r\nhttps://unpkg.com/react:development\r\nhttps://unpkg.com/react:production\r\n\r\nhttps://unpkg.com/react-dom:development\r\nhttps://unpkg.com/react-dom:production\r\n\r\nThis works with versions too:\r\n\r\nhttps://unpkg.com/react-dom:production@16.4.2\r\n\r\nSince `:` is reserved, it won't cause clashes.\r\n\r\nThis could work by special fields in `package.json`, e.g.\r\n\r\n```\r\n  \"umd:development\": \"umd/react.development.js\",\r\n  \"umd:production\": \"umd/react.production.js\"\r\n```\r\n\r\nFor packages that opted into this, unpkg could display a better error page when you attempt to load https://unpkg.com/react directly — and show disambiguating links right there. Seems like best of both worlds to me.","updated_at":"2018-08-21T16:49:51Z","created_at":"2018-08-21T16:49:51Z","creator_user_login":"gaearon"}
{"number":13450,"comment_id":"414743842","body":"If unpkg is interested in implementing the above, we could do it.","updated_at":"2018-08-21T16:50:40Z","created_at":"2018-08-21T16:50:40Z","creator_user_login":"gaearon"}
{"number":13450,"comment_id":"414746046","body":"I still disagree with not using `umd/react.development.js` as a stopgap solution, but I like your suggestion as Unpkg does not have a way to choose alternative entry points without knowing the full file path. Maybe it could even 404 to make it very obvious that a package doesn't have a default entry point for both development and production. I'll cross-post an issue.","updated_at":"2018-08-21T16:57:26Z","created_at":"2018-08-21T16:57:26Z","creator_user_login":"nickmccurdy"}
{"number":13450,"comment_id":"438122480","body":"react@16 is redirecting to 16.6.2 which doesn't seem to exist, and when you go to the CJS version, it says it is version 16.6.1 - which does work on UMD\r\n\r\nplease excuse me if I don't understand something properly, I am new to using unpkg as per instructions from React documentation\r\n\r\n![unpkg-react](https://user-images.githubusercontent.com/98936/48389651-05cb7b00-e6c4-11e8-95f7-2946d5155f5a.gif)\r\n","updated_at":"2018-11-13T03:44:11Z","created_at":"2018-11-13T03:44:11Z","creator_user_login":"joemsak"}
{"number":13450,"comment_id":"438273637","body":"Sorry for commenting here, I meant to put it in a closed issue on unpkg https://github.com/unpkg/unpkg.com/issues/38 if folks wouldn't mind letting it stay here for their reference? Otherwise I can delete and move it too. However, FWIW I was following directions here https://reactjs.org/docs/add-react-to-a-website.html","updated_at":"2018-11-13T13:54:45Z","created_at":"2018-11-13T13:54:45Z","creator_user_login":"joemsak"}
{"number":13450,"comment_id":"438276526","body":"There was a broken release. It's fixed now.","updated_at":"2018-11-13T14:03:34Z","created_at":"2018-11-13T14:03:34Z","creator_user_login":"gaearon"}
{"number":13450,"comment_id":"438279292","body":"Thank you for the update, and so quickly! I really appreciate that. Cheers","updated_at":"2018-11-13T14:11:32Z","created_at":"2018-11-13T14:11:32Z","creator_user_login":"joemsak"}
{"number":13450,"comment_id":"686720952","body":"Depends on https://github.com/mjackson/unpkg/issues/93","updated_at":"2020-09-03T19:52:10Z","created_at":"2020-09-03T19:52:10Z","creator_user_login":"nickmccurdy"}
{"number":13450,"comment_id":"1681574717","body":"The upstream Unpkg issue has been fixed.","updated_at":"2023-08-17T03:59:12Z","created_at":"2023-08-17T03:59:12Z","creator_user_login":"nickmccurdy"}
{"number":19887,"comment_id":"699034311","body":"there is a problem of using just  `[dependencies]`?\r\n\r\nlike\r\n\r\n```.JS\r\nimport {useEffect} from \"react\"\r\n\r\nexport const useWindowScroll = (dependencies) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0,0)\r\n  }, [dependencies])\r\n}\r\n```","updated_at":"2020-09-25T16:44:57Z","created_at":"2020-09-25T16:44:57Z","creator_user_login":"iagolaguna"}
{"number":19887,"comment_id":"709683869","body":"> there is a problem of using just `[dependencies]`?\r\n> \r\n> like\r\n> \r\n> ```js\r\n> import {useEffect} from \"react\"\r\n> \r\n> export const useWindowScroll = (dependencies) => {\r\n>   useEffect(() => {\r\n>     window.scrollTo(0,0)\r\n>   }, [dependencies])\r\n> }\r\n> ```\r\n\r\nI tested it on a similar example, and strangely enough for me it seems to work, and I don't understand why. But doesn't that nest the arrays though? Like if the original dependencies array was [firstVariable, secondVariable] then the dependencies of the useWindowScroll become [[firstVariable, secondVariable]], so how does React statically check for dependencies change? I thought this was dangerous because arrays are mutable, so after each state change, the dependencies array actually is different from the previous one because we get a new copy of the same array (i.e. an array with the same values but with a different id, which explains why [] == [] and [] === [] both return false in JavaScript). So I don't know why this works!","updated_at":"2020-10-16T01:58:24Z","created_at":"2020-10-16T01:58:24Z","creator_user_login":"Patrick-DS"}
{"number":24649,"comment_id":"1442902967","body":"Interesting. The first state update is marked as DefaultLane because flushPassiveEffects sets the event priority; the second state update is outside that call stack so it reads the priority from window.event, which after a microtask is still the click event, leading to it getting treated as a discrete event and thus SyncLane.","updated_at":"2023-02-24T07:14:03Z","created_at":"2023-02-24T07:14:03Z","creator_user_login":"sophiebits"}
{"number":24649,"comment_id":"1488316846","body":"how can we escalate the issue to core react developers?","updated_at":"2023-03-29T10:10:57Z","created_at":"2023-03-29T10:10:57Z","creator_user_login":"zuozp8"}
{"number":24649,"comment_id":"1511754282","body":"The issue is known, there is no need to escalate. We're working on a fix but it's a significant project so it'll take us a while.","updated_at":"2023-04-17T17:04:02Z","created_at":"2023-04-17T17:04:02Z","creator_user_login":"gaearon"}
{"number":24649,"comment_id":"1577128199","body":"Heloo @Dremora ,\r\n\r\nThis output \r\n{submitCount: 0, isSubmitScheduled: true}\r\n{submitCount: 0, isSubmitScheduled: false}\r\n{submitCount: 1, isSubmitScheduled: false}\r\n\r\nwill be generated by creating new  useEffect in which we check if **isCountUpdateScheduled** is true and proceed with the submit count update\r\n\r\n**`import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function App() {\r\n  var [submitCount, setSubmitCount] = useState(0);\r\n  const [isSubmitScheduled, setIsSubmitScheduled] = useState(false);\r\n  const [isCountUpdateScheduled, setIsCountUpdateScheduled] = useState(false);\r\n\r\n  const scheduleSubmit = () => setIsSubmitScheduled(true);\r\n\r\n  useEffect(() => {\r\n    if (isSubmitScheduled) {\r\n      setIsSubmitScheduled(false);\r\n      setIsCountUpdateScheduled(true);\r\n    }\r\n  }, [isSubmitScheduled]);\r\n\r\n  useEffect(() => {\r\n    if (isCountUpdateScheduled) {\r\n      setIsCountUpdateScheduled(false);\r\n      Promise.resolve().then(() => {\r\n        setSubmitCount((x) => x + 1);\r\n      });\r\n    }\r\n  }, [isCountUpdateScheduled]);\r\n\r\n  console.log(\"render\", { submitCount, isSubmitScheduled });\r\n\r\n  return (\r\n    <button type=\"button\" onClick={scheduleSubmit}>\r\n      Hello\r\n    </button>\r\n  );\r\n}\r\n`**","updated_at":"2023-06-05T16:40:53Z","created_at":"2023-06-05T16:40:53Z","creator_user_login":"darsha1706"}
{"number":19765,"comment_id":"687203501","body":"It doesn't look like this bug report has enough info for one of us to reproduce it.\r\n\r\nPlease provide a CodeSandbox (https://codesandbox.io/s/new), a link to a repository on GitHub, or provide a minimal code example that reproduces the problem. Screenshots or videos can also be helpful if they help provide context on how to repro the bug.\r\n\r\nHere are some tips for providing a minimal example: https://stackoverflow.com/help/mcve","updated_at":"2020-09-04T15:01:13Z","created_at":"2020-09-04T15:01:13Z","creator_user_login":"bvaughn"}
{"number":19765,"comment_id":"687204307","body":"(If the repro is literally the same as the issue you linked to, it's okay to copy that over to this issue. But please be very clear about how we can reproduce the failing behavior you're describing.)","updated_at":"2020-09-04T15:02:19Z","created_at":"2020-09-04T15:02:19Z","creator_user_login":"bvaughn"}
{"number":19765,"comment_id":"687223383","body":"@bvaughn  I encunted this problem when trying to inspect any nodejs application build with [this library](https://github.com/shmuelhizmi/react-fullstack/tree/master/packages/fullstack ) which use an empty react-reconciler renderer as its render ( [source code](https://github.com/shmuelhizmi/react-fullstack/blob/master/packages/react-render-null/src/rendererLegacy.ts) ).\r\nthe full error is\r\n```\r\n[React DevTools] Error calling listener { event: 'inspectElement', payload: { id: 10, rendererID: 2 } }\r\n[0] error: Error: Unknown Fiber. Needs to be a function component to inspect hooks.\r\n[0]     at t.inspectHooksOfFiber (/home/shmuelhizmi/Documents/projects/web-desktop-environment/packages/flows/node_modules/react-devtools-core/dist/backend.js:24:5162)\r\n[0]     at We (/home/shmuelhizmi/Documents/projects/web-desktop-environment/packages/flows/node_modules/react-devtools-core/dist/backend.js:32:46503)\r\n[0]     at Object.inspectElement (/home/shmuelhizmi/Documents/projects/web-desktop-environment/packages/flows/node_modules/react-devtools-core/dist/backend.js:32:52776)\r\n[0]     at /home/shmuelhizmi/Documents/projects/web-desktop-environment/packages/flows/node_modules/react-devtools-core/dist/backend.js:32:63361\r\n[0]     at t.value (/home/shmuelhizmi/Documents/projects/web-desktop-environment/packages/flows/node_modules/react-devtools-core/dist/backend.js:32:8223)\r\n[0]     at /home/shmuelhizmi/Documents/projects/web-desktop-environment/packages/flows/node_modules/react-devtools-core/dist/backend.js:32:72745\r\n[0]     at /home/shmuelhizmi/Documents/projects/web-desktop-environment/packages/flows/node_modules/react-devtools-core/dist/backend.js:32:90393\r\n[0]     at Array.forEach (<anonymous>)\r\n[0]     at WebSocket.Xt.g.onmessage (/home/shmuelhizmi/Documents/projects/web-desktop-environment/packages/flows/node_modules/react-devtools-core/dist/backend.js:32:90368)\r\n[0]     at WebSocket.onMessage (/home/shmuelhizmi/Documents/projects/web-desktop-environment/packages/flows/node_modules/ws/lib/event-target.js:125:16)\r\n```\r\n\r\nif your looking for an easy way to reproduce the issue you can do the following\r\n - `git clone https://github.com/shmuelhizmi/web-desktop-environment` \r\n- `cd  web-desktop-environment`\r\n- `npm start`\r\nand connect with the standalone react-devtools app -\r\nthe app will crash with error above","updated_at":"2020-09-04T15:34:03Z","created_at":"2020-09-04T15:34:03Z","creator_user_login":"shmuelhizmi"}
{"number":19765,"comment_id":"751246984","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:50Z","created_at":"2020-12-25T13:07:50Z","creator_user_login":"stale[bot]"}
{"number":19765,"comment_id":"751391227","body":"bump","updated_at":"2020-12-26T20:05:00Z","created_at":"2020-12-26T20:05:00Z","creator_user_login":"shmuelhizmi"}
{"number":19765,"comment_id":"1202627289","body":"same here","updated_at":"2022-08-02T14:29:15Z","created_at":"2022-08-02T13:56:11Z","creator_user_login":"Muriel-Gasparini"}
{"number":19668,"comment_id":"751254246","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T14:06:27Z","created_at":"2020-12-25T14:06:27Z","creator_user_login":"stale[bot]"}
{"number":22840,"comment_id":"990637789","body":"@lunaruan , i am thinking of putting a eslint rule to find these occurrences, and then further think what to do, anything from your side? ","updated_at":"2021-12-10T05:50:09Z","created_at":"2021-12-10T05:50:09Z","creator_user_login":"Biki-das"}
{"number":22840,"comment_id":"991199390","body":"Hey, thanks for the report! One note though, instead of using `Object.prototype.hasOwnProperty`, we prefer to use the `shared/hasOwnProperty` module so we only have one shared reference when the code gets bundled. if you'd like to submit a PR for this please feel free!","updated_at":"2021-12-10T18:29:31Z","created_at":"2021-12-10T18:29:31Z","creator_user_login":"lunaruan"}
{"number":22840,"comment_id":"1021306865","body":"@lunaruan https://github.com/facebook/react/pull/23167\r\n I found some `Object.prototype.hasOwnProperty` and replaced","updated_at":"2022-01-25T15:28:08Z","created_at":"2022-01-25T15:28:08Z","creator_user_login":"JX-Zhuang"}
{"number":23104,"comment_id":"1011632934","body":"I am not convinced this is a 'bug' in react. I am more opening this ticket as a question to ask whether smarter individuals believe this behavior is induced by react. I appreciate any help.","updated_at":"2022-01-13T01:24:34Z","created_at":"2022-01-13T01:24:34Z","creator_user_login":"bjhobson12"}
{"number":13560,"comment_id":"418596712","body":"Do you have any work-in-progress pr locally? If no maybe I can take this this weekend if you don't mind :)","updated_at":"2018-09-05T09:52:40Z","created_at":"2018-09-05T04:35:48Z","creator_user_login":"NE-SmallTown"}
{"number":13560,"comment_id":"418663985","body":"We'd need to add a deprecation warning first. Will take a PR for it!","updated_at":"2018-09-05T09:27:48Z","created_at":"2018-09-05T09:27:48Z","creator_user_login":"gaearon"}
{"number":13560,"comment_id":"418671419","body":"Ok, fine, next time :)","updated_at":"2018-09-05T09:52:05Z","created_at":"2018-09-05T09:52:05Z","creator_user_login":"NE-SmallTown"}
{"number":13560,"comment_id":"418964228","body":"I've seen these mentioned once or twice, but that's it.  Are these even actually being used anywhere in the real world?","updated_at":"2018-09-06T04:53:53Z","created_at":"2018-09-06T04:53:53Z","creator_user_login":"markerikson"}
{"number":13560,"comment_id":"419085591","body":"Relay used it. I guess that means people stuck on Relay Classic do. ","updated_at":"2018-09-06T13:05:22Z","created_at":"2018-09-06T13:05:22Z","creator_user_login":"gaearon"}
{"number":13560,"comment_id":"419727506","body":"Last answer sounded unclear, so I would love to take this over. :)\r\n\r\nI suppose warning could be placed somewhere here - https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactFiberBeginWork.js#L715?\r\n\r\n\r\n\r\n","updated_at":"2018-09-09T16:29:07Z","created_at":"2018-09-09T16:29:07Z","creator_user_login":"prichodko"}
{"number":13560,"comment_id":"425917046","body":"Curious: Maybe some warning is needed for SSR too, in case a different renderer is utilized?\r\n\r\nPS. Sorry for the pollution below, I've removed the issue id from the commit message so it doesn't affect future rebases.","updated_at":"2018-10-20T19:56:00Z","created_at":"2018-10-01T13:56:26Z","creator_user_login":"lustoykov"}
{"number":18873,"comment_id":"670839887","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-08-08T07:41:28Z","created_at":"2020-08-08T07:41:28Z","creator_user_login":"stale[bot]"}
{"number":18873,"comment_id":"670844939","body":"bump\n\nOn Sat, 8 Aug 2020 at 17:41, stale[bot] <notifications@github.com> wrote:\n\n> This issue has been automatically marked as stale. *If this issue is\n> still affecting you, please leave any comment* (for example, \"bump\"), and\n> we'll keep it open. We are sorry that we haven't been able to prioritize it\n> yet. If you have any new additional information, please include it with\n> your comment!\n>\n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/facebook/react/issues/18873#issuecomment-670839887>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AABRRN23KOLE2M7GRH2CFITR7T6TLANCNFSM4M4T3PTQ>\n> .\n>\n","updated_at":"2020-08-08T08:32:08Z","created_at":"2020-08-08T08:32:08Z","creator_user_login":"japgolly"}
{"number":18873,"comment_id":"670921052","body":"What is the motivation? Even if the browser calls them deprecated they won’t be removed, right? As too much code probably depends on them. ","updated_at":"2020-08-08T12:03:12Z","created_at":"2020-08-08T12:03:12Z","creator_user_login":"gaearon"}
{"number":18873,"comment_id":"751254274","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T14:06:41Z","created_at":"2020-12-25T14:06:41Z","creator_user_login":"stale[bot]"}
{"number":18873,"comment_id":"1034392710","body":"If you're using typescript. They are already marked as deprecated in d.ts https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/types/react/v16/index.d.ts","updated_at":"2022-02-10T01:33:24Z","created_at":"2022-02-10T01:33:24Z","creator_user_login":"tychenjiajun"}
{"number":25427,"comment_id":"1285908280","body":"same issue","updated_at":"2022-10-20T17:29:11Z","created_at":"2022-10-20T17:29:11Z","creator_user_login":"RZXQ"}
{"number":25427,"comment_id":"1304839456","body":"I get the same. Any idea on how to fix this?","updated_at":"2022-11-06T16:55:11Z","created_at":"2022-11-06T16:32:35Z","creator_user_login":"Astlaan"}
{"number":25427,"comment_id":"1317134212","body":"same story","updated_at":"2022-11-16T14:45:16Z","created_at":"2022-11-16T14:45:16Z","creator_user_login":"shynsky"}
{"number":25427,"comment_id":"1323011336","body":"I get the same issue on NExt js 12 and dev tools","updated_at":"2022-11-22T04:01:27Z","created_at":"2022-11-22T04:01:27Z","creator_user_login":"alextaymx"}
{"number":25427,"comment_id":"1361744017","body":"Does there exist any workaround for this?","updated_at":"2022-12-21T17:43:03Z","created_at":"2022-12-21T17:43:03Z","creator_user_login":"jacknight"}
{"number":25427,"comment_id":"1445353760","body":"same issue nextjs 13","updated_at":"2023-02-26T12:50:56Z","created_at":"2023-02-26T12:50:56Z","creator_user_login":"AngelMTR"}
{"number":25427,"comment_id":"1452092498","body":"Same issue","updated_at":"2023-03-02T15:50:59Z","created_at":"2023-03-02T15:50:59Z","creator_user_login":"sasa97972"}
{"number":25427,"comment_id":"1469181052","body":"I got pretty frustrated not being able to debug Next.js. I didn't resolve it entirely, sorry all. However, I did notice that I can install a protocol handler for `webpack-internal` and could get further along in parsing Hooks. For instance, adding this to react-devtools causes errors that were captured in a screenshot.\r\n\r\n```diff\r\ndiff --git a/packages/react-devtools/app.js b/packages/react-devtools/app.js\r\nindex 4b4f22ab3..31a2c7f9f 100644\r\n--- a/packages/react-devtools/app.js\r\n+++ b/packages/react-devtools/app.js\r\n@@ -5,8 +5,9 @@\r\n  * LICENSE file in the root directory of this source tree.\r\n  */\r\n \r\n-const {app, BrowserWindow} = require('electron'); // Module to create native browser window.\r\n+const {app, BrowserWindow, protocol} = require('electron'); // Module to create native browser window.\r\n const {join} = require('path');\r\n+const url = require('url');\r\n const os = require('os');\r\n \r\n const argv = require('minimist')(process.argv.slice(2));\r\n@@ -14,6 +15,8 @@ const projectRoots = argv._;\r\n \r\n let mainWindow = null;\r\n \r\n+protocol.registerSchemesAsPrivileged([ { scheme: 'webpack-internal', privileges: { secure: true, standard: true, supportFetchAPI: true } } ]);\r\n+\r\n app.on('window-all-closed', function () {\r\n   app.quit();\r\n });\r\n@@ -57,4 +60,9 @@ app.on('ready', function () {\r\n   mainWindow.on('closed', function () {\r\n     mainWindow = null;\r\n   });\r\n+\r\n+  protocol.registerFileProtocol('webpack-internal', (request, callback) => {\r\n+    const filePath = url.fileURLToPath('file:///Users/kjmph/test_repo/' + request.url.slice('webpack-internal://'.length));\r\n+    callback(filePath);\r\n+  });\r\n });\r\n```\r\n\r\n<img width=\"865\" alt=\"Screenshot 2023-03-14 at 9 40 33 PM\" src=\"https://user-images.githubusercontent.com/1075649/225184548-92cb4c49-f7c5-41da-b844-5c24ea7ca791.png\">\r\n\r\nIn short, perhaps if `webpack-internal` was recognized as a protocol and react-devtools searched the CWD for files, maybe we would get a little further along. Note, Next.js has a similar issue vercel/next.js#32432 around this.\r\n\r\nI do notice that Next.js has multiple sourceURLs and sourceMappingUrls in its compiled output, so perhaps that is why there are errors? I haven't looked into this in sometime, so could use a second set of eyes.","updated_at":"2023-03-15T02:01:57Z","created_at":"2023-03-15T02:01:57Z","creator_user_login":"kjmph"}
{"number":25427,"comment_id":"1471224112","body":"Oh hey, look at that, it was just because I had Sentry loaded and it causes duplicate source maps? Anyway, I removed Sentry (in fact, went back to a new Next.js starter project) and the error went away (it sees a sample custom hook name):\r\n\r\n<img width=\"162\" alt=\"Screenshot 2023-03-15 at 11 03 42 PM\" src=\"https://user-images.githubusercontent.com/1075649/225501438-e3a556cd-90c8-4634-85f6-3efac69c0f41.png\">\r\n\r\nI'll raise this in the sister issue in vercel/next.js#32432","updated_at":"2023-03-16T03:15:07Z","created_at":"2023-03-16T03:15:07Z","creator_user_login":"kjmph"}
{"number":25427,"comment_id":"1471253648","body":"I think after quite a bit of head scratching, I put all my ruminating in that next.js issue, that I came to the conclusion that React Devtools could close this issue, as if I create a `blog-starter` I can still see the Hook names even though parsing fails:\r\n\r\n<img width=\"655\" alt=\"Screenshot 2023-03-15 at 11 37 39 PM\" src=\"https://user-images.githubusercontent.com/1075649/225507953-566ac3b1-424c-4d2f-aab6-cf33d986e791.png\">\r\n\r\nUltimately, I wanted to see the state variable name in React Devtools, which I thought the error message was pointing to. However, perhaps the real fix is to not throw errors when the source url cannot be found yet the Hook name can still be parsed from the source map? (as I believe Next.js/webpack puts the source in the JSON encoding, which is how Devtools can read this?)","updated_at":"2023-03-16T03:42:24Z","created_at":"2023-03-16T03:41:47Z","creator_user_login":"kjmph"}
{"number":23033,"comment_id":"1007654179","body":"It doesn't look like this bug report has enough info for one of us to reproduce it.\r\n\r\nPlease provide a CodeSandbox (https://react.new), a link to a repository on GitHub, or provide a minimal code example that reproduces the problem. \r\n\r\nHere are some tips for providing a minimal example: https://stackoverflow.com/help/mcve\r\n\r\n<!-- mui template next: https://material-ui.com/r/issue-template-next -->\r\n<!-- mui template stable: https://material-ui.com/r/issue-template-latest -->\r\n<!-- react template: https://react.new/ -->","updated_at":"2022-01-07T18:54:48Z","created_at":"2022-01-07T18:54:48Z","creator_user_login":"eps1lon"}
{"number":23033,"comment_id":"1007971667","body":"@eps1lon  This is the demo [webkitlineclamp-demo](https://codesandbox.io/s/webkitlineclamp-demo-u9n0w)\r\nThe uppercase WebKit prefix used by webkitlineclamp is invalid. In fact, there is no problem that other attributes such as webkitboxorient use the lowercase WebKit prefix. I think this is a bug and compatibility needs to be considered","updated_at":"2022-01-08T12:10:43Z","created_at":"2022-01-08T12:10:43Z","creator_user_login":"codedaybyday"}
{"number":22984,"comment_id":"997157935","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: c7917fe76982c499c81be9571de44fe1293ac893...dc6ee47486f35ad945c6b6152114b3eb04b3097b\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 129.89 kB | 129.89 kB | = | 41.62 kB | 41.62 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.64 kB | 134.64 kB | = | 43.00 kB | 43.00 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 428.08 kB | 428.08 kB | = | 78.60 kB | 78.60 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 416.64 kB | 416.64 kB | = | 76.91 kB | 76.91 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 428.08 kB | 428.08 kB | = | 78.60 kB | 78.60 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against dc6ee47486f35ad945c6b6152114b3eb04b3097b\n</p>\n","updated_at":"2021-12-18T07:01:54Z","created_at":"2021-12-18T07:01:54Z","creator_user_login":"sizebot"}
{"number":19857,"comment_id":"751246944","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:37Z","created_at":"2020-12-25T13:07:37Z","creator_user_login":"stale[bot]"}
{"number":23065,"comment_id":"1007656332","body":"Did the error persist after deleting node_modules and running `yarn`? What was the output of `yarn`? What does `yarn why electron` log?","updated_at":"2022-01-07T18:57:51Z","created_at":"2022-01-07T18:57:51Z","creator_user_login":"eps1lon"}
{"number":22828,"comment_id":"979413848","body":"thanks for the report @x-yuri, i am in fact able to repro the behavior you describe, although not consistently all the time, in some instances i am able to get the debugger to continue.\r\n\r\ninterestingly, it only seems to get stuck if we pause on a `console.log` statement; e.g. if i add the debugger at another place that isn't a `console.log` i am able to advance as normal.\r\n\r\nwhen i step into the `console.log` or pause execution while it's stuck, it seems like Firefox is getting stuck in a loop trying to evaluate the following expression to check for the presence of DevTools and React, `window.__REACT_DEVTOOLS_GLOBAL_HOOK__ && window.__REACT_DEVTOOLS_GLOBAL_HOOK__.renderers.size > 0`; specifically, it's getting stuck trying to access the getter function for `__REACT_DEVTOOLS_GLOBAL_HOOK__` on the `window` object.\r\n\r\nI'll see if i can dig into this more, but based on this behavior it also seems like it could maybe be a Firefox bug? i'll look more into this with the team and report back cc @bvaughn \r\n","updated_at":"2021-11-25T18:26:11Z","created_at":"2021-11-25T18:26:11Z","creator_user_login":"jstejada"}
{"number":13876,"comment_id":"435163069","body":"@aweary @nhunzaker Do you remember if this was intentional?","updated_at":"2018-11-01T19:46:02Z","created_at":"2018-11-01T19:46:02Z","creator_user_login":"gaearon"}
{"number":13876,"comment_id":"435270418","body":"I am not sure if it was intentional, but this started happening with this commit: https://github.com/facebook/react/commit/f98e6c195568641fbca099e3cd2632a0d37d364f\r\n\r\nI think this happens because the checked property never gets assigned so it never detaches from the defaultChecked assignment. I think this happens here:\r\n\r\nhttps://github.com/facebook/react/blob/595b4f945b703128af7e65750726c0cbf073ca58/packages/react-dom/src/client/ReactDOMInput.js#L228-L233\r\n\r\nThis is curious! The comment says that it should only change the defaultChecked when the type changes, but it doesn't do any comparison for that. Maybe this should be:\r\n\r\n```javascript\r\n// When syncing the checked attribute, it only changes when it needs\r\n// to be removed, such as transitioning from a checkbox into a text input\r\nif (props.checked == null && props.defaultChecked != null) {\r\n  // New: only change when the node type doesn't match\r\n  if (props.type !== node.type) {\r\n    node.defaultChecked = !!props.defaultChecked;\r\n  }\r\n}\r\n``` \r\n\r\nMore curious! I wrote this comment 😢 ","updated_at":"2018-11-02T04:50:08Z","created_at":"2018-11-02T04:50:08Z","creator_user_login":"nhunzaker"}
{"number":13876,"comment_id":"435274043","body":"To amend my comment above, that actually won't work because React assigns the `type` property before this code runs. React can't tell if the type changed unless we do that in ReactDOMInput, filtering it out of props in `getHostProps`.\r\n\r\nI think there are two bugs here:\r\n\r\n1. If you switch to a text input and remove the `defaultChecked` property, you are left with a text input that has a `checked` attribute.\r\n2. React doesn't appear to be detaching checkboxes correctly. At least, the following code works in Safari 11.1:\r\n\r\n```\r\nvar input = document.createElement('input')\r\n\r\ninput.type = 'checkbox'\r\n\r\ninput.checked = true\r\ninput.defaultChecked = false\r\n\r\nconsole.log(input.checked) // true\r\nconsole.log(input.defaultChecked) // false\r\n```\r\n\r\nSo it's possible that React isn't doing something like this under the hood, so the `defaultChecked` re-assignment changes the checked attribute.","updated_at":"2018-11-02T05:20:24Z","created_at":"2018-11-02T05:19:59Z","creator_user_login":"nhunzaker"}
{"number":13876,"comment_id":"435554812","body":"For bug 2 (detachment) I'm not sure we can do this without triggering form validations in Firefox:\r\n\r\nhttps://codepen.io/nhunzaker/pen/QJWEXr\r\n\r\nWe hit this with the `value` property too but managed to get around it. I wonder if there's a way to detach the checked property from the attribute without triggering validation.","updated_at":"2018-11-03T02:50:17Z","created_at":"2018-11-03T02:50:17Z","creator_user_login":"nhunzaker"}
{"number":13876,"comment_id":"572987218","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-10T10:52:58Z","created_at":"2020-01-10T10:52:58Z","creator_user_login":"stale[bot]"}
{"number":13876,"comment_id":"575579183","body":"Closing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please create a new issue with up-to-date information. Thank you!\n","updated_at":"2020-01-17T10:58:46Z","created_at":"2020-01-17T10:58:46Z","creator_user_login":"stale[bot]"}
{"number":15520,"comment_id":"534817004","body":"Bumping this. I'm trying to solve this in Rut, but it's turning out to be quite difficult (I'm not using JSDOM). https://github.com/milesj/rut","updated_at":"2019-09-25T01:57:26Z","created_at":"2019-09-25T01:56:57Z","creator_user_login":"milesj"}
{"number":15520,"comment_id":"572748407","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-09T20:48:32Z","created_at":"2020-01-09T20:48:32Z","creator_user_login":"stale[bot]"}
{"number":15520,"comment_id":"572788883","body":"😭","updated_at":"2020-01-09T22:36:42Z","created_at":"2020-01-09T22:36:42Z","creator_user_login":"milesj"}
{"number":15520,"comment_id":"576551801","body":"An ugly workaround while waiting for a proper fix here is to temporarily replace `console.error` with a no-op in expected error tests.\r\n\r\nA util function like this works for both this issue and another issue of coverage not being counted in `expect(render(<>)).toThrow()`:\r\n\r\n```javascript\r\n// In test utils\r\nconst consoleError = console.error\r\nfunction catchErrorSilently(fn) {\r\n  try {\r\n    console.error = () => {}\r\n    fn()\r\n  } catch (error) {\r\n    return error\r\n  } finally {\r\n    console.error = consoleError\r\n  }\r\n}\r\n\r\n// In tests:\r\nexpect(catchErrorSilently(() =>\r\n  render(<SomeComponent someProp=\"invalid prop value\" />)\r\n)).toBeInstanceOf(Error)\r\n```\r\n\r\nOr for a broader scope:\r\n\r\n```javascript\r\nconst consoleError = console.error\r\nbeforeEach(() => {\r\n  console.error = () => {}\r\n})\r\n\r\nafterEach(() => {\r\n  console.error = consoleError\r\n})\r\n```","updated_at":"2020-01-21T07:59:20Z","created_at":"2020-01-21T07:23:36Z","creator_user_login":"AlanSl"}
{"number":15520,"comment_id":"617268604","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-04-21T16:28:05Z","created_at":"2020-04-21T16:28:05Z","creator_user_login":"stale[bot]"}
{"number":15520,"comment_id":"617415000","body":"No stalebot, not stake... Ignored... Ignored is the word you're looking for. Almost a year now and nothing.  Is the test renderer even supported any more?","updated_at":"2020-04-21T21:08:16Z","created_at":"2020-04-21T21:08:16Z","creator_user_login":"mpeyper"}
{"number":15520,"comment_id":"663804933","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-07-25T04:05:52Z","created_at":"2020-07-25T04:05:52Z","creator_user_login":"stale[bot]"}
{"number":15520,"comment_id":"663810943","body":"Bump.","updated_at":"2020-07-25T05:09:21Z","created_at":"2020-07-25T05:09:21Z","creator_user_login":"mpeyper"}
{"number":19860,"comment_id":"696922242","body":"Hello eps1lon.\r\n\r\nI do not understand your bug..\r\n\r\nJS does not allow \"readonly\" attribute for input[type=\"radio\"],\r\ninstead, you can add the \"disabled\" attribute if you do not want to allow the user change it.\r\n\r\nWhat exactly are you trying to achieve?","updated_at":"2020-09-22T19:08:52Z","created_at":"2020-09-22T19:08:52Z","creator_user_login":"TedKoker"}
{"number":19860,"comment_id":"697194526","body":"> JS does not allow \"readonly\" attribute for input[type=\"radio\"],\r\n\r\nI understand. But React is recommending it.\r\n\r\nSecondly, the controlled value being lost is problematic if there's a delay between onChange and the value being registered (e.g. if a server is inbetween). Right now the only safe mode for `input[type=\"radio\"]` is uncontrolled.","updated_at":"2020-09-23T07:45:14Z","created_at":"2020-09-23T07:45:14Z","creator_user_login":"eps1lon"}
{"number":19860,"comment_id":"711139921","body":"@eps1lon then adding disabled is your only optimal fix for your issue. \r\nadding a read-only has no add on or any enhancement for your request. \r\n\r\nAnyway share React recommendation for the read-only input for extra validity ","updated_at":"2020-10-18T09:16:38Z","created_at":"2020-10-18T09:16:38Z","creator_user_login":"ramyatrouny"}
{"number":19860,"comment_id":"711140556","body":"> adding a read-only has no add on or any enhancement for your request.\r\n\r\nI'm not asking for read-only. I'm showcasing how a controlled radio can become uncontrolled/out-of-sync in todays react.\r\n\r\nReact recommending read-only for checkbox/radio is a separate issue.","updated_at":"2020-10-18T09:22:48Z","created_at":"2020-10-18T09:22:48Z","creator_user_login":"eps1lon"}
{"number":14057,"comment_id":"435437010","body":"I wonder if this could be the same issue as https://github.com/facebook/react/issues/13702#issuecomment-423263525. Do you mind looking at what retains the references?","updated_at":"2018-11-02T16:30:29Z","created_at":"2018-11-02T16:30:29Z","creator_user_login":"gaearon"}
{"number":14057,"comment_id":"435550492","body":"It is a similar issue, I just thought that `t-1` retained state is an expected behavior in React. `useEffect` makes it even worse and now we have `t-2` retained in memory. And if we also add a conditionally firing effect with a cleanup function(even inside of a custom hook) it will retain in memory closure context of a render function that was created when conditionally firing effect were fired.","updated_at":"2018-11-03T01:30:30Z","created_at":"2018-11-03T01:30:30Z","creator_user_login":"localvoid"}
{"number":14057,"comment_id":"435557092","body":"Here is [another CodeSandbox example](https://codesandbox.io/s/l4o7m15nql) that clearly shows that deeply nested component trees(`t-2`, `t-1`, `t`) and closure contexts (`t0`, `t-2`, `t-1`, `t`) are retained.","updated_at":"2018-11-03T03:37:38Z","created_at":"2018-11-03T03:37:38Z","creator_user_login":"localvoid"}
{"number":14057,"comment_id":"519223825","body":"Has this been fixed? Seem to experience the same issue with react 4.3.0.","updated_at":"2019-08-07T18:50:08Z","created_at":"2019-08-07T18:50:08Z","creator_user_login":"Fabbok1x"}
{"number":14057,"comment_id":"572899426","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-10T06:53:38Z","created_at":"2020-01-10T06:53:38Z","creator_user_login":"stale[bot]"}
{"number":14057,"comment_id":"572960467","body":"Would be interested to see if/when this issue resolved without it being resolved.","updated_at":"2020-01-10T10:02:06Z","created_at":"2020-01-10T10:02:06Z","creator_user_login":"brainkim"}
{"number":14057,"comment_id":"573332164","body":"@brainkim This was closed at the same time: https://github.com/facebook/react/pull/15157","updated_at":"2020-01-11T16:36:25Z","created_at":"2020-01-11T16:36:25Z","creator_user_login":"Fabbok1x"}
{"number":14057,"comment_id":"1082471106","body":"Does this still reproduce with React 18? We've made some memory-related changes there.","updated_at":"2022-03-29T23:40:21Z","created_at":"2022-03-29T23:40:21Z","creator_user_login":"gaearon"}
{"number":23023,"comment_id":"1000676124","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 3dc41d8a2590768a6ac906cd1f4c11ca00417eee...c3c2b0c94767de69a82a39393f50e1ede0077398\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 129.52 kB | 129.52 kB | = | 41.53 kB | 41.53 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.65 kB | 134.65 kB | = | 43.01 kB | 43.01 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 427.76 kB | 427.76 kB | = | 78.53 kB | 78.53 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 417.45 kB | 417.45 kB | = | 77.06 kB | 77.06 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 427.76 kB | 427.76 kB | = | 78.53 kB | 78.53 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against c3c2b0c94767de69a82a39393f50e1ede0077398\n</p>\n","updated_at":"2021-12-24T06:17:06Z","created_at":"2021-12-24T06:17:06Z","creator_user_login":"sizebot"}
{"number":22942,"comment_id":"999607031","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: bcd24a6706cd802e49e9c0a509a42893ddceca7b...906b05b31d522a0c8a0c6a15fc8d73aa3e4e3f4a\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 129.52 kB | 129.52 kB | = | 41.53 kB | 41.53 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.65 kB | 134.65 kB | = | 43.01 kB | 43.01 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 427.76 kB | 427.76 kB | = | 78.53 kB | 78.53 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 417.45 kB | 417.45 kB | = | 77.06 kB | 77.06 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 427.76 kB | 427.76 kB | = | 78.53 kB | 78.53 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 906b05b31d522a0c8a0c6a15fc8d73aa3e4e3f4a\n</p>\n","updated_at":"2021-12-22T14:13:18Z","created_at":"2021-12-22T14:13:18Z","creator_user_login":"sizebot"}
{"number":23003,"comment_id":"998052868","body":"Hi @vitaliemiron! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Freact%20%2323003). Thanks!","updated_at":"2021-12-20T15:58:03Z","created_at":"2021-12-20T15:58:03Z","creator_user_login":"facebook-github-bot"}
{"number":23003,"comment_id":"998076892","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2021-12-20T16:22:26Z","created_at":"2021-12-20T16:22:26Z","creator_user_login":"facebook-github-bot"}
{"number":13567,"comment_id":"418795927","body":"This is an awesome proposal. Thanks for writing this up!\r\n\r\nLooking at the regex you created [here](https://github.com/jquery/jquery/blob/03e9dba3882868e1ee79f1fb0504326da925644f/src/css/isAutoPx.js#L7-L28) I have the feeling that managing the whitelist is not considerable easier. If we would expand the regex into an object (which would be faster to test against in production I assume), we'd not really save a lot - if anything at all.\r\n\r\nI think dropping number values for CSS properties would also not be a great solution since it's _very_ handy to use it and it would break probably every React app on the planet 🙂 (well, some people use CSS-in-JS I heard).\r\n\r\nHere's an alternative suggestion: What if we _always_ add `px` to numbers and add dev-only warnings for our unit-less CSS property list that this is probably an issue?\r\n\r\nThis would be a lot less magic going on under the hood. We could add the warning in 16.x and keep the current behavior for a while. And at some point we can remove the whole blacklist from the production build.","updated_at":"2018-09-05T16:38:26Z","created_at":"2018-09-05T16:32:20Z","creator_user_login":"philipp-spiess"}
{"number":13567,"comment_id":"418799064","body":"> What if we always add px to numbers and add dev-only warnings for our unit-less CSS property list that this is probably an issue?\r\n\r\nIsn't this what we do already? The issue here is that will actively break a whole lot of properties right","updated_at":"2018-09-05T16:42:09Z","created_at":"2018-09-05T16:42:09Z","creator_user_login":"jquense"}
{"number":13567,"comment_id":"418799582","body":"I do think as an intermediate solution applying `px` to only a subset of properties is a good option. It means we aren't going to break most apps, and we don't have to worry about the endless arms race of adding properties. ","updated_at":"2018-09-05T16:43:57Z","created_at":"2018-09-05T16:43:57Z","creator_user_login":"jquense"}
{"number":13567,"comment_id":"418805050","body":"> Isn't this what we do already? The issue here is that will actively break a whole lot of properties right\r\n\r\nCurrently we do use the whitelist in production. For example [here](https://codesandbox.io/s/oq88n6nrvz) I use `animationIterationCount` and it will be added as `2` without a `px` suffix. You can also find the string `animationIterationCount` in https://unpkg.com/react-dom@16.4.0/cjs/react-dom.production.min.js. There's also no warning from what I can see.\r\n\r\nI agree that we should not break React apps because of that but maybe we can add a warning and people slowly migrate away from this and one day (React 20, lol) we might be able to drop that whitelist and save precious bytes.","updated_at":"2018-09-05T17:00:23Z","created_at":"2018-09-05T17:00:23Z","creator_user_login":"philipp-spiess"}
{"number":13567,"comment_id":"418806994","body":"We whitelist properties without `px` suffixes, e.g. unitless ones, and otherwise always add the px to numbers. I'm not sure i understand the suggesting for the warning tho, what would we warn about?","updated_at":"2018-09-05T17:06:32Z","created_at":"2018-09-05T17:06:32Z","creator_user_login":"jquense"}
{"number":13567,"comment_id":"418808208","body":"My idea is to warn when using numbers with unitless CSS properties and encourage strings instead. This way we might eventually get rid of them and all remaining numbers can safely have a `px` suffix. \r\n\r\nNot sure if the plan is too ambitious, though. 🙂 ","updated_at":"2018-09-05T17:10:22Z","created_at":"2018-09-05T17:10:22Z","creator_user_login":"philipp-spiess"}
{"number":13567,"comment_id":"418860806","body":"@philipp-spiess \r\n> Looking at the regex you created here I have the feeling that managing the whitelist is not considerable easier. If we would expand the regex into an object (which would be faster to test against in production I assume), we'd not really save a lot - if anything at all.\r\n\r\nThe idea is that this whitelist wouldn't really be maintained; it would basically be frozen. I went through all CSS 2.1 props and deduced which ones might be much more popular than the other ones. I only mentioned increasing the whitelist in the case if just after the release people report we missed a very popular CSS prop. I doubt it'll happen, though.\r\n\r\nIn the ideal world, we wouldn't have this auto-`px`-appending behavior at all. I'm not sure how feasible would that be to achieve in React but in jQuery we decided it's not due to all the legacy code around. jQuery is used in wildly different ways, often in WordPress projects without any build process at all, sometimes even without version control, code pasted in CMS fields. Many old unmaintained plugins are often included, etc. We don't have a codemod mechanism like React and even if we had many people wouldn't have a way to use it. That's why we want to keep a small whitelist to limit the damage.\r\n\r\nReact could follow the same strategy or it could aim at a more ambitious goal - to get rid of auto-appending `px` completely.\r\n\r\n> Here's an alternative suggestion: What if we always add px to numbers and add dev-only warnings for our unit-less CSS property list that this is probably an issue?\r\n\r\nThat wouldn't be intuitive IMO. Consider how surprising it'd be for people that the following:\r\n```jsx\r\n<div style={{lineHeight: 2}} />\r\n```\r\nactually sets `2px` and that they need to quote the number to get it without the suffix.","updated_at":"2018-09-05T19:57:21Z","created_at":"2018-09-05T19:56:00Z","creator_user_login":"mgol"}
{"number":13567,"comment_id":"418863232","body":"yeah I think the auto px append is a bit of a relic, it probably was inspired by jQuery (tho we'd have check with the old timers on that one...@zpao). The interesting thing here is that px is special if you want to write something in terms of `rem` or `ems` you already need to specify a string, i think moving toward a space where numbers _mean_ unitless is the best option, _if_ we were going to do that. \r\n\r\n@mgol  if you are interested in making this happen, seeing how much code we could remove by removing the whitelist (in dev) would be a good first step, might give us a better idea of the potential worth. @gaearon could give us a sense if such a change is at all feasible in the FB context as well.","updated_at":"2018-09-05T20:03:57Z","created_at":"2018-09-05T20:03:57Z","creator_user_login":"jquense"}
{"number":13567,"comment_id":"418866111","body":"I could take a stab at it if it's not totally out of the question. I'll wait for further feedback for now. :)","updated_at":"2018-09-05T20:14:06Z","created_at":"2018-09-05T20:14:06Z","creator_user_login":"mgol"}
{"number":13567,"comment_id":"418893344","body":"> The idea is that this whitelist wouldn't really be maintained; it would basically be frozen.\r\n\r\nI'm not sure. I think if we continue to support both auto-`px` and unit-less numbers, we will run into problems with new CSS properties where we have to make adjustments because users will expect it to work.\r\n\r\nMy idea with auto-`px` for everything is probably biased because I use it _a lot_ 🙂. We should definitely look at the broader audience here and keep future units into account as well (👍 for @jquense's comment on `rem` or `ems` being different to `px` and @mgol's `lineHeight` example). But it's also important that we have a plan on how we could migrate (if we can do that at all).\r\n\r\nEither way, getting rid of one of those patterns will make React less magical which I really like about this idea.\r\n\r\n> seeing how much code we could remove by removing the whitelist (in dev) would be a good first step\r\n\r\n[More than I thought (~1%:)](https://github.com/philipp-spiess/react/commit/b6edcfc65847560244c54b7b26708b0e76595511) \r\n\r\n![](http://cl.ly/470f1bd09896/Image%202018-09-05%20at%2011.38.48%20PM.png)","updated_at":"2018-09-05T21:51:19Z","created_at":"2018-09-05T21:51:19Z","creator_user_login":"philipp-spiess"}
{"number":13567,"comment_id":"492270642","body":"I merged my PR to jQuery that mostly removes the `px` auto-appending logic. We kept a small finite whitelist of CSS props that still get the behavior but no new properties will be caught. See https://github.com/jquery/jquery/pull/4055.\r\n\r\nThe whitelist is a regex defined [in the `isAutoPx.js` modulehttps://github.com/jquery/jquery/blob/438b1a3e8a52d3e4efd8aba45498477038849c97/src/css/isAutoPx.js).","updated_at":"2019-05-14T14:49:38Z","created_at":"2019-05-14T14:49:38Z","creator_user_login":"mgol"}
{"number":14658,"comment_id":"461635975","body":"I’m sorry but I think you misread the content of the issue #14406. No one is talking about runtime checks. Indeed I created `hooks.macro` which does the job at build time — it looks at runtime, but that’s the power of Babel macros.","updated_at":"2019-02-07T23:34:48Z","created_at":"2019-02-07T23:34:48Z","creator_user_login":"yuchi"}
{"number":14658,"comment_id":"461947260","body":"@yuchi Your'e right I misread it. However, why do we need to use hooks like `useAutoMemo` if it can be inferred without it? Also what are your thoughts about the optimization with anonymous callbacks? This has been a problem for a long time with React components, and with hooks this can be solved. I don't see why we shouldn't take advantage of that.","updated_at":"2019-02-08T21:07:51Z","created_at":"2019-02-08T21:07:51Z","creator_user_login":"DAB0mB"}
{"number":14658,"comment_id":"468789329","body":"@DAB0mB super cool!  I was thinking it would be even better if it could wrap the `transformedData.map` in a `useMemo` call -- seems like that should be possible, do you see any potential obstacles to it?","updated_at":"2019-03-01T19:48:41Z","created_at":"2019-03-01T19:48:41Z","creator_user_login":"jedwards1211"}
{"number":14658,"comment_id":"469114003","body":"@jedwards1211 Everything's possible. Could you give me a sample input/output because I'm not sure exactly what do you mean. Also try to look at @yuchi's implementation, maybe you'll find something interesting.","updated_at":"2019-03-04T04:24:40Z","created_at":"2019-03-04T04:24:40Z","creator_user_login":"DAB0mB"}
{"number":14658,"comment_id":"469144550","body":"@DAB0mB yeah, actually I put some examples at https://github.com/DAB0mB/babel-plugin-react-persist/issues/1","updated_at":"2019-03-04T07:20:04Z","created_at":"2019-03-04T07:20:04Z","creator_user_login":"jedwards1211"}
{"number":14658,"comment_id":"469144663","body":"Maybe at some point I could contribute a PR myself","updated_at":"2019-03-04T07:20:33Z","created_at":"2019-03-04T07:20:33Z","creator_user_login":"jedwards1211"}
{"number":14658,"comment_id":"469573568","body":"Ok, it took some time before I could look deeply at this proposal. The approach is very intersting IMHO, your issue description doesn’t explain all the optimiziations introduced.\r\n\r\nSo, let me share some ideas:\r\n\r\n1. First of all, it looks a little bit too aggressive: how does it recognize a component from a normal arrow? This is unclear and potentially confusing. IMHO with a Babel Macro you could offer an API that explicitly marks (by wrapping) components for deep optimizations.\r\n2. Also having it as a Babel plugin makes it very diffult to try it out on Create React App projects. Again, a Babel Macro would solve this.\r\n3. Creating “virtual” intermediate components on the fly is a great idea that should be explored more. One problem I’m thinking about is that it can‘t discern render props from callbacks —  this could lead to nasty subtle bugs.\r\n4. In the example you posted above (no idea if that’s solved on master, didn’t try it out) there are some very bad bugs introduced by your intermediate components optimizations:\r\n    1. Have a look at the `history` prop: if it changes in a later re-render the variable `_anonymousFnComponent2` will be already defined and will still point to the old `history` value. This is even more apparent with `id, value` in the array map: they will all render only the first item!\r\n    2. You therefore need to use a specialized form of lambda lifting, transforming all free variables into explicit props (lambda lifting would transform them to arguments instead of props). _Then_ you can re-use the same component between component instances and re-renders.\r\n    3. Obviously you can’t do this trick if there are some `let` variables that the user re-assigns to during render. You need to identify those cases and bail out, probably with a warning.\r\n    4. I would place a `React.memo` around those components, just in case :)\r\n5. Again, aggressively turning all elements to intermediate components is not a good idea IMHO. Could be a nice Babel Macro by itself, that let the user explictly mark his/her intention.","updated_at":"2019-03-05T07:41:15Z","created_at":"2019-03-05T07:41:15Z","creator_user_login":"yuchi"}
{"number":14658,"comment_id":"469593634","body":"@yuchi I had a comment on another issue about how in my mind the ideal, pie-in-the-sky React compiler would be able to completely compile away virtual DOM diffing where possible...:smile:  Can't find that issue at the moment","updated_at":"2019-03-05T08:50:55Z","created_at":"2019-03-05T08:50:36Z","creator_user_login":"jedwards1211"}
{"number":14658,"comment_id":"471252176","body":"@yuchi I'm just expecting to have a solution that works right out of the box. I don't even wanna think about it. If a machine can do it better than me, why should I even bother? If there would be enough awareness for this plug-in and activity from the community, there would be almost non to no bugs. Of course there are bugs in what I created, but it's only a proof of concept. About using `let` variable - you definitely can't use `useMemo()`, my plug-in handles that pretty nicely, Everything is solvable with a smart enough plug-in.","updated_at":"2019-03-10T06:45:26Z","created_at":"2019-03-10T06:45:26Z","creator_user_login":"DAB0mB"}
{"number":13989,"comment_id":"485147130","body":"@konsultacijos `shouldComponentUpdate` does accept `nextContext` as an argument ([code][code], [docs][docs]), but you need to define `contextTypes` within a component. Excerpt from docs:\r\n\r\n> If contextTypes is defined within a component, the following lifecycle \r\n> methods will receive an additional parameter, the context object:\r\n>\r\n> ...\r\n>\r\n> * shouldComponentUpdate(nextProps, nextState, nextContext)\r\n>\r\n> ...\r\n\r\nNote that the above is a legacy API.\r\n\r\n\r\n~I think that what you want to accomplish is not possible with the [new API][newApi]. This is because:~\r\n\r\n- if your context value is an object you should update it by creating a new object in the same way that you would update a state of a component\r\n- ~if you update the context value by creating a new object, the references of all of the properties are going to change as well, so that would mean that *all* of the components using the context value would rerender, irrespective of which property of the context-value they're using~ **_see @Lexicality's comment below_**\r\n\r\nBut my understanding is not exhaustive and all feedback is welcome.\r\n\r\n[code]: https://github.com/facebook/react/blob/master/packages/react-reconciler/src/ReactFiberClassComponent.js#L242-L259\r\n[docs]: https://reactjs.org/docs/legacy-context.html#referencing-context-in-lifecycle-methods\r\n[newApi]: https://reactjs.org/docs/context.html","updated_at":"2019-04-23T18:09:32Z","created_at":"2019-04-20T17:55:50Z","creator_user_login":"nataliemarleny"}
{"number":13989,"comment_id":"485690202","body":"> if you update the context value by creating a new object, the references of all of the properties are going to change as well, so that would mean that all of the components using the context value would rerender, irrespective of which property of the context-value they're using\r\n\r\nThe context should work like the state does, so any scalars should remain the same and any sub-objects that have not changed should be the same object.\r\nFor example:\r\n```javascript\r\nimport React from \"react\";\r\n\r\nexport const MyContext = React.createContext({\r\n    num: 0,\r\n    bigObj: null,\r\n});\r\n\r\nexport function MyComponent(props) {\r\n    const [num, setNum] = React.useState(0);\r\n    const [bigObj, _] = React.useState({\r\n        foo: \"bar\",\r\n        // etc\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => setNum(num + 1)}>Click me</button>\r\n            <MyContext.Provider value={{ num, bigObj }}>\r\n                {props.children}\r\n            </MyContext.Provider>\r\n        </div>\r\n    );\r\n}\r\n```","updated_at":"2019-04-23T08:10:05Z","created_at":"2019-04-23T08:10:05Z","creator_user_login":"Lexicality"}
{"number":13989,"comment_id":"572935921","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-10T08:53:36Z","created_at":"2020-01-10T08:53:36Z","creator_user_login":"stale[bot]"}
{"number":13989,"comment_id":"575329718","body":"This issue is still relevant, unless class components are being deprecated?","updated_at":"2020-01-16T20:21:41Z","created_at":"2020-01-16T20:21:41Z","creator_user_login":"Lexicality"}
{"number":23015,"comment_id":"999606522","body":"This is an interesting observation so I've tagged it for discussion. (Not sure it's something we'll change though.)\r\n\r\nYour investigation above is correct, but missing one detail– in strict mode, React instantiates class components twice (to tease out side effects in the constructor):\r\nhttps://github.com/facebook/react/blob/bcd24a6706cd802e49e9c0a509a42893ddceca7b/packages/react-reconciler/src/ReactFiberClassComponent.new.js#L656-L670\r\n\r\nThe primary difference is that it throws one of the two instances away and calls `render` twice on the single remaining instance– so the class instance ref isn't reset between those two renders.\r\n\r\nThis is kind of an artifact of the way the code is structured. (It would have been a much more pervasive change to do the larger instantiate-and-render loop twice.)","updated_at":"2021-12-22T14:14:13Z","created_at":"2021-12-22T14:12:34Z","creator_user_login":"bvaughn"}
{"number":23015,"comment_id":"999753251","body":"> This is an interesting observation so I've tagged it for discussion. (Not sure it's something we'll change though.)\r\n> \r\n> Your investigation above is correct, but missing one detail– in strict mode, React instantiates class components twice (to tease out side effects in the constructor):\r\n> \r\n> https://github.com/facebook/react/blob/bcd24a6706cd802e49e9c0a509a42893ddceca7b/packages/react-reconciler/src/ReactFiberClassComponent.new.js#L656-L670\r\n> \r\n> The primary difference is that it throws one of the two instances away and calls `render` twice on the single remaining instance– so the class instance ref isn't reset between those two renders.\r\n> \r\n> This is kind of an artifact of the way the code is structured. (It would have been a much more pervasive change to do the larger instantiate-and-render loop twice.)\r\n\r\nThanks for reminding me of this detail. I took a look again, and indeed the \"instance\" that was instantiated for the first time was directly discarded in strict mode. Regarding this situation, is it possible to find a way to get the instance generated by the first initialization when the render method is called, and then use different instances for the two renders?(I think because the code structure, it may be difficult to pass both instances down.:pensive::pensive::pensive:)\r\n\r\nIn my scenario, I found that someone make side-effect operations in class \"render\" function. I originally thought it would be dangerous, but found that he did bypass the danger through the variable on this (But I still feel that this is not a good design).\r\n\r\nI think that it is better to unify the behavior of the function component and the class component.I want to know if the senior in the react team plan to modify this situation.\r\n\r\nThanks~","updated_at":"2021-12-22T17:39:31Z","created_at":"2021-12-22T17:39:31Z","creator_user_login":"y805939188"}
{"number":23015,"comment_id":"1000133185","body":"Refer from https://reactjs.org/docs/implementation-notes.html\r\n> If App is a function, the reconciler will call App(props) to get the rendered element.\r\n\r\n> If App is a class, the reconciler will instantiate an App with new App(props), call the componentWillMount() lifecycle method, and then will call the render() method to get the rendered element.\r\n\r\nI think function components should be designed as some simple component just included render part. Maybe we can imagine function component is class component's render function.  Actually your demo can be traslate to fellow code: \r\n```js import React from 'react';\r\n\r\nconst TestFunc = () => {\r\n  debugger\r\n  const myRef = React.useRef(true)\r\n  if (myRef.current) {\r\n    myRef.current = false\r\n  }\r\n\r\n  return <div>666</div>\r\n}\r\n// Traslate function component to class component , Actaully it is diff with class component TestClass\r\nclass _TestFunc extends React.Component {\r\n     render () {\r\n        const myRef = React.useRef(true)\r\n        if (myRef.current) {\r\n          myRef.current = false\r\n        }\r\n        return <div>666</div>\r\n     }\r\n}\r\n\r\nclass TestClass extends React.Component {\r\n  myRef = React.createRef()\r\n  constructor(props) {\r\n    super(props);\r\n    this.myRef.current = true\r\n  }\r\n\r\n  render() {\r\n    debugger\r\n    if (this.myRef.current) {\r\n      this.myRef.current = false\r\n    }\r\n    return <div>888</div>\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <React.StrictMode>\r\n      <TestFunc />\r\n      <TestClass />\r\n    </React.StrictMode>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","updated_at":"2021-12-23T08:38:40Z","created_at":"2021-12-23T08:35:00Z","creator_user_login":"cuobiezi"}
{"number":23015,"comment_id":"1001356301","body":"> Refer from https://reactjs.org/docs/implementation-notes.html\r\n> \r\n> > If App is a function, the reconciler will call App(props) to get the rendered element.\r\n> \r\n> > If App is a class, the reconciler will instantiate an App with new App(props), call the componentWillMount() lifecycle method, and then will call the render() method to get the rendered element.\r\n> \r\n> I think function components should be designed as some simple component just included render part. Maybe we can imagine function component is class component's render function. Actually your demo can be traslate to fellow code:\r\n> \r\n> ```js\r\n> const TestFunc = () => {\r\n>   debugger\r\n>   const myRef = React.useRef(true)\r\n>   if (myRef.current) {\r\n>     myRef.current = false\r\n>   }\r\n> \r\n>   return <div>666</div>\r\n> }\r\n> // Traslate function component to class component , Actaully it is diff with class component TestClass\r\n> class _TestFunc extends React.Component {\r\n>      render () {\r\n>         const myRef = React.useRef(true)\r\n>         if (myRef.current) {\r\n>           myRef.current = false\r\n>         }\r\n>         return <div>666</div>\r\n>      }\r\n> }\r\n> \r\n> class TestClass extends React.Component {\r\n>   myRef = React.createRef()\r\n>   constructor(props) {\r\n>     super(props);\r\n>     this.myRef.current = true\r\n>   }\r\n> \r\n>   render() {\r\n>     debugger\r\n>     if (this.myRef.current) {\r\n>       this.myRef.current = false\r\n>     }\r\n>     return <div>888</div>\r\n>   }\r\n> }\r\n> \r\n> function App() {\r\n>   return (\r\n>     <React.StrictMode>\r\n>       <TestFunc />\r\n>       <TestClass />\r\n>     </React.StrictMode>\r\n>   );\r\n> }\r\n> \r\n> export default App;\r\n> ```\r\n\r\nYes~ Due to the current implementation of class components in strict mode, it is true that translating function components into class components can record side effects.\r\nBut I am thinking, is it in suspense mode or concurrent mode, even if it is not in strict mode, if side effects are placed in render, some problems will arise.\r\n\r\nIn this example: https://codesandbox.io/s/suspicious-estrela-rjo1x?file=/src/App.js:0-791\r\n\r\nThis example is not in strict mode. Among them, when the sentence \"resource.read(true, 1000, true)\" is executed, the \"react-suspense-cache\" component will throw a promise to interrupt the rendering. When react is rendered for the second time, the state saved by the ref in the previous rendering is also lost.\r\n\r\nIn fact, this example is really extreme, I just wrote this example purely to create a problem. But it is indeed a problem that may occur in suspense mode, and at the same time react can also work normally.\r\n\r\nI wrote this example just to show that it is dangerous to do side-effect operations in the render method. I think if react can be in strict mode, whether it is a function component or a class component, it can be completely isolated from the previous state, then it may be more Great to help developers find some problems.\r\n\r\nThanks~\r\n\r\n```js\r\nimport React, { Suspense } from \"react\";\r\nimport fetchData from \"react-suspense-cache\";\r\n\r\nconst getMockData = (time, fakeRes) =>\r\n  new Promise((res) => {\r\n    setTimeout(() => {\r\n      res(fakeRes);\r\n    }, time);\r\n  });\r\n\r\nconst resource = fetchData(getMockData);\r\n\r\nclass Test extends React.Component {\r\n  myRef = true;\r\n  render() {\r\n    if (this.myRef) {\r\n      console.log(this.myRef);\r\n      this.myRef = false;\r\n    }\r\n\r\n    const res = resource.read(true, 1000, true);\r\n\r\n    return res ? <div>get remote data succeed</div> : <div>error</div>;\r\n  }\r\n}\r\n\r\nfunction App() {\r\n  return (\r\n    <Suspense fallback={<div>loading...</div>}>\r\n      <Test />\r\n    </Suspense>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n```\r\n","updated_at":"2021-12-27T06:10:42Z","created_at":"2021-12-27T06:10:42Z","creator_user_login":"y805939188"}
{"number":14170,"comment_id":"437617854","body":"Getting something similar with Enzyme. \r\n`Enzyme Internal Error: unknown node with tag 13`","updated_at":"2018-11-10T20:11:33Z","created_at":"2018-11-10T20:11:33Z","creator_user_login":"balazsorban44"}
{"number":14170,"comment_id":"455569540","body":"Hi @gaearon , sorry for pinging here. In airbnb/enzyme#1975 we are also stuck with that the shallow renderer doesn't support rendering Suspense.\r\nI'm not sure what should the expected result of shallow render `Suspense` be (Should the fallback / React.lazy mechanism works here? Or we can have some options in `ShallowRender` to handle this?). But I think there are some use cases that people will want to shallow render `Suspense` to get the children under it (like `wrapper.dive()` in enzyme). It'd be great to make it work.","updated_at":"2019-01-18T14:45:24Z","created_at":"2019-01-18T14:45:24Z","creator_user_login":"chenesan"}
{"number":14170,"comment_id":"455580967","body":"I suspect that until Buzz (or was it Fizz?) is ready, you'll have to do with just rendering the fallback. The current server renderer is synchronous.","updated_at":"2019-01-18T15:18:26Z","created_at":"2019-01-18T15:18:26Z","creator_user_login":"Jessidhia"}
{"number":14170,"comment_id":"455746256","body":"Shallow render is different with server renderer I think. I'm just wondering how we can support Suspense in shallow renderer.","updated_at":"2019-01-19T03:40:14Z","created_at":"2019-01-19T03:40:14Z","creator_user_login":"chenesan"}
{"number":14170,"comment_id":"493965710","body":"Hi, I'm wondering if there is any decision made regarding how `Suspense` should be treated with the shallow renderer?\r\nWe're currently trying to adapt many of our components to be lazily loaded and we're running into troubles with our snapshot testing where the component names in our snapshots always end up as `UNDEFINED` if they are lazily loaded.","updated_at":"2019-05-20T12:28:27Z","created_at":"2019-05-20T12:28:27Z","creator_user_login":"su-kialo"}
{"number":14170,"comment_id":"522350670","body":"Just ran into this as well. Assuming this still isn't supported? The promise never resolves and the suspense state always renders the fallback.","updated_at":"2019-08-18T20:00:33Z","created_at":"2019-08-18T20:00:33Z","creator_user_login":"milesj"}
{"number":14170,"comment_id":"775908974","body":"> Just ran into this as well. Assuming this still isn't supported? The promise never resolves and the suspense state always renders the fallback.\r\n\r\nhttps://www.youtube.com/watch?v=lfb5jvHq9c4","updated_at":"2021-02-09T12:42:22Z","created_at":"2021-02-09T12:42:22Z","creator_user_login":"tirthaguha"}
{"number":14170,"comment_id":"825125957","body":"One workaround that I used that seems to work at least on my local machine is to await a setTimeout 0 promise after the render but before the expect statements. This gives a tick between the render and the expect to load and render the lazy component.\r\n```\r\nit('testname', async() => {\r\n  // Render the component using renderer.create\r\n  await new Promise(resolve => {\r\n    window.setTimeout(resolve, 0);\r\n  });\r\n  // Do your expects\r\n});\r\n```\r\nThis cannot be used in cases where timers are mocked since it relies on a timer to operate.","updated_at":"2021-04-22T19:28:03Z","created_at":"2021-04-22T19:28:03Z","creator_user_login":"patrickmcdougle-okta"}
{"number":14170,"comment_id":"1073307035","body":"@patrickmcdougle-okta wow, this actually worked. Thank you! ","updated_at":"2022-03-20T18:30:15Z","created_at":"2022-03-20T18:30:15Z","creator_user_login":"divmgl"}
{"number":22991,"comment_id":"997399840","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: c7917fe76982c499c81be9571de44fe1293ac893...ad423f603e52a72933f77d18e295e580ceaa0fd5\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 129.89 kB | 129.90 kB | +0.01% | 41.62 kB | 41.63 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.64 kB | 134.66 kB | = | 43.00 kB | 43.01 kB\n| facebook-www/ReactDOM-prod.classic.js | **+0.02%** | 428.08 kB | 428.16 kB | +0.02% | 78.60 kB | 78.61 kB\n| facebook-www/ReactDOM-prod.modern.js | **+0.02%** | 416.64 kB | 416.72 kB | +0.02% | 76.91 kB | 76.93 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **+0.02%** | 428.08 kB | 428.16 kB | +0.02% | 78.60 kB | 78.62 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against ad423f603e52a72933f77d18e295e580ceaa0fd5\n</p>\n","updated_at":"2021-12-19T14:16:50Z","created_at":"2021-12-19T14:16:50Z","creator_user_login":"sizebot"}
{"number":24730,"comment_id":"1157014131","body":"> Note that the previous workaround (inert=\"\") will no longer work since the empty string is considered false for boolean props.\r\n\r\nSeems like we might want to add this as a breaking change for 19 then? Maybe add it behind a flag in experimental for now so we know to enable it later?","updated_at":"2022-06-15T22:30:46Z","created_at":"2022-06-15T22:30:46Z","creator_user_login":"sebmarkbage"}
{"number":24730,"comment_id":"1157259142","body":"> Seems like we might want to add this as a breaking change for 19 then? Maybe add it behind a flag in experimental for now so we know to enable it later?\r\n\r\nYeah that seems reasonable.\r\n\r\nThough we'll run into this scenario over and over and it's a bit annoying for React users since `inert` is part of the standard and supported by now.\r\n\r\nWould it make sense for unknown props to check if a prop is an IDL attribute (e.g. `'inert' in htmlElement`) and then set the IDL attribute to the prop value? Relying on the fact the browser is responsible for potentially reflecting the value in the content attribute. This would match the behavior behind `enableCustomElementPropertySupport` for custom component tags.","updated_at":"2022-06-16T05:54:52Z","created_at":"2022-06-16T05:49:08Z","creator_user_login":"eps1lon"}
{"number":24730,"comment_id":"1157951172","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 4cd788aef03d8f32c03e4dac4d0cf28b220cedfb...b052e933168500975370cd1ea2e39a2840e93bc3\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/b052e933168500975370cd1ea2e39a2840e93bc3/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **=** | 131.79 kB | 131.79 kB | = | 42.40 kB | 42.40 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/b052e933168500975370cd1ea2e39a2840e93bc3/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.02%** | 137.06 kB | 137.08 kB | +0.04% | 44.00 kB | 44.01 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/b052e933168500975370cd1ea2e39a2840e93bc3/files/facebook-www/ReactDOM-prod.classic.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **=** | 457.17 kB | 457.17 kB | = | 83.22 kB | 83.22 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/b052e933168500975370cd1ea2e39a2840e93bc3/files/facebook-www/ReactDOM-prod.modern.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.01%** | 442.41 kB | 442.47 kB | +0.03% | 80.94 kB | 80.96 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/b052e933168500975370cd1ea2e39a2840e93bc3/files/facebook-www/ReactDOMForked-prod.classic.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **=** | 457.94 kB | 457.94 kB | = | 83.33 kB | 83.33 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [facebook-www/ReactFlightDOMRelayServer-prod.modern.js](https://react-builds.vercel.app/commits/b052e933168500975370cd1ea2e39a2840e93bc3/files/facebook-www/ReactFlightDOMRelayServer-prod.modern.js?compare=4cd788aef03d8f32c03e4dac4d0cf28b220cedfb) | **+0.29%** | 27.91 kB | 28.00 kB | +0.31% | 7.37 kB | 7.40 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against b052e933168500975370cd1ea2e39a2840e93bc3\n</p>\n","updated_at":"2022-07-02T07:14:59Z","created_at":"2022-06-16T17:34:42Z","creator_user_login":"sizebot"}
{"number":24730,"comment_id":"1157959501","body":"@sebmarkbage I could add `hidden` to `OVERLOADED_BOOLEAN` which would ensure compat with `inert=\"\"`. This also has the benefit to prevent future compat issues like `hidden` has: adding support for `hidden=\"until-found\"` (see https://github.com/facebook/react/issues/24740) means `hidden=\"\"` will now be considered `true` instead of `false`.","updated_at":"2022-06-16T17:44:16Z","created_at":"2022-06-16T17:44:16Z","creator_user_login":"eps1lon"}
{"number":24730,"comment_id":"1426705162","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 64acd3918a26d92773d3dd451a735603ef50d3a7...bb88c83f5439e40f287a8e4c72b7e76942b1f622\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/bb88c83f5439e40f287a8e4c72b7e76942b1f622/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=64acd3918a26d92773d3dd451a735603ef50d3a7) | **=** | 154.54 kB | 154.54 kB | = | 48.83 kB | 48.83 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/bb88c83f5439e40f287a8e4c72b7e76942b1f622/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=64acd3918a26d92773d3dd451a735603ef50d3a7) | **+0.02%** | 156.54 kB | 156.57 kB | +0.04% | 49.45 kB | 49.47 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/bb88c83f5439e40f287a8e4c72b7e76942b1f622/files/facebook-www/ReactDOM-prod.classic.js?compare=64acd3918a26d92773d3dd451a735603ef50d3a7) | **=** | 529.73 kB | 529.73 kB | = | 94.36 kB | 94.36 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/bb88c83f5439e40f287a8e4c72b7e76942b1f622/files/facebook-www/ReactDOM-prod.modern.js?compare=64acd3918a26d92773d3dd451a735603ef50d3a7) | **+0.01%** | 514.95 kB | 515.02 kB | +0.03% | 92.17 kB | 92.20 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [facebook-www/ReactFlightDOMRelayServer-prod.modern.js](https://react-builds.vercel.app/commits/bb88c83f5439e40f287a8e4c72b7e76942b1f622/files/facebook-www/ReactFlightDOMRelayServer-prod.modern.js?compare=64acd3918a26d92773d3dd451a735603ef50d3a7) | **+0.24%** | 37.09 kB | 37.18 kB | +0.25% | 9.21 kB | 9.24 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against bb88c83f5439e40f287a8e4c72b7e76942b1f622\n</p>\n","updated_at":"2023-02-11T11:37:31Z","created_at":"2023-02-11T11:32:28Z","creator_user_login":"react-sizebot"}
{"number":24730,"comment_id":"1546065709","body":"All major browsers support the `inert` attribute. \r\n\r\nThe original request for React to \"whitelist\" this attribute was opened 3 1/2 years ago, presumably to prevent this very situation where React, not the browsers, is the blocker. \r\n\r\nThis PR was opened 1 year ago. It remains open and those who maintain React projects are prevented from using this new HTML attribute.\r\n\r\nI'm sure the React team is a great bunch of folks - honestly - but it is unacceptable for a project like React to drag its feet for more than 3 years now and prevent developers from using native HTML features. This is IE behavior. React isn't a little open-source project maintained by volunteers, React is a product marketed to developers with a multi-million dollar budget and paid full-time engineers. Again, great people I'm sure, but great people don't always deliver early or even on time. Support for `inert` is objectively very late. Let's please get this merged!","updated_at":"2023-05-12T17:31:57Z","created_at":"2023-05-12T17:30:36Z","creator_user_login":"jfbrennan"}
{"number":24730,"comment_id":"1607007139","body":"Its 2023, June, and React still doesn't recognize the `inert` attribute. I really hope its implemented as soon as possible. Such a basic thing taking sooooo long","updated_at":"2023-06-26T08:51:22Z","created_at":"2023-06-26T08:51:22Z","creator_user_login":"DIPANJAN01"}
{"number":24730,"comment_id":"1670910805","body":"Still waiting for a 3 year old html native attribut...","updated_at":"2023-08-09T08:39:32Z","created_at":"2023-08-09T08:39:32Z","creator_user_login":"ingomc"}
{"number":24730,"comment_id":"1698134555","body":"@jfbrennan @DIPANJAN01 @ingomc sorry about this taking so long. in the mean time you should be able to work around this by using adding the `inert=\"\"` attribute e.g. `<div inert=\"\" />`. If this workaround doesn't' work for your use case please let us know so we have the chance to fix it in this PR.\r\n\r\n","updated_at":"2023-08-29T20:58:32Z","created_at":"2023-08-29T20:58:32Z","creator_user_login":"mattcarrollcode"}
{"number":24730,"comment_id":"1698440359","body":"Thanks @mattcarrollcode I did just that and also had to add this to get TS to shut up:\r\n```\r\ndeclare module 'react' {\r\n  interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\r\n    inert?: ''; // TODO Treating this totally valid HTML attribute as custom to make React work. Remove after this bug is fixed https://github.com/facebook/react/pull/24730\r\n  }\r\n}\r\n```","updated_at":"2023-08-30T03:40:13Z","created_at":"2023-08-30T03:39:37Z","creator_user_login":"jfbrennan"}
{"number":14168,"comment_id":"437394380","body":"It happens because the browser trim the spaces from the end of the value. Modify your code as follows to see what happens:\r\n```jsx\r\n  inputOnChange = ({ target }) => {\r\n    console.log('\\'' + target.value + '\\'');\r\n    this.setState({ [target.name]: target.value });\r\n  }\r\n```\r\n\r\nLooks already discussed here https://github.com/facebook/react/issues/6368","updated_at":"2018-11-09T15:29:05Z","created_at":"2018-11-09T15:29:05Z","creator_user_login":"Xizario"}
{"number":14168,"comment_id":"438887631","body":"This means we have to choose between using an uncontrolled input with `type=\"email\"` _or_ a controlled input with `type=\"text\"`, which isn't great.\r\n\r\nMy \"solution\" is to swallow the event if it's a space:\r\n\r\n```js\r\n// Controlled email input\r\n<input\r\n  type=\"email\"\r\n  value={this.state.value}\r\n  onChange={this.onChange}\r\n  onKeyPress={this.onKeyPress} />\r\n\r\nonKeyPress = syntheticEvent => {\r\n  if (syntheticEvent.charCode === 32) {\r\n    syntheticEvent.preventDefault();\r\n  }\r\n}\r\n\r\nonChange = evt => {\r\n  this.setState({ value: evt.target.value });\r\n}\r\n```\r\n\r\nThis won't work if a user pastes an email with a space in it, but it's the least terrible bandaid I could come up with 🙈","updated_at":"2018-11-15T01:57:33Z","created_at":"2018-11-15T01:57:33Z","creator_user_login":"deammer"}
{"number":14168,"comment_id":"463637829","body":"A similar issue was reported on Material-UI side. The regression seems to have come between React v16.2.0 and v16.3.0: https://codesandbox.io/s/xrv5w1j90w.","updated_at":"2019-02-14T14:02:34Z","created_at":"2019-02-14T14:02:34Z","creator_user_login":"oliviertassinari"}
{"number":14168,"comment_id":"485120995","body":"I've narrowed down to where this problem was introduced - it first appears because of the changes in [`4338c8db` commit to the file `src/renderers/dom/shared/HTMLDOMPropertyConfig.js`][1]. If the changes from this commit/file are reverted in any of the commits that come after it, `<input type=\"email\">` no longer has this strange behaviour.\r\n\r\nAs I can see in `packages/react-dom/src/shared/DOMProperty.js` in the master branch, there aren't any markers to denote that a prop has side-effects anymore, so purely reverting to fix this problem doesn't seem straightforward.\r\n\r\n\r\n[1]: https://github.com/facebook/react/commit/4338c8db4b03cb1ba5f2e229b1baa5a848fe65ab#diff-5a2abece6f8c2495d8242daa40245434","updated_at":"2019-04-20T13:39:08Z","created_at":"2019-04-20T13:37:59Z","creator_user_login":"nataliemarleny"}
{"number":14168,"comment_id":"572935962","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-10T08:53:42Z","created_at":"2020-01-10T08:53:42Z","creator_user_login":"stale[bot]"}
{"number":14168,"comment_id":"574293574","body":"I'm still getting this bug on React 16.12.0","updated_at":"2020-01-14T17:48:05Z","created_at":"2020-01-14T17:48:05Z","creator_user_login":"LucasDachman"}
{"number":14168,"comment_id":"593659548","body":"> I'm still getting this bug on React 16.12.0\r\n\r\nsame here, any fixes?","updated_at":"2020-03-02T22:36:31Z","created_at":"2020-03-02T22:36:31Z","creator_user_login":"Avadakedvr"}
{"number":14168,"comment_id":"646135267","body":"I made a fix in chrome which should fix this problem which should be released in chrome 85, try it out on canary: https://www.google.com/chrome/canary/","updated_at":"2020-06-18T16:16:06Z","created_at":"2020-06-18T16:16:06Z","creator_user_login":"josepharhar"}
{"number":14168,"comment_id":"653716120","body":"Hi, I'm still seeing this issue on React v16.13.1. Seeing it on Chrome browser. Anyone here observed the same on the latest React version 16.13.1? Someone here has the fix for this issue? Thanks.","updated_at":"2020-07-04T03:41:19Z","created_at":"2020-07-04T03:41:19Z","creator_user_login":"JCC13"}
{"number":14168,"comment_id":"653782096","body":"@JCC13 Did you try it in chrome canary? The fix is not in stable chrome yet.","updated_at":"2020-07-04T15:52:07Z","created_at":"2020-07-04T15:52:07Z","creator_user_login":"josepharhar"}
{"number":14168,"comment_id":"723289987","body":"@gaearon I believe this issue is fixed.\r\n- Firefox: I believe this never affected firefox\r\n- Chrome: The fix is now in stable chrome\r\n- Safari: I just landed a fix to webkit","updated_at":"2020-11-06T20:40:35Z","created_at":"2020-11-06T20:40:35Z","creator_user_login":"josepharhar"}
{"number":14168,"comment_id":"723301068","body":"@josepharhar I can confirm that this bug is fixed in Chrome 86 with React 16.13.1.\r\n\r\nhttps://codepen.io/deammer/pen/rNLZzyV","updated_at":"2020-11-06T21:10:35Z","created_at":"2020-11-06T21:10:35Z","creator_user_login":"deammer"}
{"number":14694,"comment_id":"457382948","body":"Seems to be caused if the \"value\" prop (e.g <input value=\"mystring\"> which chrome seems to see as a default value/placeholder for the field) is equal to the inserted value of the field. So when react updated the value prop on state change, we are technically changing the default value/placeholder to match whatever we type in. So chrome then sees this as an untouched field, and will overwrite on auto fill\r\n\r\nFor example. Type a string in the first name field...react will update the value prop to whatever you've typed. Try the email Autofill and it will overwrite the first name field.\r\n\r\nHowever, type in a string in the first name field, then inspect element and edit the firstname value prop to a string other than the one you've typed in, and try email autofill again...this time it will not overwrite...since the value is not the same as the \"default\" value.\r\n\r\nAnother way around it is onChange, update autocomplete=this.state.value. And chrome will recognise not to autocomplete this field for some reason. (autocomplete=off doesn't work...it has to be any random string) If empty and this.state.value is empty, then autofill will still work on the field as expected.\r\n","updated_at":"2019-01-24T22:29:58Z","created_at":"2019-01-24T22:29:58Z","creator_user_login":"mabeabe28"}
{"number":14694,"comment_id":"457418584","body":"^^ That's right. Here's a working example using the onChange suggestion: https://jsfiddle.net/epicfaace/9p17e2qx/29/","updated_at":"2019-01-25T01:10:12Z","created_at":"2019-01-25T01:10:12Z","creator_user_login":"epicfaace"}
{"number":14694,"comment_id":"458197929","body":"Very interesting! This is a side-effect of synchronizing the value attribute/property on inputs that I wasn't aware of before (thanks, @mabeabe28):\r\n\r\n**If the value attribute is the same as the value property, Chrome assumes the input is \"untouched\", and will replace the value property during an autofill action**\r\n\r\nI wonder if this is true in other browsers.\r\n\r\nI feel like we must have a bug tracking autofill issues, but I am not sure if any of them document this. I also made a gist that compares the native and React approach:\r\n\r\nhttps://codesandbox.io/s/01zr8pll00","updated_at":"2019-01-28T18:19:37Z","created_at":"2019-01-28T16:21:20Z","creator_user_login":"nhunzaker"}
{"number":14694,"comment_id":"460287022","body":">If the value attribute is the same as the value property, Chrome assumes the input is \"untouched\", and will replace the value property during an autofill action\r\n\r\nThis might be at least partially resolved by #13525 (\"Stop reflecting input values in the value attribute\").","updated_at":"2019-02-04T15:19:29Z","created_at":"2019-02-04T15:19:22Z","creator_user_login":"beheh"}
{"number":14342,"comment_id":"549792762","body":"We are seeing this issue as well. The issue is still present with `Edge 44.18362.387.0` and `react / react-dom 16.8.4` and `16.11.0`. \r\n\r\nThis issue seems highly related to https://github.com/facebook/react/issues/11768, especially since the line that throws the error per my investigation is the first `Object.defineProperty` targeted by the fix for it: https://github.com/facebook/react/pull/11870/files\r\n\r\nSeemingly the bug in Edge has grown more severe and the above fix is no longer enough...","updated_at":"2019-11-05T12:28:17Z","created_at":"2019-11-05T11:57:22Z","creator_user_login":"nikparo"}
{"number":14342,"comment_id":"549806202","body":"**Edit:** I was confused by the result of `getOwnPropertyDescriptor` being different when logged to the console than what it is during the function call.\r\n\r\n---\r\n\r\n~~It seems that `Object.getOwnPropertyDescriptor(node.constructor.prototype, ...);`~~ fails if\r\n `node` and `Object` are part of different windows. (function `trackValueOnNode` in [inputValueTracking.js](https://github.com/facebook/react/blob/master/packages/react-dom/src/client/inputValueTracking.js)\r\n\r\n~~The returned value is `{ 0: \"<Object doesn't support property or method 'Symbol.iterator'>\"}`~~\r\n\r\nOn the other hand, if we redefine `Object` the rest of the code works:\r\n``` js\r\nconst Object = node.ownerDocument.defaultView.Object;\r\n\r\nconst descriptor = Object.getOwnPropertyDescriptor(\r\n  node.constructor.prototype,\r\n  valueField,\r\n);\r\n```","updated_at":"2019-11-05T12:59:20Z","created_at":"2019-11-05T12:39:57Z","creator_user_login":"nikparo"}
{"number":14342,"comment_id":"549823023","body":"After a bit more testing, it seems that `Object.defineProperty` is indeed at the core of the issue, as it's enough to use the external window's `Object` for that one line.\r\n\r\n[inputValueTracking.js](https://github.com/facebook/react/blob/master/packages/react-dom/src/client/inputValueTracking.js):\r\n\r\n``` js\r\nnode.ownerDocument.defaultView.Object.defineProperty(node, valueField, {\r\n  configurable: true,\r\n  get: function() {\r\n    return get.call(this);\r\n  },\r\n  set: function(value) {\r\n    currentValue = '' + value;\r\n    set.call(this, value);\r\n  },\r\n});\r\n```","updated_at":"2019-11-05T13:32:09Z","created_at":"2019-11-05T13:30:13Z","creator_user_login":"nikparo"}
{"number":14342,"comment_id":"572196441","body":"I've run into this issue also, are there plans to release a fix for it?","updated_at":"2020-01-08T18:28:13Z","created_at":"2020-01-08T18:28:13Z","creator_user_login":"jimwash"}
{"number":14342,"comment_id":"572424848","body":"Facing above issue in my project. could you please let us know in which release the fix will be available ?\r\n\r\nBelow are the versions which I am using in my project:\r\n\"react\": \"^16.8.6\",\r\n\"react-dom\": \"^16.8.6\",","updated_at":"2020-01-09T07:15:40Z","created_at":"2020-01-09T07:15:18Z","creator_user_login":"PKBadiger"}
{"number":14342,"comment_id":"1229275322","body":"Since IE is not supported anymore we should close this.","updated_at":"2022-08-27T21:55:36Z","created_at":"2022-08-27T21:55:36Z","creator_user_login":"PhilipJohnBasile"}
{"number":14342,"comment_id":"1229390956","body":"Whether IE is supported doesn’t seem relevant since this was a (mislabelled?) Edge issue. However, chances are it went away when Edge became chromium based in 2020.","updated_at":"2022-08-28T06:30:46Z","created_at":"2022-08-28T06:30:46Z","creator_user_login":"nikparo"}
{"number":19587,"comment_id":"671902201","body":"We briefly chatted about this with @sebmarkbage and he suggested it's still a bit too risky to put in 17.0 (for which we have an RC) but might be okay to put in 17.1 if we're confident it's not a breaking change and if there is exhaustive browser testing.","updated_at":"2020-08-11T11:58:56Z","created_at":"2020-08-11T11:58:56Z","creator_user_login":"gaearon"}
{"number":19587,"comment_id":"671950669","body":"No worries. In the meantime I found some interactions of this change with the `javascript:` URL sanitization that has to be gated on the TT feature flag to be secure. I'll send a PR once ready anyhow, such that we can identify the issues early on.\r\n\r\n","updated_at":"2020-08-11T13:35:28Z","created_at":"2020-08-11T13:35:28Z","creator_user_login":"koto"}
{"number":19587,"comment_id":"751254268","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T14:06:39Z","created_at":"2020-12-25T14:06:39Z","creator_user_login":"stale[bot]"}
{"number":19587,"comment_id":"751649037","body":"bump, looking for an answer to https://github.com/facebook/react/pull/19588#issuecomment-737201199.","updated_at":"2020-12-28T09:31:37Z","created_at":"2020-12-28T09:31:37Z","creator_user_login":"koto"}
{"number":19587,"comment_id":"843234746","body":"Friendly ping, cc @gaearon. This would probably need rebasing, but the open question is whether we should go with:\r\n\r\n* the changes here - These practically unblock using react-DOM with Trusted Types interpolated into attributes without requiring `enableTrustedTypesIntegration` feature flag. I feel the change is also bw-compatible, as reasoned in the PR description, OR\r\n* `enableTrustedTypesIntegration` by default maybe? :) \r\n\r\nI'm happy to help with whatever's needed for either of the options, but the call on which option to take is yours :) FWIW, we just merged [webpack 5 TT support](https://webpack.js.org/configuration/output/#outputtrustedtypes) which leaves only a tiny blocker and this issue for create-react-app apps to be TT compliant by default.","updated_at":"2021-05-18T14:45:47Z","created_at":"2021-05-18T14:45:47Z","creator_user_login":"koto"}
{"number":19587,"comment_id":"861400748","body":"From https://github.com/facebook/react/pull/19588:\r\n\r\n>Currently only IE<=9 does not stringify attributes, needing the workaround.\r\n\r\nIt's ok to drop IE9 by this point. If you have a fix that only breaks something in IE9 without adding extra logic let's merge it.","updated_at":"2021-06-15T10:57:06Z","created_at":"2021-06-15T10:57:06Z","creator_user_login":"gaearon"}
{"number":19587,"comment_id":"861452099","body":"> It's ok to drop IE9 by this point. If you have a fix that only breaks something in IE9 without adding extra logic let's merge it.\r\n\r\nJust done in #19588, it's ready for review.","updated_at":"2021-06-15T12:21:47Z","created_at":"2021-06-15T12:21:47Z","creator_user_login":"koto"}
{"number":19587,"comment_id":"1008002971","body":"@koto great work.  This will be a huge addition to securing React.","updated_at":"2022-01-08T14:12:55Z","created_at":"2022-01-08T14:12:55Z","creator_user_login":"melloware"}
{"number":19587,"comment_id":"1637619283","body":"The PR was closed unexpected. It there any plan to implement it?","updated_at":"2023-07-17T08:44:17Z","created_at":"2023-07-17T08:44:17Z","creator_user_login":"woody-li"}
{"number":15207,"comment_id":"476820127","body":"Sure, happy to take a PR.","updated_at":"2019-03-26T19:50:54Z","created_at":"2019-03-26T19:50:54Z","creator_user_login":"gaearon"}
{"number":15207,"comment_id":"478574394","body":"@pbondoer Did you start looking into this already ?","updated_at":"2019-04-01T13:15:59Z","created_at":"2019-04-01T13:15:59Z","creator_user_login":"LorenzoOpWerk"}
{"number":15207,"comment_id":"478584516","body":"@LorenzoOpWerk Yes, just haven't had a lot of free time to finish up.","updated_at":"2019-04-01T13:43:15Z","created_at":"2019-04-01T13:43:15Z","creator_user_login":"pbondoer"}
{"number":15207,"comment_id":"479680796","body":"@pbondoer I'm not sure this is an issue with react but rather with enzyme. I don't know how jest serialized enzyme wrappers but I suspect it uses `wrapper.debug()` at which point this is an issue with enzyme not react. \r\n\r\nFind by display name might either be another issue or resolved with airbnb/enzyme#2081\r\n\r\nThough I did submit a PR related to display name behavior with memo components: #15313","updated_at":"2019-04-03T22:24:58Z","created_at":"2019-04-03T22:24:58Z","creator_user_login":"eps1lon"}
{"number":15207,"comment_id":"482733581","body":"I don't think this is a test renderer/enzyme issue.\r\n\r\nAstonishingly React.memo in normal usage does not appear to pass on `.name` or `.displayName` to the resulting component's `.displayName`.\r\n\r\nhttps://codesandbox.io/embed/n3532xvxzj","updated_at":"2019-04-12T21:48:00Z","created_at":"2019-04-12T21:48:00Z","creator_user_login":"dantman"}
{"number":15207,"comment_id":"555632461","body":"Same issue appears when using it with React devtools. Wrapped components show up as `Component` in the tree.","updated_at":"2019-11-19T18:03:06Z","created_at":"2019-11-19T18:03:06Z","creator_user_login":"elie222"}
{"number":15207,"comment_id":"587113404","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-02-17T18:29:30Z","created_at":"2020-02-17T18:29:30Z","creator_user_login":"stale[bot]"}
{"number":15207,"comment_id":"587154551","body":"Should not be closed.","updated_at":"2020-02-17T20:55:13Z","created_at":"2020-02-17T20:55:13Z","creator_user_login":"dantman"}
{"number":15207,"comment_id":"587187778","body":"I peeked into the [memo](https://github.com/facebook/react/blob/0cf22a56a18790ef34c71bef14f64695c0498619/packages/react/src/memo.js) source. This is a bit more complex than we thought.\r\n\r\nNormally, most HOCs return a component and set a displayName based on `displayName || name`.\r\n\r\nHowever `React.memo` does not return a component. It returns an object with `$$typeof: REACT_MEMO_TYPE` and `type`.\r\n\r\nSo there's no simple \"wrap the displayName like other HOCs\" because the result is not a component. It's an informational object that React understands how to process and is closer to the the ReactElement returned by createElement than it is to a component.\r\n\r\nI see two potential solutions.\r\n\r\n## Solution 1: Hack a displayName in\r\n\r\nThe quick and dirty fix would be to modify `memo`'s `$$typeof: REACT_MEMO_TYPE` object to include a `displayName` property.\r\n\r\nThis feels like a hack because the memo object is technically not a component and would be equivalent to adding a displayName to `Fragment` and the other special component types. However this would most likely work pretty universally.\r\n\r\n## Solution 2: Expect wrappers to handle this\r\n\r\nThe alternative is to expect that any HOC wrappers will handle memo themselves. So when they see the `$$typeof: REACT_MEMO_TYPE` they should resolve something similar to `memo(${getComponentName(component.type)})`.\r\n\r\nHowever if this is the plan I do not think it would be fair to make 3rd party libraries all handle this themselves. `memo` isn't the only issue here. `forwardRef` does something similar, there are a bunch of other special components, and it's entirely possible there will be a new HOC-like built-in special component in the future. So I think it would be fair in this instance for React to provide an official method of getting the component name that will work with all these special components.\r\n\r\nReact actually already has this internally. [getComponentName.js](https://github.com/facebook/react/blob/6faf6f5eb1705eef39a1d762d6ee381930f36775/packages/shared/getComponentName.js) contains both a `getComponentName` function that handles `name`, `displayName`, `memo`, `Fragment`, and more. And even a `getWrappedName` helper.\r\n\r\nFor this solution `getComponentName` and `getWrappedName` (perhaps rename to wrapComponentName`) should be exported officially from somewhere. Either this should be exported from `react` or we should have a new package similar to `react-is` that exports `getComponentName` and `getWrappedName`.\r\n\r\n`recompose`'s `getDisplayName` will need to be updated to use the official `getComponentName` – as it's still used by a lot of people. Likewise other libraries that do the same like `@material-ui/utils` will need updating.\r\n\r\nThis is basically #14319.","updated_at":"2020-02-17T23:51:47Z","created_at":"2020-02-17T23:18:52Z","creator_user_login":"dantman"}
{"number":15207,"comment_id":"629890048","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-05-18T00:48:19Z","created_at":"2020-05-18T00:48:19Z","creator_user_login":"stale[bot]"}
{"number":15207,"comment_id":"629904770","body":"bump","updated_at":"2020-05-18T01:57:10Z","created_at":"2020-05-18T01:57:10Z","creator_user_login":"ljharb"}
{"number":15207,"comment_id":"674491313","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-08-16T07:23:36Z","created_at":"2020-08-16T07:23:36Z","creator_user_login":"stale[bot]"}
{"number":15207,"comment_id":"674555441","body":"Still an issue","updated_at":"2020-08-16T17:41:33Z","created_at":"2020-08-16T17:41:33Z","creator_user_login":"dantman"}
{"number":15207,"comment_id":"751254256","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T14:06:34Z","created_at":"2020-12-25T14:06:34Z","creator_user_login":"stale[bot]"}
{"number":15207,"comment_id":"751286684","body":"bump","updated_at":"2020-12-25T20:07:05Z","created_at":"2020-12-25T20:07:05Z","creator_user_login":"ljharb"}
{"number":15207,"comment_id":"751286805","body":"I have a bit of free time these holidays, is this being worked on elsewhere / fixed by something else or is there anything I can do to aid in its resolution?","updated_at":"2020-12-25T20:09:08Z","created_at":"2020-12-25T20:09:08Z","creator_user_login":"pbondoer"}
{"number":23043,"comment_id":"1655988534","body":"I would love to work on this issue as a first timer issue if it's still open. @eps1lon ","updated_at":"2023-07-28T16:50:55Z","created_at":"2023-07-28T16:41:53Z","creator_user_login":"itolimaesther"}
{"number":18986,"comment_id":"636354428","body":"I've looked into this and it seems to happen because React sets the `defaultValue` of the input DOM node to the current `value` for controlled inputs. When you submit something in Firefox where `node.value === node.defaultValue` it doesn't save it for autofill. It's not documented anywhere, I just found out testing (without React too).\r\n\r\nRemoving this \"\"solves\"\" the issue:\r\nhttps://github.com/facebook/react/blob/1d85bb3ce13401644a5e345f8bc84522c59a951c/packages/react-dom/src/client/ReactDOMInput.js#L420\r\n\r\nThe reason why React does assign the `defaultValue` to the current `value` is because if you have an input with `type=\"reset\"` and you click it, you'd get blank fields in your controlled inputs if you removed that line (next re-render would fix them though). At least it's what I understand by browsing through the code. \r\n\r\nYou could make autocomplete/autofill work on Firefox on a controlled input by making `defaultValue` return an empty string:\r\n```javascript\r\n  function handleChange(event) {\r\n    Object.defineProperty(event.target, \"defaultValue\", {\r\n      configurable: true,\r\n      get() { return \"\" },\r\n      set() {},\r\n    });\r\n    setValue(event.target.value);\r\n  }\r\n```\r\nThis works as long as you don't have a `type=\"reset\"`. Otherwise you'll notice that all fields are reset as blank (next re-render fixes them though). I wouldn't recommend this though, it's a \"hack\" and I haven't used it anywhere to be able to say that it's 100% reliable.\r\n\r\nAnyways, this is probably a bug in Firefox .. or a feature-(bug?) but I haven't found anything in the specs, MDN, or elsewhere that describes why `node.value === node.defaultValue` should bail out of saving for autofill 🤷‍♀️ \r\n\r\nI am/was working on a PR to solve this .. but, maybe Firefox could solve it on their side? 🙈 (unclear if it's a bug)\r\nIt'd be great to know if anyone from React core team is aware of the issue and/or what we could do about it.\r\n\r\n**Edit:** this is a demo that demonstrates the issue in Firefox. It's plain HTML + 3 line JS code:\r\nhttps://codesandbox.io/s/naughty-feather-vwl6v?file=/index.html\r\nSo it isn't a React issue per se 🤔 ","updated_at":"2020-05-30T17:00:46Z","created_at":"2020-05-30T16:32:01Z","creator_user_login":"eddyw"}
{"number":18986,"comment_id":"643344264","body":"If anyone interested, I opened this:\r\nhttps://bugzilla.mozilla.org/show_bug.cgi?id=1642570\r\n😅 ","updated_at":"2020-06-12T15:46:54Z","created_at":"2020-06-12T15:46:54Z","creator_user_login":"eddyw"}
{"number":18986,"comment_id":"662006473","body":"I believe this is a duplicate of #15739 ","updated_at":"2020-07-21T17:41:04Z","created_at":"2020-07-21T17:41:04Z","creator_user_login":"mnoorenberghe"}
{"number":18986,"comment_id":"751260758","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T15:06:23Z","created_at":"2020-12-25T15:06:23Z","creator_user_login":"stale[bot]"}
{"number":18986,"comment_id":"758844571","body":"bump","updated_at":"2021-01-12T18:16:15Z","created_at":"2021-01-12T18:16:15Z","creator_user_login":"jan-wilhelm"}
{"number":18986,"comment_id":"1596265819","body":"Firefox seems to have fixed this a while ago in FF 105, see https://bugzilla.mozilla.org/show_bug.cgi?id=1642570\r\n\r\nTested it with FF 114 and works just fine 👍 ","updated_at":"2023-06-18T20:56:29Z","created_at":"2023-06-18T20:56:29Z","creator_user_login":"ahoisl"}
{"number":24670,"comment_id":"1146307565","body":"Thanks, will check with the team. ","updated_at":"2022-06-03T19:48:13Z","created_at":"2022-06-03T19:48:13Z","creator_user_login":"gaearon"}
{"number":24670,"comment_id":"1147040763","body":"I confirm. In my case, this causes a nasty bug. Everything related refs that worked in version 17 just stopped working in version 18 without any error messages. I definitely can't use React.StrictMode right now. \r\n\r\nMoreover, during the first installation using `create-react-app`, a person will not be able to use any library that uses the refs functionality, thinking that the library does not work. My suggestion is to remove React.StrictMode from default `create-react-app` set up until the bug is fixed.","updated_at":"2022-06-06T04:48:22Z","created_at":"2022-06-06T04:48:22Z","creator_user_login":"Razzwan"}
{"number":24670,"comment_id":"1147048090","body":"According to [this post](https://github.com/reactwg/react-18/discussions/18#discussioncomment-801681):\r\n\r\n> Whether a component gets hidden or unmounted, refs that are attached to host components (like HTML elements) will be cleaned up and re-initialized the same as they are today during unmount/remount.\r\n> \r\n> Refs that store use-managed values won't be reset when a component is hidden though. They allow things to be persisted for the case where a component is hidden and later shown again.\r\n\r\nIt makes sense to keep the user-managed values around as they are part of the component state that will be restored, however refs to DOM elements maybe should not be set?","updated_at":"2022-06-06T05:05:40Z","created_at":"2022-06-06T05:05:40Z","creator_user_login":"JMartinCollins"}
{"number":24670,"comment_id":"1147690332","body":">a person will not be able to use any library that uses the refs functionality, thinking that the library does not work\r\n\r\nI may be missing something but this statement sounds massively overblown. There are lots of libraries using refs that work fine with React 18. While the issue discussed here might be legit (we're discussing that), can you share what kind of code you have that doesn't work? Specific examples are most helpful.","updated_at":"2022-06-06T17:20:15Z","created_at":"2022-06-06T17:20:15Z","creator_user_login":"gaearon"}
{"number":24670,"comment_id":"1148195223","body":"[sandbox link](https://codesandbox.io/s/throbbing-cookies-fv9vgo?file=/src/App.js)\r\n\r\nAlso something to consider is that the current effect cleanup order is different between simulated(bubble) and standard(capture) unmounts.","updated_at":"2022-06-07T04:55:57Z","created_at":"2022-06-07T04:55:57Z","creator_user_login":"JMartinCollins"}
{"number":24670,"comment_id":"1152552878","body":"in React 18 every time I render the component mount, the callback runs twice, I don't know what to do?","updated_at":"2022-06-10T16:51:39Z","created_at":"2022-06-10T16:50:50Z","creator_user_login":"huynhit24"}
{"number":24670,"comment_id":"1152579053","body":"@huynhit24 That's intentional behavior in Strict Mode and unrelated to this thread. Please refer to https://reactjs.org/blog/2022/03/29/react-v18.html#new-strict-mode-behaviors.","updated_at":"2022-06-10T17:22:08Z","created_at":"2022-06-10T17:22:08Z","creator_user_login":"gaearon"}
{"number":24670,"comment_id":"1228027980","body":"Hi! Any updates for this?\r\n\r\n> While the issue discussed here might be legit (we're discussing that), can you share what kind of code you have that doesn't work?\r\n\r\nFor example, [useChangeEffect](https://medium.com/@faboulaws/3-custom-react-effect-hooks-for-your-toolbox-96d659d2ca9d) hook, quite commonly used, I guess. \r\nInitial implementation was based on the fact, that after mount ref always has initial value, but now it isn't true:\r\nhttps://codesandbox.io/s/dry-grass-0uyhx4\r\n\r\nBasically, it was like axiom - refs always have initial values after mount.\r\nNow the axiom is broken.\r\n\r\nOf course, for this particular case you can use cleanup function to set `isMounted` ref back to false, but if you want to implement `useChangeEffect` with cleanup functions provided by user, you need to use two `useEffect`s instead of one - one for setting isMount ref (without deps), and the other for actual effect with deps.\r\nSomething like this:\r\n```\r\nconst useChangeEffect = (effect, deps) => {\r\n  const isMounted = useRef(false);\r\n  \r\n  useEffect(() => {\r\n    if (isMounted.current) return effect();\r\n    \r\n    isMounted.current = true;\r\n  }, deps);\r\n\r\n  useEffect(() => {\r\n    isMounted.current = true;\r\n    \r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n};\r\n```\r\n\r\nAnd now we have to use two effects instead of one for implementing the same functionality, just because of artefact of dev mode. That's kind of strange to me.","updated_at":"2022-08-26T04:05:36Z","created_at":"2022-08-26T04:05:36Z","creator_user_login":"dmitryKochergin"}
{"number":24670,"comment_id":"1228733451","body":">Initial implementation was based on the fact, that after mount ref always has initial value, but now it isn't true:\r\n\r\nI think you're confusing the issue in this thread (`<div ref=...>` not getting \"detached\" during simulated cleanup) with something different. I'm not sure what behavior you want exactly, but I suggest to file a separate issue about that. More generally, I'd say Hooks like `useChangeEffect` are not a good idea, but it's hard to say more without actually seeing *what you're using it for*. Regardless, it's off-topic for this thread.","updated_at":"2022-08-26T17:11:26Z","created_at":"2022-08-26T17:11:26Z","creator_user_login":"gaearon"}
{"number":24670,"comment_id":"1228749135","body":"I'm not sure, but it looked like these cases have the same reason.\r\nBecause at the moment all refs are not getting \"detached\" during simulated unmount.\r\nI was going to create a separated issue, but found this one.\r\n\r\nAnyway, thank you for the answer! I'll create a separated issue, then.\r\n","updated_at":"2022-08-26T17:31:00Z","created_at":"2022-08-26T17:31:00Z","creator_user_login":"dmitryKochergin"}
{"number":24670,"comment_id":"1280103089","body":"@gaearon I use \r\n~~~\r\nconst isMountedRef = useRef(true)\r\n\r\nuseEffect(() => {\r\n\r\n  return () => {isMountedRef.current = false}\r\n\r\n},[])\r\n\r\n~~~\r\n\r\nThen I check isMountedRef.current before changing state in a hook component. The use case is an infiniteScroller, where async unmounting is common.\r\n\r\nThis business of a \"test\" unmount in strict mode is screwing that up. It means if someone downloads my library during dev mode with strict mode, my library doesn't work.\r\n\r\nSo, I'm not happy!\r\n\r\nAny suggestions of an alternative way of checking if a component is still mounted?\r\n\r\nAs a general comment, this looks like one of those cases in which a kind of patronizing attitude to developers with unexpected behaviours causes unwanted side effects. Just saying...","updated_at":"2022-10-17T00:13:19Z","created_at":"2022-10-17T00:11:19Z","creator_user_login":"HenrikBechmann"}
{"number":24670,"comment_id":"1280160575","body":"Further to this, your documentation about this says that you 'restore state' after your faux unmount, so I used a setIsMounted(false) call from useState in a useEffect cleanup function (returned from non-dependent useEffect), hoping that the state would be returned to true, as your documentation states.\r\n\r\nBut, no such luck. State is *not* restored after the faux unmount, according to my tests.\r\n\r\nMaybe the solution here is to finally give us a native isComponentMounted() function. \r\n\r\nJust a thought...\r\n\r\nAny advice from anyone would be appreciated. This is a nasty issue for me.","updated_at":"2022-10-17T01:50:23Z","created_at":"2022-10-17T01:50:23Z","creator_user_login":"HenrikBechmann"}
{"number":24670,"comment_id":"1280222217","body":"Ok, so my workaround is this. I find that with React.StrictMode useEffect with no dependencies actually runs *twice* (in spite of your documentation promising it only runs once). So my revised code:\r\n\r\n~~~\r\nconst isMountedRef = useRef(true)\r\n\r\nuseEffect(() => {\r\n  isMountedRef.current = true // to compensate for faux unmount\r\n  return () => {isMountedRef.current = false}\r\n\r\n},[])\r\n~~~\r\n\r\nI have my fingers crossed that this happens fast enough to avoid some of my processes being wrongly missed while `isMountedRef.current` is incorrectly set to `false`.\r\n\r\n@gaeron you've been quoted as saying that this approach is \"lazy\"; that the correct thing to do is to \"cancellation\". But here's what I'm missing - if the reason to cancel a process is because your component has been unmounted, and there's NO WAY TO TELL IF YOUR COMPONENT IS UNMOUNTED, then how the heck are you supposed to know when to cancel something??\r\n\r\nThere's 'abortController.abort()', but that also is run in a useEffect cleanup routine, so with React.StrictMode it is run incorrectly!!\r\n\r\nLike, seriously, what are you talking about?\r\n","updated_at":"2022-10-17T08:36:09Z","created_at":"2022-10-17T03:17:34Z","creator_user_login":"HenrikBechmann"}
{"number":24670,"comment_id":"1280375215","body":"@HenrikBechmann I think what you're getting it is at the core of the issue with this (possible) bug. I think an effective way to check whether a component is mounted would be to use a ref to a jsx/DOM element in the component:\r\n```\r\nconst isMountedRef = useRef(null);\r\nconst isMountInitialized = useRef(false);\r\n\r\nuseEffect(() => {\r\n    if(isMountedRef.current && !isMountInitialized.current) {\r\n        // do something to initialize the mount\r\n        isMountInitialized.current = true;\r\n    }\r\n    return () => {\r\n        if(!isMountedRef.current) { // on unmount, isMountedRef.current should be null. This isn't currently the case on simulated unmounts though\r\n            // perform unmount cleanup\r\n            isMountInitialized.current = false; // in case the component state is being saved to remount later\r\n        }\r\n    }\r\n});\r\n\r\nreturn (\r\n    <div ref={isMountedRef}>\r\n        {/*contents*/}\r\n    </div>\r\n)\r\n```\r\n\r\nThat is the main issue with the functionality mentioned in the issue. If the simulated unmount doesn't clear the refs like a normal unmount, this pattern can't be properly used and tested in development StrictMode.\r\n\r\n_That's also not to say that this pattern is good or even necessary to use_, but in my opinion it should be **_expected_** to work this way, however it can't work this way at the moment due to the (possible) bug.","updated_at":"2022-10-17T06:53:45Z","created_at":"2022-10-17T06:53:45Z","creator_user_login":"JMartinCollins"}
{"number":24670,"comment_id":"1283514311","body":"Are there any updates to this issue? Using refs to track a component's first mount isn't possible in strict mode at the moment because of this bug. Unless with a workaround cleanup function to reset it. \r\n```js\r\nfunction App() {\r\n  let firstMount = useRef(true)\r\n\r\n  useEffect(()=>{\r\n    if (firstMount.current) {\r\n      firstMount.current = false;\r\n      console.log('This should log')\r\n      return () => firstMount.current = true // I'd rather not leave workarounds that will eventually expire in my code\r\n    }\r\n    console.log('This shouldnt log')\r\n  },[])\r\n}\r\n```\r\nHaving to choose between the benefits of strict mode and having callbacks that'll need to be removed in the future throughout my app is definitely not easy. I hope the team can fix this soon.","updated_at":"2022-10-19T06:49:13Z","created_at":"2022-10-19T06:47:32Z","creator_user_login":"KhaledElmorsy"}
{"number":24670,"comment_id":"1323973100","body":"I'm having the same issue but with `useState`.\r\n\r\nIn `useState` I create a class that does some binding to event listeners in its constructor. On unmount I want to clean up those event listeners. In strict mode, the effect runs twice (cleaning up my event listeners) but the `useState` is not rerun so I'm left in a broken state:\r\n\r\n```ts\r\nconst [pluginServer] = useState(\r\n  () => new PluginServer({ url, name, document, ...options })\r\n);\r\n\r\nuseEffect(() => {\r\n  return () => {\r\n    pluginServer.dispose();\r\n  }\r\n}, [pluginServer]);\r\n```","updated_at":"2022-11-22T16:52:54Z","created_at":"2022-11-22T16:51:12Z","creator_user_login":"georeith"}
{"number":24670,"comment_id":"1360495936","body":"We just ran into this as well. In our case we're attempting to set React state with the result of an async operation, so in order to prevent state updates on an unmounted component we use a ref to track whether the component is mounted or not (as seems to be a common pattern). With this change to StrictMode `mounted.current` always returns false when it's time to update state and breaks our hook.\r\n\r\nContrived example:\r\n```js\r\nconst [result, setResult] = useState(null);\r\nconst mounted = useRef(true);\r\n\r\nuseEffect(() => {\r\n   return () => mounted.current = false;\r\n}, []);\r\n\r\nuseEffect(() => {\r\n   asyncAPI.then((asyncResponse) => {\r\n     if (mounted.current) { // Always false with new StrictMode behavior\r\n       setResult(asyncResponse) // State never becomes anything other than null\r\n     }\r\n   });\r\n}, []);\r\n```\r\n\r\nThe solution presented in [this comment](https://github.com/facebook/react/issues/24670#issuecomment-1280222217) appears to fix this. But I'm wondering if addressing this is indeed our responsibility or if this should be addressed in React itself? Or is there a better way to determine if it's safe to update state?","updated_at":"2022-12-20T23:48:29Z","created_at":"2022-12-20T23:48:29Z","creator_user_login":"tnorling"}
{"number":24670,"comment_id":"1465655569","body":"On our project we also caught up into that trap. For now we  can't use `StrictMode` at all as it breaks all our applications.\r\nWe have `usePrevious` recommend by react team, which looks like:\r\n```ts\r\nfunction usePrevious<T>(value: T): T | null {\r\n  const ref = useRef<T | null>(null);\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n\r\n  return ref.current;\r\n}\r\n```\r\n\r\nAnd we have component that display tiled image. Each tile - is independent instance that use custom hooks to load image, cache it, aborts previous call if was invoked. So it looks like:\r\n```ts\r\nfunction useTileLoad<T>(params: T, abortableCallback: AbortableCallback<T>) {\r\n   const abortRef = useRef<() => void>();\r\n\r\n   const [tile, setTile] = useState<TileImage | null>(null);\r\n\r\n   const prevParams = usePrevious(params); // Store previous params\r\n   \r\n   // Callback to load tile image or re-request new one if params was changed before request completed\r\n   const handleLoad = useCallback(async (params: T) => {\r\n      if (abortRef.current) {\r\n         abortRef.current(); // If abortable is exist - abort it, as we will request new one below\r\n      }\r\n\r\n      let aborted = false; // Temp variable to avoid state update, when request was canceled due to new request or when component unmounts\r\n\r\n      const abortable = abortableCallback(params); // Call abortable request that returns abortion callback\r\n\r\n      // Store current abortion request to ref\r\n      abortRef.current = () => {\r\n         aborted = true;\r\n         abortable.abort();\r\n      };\r\n\r\n      try {\r\n         const response = await abortable();\r\n      \r\n         if (!aborted) {\r\n            setTile(response);\r\n         } else {\r\n           throw new Error('Request was canceled');\r\n         }\r\n      } catch (e) {\r\n        console.log('Request was failed or aborted', e);\r\n      }\r\n   }, [abortableCallback]);\r\n\r\n   // (1) Abort current request Promise wrapper to avoid unhandled state update\r\n  useEffect(() => {\r\n    return () => {\r\n      abortRef.current?.();\r\n    };\r\n  }, []);\r\n\r\n  // (2) Compare next params with previous params and request new tile in prams are different\r\n  useEffect(() => {\r\n      if (!isEqual(params, prevParams)) {\r\n        handleLoad(params);\r\n      }\r\n  }, [props, prevProps, handleLoad])\r\n}\r\n```\r\nWhat will happen above in StrictMode? Let's see:\r\n1) Component mounts, it goes to `useEffect (2)`, compare params and call `handleLoad`\r\n2) Component immediately unmounts, and goes to `useEffect (1)`, and abort request that was called in p1.\r\n3) Component mounts back, it goes to `useEffect (2)` and does nothing next. `params` and `prevParams` are equal. `usePrevious` was not re-created. As result - tile image was not loaded, nothing displayed to the developer.\r\n\r\n`useRef` is `useState` under the hood. Why does React keep state in StrictMode between mounting/umounting?\r\nWhat if I want it only in few components? What if want decide by myself when it should happed to component or even custom hook, but not React?","updated_at":"2023-03-13T07:48:01Z","created_at":"2023-03-13T07:47:33Z","creator_user_login":"tsarapke"}
{"number":24670,"comment_id":"1466633826","body":"@tsarapke unrelated. The issue relates specifically to refs set to DOM elements.\r\n\r\nLooks like maybe yours can be solved by:\r\n```ts\r\n// ...\r\nconst prevParams = useRef<T>(null);\r\n// ...\r\nif(!aborted){\r\n    prevParams.current = params;\r\n    setTile(response)\r\n}\r\n// ...\r\n```\r\n\r\nBut hard to say exactly when your effect (2) will run because you didn't respect exhaustive-deps and your dependencies are totally wrong. I recommend first making your effects work properly with no deps array, then add it back with all requirements for optimization.","updated_at":"2023-03-13T17:56:24Z","created_at":"2023-03-13T17:56:24Z","creator_user_login":"JMartinCollins"}
{"number":24670,"comment_id":"1466881218","body":"@JMartinCollins,\r\nApologise, actually I missed `prevParams.current = params;`, we set it right before `handleLoad` in `useEffect (2)`.\r\nAnd I'm not sure about putting in into `if` statement. There some another logic, that cause `<Tile />` re-rendering. It will lead call of that custom hook, which will lead to re-call `useEffect (2)`, that will lead to call `handleLoad`(because `prevParams` still old in that case), which will abort request and make a new one.\r\n\r\nAs about issue - I think it still related. The root cause is the same. Many people at the beginning of topic provides same issue-cases.\r\n\r\nBut can you tell why does `useEffect` didn't respect exhaustive-deps and why dependencies are totally wrong?\r\nThere are nothing extra excess, and there nothing missed. If I'll remove anything - ts will tell me that I missed deps. If I will add something... it wouldn't change anything.","updated_at":"2023-03-13T20:25:10Z","created_at":"2023-03-13T20:05:15Z","creator_user_login":"tsarapke"}
{"number":24670,"comment_id":"1467169667","body":"@tsarapke in a way it kind of *is* related. I think the approach that you *should* be taking with this hook is to pass it a DOM element ref. Then, you'll only run your abort cleanup if that ref is `null` because it signals that the actual component is no longer mounted. Likewise you'll only run `handleLoad` if the `previousValue` of that ref is `null` && the `current` value is an element, because that means your component just mounted. This is the behavior that's (maybe) incorrect with the current strict mode simulated unmount, which doesn't set DOM refs to null during simulated unmount.\r\n\r\nAlso the incorrect deps may just be a typo?","updated_at":"2023-03-14T00:35:35Z","created_at":"2023-03-14T00:35:35Z","creator_user_login":"JMartinCollins"}
{"number":24670,"comment_id":"1468023810","body":"@JMartinCollins,\r\n\r\nYes, there is a typo. Must be `[params, prevParams, handleLoad]`. Sorry about that.\r\nAs for having additional DOM reference - isn't a bad approach? Hooks brings up to help us to split the code, to make it re-usable, to be less components dependent, to be more abstract.\r\nThat hook could be called in another hook. So it would mean that I should pass ref to real DOM from parent to nested hooks. Use context in that case? Look weird too. If you provides your hook as 3rd library, it would be not really obvious to others why does it requires DOM ref.\r\n\r\nI really understand the proposal that React team wants to provide in a future by simulation that thing with `StrictMode`, but it looks like it shouldn't be compulsory and developer should be able to choose where to use it, and where to not.\r\nSo it should provide some kind of callback, like a `memo` or `forwardRef`, that will make you component to be working in that way. ","updated_at":"2023-03-16T22:01:52Z","created_at":"2023-03-14T12:34:20Z","creator_user_login":"tsarapke"}
{"number":24670,"comment_id":"1528101728","body":"I want to put things a little differently than what has been said here.  \r\n\r\nBy not resetting refs, the React \"double render\" stress test creates behavior that only exists in development and would _never_ occur in production build and therefore creates a use case that we now have to develop for just for the sake of the \"double render\" stress test in development. Here's an example:\r\n\r\nIn the following code I want this behavior:\r\n- First time a user comes to a page\r\n  -  check to see if a scroll position was stored from the last time they were on the page \r\n      - if yes restore their scroll position\r\n      - if no, try to scroll the first appointment of the day into view\r\n- If the user is already on the page and changes the day they want to view, try to scroll to the first appointment of the day into view\r\n\r\n```tsx\r\nconst Schedule = ({ day }: { day: string }) => {\r\n  const scrollRef = useRef(null)\r\n  const hasMounted = useRef(false)\r\n\r\n  // I think useLayoutEffect is need because we want to get \r\n  // the scroll position of an element before unmounting\r\n  useLayoutEffect(() => {\r\n    if(!hasMounted.current) {\r\n      hasMounted.current = true\r\n      const scrollPosition = getLastScrollPositionLocalStorage(day)\r\n      if(scrollPosition && scrollRef.current) {\r\n         scrollRef.current.scrollTo(scrollPositon)\r\n         return () => {\r\n           setLastScrollPositionLocalStorage(day,   getScrollPosition(scrollRef.current))\r\n         }\r\n      }\r\n    }\r\n\r\n    if(scrollRef.current) {\r\n       const firstAppointmentScrollPosition = getFirstAppointmentScrollPosition()\r\n       scrollRef.current.scrollTo(firstAppointmentScrollPosition)\r\n    }\r\n  \r\n   return () => {\r\n     setLastScrollPositionLocalStorage(day, getScrollPosition(scrollRef.current))\r\n   }\r\n  }, [day])\r\n  return <ScheduleView ref={scrollRef} />\r\n}\r\n```\r\n\r\nThis code will have different behavior in development than in production. In development since refs are not reset this component will always try to scroll the first appointment into view and will not try to restore the last scroll position a user had when they were on this page.  \r\n\r\nWhy? In production this effect would only run once if the day never changes. In development this runs twice no matter what.\r\n\r\nWe have workarounds to make the behavior consistent but again, we have to develop a workaround that would never happen in production just to satisfy the \"double render\" stress test.\r\n\r\nIt's possible React has some future plans to say \"hey we are gonna run those damn effects as many times as we please\" and if so makes this point moot. Thanks for your thoughts!","updated_at":"2023-04-28T21:20:14Z","created_at":"2023-04-28T21:13:17Z","creator_user_login":"trainiac"}
{"number":22841,"comment_id":"980787445","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 0cc724c777930438d92727803826a44ec97bcc55...7f88d1cb0202fd896d6a0a836b563f0475cf88c6\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 130.01 kB | 130.01 kB | = | 41.57 kB | 41.57 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.77 kB | 134.77 kB | = | 42.97 kB | 42.97 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 424.63 kB | 424.63 kB | = | 78.24 kB | 78.24 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 413.19 kB | 413.19 kB | = | 76.51 kB | 76.51 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 424.63 kB | 424.63 kB | = | 78.25 kB | 78.25 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable-semver/react-dom/cjs/react-dom-server-legacy.browser.production.min.js | **+1.03%** | 31.95 kB | 32.28 kB | +0.89% | 10.72 kB | 10.81 kB\n| oss-stable/react-dom/cjs/react-dom-server-legacy.browser.production.min.js | **+1.03%** | 31.95 kB | 32.28 kB | +0.89% | 10.72 kB | 10.81 kB\n| oss-experimental/react-dom/cjs/react-dom-server-legacy.browser.production.min.js | **+1.03%** | 32.08 kB | 32.41 kB | +0.90% | 10.77 kB | 10.87 kB\n| oss-stable-semver/react-dom/umd/react-dom-server-legacy.browser.production.min.js | **+1.03%** | 32.13 kB | 32.46 kB | +0.94% | 10.84 kB | 10.94 kB\n| oss-stable/react-dom/umd/react-dom-server-legacy.browser.production.min.js | **+1.03%** | 32.13 kB | 32.46 kB | +0.94% | 10.84 kB | 10.94 kB\n| oss-experimental/react-dom/umd/react-dom-server-legacy.browser.production.min.js | **+1.02%** | 32.27 kB | 32.60 kB | +0.93% | 10.89 kB | 11.00 kB\n| oss-stable-semver/react-dom/cjs/react-dom-server.browser.production.min.js | **+1.01%** | 32.60 kB | 32.93 kB | +0.83% | 11.15 kB | 11.24 kB\n| oss-stable/react-dom/cjs/react-dom-server.browser.production.min.js | **+1.01%** | 32.60 kB | 32.93 kB | +0.83% | 11.15 kB | 11.24 kB\n| oss-experimental/react-dom/cjs/react-dom-server.browser.production.min.js | **+1.01%** | 32.74 kB | 33.07 kB | +0.82% | 11.21 kB | 11.30 kB\n| oss-stable-semver/react-dom/umd/react-dom-server.browser.production.min.js | **+1.01%** | 32.76 kB | 33.09 kB | +0.85% | 11.27 kB | 11.36 kB\n| oss-stable/react-dom/umd/react-dom-server.browser.production.min.js | **+1.01%** | 32.76 kB | 33.09 kB | +0.85% | 11.27 kB | 11.36 kB\n| oss-experimental/react-dom/umd/react-dom-server.browser.production.min.js | **+1.00%** | 32.90 kB | 33.23 kB | +0.83% | 11.31 kB | 11.41 kB\n| oss-stable-semver/react-dom/cjs/react-dom-server-legacy.node.production.min.js | **+0.93%** | 35.55 kB | 35.88 kB | +0.84% | 11.95 kB | 12.05 kB\n| oss-stable/react-dom/cjs/react-dom-server-legacy.node.production.min.js | **+0.93%** | 35.55 kB | 35.88 kB | +0.84% | 11.95 kB | 12.05 kB\n| oss-stable-semver/react-dom/cjs/react-dom-server.node.production.min.js | **+0.92%** | 35.71 kB | 36.04 kB | +0.73% | 12.12 kB | 12.20 kB\n| oss-stable/react-dom/cjs/react-dom-server.node.production.min.js | **+0.92%** | 35.71 kB | 36.04 kB | +0.73% | 12.12 kB | 12.20 kB\n| oss-experimental/react-dom/cjs/react-dom-server-legacy.node.production.min.js | **+0.92%** | 35.74 kB | 36.07 kB | +0.83% | 12.02 kB | 12.12 kB\n| facebook-www/ReactDOMServer-prod.modern.js | **+0.92%** | 74.85 kB | 75.54 kB | +0.96% | 16.09 kB | 16.25 kB\n| oss-experimental/react-dom/cjs/react-dom-server.node.production.min.js | **+0.92%** | 35.90 kB | 36.23 kB | +0.73% | 12.18 kB | 12.27 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 7f88d1cb0202fd896d6a0a836b563f0475cf88c6\n</p>\n","updated_at":"2021-11-27T19:13:50Z","created_at":"2021-11-27T19:13:50Z","creator_user_login":"sizebot"}
{"number":22841,"comment_id":"1109608460","body":"Closes #11734 ","updated_at":"2022-04-26T10:09:18Z","created_at":"2022-04-26T10:09:18Z","creator_user_login":"martinbrose"}
{"number":18752,"comment_id":"619925545","body":"Potentially related? https://github.com/facebook/react/blob/4e3545fd6fc62842d7dbf772923214474f59871a/packages/react-dom/src/events/ReactDOMEventListener.js#L318-L324","updated_at":"2020-04-27T11:36:15Z","created_at":"2020-04-27T11:35:48Z","creator_user_login":"adamziel"}
{"number":18752,"comment_id":"619940269","body":"> The iframe should say \"Initialized\".\r\n\r\nCan only reproduce this in the actual codesandbox browser preview in firefox 75. It's working fine on the standalone page (https://k1ypg.csb.app/) or in chrome 81 regardless of the view.\r\n","updated_at":"2020-04-27T12:03:12Z","created_at":"2020-04-27T12:03:12Z","creator_user_login":"eps1lon"}
{"number":18752,"comment_id":"619943045","body":"The firefox part is interesting - I wasn't able to reproduce it there. I just tried on the standalone page and managed to reproduce it with Chrome though:\r\n\r\n![2020-04-27 14-05-12 2020-04-27 14_05_41](https://user-images.githubusercontent.com/205419/80370372-486d1d00-8890-11ea-99bb-61effe476eb8.gif)\r\n\r\nIt only happens with the down arrow since it makes React move the actual DOM Node. Up arrow will move the previous node.\r\n\r\nAlso see the following Gutenberg issue that many people were able to reproduce and the underlying fix:\r\n* https://github.com/WordPress/gutenberg/issues/6146\r\n* https://github.com/WordPress/gutenberg/pull/21916\r\n","updated_at":"2020-04-27T12:19:01Z","created_at":"2020-04-27T12:07:27Z","creator_user_login":"adamziel"}
{"number":18752,"comment_id":"619951166","body":"Looks like macOS?\r\n\r\nHere are my results on Ubuntu 18.04:\r\n\r\nChrome Version 81.0.4044.122 (Official Build) (64-bit):\r\n![iframe-google-preview](https://user-images.githubusercontent.com/12292047/80371165-c0881280-8891-11ea-944e-f34334dd939a.gif)\r\n![iframe-google-page](https://user-images.githubusercontent.com/12292047/80371172-c3830300-8891-11ea-950b-16f21d1cdb3c.gif)\r\n\r\nFirefox 75.0 (64-bit):\r\n![iframe-ff-preview](https://user-images.githubusercontent.com/12292047/80371248-e2819500-8891-11ea-8f4c-62229fa0ea37.gif)\r\n![iframe-ff-page](https://user-images.githubusercontent.com/12292047/80371256-e3b2c200-8891-11ea-95ad-5a611563a21a.gif)\r\n\r\nI had some troubles with iframes recently myself but none of these had to do with nested iframes (which applies to the preview window of codesandbox). Generally I \r\n- don't use document.write but ReactDOM.createPortal\r\n- don't portal before the `load` event or `document.readyState === \"complete\"` (which you need to handle in a passive effect if you're hydrating)\r\n  I found that calling document.write before the `load` event would be dropped in firefox.","updated_at":"2020-04-27T12:20:46Z","created_at":"2020-04-27T12:20:46Z","creator_user_login":"eps1lon"}
{"number":18752,"comment_id":"619973475","body":"> Looks like macOS?\r\n\r\nYes it is!\r\n\r\n> Here are my results on Ubuntu 18.04:\r\n\r\nNice! So interesting how we're seeing all these OS/Browser inconsistencies here - I did not expect that. I wonder if these iframes are being reloaded in somehow different way/order on different OSes? Also, let me just link to iframe reload issues in case there is something relevant in comments:\r\n\r\n* https://bugs.webkit.org/show_bug.cgi?id=13574\r\n* https://bugzilla.mozilla.org/show_bug.cgi?id=254144\r\n\r\n> don't use document.write but ReactDOM.createPortal\r\n> don't portal before the load event or document.readyState === \"complete\" (which you need to handle in a passive effect if you're hydrating)\r\n\r\nPortals sounds like a good idea for an even better Gutenberg fix. I just played with them and I have some additional findings:\r\n\r\n**Setting `<iframe srcDoc=\"<!DOCTYPE html>\"` fixes the issue for me:** \r\n\r\nhttps://codesandbox.io/s/dazzling-tdd-50r9o?file=/src/App.js\r\n\r\n**`useRef` only works consistently when `srcDoc` is set**\r\n\r\nOtherwise `ref.current` stays null. If you set `ref` to a custom callback, it's getting called with a correct DOM node: https://codesandbox.io/s/young-water-km9v5?file=/src/App.js\r\n\r\nThis seems like some kind of race condition though as I'm getting inconsistent results:\r\n\r\n<img width=\"959\" alt=\"Zrzut ekranu 2020-04-27 o 15 04 00\" src=\"https://user-images.githubusercontent.com/205419/80375420-90903d80-8898-11ea-9697-9a90b7b4ff7e.png\">\r\n<img width=\"1069\" alt=\"Zrzut ekranu 2020-04-27 o 15 04 40\" src=\"https://user-images.githubusercontent.com/205419/80375418-8cfcb680-8898-11ea-9fa8-d39e5d7f7dca.png\">\r\n\r\n\r\n> I found that calling document.write before the load event would be dropped in firefox.\r\n\r\nTIL, thank you!\r\n","updated_at":"2020-04-27T13:06:54Z","created_at":"2020-04-27T13:06:08Z","creator_user_login":"adamziel"}
{"number":18752,"comment_id":"661885182","body":"MacOS here—was unable to reproduce with Chrome or Firefox using most recent React nor with 16.12. ","updated_at":"2020-07-21T14:10:54Z","created_at":"2020-07-21T14:10:54Z","creator_user_login":"rachelnabors"}
{"number":18752,"comment_id":"1132814833","body":"Found how to reproduce the bug easily and consistently:\r\n\r\n`MacOs 11.6 20G165`\r\n`Chrome Version 101.0.4951.64 (Official Build) (x86_64)`\r\n`react, react-dom 17.0.2`\r\n\r\nTo reproduce turn off all browser extensions, and use the codesandbox in examples - it starts to reproduce consistently.\r\n\r\n","updated_at":"2022-05-20T11:56:24Z","created_at":"2022-05-20T11:56:24Z","creator_user_login":"liqwid"}
{"number":18752,"comment_id":"1344425914","body":"This also happens for me on Brave:\r\n[Version 1.45.131 Chromium: 107.0.5304.110 (Official Build) (64-bit)]","updated_at":"2022-12-09T15:12:30Z","created_at":"2022-12-09T15:12:30Z","creator_user_login":"spector32"}
{"number":19016,"comment_id":"639001687","body":"> I noticed this only happens if the event handler that triggers the closing of the popover is registered on a DOM node that is nested within another DOM node within the popover. If you\r\nswap the lines 35 and 36 everything works as expected.\r\n\r\nCheck this @amannn, Just tried wrapping the `<div>`  element to the DOM node & got the expected results.\r\n\r\n\r\n```\r\n   const WrappingPortalNode = \"div\"; \r\n       <WrappingPortalNode>\r\n         <Portal>\r\n            <p\r\n              style={{\r\n                backgroundColor: \"#ccc\",\r\n                position: \"relative\",\r\n                top: -40,\r\n                padding: 20\r\n              }}\r\n              onMouseLeave={onPortalMouseLeave}\r\n            >\r\n              Portal content\r\n            </p>\r\n          </Portal>\r\n        </WrappingPortalNode>","updated_at":"2020-06-04T17:38:14Z","created_at":"2020-06-04T17:38:14Z","creator_user_login":"iamdarshshah"}
{"number":19016,"comment_id":"639290083","body":"@iamdarshshah Thanks for chiming in!\r\n\r\nYep, exactly. The event fires correctly if it's registered on the top-most DOM node within the portal. I've used that as a workaround in the app where I've encountered this bug.\r\n\r\nI found it interesting that even a wrapping `Fragment` works. So the bug seems related to actual DOM nodes wrapping children within the portal.","updated_at":"2020-07-09T10:13:22Z","created_at":"2020-06-05T06:41:12Z","creator_user_login":"amannn"}
{"number":19016,"comment_id":"706813375","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-10-12T01:56:57Z","created_at":"2020-10-12T01:56:57Z","creator_user_login":"stale[bot]"}
{"number":19016,"comment_id":"706871805","body":"This is still reproducible in 17.0.0-rc.3.","updated_at":"2020-10-12T05:28:11Z","created_at":"2020-10-12T05:28:11Z","creator_user_login":"amannn"}
{"number":19016,"comment_id":"1380705753","body":"I'm also seeing this but with closing the portal with a button - when the portal closes the mouse is outside of the div with `onMouseLeave` but the `onMouseLeave` event never fires. In this case the wrapping element is irrelevant.\r\n\r\nReproducer here: https://codesandbox.io/s/react-bug-portal-mouse-leave-forked-5lb8s6?file=/src/App.js\r\n(not sure if this will be kept alive without signing up for an account but only change is to add a button inside the portal that closes it instead of `onMouseLeave`)","updated_at":"2023-01-12T16:45:44Z","created_at":"2023-01-12T16:45:44Z","creator_user_login":"evansjohnson"}
{"number":19034,"comment_id":"656306041","body":"I'd like to bump this, custom effects using dependencies have their own problems, but if you're choosing to support an `additionalHooks` option for the linter rule, it shouldn't restrict the argument specification if it can be helped. Perhaps a fork with support for @typescript-eslint (and whatever the flow alternative is) would make the most sense for people that want this, unless this ever gets favored for support.","updated_at":"2020-07-09T19:21:36Z","created_at":"2020-07-09T19:21:06Z","creator_user_login":"MichaelBelousov"}
{"number":19034,"comment_id":"690308491","body":":+1: \r\n\r\nthis rule is really overstepping its boundaries. For reference, I've designed an async effect to be without race conditions\r\n\r\n```typescript\r\nuseAsyncEffect(async rerendered => {\r\n  await Promise.resolve(undefined);\r\n\r\n  if (rerendered.current) {\r\n    setState(whatever);\r\n  }\r\n}, [deps]);\r\n```\r\n\r\nit's much less verbose than the suggested way, and does exactly the same thing\r\n\r\n```typescript\r\nuseEffect(() => {\r\n  let cancel = false;\r\n  async function doStuff() {\r\n    await Promise.resolve(undefined);\r\n\r\n    if (!cancel) {\r\n      setState(whatever);\r\n    }\r\n  }\r\n\r\n  // while writing this. I had a bug where I forgot to even call it. showing this way is more fragile\r\n  doStuff();\r\n\r\n  return () => {\r\n    cancel = true;\r\n  }\r\n}, [deps]);\r\n```\r\n\r\nEdit (August 2022):\r\nWhile I still think the current rule is really overstepping boundaries. The above code is really naive and I leave it for historical reasons. You should instead write an effect using an [AbortController](https://developer.mozilla.org/en-US/docs/Web/API/AbortController) or [AbortSignal](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal) as an argument instead\r\n\r\nThis lets you cancel fetches instead of forcing the server to fulfill a request and then throw it away. And in personal code you'll just use a `try { } finally { }` block to clean up whatever state you have","updated_at":"2022-08-11T15:38:35Z","created_at":"2020-09-10T13:59:37Z","creator_user_login":"mbkv"}
{"number":19034,"comment_id":"692207017","body":"I made a minimal PR for this. Ideally imo, `additionalHooks` would support any arguments for a custom hook,\r\nwith a convention that the last one is always a dependency list, but I don't think I should make that decision. This PR only stops\r\nworrying about whether a function is async for just configured `addtionalHooks`","updated_at":"2020-09-14T17:39:28Z","created_at":"2020-09-14T17:39:28Z","creator_user_login":"MichaelBelousov"}
{"number":19034,"comment_id":"798793274","body":"I wonder if it would make more sense to move the effect callbacks async check into a separate rule like `react-hooks/async-use-effect`? In this case we want to check the dependencies, but we don't want the async check. If they were separate rules we could configure them separately.","updated_at":"2021-03-13T22:09:56Z","created_at":"2021-03-13T22:09:56Z","creator_user_login":"Dawnthorn"}
{"number":19034,"comment_id":"873237526","body":"The suggestion to split them into 2 rules I think is ideal. It also allows suppressing one without the other when needed. I'm forced to decide between suppressing the false positive and risk dependencies being missed or having a bunch of warnings as it currently stands.","updated_at":"2021-07-02T20:19:10Z","created_at":"2021-07-02T20:18:47Z","creator_user_login":"cgriebel"}
{"number":19034,"comment_id":"1021517994","body":"I also agree with the proposal for separate rules. When I turn on `exhaustive-deps` I don't really expect any messages on async usage. They seem like completely different concerns to me.","updated_at":"2022-01-25T19:09:37Z","created_at":"2022-01-25T19:09:37Z","creator_user_login":"pting-me"}
{"number":19034,"comment_id":"1025266036","body":"At the moment, the rule runs a check for `isEffect` which is essentially a regex match for `Effect`. Rather than assuming that effect hooks will be named `use.*Effect`, I think the rule should be generalized in case we want to check for `async` in other effect hooks. Perhaps the rule can be something like `react-hooks/no-async-effect`, with an `additionalHooks` parameter like that in `exhaustive-deps`. Default can be `use.*Effect`.","updated_at":"2022-01-31T00:04:48Z","created_at":"2022-01-31T00:04:48Z","creator_user_login":"pting-me"}
{"number":19034,"comment_id":"1089132886","body":"Any traction on this? This is pretty annoying","updated_at":"2022-04-05T18:07:10Z","created_at":"2022-04-05T18:07:10Z","creator_user_login":"devshorts"}
{"number":19034,"comment_id":"1101295668","body":"2 years","updated_at":"2022-04-18T10:26:55Z","created_at":"2022-04-18T10:26:55Z","creator_user_login":"freewind"}
{"number":19034,"comment_id":"1196762613","body":"#18861 would likely fix this as well","updated_at":"2022-07-27T13:27:10Z","created_at":"2022-07-27T13:27:10Z","creator_user_login":"pting-me"}
{"number":19034,"comment_id":"1212134289","body":"Without knowing this issue, I made a PR fixing the initial problem by adding another configuration parameter, see #24958 ","updated_at":"2022-08-11T15:18:18Z","created_at":"2022-08-11T15:18:18Z","creator_user_login":"ahoisl"}
{"number":15154,"comment_id":"474510256","body":"Do they have some kind of a hash?","updated_at":"2019-03-19T18:19:23Z","created_at":"2019-03-19T18:19:23Z","creator_user_login":"gaearon"}
{"number":15154,"comment_id":"474510331","body":"@sebmarkbage ","updated_at":"2019-03-19T18:19:31Z","created_at":"2019-03-19T18:19:31Z","creator_user_login":"gaearon"}
{"number":15154,"comment_id":"474523128","body":"Yes, they do, but ClojureScript doesn't rely on hash equality. It's reliable only as a fast fail check, but doesn't guarantee that two objects with the same hash are structurally equal.","updated_at":"2019-03-19T18:54:28Z","created_at":"2019-03-19T18:53:03Z","creator_user_login":"roman01la"}
{"number":15154,"comment_id":"474585832","body":"How deep can the structural comparison go?","updated_at":"2019-03-19T21:10:32Z","created_at":"2019-03-19T21:10:32Z","creator_user_login":"gaearon"}
{"number":15154,"comment_id":"474595525","body":"It can be full traversal when comparing literal values, but in practice a new value is often a slightly modified version. Because cljs utilizes structural sharing and comparison performs identity check on every level the operation short-circuits early.","updated_at":"2019-03-19T21:40:44Z","created_at":"2019-03-19T21:40:44Z","creator_user_login":"roman01la"}
{"number":15154,"comment_id":"474669392","body":"It is not recommended to go too deep. Eg as far as deep traversal. This would be a bad default. If a data structure wanted to at most compare four levels deep, it could deconstruct eg a trie to the fourth level and pass that level to useEffect. Eg a wrapper around useEffect.","updated_at":"2019-03-20T03:22:25Z","created_at":"2019-03-20T03:22:25Z","creator_user_login":"sebmarkbage"}
{"number":15154,"comment_id":"474796104","body":"If I understand this correctly, you are suggesting to hook into equivalence procedure (or implement a separate one) so it can be stopped at arbitrary level in data structure and pass the rest of it as deps into `useEffect`?\r\n\r\nIf that's correct, I don't think this is practically more useful than hacking around `useEffect` by tracking deps in a ref, though it seem to be unsafe operation in concurrent rendering mode.\r\n\r\nClojure's equality semantics are used in every ClojureScript wrapper for React, this was never a problem.\r\n\r\nOn the other hand there's a question about if it's common enough that compound objects are being used as deps in `useEffect`?\r\n\r\nbtw, I think the issue touches `useMemo` as well.","updated_at":"2019-03-20T11:47:58Z","created_at":"2019-03-20T11:47:07Z","creator_user_login":"roman01la"}
{"number":15154,"comment_id":"474819651","body":"The issue with using \"equality equivalence\" values for fast comparison is that you still pay the price of constructing those values.\r\n\r\nI think it also touches `useState` and the fact that a render is skipped if the new state is \"equal\" to the previous one.\r\n\r\nFrom a performance point of view, the question is -- would an equality comparison be more an expensive an unnecessary re-render? In the case of `Object.is`, equality is faster than a render so it makes sense to rely on that. \r\n\r\nI understand that exposing a custom equality algorithm might expose footguns when used wrongly. At the same time, the immutable data structure libraries (ClojureScript, Immutable.js) do have a very fast and optimised value equality comparison algorithm. \r\n\r\nAs it stands, relying on `Object.is` means that React will do more unnecessary re-renders, re-effects, and also fail to memoize pure functional components that expect immutable data structure props, so even that avenue is closed.\r\n\r\nThank you for taking the time to discuss this, and also thank you for coming up and documenting the Hooks API so well. It's a game changer!\r\n\r\n","updated_at":"2019-03-20T13:04:44Z","created_at":"2019-03-20T13:04:44Z","creator_user_login":"orestis"}
{"number":15154,"comment_id":"474823865","body":"> and also fail to memoize pure functional components that expect immutable data structure props\r\n\r\n`React.Memo` [does accept](https://reactjs.org/docs/react-api.html#reactmemo) a second `areEqual` argument, so that part is already compatible with cljs/immutable-js.\r\n","updated_at":"2019-03-20T13:16:47Z","created_at":"2019-03-20T13:16:47Z","creator_user_login":"mhuebert"}
{"number":15154,"comment_id":"474825784","body":"> `React.Memo` [does accept](https://reactjs.org/docs/react-api.html#reactmemo) a second `areEqual` argument, so that part is already compatible with cljs/immutable-js.\r\n\r\nAh that's right -- I was thinking of useMemo.\r\n","updated_at":"2019-03-20T13:22:12Z","created_at":"2019-03-20T13:22:12Z","creator_user_login":"orestis"}
{"number":15154,"comment_id":"474900059","body":"We greatly appreciate the React team’s time discussing this with us. The way I understand it, equality with ClojureScript’s immutable data basically works like:\r\n\r\n1. Are these two values referentially equal?\r\n2. Recurse\r\n\r\nSince it uses structural sharing, this can have differing performance depending on whether the two values are derived from a common ancestor or not. The worst case is that they are completely distinct-but-equal structures, in which case it does a depth-first traversal of the whole thing.\r\n\r\nMy general take at this point is that adding a comparator to `useEffect` is not the best way, since it will be running this comparator every render. I think that we should instead wrap our heads around the cases where we would be passing in different references with equivalent structures, and then see how we can optimize those.\r\n\r\nI can think of three cases right now where I see reference equality causing undesired behavior:\r\n\r\n1. When a user passes in a data literal to useState / useEffect deps / etc., e.g. `(useEffect fx [{:data “foo”}])`\r\n\r\n2. When some transformation returns a structurally equivalent value from some mutation, e.g. dispatching a state change\r\n\r\n3. Obtaining a data value from some external source, e.g. parsing JSON from a request\r\n\r\nI think that (1) is something that we just have to discourage, or at least educate on the tradeoffs. That is the pathological case where even equality with structural sharing will have to do a deep traversal of the entire structure to be sure every render, which could be quite expensive.\r\n\r\nWith (2), we can take advantage of the fact that state changes are often derived, and also that we can do the equality check on _update_ rather than on every render. Currently I’m thinking of exposing this as a general state hook to help with this:\r\n\r\n```javascript\r\nfunction useImmutableState(initial) {\r\n  let [v, u] = useState(initial);\r\n\r\n  function updater(x) {\r\n    if (!isFunction(x)) {\r\n      // if x is not a fn, then it’s likely not derived from previous state\r\n      // so we don’t bother checking equality\r\n      return u(x);\r\n    }\r\n\r\n    // If it is a function, new state will be derived from previous\r\n    // so we can take advantage of structural sharing to do fast\r\n    // equality here\r\n    function update(currentState) {\r\n      let newState = x(currentState);\r\n      if (immutableEqual(currentState, newState)) {\r\n        return currentState; // should bail\r\n      } else {\r\n        return newState;\r\n      }\r\n    }\r\n    return u(update);\r\n  }\r\n  return [v, updater];\r\n}\r\n```\r\n\r\nI think that this takes care of the case where a user somehow applies a transformation to state that ends up with a structurally similar value.\r\n\r\nFor the case of doing a network request and parsing JSON to EDN or whatever (3), I’m not sure yet what the best way to handle that is; it’s going to be a deep equality no matter what (just like passing in a data literal), but at least it’s not being done each render. Perhaps a custom hook using a ref to do a comparison would guarantee equality, and be worth the cost in performance?\r\n\r\n```javascript\r\n// If the value passed in is structurally equal to the one saved in the ref,\r\n// it will return the one saved in the ref to preserve reference equality\r\nfunction useImmutableValue(value) {\r\n  let v = useRef(value);\r\n  if (!immutableEquals(value, v.current)) {\r\n    v.current = value;\r\n  }\r\n  return v.current;\r\n}\r\n```\r\n\r\nWhich could be used something like:\r\n\r\n```javascript\r\nfunction MyComponent(props) {\r\n  let result = useImmutableValue(useDataFromAPI(props.params));\r\n  useEffect(function doThingBasedOnResult () { ... }, [result]);\r\n  ...\r\n}\r\n```\r\n\r\nIn general, I think we’re looking for help / guidance in how best to leverage our immutable data structures with the latest React changes. It’d be nice to know if we’re thinking about this correctly, or if we should take a different tack.","updated_at":"2019-03-20T15:57:42Z","created_at":"2019-03-20T15:57:42Z","creator_user_login":"lilactown"}
{"number":15154,"comment_id":"474942507","body":"> When a user passes in a data literal to useState / useEffect deps / etc., e.g. (useEffect fx [{:data “foo”}])\r\n\r\nI think typed-in literals are too small to worry about. From [#14476](https://github.com/facebook/react/issues/14476#issuecomment-471199055) - \r\n\r\n> In those rare cases it's acceptable to pass [JSON.stringify(variables)] as a dependency.\r\n> “Wait!” I hear you saying, “Isn’t JSON.stringify() slow?”\r\n> On small inputs, like the example above, it is very fast.\r\n\r\nComparing small structures like `{:some \"map\" :that \"I typed in\"}` is always going to be fast.","updated_at":"2019-03-20T17:23:09Z","created_at":"2019-03-20T17:23:09Z","creator_user_login":"mhuebert"}
{"number":15154,"comment_id":"475505567","body":"Note that I've been bitten in the past by such structural comparison in Clojurescript before. Comparing 2 vectors (arrays) of deeply nested maps when only the last element was different (think products list), it mean basically that the comparison checked every field and nested field of every object in the vector to finally find a difference. The performance hit just killed the UI.","updated_at":"2019-03-22T06:09:59Z","created_at":"2019-03-22T06:09:59Z","creator_user_login":"DjebbZ"}
{"number":15154,"comment_id":"475624944","body":"For me it seems that the user of the API is best placed to know:\r\n\r\na) How deep/complex the compared values will be\r\nb) What is the value of skipping a render (deep tree vs shallow tree)\r\n\r\n","updated_at":"2019-03-22T13:41:35Z","created_at":"2019-03-22T13:41:35Z","creator_user_login":"orestis"}
{"number":15154,"comment_id":"475679138","body":"> the user of the API is best placed to know\r\n\r\nExactly.","updated_at":"2019-03-22T16:05:57Z","created_at":"2019-03-22T16:05:57Z","creator_user_login":"DjebbZ"}
{"number":15154,"comment_id":"475679554","body":"Which means that if I want to skip based on a custom equality check (by custom I mean not the one provided by React), I can just do it before calling `setState` since I have access to both the old and new state.","updated_at":"2019-03-22T16:07:08Z","created_at":"2019-03-22T16:07:08Z","creator_user_login":"DjebbZ"}
{"number":23090,"comment_id":"1009935237","body":"It's an interesting case, but the thing is, the code is definitely incorrect, you can't use external mutable values as `useEffect` dependencies (or at all in render). Everything that follows can be qualified as \"undefined behaviour\".","updated_at":"2022-01-11T12:52:25Z","created_at":"2022-01-11T12:52:25Z","creator_user_login":"vkurchatkin"}
{"number":23090,"comment_id":"1010281499","body":"@vkurchatkin Hi!\r\nGenerally speaking, yes. But I can't fully agree with you. A lot of modern libraries for react use approach, when they have some internal storage, and their own subscription model for updating it. And storage indeed isn't a part of react state there, for updating they use subsription handlers like `forceRerender(i => i + 1)`.\r\n\r\nMy example could be too simple, here's almost the same example, but with `react-query`:\r\n[codesandbox](https://codesandbox.io/s/react-or-react-query-bug-version-2-mjyti?file=/src/example.js)\r\n\r\n`react-query` do so, and `react-redux` did before v7 (or about).\r\nIn react 18 we will have `useSyncExternalStore` for this. \r\nBut before it, using external mutable values like \"state\" was the only way to connect framework agnostic code/library with react. \r\nAt least I guess so 😄","updated_at":"2022-01-11T19:16:13Z","created_at":"2022-01-11T19:16:13Z","creator_user_login":"dmitryKochergin"}
{"number":23090,"comment_id":"1012834007","body":"`useEffect` straight up doesn't work now with a fresh installation using `create-react-app` for react 17.0.2 on Windows 10 and Linux\r\n\r\n```\r\nimport { useEffect } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  useEffect(() => {\r\n    console.log('Working?');\r\n  });\r\n\r\n  return (\r\n    <div className='App'>\r\n      <header className='App-header'>\r\n        <img src={logo} className='App-logo' alt='logo' />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className='App-link'\r\n          href='https://reactjs.org'\r\n          target='_blank'\r\n          rel='noopener noreferrer'\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n```","updated_at":"2022-01-14T17:38:52Z","created_at":"2022-01-14T07:09:11Z","creator_user_login":"bitshiftnetau"}
{"number":23090,"comment_id":"1025206336","body":"@vkurchatkin yes, the simplified code itself is incorrect, but I feel extremely curious as to why this happens. I mean, the component *is* re-rendering, and the value of the deps array for `useEffect` *is* different. Then, why is it not firing? 🤯 😖 ","updated_at":"2022-01-30T18:54:46Z","created_at":"2022-01-30T18:54:46Z","creator_user_login":"lgenzelis"}
{"number":23090,"comment_id":"1113416946","body":"The effect is firing with 18.1: https://codesandbox.io/s/react-bug-version-3-forked-dofmh8?file=/src/example.js\r\n\r\n@dmitryKochergin Could you confirm that this is now fixed?","updated_at":"2022-04-29T14:54:55Z","created_at":"2022-04-29T14:54:55Z","creator_user_login":"eps1lon"}
{"number":23090,"comment_id":"1117029414","body":"@eps1lon Yes, with the new root API it works fine.\r\nWith the old root API the bug still occurs, though. \r\nSince the old root API is unsupported we could probably close this issue.","updated_at":"2022-05-04T07:59:56Z","created_at":"2022-05-04T07:59:56Z","creator_user_login":"dmitryKochergin"}
{"number":23090,"comment_id":"1117140410","body":"> With the old root API the bug still occurs, though.\r\n\r\nI don't understand what the bug with the old root API is? Could you point me again to a CodeSandbox with the latest version of React and the old root API and explain what you see and what you expected instead?","updated_at":"2022-05-04T10:08:29Z","created_at":"2022-05-04T10:08:29Z","creator_user_login":"eps1lon"}
{"number":23090,"comment_id":"1117667666","body":"@eps1lon here's a [codesandbox with react 18.1](https://codesandbox.io/s/react-bug-version-4-i07iuy?file=/src/example.js:1046-1051) which still shows the bug. **Bug:** `useEffect` doesn't run when the component re-renders, even though its dependency array (`[value]`) changes. You need to open the console to actually see the `console.log` coming from `useEffect` not being printed.\r\n\r\nIf you go to `index.js` and change \r\n\r\n```javascript\r\nReactDOM.render(\r\n  <StrictMode>\r\n    <Example />\r\n  </StrictMode>,\r\n  rootElement\r\n);\r\n```\r\n\r\nby \r\n\r\n```javascript\r\nconst root = ReactDOM.createRoot(rootElement);\r\nroot.render(<StrictMode><Example /></StrictMode>);\r\n```\r\nyou'll see the expected behavior (that is, `useEffect` gets triggered for each re-render). ","updated_at":"2022-05-04T18:27:34Z","created_at":"2022-05-04T18:27:34Z","creator_user_login":"lgenzelis"}
{"number":23090,"comment_id":"1289352723","body":"I've encountered this behavior change as well. I'm not sure how to create a reproduction case out of our code base, but essentially what I see is that given the following logic:\r\n\r\n```typescript\r\nconst value = useCustomHook()\r\nconsole.log(\"value is now:\", value)\r\nuseEffect(() => {\r\n    console.log(\"effect is running for value:\", value)\r\n}, [value])\r\n```\r\n\r\nThen the following logs can be observed:\r\n\r\n```\r\nvalue is now: 0\r\neffect is running for value: 0\r\nvalue is now: 1\r\nvalue is now: 2\r\n…\r\n```\r\n\r\nEssentially, even if the component is clearly re-rendering multiple times (the re-render is triggered via a `useReducer` dispatch inside of the custom hook after which it returns the new value), the effect never gets rerun. The value in the `deps` array is a primitive (string in our case) and is definitely changing between renders (I logged the exact copy/paste of the array on the line before the call to `useEffect` and the immediate values inside the array do change so it would be different in a shallow compare).\r\n\r\nIt's almost as if the first render where the `deps` change doesn't trigger the `useEffect` but does make it remember the new `deps` values, then next time around when the `useEffect` *would've* triggered, it's now no longer different…\r\n\r\nIf the repro cases in this issue aren't enough, I can take a stab at creating one from our code base but my first attempt did not reproduce this bug.\r\n\r\nThis behavior is observed using either API to mount React.","updated_at":"2022-10-24T17:22:21Z","created_at":"2022-10-24T17:22:21Z","creator_user_login":"blixt"}
{"number":23090,"comment_id":"1289399915","body":"Okay so I did end up managing to reproduce this. Basically if you synchronously end up in a flow like the following, a component will re-render with new state, but not trigger effects, which I *think* is a bug:\r\n\r\n1. Parent class component is being re-rendered\r\n2. Inside `shouldComponentUpdate` of the parent , an external store function is called that triggers its update listeners to be called\r\n3. A child component (note: not sure if it *has* to be a child component) is re-rendered because it's listening to the external store\r\n4. Meanwhile, another class component *in between* parent and child will `return false` in `shouldComponentUpdate` (the parent will `return true`)\r\n5. The end result is a re-rendered child component with the new value, but its `useEffect` depending on that value never ran\r\n\r\nHere's the small repro: https://codesandbox.io/s/funny-galois-1wr2ib?file=/src/App.js\r\n\r\nTo test the repro you'd follow these steps:\r\n\r\n1. Click \"Update store\" one or more times to (invisibly) queue up a value change in the external store without causing React to do anything\r\n2. Click \"Flush changes\" to make the external store call the listeners that are interested in changes\r\n3. Observe that the component re-renders and logs the new value, but its `useEffect` doesn't log anything (it neither cleans up the old effect, nor does it initialize a new one)\r\n","updated_at":"2022-10-24T19:24:59Z","created_at":"2022-10-24T18:05:54Z","creator_user_login":"blixt"}
{"number":13499,"comment_id":"416604338","body":"That's the browser behavior, cause `1e1` is also [valid-floating-point-number](https://html.spec.whatwg.org/multipage/common-microsyntaxes.html#valid-floating-point-number).\r\nBut if you set `input.value = '1e'`, React will throw warning and just give empty to input.","updated_at":"2018-08-28T14:23:39Z","created_at":"2018-08-28T14:23:39Z","creator_user_login":"Ende93"}
{"number":13499,"comment_id":"416604696","body":"From what I could experiment with your codesandbox, the `onChange` is still being called (with an empty value) for when you type \"e\".\r\nAdditionally, if you type anything after the \"e\", it will send the value properly.\r\n\r\nI believe this is happening because a string _ending_ with \"e\" is not a valid number (e.g. `12e`), but a string with \"e\" followed by an integer is (e.g. `12e2`). Remember that `12e2` is a valid number, as Ende93 pointed out.\r\n\r\nNotice the `onChange` will be called with an empty value for any other non-number string (e.g. `foo`), so it looks quite consistent to me.","updated_at":"2018-08-28T14:24:36Z","created_at":"2018-08-28T14:24:36Z","creator_user_login":"Yurickh"}
{"number":13499,"comment_id":"416606774","body":"@Yurickh is spot on. Thanks! \r\n\r\nIf I type the characters `1e2` I see three change events:\r\n\r\n1. \"1\"\r\n2. \"\" (because `1e` is not a valid number)\r\n3. `\"1e2\"\r\n\r\nI believe everything is behaving as intended. However please let me know if there's a case we've missed. Also this is a super confusing part of inputs, so I'm happy to continue the conversation if anything else needs clarification (or I've missed something).","updated_at":"2018-08-28T14:29:43Z","created_at":"2018-08-28T14:29:29Z","creator_user_login":"nhunzaker"}
{"number":13499,"comment_id":"416727348","body":"Thanks guys for having a look at this, but this is all I am getting: https://drive.google.com/file/d/1Tq7fF3e2w3QyAwE4mLTpHKz__GYYK0wF/view\r\n\r\nThe `onChange` never gets called and the input becomes uncontrolled.\r\n\r\nI believe this is a bug as the native `input` event gets called correctly.","updated_at":"2018-08-28T20:22:15Z","created_at":"2018-08-28T20:22:15Z","creator_user_login":"vahnag"}
{"number":13499,"comment_id":"416807331","body":"`onChange` get called, you can just see the console log, but when you input `1e`,  `e.target.value` is '', and `setState` get ''(empty string), so `e.target.value` is the same to setState, so React will not see the diff, and input will not change.","updated_at":"2018-08-29T02:57:09Z","created_at":"2018-08-29T02:57:09Z","creator_user_login":"Ende93"}
{"number":13499,"comment_id":"417039541","body":"That's correct. Numbers that start with `e` are invalid, so Chrome reports an empty string as `input.value`. As more numbers are added, the value reports the same (an empty string), so no change occurs.","updated_at":"2018-08-29T17:35:28Z","created_at":"2018-08-29T17:35:28Z","creator_user_login":"nhunzaker"}
{"number":13499,"comment_id":"418373254","body":"@nhunzaker the problem here is that React's `onChange` doesn't allow to distinguish between empty inputs of type number and non-empty invalid ones. This is often needed, e.g. to implement Material Design-style floating labels that descend into the input when it's empty; see e.g. https://github.com/mui-org/material-ui/issues/12764. I assume this is because in both cases `value` is an empty string.\r\n\r\nModifying your steps, the scenario is as follows:\r\n\r\n1. Enter \"2\" into the input - the callback fires.\r\n2. Remove \"2\", making the input empty - the callback fires.\r\n3. Enter \"e\" - the callback doesn't fire.\r\n\r\nTo implement Material UI inputs you need to check input's `validity.badInput` field. But you won't have a chance to actually see it.\r\n\r\nCould `onChange` be fired not only if the input value changes but also if its `validity.badInput` field changes? It seems that if anything else is not valid with the input (e.g. the value is below `min` or `step` is not respected) the `value` field is not zeroed out.\r\n\r\nNote that IE doesn't support `validity.badInput` but IE also doesn't always clear `value` for non-number values in a number input. For example, according to:\r\nhttps://github.com/angular/angular.js/issues/10981#issuecomment-73231004\r\n`0a` is not cleared in IE but `a0` is. This problem might not be solvable, though.","updated_at":"2018-09-04T13:47:28Z","created_at":"2018-09-04T13:47:28Z","creator_user_login":"mgol"}
{"number":13499,"comment_id":"418381593","body":"@mgol Would #9657 resolve this?","updated_at":"2018-09-04T14:11:04Z","created_at":"2018-09-04T14:11:04Z","creator_user_login":"gaearon"}
{"number":13499,"comment_id":"418394845","body":"@gaearon If I understand it correctly, this line:\r\n> `onInput` (...) It is allowed to over-fire many events even if nothing changed.\r\n\r\nsuggests it should solve the issue as the browser fires the `input` event for each change, even if it doesn't change the `value` property because, for example, you type `e` into an empty `<input type=\"number\">`.\r\n\r\nI don't know what's the difference between the polyfilled and non-polyfilled `onInput`, is that relevant here? This particular issue affects both controlled and uncontrolled inputs.\r\n","updated_at":"2018-09-04T14:46:04Z","created_at":"2018-09-04T14:46:04Z","creator_user_login":"mgol"}
{"number":13499,"comment_id":"418398294","body":"@mgol Is this issue about controlled or uncontrolled component? Or both?","updated_at":"2018-09-04T14:54:44Z","created_at":"2018-09-04T14:54:44Z","creator_user_login":"gaearon"}
{"number":13499,"comment_id":"418404313","body":"Both.","updated_at":"2018-09-04T15:09:32Z","created_at":"2018-09-04T15:09:32Z","creator_user_login":"mgol"}
{"number":13499,"comment_id":"418405640","body":"Tentatively reopening for future consideration.","updated_at":"2018-09-04T15:12:52Z","created_at":"2018-09-04T15:12:52Z","creator_user_login":"gaearon"}
{"number":13499,"comment_id":"573006312","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-10T11:52:47Z","created_at":"2020-01-10T11:52:47Z","creator_user_login":"stale[bot]"}
{"number":13499,"comment_id":"573105093","body":"This is still an issue.","updated_at":"2020-01-10T16:26:29Z","created_at":"2020-01-10T16:26:29Z","creator_user_login":"mgol"}
{"number":13499,"comment_id":"938549062","body":"Still an issue in MUI V5, was hoping it would be fixed there 😢 ","updated_at":"2021-10-08T10:59:17Z","created_at":"2021-10-08T10:59:17Z","creator_user_login":"yoont4"}
{"number":19637,"comment_id":"675457221","body":"Gonna toss the two typical cases we run into quickly here, and hopefully follow up with some actual code and more specific actual cases of workarounds or benefits as i think of places in our code bases that have em.\r\n\r\n### Canonical Modal case\r\n\r\nFor posterity I think this is probably the canonical \"Why this is unhelpful\" case, at least as far as we see in in issues via react-bootstrap. \r\n\r\n```jsx\r\nfunction OpenModalButton() {\r\n  const [show, setShow] = useState(false);\r\n  return (\r\n    <Button onClick={() => setShow((prev) => !prev)}>\r\n      Open Me\r\n      <Modal show={show} />\r\n    </Button>\r\n  );\r\n}\r\n```\r\n\r\nThis was more compelling before `Fragment` as it actively prevented encapsulating components naturally. This example does still cause pain when you need to rely on event bubbling further up. IME though that is usually easy to work around (**editorializing**: I think the workarounds are preferable patterns anyway). Cases where bubbling is depended on usually fall into two categories (as i've seen) \r\n\r\n- You care about the actual DOM hierarchy: workaround is using `element.contains` to check and filter out event (targets) that aren't relevant.\r\n- To avoiding prop drilling: workaround is pass a callback, use context\r\n\r\n### The Case where it's super helpful\r\n\r\nAssume the below, `CustomSelect` renders a it's menu in a portal outside of the modal. As some backdrop, Modals should trap focus inside them, meaning as to tab through the modal body focus should cycle through the tabbable elements as if there was nothing else on the page below the modal. You don't want to accidentally focus an input underneath the modal. \r\n\r\nThat can be accomplished by ensuring focus/blur events are paired on the Modal. However, that relies on bubbling working Logically instead of \"physically\", e.g. moving focus to the Select menu _actually_ moves focus outside the Modal element, but semantically focus should be considered inside the modal. With the React bubbling you get that for free, and without it you need to whitelist any possible outside elements, a task that is impossible to generalize for libraries and hard to maintain.\r\n\r\n```js\r\nfunction MyModal({ show }) {\r\n  return (\r\n    <Modal show>\r\n      <div>\r\n        <CustomSelect>\r\n          <Option>Click</Option>\r\n        </CustomSelect>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\n```\r\n\r\nThere is one Practical rub with this, which is in practice implementing focus trapping often involves adding event handlers manually to refs, bypassing the React event system. This usually means you don't get to benefit from the React portal bubbling even when you want too, ref:  [react-focus-lock](https://github.com/theKashey/react-focus-lock), [react-overlays](https://github.com/react-bootstrap/react-overlays/blob/master/src/Modal.tsx#L179). This is more of a problem with react _missing_ another API, not the current behavior being bad.","updated_at":"2020-08-18T12:48:15Z","created_at":"2020-08-18T12:47:27Z","creator_user_login":"jquense"}
{"number":19637,"comment_id":"710099975","body":"This is super helpful for suppressing outside click/focus in/focus out events from portalled content and can really help simplify project architecture.\r\n\r\nAside from the case mentioned like `Tooltip`s, `Select`s etc, it can also be used to help avoid global state for Sidebar UIs because property panel code can be colocated with the thing they're configuring and outside click events can be prevented when interacting with these property panels: \r\n\r\nhttps://codesandbox.io/s/collocate-concerns-with-portals-yrjkc\r\n\r\n![pr](https://user-images.githubusercontent.com/175330/96274413-5d697400-0fc8-11eb-866b-11fa9338228d.gif)\r\n\r\nClicking outside the button exits the button editing mode but interacting with the property panel does not as it is inside the `ButtonEditor` React tree. I did not have to use any complex logic for this.\r\n\r\nIn my humble opinion, if people would like to bind events that respect the DOM tree only then it would make sense for the code to explicitly bind to DOM events. It would more clearly communicate the intent.","updated_at":"2020-10-17T08:43:59Z","created_at":"2020-10-16T15:01:06Z","creator_user_login":"jjenzz"}
{"number":19637,"comment_id":"710775495","body":"Just popping the `Tooltip` case here too where refocusing the menu button after the menu closes should not reactivate its tooltip (use keyboard, space to open/close - also desktop only, it's PoC code 😅).\r\n\r\nhttps://codesandbox.io/embed/usefocusenter-forked-x6i0n\r\n\r\n![tooltip](https://user-images.githubusercontent.com/175330/103350641-8a420900-4a98-11eb-9a93-58016f50398d.gif)\r\n\r\nI can continue posting more but the general pattern is the ability to prevent events from portalled content as it is considered _inside_. Is it worth me posting more use-cases for this? ","updated_at":"2020-12-30T12:14:21Z","created_at":"2020-10-17T08:32:01Z","creator_user_login":"jjenzz"}
{"number":19637,"comment_id":"794607367","body":"**A name for your pattern (come up with something unique so we can refer to it later)**\r\n\r\n\"unwanted-container-events-on-nested-portal\"\r\n\r\n**A brief description of the UI (but a screenshot is worth a thousand words)**\r\n\r\n![react-portal-event-bubbling-issue](https://user-images.githubusercontent.com/207585/110552156-a80c9980-80eb-11eb-8e36-19110a741ce3.gif)\r\n\r\nThis issue came up when using the `Nav` and `Modal` components in `react-bootstrap`. The `Nav` component applies some key press handlers to allow the arrow left and right keys to be used to navigate between links in the `Nav`. If one of those links is used to open the `Modal` component, which uses a portal to render, then the left and right arrow keys used inside of the modal will bubble up to the `Nav` which will move focus from the `Modal` and onto one of the links in the `Nav`. \r\n\r\n**A small CodeSandbox demo, if you want to make a stronger case**\r\n\r\nhttps://codesandbox.io/s/react-bootstrap-nav-arrow-key-bug-5eo1j\r\n\r\n```js\r\n<Nav>\r\n  <Nav.Link onClick={() => setShowModal(true)}>Show Modal</Nav.Link>\r\n  <Modal show={showModal}>Some Modal</Modal>\r\n</Nav>\r\n```\r\n\r\n**How React event bubbling behavior breaks (or helps) your case**\r\n\r\nIn this specific case the event bubble behavior through the portal breaks this specific use case. The keyboard events on the `Nav` are reasonable, however we do not want these keyboard events to be applied to the `Modal` that is triggered open by a link in the `Nav`.\r\n\r\n**A workaround you are currently using, if any**\r\n\r\nOne workaround is to change the containment of components, effectively moving the `Modal` to not be a child of the `Nav`.\r\n\r\n```js\r\n<>\r\n  <Nav>\r\n    <Nav.Link onClick={() => setShowModal(true)}>Show Modal</Nav.Link>\r\n  </Nav>\r\n  <Modal show={showModal}>Some Modal</Modal>\r\n</>\r\n```\r\n\r\n**If you tried some workarounds but they cause issues, let us know which ones**\r\n\r\nChanging the containment of components can be complicated by how components are organized for reuse. For example, in my specific use case the organization of my components is such that I have a reusable `LoginLink` component that I would like to contain the `Modal`. This allows the `LoginLink` component to be easily used in other components other than the `Nav` and for those other components to not have to worry about adding something like a `LoginModal` component along side the `LoginLink`. Example:\r\n\r\n```js\r\nfunction LoginLink() {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Nav.Link onClick={() => setShowModal(true)}>Show Modal</Nav.Link>\r\n      <Modal show={showModal}>Some Modal</Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction NavBar() {\r\n  return (\r\n    <Nav>\r\n      <LoginLink />\r\n    </Nav>\r\n  );\r\n}\r\n```","updated_at":"2021-03-09T23:35:41Z","created_at":"2021-03-09T23:35:41Z","creator_user_login":"adamayres"}
{"number":19637,"comment_id":"811096805","body":"Hi all,\r\n\r\nI've just run into this thread and have a use case that I think might provide some value.\r\n\r\nUse Case:\r\n## Nested Forms\r\n\r\nIn Payload CMS, we have many cases where we use Portals to appropriately adhere to HTML spec regarding how forms _**cannot**_ be nested within one another. To meet this requirement, we portal out \"nested\" forms into modal windows within a separate area of the DOM.\r\n\r\n#### The Problem\r\n\r\nAs usual, our forms have a `<button type=\"submit\">` that is responsible for submitting the form if clicked. Looking at the DOM, all is well if we portal nested forms, because our \"nested\" form is actually not nested thanks to it being within a Portal. We are adhering to HTML spec and the main form itself exists in an entirely separate segment of the DOM. \r\n\r\nThe problem is that when we click the portal form's `button` to submit the portal form, its event bubbles up and submits the main form. This is unintended and caused us to do a lot of soul-searching to figure out what was happening. \r\n\r\nScreenshot of main form with Rich Text editor:\r\n![payload-cms-main-form](https://user-images.githubusercontent.com/6651896/113157021-842f0600-9208-11eb-94f3-efc549d80014.png)\r\n\r\nScreenshot of modal form (to submit a relationship into the Rich Text editor):\r\n![payload-cms-relationship-form](https://user-images.githubusercontent.com/6651896/113157072-901ac800-9208-11eb-858f-ebc8a1a5ee49.png)\r\n\r\n#### The Workaround\r\n\r\nJust need to ensure that `event.stopPropagation()` is called within the nested form `onSubmit` handler.\r\n","updated_at":"2021-04-01T15:43:48Z","created_at":"2021-03-31T14:07:25Z","creator_user_login":"jmikrut"}
{"number":19637,"comment_id":"811978005","body":"> We are currently evaluating workarounds but have not yet found a solution to the problem. Will update this comment with a workaround if we find one.\r\n\r\n@jmikrut I believe `event.stopPropagation` would help? https://codesandbox.io/s/youthful-dream-4xfns?file=/src/App.js","updated_at":"2021-04-01T15:15:47Z","created_at":"2021-04-01T15:15:47Z","creator_user_login":"jjenzz"}
{"number":19637,"comment_id":"811987476","body":"Just wanted to say — thank you for submitting these, they're very helpful. The issue is still on our backlog to revisit, but it's going to make a huge difference to just have all these available as a reference. So please don't hesitate to post more.","updated_at":"2021-04-01T15:30:17Z","created_at":"2021-04-01T15:30:17Z","creator_user_login":"gaearon"}
{"number":19637,"comment_id":"811996057","body":"@jjenzz yes it did. We actually already had that in place, but another issue was preventing our code from reaching `e.stopPropagation()`. \r\n\r\nFor others reading this, the `stopPropagation` call, in my case, needed to be placed in the form submit handler—NOT a submit button `onClick` or similar. \r\n\r\n@gaearon that said, I think my use case can be sufficiently worked around. Still interesting, nonetheless! Keep up the good work.","updated_at":"2021-04-01T15:42:54Z","created_at":"2021-04-01T15:42:54Z","creator_user_login":"jmikrut"}
{"number":19637,"comment_id":"825212978","body":"I'm tracking if the mouse is over a list. This is to prevent the user from clicking an element that was just inserted by a live update, when he really wanted to click on a different element.\r\n\r\nThe list rows allow a user to open a modal. When the modal is opened, the whole screen causes `onMouseEnter`/`onMouseLeave` to be fired for the list, as the modal backdrop covers the whole screen. This means that when the user clicks the backdrop to close and their cursor isn't inside the list the `onMouseLeave` never fires and the update block is held till they enter and leave the list area the next time.\r\n\r\nSince the event handler is on the list container, and the modal is mounted several levels deep in the component tree, hoisting it outside requires an inversion of control that doesn't feel natural to react.","updated_at":"2021-04-22T22:02:47Z","created_at":"2021-04-22T22:02:47Z","creator_user_login":"mormahr"}
{"number":19637,"comment_id":"850412650","body":"Another example where this is super useful:\r\n\r\nhttps://user-images.githubusercontent.com/175330/119989657-56273180-bfbf-11eb-872f-ae32c0f45608.mp4\r\n\r\nSpecifically, because we are using roving focus:\r\n\r\n- Focusing an item in the top level menu should close all submenus\r\n- Focusing a submenu trigger in the top level menu should close branches from the submenu\r\n\r\nMade possible by this snippet:\r\n\r\n```jsx\r\nfunction useFocusOutside(onFocusOutside?: (event: FocusEvent) => void) {\r\n  const handleFocusOutside = useCallbackRef(onFocusOutside);\r\n  const isFocusInsideReactTreeRef = React.useRef(false);\r\n  React.useEffect(() => {\r\n    const handleFocus = (event: FocusEvent) => {\r\n      if (!isFocusInsideReactTreeRef.current) handleFocusOutside(event);\r\n    };\r\n    document.addEventListener('focusin', handleFocus);\r\n    return () => document.removeEventListener('focusin', handleFocus);\r\n  }, [handleFocusOutside]);\r\n  return {\r\n    onFocusCapture: () => (isFocusInsideReactTreeRef.current = true),\r\n    onBlurCapture: () => (isFocusInsideReactTreeRef.current = false),\r\n  };\r\n}\r\n```\r\n\r\n","updated_at":"2021-05-28T13:19:27Z","created_at":"2021-05-28T13:17:45Z","creator_user_login":"jjenzz"}
{"number":19637,"comment_id":"850594683","body":"We're now doing this check on all of our events in React Aria:\r\n\r\n```js\r\nif (!e.currentTarget.contains(e.target)) {\r\n  return;\r\n}\r\n```\r\n\r\nSee https://github.com/adobe/react-spectrum/pull/1840.\r\n\r\nThis fixed issues we had with dialogs where something outside the dialog handled an event and called `preventDefault` on it, which would prevent the default for the event inside the dialog. For example, a text field inside a dialog that's mounted within a table row. Normally, the table row handles mouse down to select the row, and calls preventDefault. This was preventing focus from going to textfields within the dialog.\r\n\r\nSo far we haven't found a case where events bubbling through portals has been useful. We just keep finding more places where we need to add this check. It feels like a huge footgun in general, especially for components that can contain arbitrary children. If there might be a portal inside, then you have to remember to add these checks to every event you handle to ensure that things work as expected. The alternative is to add handlers for every possible event at the portal boundary and call stopPropagation.\r\n\r\nThe use cases _for_ bubbling through portals are extremely narrow, and it seems like something you should at least have to explicitly opt into. Portals are used to move part of the react tree into a different location in the DOM. This is a choice made by the component for a good reason, and React should not try to hide that. Most cases for bubbling through portals could be solved in a more explicit way, by adding the necessary event handler _inside_ the portal rather than outside (or in addition).\r\n\r\n```jsx\r\n<div onFocusCapture={onFocusCapture}>\r\n  <button>Outer</button>\r\n  <Portal>\r\n    <div onFocusCapture={onFocusCapture}>\r\n      <button>Inner</button>\r\n    </div>\r\n  </Portal>\r\n</div>\r\n```","updated_at":"2021-05-28T18:30:21Z","created_at":"2021-05-28T18:30:21Z","creator_user_login":"devongovett"}
{"number":19637,"comment_id":"968788962","body":"In case it helps someone... Instead of spreading `e.currentTarget.contains` checks throughout the codebase, you can create a `Portal` component that can be configured to prevent/allow propagation. Something along these lines: https://codesandbox.io/s/zen-haze-qmvuy?file=/src/App.tsx","updated_at":"2021-11-15T11:15:45Z","created_at":"2021-11-15T11:09:06Z","creator_user_login":"jjenzz"}
{"number":19637,"comment_id":"1120113993","body":"Hey all, here's a usecase where I think Portals should **not** bubble events according to the React tree:\r\n\r\n### Name\r\nreverse-portal\r\n\r\n### What's a reverse portal?\r\nReverse portals let you \"pull a rendered element from elsewhere into a target location within your React tree. This allows you to reparent DOM nodes, so you can move React-rendered elements around your React tree and the DOM without re-rendering them.\"\r\n\r\nhttps://github.com/httptoolkit/react-reverse-portal/issues/13","updated_at":"2022-05-07T02:38:59Z","created_at":"2022-05-07T02:26:30Z","creator_user_login":"adri1wald"}
{"number":23100,"comment_id":"1013199985","body":"This isn't documented well enough (apologies) but there's a way for you to ask DevTools to serve its backend over HTTPS. It requires a `KEY` and `CERT` environment variable be set, like so:\r\n```sh\r\nKEY=react-devtools-ssl-key.pem  CERT=react-devtools-ssl-cert.pem react-devtools\r\n```\r\n\r\nTry this and let me know if it gets you up and running?","updated_at":"2022-01-14T14:58:29Z","created_at":"2022-01-14T14:58:29Z","creator_user_login":"bvaughn"}
{"number":23100,"comment_id":"1015996130","body":"Hey Brian, \nThanks for the response. Unfortunately I'm still getting the same error on Safari.","updated_at":"2022-01-19T01:38:45Z","created_at":"2022-01-19T01:38:45Z","creator_user_login":"malewis5"}
{"number":23100,"comment_id":"1020140643","body":"@malewis5 If you're still getting the _same_ error then something sounds wrong. Can you confirm that DevTools is serving the backend script over HTTPS even after you pass in those options?","updated_at":"2022-01-24T14:10:49Z","created_at":"2022-01-24T14:10:49Z","creator_user_login":"bvaughn"}
{"number":23100,"comment_id":"1336271988","body":"@malewis5 Were you able to resolve this issue? I'm running into a similar issue which seems to be caused by the Safari browser not letting non-secured (HTTP) sites be accessed from a secured site (HTTPS).","updated_at":"2022-12-03T22:43:15Z","created_at":"2022-12-03T22:43:15Z","creator_user_login":"BraydenLangley"}
{"number":23100,"comment_id":"1382731238","body":"+1\r\n\r\nHaving the same issue with debugging Safari now.","updated_at":"2023-01-14T12:54:12Z","created_at":"2023-01-14T12:54:12Z","creator_user_login":"filingroove"}
{"number":22994,"comment_id":"997746745","body":"I took a look at your render function, you assign specified `id` as key so it reorders when updating every time.\r\n```javascript\r\nrender() {\r\n  return (\r\n    <div className=\"App\">\r\n      <button onClick={this.swapRows}>swap rows</button>\r\n      {this.state.data.map((item) => {\r\n        return <Item key={item.id.toString()} content={item.content} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n```\r\nThe simple solution is to use index of item as key and set `id` to the id attribute on the specified item.\r\n```javascript\r\nfunction Item(props) {\r\n  return <div id={props.id}>{props.content}</div>;\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <div className=\"App\">\r\n      <button onClick={this.swapRows}>swap rows</button>\r\n      {this.state.data.map((item, i) => {\r\n        return <Item key={i} id={item.id.toString()} content={item.content} />;\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n```","updated_at":"2021-12-20T09:25:02Z","created_at":"2021-12-20T09:25:02Z","creator_user_login":"luffy84217"}
{"number":22994,"comment_id":"997764775","body":"> \r\n\r\nThank you for your reply, this is an effective method. But react does not recommend using indexes for keys.","updated_at":"2021-12-20T09:49:33Z","created_at":"2021-12-20T09:49:33Z","creator_user_login":"amorphousDj"}
{"number":22994,"comment_id":"1018531459","body":"I'm not really offering some help here \r\n\r\nReact is not very good at comparing reversed list https://github.com/facebook/react/blob/c1220ebdde506de91c8b9693b5cb67ac710c8c89/packages/react-reconciler/src/ReactChildFiber.old.js#L750\r\n\r\nif you move some key in the rare into the head, it causes all the items to be marked as \"need to move\".","updated_at":"2022-01-21T14:03:33Z","created_at":"2022-01-21T14:03:18Z","creator_user_login":"sunderls"}
{"number":22994,"comment_id":"1025175068","body":"I'm sorry if it's not the same issue, that is mentioned in the topic. But this not only creates a performance issue but might be a bug on a functional level. For example When you expect, that HTML element will not be re-created, and want to create a CSS swap transition, the re-created elements will swap without animation. I've created a [codesandbox](https://codesandbox.io/s/react-swap-issue-t2rq9)  that reproduces the issue.","updated_at":"2022-01-30T16:06:16Z","created_at":"2022-01-30T16:06:16Z","creator_user_login":"vaukalak"}
{"number":22943,"comment_id":"991983554","body":"Hi @cliffordfajardo! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@fb.com](mailto:cla@fb.com?subject=CLA%20for%20facebook%2Freact%20%2322943). Thanks!","updated_at":"2021-12-12T22:34:25Z","created_at":"2021-12-12T22:34:25Z","creator_user_login":"facebook-github-bot"}
{"number":22943,"comment_id":"991992665","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2021-12-12T23:29:05Z","created_at":"2021-12-12T23:29:05Z","creator_user_login":"facebook-github-bot"}
{"number":22943,"comment_id":"1011371943","body":"Friendly bump for feedback on tiny PR 😄\r\n@bvaughn  @gaearon @acdlite  ","updated_at":"2022-01-12T19:17:47Z","created_at":"2022-01-12T19:17:47Z","creator_user_login":"cliffordfajardo"}
{"number":22943,"comment_id":"1042607887","body":"Apologies if you are not the person to reach out to @rachelnabors I follow you on Twitter and saw you were part of the react team ⚛️ \r\n\r\n","updated_at":"2022-02-17T06:11:26Z","created_at":"2022-02-17T06:10:13Z","creator_user_login":"cliffordfajardo"}
{"number":19848,"comment_id":"694288259","body":"Basically comes down to https://github.com/facebook/react/blob/ddd1faa1972b614dfbfae205f2aa4a6c0b39a759/packages/react-dom/src/server/ReactPartialRendererHooks.js#L113\r\n\r\n(and all implementations of `areHookInputsEqual`) assuming that each value in the array can be (implicitly) converted to a string. [Symbols can't though](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Symbol_type_conversions). `nextDeps.map(dep => String(dep)).join(', ')` seems like the safer option.","updated_at":"2020-09-17T14:51:01Z","created_at":"2020-09-17T14:51:01Z","creator_user_login":"eps1lon"}
{"number":19848,"comment_id":"694368916","body":"I can have a look if you want @eps1lon ?","updated_at":"2020-09-17T17:03:19Z","created_at":"2020-09-17T17:03:19Z","creator_user_login":"omarsy"}
{"number":19848,"comment_id":"694403759","body":"> I can have a look if you want @eps1lon ?\r\n\r\nYou can but I don't decide what gets merged or should get merged. A core member might still decide that this is e.g. too expensive. Just managing expectations here. ","updated_at":"2020-09-17T18:01:42Z","created_at":"2020-09-17T18:01:42Z","creator_user_login":"eps1lon"}
{"number":19848,"comment_id":"694422886","body":"Ok @eps1lon  I'm going to benchmark my changes before I push a PR","updated_at":"2020-09-17T18:36:48Z","created_at":"2020-09-17T18:36:48Z","creator_user_login":"omarsy"}
{"number":19848,"comment_id":"694591703","body":"This is DEV-only so it's fine to do a bit more work.","updated_at":"2020-09-18T01:18:10Z","created_at":"2020-09-18T01:18:10Z","creator_user_login":"gaearon"}
{"number":19848,"comment_id":"694681680","body":"> Ok @eps1lon I'm going to benchmark my changes before I push a PR\r\n\r\nThe more efficient way to do is by doing the string concat via traditional for loop but it's completely unnecessary to think about performance here.  This code will only run if you use deps incorrectly which isn't a hot path for anyone (this much I think we can be certain about). And as Dan points out, it's DEV-only. It has no impact on React in production.","updated_at":"2020-09-18T06:27:21Z","created_at":"2020-09-18T06:27:21Z","creator_user_login":"leidegre"}
{"number":19848,"comment_id":"1625380113","body":"Hey can i work on this issue\r\n","updated_at":"2023-07-07T12:58:42Z","created_at":"2023-07-07T12:58:42Z","creator_user_login":"PrathameshBhangre"}
{"number":15726,"comment_id":"496679817","body":"I think my personal preference, after a little consideration, is the third option- `React.debug(callback)`","updated_at":"2019-05-28T20:37:36Z","created_at":"2019-05-28T20:37:36Z","creator_user_login":"bvaughn"}
{"number":15726,"comment_id":"496686162","body":"I think the proposal tries to fight with the call side-effects (logging, hitting breakpoints) but does not address the original problem that DevTools is solving, which is \"DevTools re-renders function components that use hooks in order to __build up metadata to display in the selected element panel.__\" – why doesn't React expose getting this required metadata as an API, so it forces DevTools to use workarounds to gather hooks information (call the components and thus trigger their call side-effects)?","updated_at":"2019-05-28T20:55:01Z","created_at":"2019-05-28T20:55:01Z","creator_user_login":"sompylasar"}
{"number":15726,"comment_id":"496688827","body":"> why doesn't React expose getting this required metadata as an API, so it forces DevTools to use workarounds to gather hooks information\r\n\r\nThere are two reasons for this design:\r\n* DevTools needs a lot more information than React does. For example, it's useful for DevTools to be able to identify and display \"custom hooks\" (functions with names that start with \"use\" that call other hooks). Identifying custom hooks relies on the relatively \"expensive\" operation of parsing the call stack.\r\n* Even for built in hooks, we would not want to add additional overhead to React for every component that uses hooks just to support the uncommon case of displaying hooks values for a component selected in DevTools at some point in time.\r\n\r\nFor what it's worth, I agree with the general sentiment that it's _unfortunate_ (and a bit awkward) that DevTools needs to shallow render a component to read hooks values. I think it's probably still the right trade off though, given the above considerations.","updated_at":"2019-05-28T21:23:51Z","created_at":"2019-05-28T21:02:53Z","creator_user_login":"bvaughn"}
{"number":15726,"comment_id":"496695675","body":"@sompylasar Fixing that also doesn't fix the other issue. React recalls functions multiple times during DEV mode and in concurrent mode can rebase and call the function multiple times for a single render. The contract is that we can call the function as much as we want without side-effects.","updated_at":"2019-05-28T21:24:39Z","created_at":"2019-05-28T21:24:39Z","creator_user_login":"sebmarkbage"}
{"number":15726,"comment_id":"496696803","body":"I think the original DevTools behavior that felt particularly broken was that we polled the component once a second. So it felt like there was an infinite loop. Now that we cache the results and only invalidate when the component is updated, it will \"feel\" more inline with React's normal rendering flow.","updated_at":"2019-05-28T21:28:06Z","created_at":"2019-05-28T21:28:06Z","creator_user_login":"bvaughn"}
{"number":15726,"comment_id":"496697183","body":"> React recalls functions multiple times during DEV mode and in concurrent mode can rebase and call the function multiple times for a single render. The contract is that we can call the function as much as we want without side-effects.\r\n\r\nThis is somewhat expected because this is not a part of debugging, it's a part of the program being debugged. Ideally a debugger does not alter the behavior of the program being debugged, and that is what I am concerned about with renders being called more than usual when DevTools is present.","updated_at":"2019-05-28T21:29:19Z","created_at":"2019-05-28T21:29:19Z","creator_user_login":"sompylasar"}
{"number":15726,"comment_id":"496697311","body":"I don't think you should try to conceal that you're calling the function extra times -- this is just going to lead to major confusion when somebody has a side-effect in their function. And debugging is exactly the time that they're going to do that, because they're putting in temporary hacks to figure out what's going on.","updated_at":"2019-05-28T21:29:43Z","created_at":"2019-05-28T21:29:43Z","creator_user_login":"davidmccabe"}
{"number":15726,"comment_id":"496697974","body":"> this is just going to lead to major confusion when somebody has a side-effect in their function.\r\n\r\nShallow rendering a component should _not_ trigger any side effects<sup>1</sup>. Those should be in `useEffect` / `useLayoutEffect` (which DevTools would not execute).\r\n\r\n<sup>1</sup> - Technically calling `console.log` _is a side effect_ but I think it's also a bit of a special case.","updated_at":"2019-05-28T21:31:56Z","created_at":"2019-05-28T21:31:56Z","creator_user_login":"bvaughn"}
{"number":15726,"comment_id":"496698030","body":"I don't think most people on this thread will have context on debugging a Concurrent Mode heavy app. Out-of-order logs can be distracting from the \"true logic\" of the app rather than helping surfacing it. I don't think it works to be principled here.","updated_at":"2019-05-28T21:32:04Z","created_at":"2019-05-28T21:32:04Z","creator_user_login":"sebmarkbage"}
{"number":15726,"comment_id":"496698460","body":"@bvaughn For `React.debug(callback)` and the use case of building up a tree-based, commit-time log, when would we call it?\r\n\r\nIf we call it during the render, we still need to instrument `console.log`.\r\n\r\nIf we call it during the commit phase, after we've built up a set of these, the values that it closes over can have changed/mutated by the time we get there which would be confusing. Also, break points would no longer have the render function in scope so we couldn't inspect anything there.","updated_at":"2019-05-28T21:34:00Z","created_at":"2019-05-28T21:33:32Z","creator_user_login":"sebmarkbage"}
{"number":15726,"comment_id":"496698938","body":"> If we call it during the render, we still need to instrument console.log.\r\n\r\nGood point. I was primarily thinking of being able to disable it during shallow render- but if we wanted to collect logs for commit timing, you're right that we would also need to spy on the native `console` methods.","updated_at":"2019-05-28T21:35:09Z","created_at":"2019-05-28T21:35:09Z","creator_user_login":"bvaughn"}
{"number":15726,"comment_id":"496699692","body":"> > this is just going to lead to major confusion when somebody has a side-effect in their function.\r\n> \r\n> Shallow rendering a component should _not_ trigger any side effects1. Those should be in `useEffect` / `useLayoutEffect` (which DevTools would not execute).\r\n> \r\n> 1 - Technically calling `console.log` _is a side effect_ but I think it's also a bit of a special case.\r\n\r\nYeah, we add side effects like `debugger;` (or, more importantly, browser breakpoint, without changing the code) and `console.log` (or browser logpoint, which should also not be forgotten, there is such in Chrome DevTools) to hook into React workflow. If there was a different way to do that, ideally without changing the source code, and ideally seeing the component stack instead of the React internals fiber work-loop stack, we'd use that I guess.","updated_at":"2019-05-28T21:37:44Z","created_at":"2019-05-28T21:37:44Z","creator_user_login":"sompylasar"}
{"number":15726,"comment_id":"496699973","body":"I like the idea of `React.debug` (maybe combined with spying on console methods if we want the commit time coalescing behavior) the most because it would cover more types of side effects- including breakpoints.","updated_at":"2019-05-28T21:38:42Z","created_at":"2019-05-28T21:38:42Z","creator_user_login":"bvaughn"}
{"number":15726,"comment_id":"496700476","body":"> I like the idea of React.debug (maybe combined with spying on console methods if we want the commit time coalescing behavior) the most because it would cover more types of side effects- including breakpoints.\r\n\r\nCould you please add a code example how would you use it? The part of changing the source code is what would throw me off from using it.","updated_at":"2019-05-28T21:40:20Z","created_at":"2019-05-28T21:40:20Z","creator_user_login":"sompylasar"}
{"number":15726,"comment_id":"496701945","body":"People already change source code to add things like `console.log` or any number of other debugging tools. The only exception is adding a debug breakpoint in the browser (which, anecdotally, I also often do after adding a `console.log` earlier).\r\n\r\n```js\r\nfunction ExampleComponent(props) {\r\n  React.debug(() => {\r\n    // This callback would not be called when DevTools re-renders the component\r\n    // Or when strict mode's debug side effects double render happens\r\n    // Or in production mode\r\n    console.log(\"ExampleComponent called with\", props);\r\n    debugger;\r\n  });\r\n  return <div>...</div>;\r\n}\r\n```","updated_at":"2019-05-28T21:47:01Z","created_at":"2019-05-28T21:45:23Z","creator_user_login":"bvaughn"}
{"number":15726,"comment_id":"496708073","body":"`React.debug` would fit in nicely too if Chrome ever exposed an API for reverting side-effects (similar to what they have in their dev tools console for eager evaluation).","updated_at":"2019-05-28T22:07:21Z","created_at":"2019-05-28T22:07:21Z","creator_user_login":"trueadm"}
{"number":15726,"comment_id":"496713139","body":"> People already change source code to add things like console.log or any number of other debugging tools. The only exception is adding a debug breakpoint in the browser (which, anecdotally, I also often do after adding a console.log earlier).\r\n\r\nWith the addition of logpoints into the browser this may start happening less often. We have too little data about real usage, so we extrapolate debugging patterns of few people to debugging patterns of a larger community. As before, I'd recommend surfacing this problem to more people and gathering insights how they use the browser DevTools and the built-in features versus modifying the code of components while debugging, and what would they prefer to do if React + React DevTools were smarter in surfacing the right data for debugging (like, in my case, dependencies of hooks and their diffs/what exactly changed would be much appreciated).","updated_at":"2019-05-28T22:25:53Z","created_at":"2019-05-28T22:25:53Z","creator_user_login":"sompylasar"}
{"number":15726,"comment_id":"496714060","body":"Surfacing to more people and gathering feedback is the reason I created this GitHub issue rather than just posting in an internal thread 😄 but I think we may still end up making some educated guesses about APIs for this, since we're dealing with a lot of new APIs and tools.","updated_at":"2019-05-28T22:29:52Z","created_at":"2019-05-28T22:29:52Z","creator_user_login":"bvaughn"}
{"number":15726,"comment_id":"496714563","body":"_I wish github had inline replies so this does not derail the thread._\r\n\r\n> ```js\r\n> function ExampleComponent(props) {\r\n>   React.debug(() => {\r\n>     // This callback would not be called when DevTools re-renders the component\r\n>     // Or when strict mode's debug side effects double render happens\r\n>     // Or in production mode\r\n>     console.log(\"ExampleComponent called with\", props);\r\n>     debugger;\r\n>   });\r\n>   return <div>...</div>;\r\n> }\r\n> ```\r\n\r\nThis makes sense, but as the production components are never that simple, there are multiple hooks involved, and the rendering is conditional, and you need more than one of such output during a debugging session, and you need to add more debugpoints as you find out more details in runtime, the look of the code before/after and developer experience adding such debugpoints might be way more hairy than the above simplest case.","updated_at":"2019-05-28T22:31:57Z","created_at":"2019-05-28T22:31:57Z","creator_user_login":"sompylasar"}
{"number":15726,"comment_id":"496715633","body":"I rarely add (or see) more than one debug point or group of `console.log` statements per component. I don't think it would require too much effort to group these within one or few `React.debug` calls. My gut tells me that it's not as complicated as you're  suggesting.","updated_at":"2019-05-28T22:36:48Z","created_at":"2019-05-28T22:36:48Z","creator_user_login":"bvaughn"}
{"number":15726,"comment_id":"496737618","body":"> I rarely add (or see) more than one debug point or group of console.log statements per component.\r\n\r\nThis, again, is highly dependent on specific debugging patterns and the components being debugged. You also may not see them because they do not get committed to source control, they happen while debugging. 🙂 I wonder if anyone does debugging workshops and collects data and insights about web debugging patterns and experiences.","updated_at":"2019-05-29T00:23:06Z","created_at":"2019-05-29T00:23:06Z","creator_user_login":"sompylasar"}
{"number":15726,"comment_id":"584527520","body":"It seems like server-side-rendering is ignored so far in this proposal. While leveraging react-devtools (and browser APIs) is definitely viable for client side rendering, it is simply not available on the server.\r\n\r\nThe component stack should be added to these debug/log/warn/error messages within react not by react-devtools. This guarantees a similar experience for server and client-side debugging.\r\n\r\nI'd like to see option 2 implemented with the re-introduction of React.warn and React.error.","updated_at":"2020-02-11T08:41:15Z","created_at":"2020-02-11T08:41:15Z","creator_user_login":"eps1lon"}
{"number":15176,"comment_id":"490966467","body":"In your example `targetRef` looks more like an effect, I'd expect it to be implemented with `useRef` and `useEffect`, which has cleanup function. As for callback ref that doesn't hold state, `node === null` seems like a legit condition to do a cleanup if necessary.","updated_at":"2019-05-09T16:06:19Z","created_at":"2019-05-09T16:06:19Z","creator_user_login":"bisubus"}
{"number":15176,"comment_id":"491490519","body":"You can't use `useEffect` there as if you want to pass the ref down to a component `useEffect` is not necessarily triggered when the subtree updates.","updated_at":"2019-05-11T08:11:48Z","created_at":"2019-05-11T08:11:48Z","creator_user_login":"k15a"}
{"number":15176,"comment_id":"512185852","body":"I would also like a `useEffect`-style API for interacting with refs. It is particularly useful when you want to attach event listeners to an element and clean them up when it is unmounted.\r\n\r\n### Motivating example\r\n\r\nAs far as I can tell, this is what's required to safely do this with callback refs:\r\n\r\n```jsx\r\nimport React, { useRef, useCallback } from 'react';\r\n\r\nexport default function CallbackRefComponent() {\r\n  const elementRef = useRef();\r\n  // Can't safely use useCallback() to define event handler because the memoized\r\n  // value may be freed, and we must make sure to pass the same value to\r\n  // addEventListener and removeEventListener\r\n  const onClickRef = useRef();\r\n  const callbackRef = useCallback((node) => {\r\n    // Cleanup event listener on old node\r\n    if (elementRef.current && onClickRef.current) {\r\n      elementRef.current.removeEventListener('click', onClickRef.current);\r\n      onClickRef.current = null;\r\n    }\r\n\r\n    elementRef.current = node;\r\n\r\n    if (elementRef.current) {\r\n      onClickRef.current = () => console.log('clicked!');\r\n      elementRef.current.addEventListener('click', onClickRef.current);\r\n    }\r\n  }, []);\r\n\r\n  return <div ref={callbackRef}>test</div>;\r\n}\r\n```\r\n\r\nOn the other hand, with a `useEffect`-style API, we can define the event handler in the effect callback itself, and the code becomes much simpler:\r\n\r\n```jsx\r\nimport { useRefEffect } from '???';\r\nexport default function CallbackRefEffectComponent() {\r\n  const callbackRef = useRefEffect((node) => {\r\n    const onClick = () => console.log('clicked!');\r\n\r\n    elementRef.current.addEventListener('click', onClick);\r\n\r\n    return () => {\r\n      elementRef.current.removeEventListener('click', onClick);\r\n    };\r\n  });\r\n\r\n  return <div ref={callbackRef}>test</div>;\r\n}\r\n```\r\n\r\n### Attempted implementation\r\n\r\nI've attempted implementing `useRefEffect` as follows, but I have doubts about the safety of this implementation:\r\n\r\n```js\r\nimport { useRef, useCallback } from 'react';\r\n\r\nexport default function useRefEffect(callback) {\r\n  const currentCallback = useRef(callback);\r\n  // WARNING: Mutating a ref's value as a side effect of the render function\r\n  // being called is probably a big anti-pattern, and might cause bugs\r\n  //\r\n  // However, useEffect and useLayoutEffect (which we would normally use for\r\n  // updating a ref to the latest value) get triggered before callback refs.\r\n  // Just mutating it in the render function is the only way I could think of to\r\n  // update the value before callback ref is triggered by React.\r\n  currentCallback.current = callback;\r\n\r\n  const cleanupRef = useRef(null);\r\n\r\n  const callbackRef = useCallback(node => {\r\n    if (node) {\r\n      cleanupRef.current = currentCallback.current(node) || null;\r\n    } else if (cleanupRef.current) {\r\n      cleanupRef.current();\r\n      cleanupRef.current = null;\r\n    }\r\n  }, []);\r\n\r\n  return callbackRef;\r\n}\r\n```\r\n\r\nIn particular, I don't know if it's safe to update the value of `currentCallback.current` as a side effect of render in this case. On the one hand, this value is only used in a callback ref, which is triggered by React, so maybe we can assume that the most recent render had the correct value. On the other hand, causing side effects in render is an anti-pattern in general, and it's hard to be confident that this will always do the right thing even if running in concurrent mode and even if the return value of `useRefEffect` gets passed through multiple layers of components with `React.memo`s/`shouldComponentUpdate`s in between.\r\n\r\nI would greatly appreciate it if someone from the React team (or someone who knows more about the internals of React) could judge my implementation of `useRefEffect` and tell me if it is making any unsafe assumptions.","updated_at":"2019-07-17T09:51:47Z","created_at":"2019-07-17T09:51:47Z","creator_user_login":"butchler"}
{"number":15176,"comment_id":"512235824","body":"@butchler I think what you want is exactly what I am proposing just without the need of a new hook.\r\n\r\n```js\r\nexport default function CallbackRefEffectComponent() {\r\n  const callbackRef = useCallback((node) => {\r\n\t// For backwards compatibility you would need to check if the node is null\r\n\r\n    const onClick = () => console.log('clicked!');\r\n\r\n    node.addEventListener('click', onClick);\r\n\r\n    return () => {\r\n      node.removeEventListener('click', onClick);\r\n    };\r\n  }, []);\r\n\r\n  return <div ref={callbackRef}>test</div>;\r\n}\r\n```","updated_at":"2019-07-17T12:38:27Z","created_at":"2019-07-17T12:37:50Z","creator_user_login":"k15a"}
{"number":15176,"comment_id":"512654704","body":"> I think what you want is exactly what I am proposing just without the need of a new hook.\r\n\r\nBasically 🙂\r\n\r\nThere is a small difference in behavior with my attempt at implementing it as a hook and your proposal: because you are using `useCallback`, if you need to use props/state/etc. inside the ref callback, it is necessary to pass them to `useCallback`'s second argument, but this also has the side effect of re-triggering the callback ref, which may not always be desired. However, I realize now that this issue is not directly related to this proposal, but is a more general issue with callback refs and hooks, so I'll open a separate issue for that.\r\n\r\nHere is another attempt at implementing it via a hook, that more closely matches your proposal:\r\n\r\n```js\r\nimport { useRef, useCallback } from 'react';\r\n\r\nexport default function useCallbackRef(rawCallback, deps) {\r\n  const cleanupRef = useRef(null);\r\n  const callback = useCallback((node) => {\r\n    if (cleanupRef.current) {\r\n      cleanupRef.current();\r\n      cleanupRef.current = null;\r\n    }\r\n\r\n    if (node) {\r\n      cleanupRef.current = rawCallback(node);\r\n    }\r\n  }, deps);\r\n\r\n  return callback;\r\n}\r\n```\r\n\r\nThen you could just use `useCallbackRef` in place of `useCallback`.\r\n\r\nUnfortunately, this has a pretty big downside, which is that `useCallbackRef` will probably not be checked by the `exhaustive-deps` linting rule. This isn't an issue with my proposed `useRefEffect` implementation, because it does not require you to pass deps and only triggers the callback when the ref actually changes (but as a result has to use a potentially dirty hack to keep a reference to the latest version of the callback).","updated_at":"2019-07-18T03:54:14Z","created_at":"2019-07-18T03:54:14Z","creator_user_login":"butchler"}
{"number":15176,"comment_id":"512682315","body":"One reason that the original proposal (of adding new behavior to the `ref` prop) might not work is that callback refs get called with `null` when the element is unmounted or changed, but when returning a cleanup function, you probably only want it to to be called with an actual node once, and never get called with `null` (otherwise you'd have to manually check if the argument is null, which somewhat defeats the purpose).\r\n\r\nReact could try to detect if a cleanup function has been returned and change the behavior for that particular callback ref, but that seems quite confusing and would probably make it easy to introduce bugs.\r\n\r\nIt would be nice if it's possible to implement this as a custom hook outside of React itself, but I'm not sure how it can be implemented reliably.","updated_at":"2020-03-02T10:15:03Z","created_at":"2019-07-18T06:25:44Z","creator_user_login":"butchler"}
{"number":15176,"comment_id":"512740882","body":"Yet another attempt at implementing this as a custom hook:\r\n\r\n```js\r\nimport { useRef, useCallback } from 'react';\r\n\r\nexport default function useCallbackRef(rawCallback) {\r\n  const cleanupRef = useRef(null);\r\n  const callback = useCallback((node) => {\r\n    if (cleanupRef.current) {\r\n      cleanupRef.current();\r\n      cleanupRef.current = null;\r\n    }\r\n\r\n    if (node) {\r\n      cleanupRef.current = rawCallback(node);\r\n    }\r\n  }, [rawCallback]);\r\n\r\n  return callback;\r\n}\r\n```\r\n\r\nUsage:\r\n\r\n```js\r\nconst callback = useCallbackRef(useCallback((node) => {\r\n  node.addEventListener(...);\r\n  return () => {\r\n    node.removeEventListener(...);\r\n  };\r\n}, []));\r\n```\r\n\r\nIt's a bit more cumbersome to use, since you have to call both `useCallback` and `useCallbackRef`, but at least it allows the deps to be checked by the `exhaustive-deps` linting rule.\r\n\r\n@k15a What do you think of this approach?","updated_at":"2019-07-18T09:32:00Z","created_at":"2019-07-18T09:32:00Z","creator_user_login":"butchler"}
{"number":15176,"comment_id":"554467292","body":"I'm very new to React hooks and still don't quite get how they work under the hood. That being said, here's something I came up with that seems to work:\r\n\r\n```jsx\r\nexport const useBbox = () => {\r\n  const ref = useRef();\r\n  const [bbox, setBbox] = useState({});\r\n\r\n  const set = () =>\r\n    setBbox(ref && ref.current ? ref.current.getBoundingClientRect() : {});\r\n\r\n  useEffect(() => {\r\n    set();\r\n    window.addEventListener('resize', set);\r\n    return () => window.removeEventListener('resize', set);\r\n  }, []);\r\n\r\n  return [bbox, ref];\r\n};\r\n```\r\n\r\nThen to use it:\r\n\r\n```jsx\r\nconst SignIn = () => {\r\n  const [bbox, ref] = useBbox();\r\n\r\n  return (\r\n    <>\r\n      <Button ref={ref}>open popup</Button>\r\n      <Popup anchorBbox={bbox}>popup content</Popup>\r\n    </>\r\n  );\r\n};\r\n```\r\n\r\nThis is modeled after [this example in the React docs](https://reactjs.org/docs/hooks-faq.html#how-can-i-measure-a-dom-node), but is modified to also update the bbox any time the window is resized (which may or may not be enough for your use case; use this with caution).\r\n\r\nIt seems to unmount the listener properly, but there could definitely be something I missed. Comments are welcome.\r\n\r\n---\r\n\r\nIf anyone reading this is looking for the same functionality, here is another solution I found:\r\nhttps://gist.github.com/morajabi/523d7a642d8c0a2f71fcfa0d8b3d2846\r\n\r\nAlso here's an example of a library using hooks to update positions of a popup, but with added debouncing and other stuff:\r\nhttps://github.com/mui-org/material-ui/blob/master/packages/material-ui/src/Popover/Popover.js","updated_at":"2019-12-10T15:40:43Z","created_at":"2019-11-15T18:06:50Z","creator_user_login":"vincerubinetti"}
{"number":15176,"comment_id":"554803401","body":"@vincerubinetti Indeed, `useRef`+`useEffect` is a perfectly fine alternative to using a callback ref in most cases, and when using that approach you can just do your cleanup using `useEffect`. However, there are still some (rare) cases where it's necessary or useful to use a callback ref instead, in which case doing cleanup is a little more cumbersome compared to using `useEffect`.\r\n\r\nSo I'd say that is slightly out of scope of this issue on the React project itself, although it is still a good alternative to know about when writing code that uses React.","updated_at":"2019-11-18T00:04:05Z","created_at":"2019-11-18T00:04:05Z","creator_user_login":"butchler"}
{"number":15176,"comment_id":"564029580","body":"I wrote simplest solution\r\n\r\n### 👍 Pros\r\n- too simple\r\n- only 5 lines of code\r\n- doesn't violate return statement (doesn't require the returning has to be function always as in solutions above)\r\n- no refs (internally)\r\n- not tied up to DOM-elements, it best fits for you if you:\r\n  - have async recursion in your callbacks\r\n  - subscribe to another module of your app (outside of React, like: Siebel OpenUI, Angular, Vue, Svelte, etc.)\r\n- and yes - it can work with DOM-elements\r\n\r\n### 👎 Cons\r\n- still looking\r\n\r\n### 💭 Thoughts\r\n- It's a new way of thinking about hooks (pass baseCallback that returns array of [callback, cleanup]) - you have to prepare a bit for this\r\n\r\n### ✔ Solution itself\r\n```js\r\nimport React from 'react';\r\n\r\n/**\r\n * memoized callback (a.k.a. useCallback) with cleanup ability/feature\r\n * @param {Function} baseCallback callback that returns array with [callback, cleanup]\r\n *    callback - which will be passed to React.useCallback\r\n *    cleanup - which will be called in React.useEffect's cleanup function\r\n * @param {Array} deps standard hook dependencies\r\n * @return {Function} memoized callback by React.useCallback\r\n *\r\n * @example\r\n *   const callback = useCallbackCleanup(() => {\r\n *     let stop;\r\n *     return [\r\n *       function self(counter) => {\r\n *         // here goes your code\r\n * \r\n *         if (someCondition) {\r\n *           setTimeout(() => !stop && self(counter + 1), 10 * 1000);\r\n *           return 'delayed';\r\n *         }\r\n *\r\n *         // and return whatever you have to (bool, string, array, etc.)\r\n *         return true;\r\n *       },\r\n *       function cleanup() {\r\n *         stop = true;\r\n *       },\r\n *     ]\r\n *   }, [a, b, c])\r\n *\r\n * @example\r\n *   const callbackRef = useCallbackCleanup(() => {\r\n *     let node;\r\n *     const listner = (e) => {};\r\n *\r\n *     return [\r\n *       (theNode) => {\r\n *         node = theNode;\r\n *         node.addEventListener('event', listner);\r\n *       },\r\n *       () => node.removeEventListener('event', listner)\r\n *     ]\r\n *   }, [a, b, c])\r\n *\r\n *   return <div ref={callbackRef}>Some Text</div>\r\n */\r\nexport default function useCallbackCleanup(baseCallback, deps) {\r\n  const [callback, cleanup] = baseCallback();\r\n  React.useEffect(() => () => typeof cleanup === 'function' && cleanup(), deps);\r\n  return React.useCallback(callback, deps);\r\n}\r\n```\r\n\r\nI've posted this solution as a gist too:\r\nhttps://gist.github.com/bekliev/896709f1fffcde65a8dd55845e492ffa","updated_at":"2020-01-10T09:05:35Z","created_at":"2019-12-10T13:22:28Z","creator_user_login":"bekliev"}
{"number":15176,"comment_id":"593102466","body":"I made a `useEffectRef` in [@huse/effect-ref](https://www.npmjs.com/package/@huse/effect-ref) to solve exactly the same problem","updated_at":"2020-03-01T14:19:49Z","created_at":"2020-03-01T14:19:49Z","creator_user_login":"otakustay"}
{"number":15176,"comment_id":"593329170","body":"Given that updating the behavior of the `ref` prop would probably be tricky (see https://github.com/facebook/react/issues/15176#issuecomment-512682315), and that several people have been able to implement some version of this as custom hooks, it seems unlikely that this will be added to React and this issue can probably be closed.\r\n\r\nThat said, for anybody who wants to use the `useCallback`-based approach that people have mentioned in the above comments along with the [this pattern for accessing often-changing values inside `useCallback`](https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback), be warned that you may run into a really weird edge case if you get really unlucky: https://github.com/facebook/react/issues/16154","updated_at":"2020-03-02T10:20:42Z","created_at":"2020-03-02T10:20:42Z","creator_user_login":"butchler"}
{"number":15176,"comment_id":"794914683","body":"@k15a thanks a lot!\r\nIt's works for me. I lost a lot of time to use useEffect, but it's hard to catch unmount event. fer function helps. Thanks!","updated_at":"2021-03-10T05:38:31Z","created_at":"2021-03-10T05:38:31Z","creator_user_login":"Fi1osof"}
{"number":15176,"comment_id":"913247493","body":"I am going to mention one use-case that cannot be solved by any of the workarounds listed here. It happens when you want to use the same ref callback for multiple elements.\r\n\r\nAs a simple example, let's say I want to write a ref that adds all elements to an array, and remove them from the array when they are removed from DOM. I should be able to simply write:\r\n\r\n```jsx\r\nconst list = [];\r\n\r\nfunction Test() {\r\n  const register = useCallback((el) => {\r\n    if (!el) return;\r\n\r\n    list.push(el);\r\n    \r\n    return () => {\r\n      const index = list.indexOf(el);\r\n      if (index >= 0) list.splice(index, 1);\r\n    };\r\n  }, []);\r\n\r\n  return <>\r\n    <span ref={register} />\r\n    <span ref={register} />\r\n    <span ref={register} />\r\n  </>;\r\n}\r\n```\r\n\r\nI don't know if other people would think of this use-case as a valid usage of `ref`, but I think it is a beautiful code pattern that both saves performance and provides an easy API. \r\n\r\nAs far as I know, there is no easy workaround for this. One library I know which uses this kind of pattern is `react-hook-form`. It solves the issue by making `register` a function and calling it with a unique name for each element like `<input ref={register(\"password\")} />`. As for me, I was going to build a reusable tooltip hook but it's not going to be that easy without this functionality.\r\n\r\n","updated_at":"2021-09-08T09:08:41Z","created_at":"2021-09-05T23:37:08Z","creator_user_login":"KurtGokhan"}
{"number":15176,"comment_id":"914748134","body":"Does anyone want to write an RFC for this?\r\n\r\nhttps://github.com/reactjs/rfcs/\r\n\r\n","updated_at":"2021-09-08T01:00:27Z","created_at":"2021-09-08T01:00:27Z","creator_user_login":"gaearon"}
{"number":15176,"comment_id":"915154525","body":"@gaearon I will try writing one.","updated_at":"2021-09-08T11:30:04Z","created_at":"2021-09-08T11:30:04Z","creator_user_login":"KurtGokhan"}
{"number":15176,"comment_id":"915590110","body":"I created the RFC. Let's keep discussing this there.","updated_at":"2021-09-08T21:36:18Z","created_at":"2021-09-08T21:36:18Z","creator_user_login":"KurtGokhan"}
{"number":13954,"comment_id":"432783795","body":"For a concrete use case, I am trying to refactor the following `componentDidCatch` to `getDerivedStateFromError`\r\n\r\n```\r\n  componentDidCatch(error) {\r\n    if (error instanceof RequestError) {\r\n      this.setState(\r\n        state => ({\r\n          errorsBySrc: { ...state.errorsBySrc, [error.url]: error },\r\n        }),\r\n      );\r\n    } else {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const media = this.props.media.filter(\r\n      item => !this.state.errorsBySrc[item.url]\r\n    );\r\n   ...\r\n```\r\n\r\n(media is rendered by a component that throws a `RequestError` if it fails to load)","updated_at":"2018-10-24T18:52:14Z","created_at":"2018-10-24T18:52:14Z","creator_user_login":"jacobrask"}
{"number":13954,"comment_id":"554987118","body":"I hate to be the person that comments \"+1\" on an issue, however this one has been open for a bit over a year now and I wonder if we could get some insight from the React team on if this is feature request is likely to make it into React.","updated_at":"2019-11-18T12:03:41Z","created_at":"2019-11-18T12:03:41Z","creator_user_login":"hamlim"}
{"number":13954,"comment_id":"586699473","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-02-16T12:15:04Z","created_at":"2020-02-16T12:15:04Z","creator_user_login":"stale[bot]"}
{"number":13954,"comment_id":"586707307","body":"Hold your horses, bot, the issue is still relevant and waits for the PR.","updated_at":"2020-02-16T13:39:51Z","created_at":"2020-02-16T13:39:51Z","creator_user_login":"bisubus"}
{"number":13954,"comment_id":"629653220","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-05-16T14:19:29Z","created_at":"2020-05-16T14:19:29Z","creator_user_login":"stale[bot]"}
{"number":13954,"comment_id":"629671932","body":"bump","updated_at":"2020-05-16T16:34:28Z","created_at":"2020-05-16T16:34:28Z","creator_user_login":"ljharb"}
{"number":13954,"comment_id":"674491315","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-08-16T07:23:37Z","created_at":"2020-08-16T07:23:37Z","creator_user_login":"stale[bot]"}
{"number":13954,"comment_id":"674675622","body":"bump, literally forever","updated_at":"2020-08-17T06:02:32Z","created_at":"2020-08-17T06:02:32Z","creator_user_login":"ljharb"}
{"number":13954,"comment_id":"751254255","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T14:06:33Z","created_at":"2020-12-25T14:06:33Z","creator_user_login":"stale[bot]"}
{"number":13954,"comment_id":"751286617","body":"eternabump","updated_at":"2020-12-25T20:06:34Z","created_at":"2020-12-25T20:06:34Z","creator_user_login":"ljharb"}
{"number":13954,"comment_id":"1096402167","body":"+1 on this feature request","updated_at":"2022-04-12T09:01:26Z","created_at":"2022-04-12T09:01:26Z","creator_user_login":"saikota"}
{"number":14357,"comment_id":"443374058","body":"styled-components used findDOMNode as a debug assist to verify if your wrapper component does eventually forward the className to a DOM node.\r\n\r\nHowever, as is the case with all of these uses of findDOMNode, it'll only work correctly if only one DOM Element is eventually rendered, or if the appropriate element is the first one rendered. Any fragment siblings are completely invisible to it. This is why it's deprecated.","updated_at":"2018-11-30T23:47:45Z","created_at":"2018-11-30T23:47:45Z","creator_user_login":"Jessidhia"}
{"number":14357,"comment_id":"444031928","body":"As I commented in https://github.com/styled-components/styled-components/issues/2154#issuecomment-444031377, let's track this issue to enumerate use cases that are addressed by `findDOMNode` but not by refs. Please comment with a small demo and a description of what and why you're trying to do. Note that it takes time and effort to understand your particular problem so please try to explain what kind of API you're trying to implement. Don't assume we're familiar with your library. Thanks!","updated_at":"2018-12-04T09:30:49Z","created_at":"2018-12-04T09:30:49Z","creator_user_login":"gaearon"}
{"number":14357,"comment_id":"444040457","body":"I have a project - visual editor for composing layouts with React components ui library by dragging components with mouse. \r\n\r\nThis React components are developed by different team so we don't have a direct access to modify their codebase and for now passing refs to that components is not supported. And we can use different React UI libraries by different developer because with `findDOMNode` we can work with them universally independent of supporting props with forwarding refs .\r\n\r\nIn our project codebase, we wrap each of that components with several HOCs. Each HOC contains some code with findDOMNode - for adding event listeners like click/mousemove or for using `getBoundingClientRect()` method.\r\n\r\nSo `findDOMNode` is the only option for us.","updated_at":"2018-12-04T09:56:31Z","created_at":"2018-12-04T09:56:31Z","creator_user_login":"Fer0x"}
{"number":14357,"comment_id":"444045535","body":"@gaearon \r\n\r\nAbout `styled-components`:\r\n\r\n`findDOMNode` used only in dev environment for warn users of incorrect using of styled-components. It's very helpful feature, because a lot of beginners stumble over this issue.\r\n\r\nDetails of usage:\r\nThat's issue can be reproduced when custom React component is passed to styled() factory. In this case styled-components create `className` and pass it as prop to that custom React component. If component is not supposed of supporting `className` prop, warn of incorrect usage should be thrown. \r\nSo, in styled-components code, we need to find DOM node with generated className.\r\nIf it exist then everything is OK. But we can't get our users to use ref forwarding on each their component. We need universal approach to finding child DOM node, that's why findDOMNode is used.","updated_at":"2018-12-04T10:11:46Z","created_at":"2018-12-04T10:11:46Z","creator_user_login":"Fer0x"}
{"number":14357,"comment_id":"444101900","body":"A use case that i think of, is when you want to perform some logic on the underline `DOM` element of the child.\r\nFor example, a component that wraps any other component and traps events to check if its \"outside\" of this child. Like `click` or `mouseover` etc.\r\n\r\nThis is the relevant logic that depends on the ref:\r\n\r\n```\r\nhandleEvent = ({ target }) => {\r\n  const trapped = this.ref.contains(target);\r\n  this.setState({ trapped });\r\n};\r\n```\r\n\r\nWith `findDOMNode` its easy and flexible to get a reference to the child no matter what it is. let it be a function, a class or a text. \r\n\r\n```\r\ncomponentDidMount() {\r\n  const { event } = this.props;\r\n  this.ref = ReactDOM.findDOMNode(this);\r\n  document.addEventListener(event, this.handleEvent);\r\n}\r\n```\r\n\r\nThe alternative (hooks aside) is to expose the ref callback to the user (via render prop for example):\r\n```\r\nrender() {\r\n  const { children } = this.props;\r\n  const { trapped } = this.state;\r\n  return children(trapped, ref => (this.ref = ref));\r\n}\r\n```\r\n\r\nAnd the user will attach it to what ever `DOM` element he/she wants\r\n\r\n```\r\n{(trapped, refCallback) => (\r\n  <div ref={refCallback} >\r\n    <div>{trapped ? \"open\" : \"close\"}</div>\r\n  </div>\r\n)}\r\n```\r\n\r\nThis will work but the API is kind of awkward, plus we shift the responsibility for dealing with refs to the end user (sort of implementation details).\r\n\r\nA more critical problem with this API is that it may conflict with other components that are using this approach.\r\n\r\nConsider a second library like `ElementResize` that needs a ref to calculate some resize logic on it, and this library is also exposing a ref callback.\r\n\r\n```\r\n<ElementResize>\r\n  {(rect, refCallback) => (\r\n    <div ref={refCallback}>\r\n      <div>{rect.width}</div>\r\n    </div>\r\n  )}\r\n</ElementResize>\r\n```\r\nIf a user wants to use both libraries, he/she can't use both callbacks on the same element (again, hooks aside):  \r\n\r\n```\r\n<ElementResize>\r\n  {(rect, refCallback1) => (\r\n    <Trap event=\"click\">\r\n      {(trapped, refCallback2) => (\r\n        <div ref={???}> <--- can't use 2 ref callbacks on the same element\r\n          <div> {trapped ? 'focused' : 'blur'}</div>\r\n          <div>{rect.width}</div>\r\n        </div>\r\n      )}\r\n    </Trap>\r\n  )}\r\n</ElementResize>\r\n```\r\nI made a [running example](https://codesandbox.io/embed/30z5p94yqq?codemirror=1) of the 2 approaches\r\n\r\nA ref on a fragment can solve these issues as the library can render a \"transparent\" element yet keep a ref without the end user has to know or worry about it.","updated_at":"2018-12-04T14:00:05Z","created_at":"2018-12-04T13:37:13Z","creator_user_login":"sag1v"}
{"number":14357,"comment_id":"444333634","body":"This use case is similar to the use case of `react-transition-group`. I don't remember the architecture, but either `TransitionGroup` or `CSSTransition` use `findDOMNode` to get a reference to the underlying DOM node, so they can apply CSS classes based on the transition state and even delay the React unmount when the exit state is present.\r\n\r\nThe delaying is done, I believe, with cloneElement; but the `className` manipulation still requires `findDOMNode`.","updated_at":"2018-12-05T02:21:09Z","created_at":"2018-12-05T02:19:02Z","creator_user_login":"Jessidhia"}
{"number":14357,"comment_id":"445049493","body":"@Fer0x Thanks for explaining the `styled-component` use case. I replied with some alternative ideas in https://github.com/styled-components/styled-components/issues/2154#issuecomment-445049337, happy to continue the discussion about that particular use case there.","updated_at":"2018-12-06T22:15:08Z","created_at":"2018-12-06T22:15:08Z","creator_user_login":"gaearon"}
{"number":14357,"comment_id":"445279013","body":"I'd say this api is quite nice. I actually would pass ref to tooltip via props which is the easiest way to reuse this ref in another component or hook.","updated_at":"2018-12-07T16:05:09Z","created_at":"2018-12-07T16:05:09Z","creator_user_login":"TrySound"}
{"number":14357,"comment_id":"447276140","body":"in some case, if needs to get postion of a component which is from a third lib.\r\nfirst I need to use `findDOMNode` to get the DOM element from this component,\r\nso I can call `getBoundingClientRect` method somewhere later.\r\n\r\nI think that `forwardRef` can't doing this.","updated_at":"2018-12-14T10:05:33Z","created_at":"2018-12-14T10:01:38Z","creator_user_login":"liuyangc3"}
{"number":14357,"comment_id":"447277361","body":"@liuyangc3 https://github.com/reactjs/rfcs/pull/97","updated_at":"2018-12-14T10:05:54Z","created_at":"2018-12-14T10:05:54Z","creator_user_login":"TrySound"}
{"number":14357,"comment_id":"447277680","body":"@Kovensky  thanks, I will look into this","updated_at":"2018-12-14T10:07:03Z","created_at":"2018-12-14T10:07:03Z","creator_user_login":"liuyangc3"}
{"number":14357,"comment_id":"560572427","body":"I have a use case where I've wrapped the excellent @bvaughn 's [react-window](https://github.com/bvaughn/react-window) components with my own in order to force repainting on mousewheel scroll.  To do this I do the following:\r\n\r\n```typescript\r\nrender() {\r\n    const {props: {syncScroll, ...props}} = this\r\n    return <FixedSizeList {...props} ref={this.setListRef} />\r\n  }\r\n\r\n  scrollNode: HTMLDivElement\r\n\r\n  unregisterScrollEvent = () => {\r\n    this.scrollNode && this.scrollNode.removeEventListener(\"wheel\", this.onWheel)\r\n    this.scrollNode = null\r\n  }\r\n\r\n  list: FixedSizeList\r\n\r\n  setListRef = (list: FixedSizeList) => {\r\n    this.list = list\r\n    if (this.props.syncScroll) {\r\n      if (!list) {\r\n        this.unregisterScrollEvent()\r\n      }\r\n      else {\r\n        this.scrollNode = ReactDOM.findDOMNode(list) as HTMLDivElement\r\n\r\n        this.scrollNode.addEventListener(\"wheel\", this.onWheel)\r\n      }\r\n    }\r\n  }\r\n```\r\n\r\nHow would you suggest I approach this instead?","updated_at":"2019-12-02T20:43:52Z","created_at":"2019-12-02T20:43:34Z","creator_user_login":"noah79"}
{"number":14357,"comment_id":"586654971","body":"I have a use case that the tooltip didn't properly be tethered to menu item inside dropdown that is tethered to a dropdown button. We used Tether and plan to move to Popper but it is not clear Tether is the cause. We found that we can use MutationObserver DOM API to detect DOM mutation and force Tether's global position handler to run and solve this problem. However, we want the MutationObserver to observe a smaller subtree of DOM below a \"node\", instead of the whole DOM. To do this, we will need to call observe(node) and we need to use findDOMNode to get the node.","updated_at":"2020-02-16T00:25:26Z","created_at":"2020-02-16T00:24:13Z","creator_user_login":"azuruce"}
{"number":14357,"comment_id":"612320561","body":"I have a problem that I have so far not been able to solve using refs, but can solve very nicely with `findDOMNode`.\r\n\r\nI have a fairly complex custom library, but for brevity it can be reduced to the following:\r\n\r\n```jsx\r\nimport React from \"react\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Module styles={{ background: 'lightgrey' }}>\r\n      <Module styles={{ color: 'red' }}>Some div</Module>\r\n      <Module styles={{ color: 'blue' }}>Another div</Module>\r\n    </Module>\r\n  );\r\n}\r\n\r\nclass Module extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.REF = React.createRef();\r\n    this.TAG = props.as || 'div';\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.paint(this.REF.current, this.props.styles);\r\n  }\r\n\r\n  // in reality this.paint() does much more than re-construct the \r\n  // input styles object as shown here\r\n  paint(node, styles = {}) {\r\n    for (const [prop, val] of Object.entries(styles)) {\r\n      node.style[prop] = val;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <this.TAG ref={this.REF}>{this.props.children}</this.TAG>\r\n    );\r\n  }\r\n}\r\n```\r\n[CodeSandbox link](https://codesandbox.io/s/ecstatic-haze-1ukgi?file=/src/1.js)\r\n\r\nEssentially, within `componentDidMount` of my custom `<Module>` Component, I need the underlying DOM node so I can pass it to `this.paint()` (which requires the underlying DOM node).\r\n\r\nSo far, this works fine using refs. The issue occurs when attempting to pass other React Components to the `as` prop, so that `this.TAG` is some other React Component instead of a `div`. \r\n\r\nIn my case, I am trying to pass the Components from [Pure React Carousel](https://www.npmjs.com/package/pure-react-carousel) to my custom `<Module>` Component. The relevant part from the above code would now be:\r\n\r\n```jsx\r\n...\r\nimport { CarouselProvider, Slider, Slide } from 'pure-react-carousel';\r\nimport 'pure-react-carousel/dist/react-carousel.es.css';\r\n\r\nexport default function App() {\r\n  return (\r\n    <CarouselProvider naturalSlideWidth={4} naturalSlideHeight={4} totalSlides={2}>\r\n      <Module as={Slider} styles={{ background: 'lightgrey' }}>\r\n        <Module as={Slide} styles={{ color: 'red' }}>Slide 1</Module>\r\n        <Module as={Slide} styles={{ color: 'blue' }}>Slide 2</Module>\r\n      </Module>\r\n    </CarouselProvider>\r\n  );\r\n}\r\n\r\n...\r\n```\r\n[CodeSandbox link](https://codesandbox.io/s/ecstatic-haze-1ukgi?file=/src/2.js:737-879)\r\n\r\nThe code inside the `componentDidMount()` method of `<Module>` now breaks because `this.REF.current` now points to the host Component instead of the DOM node. This can be fixed by changing the `componentDidMount()` method to:\r\n\r\n```jsx\r\ncomponentDidMount() {\r\n  this.paint(findDOMNode(this.REF.current), this.props.styles);\r\n}\r\n```\r\n\r\n[CodeSandbox link](https://codesandbox.io/s/ecstatic-haze-1ukgi?file=/src/3.js:730-823)\r\n\r\nI would love to know if what I am attempting can be achieved with only refs. Thanks.","updated_at":"2020-04-11T11:30:24Z","created_at":"2020-04-11T04:12:38Z","creator_user_login":"esr360"}
{"number":14357,"comment_id":"612719455","body":"There is an application scenario, there is a component Overlay, which needs to be attached to a third-party component and obtain the position of the DOM element of the third component, such as:\r\nhttps://github.com/react-bootstrap/react-bootstrap/blob/master/src/OverlayTrigger.js#L122","updated_at":"2020-04-13T02:22:53Z","created_at":"2020-04-13T02:22:53Z","creator_user_login":"simonguo"}
{"number":14357,"comment_id":"657172174","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-07-12T04:05:55Z","created_at":"2020-07-12T04:05:55Z","creator_user_login":"stale[bot]"}
{"number":14357,"comment_id":"657427596","body":"Big fat bump, stale bot sucks","updated_at":"2020-07-13T09:07:22Z","created_at":"2020-07-13T09:07:22Z","creator_user_login":"esr360"}
{"number":14357,"comment_id":"706813328","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-10-12T01:56:48Z","created_at":"2020-10-12T01:56:48Z","creator_user_login":"stale[bot]"}
{"number":14357,"comment_id":"782870741","body":"We are using an internal-developed WYSIWYG as a developer framework and cms. It's entire logic is written around findDomNode. Basically all the reusable (random-sourced) components, are wrapped around with an abstract 'wrapper', that attaches all kids of handlers from mouseEnter to drop to the domNode created by that component. As a result, when hovering any component in the tree, you can bubble up to closest library ui-component, then you build a node tree and can modify it separately under any resolution, ab-testing condition or any other context.\r\n\r\nThis case has been stated quite a few times and it's entirely impossible to do via refs. IMO wysiwyg cms as the development tool is actually the next step in applying redux to build web-applications, as the CMS itself may take away all the extra logic, adding editor-layers, such as: Adaptivity, Language, ContentMapping, Extra Styling, AB-Testing, WebAnalytics, WebOptimization etc, and even move e2e testing to a whole new level, by allowing to record testing cases with attachment to concrete nodes.\r\n\r\nSo we're sincerely hoping findDOMNode will always be a viable option. Moving it into a separate package but still supporting in react, just like prop-types seems like the best options here.","updated_at":"2021-02-21T14:56:04Z","created_at":"2021-02-21T14:56:04Z","creator_user_login":"IMalyugin"}
{"number":14357,"comment_id":"822373278","body":"Fragment event handlers (#12051) would be good to have. It would allow replacing `findDOMNode()` usages that are only done to add event listeners without needing to add an extra DOM element.","updated_at":"2021-04-19T10:48:53Z","created_at":"2021-04-19T10:48:53Z","creator_user_login":"robatwilliams"}
{"number":22837,"comment_id":"980506161","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 0cc724c777930438d92727803826a44ec97bcc55...8a562fca017c3544fe27ed7a046ee84dab4d285a\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 130.01 kB | 130.01 kB | = | 41.57 kB | 41.57 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 134.77 kB | 134.77 kB | = | 42.97 kB | 42.97 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 424.63 kB | 424.63 kB | = | 78.24 kB | 78.24 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 413.19 kB | 413.19 kB | = | 76.51 kB | 76.51 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 424.63 kB | 424.63 kB | = | 78.25 kB | 78.25 kB\n| oss-experimental/react-fetch/cjs/react-fetch.node.production.min.js | **+2.04%** | 2.01 kB | 2.05 kB | +1.64% | 0.91 kB | 0.93 kB\n| oss-stable-semver/react-fetch/cjs/react-fetch.node.production.min.js | **+2.04%** | 2.01 kB | 2.05 kB | +1.64% | 0.91 kB | 0.93 kB\n| oss-stable/react-fetch/cjs/react-fetch.node.production.min.js | **+2.04%** | 2.01 kB | 2.05 kB | +1.64% | 0.91 kB | 0.93 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-experimental/react-fetch/cjs/react-fetch.node.production.min.js | **+2.04%** | 2.01 kB | 2.05 kB | +1.64% | 0.91 kB | 0.93 kB\n| oss-stable-semver/react-fetch/cjs/react-fetch.node.production.min.js | **+2.04%** | 2.01 kB | 2.05 kB | +1.64% | 0.91 kB | 0.93 kB\n| oss-stable/react-fetch/cjs/react-fetch.node.production.min.js | **+2.04%** | 2.01 kB | 2.05 kB | +1.64% | 0.91 kB | 0.93 kB\n| oss-experimental/react-fetch/cjs/react-fetch.node.development.js | **+1.05%** | 5.05 kB | 5.10 kB | +1.13% | 1.60 kB | 1.62 kB\n| oss-stable-semver/react-fetch/cjs/react-fetch.node.development.js | **+1.05%** | 5.05 kB | 5.10 kB | +1.13% | 1.60 kB | 1.62 kB\n| oss-stable/react-fetch/cjs/react-fetch.node.development.js | **+1.05%** | 5.05 kB | 5.10 kB | +1.13% | 1.60 kB | 1.62 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 8a562fca017c3544fe27ed7a046ee84dab4d285a\n</p>\n","updated_at":"2021-11-27T05:28:46Z","created_at":"2021-11-27T05:28:46Z","creator_user_login":"sizebot"}
{"number":22776,"comment_id":"973240629","body":"We might start with a simple search (that matches component names only) and expand to a more complicated search that lets you search by event type, suspended resource name, component name, etc.","updated_at":"2021-11-18T20:35:38Z","created_at":"2021-11-18T20:35:38Z","creator_user_login":"bvaughn"}
{"number":22776,"comment_id":"974114829","body":"Unrelated but one thing I really like in the Profiler is having components highlight on flamechart hover. Can Timeline also do this (for markers like state updates / suspending, and for flamechart).","updated_at":"2021-11-19T14:22:54Z","created_at":"2021-11-19T14:22:54Z","creator_user_login":"gaearon"}
{"number":22776,"comment_id":"974116022","body":"Unfortunately, not in its current implementation. (There isn't sufficient data to tie a component to a Fiber.)\r\n\r\nResult of #22529 should enable this possibility though.","updated_at":"2021-11-19T14:24:30Z","created_at":"2021-11-19T14:24:30Z","creator_user_login":"bvaughn"}
{"number":22791,"comment_id":"974294474","body":"Hi) I'll try to help you with your problem.\r\n\r\nFirst of, you have to migrate from `pipeToNodeWritable` to `renderToPipeableStream` according to this [link](https://github.com/reactwg/react-18/discussions/104).\r\n\r\nOk, let's assume, you use `pipeToNodeWritable`. This method returns a `abort` function:\r\n\r\n```jsx\r\nconst SERVER_RENDER_ABORT_TIMEOUT = 10000;\r\n\r\nconst { pipe, abort } = pipeToNodeWritable(\r\n  <App />,\r\n  onCompleteAll: () => {\r\n    // ...\r\n  }\r\n);\r\n\r\n// This is the most important part\r\nsetTimeout(() => {\r\n    abort();\r\n}, SERVER_RENDER_ABORT_TIMEOUT);\r\n```\r\n\r\nIt's taken from  [Dan Abramov's demo](https://codesandbox.io/s/kind-sammet-j56ro?file=/server/render.js).","updated_at":"2021-11-19T18:09:38Z","created_at":"2021-11-19T18:09:38Z","creator_user_login":"artem-malko"}
{"number":22791,"comment_id":"977240211","body":"@artem-malko ahh, the misunderstanding I had was that I didn't realize calling abort would mean `onCompleteAll` would get called. That makes sense though. So in the case that the timeout has occurred, and I'd like to show the user with a meaningful error page, instead of just immediately calling abort, I'd send whatever HTML content I want to the user.","updated_at":"2021-11-23T22:43:02Z","created_at":"2021-11-23T22:43:02Z","creator_user_login":"blittle"}
{"number":22791,"comment_id":"977240651","body":"@artem-malko I don't know if the warning message from react is worth following up on?\r\n\r\n> Warning: There was still abortable task at the root when we closed. This is a bug in React.","updated_at":"2021-11-23T22:43:40Z","created_at":"2021-11-23T22:43:40Z","creator_user_login":"blittle"}
{"number":22791,"comment_id":"977244379","body":"Yeah let's keep it open to figure out what to do with the warning. @sebmarkbage?","updated_at":"2021-11-23T22:48:26Z","created_at":"2021-11-23T22:48:26Z","creator_user_login":"gaearon"}
{"number":22791,"comment_id":"977272117","body":"That seems like a bug. The reentrancy makes it tricky to get right in the code so it's not too surprising.\r\n\r\nA reduced test case would be helpful.\r\n\r\nThe bigger picture issue here is that if something errors (or gets aborted) before the root is flushed, we don't have a way to recover within pure React right now. It should instead trigger an error boundary and only if the error boundary suspends/fails should it close the whole stream.","updated_at":"2021-11-23T23:19:52Z","created_at":"2021-11-23T23:19:52Z","creator_user_login":"sebmarkbage"}
{"number":22791,"comment_id":"977359916","body":"@blittle You're in good hands right now) ","updated_at":"2021-11-24T01:21:46Z","created_at":"2021-11-24T01:21:46Z","creator_user_login":"artem-malko"}
{"number":22791,"comment_id":"978047369","body":"@sebmarkbage I'll try and put together a simplified test case","updated_at":"2021-11-24T16:42:54Z","created_at":"2021-11-24T16:42:54Z","creator_user_login":"blittle"}
{"number":22791,"comment_id":"978159110","body":"My initial plan for \"recovery\" or at least showing an error page was to do it entirely outside react on \"abort\". But if we could remain within react world and fail at an error boundary, that would be ideal.","updated_at":"2021-11-24T19:23:25Z","created_at":"2021-11-24T19:23:25Z","creator_user_login":"blittle"}
{"number":22791,"comment_id":"983043250","body":"I have not been able to recreate the issue with the example [codesandbox that you all published](https://codesandbox.io/s/kind-sammet-j56ro?file=/server/delays.js). There must be something more specific to hydrogen where we are seeing the error. It is reproducible on [stackblitz with hydrogen](https://stackblitz.com/edit/hydrogen-v3w1xm?file=src%2Fpages%2FIndex.server.jsx). I'll keep seeing if I can narrow down what specifically is different on our end.","updated_at":"2021-11-30T21:37:45Z","created_at":"2021-11-30T21:37:45Z","creator_user_login":"blittle"}
{"number":22791,"comment_id":"1031046592","body":"Hi @blittle, first off all, thanks a lot for the amazing work that you guys are doing on Hydrogen, really appreciate and curious about what is coming next! Big thumbs up from a react developer who would love to see the framework used so extensively for Shopify!\r\n\r\nOur development team has started working on Hydrogen for one of our Shopify Storefront. So far we were able to develop almost all pages without any issues except this one warning that we also got while we were trying to open Product Detail page. Can you help me know status of your issue as well and whether we will be able to use any workarounds in this case? \r\n\r\nOur server shows this particular warning: \"Warning: There was still abortable task at the root when we closed. This is a bug in React.\" and our app freezes(starts showing suspense).","updated_at":"2022-02-07T03:57:45Z","created_at":"2022-02-07T03:57:45Z","creator_user_login":"yasheshcygbit"}
{"number":22791,"comment_id":"1033898985","body":"Hi @yasheshcygbit, could you open an issue on https://github.com/Shopify/hydrogen or message me on https://discord.com/invite/shopifydevs","updated_at":"2022-02-09T15:42:42Z","created_at":"2022-02-09T15:42:42Z","creator_user_login":"blittle"}
{"number":14962,"comment_id":"467828857","body":"Correct me if I am misunderstanding this, however this issue looks to be the same as the one reported here: https://github.com/facebook/react/issues/12420.\r\n\r\nFrom that issue, it looks like this is to be expected since React retains the input in memory until after the following update.\r\n","updated_at":"2019-02-27T11:35:03Z","created_at":"2019-02-27T11:35:03Z","creator_user_login":"hamlim"}
{"number":14962,"comment_id":"467876768","body":"React always retains the child from the *previous* render. So if you keep switching between two inputs without ever rendering something else, both stay retained. Is this a problem? Or are you seeing something different?","updated_at":"2019-02-27T14:14:18Z","created_at":"2019-02-27T14:14:18Z","creator_user_login":"gaearon"}
{"number":14962,"comment_id":"467978378","body":"@hamlim @gaearon Thank you for taking the time to look at this, we really appreciate it.\r\n\r\nWhat we are seeing is the constant build up of Detached HTMLInputElement's over time that never get garbage collected. In the sample application provided, switching between the two inputs N times, taking a heap snapshot and repeating, shows that the number of Detached HTMLInputElements grows consistently and never GC's. If the child from the previous render is being retained, why do the Detached elements continue to grow over time without GC'ing? \r\n\r\nAdditionally, if we change the input type to `text` and repeat the test from above, the Detached HTMLInputElements get GC'd as expected. Our expectation was that whether we use a `text` type or a `password` type we should see the same behavior. Is this an incorrect expectation?","updated_at":"2019-02-27T18:34:43Z","created_at":"2019-02-27T18:34:43Z","creator_user_login":"ejallday"}
{"number":14962,"comment_id":"467979805","body":"That sounds weird. Can you check what's retaining them?","updated_at":"2019-02-27T18:38:54Z","created_at":"2019-02-27T18:38:54Z","creator_user_login":"gaearon"}
{"number":14962,"comment_id":"467985871","body":"Please see the attached screenshot. I'm not 100% sure what you mean by \"what's retaining them\" but my assumption is that its an event listener that never gets cleaned up somewhere in the bowels of React-Dom.\r\n\r\n![image](https://user-images.githubusercontent.com/3165745/53515223-19da9300-3a8f-11e9-86e8-853a35dc2e33.png)\r\n\r\n","updated_at":"2019-02-27T18:56:35Z","created_at":"2019-02-27T18:55:44Z","creator_user_login":"ejallday"}
{"number":14962,"comment_id":"470991026","body":"@gaearon any update on this?","updated_at":"2019-03-08T16:33:27Z","created_at":"2019-03-08T16:33:27Z","creator_user_login":"ejallday"}
{"number":14962,"comment_id":"479660900","body":"I have been following updates on this issue and would like to see it get resolved as well. Something I noticed is that chrome was auto-filling the password field on my site even thou it was hidden at the time, which I thought was odd behavior. That got me thinking...\r\n\r\n@gaearon @iericallen \r\n**If you turn off Auto Sign-in under chrome://settings/passwords?search=auto the leak appears to go away**.  Make sure you open a new tab / window after changing the setting.\r\n\r\nMy guess is that chrome is adding an event listener onto the input to handle auto sign-in logic and for some reason this is causing our nightmare. (I had thousands of detached elements as this does not just prevent input from being release, it prevents every node in every child component.)\r\n\r\n","updated_at":"2019-04-03T21:12:50Z","created_at":"2019-04-03T21:12:50Z","creator_user_login":"cs-NET"}
{"number":14962,"comment_id":"572936048","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-10T08:53:56Z","created_at":"2020-01-10T08:53:56Z","creator_user_login":"stale[bot]"}
{"number":14962,"comment_id":"573860562","body":"Here is a bug report on the Chromium Issue tracker related to this problem:\r\nhttps://bugs.chromium.org/p/chromium/issues/detail?id=967438\r\nQuite clearly this is a bug in Chrome/Blink/WebKit.\r\nIt can easily be reproduced with vanilly JavaScript - e.g. using https://jsfiddle.net/vkqfmr4b/\r\nSteps to test:\r\n1) Click Add Input and enter **text** when prompted\r\n2) Click Remove All Inputs.\r\n3) Now create a snapshot of the heap using Dev Tools - no detached elements.\r\nNow repeat the steps, but enter **password** when prompted instead.\r\nThe heap snapshot will now reveal detached elements.","updated_at":"2020-01-13T20:42:29Z","created_at":"2020-01-13T20:41:47Z","creator_user_login":"Jemt"}
{"number":14962,"comment_id":"627283413","body":"Is this still a problem on Chromiums end of things? Since I am still reacieving that warning popup...","updated_at":"2020-05-12T11:29:24Z","created_at":"2020-05-12T11:28:53Z","creator_user_login":"flo-wolf"}
{"number":14962,"comment_id":"627315245","body":"> Is this still a problem on Chromiums end of things? Since I am still reacieving that warning popup...\r\n\r\n@flo-wolf Most likely. Use my JSFiddle above and give it a try in your browser, and you will see :-)","updated_at":"2020-05-12T12:36:26Z","created_at":"2020-05-12T12:36:07Z","creator_user_login":"Jemt"}
{"number":14962,"comment_id":"627467424","body":"\r\n\r\n\r\n\r\n> > Is this still a problem on Chromiums end of things? Since I am still reacieving that warning popup...\r\n> \r\n> @flo-wolf Most likely. Use my JSFiddle above and give it a try in your browser, and you will see :-)\r\n\r\nActually this was a problem on my end. I console.logged the response, which caused Chrome to fire the warning.","updated_at":"2020-05-12T16:56:22Z","created_at":"2020-05-12T16:56:22Z","creator_user_login":"flo-wolf"}
{"number":14962,"comment_id":"818777844","body":"This is also likely related to https://bugs.chromium.org/p/chromium/issues/detail?id=961494. The undo stack of Chromium keeps the detached password input node in memory.\r\n\r\nThis workaround, credit to @zone117x, works in our Electron v12 app,  Chromium 89.\r\n\r\nOnce the password form has been submitted:\r\n- Focus the password input\r\n- Call `document.execCommand('undo');` in a loop\r\n- Set the input's `.value` to something else wipe the undo stack\r\n\r\n","updated_at":"2021-04-13T14:24:02Z","created_at":"2021-04-13T14:24:02Z","creator_user_login":"kyranjamie"}
{"number":15488,"comment_id":"486454847","body":"Currently working on this enhancement 🏗️","updated_at":"2019-04-24T22:42:43Z","created_at":"2019-04-24T22:42:43Z","creator_user_login":"kik-o"}
{"number":15488,"comment_id":"487442132","body":"can I add request? I want eslint to warn about possible dependencies error but not fix with --fix. Right now it is always fix my code regardless.","updated_at":"2019-04-29T03:17:55Z","created_at":"2019-04-29T03:17:55Z","creator_user_login":"ipoppo"}
{"number":15488,"comment_id":"487837768","body":"I think it's useful in most cases to keep `exhaustive-deps` auto fixable, but you can use `eslint --quiet` to only report errors and not warnings, so `eslint --quiet --fix` will not fix issues reported by ` \"react-hooks/exhaustive-deps\": \"warn\"`. Eslint also has a `--fix-type` flag you might play around with.","updated_at":"2019-04-30T06:49:43Z","created_at":"2019-04-30T06:49:43Z","creator_user_login":"jacobrask"}
{"number":15488,"comment_id":"487873218","body":">can I add request? I want eslint to warn about possible dependencies error but not fix with --fix. Right now it is always fix my code regardless.\r\n\r\nIt would be great if you could request this *in ESLint itself*. We could add something like this but it seems like a more generic issue that would be better addressed in the tool. Even better — it would be nice to signal ESLint that the fix is a *suggestion* but should not be applied automatically. Then IDEs could offer it behind a click, but it would still require manual inspection.","updated_at":"2019-04-30T09:07:56Z","created_at":"2019-04-30T09:07:34Z","creator_user_login":"gaearon"}
{"number":15488,"comment_id":"490974712","body":"The second one is also not hepfull, if you move it into `useCallback` it will ask you to provide dependencies for it anyways, and some funcitions (like fetching a list of objects) don't take any parameters, an empty array fails, i'm not sure what the idiomatic solution is here? ","updated_at":"2019-05-09T16:29:26Z","created_at":"2019-05-09T16:29:26Z","creator_user_login":"justDanielMata"}
{"number":15488,"comment_id":"523686693","body":"I'm also in need of this fix.  This breaks code and should be turned off until it's 'fixed'\r\n","updated_at":"2019-08-21T23:25:19Z","created_at":"2019-08-21T23:25:19Z","creator_user_login":"sgehrman"}
{"number":18841,"comment_id":"637802870","body":"Is there some way to get some eyes on this? I don't want to be that Dev that tags a bunch of people, but this is the second issue I've raised here that has gone unnoticed (or at least unacknowledged) which is frustrating because I've tried my best to give a detailed and thorough report when raising it.","updated_at":"2020-06-02T20:58:46Z","created_at":"2020-06-02T20:58:46Z","creator_user_login":"mpeyper"}
{"number":18841,"comment_id":"639263582","body":"Not sure if this is the same issue, but using useEffect in a function with try/catch will also produce this. The catch will record the error, then throw an Uncaught Error: anyway.\r\n\r\nHere is an example\r\n```\r\nconst View = (props) => {\r\n  try {\r\n    const { msSagaState, msSettings, msUsers } = props\r\n    useEffect(() => {\r\n      try{\r\n        console.log(ImNotDefined)\r\n      }catch(error){\r\n        throw errcode(new Error('useEffect failed'), 503, {detail: error.message})\r\n      }\r\n    }, [])\r\n    return (\r\n      <div className=\"users-view users-detail\">\r\n      </div>\r\n    )\r\n  } catch (error) {\r\n    return <CompErrorCatch error={error} source=\"UserDetail\" />\r\n  }\r\n}\r\n```\r\nresults in;\r\n```\r\nUncaught Error: useEffect failed\r\n    at eval (view.js?10c1:24)\r\n    at commitHookEffectList (react-dom.development.js?61bb:22030)\r\n    at commitPassiveHookEffects (react-dom.development.js?61bb:22064)\r\n    at HTMLUnknownElement.callCallback (react-dom.development.js?61bb:336)\r\n```\r\nit prevents the `<CompErrorCatch />` from returning.\r\n\r\ntake out the useEffect and the catch returns <CompErrorCatch /> as expected\r\n","updated_at":"2020-06-05T05:15:44Z","created_at":"2020-06-05T05:15:44Z","creator_user_login":"davidcheal"}
{"number":18841,"comment_id":"639299787","body":"@davidcheal ~yep, same issue~\r\n\r\nEdit: sorry, I got confused about which repo/issue I was looking at. It might be the same issue, but I'm not any kind of authority to say that.","updated_at":"2020-06-05T09:11:06Z","created_at":"2020-06-05T07:06:54Z","creator_user_login":"mpeyper"}
{"number":18841,"comment_id":"687657253","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-09-05T20:10:03Z","created_at":"2020-09-05T20:10:03Z","creator_user_login":"stale[bot]"}
{"number":18841,"comment_id":"687767991","body":"Bump","updated_at":"2020-09-06T11:50:40Z","created_at":"2020-09-06T11:50:40Z","creator_user_login":"mpeyper"}
{"number":18841,"comment_id":"751246975","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:48Z","created_at":"2020-12-25T13:07:48Z","creator_user_login":"stale[bot]"}
{"number":18841,"comment_id":"753407676","body":"Bump 😞 ","updated_at":"2021-01-02T00:13:01Z","created_at":"2021-01-02T00:13:01Z","creator_user_login":"mpeyper"}
{"number":18841,"comment_id":"903872968","body":"Bump, please.","updated_at":"2021-08-23T15:24:29Z","created_at":"2021-08-23T15:24:29Z","creator_user_login":"prometheas"}
{"number":18841,"comment_id":"1008199574","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2022-01-09T00:42:40Z","created_at":"2022-01-09T00:42:40Z","creator_user_login":"stale[bot]"}
{"number":18841,"comment_id":"1054924979","body":"Bump","updated_at":"2022-03-01T02:35:04Z","created_at":"2022-03-01T02:35:04Z","creator_user_login":"okapies"}
{"number":18841,"comment_id":"1148979274","body":"I'm having the same issue. I implemented a top-level ErrorBoundary component just as [described](https://reactjs.org/docs/error-boundaries.html) in the docs, and when I throw an error during rendering, the component that the ErrorBoundary should render is actually rendered, but for some reason the error is still logged as an `Uncaught Error`. Not sure if this is the desired behavior.\r\n\r\n<img width=\"724\" alt=\"Screen Shot 2022-06-07 at 12 37 55 PM\" src=\"https://user-images.githubusercontent.com/88405338/172447287-23dd7b0e-d6d0-4995-bc08-cf11ea03f9b6.png\">","updated_at":"2022-06-07T17:41:15Z","created_at":"2022-06-07T17:41:15Z","creator_user_login":"arodriguezcortes"}
{"number":18841,"comment_id":"1188068761","body":"Bump","updated_at":"2022-07-18T18:28:39Z","created_at":"2022-07-18T18:28:39Z","creator_user_login":"colinmegill"}
{"number":18841,"comment_id":"1200810015","body":"<details>\r\n<summary>In case it is helpful, more error stack traces and code</summary>\r\n\r\n```ts\r\n  it(\"Should throw and catch error\", async () => {\r\n    render(\r\n      <ReallyAnErrorBoundary fallback={({ error }) => <h1>{error.message}</h1>}>\r\n        <Component error=\"Hello, I want to error\" />\r\n      </ReallyAnErrorBoundary>\r\n    );\r\n\r\n    await screen.findByText(\"Loading\");\r\n    await screen.findByText(\"Hello, I want to error\");\r\n  });\r\n ```\r\n```ts\r\nexport interface ReallyAnErrorBoundaryProps {\r\n  fallback: (options: { error: Error }) => ReactElement;\r\n  children: ReactNode;\r\n}\r\n\r\ninterface ReallyAnErrorBoundaryState {\r\n  error: Error | null;\r\n}\r\n\r\nexport class ReallyAnErrorBoundary extends Component<\r\n  ReallyAnErrorBoundaryProps,\r\n  ReallyAnErrorBoundaryState\r\n> {\r\n  constructor(props: ReallyAnErrorBoundaryProps) {\r\n    super(props);\r\n    this.state = { error: null };\r\n  }\r\n\r\n  static getDerivedStateFromError(error: Error) {\r\n    return { error };\r\n  }\r\n\r\n  render() {\r\n    const E = this.props.fallback;\r\n    if (this.state.error) return <E error={this.state.error} />;\r\n    else return this.props.children;\r\n  }\r\n}\r\n```\r\n```\r\n  console.error\r\n    Error: Uncaught [Error: Hello, I want to error]\r\n        at reportException (D:\\Projects\\really-async\\node_modules\\.pnpm\\jsdom@19.0.0\\node_modules\\jsdom\\lib\\jsdom\\living\\helpers\\runtime-script-errors.js:66:24)\r\n        at innerInvokeEventListeners (D:\\Projects\\really-async\\node_modules\\.pnpm\\jsdom@19.0.0\\node_modules\\jsdom\\lib\\jsdom\\living\\events\\EventTarget-impl.js:343:9)\r\n        at invokeEventListeners (D:\\Projects\\really-async\\node_modules\\.pnpm\\jsdom@19.0.0\\node_modules\\jsdom\\lib\\jsdom\\living\\events\\EventTarget-impl.js:276:3)\r\n        at HTMLUnknownElementImpl._dispatch (D:\\Projects\\really-async\\node_modules\\.pnpm\\jsdom@19.0.0\\node_modules\\jsdom\\lib\\jsdom\\living\\events\\EventTarget-impl.js:223:9)\r\n        at HTMLUnknownElementImpl.dispatchEvent (D:\\Projects\\really-async\\node_modules\\.pnpm\\jsdom@19.0.0\\node_modules\\jsdom\\lib\\jsdom\\living\\events\\EventTarget-impl.js:94:17)\r\n        at HTMLUnknownElement.dispatchEvent (D:\\Projects\\really-async\\node_modules\\.pnpm\\jsdom@19.0.0\\node_modules\\jsdom\\lib\\jsdom\\living\\generated\\EventTarget.js:241:34)\r\n        at Object.invokeGuardedCallbackDev (D:\\Projects\\really-async\\node_modules\\.pnpm\\react-dom@18.2.0_react@18.2.0\\node_modules\\react-dom\\cjs\\react-dom.development.js:4213:16)\r\n        at invokeGuardedCallback (D:\\Projects\\really-async\\node_modules\\.pnpm\\react-dom@18.2.0_react@18.2.0\\node_modules\\react-dom\\cjs\\react-dom.development.js:4277:31)\r\n        at reportUncaughtErrorInDEV (D:\\Projects\\really-async\\node_modules\\.pnpm\\react-dom@18.2.0_react@18.2.0\\node_modules\\react-dom\\cjs\\react-dom.development.js:22838:5)\r\n        at captureCommitPhaseError (D:\\Projects\\really-async\\node_modules\\.pnpm\\react-dom@18.2.0_react@18.2.0\\node_modules\\react-dom\\cjs\\react-dom.development.js:27126:5) {\r\n      detail: Error: Hello, I want to error\r\n          at GeneratorComponent (D:\\Projects\\really-async\\source\\index.test.tsx:18:22),\r\n      type: 'unhandled exception'\r\n    }\r\n\r\n      at VirtualConsole.<anonymous> (node_modules/.pnpm/jest-environment-jsdom@28.1.3/node_modules/jest-environment-jsdom/build/index.js:70:23)\r\n      at reportException (node_modules/.pnpm/jsdom@19.0.0/node_modules/jsdom/lib/jsdom/living/helpers/runtime-script-errors.js:70:28)\r\n      at innerInvokeEventListeners (node_modules/.pnpm/jsdom@19.0.0/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:343:9)\r\n      at invokeEventListeners (node_modules/.pnpm/jsdom@19.0.0/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:276:3)\r\n      at HTMLUnknownElementImpl._dispatch (node_modules/.pnpm/jsdom@19.0.0/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:223:9)\r\n      at HTMLUnknownElementImpl.dispatchEvent (node_modules/.pnpm/jsdom@19.0.0/node_modules/jsdom/lib/jsdom/living/events/EventTarget-impl.js:94:17)\r\n\r\n  console.error\r\n    The above error occurred in one of your React components:\r\n\r\n        at useAsyncGenerator (D:\\Projects\\really-async\\source\\index.tsx:47:31)\r\n        at div\r\n        at ReallyAnErrorBoundary (D:\\Projects\\really-async\\source\\index.tsx:71:5)\r\n\r\n    React will try to recreate this component tree from scratch using the error boundary you provided, ReallyAnErrorBoundary.\r\n\r\n      at logCapturedError (node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js:18687:23)\r\n      at ReallyAnErrorBoundary.update.callback (node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js:18743:7)\r\n      at callCallback (node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js:13923:12)\r\n      at commitUpdateQueue (node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js:13944:9)\r\n      at commitLayoutEffectOnFiber (node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js:23364:13)\r\n      at commitLayoutMountEffects_complete (node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js:24688:9)\r\n      at commitLayoutEffects_begin (node_modules/.pnpm/react-dom@18.2.0_react@18.2.0/node_modules/react-dom/cjs/react-dom.development.js:24674:7)\r\n```\r\n\r\n</details>\r\n","updated_at":"2022-08-01T07:18:19Z","created_at":"2022-08-01T07:17:26Z","creator_user_login":"SagnikPradhan"}
{"number":15187,"comment_id":"475624633","body":"Wanna send a fix?","updated_at":"2019-03-22T13:40:42Z","created_at":"2019-03-22T13:40:42Z","creator_user_login":"gaearon"}
{"number":15187,"comment_id":"475629430","body":"@gaearon It's a shame I have only been contributing issues to the React project, in all these years. This issue is not very important. I doesn't break the UI. It was more about moving an issue reported on Material-UI closer to its origin than anything else. Me working on #13838 could be more valuable for the community.","updated_at":"2019-03-22T13:55:36Z","created_at":"2019-03-22T13:54:20Z","creator_user_login":"oliviertassinari"}
{"number":15187,"comment_id":"529636194","body":"@gaearon IE, Edge do svg paths normalization. It's similiar to \r\n\r\nhttps://github.com/facebook/react/blob/b1a03dfdc8e42d075422556553ffe59868150e95/packages/react-dom/src/client/ReactDOMComponent.js#L141-L149\r\n\r\nand can be archived in the same way. Any objections?","updated_at":"2019-09-09T19:57:22Z","created_at":"2019-09-09T19:45:29Z","creator_user_login":"StarpTech"}
{"number":15187,"comment_id":"572885426","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-10T05:53:36Z","created_at":"2020-01-10T05:53:36Z","creator_user_login":"stale[bot]"}
{"number":15187,"comment_id":"575477509","body":"Closing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please create a new issue with up-to-date information. Thank you!\n","updated_at":"2020-01-17T05:59:42Z","created_at":"2020-01-17T05:59:42Z","creator_user_login":"stale[bot]"}
{"number":15187,"comment_id":"629213112","body":"![image](https://user-images.githubusercontent.com/8203034/82051228-119a6200-96ec-11ea-830d-73e93e77a014.png)\r\nHi? Is this issue resolved? I can still replay this problem on react 16.12.0 😳\r\n","updated_at":"2020-05-15T12:40:25Z","created_at":"2020-05-15T12:40:25Z","creator_user_login":"licg9999"}
{"number":15187,"comment_id":"647460703","body":"I am on react@16.13.1 and it's still a problem.","updated_at":"2020-06-22T11:35:01Z","created_at":"2020-06-22T11:35:01Z","creator_user_login":"CrossTheDev"}
{"number":15187,"comment_id":"657948020","body":"Still a problem.\r\nWindows 10\r\nIE 11\r\n\"react\": \"^16.11.0\"","updated_at":"2020-07-14T03:40:15Z","created_at":"2020-07-14T03:40:15Z","creator_user_login":"joshuambg"}
{"number":15187,"comment_id":"861265496","body":"I am trying to use it in my `DarkMode.tsx` with Next.js & I face the same error:\r\n\r\n> react_devtools_backend.js:2560 Warning: Prop `d` did not match. Server: \"M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z\" Client: \"M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z\"\r\n    at path\r\n    at svg\r\n    at MoonIcon\r\n    at button\r\n    at div\r\n    at DarkMode\r\n\r\n# DarkMode.tsx\r\n\r\n```tsx\r\nimport { MoonIcon, SunIcon } from '@heroicons/react/solid'\r\n\r\nimport { useStore } from '@/store/index'\r\n\r\nexport const DarkMode = () => {\r\n\tconst { theme, setTheme } = useStore()\r\n\r\n\treturn (\r\n\t\t<div className=\"cursor-pointer\">\r\n\t\t\t{theme === 'dark' && (\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"focus:outline-none\"\r\n\t\t\t\t\ttitle=\"Activate light mode\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tconsole.log(theme)\r\n\t\t\t\t\t\tsetTheme('light')\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<MoonIcon className=\"w-8 h-8\" />\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t\t{theme === 'light' && (\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"focus:outline-none\"\r\n\t\t\t\t\ttitle=\"Activate dark mode\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetTheme('dark')\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<SunIcon className=\"w-8 h-8\" />\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n```\r\n\r\n**Edit: No worries. I wasn't using `observer` so that solved it :)**","updated_at":"2021-06-15T07:53:33Z","created_at":"2021-06-15T07:43:12Z","creator_user_login":"deadcoder0904"}
{"number":15187,"comment_id":"905403524","body":"\r\n![image](https://user-images.githubusercontent.com/26079832/130780164-e553663f-3333-4364-b90c-02f45d018dca.png)\r\n\r\nStill getting this error on Next.js + Tailwind dark mode 😟","updated_at":"2021-08-25T11:09:12Z","created_at":"2021-08-25T11:09:12Z","creator_user_login":"Nzent"}
{"number":15187,"comment_id":"919589693","body":"me too :/\r\n\r\n![Screenshot from 2021-09-15 03-48-59](https://user-images.githubusercontent.com/72463475/133348553-88b5f74f-25e5-4ba4-8f2d-776252b123c7.png)\r\n","updated_at":"2021-09-14T23:51:12Z","created_at":"2021-09-14T23:51:12Z","creator_user_login":"mustafamoe"}
{"number":15187,"comment_id":"931293917","body":"+1 with SVG icon exported from React component and rendered in NextJS","updated_at":"2021-09-30T12:53:31Z","created_at":"2021-09-30T12:53:31Z","creator_user_login":"ivosabev"}
{"number":15187,"comment_id":"974334607","body":"For anyone looking for a workaround for the time being, disabling hydration on inline SVG elements seems to do the trick. This obviously comes with downsides of its own, namely in that it's only really applicable to static SVGs, but here's the relevant TypeScript code for a component that disables hydration:\r\n\r\n```ts\r\nimport {\r\n\tFC,\r\n\tHTMLProps,\r\n\tReactNode,\r\n\tuseEffect,\r\n\tuseLayoutEffect,\r\n\tuseReducer,\r\n\tuseRef\r\n} from \"react\";\r\n\r\ntype NoHydrationProps = {\r\n\treadonly children: ReactNode;\r\n\treadonly parent?: keyof JSX.IntrinsicElements;\r\n} & Omit<HTMLProps<HTMLElement>, \"dangerouslySetInnerHTML\">;\r\n\r\nconst reducer = () => true;\r\n\r\nconst isBrowser = typeof window !== \"undefined\";\r\n\r\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\r\n\r\nexport const NoHydration = ({\r\n\tchildren,\r\n\tparent = \"div\",\r\n\t...props\r\n}: NoHydrationProps) => {\r\n\tconst ref = useRef<HTMLElement>(null);\r\n\r\n\tconst [isHydrated, hydrate] = useReducer(reducer, !isBrowser);\r\n\r\n\tuseIsomorphicLayoutEffect(() => {\r\n\t\tif (ref.current?.hasChildNodes()) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\thydrate();\r\n\t}, []);\r\n\r\n\tconst ParentElement = parent as unknown as FC<HTMLProps<HTMLElement>>;\r\n\r\n\tif (!isHydrated) {\r\n\t\treturn (\r\n\t\t\t<ParentElement\r\n\t\t\t\tref={ref}\r\n\t\t\t\tsuppressHydrationWarning\r\n\t\t\t\tdangerouslySetInnerHTML={{ __html: \"\" }}\r\n\t\t\t\t{...props}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ParentElement\r\n\t\t\tref={ref}\r\n\t\t\t// `display: contents` ensures the parent element does not produce\r\n\t\t\t// a CSS box for itself, seeing as the parent is only needed for the\r\n\t\t\t// purpose of preventing client-side hydration of the children.\r\n\t\t\tstyle={{ display: \"contents\" }}\r\n\t\t\t{...props}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</ParentElement>\r\n\t);\r\n};\r\n```","updated_at":"2021-11-19T19:47:39Z","created_at":"2021-11-19T19:08:40Z","creator_user_login":"slbls"}
{"number":15187,"comment_id":"1333374594","body":"In react  v18.2.0, This problem still exists 😕","updated_at":"2022-12-01T08:11:15Z","created_at":"2022-12-01T08:11:15Z","creator_user_login":"EbrahimHeydari"}
{"number":15187,"comment_id":"1424883030","body":"same issue with nextjs 13 and lastest version of reactjs","updated_at":"2023-02-09T21:49:41Z","created_at":"2023-02-09T21:49:41Z","creator_user_login":"omer-os"}
{"number":15187,"comment_id":"1444590125","body":"Same experience: react-icons, MUI, SSR in pages/ dir with NextJS 13.2.1 & React 18.2.0","updated_at":"2023-02-24T22:15:46Z","created_at":"2023-02-24T22:15:46Z","creator_user_login":"faeb187"}
{"number":15187,"comment_id":"1465148415","body":"I had this problem and upgrading mui to [v5](https://mui.com/material-ui/migration/migration-v4/) fixed the problem. \r\n```\r\n  \"@emotion/core\": \"^11.0.0\",\r\n  \"@emotion/react\": \"^11.10.6\",\r\n  \"@emotion/server\": \"^11.10.0\",\r\n  \"@emotion/styled\": \"^11.10.6\",\r\n  \"@mui/icons-material\": \"^5.11.11\",\r\n  \"@mui/material\": \"^5.11.11\",\r\n  \"@mui/styles\": \"^5.11.11\",\r\n```\r\n```\r\n\"next\": \"12.3.1\",\r\n\"react\": \"18.2.0\",\r\n```","updated_at":"2023-03-12T10:11:22Z","created_at":"2023-03-12T10:10:50Z","creator_user_login":"xjahic"}
{"number":26298,"comment_id":"1454243344","body":"Works for me; could you post a fiddle link?","updated_at":"2023-03-03T23:06:08Z","created_at":"2023-03-03T23:06:08Z","creator_user_login":"egonSchiele"}
{"number":26298,"comment_id":"1454976881","body":"I can confirm the `onContextMenu` gets triggered on right click when button is `disabled`. \r\nMaybe its something related to these lines of code:\r\nhttps://github.com/facebook/react/blob/8e2bde6f2751aa6335f3cef488c05c3ea08e074a/packages/react-dom-bindings/src/events/plugins/SimpleEventPlugin.js#L107-L113","updated_at":"2023-03-05T03:21:48Z","created_at":"2023-03-05T03:21:48Z","creator_user_login":"Werter12"}
{"number":25012,"comment_id":"1201355704","body":"Thanks for the repro.\r\n\r\nI took the liberty and reduced it further so that we can reproduce without 3rd party dependencies: https://codesandbox.io/s/intelligent-joliot-qz4xfo\r\n\r\nHowever, this is expected behavior. You can't call hoks from within other hooks. You should see a warning in your console similar to \"Warning: Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. \" before that error is throw.\r\n\r\nThe error message is a bit unfortunate though I can't reproduce it specifically. Could you expand on the linked codesandbox so that we can reproduce this specific message?","updated_at":"2022-08-01T15:29:48Z","created_at":"2022-08-01T15:29:48Z","creator_user_login":"eps1lon"}
{"number":25030,"comment_id":"1203162763","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: e193be87e683fd7c1a03f09505013c67a454040f...02a7faba26857319398737a0b47fd645a2044e8c\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **=** | 134.09 kB | 134.09 kB | = | 42.93 kB | 42.93 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **=** | 139.65 kB | 139.65 kB | = | 44.55 kB | 44.55 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/facebook-www/ReactDOM-prod.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.30%** | 474.97 kB | 476.42 kB | +0.17% | 84.88 kB | 85.03 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/facebook-www/ReactDOM-prod.modern.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.31%** | 460.21 kB | 461.66 kB | +0.18% | 82.64 kB | 82.79 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/facebook-www/ReactDOMForked-prod.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.30%** | 474.97 kB | 476.42 kB | +0.17% | 84.88 kB | 85.03 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [facebook-www/ReactART-prod.modern.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/facebook-www/ReactART-prod.modern.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.48%** | 302.75 kB | 304.20 kB | +0.24% | 52.06 kB | 52.18 kB\n| [facebook-www/ReactART-prod.classic.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/facebook-www/ReactART-prod.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.46%** | 313.59 kB | 315.03 kB | +0.23% | 53.91 kB | 54.03 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/facebook-www/ReactDOM-prod.modern.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.31%** | 460.21 kB | 461.66 kB | +0.18% | 82.64 kB | 82.79 kB\n| [facebook-www/ReactDOMForked-prod.modern.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/facebook-www/ReactDOMForked-prod.modern.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.31%** | 460.21 kB | 461.66 kB | +0.18% | 82.64 kB | 82.79 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/facebook-www/ReactDOM-prod.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.30%** | 474.97 kB | 476.42 kB | +0.17% | 84.88 kB | 85.03 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/facebook-www/ReactDOMForked-prod.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.30%** | 474.97 kB | 476.42 kB | +0.17% | 84.88 kB | 85.03 kB\n| [facebook-www/ReactDOM-profiling.modern.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/facebook-www/ReactDOM-profiling.modern.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.30%** | 490.25 kB | 491.70 kB | +0.23% | 87.15 kB | 87.35 kB\n| [facebook-www/ReactDOMForked-profiling.modern.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/facebook-www/ReactDOMForked-profiling.modern.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.30%** | 490.25 kB | 491.70 kB | +0.23% | 87.15 kB | 87.35 kB\n| [facebook-www/ReactDOM-profiling.classic.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/facebook-www/ReactDOM-profiling.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.29%** | 505.08 kB | 506.52 kB | +0.22% | 89.47 kB | 89.67 kB\n| [facebook-www/ReactDOMForked-profiling.classic.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/facebook-www/ReactDOMForked-profiling.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.29%** | 505.08 kB | 506.52 kB | +0.22% | 89.47 kB | 89.67 kB\n| [facebook-www/ReactART-dev.modern.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/facebook-www/ReactART-dev.modern.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.25%** | 818.75 kB | 820.77 kB | +0.15% | 172.48 kB | 172.74 kB\n| [facebook-www/ReactART-dev.classic.js](https://react-builds.vercel.app/commits/02a7faba26857319398737a0b47fd645a2044e8c/files/facebook-www/ReactART-dev.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.24%** | 828.97 kB | 830.99 kB | +0.15% | 174.61 kB | 174.87 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 02a7faba26857319398737a0b47fd645a2044e8c\n</p>\n","updated_at":"2022-08-03T19:14:57Z","created_at":"2022-08-02T20:05:38Z","creator_user_login":"sizebot"}
{"number":24998,"comment_id":"1196814765","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 2c7dea73659da283fa433f5fd657a5a29797fd67...7a2d1211b36a113f1137d1c067db4eee89b04a4d\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7a2d1211b36a113f1137d1c067db4eee89b04a4d/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **=** | 132.92 kB | 132.92 kB | = | 42.68 kB | 42.68 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7a2d1211b36a113f1137d1c067db4eee89b04a4d/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **=** | 138.15 kB | 138.15 kB | = | 44.19 kB | 44.19 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/7a2d1211b36a113f1137d1c067db4eee89b04a4d/files/facebook-www/ReactDOM-prod.classic.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **=** | 469.02 kB | 469.02 kB | = | 84.22 kB | 84.22 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/7a2d1211b36a113f1137d1c067db4eee89b04a4d/files/facebook-www/ReactDOM-prod.modern.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **=** | 454.26 kB | 454.26 kB | = | 81.98 kB | 81.98 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/7a2d1211b36a113f1137d1c067db4eee89b04a4d/files/facebook-www/ReactDOMForked-prod.classic.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **=** | 469.02 kB | 469.02 kB | = | 84.22 kB | 84.22 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 7a2d1211b36a113f1137d1c067db4eee89b04a4d\n</p>\n","updated_at":"2022-07-27T14:11:50Z","created_at":"2022-07-27T14:11:50Z","creator_user_login":"sizebot"}
{"number":25038,"comment_id":"1277949958","body":"Hi there! Is this issue still currently open? I'd be more than happy to take a look.","updated_at":"2022-10-13T17:30:18Z","created_at":"2022-10-13T17:30:18Z","creator_user_login":"Enrique-Ambrocio"}
{"number":25038,"comment_id":"1278004538","body":"Hi! Still reproducible on 18.2.0","updated_at":"2022-10-13T18:22:03Z","created_at":"2022-10-13T18:22:03Z","creator_user_login":"alatielle"}
{"number":24989,"comment_id":"1195827024","body":"> Unfortunately I cannot reproduce, but what appears to be a headless chrome87 scanner fairly consistently reproduces the issue.\r\n\r\nCould you create a cloneable repository that has the minimal amount of code to reproduce this issue? It's hard otherwise to understand where assumptions were incorrect.","updated_at":"2022-07-26T18:19:49Z","created_at":"2022-07-26T18:19:49Z","creator_user_login":"eps1lon"}
{"number":24989,"comment_id":"1197078073","body":"I'll try to gather minimal amount of code to repro, but in the meantime it's repro-able on\r\n* https://marketplace.stripe.com\r\n* https://connect.stripe.com/login\r\n* https://dashboard.stripe.com/login\r\nfrom Mac OS X 10.15.7 and Chrome 87.0.4280","updated_at":"2022-07-27T17:27:26Z","created_at":"2022-07-27T17:27:26Z","creator_user_login":"kweng-stripe"}
{"number":25033,"comment_id":"1203953035","body":"This is probably because Firefox has stricter rules for extensions when you are in private mode.\r\nIs there anything you need to use devtools for that only works on private mode?","updated_at":"2022-08-03T13:29:34Z","created_at":"2022-08-03T13:29:34Z","creator_user_login":"mondaychen"}
{"number":25033,"comment_id":"1207267386","body":"Hey Checkout this solution. \r\nhttps://support.mozilla.org/en-US/questions/1293505\r\nMaybe this is the reason it's not working ","updated_at":"2022-08-06T19:14:18Z","created_at":"2022-08-06T19:14:18Z","creator_user_login":"AnmolBansalDEV"}
{"number":22946,"comment_id":"992691145","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 64223fed82414ee41839e95ebc97df330b2b71ca...9c9096d348360a621e419a287f45daf01cbb3f76\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-stable/react-dom/cjs/react-dom.production.min.js | **=** | 130.35 kB | 130.35 kB | = | 41.83 kB | 41.83 kB\n| oss-experimental/react-dom/cjs/react-dom.production.min.js | **=** | 135.54 kB | 135.54 kB | = | 43.35 kB | 43.35 kB\n| facebook-www/ReactDOM-prod.classic.js | **=** | 431.29 kB | 431.29 kB | = | 79.12 kB | 79.12 kB\n| facebook-www/ReactDOM-prod.modern.js | **=** | 421.18 kB | 421.18 kB | = | 77.67 kB | 77.67 kB\n| facebook-www/ReactDOMForked-prod.classic.js | **=** | 431.29 kB | 431.29 kB | = | 79.12 kB | 79.12 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| oss-experimental/react-noop-renderer/cjs/react-noop-renderer.production.min.js | **+0.61%** | 13.76 kB | 13.85 kB | +0.60% | 3.97 kB | 3.99 kB\n| oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.production.min.js | **+0.61%** | 13.76 kB | 13.85 kB | +0.60% | 3.97 kB | 3.99 kB\n| oss-stable/react-noop-renderer/cjs/react-noop-renderer.production.min.js | **+0.61%** | 13.76 kB | 13.85 kB | +0.60% | 3.97 kB | 3.99 kB\n| oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js | **+0.61%** | 13.83 kB | 13.92 kB | +0.58% | 3.99 kB | 4.01 kB\n| oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js | **+0.61%** | 13.83 kB | 13.92 kB | +0.58% | 3.99 kB | 4.01 kB\n| oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js | **+0.61%** | 13.83 kB | 13.92 kB | +0.58% | 3.99 kB | 4.01 kB\n| oss-experimental/react-noop-renderer/cjs/react-noop-renderer.development.js | **+0.30%** | 42.08 kB | 42.20 kB | +0.21% | 9.43 kB | 9.45 kB\n| oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.development.js | **+0.30%** | 42.08 kB | 42.20 kB | +0.21% | 9.43 kB | 9.45 kB\n| oss-stable/react-noop-renderer/cjs/react-noop-renderer.development.js | **+0.30%** | 42.08 kB | 42.20 kB | +0.21% | 9.43 kB | 9.45 kB\n| oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js | **+0.30%** | 42.21 kB | 42.33 kB | +0.21% | 9.44 kB | 9.46 kB\n| oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js | **+0.30%** | 42.21 kB | 42.33 kB | +0.21% | 9.44 kB | 9.46 kB\n| oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.development.js | **+0.30%** | 42.21 kB | 42.33 kB | +0.21% | 9.44 kB | 9.46 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 9c9096d348360a621e419a287f45daf01cbb3f76\n</p>\n","updated_at":"2022-02-11T07:10:16Z","created_at":"2021-12-13T17:12:25Z","creator_user_login":"sizebot"}
{"number":22946,"comment_id":"998459297","body":"anybody gives some suggestions for this PR? @akgupta0777 ","updated_at":"2021-12-21T04:23:31Z","created_at":"2021-12-21T04:19:56Z","creator_user_login":"zoomchan-cxj"}
{"number":22946,"comment_id":"998536092","body":"@zoomchan-cxj Thanks for the PR. But I am not a maintainer in react repo. ask @bvaughn for help.","updated_at":"2021-12-21T07:26:14Z","created_at":"2021-12-21T07:26:14Z","creator_user_login":"akgupta0777"}
{"number":22946,"comment_id":"998801760","body":"Hello, can you link to an example of the problem and an example of this PR solving the problem? Have you tried using requestAnimationFrame ? ","updated_at":"2021-12-21T13:59:26Z","created_at":"2021-12-21T13:59:26Z","creator_user_login":"salazarm"}
{"number":22946,"comment_id":"998819835","body":"Yeah A kind of proof of concept will be great.","updated_at":"2021-12-21T14:23:12Z","created_at":"2021-12-21T14:23:12Z","creator_user_login":"akgupta0777"}
{"number":22946,"comment_id":"998820233","body":"> Hello, can you link to an example of the problem and an example of this PR solving the problem? Have you tried using requestAnimationFrame ?\r\n\r\nThis is used for non-web custom renderer for Hippy, something like ReactNative(examples [step1](https://github.com/Tencent/Hippy/blob/master/packages/hippy-react/src/renderer/host-configs.ts#L75) [step2](https://github.com/Tencent/Hippy/blob/0b96b4b0ed1ced46806393522a1ddab224715ce8/packages/hippy-react/src/renderer/render.ts#L134)). At Step2, whether used promise, requestAnimationFrame, setTimeout or setImmediate to call `batchUpdate` function, they are not synchronous invoke. Android and iOS have other threads to handle user interaction, actually they don't need to yield to host thread at idle time like Web, so batch of node creating, deleting, updating synchronously sending to native has higher rendering performance. @salazarm ","updated_at":"2021-12-21T15:03:24Z","created_at":"2021-12-21T14:23:43Z","creator_user_login":"zoomchan-cxj"}
{"number":22946,"comment_id":"998855280","body":"Hmm, I'm not too familiar with RN. Conceptually the idea makes sense but I'm not sure if there is another way to accomplish the same thing. Maybe @rickhanlonii  has some insight here?","updated_at":"2021-12-21T15:08:44Z","created_at":"2021-12-21T15:08:44Z","creator_user_login":"salazarm"}
{"number":22946,"comment_id":"999236372","body":"> Hmm, I'm not too familiar with RN. Conceptually the idea makes sense but I'm not sure if there is another way to accomplish the same thing. Maybe @rickhanlonii has some insight here?\r\n\r\nWe have done some tests in our framework [Hippy](https://github.com/Tencent/Hippy),  it is shown that batch update  synchronously sent to native is better. Of course , RN has changed to use JSI and fabric UI, but updating to fabric UI and JSI has high cost for some old framework with custom native renderer. What's more, commit phase is essentially a synchronous process, so commitEffects hooks can notify custom renderer what is the exact time to do synchronous invoke . Maybe it is a flexible option for practice. Any suggestion? @bvaughn @rickhanlonii ","updated_at":"2021-12-22T10:37:27Z","created_at":"2021-12-22T02:30:19Z","creator_user_login":"zoomchan-cxj"}
{"number":22946,"comment_id":"1000456120","body":"Please don't ping by name more than once, especially during the holidays. There aren't a lot of people working right now, but we check open PRs regularly on our own.","updated_at":"2021-12-23T18:06:36Z","created_at":"2021-12-23T18:06:36Z","creator_user_login":"bvaughn"}
{"number":22946,"comment_id":"1000585631","body":"> Please don't ping by name more than once, especially during the holidays. There aren't a lot of people working right now, but we check open PRs regularly on our own.\r\n\r\nSorry，i forgot it is holiday time in western countries😥","updated_at":"2021-12-24T00:48:23Z","created_at":"2021-12-24T00:48:23Z","creator_user_login":"zoomchan-cxj"}
{"number":22946,"comment_id":"1013092612","body":"Hello @zoomchan-cxj \r\n\r\n> RN has changed to use JSI and fabric UI, but updating to fabric UI and JSI has high cost for some old framework with custom native renderer\r\n\r\nCan you elaborate on this? What old frameworks with custom native renderer? \r\nHow has Fabric UI and JSI high cost? I mean, is it a high cost to paint something on the screen? What is the expensive part? \r\n\r\nHow do we test this? Could you provide a patch that would test this in RNTester? \r\n\r\nThank you","updated_at":"2022-01-14T12:53:30Z","created_at":"2022-01-14T12:53:30Z","creator_user_login":"sammy-SC"}
{"number":22946,"comment_id":"1013316357","body":"> Hello @zoomchan-cxj\r\n> \r\n> > RN has changed to use JSI and fabric UI, but updating to fabric UI and JSI has high cost for some old framework with custom native renderer\r\n> \r\n> Can you elaborate on this? What old frameworks with custom native renderer? How has Fabric UI and JSI high cost? I mean, is it a high cost to paint something on the screen? What is the expensive part?\r\n> \r\n> How do we test this? Could you provide a patch that would test this in RNTester?\r\n> \r\n> Thank you\r\n\r\nOur framework [Hippy](https://github.com/Tencent/Hippy) is an open source cross-platform practice to support React, Vue or something else UI, which uses react-reconciler exposed api to link our custom native renderer. Here is the [code](https://github.com/Tencent/Hippy/blob/master/packages/hippy-react/src/renderer/host-configs.ts). \r\n\r\nFabric UI is a fantastic thing for RN, but our framework [Hippy](https://github.com/Tencent/Hippy)  has made custom native renderer with our protocol, kind of like early version RN. We would like to improve performance for existing framework, not for Fabric UI. This is not conflicted.\r\n\r\nAs for performance test, I think it is obvious. Firstly, React commit phase is a synchronous process , a series of DOM action in an effect list such as `appendChild`, `insertBefore`,  etc. would send to renderer. But we don't know the commitMutationEffects finished time, which is a best moment for Native to flush batched DOM update to screen. Some code can be seen [Step1](https://github.com/Tencent/Hippy/blob/master/packages/hippy-react/src/renderer/host-configs.ts#L74) and [Step2](https://github.com/Tencent/Hippy/blob/adf750d4aec4789ffb38419cf430019590e61523/packages/hippy-react/src/renderer/render.ts#L125)","updated_at":"2022-01-14T17:32:19Z","created_at":"2022-01-14T17:27:23Z","creator_user_login":"zoomchan-cxj"}
{"number":22946,"comment_id":"1013320786","body":"So far we've avoided exposing information like the timing of where specific phases \"stop\" and \"start\". This allowed us to change several times which phases exist. If we had added something like this earlier, we might not be able to change the timing as easily. So I am concerned about this idea and I'm not sure we'd want to commit to notifying the renderer about starting and stopping. I wouldn't feel comfortable about adding this without an explicit signoff from @sebmarkbage.","updated_at":"2022-01-14T17:33:44Z","created_at":"2022-01-14T17:33:44Z","creator_user_login":"gaearon"}
{"number":22946,"comment_id":"1013329198","body":"> So far we've avoided exposing information like the timing of where specific phases \"stop\" and \"start\". This allowed us to change several times which phases exist. If we had added something like this earlier, we might not be able to change the timing as easily. So I am concerned about this idea and I'm not sure we'd want to commit to notifying the renderer about starting and stopping. I wouldn't feel comfortable about adding this without an explicit signoff from @sebmarkbage.\r\n\r\nI understand your concern, so for the time being we just modified react 16 and react 17 react-reconciler code  to meet our need. This PR is only to discuss whether a better idea to improve rendering performance for batch-flush","updated_at":"2022-01-14T17:45:48Z","created_at":"2022-01-14T17:45:48Z","creator_user_login":"zoomchan-cxj"}
{"number":22946,"comment_id":"1013420920","body":"The barrier for host config methods is much lower than other functions because they have much lower stability in general anyway.\n\nThis change seems reasonably to me if @acdlite agrees. Perhaps with different names.\n\nThe thing that I'd be prepared for that might change in this space is animations that might need to inspect the current state of layout and prepare multiple target outputs.\n\nAnother change might also be to switch to a synchronous render pass where rendering and mutations are interleaved. In that case the mutation phase would be interleaved with rendering. In that case these methods would change to do the \"before\" part before rendering.","updated_at":"2022-01-14T19:37:17Z","created_at":"2022-01-14T19:37:17Z","creator_user_login":"sebmarkbage"}
{"number":22946,"comment_id":"1013596567","body":"> The barrier for host config methods is much lower than other functions because they have much lower stability in general anyway.\r\n> \r\n> This change seems reasonably to me if @acdlite agrees. Perhaps with different names.\r\n> \r\n> The thing that I'd be prepared for that might change in this space is animations that might need to inspect the current state of layout and prepare multiple target outputs.\r\n> \r\n> Another change might also be to switch to a synchronous render pass where rendering and mutations are interleaved. In that case the mutation phase would be interleaved with rendering. In that case these methods would change to do the \"before\" part before rendering.\r\n\r\nYep, Web environment is recommended to render as fast as possible once DOM changes come, but native or other environment may be offered another choice to adjust the process, such as doing some collecting things before rendering and then flushing at one time.","updated_at":"2022-01-15T03:22:06Z","created_at":"2022-01-15T03:10:21Z","creator_user_login":"zoomchan-cxj"}
{"number":22946,"comment_id":"1021846015","body":"is there any follow-up action that i can do? ","updated_at":"2022-01-26T04:15:40Z","created_at":"2022-01-26T04:15:24Z","creator_user_login":"zoomchan-cxj"}
{"number":22946,"comment_id":"1021854539","body":"Lemme ping Andrew. ","updated_at":"2022-01-26T04:38:05Z","created_at":"2022-01-26T04:38:05Z","creator_user_login":"gaearon"}
{"number":22946,"comment_id":"1022383108","body":"Yeah this seems fine to me. The React Native renderer already has this level of control over the mutation phase because they do all their mutations at a different layer (using \"persistent\" reconciler mode). So in the abstract, the feature makes sense.\r\n\r\nAs with other host config methods, we may change the API for the reasons @sebmarkbage described but assuming you're OK with that this seems good to merge.","updated_at":"2022-01-26T16:43:18Z","created_at":"2022-01-26T16:43:18Z","creator_user_login":"acdlite"}
{"number":22946,"comment_id":"1022384076","body":"Although we should add a test first","updated_at":"2022-01-26T16:44:25Z","created_at":"2022-01-26T16:44:25Z","creator_user_login":"acdlite"}
{"number":22946,"comment_id":"1022385030","body":"A simple test would be to add the new methods to the React Noop renderer and assert that the timing of the function is correct.","updated_at":"2022-01-26T16:45:30Z","created_at":"2022-01-26T16:45:30Z","creator_user_login":"acdlite"}
{"number":22946,"comment_id":"1022886543","body":"> A simple test would be to add the new methods to the React Noop renderer and assert that the timing of the function is correct.\r\n\r\nthe test is it added by myself or React Core Team?","updated_at":"2022-01-27T06:23:21Z","created_at":"2022-01-27T06:23:21Z","creator_user_login":"zoomchan-cxj"}
{"number":22946,"comment_id":"1022902013","body":"> Yeah this seems fine to me. The React Native renderer already has this level of control over the mutation phase because they do all their mutations at a different layer (using \"persistent\" reconciler mode). So in the abstract, the feature makes sense.\r\n> \r\n> As with other host config methods, we may change the API for the reasons @sebmarkbage described but assuming you're OK with that this seems good to merge.\r\n\r\nYep, maybe this PR can be merged first which not affects current logic, and then React Core Team refactor other code?  It is fine with me","updated_at":"2022-01-27T06:59:54Z","created_at":"2022-01-27T06:55:08Z","creator_user_login":"zoomchan-cxj"}
{"number":22946,"comment_id":"1032838699","body":"some conflicts have been fixed, is there anything else I can do ?","updated_at":"2022-02-08T16:53:12Z","created_at":"2022-02-08T16:53:12Z","creator_user_login":"zoomchan-cxj"}
{"number":24999,"comment_id":"1196953134","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 2c7dea73659da283fa433f5fd657a5a29797fd67...76ad0a103a6028eda603797bbf85c566bf5d7c95\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/76ad0a103a6028eda603797bbf85c566bf5d7c95/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **=** | 132.92 kB | 132.92 kB | = | 42.68 kB | 42.68 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/76ad0a103a6028eda603797bbf85c566bf5d7c95/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **=** | 138.15 kB | 138.15 kB | = | 44.19 kB | 44.19 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/76ad0a103a6028eda603797bbf85c566bf5d7c95/files/facebook-www/ReactDOM-prod.classic.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **=** | 469.02 kB | 469.02 kB | = | 84.22 kB | 84.22 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/76ad0a103a6028eda603797bbf85c566bf5d7c95/files/facebook-www/ReactDOM-prod.modern.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **=** | 454.26 kB | 454.26 kB | = | 81.98 kB | 81.98 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/76ad0a103a6028eda603797bbf85c566bf5d7c95/files/facebook-www/ReactDOMForked-prod.classic.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **=** | 469.02 kB | 469.02 kB | = | 84.22 kB | 84.22 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [facebook-react-native/react/cjs/JSXRuntime-prod.js](https://react-builds.vercel.app/commits/76ad0a103a6028eda603797bbf85c566bf5d7c95/files/facebook-react-native/react/cjs/JSXRuntime-prod.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **+0.42%** | 1.43 kB | 1.44 kB | +0.74% | 0.68 kB | 0.69 kB\n| [facebook-react-native/react/cjs/JSXRuntime-profiling.js](https://react-builds.vercel.app/commits/76ad0a103a6028eda603797bbf85c566bf5d7c95/files/facebook-react-native/react/cjs/JSXRuntime-profiling.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **+0.42%** | 1.43 kB | 1.44 kB | +0.74% | 0.68 kB | 0.69 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.production.min.js](https://react-builds.vercel.app/commits/76ad0a103a6028eda603797bbf85c566bf5d7c95/files/oss-experimental/react/cjs/react-jsx-runtime.production.min.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **=** | 0.86 kB | 0.86 kB | +0.37% | 0.54 kB | 0.54 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.production.min.js](https://react-builds.vercel.app/commits/76ad0a103a6028eda603797bbf85c566bf5d7c95/files/oss-stable-semver/react/cjs/react-jsx-runtime.production.min.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **=** | 0.86 kB | 0.86 kB | +0.37% | 0.54 kB | 0.54 kB\n| [oss-stable/react/cjs/react-jsx-runtime.production.min.js](https://react-builds.vercel.app/commits/76ad0a103a6028eda603797bbf85c566bf5d7c95/files/oss-stable/react/cjs/react-jsx-runtime.production.min.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **=** | 0.86 kB | 0.86 kB | +0.37% | 0.54 kB | 0.54 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.profiling.min.js](https://react-builds.vercel.app/commits/76ad0a103a6028eda603797bbf85c566bf5d7c95/files/oss-experimental/react/cjs/react-jsx-runtime.profiling.min.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **=** | 0.86 kB | 0.86 kB | +0.56% | 0.54 kB | 0.54 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.profiling.min.js](https://react-builds.vercel.app/commits/76ad0a103a6028eda603797bbf85c566bf5d7c95/files/oss-stable-semver/react/cjs/react-jsx-runtime.profiling.min.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **=** | 0.86 kB | 0.86 kB | +0.56% | 0.54 kB | 0.54 kB\n| [oss-stable/react/cjs/react-jsx-runtime.profiling.min.js](https://react-builds.vercel.app/commits/76ad0a103a6028eda603797bbf85c566bf5d7c95/files/oss-stable/react/cjs/react-jsx-runtime.profiling.min.js?compare=2c7dea73659da283fa433f5fd657a5a29797fd67) | **=** | 0.86 kB | 0.86 kB | +0.56% | 0.54 kB | 0.54 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 76ad0a103a6028eda603797bbf85c566bf5d7c95\n</p>\n","updated_at":"2022-07-27T16:03:35Z","created_at":"2022-07-27T16:03:35Z","creator_user_login":"sizebot"}
{"number":25008,"comment_id":"1201357169","body":"It doesn't look like this bug report has enough info for one of us to reproduce it.\r\n\r\nPlease provide a CodeSandbox (https://react.new), or a link to a repository on GitHub.\r\n\r\nHere are some tips for providing a minimal example: https://stackoverflow.com/help/mcve\r\n\r\n<!-- mui template next: https://material-ui.com/r/issue-template-next -->\r\n<!-- mui template stable: https://material-ui.com/r/issue-template-latest -->\r\n<!-- react template: https://react.new/ -->","updated_at":"2022-08-01T15:30:56Z","created_at":"2022-08-01T15:30:56Z","creator_user_login":"eps1lon"}
{"number":25009,"comment_id":"1201650101","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: e193be87e683fd7c1a03f09505013c67a454040f...07786af84c2bb5c49629d1e811f065575f4e80f7\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/07786af84c2bb5c49629d1e811f065575f4e80f7/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **=** | 134.09 kB | 134.09 kB | = | 42.93 kB | 42.93 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/07786af84c2bb5c49629d1e811f065575f4e80f7/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **=** | 139.65 kB | 139.65 kB | = | 44.55 kB | 44.55 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/07786af84c2bb5c49629d1e811f065575f4e80f7/files/facebook-www/ReactDOM-prod.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.23%** | 474.97 kB | 476.05 kB | +0.14% | 84.88 kB | 85.00 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/07786af84c2bb5c49629d1e811f065575f4e80f7/files/facebook-www/ReactDOM-prod.modern.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.23%** | 460.21 kB | 461.29 kB | +0.15% | 82.64 kB | 82.76 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/07786af84c2bb5c49629d1e811f065575f4e80f7/files/facebook-www/ReactDOMForked-prod.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.23%** | 474.97 kB | 476.05 kB | +0.14% | 84.88 kB | 85.00 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [facebook-www/ReactART-prod.modern.js](https://react-builds.vercel.app/commits/07786af84c2bb5c49629d1e811f065575f4e80f7/files/facebook-www/ReactART-prod.modern.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.36%** | 302.75 kB | 303.82 kB | +0.23% | 52.06 kB | 52.18 kB\n| [facebook-www/ReactART-prod.classic.js](https://react-builds.vercel.app/commits/07786af84c2bb5c49629d1e811f065575f4e80f7/files/facebook-www/ReactART-prod.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.34%** | 313.59 kB | 314.66 kB | +0.22% | 53.91 kB | 54.03 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/07786af84c2bb5c49629d1e811f065575f4e80f7/files/facebook-www/ReactDOM-prod.modern.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.23%** | 460.21 kB | 461.29 kB | +0.15% | 82.64 kB | 82.76 kB\n| [facebook-www/ReactDOMForked-prod.modern.js](https://react-builds.vercel.app/commits/07786af84c2bb5c49629d1e811f065575f4e80f7/files/facebook-www/ReactDOMForked-prod.modern.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.23%** | 460.21 kB | 461.29 kB | +0.15% | 82.64 kB | 82.76 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/07786af84c2bb5c49629d1e811f065575f4e80f7/files/facebook-www/ReactDOM-prod.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.23%** | 474.97 kB | 476.05 kB | +0.14% | 84.88 kB | 85.00 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/07786af84c2bb5c49629d1e811f065575f4e80f7/files/facebook-www/ReactDOMForked-prod.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.23%** | 474.97 kB | 476.05 kB | +0.14% | 84.88 kB | 85.00 kB\n| [facebook-www/ReactDOM-profiling.modern.js](https://react-builds.vercel.app/commits/07786af84c2bb5c49629d1e811f065575f4e80f7/files/facebook-www/ReactDOM-profiling.modern.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.22%** | 490.25 kB | 491.33 kB | +0.19% | 87.15 kB | 87.31 kB\n| [facebook-www/ReactDOMForked-profiling.modern.js](https://react-builds.vercel.app/commits/07786af84c2bb5c49629d1e811f065575f4e80f7/files/facebook-www/ReactDOMForked-profiling.modern.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.22%** | 490.25 kB | 491.33 kB | +0.19% | 87.15 kB | 87.31 kB\n| [facebook-www/ReactDOM-profiling.classic.js](https://react-builds.vercel.app/commits/07786af84c2bb5c49629d1e811f065575f4e80f7/files/facebook-www/ReactDOM-profiling.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.21%** | 505.08 kB | 506.15 kB | +0.18% | 89.47 kB | 89.64 kB\n| [facebook-www/ReactDOMForked-profiling.classic.js](https://react-builds.vercel.app/commits/07786af84c2bb5c49629d1e811f065575f4e80f7/files/facebook-www/ReactDOMForked-profiling.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **+0.21%** | 505.08 kB | 506.15 kB | +0.18% | 89.47 kB | 89.64 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 07786af84c2bb5c49629d1e811f065575f4e80f7\n</p>\n","updated_at":"2022-08-03T17:45:05Z","created_at":"2022-08-01T19:58:55Z","creator_user_login":"sizebot"}
{"number":25032,"comment_id":"1203666709","body":"What specifically isn't working? E.g. double rendering, double effects, double state initialisers, deprecation warning etc?","updated_at":"2022-08-03T08:49:24Z","created_at":"2022-08-03T08:49:24Z","creator_user_login":"eps1lon"}
{"number":25032,"comment_id":"1203700155","body":"I have only tested double rendering and double effects in the [Codesandbox](https://codesandbox.io/s/strict-mode-test-5c79xd?file=/src/strictMode.test.tsx). I suspect it's a setup issue with react-test-renderer rather than a StrictMode bug.","updated_at":"2022-08-03T09:22:34Z","created_at":"2022-08-03T09:20:49Z","creator_user_login":"paol-imi"}
{"number":25037,"comment_id":"1204384716","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: e193be87e683fd7c1a03f09505013c67a454040f...511c42561b9371168d3765735c6b91300dfbe831\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/511c42561b9371168d3765735c6b91300dfbe831/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **=** | 134.09 kB | 134.09 kB | = | 42.93 kB | 42.93 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/511c42561b9371168d3765735c6b91300dfbe831/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **=** | 139.65 kB | 139.65 kB | = | 44.55 kB | 44.55 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/511c42561b9371168d3765735c6b91300dfbe831/files/facebook-www/ReactDOM-prod.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **=** | 474.97 kB | 474.85 kB | = | 84.88 kB | 84.83 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/511c42561b9371168d3765735c6b91300dfbe831/files/facebook-www/ReactDOM-prod.modern.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **=** | 460.21 kB | 460.09 kB | = | 82.64 kB | 82.59 kB\n| [facebook-www/ReactDOMForked-prod.classic.js](https://react-builds.vercel.app/commits/511c42561b9371168d3765735c6b91300dfbe831/files/facebook-www/ReactDOMForked-prod.classic.js?compare=e193be87e683fd7c1a03f09505013c67a454040f) | **=** | 474.97 kB | 474.85 kB | = | 84.88 kB | 84.83 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 511c42561b9371168d3765735c6b91300dfbe831\n</p>\n","updated_at":"2022-08-03T19:27:56Z","created_at":"2022-08-03T19:27:56Z","creator_user_login":"sizebot"}
{"number":24991,"comment_id":"1197885367","body":"If you want to measure performance you're most likely better off using [`React.Profiler`](https://reactjs.org/docs/profiler.html) like so `<LazyComponent><React.Profiler id=\"some-p\" onRender={handleRender}><p></p></React.Profiler></LazyComponent>`\r\n\r\n> Logging 'measure' after <p> is inserted into right place and being visible.\r\n\r\nCould you describe the exact timing and why it is important for your case?\r\n","updated_at":"2022-07-28T09:18:35Z","created_at":"2022-07-28T09:18:35Z","creator_user_login":"eps1lon"}
{"number":24991,"comment_id":"1202962611","body":"@eps1lon \r\n1. `React.Profiler` is disabled in the production build while we aim to measure performance of online users access, calling visibility speed statistic may be better.\r\n2. Code here for other purpose may depend on CSSOM or DOMRect of `<p>`. And the HTML attribute `hidden` will break some values of CSSOM and DOMRect.","updated_at":"2022-08-02T16:31:56Z","created_at":"2022-08-02T16:31:56Z","creator_user_login":"chestnutchen"}
{"number":24991,"comment_id":"1203212147","body":"> React.Profiler is disabled in the production build while we aim to measure performance of online users access, calling visibility speed statistic may be better.\r\n\r\nThere's a special profiling build that you may be interested in. See [How to use profiling in production mode for react-dom](https://gist.github.com/bvaughn/25e6233aeb1b4f0cdb8d8366e54a3977) for how to enable it for `react-dom`. The approach is similar in `react-native`.\r\n\r\n> Code here for other purpose may depend on CSSOM or DOMRect of <p>. And the HTML attribute hidden will break some values of CSSOM and DOMRect.\r\n\r\nCould you elaborate more on the exact timing that you're seeing now and that you'd rather see?","updated_at":"2022-08-02T21:03:52Z","created_at":"2022-08-02T21:03:52Z","creator_user_login":"eps1lon"}
{"number":24990,"comment_id":"1214767193","body":"Is anyone can review its pr?","updated_at":"2022-08-15T08:51:33Z","created_at":"2022-08-15T08:51:33Z","creator_user_login":"moonrailgun"}
{"number":24990,"comment_id":"1219060588","body":"> Is anyone can review its pr?\r\n\r\nWait a few days, React is quite a busy project, expect maintainers to come as they find time to reflect on . :-)","updated_at":"2022-08-18T05:42:30Z","created_at":"2022-08-18T05:42:30Z","creator_user_login":"Biki-das"}
{"number":15486,"comment_id":"486263985","body":"It looks like it does synchronizes with the virtual dom.\r\n\r\n![image](https://user-images.githubusercontent.com/14321495/56666916-18070780-66ad-11e9-8e60-4cdde0c1c20a.png)\r\n\r\n\r\nAlso, you don't need to do `open={open}` for the details element. HTML understands that clicking on the `<summary>` toggles the details. You can keep the `onClick={onToggle}` too. Check it [here](https://codesandbox.io/s/wqppk4k445)","updated_at":"2019-04-24T14:24:20Z","created_at":"2019-04-24T14:24:20Z","creator_user_login":"baruchvlz"}
{"number":15486,"comment_id":"486267225","body":"Thanks @baruchvlz. So is the official advice that `details` cannot be used as a controlled component?","updated_at":"2019-04-24T14:32:00Z","created_at":"2019-04-24T14:31:54Z","creator_user_login":"afenton90"}
{"number":15486,"comment_id":"488028431","body":"I just ran into the same issue today, and I fixed it by adding an `event.preventDefault` to the `onClick` handler. It is not crystal clear to me why this works tbh.\r\n\r\n```js\r\nconst onToggle = event => {\r\n  event.preventDefault();\r\n  setOpen(!open);\r\n};\r\n\r\n// Later on...\r\nreturn (\r\n  <div className=\"App\">\r\n    <details open={open} onClick={onToggle}>...</details>\r\n  </div>\r\n)\r\n```\r\n\r\n[Codesandbox](https://codesandbox.io/s/jvzky8yz23)","updated_at":"2019-04-30T16:49:31Z","created_at":"2019-04-30T16:49:31Z","creator_user_login":"alejandronanez"}
{"number":15486,"comment_id":"488224439","body":"Awesome @alejandronanez I'll go with that for now.\r\nI'll let the maintainers decide whether this issue is a bug or just a quirk of the `details` element. ","updated_at":"2019-05-01T07:12:52Z","created_at":"2019-05-01T07:12:52Z","creator_user_login":"afenton90"}
{"number":15486,"comment_id":"489397454","body":"@alejandronanez is right!details element have Default behavior! So,it is not controlled by onclickEvent","updated_at":"2019-05-05T07:03:37Z","created_at":"2019-05-05T07:03:37Z","creator_user_login":"gzqby"}
{"number":15486,"comment_id":"525324389","body":"Also the `<details>` element supports a `toggle` event (`onToggle` with React) that could make it possible to keep the native implementation while still updating the local state.","updated_at":"2019-08-27T14:22:32Z","created_at":"2019-08-27T14:22:32Z","creator_user_login":"julienw"}
{"number":15486,"comment_id":"578833052","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-01-27T16:32:57Z","created_at":"2020-01-27T16:32:57Z","creator_user_login":"stale[bot]"}
{"number":15486,"comment_id":"581523426","body":"Closing this issue after a prolonged period of inactivity. If this issue is still present in the latest release, please create a new issue with up-to-date information. Thank you!\n","updated_at":"2020-02-03T17:23:24Z","created_at":"2020-02-03T17:23:24Z","creator_user_login":"stale[bot]"}
{"number":15486,"comment_id":"582302476","body":"This \"stale\" bot thing is painful. It shouldn't close bugs without someone checks it doesn't happen anymore...","updated_at":"2020-02-05T08:48:34Z","created_at":"2020-02-05T08:48:34Z","creator_user_login":"julienw"}
{"number":15486,"comment_id":"669674869","body":"I do not have a solution for `onClick`, but I believe I have noticed a common discrepancy, in this thread, among attempts to mimic `<details>` behavior with React, and actual `<details>` behavior.\r\n\r\n**Summary**\r\nThe live code samples provided thus far set `onClick` on the `<details>` element. This does not accurately represent the standard behavior of a `<details>` tag.\r\n\r\n**Explanation**\r\nIn a raw `<details>/<summary>`, if one clicks on the content within an open `<details>`, underneath the `<summary>`, the `<details>` element does **not** close—only a click (or other activating user action) on the `<summary>` element will close (and open) the `<details>`. But, in the live code samples provided thus far, clicking on the described region closes the `<details>` element.\r\n\r\n**Example**\r\nWithout React:\r\n<details>\r\n<summary>Summary</summary>\r\n<p>Content (clicking here has no effect)</p>\r\n</details>\r\n\r\nWith React:\r\nhttps://codesandbox.io/s/react-details-bug-ov9sl\r\n\r\n**Reference**\r\n- The [`<details>` element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details) content is shown on \"click\" of the `<summary>` tag.\r\n- The [`toggle` event](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDetailsElement/toggle_event) (not `click` event) is the `<details>` element event for changing the `open` state.\r\n\r\n**Browser Support**\r\n[Chrome and Edge only recently have support](https://caniuse.com/#feat=mdn-api_htmldetailselement_toggle_event)","updated_at":"2020-08-06T04:22:16Z","created_at":"2020-08-06T04:22:16Z","creator_user_login":"wesleyboar-fka-iosulfur"}
{"number":15486,"comment_id":"850735313","body":"To mimic the default behavior I did the following:\r\n\r\n```\r\n<details open={open} onClick={onToggle}>\r\n  <summary>{title}</summary>\r\n  <div role=\"region\" onClick={(e) => e.stopPropagation()}>\r\n    {children}\r\n  </div>\r\n</details>\r\n```\r\n","updated_at":"2021-05-29T00:28:11Z","created_at":"2021-05-29T00:28:11Z","creator_user_login":"bitworking"}
{"number":15486,"comment_id":"873516817","body":"The title of this issue is inaccurate: React does keep the `open` attribute in sync with the DOM (as mentioned above https://github.com/facebook/react/issues/15486#issuecomment-486263985). However, this is still a confusing case even though React isn't technically doing anything wrong.\r\n\r\nIt's confusing because, unlike most other native DOM elements, the `<details>` element has state which it can update by itself without React knowing about it. This is what happens in the codesandbox from the issue description (https://codesandbox.io/s/xl756mk82w) when you click on the element for the first time:\r\n\r\n1. User clicks on `<details>` element\r\n2. The `onClick` handler is triggered, and the React state is toggled from false to true\r\n3. React (when not in concurrent mode) immediately re-renders, setting the `open` attribute of the `<details>` element to true\r\n4. The default behavior of the `<details>` element kicks in, toggling the `open` state, reversing the `open` attribute back to false (but React doesn't know about this)\r\n\r\nThis is why the element does not open the first time you click. Because this happens instantly, it's not obvious that the state is actually being toggled twice. When you click on the element again, this happens:\r\n\r\n1. User clicks on `<details>` element\r\n2. The `onClick` handler is triggered, and React still thinks the element is open, so the React state is toggled from true to false\r\n3. React re-renders, but the open attribute is already false (because the native behavior reversed what React did in the first click), so React does not update the DOM\r\n4. The default behavior kicks in, and the element is toggled\r\n\r\nThis is why you can toggle the element after the first click, even though React and the DOM disagree about the current state. Every time it re-renders, React sees that the DOM is already in the state that it wants to be in, so it does not update the DOM and behaves as if the `<details>` element was an uncontrolled component (even though it is technically being controlled).\r\n\r\nAs mentioned in https://github.com/facebook/react/issues/15486#issuecomment-488028431, the solution is to call `event.preventDefault()` in the `onClick` handler to disable the browser's default behavior so that React and only React controls the state. Note that as https://github.com/facebook/react/issues/15486#issuecomment-669674869 mentions, to mimic native behavior the `onClick` handler should be on the `<summary>` element, not the `<details>` element.\r\n\r\nhttps://github.com/facebook/react/issues/15486#issuecomment-525324389 mentioned that there is a `toggle` event which can be used to notify React about the current state. This might be useful when using the `<details>` element as a non-controlled component, but is a fragile way to use it as a controlled component because you still have the problem of the native behavior toggling the state separately from React. This codesandbox demonstrates how this could be an issue: https://codesandbox.io/s/react-details-bug-forked-iucdn. Clicking on the `<details>` element itself works correctly, but it causes an infinite re-rendering loop when you click on the button that toggles the React state alone. This is because `onToggle` is triggered not only when the user interacts with the element, but also triggered when React itself modifies the `open` attribute. This means that every time React toggles `open`, `onToggle` is triggered, making React toggle `open`, making `onToggle` get triggered again, etc.\r\n\r\n**tl;dr** This is a confusing case, but is probably not an issue with React. The solution is to call `event.preventDefault()` in the `onClick` handler of the `<summary>` element.","updated_at":"2021-07-05T02:14:54Z","created_at":"2021-07-04T04:01:25Z","creator_user_login":"butchler"}
{"number":15486,"comment_id":"903166406","body":"Finally, as the above comments found a solution: to use event.preventDefault() inside an onClick on the summary element, here is the code.\r\nYou must also specify the open attribute on the details element, and have no open attribute not even `open={false}` and therefore use `{...(open ? { open: true } : {})}`.\r\n\r\n```jsx\r\nimport { useState } from \"react\";\r\n\r\nexport default function Details({ summary, children, startOpen = false }){\r\n  const [open, setOpen] = useState(startOpen);\r\n  return (\r\n    <details {...(open ? { open: true } : {})}>\r\n      <summary\r\n        onClick={(e) => {\r\n          e.preventDefault();\r\n          setOpen((open) => !open);\r\n        }}\r\n      >\r\n        {typeof summary === \"function\" ? summary(open) : summary}\r\n      </summary>\r\n      {open && children}\r\n    </details>\r\n  );\r\n};\r\n\r\n```\r\nUsage:\r\n```jsx\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Details summary={(open) => `${open ? \"View\" : \"Hide\"} contents`}>\r\n        <p>The summary prop can be a function which gets the open value</p>\r\n      </Details>\r\n      <hr/>\r\n      <Details summary=\"Details\" startOpen={true}>\r\n        <p>\r\n          These contents are added/removed from the DOM depending on whether\r\n          details is open or not.\r\n        </p>\r\n      </Details>\r\n      <hr/>\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\nSee working / edit the code: https://codesandbox.io/s/beautiful-borg-nbh93?file=/src/App.js","updated_at":"2021-08-21T19:37:35Z","created_at":"2021-08-21T19:37:35Z","creator_user_login":"campbellgoe"}
{"number":15486,"comment_id":"940116059","body":"@campbellgoe \r\n> You must also specify the open attribute on the details element, and have no open attribute not even `open={false}` and therefore use `{...(open ? { open: true } : {})}`.\r\n\r\nHmm... this wasn't an issue for me in Chrome. Which browser did you notice this behavior?","updated_at":"2021-10-11T15:09:25Z","created_at":"2021-10-11T15:09:02Z","creator_user_login":"mrmiguu"}
{"number":15486,"comment_id":"1161780515","body":"I just stumbled a somewhat similar bug, that I think is related to this.\r\n\r\nI have a `<details>` element that is open by default, and the entire page flickers. Here's a CodeSandbox: https://codesandbox.io/s/throbbing-grass-1tphyl?file=/src/App.js","updated_at":"2022-06-21T13:53:46Z","created_at":"2022-06-21T13:53:46Z","creator_user_login":"iampava"}
{"number":15486,"comment_id":"1161805873","body":"> I have a `<details>` element that is open by default, and the entire page flickers. Here's a CodeSandbox: https://codesandbox.io/s/throbbing-grass-1tphyl?file=/src/App.js\r\n\r\nThe explanation was hidden in a large comment, but I mentioned this case above: https://github.com/facebook/react/issues/15486#issuecomment-873516817\r\n\r\n> [#15486 (comment)](https://github.com/facebook/react/issues/15486#issuecomment-525324389) mentioned that there is a `toggle` event which can be used to notify React about the current state. This might be useful when using the `<details>` element as a non-controlled component, but is a fragile way to use it as a controlled component because you still have the problem of the native behavior toggling the state separately from React. This codesandbox demonstrates how this could be an issue: https://codesandbox.io/s/react-details-bug-forked-iucdn. Clicking on the `<details>` element itself works correctly, but it causes an infinite re-rendering loop when you click on the button that toggles the React state alone. This is because `onToggle` is triggered not only when the user interacts with the element, but also triggered when React itself modifies the `open` attribute. This means that every time React toggles `open`, `onToggle` is triggered, making React toggle `open`, making `onToggle` get triggered again, etc.\r\n\r\nIt seems like my sandbox did not include the button that I mentioned in the comment, but I updated it now to add the button.\r\n\r\nIn your sandbox, there is no button for toggling the React state alone, but because `isOpen` defaults to true, on mount React will set the `details` element's `open` property to true. This will trigger the `onToggle` event, which will call the event handler, which will flip the value of `isOpen`, which will again cause React to update the `open` property, and that repeats in an infinite loop.","updated_at":"2022-06-21T14:14:47Z","created_at":"2022-06-21T14:14:47Z","creator_user_login":"butchler"}
{"number":15486,"comment_id":"1161808892","body":"Oh, I see. So this is how it works 🤔\r\n\r\nThanks for the explanation. I'm gonna go with the solution proposed above, using a click event listener and `.preventDefault()`.","updated_at":"2022-06-21T14:17:04Z","created_at":"2022-06-21T14:17:04Z","creator_user_login":"iampava"}
{"number":15486,"comment_id":"1248740831","body":"The idea that breaking an html element isn't a bug, is a problem. If a native element with w3c settled behavior is broken by React, React is broken, and this is a legit bug.","updated_at":"2022-09-15T23:19:55Z","created_at":"2022-09-15T23:19:55Z","creator_user_login":"boldium-eric-mikkelsen"}
{"number":15486,"comment_id":"1249130477","body":"As far as I can tell nobody in this thread has suggested that this is not a problem. Maybe you were confused by my earlier comment where I said this?:\r\n\r\n> The title of this issue is inaccurate: React does keep the `open` attribute in sync with the DOM (as mentioned above [#15486 (comment)](https://github.com/facebook/react/issues/15486#issuecomment-486263985)).\r\n\r\nI simply meant that the specific claim that the title made is technically inaccurate. I do think this is a very confusing thing that will waste a lot of people's time if it is not somehow fixed (or at least better documented).\r\n\r\nIn case you missed it, it is still possible to use the `details` element as long as you call `event.preventDefault()` in the event handler. Hopefully the React team can find a way to make it possible to use the `details` element without needing to do this, but for now you can use this as a workaround.","updated_at":"2022-09-16T09:17:58Z","created_at":"2022-09-16T09:17:58Z","creator_user_login":"butchler"}
{"number":15486,"comment_id":"1537086764","body":"It's possible to react to the native [`toggle`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDetailsElement/toggle_event) event that's dispatched on the [`<details>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/details) element, using the nested [`open`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLDetailsElement/open) property to update state. This feels more idiomatic and avoids the previously mentioned workarounds related to the inner [`<summary>`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/summary) element. Here's a minimal, typed example:\r\n\r\n[TS Playground](https://www.typescriptlang.org/play?noUncheckedIndexedAccess=true&removeComments=true&target=99&jsx=4&exactOptionalPropertyTypes=true&inlineSourceMap=true&inlineSources=true&isolatedModules=true&noImplicitOverride=true#code/JYWwDg9gTgLgBAbzjAnmApnASughgYxgFEAbdEdAOxgBo4BXAZ3QGUZcZMBfOAMyggg4AIih5CwgNwAoab3qVCwCJTgBhQZEpUYACgCUALmzjiZCtUTS4cfCsbwA2hAyU6zGAHlXAXTgBeBmY2DnRdXlwSZn0Za1t7eAALXEoAEzIAFQgAc2yyALhdOJt0ADcdYyR8eigxagzcKGz0GEq4FypjACMICDIUuB4uGjj9AIA+OA9vKl0ynQA6atqdBqaWhY7KGNkbMRga1SKbGwAeVJbcYCj2yizcsn8EZLTMnLz0Hi2nra5x4pOp0Y9BAIEaKHGCC2cAA-CIABLAC7CODGYQsRIQADuwi4pwA9MDQeD-idAWBxgBZaCYOzUHQEikAgkXdjXRikuA7LjSIA)\r\n\r\n```tsx\r\nimport { type ReactElement, useState } from \"react\";\r\n\r\nfunction Component(): ReactElement {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleToggle = (\r\n    event: { currentTarget: { open: boolean } },\r\n  ) => setOpen(event.currentTarget.open);\r\n\r\n  return (\r\n    <details onToggle={handleToggle} open={open}>\r\n      <summary>{open ? \"Hide\" : \"Show\"}</summary>\r\n      <p>More content</p>\r\n    </details>\r\n  );\r\n}\r\n\r\n```","updated_at":"2023-05-06T10:10:06Z","created_at":"2023-05-06T08:15:12Z","creator_user_login":"jsejcksn"}
{"number":15486,"comment_id":"1537091676","body":"Using `onToggle` works for simple cases but may lead to an infinite re-rendering loop if the state is updated by anything other than the event handler. From [my previous comment](https://github.com/facebook/react/issues/15486#issuecomment-873516817):\r\n\r\n> [#15486 (comment)](https://github.com/facebook/react/issues/15486#issuecomment-525324389) mentioned that there is a `toggle` event which can be used to notify React about the current state. This might be useful when using the `<details>` element as a non-controlled component, but is a fragile way to use it as a controlled component because you still have the problem of the native behavior toggling the state separately from React. This codesandbox demonstrates how this could be an issue: https://codesandbox.io/s/react-details-bug-forked-iucdn. Clicking on the `<details>` element itself works correctly, but it causes an infinite re-rendering loop when you click on the button that toggles the React state alone. This is because `onToggle` is triggered not only when the user interacts with the element, but also triggered when React itself modifies the `open` attribute. This means that every time React toggles `open`, `onToggle` is triggered, making React toggle `open`, making `onToggle` get triggered again, etc.\r\n\r\n","updated_at":"2023-05-06T08:42:20Z","created_at":"2023-05-06T08:42:20Z","creator_user_login":"butchler"}
{"number":15486,"comment_id":"1537110985","body":"> Using `onToggle` works for simple cases but may lead to an infinite re-rendering loop if the state is updated by anything other than the event handler\r\n\r\n@butchler That's only an issue when using a function that **inverts** the state value (like in your CodeSandbox example) — that's what causes the race condition and infinite re-render scenario. When **setting** it according to the value in the dispatched event (like in the code shown in my previous [comment](https://github.com/facebook/react/issues/15486#issuecomment-1537086764)), you can be confident that won't happen.\r\n\r\nIf the new boolean value is opposite of the current value, it will re-render once. If it's the same, no new render will occur. From the React [docs](https://react.dev/reference/react/useState#setstate-caveats):\r\n\r\n> If the new value you provide is identical to the current `state`, as determined by an [`Object.is`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is) comparison, React will **skip re-rendering the component and its children**. This is an optimization. Although in some cases React may still need to call your component before skipping the children, it shouldn’t affect your code.","updated_at":"2023-05-06T10:25:36Z","created_at":"2023-05-06T10:25:36Z","creator_user_login":"jsejcksn"}
{"number":15486,"comment_id":"1537132955","body":"Correct, and that's what I meant by \"if the state is updated by anything other than the event handler\". Sorry if my phrasing wasn't clear.\r\n\r\nThis means that for the case where you only need to know if the `detail` element is open or closed in your React component, using `onToggle` works fine. However, in some cases you might want to toggle the `detail` element via React state. For example, you might want to have a \"expand all\"/\"collapse all\" button that toggles all of the `detail` elements on a particular page. In that case, using `onToggle` will lead to an infinite render loop, and for most people it won't be obvious what's wrong or how to fix it.\r\n\r\nFor that reason, personally I wouldn't recommend `onToggle` as the preferred way to use `detail` elements. Ultimately it comes down to personal preference. In my case, I don't mind having to add the `event.preventDefault()` call if it means I never have to think about this potential edge case with `onToggle`.","updated_at":"2023-05-06T12:36:16Z","created_at":"2023-05-06T12:36:16Z","creator_user_login":"butchler"}
{"number":15486,"comment_id":"1537133713","body":"If you do use `onToggle`, I would recommend that you don't pass the `open` prop to the `detail` element. It gives the false impression that you can toggle the element with React state updates alone (i.e. not with the event handler) when in reality that will lead to an infinite render loop.","updated_at":"2023-05-06T12:40:11Z","created_at":"2023-05-06T12:40:11Z","creator_user_login":"butchler"}
{"number":15486,"comment_id":"1537147362","body":"> If you do use `onToggle`, I would recommend that you don't pass the `open` prop to the `detail` element. It gives the false impression that you can toggle the element with React state updates alone (i.e. not with the event handler) when in reality that will lead to an infinite render loop.\r\n\r\n@butchler You can have confidence that won't be an issue either — it'll still work!\r\n\r\nBelow I've included a reproducible example that you can use to verify. No build tools are needed — just save the contents as a local file and open in a browser. In case you don't have a text editor available, here's a link to a hosted version: https://jsfiddle.net/4w7tuLfk/\r\n\r\n<details>\r\n<summary><code>example.html</code></summary>\r\n\r\n```html\r\n<!doctype html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n  <meta charset=\"utf-8\" />\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\r\n  <title>Details demo</title>\r\n  <style>body { font-family: sans-serif; } button { margin: 1rem 0; } details { border: 1px solid blue; } summary { border: 1px solid red; }</style>\r\n  <script src=\"https://cdn.jsdelivr.net/npm/react@18.2.0/umd/react.production.min.js\"></script>\r\n  <script src=\"https://cdn.jsdelivr.net/npm/react-dom@18.2.0/umd/react-dom.production.min.js\"></script>\r\n  <script src=\"https://cdn.jsdelivr.net/npm/@babel/standalone@7.21.8/babel.min.js\"></script>\r\n  <script type=\"text/babel\" data-type=\"module\" data-presets=\"env,react\">\r\n    // This example uses UMD modules\r\n    const { useRef, useState } = React;\r\n\r\n    function RenderCount() {\r\n      const renderCountRef = useRef(0);\r\n      renderCountRef.current += 1;\r\n      return <div>Render count: {renderCountRef.current}</div>;\r\n    }\r\n\r\n    function App() {\r\n      const [open, setOpen] = useState(false);\r\n\r\n      return (\r\n        <>\r\n          <RenderCount />\r\n          <button onClick={() => setOpen((open) => !open)}>\r\n            Toggle using state\r\n          </button>\r\n          <details\r\n            onToggle={(event) => setOpen(event.currentTarget.open)}\r\n            open={open}\r\n          >\r\n            <summary>{open ? \"Hide\" : \"Show\"}</summary>\r\n            <p>More content</p>\r\n          </details>\r\n        </>\r\n      );\r\n    }\r\n\r\n    ReactDOM.createRoot(document.getElementById(\"root\")).render(<App />);\r\n  </script>\r\n</head>\r\n\r\n<body>\r\n  <div id=\"root\"></div>\r\n</body>\r\n\r\n</html>\r\n\r\n```\r\n\r\n</details>\r\n","updated_at":"2023-05-06T13:54:44Z","created_at":"2023-05-06T13:54:44Z","creator_user_login":"jsejcksn"}
{"number":15486,"comment_id":"1537155358","body":"I apologize, I didn't notice the difference between your suggestion and the previous suggestions in this thread about using the `toggle` event. The key difference is to not directly toggle the React state, but to always set the React state to match the `detail` element's current `.open` state. That does indeed avoid the problem I mentioned. 👍\r\n\r\nIn hindsight it seems so obvious that I don't know why I never thought of it myself. 😅","updated_at":"2023-05-06T14:48:52Z","created_at":"2023-05-06T14:36:43Z","creator_user_login":"butchler"}
{"number":15486,"comment_id":"1537157601","body":"I noticed that the new React docs have pages documenting how to use common types of controlled elements such as `input`: https://react.dev/reference/react-dom/components/input.\r\n\r\nIf someone added a similar page describing usage of the `detail` element with React then maybe that would be enough to close this ticket?","updated_at":"2023-05-06T14:48:26Z","created_at":"2023-05-06T14:48:26Z","creator_user_login":"butchler"}
{"number":14543,"comment_id":"452237355","body":"@liyuanqiu you can use updater function in setCount \r\n\r\n`  const handleClick = useCallback(() => setCount(prevCount => prevCount + 1), []);`\r\n\r\n  [`useState` API reference](https://reactjs.org/docs/hooks-reference.html#usestate)\r\n\r\n","updated_at":"2019-01-08T09:49:24Z","created_at":"2019-01-08T09:48:08Z","creator_user_login":"saranchonkau"}
{"number":14543,"comment_id":"452256357","body":"> @liyuanqiu you can use updater function in setCount\r\n> \r\n> ` const handleClick = useCallback(() => setCount(prevCount => prevCount + 1), []);`\r\n> \r\n> [`useState` API reference](https://reactjs.org/docs/hooks-reference.html#usestate)\r\n\r\n@Saranchenkov Thank you very much, it's all my fault haven't read the document carefully.\r\n\r\nBut I have another question. As I said before:\r\n> So, in fact, the inputs array decide two things:\r\n> 1. when to recreate the callback\r\n> 2. which state can be accessed in the callback\r\n\r\nSometimes I want to do some side effect in hooks like `useEffect`, for example:\r\n```javascript\r\nconst [count, setCount] = useState(0);\r\nuseEffect(() => {\r\n  // send count to server every 5 seconds\r\n  const id = setInterval(() => {\r\n    xhr(count);\r\n  }, 5000);\r\n  return () => clearInterval(id);\r\n}, []);\r\n```\r\n\r\nIf I pass `[count]` to `useEffect`, the interval will be cleared and recreated.\r\nIf I pass `[]` to `useEffect`, I can not get the latest count.\r\n\r\nIn this situation, maybe a get function is needed?","updated_at":"2019-01-08T11:10:57Z","created_at":"2019-01-08T10:50:01Z","creator_user_login":"liyuanqiu"}
{"number":14543,"comment_id":"452676760","body":"You could probably do something like this\r\n```js\r\nconst [count, setCount] = useState(0);\r\nconst countRef = useRef(count)\r\nuseEffect(() => {\r\n  countRef.current = count\r\n}, [count])\r\nuseEffect(() => {\r\n  // send count to server every 5 seconds\r\n  const id = setInterval(() => {\r\n    xhr(countRef.current);\r\n  }, 5000);\r\n  return () => clearInterval(id);\r\n}, []);\r\n```","updated_at":"2019-01-09T12:17:02Z","created_at":"2019-01-09T12:17:02Z","creator_user_login":"escaton"}
{"number":14543,"comment_id":"452683069","body":"> You could probably do something like this\r\n> \r\n> ```js\r\n> const [count, setCount] = useState(0);\r\n> const countRef = useRef(count)\r\n> useEffect(() => {\r\n>   countRef.current = count\r\n> }, [count])\r\n> useEffect(() => {\r\n>   // send count to server every 5 seconds\r\n>   const id = setInterval(() => {\r\n>     xhr(countRef.current);\r\n>   }, 5000);\r\n>   return () => clearInterval(id);\r\n> }, []);\r\n> ```\r\n\r\nThank you @escaton , `useRef` really can solve this problem.\r\n\r\nAnd the official document thinks this is `convoluted` but `bearable`:\r\n> This is a rather convoluted pattern but it shows that you can do this escape hatch optimization if you need it. It’s more bearable if you extract it to a custom Hook\r\n\r\nBut I think it is more like a workaround, couldn't be a paradigm.\r\n\r\nOne component may have many states. Using three kinds of hooks and five lines of code(or using a custom hook to replace `useState`) to define an internal state will be a disaster.\r\n\r\n\r\n","updated_at":"2019-01-09T12:41:16Z","created_at":"2019-01-09T12:41:16Z","creator_user_login":"liyuanqiu"}
{"number":14543,"comment_id":"452690318","body":"I really like the suggestion for having pair of getter and setter returned from `useState`.. which would make it easier to keep things fresh.. if it doesn't end up in the official implementation, I think it can be implemented in user land using custom hook like:\r\n\r\n```js\r\nconst useGetterState = (initialState) => {\r\n  const [state, setState] = useState(initialState);\r\n  const stateRef = useRef(state);\r\n  useEffect(() => {\r\n    stateRef.current = state\r\n  }, [state]);\r\n\r\n  return [() => stateRef.current, setState];\r\n}\r\n```\r\n?","updated_at":"2019-01-09T13:08:19Z","created_at":"2019-01-09T13:08:19Z","creator_user_login":"ignatiusreza"}
{"number":14543,"comment_id":"452702482","body":"@liyuanqiu \r\nI see such options:\r\n- use ref for holding the whole callback rather then single state\r\n- create custom `useStateWithRef()` hook which could decorate the original `useState` and mirror value to `ref.current`\r\n- reimplement timer logic so it would be able to resume after state changing\r\n```js\r\nconst [count, setCount] = useState(0);\r\nconst timerAdjustment = useRef(0)\r\nuseEffect(() => {\r\n  let id;\r\n  let absoluteTimeout;\r\n  function tick(firstTime) {\r\n    // call xhr only on subsequent calls\r\n    !firstTime && xhr(count)\r\n    // schedule timer considering previous call\r\n    const adjustment = timerAdjustment.current\r\n    const timeout = adjustment > 0 ? adjustment : 5000\r\n    // remember absolute time to calc adjusted timeout later\r\n    absoluteTimeout = Date.now() + timeout\r\n    // reset timer adjustment\r\n    timerAdjustment.current = 0\r\n    id = setTimeout(tick, timeout)\r\n  }\r\n  tick(true)\r\n  return () => {\r\n    clearTimeout(id)\r\n    // set timer adjustment\r\n    timerAdjustment.current = absoluteTimeout - Date.now()\r\n  }\r\n}, [count])\r\n```\r\n\r\n@ignatiusreza there is the problem with your solution:\r\n```js\r\n[getCount, setCount] = useGetterState(0)\r\nreturn (\r\n  <button onClick={() => setCount(c => c+1)}>\r\n    {getCount()} - increment\r\n  </button>\r\n)\r\n```\r\non the first render in would be \"0 - increment\", but after click it would be still \"0 - increment\" and only on second click it will update. That's because you mutate the reference in `useEffect` which is fired _after_ component renders.\r\nAnd while it is fixable:\r\n```js\r\nfunction useStateWithGetter(initial) {\r\n  const [state, setState] = useState(initial)\r\n  const ref = useRef(state)\r\n  const updater = value => {\r\n    if (typeof value === 'function') {\r\n      setState(prev => {\r\n        const result = value(prev);\r\n        ref.current = result\r\n        return result\r\n      })\r\n    } else {\r\n      ref.current = value\r\n      setState(value)\r\n    }\r\n  }\r\n  const getter = () => ref.current\r\n  return [state, updater, getter]\r\n}\r\n```\r\nthere are still issues, because now we referencing _last scheduled_ state, not the current.\r\n\r\n**upd**:\r\nHmm, what if...\r\n```js\r\nfunction useStateWithRef(initial) {\r\n  const [state, setState] = useState(initial)\r\n  const ref = useRef()\r\n  ref.current = state\r\n  return [state, setState, ref]\r\n}\r\n```","updated_at":"2019-01-09T19:21:12Z","created_at":"2019-01-09T13:49:37Z","creator_user_login":"escaton"}
{"number":14543,"comment_id":"452713416","body":"Just to set expectations, we’ve considered all these options a few months ago and decided against them at the time. I’ll keep this open so we can later provide a better response. I don't remember off the top of my mind what the problems were.","updated_at":"2019-01-09T14:23:59Z","created_at":"2019-01-09T14:23:38Z","creator_user_login":"gaearon"}
{"number":14543,"comment_id":"452992133","body":"I think this is an elegant solution: https://codesandbox.io/s/m1y7vl0vp\r\n\r\n```javascript\r\nfunction App() {\r\n  const [count, setCount] = useState(0);\r\n\r\n  // ***** Initialize countRef.current with count\r\n  const countRef = useRef(count);\r\n\r\n  const handleClick = useCallback(() => setCount(add1), []);\r\n\r\n  useEffect(() => {\r\n    // ***** countRef.current is xhr function argument\r\n    const intervalId = setInterval(() => xhr(countRef.current), 5000);\r\n    return () => clearInterval(intervalId);\r\n  }, []);\r\n\r\n  // ***** Set countRef.current to current count\r\n  countRef.current = count;\r\n\r\n  return (\r\n    <div>\r\n      <p>You clicked {count} times</p>\r\n      <button onClick={handleClick}>Click me</button>\r\n    </div>\r\n  );\r\n}\r\n```\r\n","updated_at":"2019-01-10T07:05:32Z","created_at":"2019-01-10T07:05:32Z","creator_user_login":"btraljic"}
{"number":14543,"comment_id":"452992433","body":"> @liyuanqiu\r\n> I see such options:\r\n> \r\n> * use ref for holding the whole callback rather then single state\r\n> * create custom `useStateWithRef()` hook which could decorate the original `useState` and mirror value to `ref.current`\r\n> * reimplement timer logic so it would be able to resume after state changing\r\n\r\n@escaton Maybe only the second option is effective.\r\n\r\n---\r\n\r\n> * use ref for holding the whole callback rather then single state\r\n\r\nDo you mean https://codesandbox.io/s/jj40lz07l3 ?\r\n```javascript\r\n/* code snippets */\r\nconst [count, setCount] = useState(0);\r\nconst repeat = useRef(() => xhr(count));\r\nuseEffect(() => {\r\n    const intervalId = setInterval(repeat.current, 1000);\r\n    return () => clearInterval(intervalId);\r\n}, []);\r\n```\r\nNot working too.\r\n\r\n> * reimplement timer logic so it would be able to resume after state changing\r\n\r\nIt's not the timer's problem. When you use event dispatcher, WebSocket, ajax, promise, same problem. I think no one dares to reimplement them just for adopting React Hooks API.","updated_at":"2019-01-10T07:06:55Z","created_at":"2019-01-10T07:06:55Z","creator_user_login":"liyuanqiu"}
{"number":14543,"comment_id":"452996126","body":"@btraljic yeah, i suggested the same thing\r\n>```js\r\n>function useStateWithRef(initial) {\r\n>  const [state, setState] = useState(initial)\r\n>  const ref = useRef()\r\n>  ref.current = state\r\n>  return [state, setState, ref]\r\n>}\r\n>```\r\n\r\nit should work, but it brings side effect `countRef.current = count;` in the component body rather then in `useEffect` and that confuses.\r\n\r\n@liyuanqiu https://codesandbox.io/s/72jlzz1o86\r\n```diff\r\n+useEffect(\r\n+    () => {\r\n+      repeat.current = () => xhr(count);\r\n+    },\r\n+    [count]\r\n+  );\r\n\r\n-const intervalId = setInterval(repeat.current, 1000);\r\n+const intervalId = setInterval(() => repeat.current(), 1000);\r\n```\r\n\r\n>It's not the timer's problem. When you use event dispatcher, WebSocket, ajax, promise, same problem. I think no one dares to reimplement them just for adopting React Hooks API.\r\n\r\nBy the reimplementation i mean the proper restart of effect, not the `setInterval` itself. There is nothing wrong with it, you just want different behaviour.\r\nCould you provide different example with WebSocket or promise?","updated_at":"2019-01-10T07:32:36Z","created_at":"2019-01-10T07:25:28Z","creator_user_login":"escaton"}
{"number":14543,"comment_id":"452996829","body":"@btraljic Thank you.\r\nI think this line of code been written in the function body is not encouraged by Hooks API:\r\n```javascript\r\ncountRef.current = count;\r\n```\r\n\r\n@see https://reactjs.org/docs/hooks-reference.html#useeffect\r\n> Mutations, subscriptions, timers, logging, and other side effects are not allowed inside the main body of a function component (referred to as React’s render phase). Doing so will lead to confusing bugs and inconsistencies in the UI.\r\n\r\nAny state change will lead this line been executed. Although in this example, there's no wrong.\r\n\r\nIf doing so, I think maybe it's better to put it in `useLayoutEffect`:\r\n```javascript\r\nuseLayoutEffect(() => {\r\n  countRef.current = count;\r\n});\r\n```\r\n\r\nAnd think deeper, here we rely on the layout update to update `countRef`. Actually, it does not rely on layout update, it relies on the change of state: `count`.\r\n\r\nSo finally, it turns back to:\r\nhttps://github.com/facebook/react/issues/14543#issuecomment-452676760","updated_at":"2019-01-10T07:28:55Z","created_at":"2019-01-10T07:28:55Z","creator_user_login":"liyuanqiu"}
{"number":14543,"comment_id":"452998770","body":"Is it ok now :)\r\n`useEffect(() => countRef.current = count);`","updated_at":"2019-01-10T07:38:01Z","created_at":"2019-01-10T07:38:01Z","creator_user_login":"btraljic"}
{"number":14543,"comment_id":"453001460","body":"@btraljic not really :)\r\nnow you have actual value in reference and can use it in next effects, but if once you decide to use it in markup, you would see lag between `state` and `ref`. Look at example in my answer to @ignatiusreza","updated_at":"2019-01-10T07:50:09Z","created_at":"2019-01-10T07:50:09Z","creator_user_login":"escaton"}
{"number":14543,"comment_id":"453003604","body":"@escaton Ok, but we are living in an asynchronous world. Aren't we? :)","updated_at":"2019-01-10T07:59:18Z","created_at":"2019-01-10T07:59:18Z","creator_user_login":"btraljic"}
{"number":14543,"comment_id":"453042096","body":"Speaking about accessing state in `setInterval` — i came up with another idea.\r\nIt can be treated as two separate side effects: one is timer tick, another is `xhr`.\r\nSo it could be\r\n```js\r\nconst [count, setCount] = useState(0)\r\nconst [tick, setTick] = useState(0)\r\n\r\nuseEffect(() => {\r\n  const timerId = setInterval(() => {\r\n    setTick(t => t+1)\r\n  }), 5000)\r\n  return () => clearInterval(timerId)\r\n}, [])\r\n\r\nuseEffect(() => {\r\n  xhr(count)\r\n}, [tick])\r\n```\r\nPros: easy to understand what happens, no refs\r\nCons: wasteful rerenders on `tick` updates every 5 seconds","updated_at":"2019-01-10T10:17:18Z","created_at":"2019-01-10T10:13:05Z","creator_user_login":"escaton"}
{"number":14543,"comment_id":"453058025","body":"I usually use this way with reducer\r\n```js\r\nconst [count, setCount] = useState(0)\r\nconst [commitIndex, commit] = React.useReducer(state => state +1, 0)\r\n\r\nuseEffect(() => {\r\n  const timerId = setInterval(commit, 5000)\r\n  return () => clearInterval(timerId)\r\n}, [])\r\n\r\nuseEffect(() => {\r\n  xhr(count)\r\n}, [commitIndex])\r\n```","updated_at":"2019-01-10T11:06:58Z","created_at":"2019-01-10T11:06:58Z","creator_user_login":"TrySound"}
{"number":14543,"comment_id":"453076640","body":"If we can use reft to hold state, why not just use an global object?\r\n\r\n```js\r\nconst obj = {}\r\nfunction Comp() {\r\n  const [count, setCount] = useState(0)\r\n\r\n  useEffect(() => {\r\n    xhr(obj.count)\r\n  })\r\n\r\n  obj.count = count\r\n}\r\n```\r\nSo `obj` may hold multi state for one component.","updated_at":"2019-01-10T12:18:49Z","created_at":"2019-01-10T12:18:28Z","creator_user_login":"Jokcy"}
{"number":14543,"comment_id":"453079958","body":"Doing so, you can't use more than one `Comp` on the page, but it could be fixed\r\n```js\r\nfunction CompFabric () {\r\n  const obj = {}\r\n  return function Comp() {\r\n    const [count, setCount] = useState(0)\r\n  \r\n    useEffect(() => {\r\n      xhr(obj.count)\r\n    })\r\n  \r\n    obj.count = count\r\n  }\r\n}\r\n```\r\nAlthough it's almost same as `useRef` i strongly discourage you to use it. It is both non idiomatic and confuses other contributors.","updated_at":"2019-01-10T12:31:05Z","created_at":"2019-01-10T12:31:05Z","creator_user_login":"escaton"}
{"number":14543,"comment_id":"453081655","body":"Everybody here tells many solutions, but really like a sentence: \"[Life, Uh, Finds a Way.](https://knowyourmeme.com/memes/life-uh-finds-a-way)\"\r\nJust a joke, no offense :)\r\n\r\nLook back, my requirement is so easy, just want to repeatedly send a state to server. But with React Hooks API, it became strange and complex.\r\n\r\nLet's see how to program in old class style:\r\n\r\nhttps://codesandbox.io/s/40p9qqr009\r\n\r\n```javascript\r\nclass App extends React.Component {\r\n  state = {\r\n    count: 0,\r\n  };\r\n\r\n  handleClick = () => {\r\n    const { count } = this.state;\r\n    this.setState({\r\n      count: count + 1,\r\n    });\r\n  };\r\n\r\n  xhr = () => {\r\n    const { count } = this.state;\r\n    console.log(`Send ${count} to server.`);\r\n    // TODO send count to my server by XMLHttpRequest\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.intervalId = setInterval(this.xhr, 1000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.intervalId);\r\n  }\r\n\r\n  render() {\r\n    const { count } = this.state;\r\n    return (\r\n      <div>\r\n        <p>You clicked {count} times</p>\r\n        <button onClick={this.handleClick}>Click me</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n```\r\n\r\nNaturally and reasonable, right? No magic, no tricks.\r\n\r\nI hope Hooks API will finally be so.\r\n\r\nI complain a lot, don't diss me 🙏 XD\r\n\r\n","updated_at":"2019-01-10T13:17:02Z","created_at":"2019-01-10T12:37:09Z","creator_user_login":"liyuanqiu"}
{"number":14543,"comment_id":"453084969","body":"Sure, it looks familiar.\r\nThe only difference with hooks here is that component's `state` is explicitly bounded to instance and so could be accessed with `this` anywhere.\r\nTo achieve the same in functional component it needs to break the rule and to bound state to ref right in the component body without `useEffect` wrapping.\r\nLet's wait for @gaearon asnwer.","updated_at":"2019-01-10T12:50:04Z","created_at":"2019-01-10T12:50:04Z","creator_user_login":"escaton"}
{"number":14543,"comment_id":"460174180","body":"I guess this is it https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\n:)","updated_at":"2019-02-04T09:04:34Z","created_at":"2019-02-04T09:04:34Z","creator_user_login":"escaton"}
{"number":14543,"comment_id":"460361175","body":"> I guess this is it https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\n> :)\r\n\r\nIn this post, a pattern is introduced to capsulate those APIs who has “impedance mismatch” with the React programming model.\r\n\r\nSo we have to write helper functions(custom hooks) to help us using these APIs. That's still annoying.\r\n\r\nAlthough Dan's `useInterval` brings many great features like `dynamic delay` and `pause and resume` to `setInterval`, but that's not the first motivation to write `useInterval`. Those great features are just derivatives.\r\n\r\nWe may encounter many APIs that has “impedance mismatch” with the React programming model. Capsulating them one by one just like `@types/xxx` in `Typescript` is hard. Maybe I should create an organization named `DefinitelyHooked` 😀.\r\n\r\n> This is an early time for Hooks, and there are definitely still patterns we need to work out and compare. Don’t rush to adopt Hooks if you’re used to following well-known “best practices”. There’s still a lot to try and discover.","updated_at":"2019-02-04T18:37:28Z","created_at":"2019-02-04T18:37:28Z","creator_user_login":"liyuanqiu"}
{"number":14543,"comment_id":"461299481","body":"Ok so it seems like the solution to this is this:??\r\n```\r\nfunction useStateWithRef(initial) {\r\n  const ref = useRef();\r\n  const [state, setState] = useState(initial);\r\n  ref.current = state;\r\n  useEffect( () =>{\r\n    ref.current = state;\r\n  });\r\n  return [state, setState, ref];\r\n}\r\n```\r\n\r\nI def see the value in having a getter on hooks. ","updated_at":"2019-02-07T06:09:53Z","created_at":"2019-02-07T06:09:22Z","creator_user_login":"joepuzzo"}
{"number":14543,"comment_id":"461422905","body":"On second thought.. why not just do this?? \r\n\r\n```\r\nfunction useStateWithGetter(initial) {\r\n  const ref = useRef();\r\n  const [state, setState] = useState(initial);\r\n  ref.current = state;\r\n  const set = (value) => {\r\n    ref.current = value;\r\n    setState(value);\r\n  };\r\n  const get = () => {\r\n    return ref.current;\r\n  };\r\n  return [state, set, get];\r\n}\r\n```","updated_at":"2019-02-07T13:50:44Z","created_at":"2019-02-07T13:41:13Z","creator_user_login":"joepuzzo"}
{"number":14543,"comment_id":"462668678","body":"mark","updated_at":"2019-02-12T08:41:09Z","created_at":"2019-02-12T08:41:09Z","creator_user_login":"murrayee"}
{"number":14543,"comment_id":"465282382","body":"@gaearon You mentioned this was discussed previously and left it open. Can we start this conversation back up? Or at the very least, verify that the solution above is an ok practice. ","updated_at":"2019-02-19T19:46:13Z","created_at":"2019-02-19T19:46:13Z","creator_user_login":"joepuzzo"}
{"number":14543,"comment_id":"469103767","body":"https://overreacted.io/how-are-function-components-different-from-classes/\r\nThis article may help to understand the behavior of Hooks API(actually is Functional Component).\r\nIt's highly recommended to spend half an hour to read it.","updated_at":"2019-03-04T03:13:13Z","created_at":"2019-03-04T03:13:13Z","creator_user_login":"liyuanqiu"}
{"number":14543,"comment_id":"469105472","body":"Just read that article... it basically reassures the solution above would work for adding a getter.","updated_at":"2019-03-04T03:23:36Z","created_at":"2019-03-04T03:23:36Z","creator_user_login":"joepuzzo"}
{"number":14543,"comment_id":"478351866","body":"[`A Complete Guide to useEffect`](https://overreacted.io/a-complete-guide-to-useeffect/) touches this subject quite a lot too. Really recommend reading it through, it was an eye opener for me.","updated_at":"2019-03-31T15:33:17Z","created_at":"2019-03-31T15:33:17Z","creator_user_login":"danielkcz"}
{"number":14543,"comment_id":"1017094147","body":"Until now, Do we still have to do use `ref` as escape hatch to resolve those problem which have “impedance mismatch” with the React programming model? @gaearon ","updated_at":"2022-01-20T03:57:32Z","created_at":"2022-01-20T03:51:22Z","creator_user_login":"genshinw"}
{"number":14543,"comment_id":"1018071214","body":"@joepuzzo I like the version with no `useEffect`! But I don't think your code snippet handles the setter being called with a function. Not hard to update it, looking at how React itself does it in https://github.com/facebook/react/blob/b53ea6ca05d2ccb9950b40b33f74dfee0421d872/packages/react-dom/src/server/ReactPartialRendererHooks.js#L251\r\n\r\n```\r\nfunction useStateWithGetter(initial) {\r\n  const ref = useRef(initial);\r\n  const [state, setState] = useState(initial);\r\n  const set = (valueOrUpdater) => {\r\n    if (typeof valueOrUpdater === 'function') {\r\n      setState((prev) => {\r\n        ref.current = valueOrUpdater(prev);\r\n        return ref.current;\r\n      })\r\n    } else {\r\n      ref.current = value;\r\n      setState(value);\r\n    }\r\n  };\r\n  const get = () => {\r\n    return ref.current;\r\n  };\r\n  return [state, set, get];\r\n}\r\n```\r\n","updated_at":"2022-01-21T01:13:19Z","created_at":"2022-01-21T01:12:48Z","creator_user_login":"johnnysprinkles"}
{"number":14543,"comment_id":"1018622540","body":"Yup That would do the trick @johnnysprinkles ! I have done that in the past as well. For anyone here that is saying that a getter is not a good pattern I disagree. I have been developing an OS form library for years and this pattern becomes valuable.  The key is some things in JS might have a reference to a value in state and they cant use the outdated version. You either pass around a ref or you use a getter.  ","updated_at":"2022-01-21T15:40:42Z","created_at":"2022-01-21T15:40:42Z","creator_user_login":"joepuzzo"}
{"number":14543,"comment_id":"1020076764","body":"> @joepuzzo I like the version with no `useEffect`! But I don't think your code snippet handles the setter being called with a function. Not hard to update it, looking at how React itself does it in\r\n> \r\n> https://github.com/facebook/react/blob/b53ea6ca05d2ccb9950b40b33f74dfee0421d872/packages/react-dom/src/server/ReactPartialRendererHooks.js#L251\r\n> \r\n> ```\r\n> function useStateWithGetter(initial) {\r\n>   const ref = useRef(initial);\r\n>   const [state, setState] = useState(initial);\r\n>   const set = (valueOrUpdater) => {\r\n>     if (typeof valueOrUpdater === 'function') {\r\n>       setState((prev) => {\r\n>         ref.current = valueOrUpdater(prev);\r\n>         return ref.current;\r\n>       })\r\n>     } else {\r\n>       ref.current = value;\r\n>       setState(value);\r\n>     }\r\n>   };\r\n>   const get = () => {\r\n>     return ref.current;\r\n>   };\r\n>   return [state, set, get];\r\n> }\r\n> ```\r\n\r\nI think set `ref.current` when `setState` will cause some issue in concurrent mode.","updated_at":"2022-01-24T13:03:00Z","created_at":"2022-01-24T13:03:00Z","creator_user_login":"genshinw"}
{"number":24997,"comment_id":"1196421417","body":"if I move the local variable to component scope, the ignoring check works.\r\n```javascript\r\nexport default function App() {\r\n  let ignore = false;  // works, if variable is placed here\r\n  useEffect(() => {\r\n    console.log(\"mounted\", ignore);\r\n\r\n    async function startFetching() {\r\n      if (!ignore) {\r\n        console.log(\"do something\");\r\n      }\r\n    }\r\n\r\n    startFetching();\r\n\r\n    return () => {\r\n      ignore = true;\r\n      console.log(\"cleanup\", ignore);\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">something</div>\r\n  );\r\n}\r\n\r\n```\r\n\r\nI got:\r\n```text\r\nmounted false\r\ndo something \r\ncleanup true\r\nmounted true\r\n```\r\n\r\nHowever, this is not following the way the [doc](https://beta.reactjs.org/learn/synchronizing-with-effects#how-to-handle-the-effect-firing-twice-in-development) introduced.\r\n\r\nDid I miss something? \r\nApologize if it is not a bug(react bug or doc mistake).","updated_at":"2022-07-27T08:32:28Z","created_at":"2022-07-27T08:30:30Z","creator_user_login":"Jerenyaoyelu"}
{"number":24997,"comment_id":"1196477516","body":"> as [doc](https://beta.reactjs.org/learn/synchronizing-with-effects#how-to-handle-the-effect-firing-twice-in-development) says the do something should be only logged once.\r\n\r\nThe docs don't say that. They say you should do the cleanup to fix issues caused by running effects twice (e.g. race conditions if a request is made twice but the response comes back out-of-order).\r\n\r\nThe logging will still happen twice since the effect will still fire twice. Cleanup just makes sure the user doesn't see the double effect. \r\n\r\nIf a `console.log` is user-observable then your cleanup needs to make sure it can clean it up. Since the browser console is append-only that's not possible. \r\n\r\nBut the browser console is usually only for development. Maybe you can explain in more detail why the console is relevant to the user?","updated_at":"2022-07-27T09:18:36Z","created_at":"2022-07-27T09:18:36Z","creator_user_login":"eps1lon"}
{"number":24997,"comment_id":"1197598142","body":"> \r\n\r\nconsole here is just an example indicating there is some logic handling. I understood the cleanup is to fix issues caused by double firing.\r\n\r\nMy point is that if the logic handling under the local variable check block(`if (!ignore)`) still will run twice, why do we bother to put a local variable check?  It is a fake check because the `!ignore` will be true in both fires.\r\n\r\nFollow the doc, it looks like the local variable check at least can manage one skip of the `do something` code. Otherwise, it is meaningless to have such local variable and such condition check `if (!ignore)`.  We can simply do cleanup like the following:\r\n\r\n```javascript\r\nexport default function App() {\r\n  useEffect(() => {\r\n    async function startFetching() {\r\n      console.log(\"do something\");\r\n    }\r\n\r\n    startFetching();\r\n\r\n    return () => {\r\n      console.log(\"undo something\");\r\n    };\r\n  }, []);\r\n  return (\r\n    <div className=\"App\">something</div>\r\n  );\r\n}\r\n\r\n```\r\n\r\nNot sure if I explain my point clearly 🤣 .","updated_at":"2022-07-28T03:05:03Z","created_at":"2022-07-28T03:01:56Z","creator_user_login":"Jerenyaoyelu"}
{"number":24997,"comment_id":"1197872449","body":">  I understood the cleanup is to fix issues caused by double firing.\r\n\r\nYes and it does. \r\n\r\n> My point is that if the logic handling under the local variable check block(if (!ignore)) still will run twice, why do we bother to put a local variable check? It is a fake check because the !ignore will be true in both fires.\r\n\r\nThe point was not to prevent running twice. Then StrictMode would be pointless. The goal is to have effects be robust against running twice by nudging you to implement correct cleanup logic. For a fetch that usually means preventing a state update from a fetch that was aborted (i.e. `ignore` is now `true`).","updated_at":"2022-07-28T09:06:44Z","created_at":"2022-07-28T09:06:44Z","creator_user_login":"eps1lon"}
{"number":25007,"comment_id":"1199660373","body":"Hey! I tried to test out your project, but I only see the create react app logo.\r\n![image](https://user-images.githubusercontent.com/2735514/181801984-f8cef477-bece-4c21-a781-87fd82ef40e9.png)\r\n\r\ncould you upload a version of your app on github or codesandbox so we can debug further? Thanks!","updated_at":"2022-07-29T16:19:44Z","created_at":"2022-07-29T16:19:44Z","creator_user_login":"lunaruan"}
{"number":25007,"comment_id":"1207119686","body":"Is your app something that resembles this? https://reactjsexample.com/create-a-make-your-own-color-palette-app-using-react-framework/    --->github:      https://github.com/Colt/react-colors","updated_at":"2022-08-06T01:31:15Z","created_at":"2022-08-06T01:30:59Z","creator_user_login":"hanswang123456"}
{"number":25007,"comment_id":"1247101139","body":"I've runned into the same issue recently and mine was caused by duplicate keys when mapping a list of items into renders function. Fixed the issue by update keys to use unique identifier.","updated_at":"2022-09-14T17:42:31Z","created_at":"2022-09-14T17:42:31Z","creator_user_login":"j56xie"}
{"number":25007,"comment_id":"1254285874","body":"Just had this pop on our codebase while refactoring some old code. This seems to be an issue with rendering sub-components with duplicate keys in the devtools.\r\nI've uploaded an MRE here: https://github.com/MidnightTinge/gh-react-25007\r\n\r\nThe way to trigger the error is to flip the `<Item/>` component's `key` prop value from `key` to `value`. This should trigger the error, and the button on the page automates this process.\r\n\r\nAfter re-reading I realized my naming was probably confusing. To trigger the specific error, the keys need to go from duplicate to non-duplicate while the devtools are open.","updated_at":"2022-09-21T22:15:44Z","created_at":"2022-09-21T22:15:44Z","creator_user_login":"MidnightTinge"}
{"number":25007,"comment_id":"1370072479","body":"I had the same issue and it was because I had multiple `list item` with the same `key` value, so during the update it was behaving incorrectly and throwing this error.","updated_at":"2023-01-03T18:05:20Z","created_at":"2023-01-03T18:04:37Z","creator_user_login":"hrasekh"}
{"number":25007,"comment_id":"1509893469","body":"I also had the same issue i fixed it by giving unique id to key .","updated_at":"2023-04-15T17:01:33Z","created_at":"2023-04-15T17:01:33Z","creator_user_login":"navneetMukrah"}
{"number":25007,"comment_id":"1574107486","body":"unique id is the solution, just fix mine now","updated_at":"2023-06-02T17:54:41Z","created_at":"2023-06-02T17:54:41Z","creator_user_login":"ChichebeDarlington"}
{"number":25007,"comment_id":"1574604360","body":"> I've runned into the same issue recently and mine was caused by duplicate keys when mapping a list of items into renders function. Fixed the issue by update keys to use unique identifier.\r\nThis is the solution \r\n","updated_at":"2023-06-03T03:22:05Z","created_at":"2023-06-03T03:22:05Z","creator_user_login":"HamaydaGabsi"}
{"number":25007,"comment_id":"1574609986","body":"not having duplicate keys is react 101 (and an easy mistake to make, I still oppsie that one myself sometimes while prototyping 😁) so while it may mask the underlying issue, this is technically not resolved until devtools specifically don't report it as a problem. this doesn't appear to be anywhere on the team's radar, but the ticket should probably stay open until that happens","updated_at":"2023-06-03T03:33:35Z","created_at":"2023-06-03T03:33:35Z","creator_user_login":"MidnightTinge"}
{"number":15069,"comment_id":"472012103","body":"For now we'd rather not allow it because it makes it too easy to swallow errors (such as if the error boundary itself is buggy).","updated_at":"2019-03-12T13:59:05Z","created_at":"2019-03-12T13:59:05Z","creator_user_login":"gaearon"}
{"number":15069,"comment_id":"472490039","body":"Right, I see reasoning in that, preventing error logging should require more than just the existance of a boundary.\r\n\r\nBrowsers allow to suppress logging uncaught errors to the console via `event.preventDefault()` in a `error` event handler on `window`. Maybe a something similar could be done from a error boundary too, like `error.preventDefault()`.","updated_at":"2019-03-13T16:07:21Z","created_at":"2019-03-13T16:07:21Z","creator_user_login":"silverwind"}
{"number":15069,"comment_id":"478040351","body":"Error swallowing should be opt-in. I'd like to swallow certain errors and not others:\r\n\r\n```\r\ncomponentDidCatch(error) {\r\n  // I'd like to swallow the error\r\n  if (error instanceof MyExpectedError) {\r\n    // somehow suppress the error?\r\n  }\r\n}\r\n```","updated_at":"2019-03-29T15:27:56Z","created_at":"2019-03-29T15:27:56Z","creator_user_login":"anilanar"}
{"number":15069,"comment_id":"481476481","body":"I'd support this feature as it would be nice to de-clutter our test output.","updated_at":"2019-04-09T23:44:43Z","created_at":"2019-04-09T23:26:17Z","creator_user_login":"jamstooks"}
{"number":15069,"comment_id":"489614800","body":"@gaearon \r\n\r\nconsider the following production issue we are facing:\r\nWe are using a third party logging service, that logs all `console.error` calls automagically- which is debatably awesome and at the same time a given fact.\r\n\r\nNaturally, we have our own ErrorBoundary implementation:\r\nWe want to slap on extra information special to the boundary instance-\r\nSo our error boundary component receives this information as props / context,\r\nAnd logs the error along this information using the third party's sdk when an error occurs.\r\n\r\nAs a result of this implementation, when a component fails, we have two separate errors logged in our monitoring pipeline:\r\nOne which react logs, with barely any info, which comes from `console.error`\r\nAnd one with everything we need to know, which we explicitly logged via the third party library.\r\n\r\nSince this redundancy is confusing and not acceptable\r\nWe are now facing quite a dilemma:\r\n\r\nIf we don't explicitly log, we lose error specific info.\r\nWe also rely on react to do the logging for us, which is a bad idea in the long run.\r\n\r\nif we explicitly log - we get two separate events in our monitoring pipeline, which is confusing and noisy, since our monitoring pipeline is automated and triggers a whole lot of internal processes.\r\n\r\nI bet that we both believe `console.error` to be a side effect.\r\nAs an app developer, wouldn't you agree with me that such a side effect should not be invoked by a UI library without the possibility to opt out?\r\n\r\nIt's great that I can isolate failures to granular regions in the application- anything other than that, should not be decided for me as a developer.\r\nI wouldn't want to see anything in the console which I did not put there.\r\nEspecially if it renders the entire stack of my component tree structure, uglified or not.\r\n\r\nOn the other hand, I do understand where you're coming from by saying you don't want it to be easy to swallow errors, so how about this as middle ground: \r\nYou could move the invocation of `console.error` to `componentDidCatch`,\r\nWhich would be the default implementation unless overriden.\r\n\r\nif you think of it, this is the correct thing to do, since `componentDidCatch` is meant for exactly this.\r\nTo quote the docs: \r\n\r\n> componentDidCatch() is called during the “commit” phase, so side-effects are permitted. It should be used for things like logging errors\r\n\r\nyou say `console.error` and I say `thirdPartyLibrary.logError`.\r\n\r\nThe means of logging should be up to app developers, especially if they went through the trouble of setting up Error Boundaries.\r\n\r\nSince Error Boundaries are basically logging components with some conditional rendering, and since I bet our logging provider is not the only one which logs `console.error` calls, wouldn't you say this issue should be solved in a more extensible manner?\r\n\r\nAs for buggy error boundaries, IMHO, you should not care about them.\r\nIt's just another failed component, so let it fail until it either crashes the entire tree or another boundary catches it. Since react is solely a UI rendering library, why should it decide what happens when rendering fails?","updated_at":"2019-05-07T07:24:18Z","created_at":"2019-05-06T13:11:37Z","creator_user_login":"EyalPerry"}
{"number":15069,"comment_id":"490436054","body":"@EyalPerry hit the nail on the head. Is there anything more to say? Shall we patch `console.error`? ","updated_at":"2019-05-08T10:33:48Z","created_at":"2019-05-08T10:33:48Z","creator_user_login":"anilanar"}
{"number":15069,"comment_id":"548092991","body":"@anilanar I completely agree with you, I think we should really have the possibility to suppress the logging of some errors which have been handled in error boundaries.\r\n\r\nI think that we should have the power and responsibility to decide what to log and what not to log, especially in production.\r\n\r\nIn my case, if my app has been deployed in production and an error boundary catches an error, I wouldn't want to log the error to the console leading to information disclosure for some \"more smart\" users who open the browser's console to see what went wrong, or at least, I would want to be able to decide whether to log a certain error captured by an error boundary or not.\r\n\r\nAlso, I think that, when using `create-react-app`, it would be great to have the ability to suppress the error overlay for some errors caught by the error boundary (not all, but some), but that's another story...","updated_at":"2019-10-30T20:20:51Z","created_at":"2019-10-30T20:15:27Z","creator_user_login":"tonix-tuft"}
{"number":15069,"comment_id":"563361764","body":"It would be nice to have a control on logging errors to console.\r\n\r\nFor example, I like to use Error Boundaries for handling 404 exceptions in my apps. This way I don't need to call a redirect to some route or put the rendering logic inside my components.\r\n\r\nRegularly I just throw a `NotFoundException` and seeing an error in console is not something I expect.\r\n\r\nI would agree with @EyalPerry that moving the logging into default componentDidCatch would be a nice solution.","updated_at":"2020-07-10T03:46:02Z","created_at":"2019-12-09T18:11:31Z","creator_user_login":"ElForastero"}
{"number":15069,"comment_id":"596240247","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-03-08T19:07:08Z","created_at":"2020-03-08T19:07:08Z","creator_user_login":"stale[bot]"}
{"number":15069,"comment_id":"596246420","body":"Don’t close. We can’t seriously unconditionally log this anymore.","updated_at":"2020-03-08T20:06:45Z","created_at":"2020-03-08T20:06:45Z","creator_user_login":"anilanar"}
{"number":15069,"comment_id":"605908964","body":"I have the opposite problem. Error is __not__ logged to console in dev build.  \r\n\r\n`The above error occurred in the...`, but nothing is above.\r\n\r\nSo if I `console.error` it in `componentDidCatch` it works in dev, but now I have two duplicate errors logged in prod.\r\n\r\nv16.13.1","updated_at":"2020-03-30T10:25:14Z","created_at":"2020-03-30T10:08:18Z","creator_user_login":"art-in"}
{"number":15069,"comment_id":"649484364","body":"I'd like this to be fixed as well. The solution @EyalPerry suggested would be perfect.","updated_at":"2020-06-25T11:32:18Z","created_at":"2020-06-25T11:32:18Z","creator_user_login":"zordone"}
{"number":15069,"comment_id":"656352431","body":"I vote for this too. I am also using an error handling mechanism like the one described by @ElForastero. ","updated_at":"2020-07-09T21:08:39Z","created_at":"2020-07-09T21:08:39Z","creator_user_login":"mariuscosta"}
{"number":15069,"comment_id":"667722735","body":"Does anyone have a workaround for this while testing? I want to real-render a component under test, catch the error, and make an assertion without seeing error logging, especially as one [can't hide logging in jest](https://github.com/facebook/jest/issues/4156).","updated_at":"2020-08-02T20:46:11Z","created_at":"2020-08-02T20:46:11Z","creator_user_login":"kumar303"}
{"number":15069,"comment_id":"685091795","body":"> Does anyone have a workaround for this while testing? I want to real-render a component under test, catch the error, and make an assertion without seeing error logging, especially as one [can't hide logging in jest](https://github.com/facebook/jest/issues/4156).\r\n\r\nThis is my hacky workaround:\r\n\r\n```\r\nconst swallowErrors = yourTestFn => {\r\n     const error = console.error\r\n     console.error = () => {}\r\n     yourTestFn()\r\n     console.error = error\r\n}\r\n\r\n// Then your test\r\nit('tests something without console log' , () => {\r\n      swallowErrors(()=>{\r\n            const wrap = mount(<ErBoundary><Child/></ErBoundary>)\r\n            // ... expect errors ...\r\n      })\r\n})\r\n```\r\n\r\n\r\nOr, you can do as this guy [here](https://github.com/facebook/react/issues/11098#issuecomment-423120392) ","updated_at":"2020-09-01T19:49:30Z","created_at":"2020-09-01T19:43:00Z","creator_user_login":"MatiasManevi"}
{"number":15069,"comment_id":"751247005","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2020-12-25T13:07:59Z","created_at":"2020-12-25T13:07:59Z","creator_user_login":"stale[bot]"}
{"number":15069,"comment_id":"752116059","body":"Bump.","updated_at":"2021-04-16T00:09:17Z","created_at":"2020-12-29T15:14:56Z","creator_user_login":"anilanar"}
{"number":15069,"comment_id":"783572001","body":"Bump.","updated_at":"2021-04-16T00:09:12Z","created_at":"2021-02-22T18:19:01Z","creator_user_login":"ZackWard"}
{"number":15069,"comment_id":"791125444","body":"bump. so many logs i want gone","updated_at":"2021-04-16T00:09:09Z","created_at":"2021-03-05T03:30:50Z","creator_user_login":"Arithmetics"}
{"number":15069,"comment_id":"820767509","body":"Bump","updated_at":"2021-04-16T00:09:00Z","created_at":"2021-04-15T22:27:42Z","creator_user_login":"advl"}
{"number":15069,"comment_id":"832697753","body":"This is resulting in double errors in our logging system (ErrorBoundary logs it but we also capture console.error) – extremely frustrating. ","updated_at":"2021-05-05T13:42:28Z","created_at":"2021-05-05T13:42:28Z","creator_user_login":"nathggns"}
{"number":15069,"comment_id":"845081191","body":"The errors are also unconditionally logged during tests where I expect components to throw and catch the errors myself with error boundaries. This is frustrating and pollutes test output.","updated_at":"2021-05-20T12:46:44Z","created_at":"2021-05-20T12:46:44Z","creator_user_login":"raveclassic"}
{"number":15069,"comment_id":"860121417","body":"I suppose this is still not fixed in React 18 alpha. We still have hopes for stable 18 release.","updated_at":"2021-06-12T22:32:31Z","created_at":"2021-06-12T22:32:31Z","creator_user_login":"anilanar"}
{"number":15069,"comment_id":"961932248","body":"@gaearon is there any way to prioritize this or would you accept PRs to fix it?","updated_at":"2021-11-05T14:17:35Z","created_at":"2021-11-05T14:17:35Z","creator_user_login":"BYK"}
{"number":15069,"comment_id":"962720789","body":"We are running into a similar problem as @EyalPerry  mentioned. It would be great to fix this","updated_at":"2021-11-08T00:53:13Z","created_at":"2021-11-08T00:53:13Z","creator_user_login":"ask-imran"}
{"number":15069,"comment_id":"1009777689","body":"@gaearon Would also like to see this fixed. I think ErrorBoundary should have same semantics as exception handling, once an exception has been caught, it's caught.\r\n\r\nIf you want to log your exceptions, you should log them in the `catch()`, having a helper that logs the error exactly like it's currently logged might be useful. I guess this would be a breaking change, but IMO it's worth to have the same semantics as normal exception handling. If breaking change is too big of a problem, then having a `.preventDefault()`/`.preventLogging()` works too.\r\n\r\nIf the exception handler (ErrorBoundary) itself causes an exception, that's a different case, and should cause an exception to bubble up (which presumably could be caught by a higher level handler/ErrorBoundary).\r\n\r\nFor me there's two main reasons:\r\n1) Nicer DX/UX, we know that in some cases some components will fail, and thus use fallback components, spamming the console isn't very nice. The console messages would lead people to think that something is broken, even though it has already been handled gracefully, by the fallback component.\r\n2) E2e tests, we use playwright, and it would be nice to have all tests confirm at the end of the test that there were no log entries. It's too easy for developers to not notice something in the log, and having e2e tests that double check is useful.","updated_at":"2022-01-11T09:54:50Z","created_at":"2022-01-11T09:54:50Z","creator_user_login":"leotg130"}
{"number":15069,"comment_id":"1031453628","body":"My team ran into this issue as well. Would really like a fix. ","updated_at":"2022-02-07T13:11:27Z","created_at":"2022-02-07T13:11:27Z","creator_user_login":"timredband"}
{"number":15069,"comment_id":"1047699352","body":"Yeah, being able to control this logging behavior would be awesome.\r\nWe are using an extensive logging system and it would be nice to be able to combine the error and the component stack into a single log message this way.\r\nWhile just hiding the second component stack error message is not difficult, detecting the previous \"uncaught\" window error is the major issue as there's no ways to identify that it originated from within react.","updated_at":"2022-02-22T11:27:25Z","created_at":"2022-02-22T11:27:25Z","creator_user_login":"olee"}
{"number":15069,"comment_id":"1182889562","body":"I'm exploring a pattern in which I throw specific errors when running into unexpected scenarios (i.e. missing or invalid parameters, invalid routes, ...) with the intention of moving all of this UI state logic to error boundaries instead rather than repeating it in every page/view. It makes things *a lot* cleaner, but the unfortunate side-effect is indeed that all of these errors now show up as uncaught errors in the console. Would really love a way to be able to bail out of logging expected errors.\r\n\r\nI do understand that intentionally throwing errors does not mean that they are also caught, if you for example forget to handle them in an error boundary, or simply forget to wrap your tree with an error boundary component. Not really sure what the best way around this would be.","updated_at":"2022-07-13T08:09:01Z","created_at":"2022-07-13T07:54:12Z","creator_user_login":"pleunv"}
{"number":15069,"comment_id":"1254971618","body":"Error stacks are ludicrous when testing error boundaries 😬 yikes.","updated_at":"2022-09-22T12:44:16Z","created_at":"2022-09-22T12:44:16Z","creator_user_login":"kevinhaube"}
{"number":15069,"comment_id":"1382641497","body":"bump","updated_at":"2023-01-14T02:44:36Z","created_at":"2023-01-14T02:44:36Z","creator_user_login":"epferrari"}
{"number":15069,"comment_id":"1621467791","body":"bump","updated_at":"2023-07-05T10:20:19Z","created_at":"2023-07-05T10:20:19Z","creator_user_login":"samettttt"}
{"number":15069,"comment_id":"1660525169","body":"The duplicate logging (once from console, once from error boundary), is troublesome for user's who've configured Sentry error monitoring that way.\r\n\r\nConsidering there exists API to do this for hydration errors with `onRecoverableError` https://github.com/facebook/react/pull/23207, is there more appetite for exposing this more publically?\r\n\r\nI wouldn't even mind if it's a method I can monkeypatch with a Proxy, if labelled appropriately consumers can take the necessary risks. I did something similar with Next.js (https://github.com/vercel/next.js/discussions/36641) to log out hydration errors since Next.js framework doesn't expose this themselves.","updated_at":"2023-08-01T15:12:25Z","created_at":"2023-08-01T15:12:25Z","creator_user_login":"AbhiPrasad"}
{"number":15069,"comment_id":"1677915891","body":"This is a huge pain and makes the console unreadable in dev mode as well as distracting/scary in prod mode. Some of our errors are \"normal\" / \"handled\" for some users or configurations. For instance, if a component doesn't have the rights to do something, an ErrorBoundary will catch that and show a nice UI. We also use Suspense and the two tie well together.\r\n\r\nWhat I ended up doing to workaround this limitation:\r\n\r\n1) Tag (e.g, `InvariantError extends Error`) my custom Errors\r\n2) override console.error with my own to ignore any instance of the above custom error. This is for production builds.\r\n3) Likewise, add an `error` listener on window and `event.preventDefault()` if `event.error` is an instance of my custom error. This is for dev builds. This is thanks to this amazing code: https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberErrorLogger.js#L93\r\n\r\nIt really shouldn't be this complicated and undocumented.","updated_at":"2023-08-14T19:25:40Z","created_at":"2023-08-14T19:11:32Z","creator_user_login":"AlexGalays"}
{"number":24987,"comment_id":"1195725039","body":"Isn't this entirely up to the implementation of components that you're rendering?  The point of `ReactDOM.createPortal` is to allow you to render content where the React VDOM hierarchy differs from the actual DOM hierarchy.  It's when you want a component to control content that is distant from it, oftentimes mounted directly to `<body>`.\r\n\r\nIf you don't want that, then don't use `ReactDOM.createPortal`, or use it with a different attachment point.  If you want the attachment point to be within the component's existing DOM, you probably don't want a portal at all.","updated_at":"2022-07-26T16:44:34Z","created_at":"2022-07-26T16:44:34Z","creator_user_login":"nmain"}
{"number":24987,"comment_id":"1195782777","body":"@nmain I believe the main benefit of our use of Portals is in managing `z-index` — to guarantee content is layered on top of the activator's siblings and ancestors.\r\n\r\nDo you have any recommendations on:\r\n\r\n1. Helping to manage `z-index` layering, and\r\n2. Inserting dynamic content into the DOM as a sibling to the activator?","updated_at":"2022-07-26T17:38:09Z","created_at":"2022-07-26T17:38:09Z","creator_user_login":"svinkle"}
{"number":24987,"comment_id":"1195935336","body":"It's been a while since I built something like this, but my general approach would be to render the menu in same component that renders the button, with no portal, so the focus order is automatically correct.  Then style the menu with `position:fixed` so it can pop on top of everything, and then use a library like Popper to keep the menu appropriately \"attached\" to the button.","updated_at":"2022-07-26T20:16:37Z","created_at":"2022-07-26T20:16:37Z","creator_user_login":"nmain"}
{"number":24987,"comment_id":"1196487678","body":"Portals specifically allow breaking DOM order. One use case is z-index but it's also any other style cascading (which is called out in the docs for `overflow: hidden`). But changing DOM order could also be intended.\r\n\r\nIf you use this to move content all over the page so that it breaks semantics then that's an author error. The docs don't contain examples for that and even call out a11y considerations.\r\n\r\nCalling out these author errors out automatically is incredibly hard at the React level. e2e testing or manual testing are more accurate calling out these issues. \r\n\r\nI would recommend filing these issues against the component implementation since `createPortal` specifically is for breaking DOM order. \r\n\r\nThe only solution for React would be `aria-owns` but support for that is very poor as far as I know and it's not clear to me that this would always be the correct solution. \r\n\r\n","updated_at":"2022-07-27T09:27:59Z","created_at":"2022-07-27T09:27:59Z","creator_user_login":"eps1lon"}
{"number":24987,"comment_id":"1198108326","body":"> Portals specifically allow breaking DOM order.\r\n\r\n> If you use this to move content all over the page so that it breaks semantics then that's an author error.\r\n\r\n@eps1lon Thanks. So if I understand correctly, if we want to ensure the content container is a sibling to the activator, we should **not** be using Portals. If this is correct, could you recommend another method to manage `z-index` of dynamic components?\r\n\r\n> The docs don't contain examples for that and even call out a11y considerations.\r\n\r\nI would strongly suggest adding additional warnings to the documentation. \"Do not use to implement disclosure, combobox, or tooltip patterns as this **will** break DOM order.\"\r\n\r\n@nmain Thanks. Popper looks interesting. I'll share this back with my dev team.","updated_at":"2022-07-28T12:59:34Z","created_at":"2022-07-28T12:59:34Z","creator_user_login":"svinkle"}
{"number":24987,"comment_id":"1198445240","body":"> \"Do not use to implement disclosure, combobox, or tooltip patterns as this will break DOM order.\"\r\n\r\nJust because DOM order is changed, doesn't necessarily mean these a11y patterns do not work. \r\n\r\nThe portal docs specifically say that it **portals** something to a different place. At some point documentation becomes overwhelming if you repeat everything with different words. Saying that an element is moved to a different place and order is not the same are saying the same thing.\r\n\r\nMaybe let's approach it from a different angle: Which point in the docs implies that order of the UI would not be changed?","updated_at":"2022-07-28T17:39:56Z","created_at":"2022-07-28T17:39:56Z","creator_user_login":"eps1lon"}
{"number":24987,"comment_id":"1201657194","body":"> > \"Do not use to implement disclosure, combobox, or tooltip patterns as this will break DOM order.\"\r\n> \r\n> Just because DOM order is changed, doesn't necessarily mean these a11y patterns do not work.\r\n> \r\n> The portal docs specifically say that it **portals** something to a different place. At some point documentation becomes overwhelming if you repeat everything with different words. Saying that an element is moved to a different place and order is not the same are saying the same thing.\r\n> \r\n> Maybe let's approach it from a different angle: Which point in the docs implies that order of the UI would not be changed?\r\n\r\nHey @eps1lon! 👋🏽 \r\n\r\nI don't think there's a lack of clarity around what portals do, but there's an opportunity to flesh out the best practices around their use while also calling out when not to use them. This paragraph in particular should be updated:\r\n\r\n<img width=\"777\" src=\"https://user-images.githubusercontent.com/18447883/182233829-4ccf55cf-0243-4503-a2ae-c2e66f1df79d.png\" alt=\"A typical use case for portals is when a parent component has an overflow: hidden or z-index style, but you need the child to visually “break out” of its container. For example, dialogs, hovercards, and tooltips.\">\r\n\r\nPortals are used rampantly in a way that makes React apps (and therefore a good chunk of the modern internet) inaccessible, but this documentation is a great learning opportunity for devs who are considering use of a portal as a solution for stacking order problems they're facing. We can be more straightforward with why portals aren't an answer that solves the problem for everyone consuming their app.\r\n\r\nWhen dynamic content containers are injected outside of the parent that they're triggered from, people consuming the content with assistive technologies (AT) don't have the same experience as users consuming the content visually. Keyboard accessibility is the tip of the iceberg and typically doesn't translate to a coherent experience for other AT hardware devices or even screen readers. With the exception of modals, the use of programmatic focus of the portaled element falls short in keeping things like comboboxes up to WCAG spec, where DOM focus must remain on the text input. This means that developers are unknowingly building experiences that could get them sued under laws like the Americans with Disabilities Act or the European Accessibility Act.\r\n\r\nWe should aim to make it clear in the documentation the implications portals have on the DOM and Accessibility trees, and discourage their use as a `z-index` hack. I'd love to learn more about other use cases aside from hacking styles and contribute to updating the portal docs. In the meantime, I'll work with my team to undo our misuse of portals in the Polaris design system. ","updated_at":"2022-08-01T20:08:19Z","created_at":"2022-08-01T20:06:07Z","creator_user_login":"chloerice"}
{"number":24987,"comment_id":"1201657351","body":"> It's been a while since I built something like this, but my general approach would be to render the menu in same component that renders the button, with no portal, so the focus order is automatically correct. Then style the menu with position:fixed so it can pop on top of everything, and then use a library like Popper to keep the menu appropriately \"attached\" to the button.\r\n\r\n@nmain thanks for recommending Popper.js, this looks like exactly what we currently do with our `PositionedOverlay` that uses a portal component under the hood 👀 ","updated_at":"2022-08-01T20:06:15Z","created_at":"2022-08-01T20:06:15Z","creator_user_login":"chloerice"}
{"number":24987,"comment_id":"1201739011","body":"@chloerice I would  encourage you to propose these sort of suggestions in the form of a PR to the https://github.com/reactjs/reactjs.org/ repository. That would seem more constructive then reiterating the implications of changing DOM order.","updated_at":"2022-08-01T21:25:15Z","created_at":"2022-08-01T21:25:15Z","creator_user_login":"eps1lon"}
{"number":24987,"comment_id":"1203135456","body":"> this looks like exactly what we currently do with our PositionedOverlay that uses a portal component under the hood 👀\r\n\r\n@chloerice You should be able to use `position: fixed` to \"pop out\" without needing a portal, as `position: fixed` [almost always](https://developer.mozilla.org/en-US/docs/Web/CSS/position#:~:text=It%20is%20positioned%20relative%20to%20the%20initial%20containing%20block%20established%20by%20the%20viewport%2C%20except%20when%20one%20of%20its%20ancestors%20has%20a%20transform%2C%20perspective%2C%20or%20filter%20property%20set%20to%20something%20other%20than%20none%20(see%20the%20CSS%20Transforms%20Spec)%2C%20or%20the%20will%2Dchange%20property%20is%20set%20to%20transform) creates a new top level stacking context.  Then with slightly different settings, Popper can manage that fixed position element just as it would any other element.","updated_at":"2022-08-02T19:37:25Z","created_at":"2022-08-02T19:37:25Z","creator_user_login":"nmain"}
{"number":26301,"comment_id":"1454218994","body":"Hi @osule! \n\nThank you for your pull request and welcome to our community. \n\n# Action Required\n\nIn order to merge **any pull request** (code, docs, etc.), we **require** contributors to sign our **Contributor License Agreement**, and we don't seem to have one on file for you.\n\n# Process\n\nIn order for us to review and merge your suggested changes, please sign at <https://code.facebook.com/cla>. **If you are contributing on behalf of someone else (eg your employer)**, the individual CLA may not be sufficient and your employer may need to sign the corporate CLA.\n\nOnce the CLA is signed, our tooling will perform checks and validations. Afterwards, the **pull request will be tagged** with `CLA signed`. The tagging process may take up to 1 hour after signing. Please give it that time before contacting us about it.\n\nIf you have received this in error or have any questions, please contact us at [cla@meta.com](mailto:cla@meta.com?subject=CLA%20for%20facebook%2Freact%20%2326301). Thanks!","updated_at":"2023-03-03T22:36:40Z","created_at":"2023-03-03T22:36:40Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1454222728","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: 1f1f8eb559d064c5b1954e5dde7517d87d594e7a...7985c941d593c0e405815883d7ce9f8cfddbc679\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7985c941d593c0e405815883d7ce9f8cfddbc679/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=1f1f8eb559d064c5b1954e5dde7517d87d594e7a) | **+0.01%** | 155.25 kB | 155.27 kB | +0.01% | 48.98 kB | 48.99 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/7985c941d593c0e405815883d7ce9f8cfddbc679/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=1f1f8eb559d064c5b1954e5dde7517d87d594e7a) | **+0.01%** | 157.24 kB | 157.26 kB | = | 49.65 kB | 49.65 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/7985c941d593c0e405815883d7ce9f8cfddbc679/files/facebook-www/ReactDOM-prod.classic.js?compare=1f1f8eb559d064c5b1954e5dde7517d87d594e7a) | **=** | 532.50 kB | 532.53 kB | = | 94.85 kB | 94.86 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/7985c941d593c0e405815883d7ce9f8cfddbc679/files/facebook-www/ReactDOM-prod.modern.js?compare=1f1f8eb559d064c5b1954e5dde7517d87d594e7a) | **=** | 516.42 kB | 516.45 kB | = | 92.45 kB | 92.46 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n(No significant changes)\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 7985c941d593c0e405815883d7ce9f8cfddbc679\n</p>\n","updated_at":"2023-03-03T22:41:25Z","created_at":"2023-03-03T22:41:25Z","creator_user_login":"react-sizebot"}
{"number":26301,"comment_id":"1454287262","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-04T00:07:45Z","created_at":"2023-03-04T00:07:45Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1454335687","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-04T02:07:23Z","created_at":"2023-03-04T02:07:23Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1454343993","body":"Context: https://stackoverflow.com/a/75631652/4088472","updated_at":"2023-03-04T02:38:22Z","created_at":"2023-03-04T02:38:22Z","creator_user_login":"vezaynk"}
{"number":26301,"comment_id":"1454371404","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-04T04:07:27Z","created_at":"2023-03-04T04:07:27Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1454515377","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-04T06:06:18Z","created_at":"2023-03-04T06:06:18Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1454660132","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-04T08:07:09Z","created_at":"2023-03-04T08:07:09Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1454686916","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-04T10:08:01Z","created_at":"2023-03-04T10:08:01Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1454717918","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-04T12:06:20Z","created_at":"2023-03-04T12:06:20Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1454751036","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-04T14:05:54Z","created_at":"2023-03-04T14:05:54Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1454787986","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-04T16:05:46Z","created_at":"2023-03-04T16:05:46Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1454825434","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-04T18:05:39Z","created_at":"2023-03-04T18:05:39Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1454860242","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-04T20:07:17Z","created_at":"2023-03-04T20:07:17Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1454902473","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-04T22:07:23Z","created_at":"2023-03-04T22:07:23Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1454930517","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-05T00:07:21Z","created_at":"2023-03-05T00:07:21Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1454958708","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-05T02:05:41Z","created_at":"2023-03-05T02:05:41Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1454984480","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-05T04:07:43Z","created_at":"2023-03-05T04:07:43Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1455000110","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-05T06:05:56Z","created_at":"2023-03-05T06:05:56Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1455020138","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-05T08:07:06Z","created_at":"2023-03-05T08:07:06Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1455045235","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-05T10:07:29Z","created_at":"2023-03-05T10:07:29Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1455072861","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-05T12:07:13Z","created_at":"2023-03-05T12:07:13Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1455102060","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-05T14:06:30Z","created_at":"2023-03-05T14:06:30Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1455132736","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-05T16:05:53Z","created_at":"2023-03-05T16:05:53Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1455162010","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-05T18:07:53Z","created_at":"2023-03-05T18:07:53Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1455190936","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-05T20:06:47Z","created_at":"2023-03-05T20:06:47Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1455256318","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-06T00:07:13Z","created_at":"2023-03-06T00:07:13Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1455319558","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-06T02:08:09Z","created_at":"2023-03-06T02:08:09Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1455409798","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-06T04:05:46Z","created_at":"2023-03-06T04:05:46Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1455509459","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-06T06:06:59Z","created_at":"2023-03-06T06:06:59Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1455665504","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-06T08:08:23Z","created_at":"2023-03-06T08:08:23Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1455841073","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-06T10:09:15Z","created_at":"2023-03-06T10:09:15Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1456017692","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-06T12:08:40Z","created_at":"2023-03-06T12:08:40Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1456122117","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-06T13:19:22Z","created_at":"2023-03-06T13:19:22Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1456203854","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-06T14:09:04Z","created_at":"2023-03-06T14:09:04Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1456424978","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-06T16:10:54Z","created_at":"2023-03-06T16:10:54Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1456681575","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-06T18:09:33Z","created_at":"2023-03-06T18:09:33Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1456897828","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-06T20:10:12Z","created_at":"2023-03-06T20:10:12Z","creator_user_login":"facebook-github-bot"}
{"number":26301,"comment_id":"1459217795","body":"Thank you for signing our Contributor License Agreement. We can now accept your code for this (and any) Meta Open Source project. Thanks!","updated_at":"2023-03-08T02:47:14Z","created_at":"2023-03-08T02:47:14Z","creator_user_login":"facebook-github-bot"}
{"number":26538,"comment_id":"1495432105","body":"\r\nyou can use the elseif for targeting the same icon when dropdown is active \r\n\r\n```\r\nuseEffect(() => {\r\n  let closeDropdown = (e) => {\r\n    if (imgRef.current && !imgRef.current.contains(e.target)) {\r\n      setIsOpen(false);\r\n    } else if (imgRef.current === e.target) {\r\n      setIsOpen((prev) => !prev);\r\n    }\r\n  };\r\n  document.body.addEventListener(\"click\", closeDropdown);\r\n  return () => document.body.removeEventListener(\"click\", closeDropdown);\r\n}, []);\r\n","updated_at":"2023-04-04T06:43:00Z","created_at":"2023-04-04T06:43:00Z","creator_user_login":"Animesh239"}
{"number":26538,"comment_id":"1496931723","body":"Still not working @Animesh239 ","updated_at":"2023-04-05T05:19:29Z","created_at":"2023-04-05T05:19:14Z","creator_user_login":"RahulMittal18"}
{"number":26538,"comment_id":"1497119760","body":"> useEffect(() => {\r\n\r\n    let closeDropdown = (e) => {\r\n      if (imgRef.current && !imgRef.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.body.addEventListener(\"click\", closeDropdown);\r\n    return () => document.body.removeEventListener(\"click\", closeDropdown);\r\n    }, [isOpen]);\r\n\r\n// there I added [isOpen] in the dependency array of useEffect   \r\n// whenever isOpen will change useEffect  will be called with its sideeffect\r\n// I think it will work. \r\n\r\n.\r\n.\r\n.\r\n.\r\n\r\n\r\n// And yeah one more thing is that , there is an extra div tag \r\n> \r\n    return (\r\n       <div>\r\n         <div>\r\n              <div className={\"dropdownn1 \" + (isOpen ? \"open\" : \"closed\")}>\r\n              <Dropdown />\r\n          </div>\r\n          <div className=\"profile_icon_div\" ref={imgRef}>\r\n                 <img\r\n                    src={profileImageUrl}\r\n                    onClick={() => setIsOpen((prev) => !prev)}\r\n                    className=\"profile_icon_image\"\r\n                    alt=\"\"\r\n                  />\r\n           </div>\r\n         </div>\r\n      );\r\n","updated_at":"2023-04-05T08:33:02Z","created_at":"2023-04-05T08:33:02Z","creator_user_login":"iRONiCBAT7"}
{"number":26538,"comment_id":"1497453825","body":"Still not working guys @Animesh239 @iRONiCBAT7  . Ignore extra div, there is no extra div in the real code. It just got extra here in copying.\r\n\r\nmy updated useEffect which is not working stll:\r\n\r\n```\r\n useEffect(() => {\r\n    let closeDropdown = (e) => {\r\n      if (imgRef.current && !imgRef.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      } else if (imgRef.current === e.target) {\r\n        setIsOpen((prev) => !prev);\r\n      }\r\n    };\r\n    document.body.addEventListener(\"click\", closeDropdown);\r\n    return () => document.body.removeEventListener(\"click\", closeDropdown);\r\n  }, [isOpen]);\r\n```","updated_at":"2023-04-05T13:05:13Z","created_at":"2023-04-05T13:05:13Z","creator_user_login":"RahulMittal18"}
{"number":26538,"comment_id":"1497785306","body":"You are using imgRef but I can't see it defined anywhere. I can only see the state defined not the imgRef. If this is just the copy paste mistake from the original code then it's fine ignore this comment and if not please add `const ref = useRef();` below the state.\r\n\r\nAlso you can change the if condition to something like `!imgRef?.current?.contains(e.target)` this is more concise and easy to read and make the code look better.\r\n\r\nPlease first check that the state is changing when you click on the image from isOpen === true to isOpen === false because it is possible it is not change. To make the state change easy just use the following `onClick={() => {\r\n            setIsOpen(!isOpen);\r\n          }}` this will help to change to opposite state when the image is clicked easily. According to what i can see the problem is maybe with the css class name `className={\"dropdownn1 \" + (isOpen ? \"open\" : \"closed\")` and it may not be assigning names properly. As an alternate to this you can simply remove the line and pass the isOpen state as a prop to the `<Dropdown />` menu and use something like this inside the component `const Dropdown = ({ open }) => {\r\n  return (\r\n    <div >\r\n      {open &&\r\n        <div className=\"dropdown_container\"></div>}\r\n    </div>);}`","updated_at":"2023-04-05T16:28:57Z","created_at":"2023-04-05T16:28:57Z","creator_user_login":"ag533"}
{"number":26538,"comment_id":"1497939285","body":"None of them worked @ag533 \r\nIsOpen remains true even when I click on profile icon again and again.","updated_at":"2023-04-05T18:33:01Z","created_at":"2023-04-05T18:33:01Z","creator_user_login":"RahulMittal18"}
{"number":26538,"comment_id":"1498124120","body":"Create a handleClick function to set state. Something like \n\nDef handleClick = () => {\nsetIsOpen(!open)\n}\n\nAn call this function in onClick rather than setting the state directly in onClick. As setting the state directly can lead error in the code - see this article - https://refine.dev/blog/common-usestate-mistakes-and-how-to-avoid/","updated_at":"2023-04-05T20:40:14Z","created_at":"2023-04-05T20:40:14Z","creator_user_login":"ag533"}
{"number":26538,"comment_id":"1498416142","body":"Firstly boss, you did not reference the imgRef.\r\nIt should be const imageRef = React.useRef()\r\n\r\nimport React, {useState, useRef} from 'react'\r\nconst Navbar = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const imgRef = useRef()\r\n\r\n  useEffect(() => {\r\n    const closeDropdown = (e) => {\r\n      if (imgRef.current && !imgRef.current?.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.body.addEventListener(\"click\", closeDropdown);\r\n    return () => document.body.removeEventListener(\"click\", closeDropdown);\r\n    }, []);\r\n\r\n\r\n    return (\r\n       <div>\r\n         <div>\r\n              <div className={\"dropdownn1 \" + (isOpen ? \"open\" : \"closed\")}>\r\n              <Dropdown />\r\n          </div>\r\n          <div className=\"profile_icon_div\" ref={imgRef}>\r\n                 <img\r\n                    src={profileImageUrl}\r\n                    onClick={() => setIsOpen((prev) => !prev)}\r\n                    className=\"profile_icon_image\"\r\n                    alt=\"\"\r\n                  />\r\n           </div>\r\n         </div>\r\n      );\r\n};\r\n\r\nexport default Navbar;\r\n\r\nAlso do confirm from you dev tools to see if the state of isOpen changes on click (i.e from false to true)","updated_at":"2023-04-06T02:49:25Z","created_at":"2023-04-06T02:49:25Z","creator_user_login":"umeh-promise"}
{"number":26538,"comment_id":"1498565060","body":"Updated the original code @umeh-promise ..check now..still not working\r\n","updated_at":"2023-04-06T06:38:24Z","created_at":"2023-04-06T06:38:24Z","creator_user_login":"RahulMittal18"}
{"number":26538,"comment_id":"1498574658","body":"tried this too @ag533 .. still not working","updated_at":"2023-04-06T06:48:36Z","created_at":"2023-04-06T06:48:36Z","creator_user_login":"RahulMittal18"}
{"number":26538,"comment_id":"1498760897","body":"Hey @RahulMittal18,\r\n\r\nTry this solution it's working fine for me - https://codesandbox.io/s/quiet-sky-s85kqe?file=/src/App.js. It is similar to you solution but without the overhead complications of the CSS 😄. Let me know if this helps. \r\n\r\nAll the best 😸 ","updated_at":"2023-04-06T09:30:48Z","created_at":"2023-04-06T09:29:56Z","creator_user_login":"ag533"}
{"number":26538,"comment_id":"1498803383","body":"@RahulMittal18 Please share all dependencies of this file, like the CSS code you used in this file and the Dropdown component's code.","updated_at":"2023-04-06T10:02:39Z","created_at":"2023-04-06T10:02:39Z","creator_user_login":"rachit298"}
{"number":26538,"comment_id":"1499445307","body":"@ag533 read the complete expected behaviour once again.\r\nDropdown is not closing on clicking outside the navbar","updated_at":"2023-04-06T18:16:21Z","created_at":"2023-04-06T18:16:21Z","creator_user_login":"RahulMittal18"}
{"number":26538,"comment_id":"1499446811","body":"@rachit298 It is not possible to share here. At max, I can schedule a meet for this.","updated_at":"2023-04-06T18:17:45Z","created_at":"2023-04-06T18:17:45Z","creator_user_login":"RahulMittal18"}
{"number":26538,"comment_id":"1499467692","body":"@RahulMittal18 You can create a repo and put all files in there. And share that repo link in original issue here.","updated_at":"2023-04-06T18:37:21Z","created_at":"2023-04-06T18:37:21Z","creator_user_login":"rachit298"}
{"number":26538,"comment_id":"1499494193","body":"@RahulMittal18 I have modified the sandbox respective to the expected behaviour - https://codesandbox.io/s/quiet-sky-s85kqe?file=/src/withClickOutside.js:0-574. Please have a look and let me know if this works for you. Basically what i have done is created a wrapper for the component that can be implemented for the whole page. ","updated_at":"2023-04-06T19:03:02Z","created_at":"2023-04-06T19:03:02Z","creator_user_login":"ag533"}
{"number":26538,"comment_id":"1499500483","body":"@ag533 it's working but i can't impplement it in  my code\r\n","updated_at":"2023-04-06T19:09:21Z","created_at":"2023-04-06T19:09:21Z","creator_user_login":"RahulMittal18"}
{"number":26538,"comment_id":"1499504366","body":"In that case please share bits of your code in a sandbox in a runnable state so that I can see it over there and help you @RahulMittal18 😊. As it is very difficult to replicate your exact behaviour in my system.","updated_at":"2023-04-06T19:13:30Z","created_at":"2023-04-06T19:13:30Z","creator_user_login":"ag533"}
{"number":26538,"comment_id":"1499553709","body":"Can someone please create a sandbox for the _original_ code? I see there are many solutions. I want to post the idiomatic one but I don't have any sandbox to modify because they're all doing something different.","updated_at":"2023-04-06T20:05:45Z","created_at":"2023-04-06T20:05:45Z","creator_user_login":"gaearon"}
{"number":26538,"comment_id":"1499584248","body":"Alright @RahulMittal18 can you please share the code sandbox for this so we can easily debug the code. ","updated_at":"2023-04-06T20:27:26Z","created_at":"2023-04-06T20:27:26Z","creator_user_login":"umeh-promise"}
{"number":26538,"comment_id":"1499952198","body":"@umeh-promise @gaearon @ag533 @rachit298 sharing my code sandbox link.. Help me out guys\r\n\r\n\r\nhttps://codesandbox.io/s/festive-oskar-gyry34?file=/src/App.js","updated_at":"2023-04-07T05:31:05Z","created_at":"2023-04-07T05:30:51Z","creator_user_login":"RahulMittal18"}
{"number":26538,"comment_id":"1500793994","body":"@RahulMittal18 \r\nTo fix the issue, I added the **stopPropagation()** method to the child element's event handler function **handleProfileClick()** to prevent the event from propagating up to the parent elements. This ensured that the parent event handler function **closeDropdown()**, which was closing the dropdown menu, was not triggered when the user clicked inside the menu.  I also changed document.body.addEventListener() to document.addEventListener() in the **closeDropdown()** function to close the dropdown menu when the user clicks anywhere in the document, not just in the NavbarNew component.\r\n\r\nI also updated the **setIsOpen()** method inside the **handleProfileClick()** function to toggle the **isOpen** state based on its previous value using the prevState function argument. This ensures that the isOpen state is updated correctly, even if multiple updates are triggered in quick succession.\r\n\r\nWith these changes, the dropdown menu now stays open when the user clicks inside the menu or anywhere in the document, but still closes when the user clicks outside the menu.\r\n\r\nAll changes were made in the NavbarNew component.\r\n\r\n(https://codesandbox.io/s/amazing-khorana-2pqz7d?file=/src/components/NavbarNew.js)","updated_at":"2023-04-08T05:16:25Z","created_at":"2023-04-08T05:12:11Z","creator_user_login":"umeh-promise"}
{"number":26538,"comment_id":"1500803653","body":"@umeh-promise document.addEventListener is not working on my localhost. even the dropdown does not get open..\r\nafter using document.body.addEventListener it is working as before not like yours in code sandbox","updated_at":"2023-04-08T06:16:47Z","created_at":"2023-04-08T06:16:47Z","creator_user_login":"RahulMittal18"}
{"number":26538,"comment_id":"1500804607","body":"@umeh-promise  I changed \"click\" with \"mouseup\"...now its working as before with document.addEventListener but not working as expected.\r\n\r\n\r\nChanges I did:\r\n\r\n```\r\n  const handleProfileClick = (e) => {\r\n    e.stopPropagation();\r\n    // I ammended this line of code from setIsOpen(!isOpen) to setIsOpen((prevState) => !prevState);\r\n    // setIsOpen((prevState) => !prevState) toggles the state from true to false\r\n    setIsOpen((prevState) => !prevState);\r\n  };\r\n\r\nuseEffect(() => {\r\n    const closeDropdown = (e) => {\r\n      // console.log(\r\n      //   e.target,\r\n      //   imgRef.current,\r\n      //   isOpen,\r\n      //   e.path,\r\n      //   imgRef.current.contains(e.target)\r\n      // );\r\n      if (imgRef.current && !imgRef.current?.contains(e.target)) {\r\n        setIsOpen(false);\r\n        // console.log(\"entered\");\r\n      }\r\n    };\r\n    document.addEventListener(\"mouseup\", closeDropdown);\r\n    return () => document.removeEventListener(\"mouseup\", closeDropdown);\r\n  }, [isOpen]);\r\n```","updated_at":"2023-04-08T06:25:10Z","created_at":"2023-04-08T06:24:15Z","creator_user_login":"RahulMittal18"}
{"number":26538,"comment_id":"1500805453","body":"This actually might be from your local machine \r\nDid you try it using the link I attached here.\r\nTest it out it's working.\r\nhttps://codesandbox.io/s/amazing-khorana-2pqz7d?file=/src/components/NavbarNew.js\r\n","updated_at":"2023-04-08T06:30:50Z","created_at":"2023-04-08T06:30:30Z","creator_user_login":"umeh-promise"}
{"number":26538,"comment_id":"1500807253","body":"@umeh-promise code in your link is working which has react-version 18 and i had react 16..upgrading it to 18 is causing many dependency conflicts. so i am not able to upgrade it to 18","updated_at":"2023-04-08T06:42:03Z","created_at":"2023-04-08T06:42:03Z","creator_user_login":"RahulMittal18"}
{"number":26538,"comment_id":"1500817061","body":"@umeh-promise give a solution for react version 16.13.1\r\n","updated_at":"2023-04-08T07:45:38Z","created_at":"2023-04-08T07:45:38Z","creator_user_login":"RahulMittal18"}
{"number":26538,"comment_id":"1501048591","body":"Adding if statement for `isOpen` can solve the problem\r\n```js\r\nconst Navbar = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const imgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    let closeDropdown = (e) => {\r\n      if (imgRef.current && !imgRef.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.body.addEventListener(\"click\", closeDropdown);\r\n\r\n    return () => document.body.removeEventListener(\"click\", closeDropdown);\r\n  }, []);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsOpen((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={\"dropdownn1 \" + (isOpen ? \"open\" : \"closed\")}>\r\n        <Dropdown />\r\n      </div>\r\n      <div className=\"profile_icon_div\" ref={imgRef}>\r\n        <img\r\n          src={profileImageUrl}\r\n          onClick={toggleDropdown}\r\n          className=\"profile_icon_image\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n```","updated_at":"2023-04-09T05:55:28Z","created_at":"2023-04-09T05:55:28Z","creator_user_login":"pranshu05"}
{"number":26538,"comment_id":"1501131486","body":"I would like to work on this issue,  can you please assign it to me?","updated_at":"2023-04-09T13:42:16Z","created_at":"2023-04-09T13:42:16Z","creator_user_login":"sumitshinde-84"}
{"number":26538,"comment_id":"1501159558","body":"@RahulMittal18 instead of using a document.body use window.addEventListener that should solve your issue \r\n\r\ncan you please add a border to this both div tags and check are you clicking outside the div \r\n<img width=\"517\" alt=\"image\" src=\"https://user-images.githubusercontent.com/51263906/230783377-683d7ba4-05c3-468f-bb80-f2472a9b0a9f.png\">\r\n\r\n\r\nyou can use this has your reference \r\nhttps://codesandbox.io/s/frosty-grass-sx0zty?file=/src/App.tsx\r\n","updated_at":"2023-04-09T16:01:13Z","created_at":"2023-04-09T15:57:14Z","creator_user_login":"gokuljs"}
{"number":26538,"comment_id":"1501180427","body":"> I would like to work on this issue, can you please assign it to me?\r\n\r\nassigned to you @sumitshinde-84 ","updated_at":"2023-04-09T17:54:10Z","created_at":"2023-04-09T17:54:10Z","creator_user_login":"RahulMittal18"}
{"number":26538,"comment_id":"1501184951","body":"const Navbar = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const imgRef = useRef();\r\n\r\n  useEffect(() => {\r\n    let closeDropdown = (e) => {\r\n      if (imgRef.current && !imgRef.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n\r\n    document.body.addEventListener(\"click\", closeDropdown);\r\n    return () => document.body.removeEventListener(\"click\", closeDropdown);\r\n  }, []);\r\n\r\n  const handleProfileIconClick = () => {\r\n    setIsOpen((prev) => !prev); // Toggle the dropdown\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={\"dropdownn1 \" + (isOpen ? \"open\" : \"closed\")}>\r\n        <Dropdown />\r\n      </div>\r\n      <div className=\"profile_icon_div\" ref={imgRef}>\r\n        <img\r\n          src={profileImageUrl}\r\n          onClick={handleProfileIconClick} // Update the event handler\r\n          className=\"profile_icon_image\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Navbar;\r\n\r\nit will definitely work try this ","updated_at":"2023-04-09T18:20:46Z","created_at":"2023-04-09T18:16:43Z","creator_user_login":"sumitshinde-84"}
{"number":26538,"comment_id":"1501221116","body":"@RahulMittal18 The only way I could be of help to you is if you do add me to the project repo.\r\nThat way I can have access to the React 16 version you are using and do the debugging or better still, send me the project link.\r\n\r\nThank you.","updated_at":"2023-04-09T21:54:25Z","created_at":"2023-04-09T21:53:19Z","creator_user_login":"umeh-promise"}
{"number":26538,"comment_id":"1501824920","body":"You can try adding a if condition to check if you are clicking the profile icon. If yes then toggle isOpen\r\nNote that you are not mentioning anything about what will happen if we click on the profile image (imgRef).\r\n\r\nHere is my code:\r\n\r\nconst Navbar = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const imgRef = useRef();\r\n  useEffect(() => {\r\n    let closeDropdown = (e) => {\r\n      if (imgRef.current && !imgRef.current.contains(e.target)) {\r\n        setIsOpen(false);\r\n      }\r\n\r\n     //Here's what I added\r\n     if(imgRef.current.contains(e.target)){\r\n         setIsOpen((prev) => !prev);\r\n     }\r\n\r\n    };\r\n    document.body.addEventListener(\"click\", closeDropdown);\r\n    return () => document.body.removeEventListener(\"click\", closeDropdown);\r\n    }, []);\r\n\r\n\r\n    return (\r\n       <div>\r\n              <div className={\"dropdownn1 \" + (isOpen ? \"open\" : \"closed\")}>\r\n                    <Dropdown />\r\n              </div>\r\n              <div className=\"profile_icon_div\" ref={imgRef}>\r\n                     <img\r\n                        src={profileImageUrl}\r\n                        onClick={() => setIsOpen((prev) => !prev)}\r\n                        className=\"profile_icon_image\"\r\n                        alt=\"\"\r\n                      />\r\n               </div>\r\n        </div>\r\n      );\r\n};\r\n\r\nexport default Navbar;","updated_at":"2023-04-10T13:40:00Z","created_at":"2023-04-10T13:40:00Z","creator_user_login":"Sukrittt"}
{"number":26538,"comment_id":"1502244746","body":"Perfect guys","updated_at":"2023-04-10T19:58:12Z","created_at":"2023-04-10T19:58:12Z","creator_user_login":"urmybestfriend"}
{"number":26538,"comment_id":"1508591844","body":"Also a quick suggestion @RahulMittal18 please use conditional rendering instead of styles rendering. Its always better to not mount the required elements/nodes into the DOM tree which makes things less expensive on rendering side. Just dropping in a suggestion \r\n\r\n\r\n```javascript\r\nconst Navbar = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const imgRef = useRef();\r\n\r\n  const handleImageClick = () => {\r\n    setIsOpen((prevIsOpen) => !prevIsOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (evt) => {\r\n      if (imgRef?.current && !imgRef?.current?.contains(evt.target)) {\r\n        setIsOpen(false);\r\n      }\r\n    };\r\n    document.addEventListener(\"click\", handleClickOutside);\r\n    \r\n    // cleanup for event listener\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside);\r\n    };\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <>\r\n      {isOpen && (\r\n        <div className={\"dropdown\"}>\r\n          <Dropdown />\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"profile_icon_div\" ref={imgRef} onClick={handleImageClick}>\r\n        <img\r\n          src={profileImageUrl}\r\n          onClick={() => setIsOpen((prev) => !prev)}\r\n          className=\"profile_icon_image\"\r\n          alt=\"Profile-Icon\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n```\r\n\r\nYou can also create a custom hook where you can pass the ref and your callback method which can manage the click events which are clicked outside the ref which you pass in the hook.\r\nHappy Learning 😊\r\n","updated_at":"2023-04-17T14:51:54Z","created_at":"2023-04-14T14:05:57Z","creator_user_login":"kushhingol"}
{"number":26538,"comment_id":"1554369445","body":"why don't you add conditional rendering for onClick method. just correct me if i'm wrong guys.","updated_at":"2023-05-19T10:32:03Z","created_at":"2023-05-19T10:32:03Z","creator_user_login":"sandeepmichael"}
{"number":19371,"comment_id":"695177560","body":"I would like to take this as my first issue , please guide me from where I can start  ","updated_at":"2020-09-19T07:24:22Z","created_at":"2020-09-19T07:24:22Z","creator_user_login":"RitikPandey1"}
{"number":19371,"comment_id":"695882663","body":"@RitikPandey1 You are welcome to work on this issue if you would be interested!\r\n\r\nUnfortunately, it would have to be self-guided work. I don't have any more of an outline for what needs to be done than what is written in the issue.","updated_at":"2020-09-21T03:15:12Z","created_at":"2020-09-21T03:15:12Z","creator_user_login":"bvaughn"}
{"number":19371,"comment_id":"695883273","body":"Okay, @bvaughn I will try to figure this out . ","updated_at":"2020-09-21T03:18:48Z","created_at":"2020-09-21T03:18:48Z","creator_user_login":"RitikPandey1"}
{"number":19371,"comment_id":"699506794","body":"@bvaughn, not sure if this is easily done with checking out older code. \r\nI tried it [here](https://github.com/facebook/react/pull/19912/commits/64dd0e4fa1152a4570660f7b90edaa106bf94caf#diff-1d37e48f9ceff6d8030570cd36286a61R421-R436), and I keep running into issues where code is either coupled to newer dependencies, or the newer tests are coupled to the newer versions of the code to be tested. See test results [here](https://app.circleci.com/pipelines/github/facebook/react/5263/workflows/b6eee195-1f5d-4c66-ba9a-d21fc33a97ee/jobs/213601/parallel-runs/0/steps/0-109).\r\n\r\nAnother issue is, that older checkouts have too restrictive devEngines requirements to be installed with modern node, see [this](https://app.circleci.com/pipelines/github/facebook/react/5263/workflows/b6eee195-1f5d-4c66-ba9a-d21fc33a97ee/jobs/213584/parallel-runs/0/steps/0-105).\r\n","updated_at":"2020-09-26T15:02:49Z","created_at":"2020-09-26T15:01:00Z","creator_user_login":"MoSattler"}
{"number":19371,"comment_id":"699507379","body":"Also tried it [by just installing the old dependencies via npm](https://github.com/facebook/react/pull/19912/commits/ddfe71c1cf7332c87ef88077f96e9aeeb16ee56e), with [similar results](https://app.circleci.com/pipelines/github/facebook/react/5264/workflows/210d52a0-1291-4e10-82e2-570558d7bd8b/jobs/213630/parallel-runs/0/steps/0-105). Maybe some of the tests are testing internals, and hence are coupled to internals of the latest code?","updated_at":"2020-09-26T15:06:29Z","created_at":"2020-09-26T15:06:03Z","creator_user_login":"MoSattler"}
{"number":19371,"comment_id":"700003694","body":"The `build-for-devtools` command builds an *experimental* build (`RELEASE_CHANNEL=experimental`) of React to be bundled along with the DevTools extension. Generally this build always comes from the `master` branch, so DevTools is built with the latest version of React.\r\n\r\nThis task is about using the DevTools to connect to applications written with multiple (usually *older*) versions of React. Replacing the `build-for-devtools` command doesn't seem like the right approach here, since that would also be changing which version of React the DevTools *is actually running with*.\r\n\r\nThe precedent here would be our \"legacy\" tests:\r\nhttps://github.com/facebook/react/tree/master/packages/react-devtools-shared/src/__tests__/legacy\r\n\r\nThese tests using NPM aliasing to run an older version of React with DevTools (which is still built with the latest *experimental* build):\r\nhttps://github.com/facebook/react/blob/480626a9e920d5e04194c793a828318102ea4ff4/packages/react-devtools-shared/src/__tests__/legacy/inspectElement-test.js#L76-L84\r\n","updated_at":"2020-09-28T13:23:16Z","created_at":"2020-09-28T13:23:16Z","creator_user_login":"bvaughn"}
{"number":19371,"comment_id":"701340440","body":"Thanks for the elaboration, I will check it out!","updated_at":"2020-09-30T11:51:01Z","created_at":"2020-09-30T11:50:21Z","creator_user_login":"MoSattler"}
{"number":19371,"comment_id":"810534391","body":"@MoSattler can i help you with that task?","updated_at":"2021-03-30T19:51:45Z","created_at":"2021-03-30T19:51:45Z","creator_user_login":"ktfth"}
{"number":19371,"comment_id":"810535025","body":"This task is still up for grabs, if you're interested, @ktfth ","updated_at":"2021-03-30T19:52:58Z","created_at":"2021-03-30T19:52:58Z","creator_user_login":"bvaughn"}
{"number":19371,"comment_id":"810536865","body":"@bvaughn I'm totally interested on that task, can you update me with the needs to complete them?","updated_at":"2021-03-30T19:56:20Z","created_at":"2021-03-30T19:56:20Z","creator_user_login":"ktfth"}
{"number":19371,"comment_id":"810538939","body":"Please feel free to work on it then!\r\n\r\nUnfortunately other than my comment above (https://github.com/facebook/react/issues/19371#issuecomment-700003694) this is a self-guided task. I don't have the bandwidth to provide much support for it.","updated_at":"2021-03-30T19:59:50Z","created_at":"2021-03-30T19:59:50Z","creator_user_login":"bvaughn"}
{"number":19371,"comment_id":"810553794","body":"I'm gonna work to get all information needed. Thank you","updated_at":"2021-03-30T20:24:51Z","created_at":"2021-03-30T20:24:51Z","creator_user_login":"ktfth"}
{"number":19371,"comment_id":"810587147","body":"@bvaughn I have some question after investigate the process mentioned on #19371 (comment), the test need to be runned just on legacy code and for each version of react?","updated_at":"2021-03-30T21:23:31Z","created_at":"2021-03-30T21:23:31Z","creator_user_login":"ktfth"}
{"number":19371,"comment_id":"810671338","body":"I don't know what you mean by \"just legacy code\"\r\n\r\nIdeally probably at least each minor version of React","updated_at":"2021-03-31T00:47:12Z","created_at":"2021-03-31T00:47:12Z","creator_user_login":"bvaughn"}
{"number":19371,"comment_id":"811197606","body":"The legacy test code showed by you on comment, do you remember?","updated_at":"2021-03-31T16:20:03Z","created_at":"2021-03-31T16:19:15Z","creator_user_login":"ktfth"}
{"number":19371,"comment_id":"811239298","body":"@bvaughn Maybe is not clear what is need to do on that task, can elaborate more about the case is need to cover with the setup?","updated_at":"2021-03-31T16:44:46Z","created_at":"2021-03-31T16:44:46Z","creator_user_login":"ktfth"}
{"number":19371,"comment_id":"811259774","body":"Was referring to my comment above: https://github.com/facebook/react/issues/19371#issuecomment-700003694","updated_at":"2021-03-31T17:09:21Z","created_at":"2021-03-31T17:09:21Z","creator_user_login":"bvaughn"}
{"number":19371,"comment_id":"811275275","body":"I don't have a lot of time to go into much detail here, but the idea is that we currently run automated DevTools tests against two flavors of React:\r\n1. The latest (head of master branch)\r\n2. The latest release of React 15 (legacy tests)\r\n\r\nIdeally we would _also_ run against every minor release of 16. There are a couple of challenges here:\r\n1. How to install and run the tests against each release\r\n2. How to gate which tests don't apply to all v16 releases (e.g. b'c it's a feature not added until a later version).\r\n\r\n","updated_at":"2021-03-31T17:31:38Z","created_at":"2021-03-31T17:31:38Z","creator_user_login":"bvaughn"}
{"number":19371,"comment_id":"811298957","body":"@bvaughn Great this clarify the work, thank you","updated_at":"2021-03-31T18:08:54Z","created_at":"2021-03-31T18:08:54Z","creator_user_login":"ktfth"}
{"number":19371,"comment_id":"811452102","body":"I have made some tests here to create a case on CI there is the result [first change](https://github.com/ktfth/react/blob/e5b5ffe9efe66c095f830601ab6e28529ecf8e1e/.circleci/config.yml#L310), [second change](https://github.com/ktfth/react/blob/e5b5ffe9efe66c095f830601ab6e28529ecf8e1e/.circleci/config.yml#L523) and the [pipeline](https://app.circleci.com/pipelines/github/ktfth/react?branch=chore%2Fsetup-ci-to-run-dev-tools-tests)","updated_at":"2021-03-31T20:44:32Z","created_at":"2021-03-31T20:43:00Z","creator_user_login":"ktfth"}
{"number":19371,"comment_id":"811453416","body":"I'm gonna update here to you @bvaughn can review my changes and get the job done","updated_at":"2021-03-31T20:45:17Z","created_at":"2021-03-31T20:45:17Z","creator_user_login":"ktfth"}
{"number":19371,"comment_id":"811454772","body":"Okay. Keep me posted when your PR is ready for a look 👍🏼 ","updated_at":"2021-03-31T20:47:33Z","created_at":"2021-03-31T20:47:33Z","creator_user_login":"bvaughn"}
{"number":19371,"comment_id":"811467365","body":"Now i need to reproduce the same tests of legacy for other versions like 16 for every minor?","updated_at":"2021-03-31T21:09:53Z","created_at":"2021-03-31T21:09:53Z","creator_user_login":"ktfth"}
{"number":19371,"comment_id":"811477625","body":"Sorry about a lot of questions, but you have some example to give on that part?","updated_at":"2021-03-31T21:28:29Z","created_at":"2021-03-31T21:28:29Z","creator_user_login":"ktfth"}
{"number":19371,"comment_id":"811563117","body":"> Sorry about a lot of questions, but you have some example to give on that part?\r\n\r\nNo, sorry.","updated_at":"2021-04-01T00:59:47Z","created_at":"2021-04-01T00:59:47Z","creator_user_login":"bvaughn"}
{"number":19371,"comment_id":"812090979","body":"Some updates on [config](https://github.com/ktfth/react/blob/chore/setup-ci-to-run-dev-tools-tests/.circleci/config.yml) based on @MoSattler work to test every version of react with the [result on ci](https://app.circleci.com/pipelines/github/ktfth/react?branch=chore%2Fsetup-ci-to-run-dev-tools-tests). The limits of service was reached. @bvaughn how can we continue?","updated_at":"2021-04-01T18:27:29Z","created_at":"2021-04-01T18:27:29Z","creator_user_login":"ktfth"}
{"number":19371,"comment_id":"812093317","body":"Sorry @ktfth, but I don't have much bandwidth to support this task. Unfortunately it has to be self-guided 😦  I'll make time to review a PR but I don't think I can be involved in the troubleshooting phase at the moment.","updated_at":"2021-04-01T18:32:00Z","created_at":"2021-04-01T18:31:44Z","creator_user_login":"bvaughn"}
{"number":19371,"comment_id":"812120646","body":"@bvaughn I'm gonna make a PR, thank you so much","updated_at":"2021-04-01T19:24:05Z","created_at":"2021-04-01T19:24:05Z","creator_user_login":"ktfth"}
{"number":19371,"comment_id":"812132596","body":"@bvaughn The PR is [#21166](https://github.com/facebook/react/pull/21166) for this issue","updated_at":"2021-04-01T19:48:41Z","created_at":"2021-04-01T19:47:40Z","creator_user_login":"ktfth"}
{"number":19371,"comment_id":"831848497","body":"Can I take up this issue? If it isn't fixed up yet @bvaughn","updated_at":"2021-05-04T10:46:49Z","created_at":"2021-05-04T10:45:17Z","creator_user_login":"hardikshah197"}
{"number":19371,"comment_id":"831939304","body":"@hardikshah197 If you'd like to take a look at #21166 and maybe lend a hand?","updated_at":"2021-05-04T13:25:31Z","created_at":"2021-05-04T13:25:31Z","creator_user_login":"bvaughn"}
{"number":19371,"comment_id":"832112468","body":"Sure, I'll give it a look on and try it out. Thanks","updated_at":"2021-05-04T17:25:53Z","created_at":"2021-05-04T17:25:53Z","creator_user_login":"hardikshah197"}
{"number":19371,"comment_id":"901881290","body":"@bvaughn is #21166 still open?","updated_at":"2021-08-19T12:40:55Z","created_at":"2021-08-19T12:40:55Z","creator_user_login":"Albert-Jokelin"}
{"number":19371,"comment_id":"901969865","body":"Yes.","updated_at":"2021-08-19T14:36:43Z","created_at":"2021-08-19T14:36:43Z","creator_user_login":"bvaughn"}
{"number":19371,"comment_id":"902189969","body":"I want to work on this.","updated_at":"2021-08-19T19:41:17Z","created_at":"2021-08-19T19:41:17Z","creator_user_login":"Albert-Jokelin"}
{"number":19371,"comment_id":"902191608","body":"This issue is all yours, @Albert-Jokelin! 😄\r\n\r\nI've added the **\"good first issue (taken)\"** label so that others will know not to start work on the issue. If you change your mind about the issue, no worries! Just let me know so that I can remove the label and free it up for someone else to claim.\r\n\r\nCheers!","updated_at":"2021-08-19T19:43:53Z","created_at":"2021-08-19T19:43:53Z","creator_user_login":"bvaughn"}
{"number":19371,"comment_id":"902192165","body":"Ok\n\nOn Thu, Aug 19, 2021 at 3:41 PM Albert Jokelin ***@***.***>\nwrote:\n\n> I want to work on this.\n>\n> —\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/facebook/react/issues/19371#issuecomment-902189969>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AUHXHZTBLKEBV2KXXOJQ263T5VM6XANCNFSM4O2UU54Q>\n> .\n> Triage notifications on the go with GitHub Mobile for iOS\n> <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n> or Android\n> <https://play.google.com/store/apps/details?id=com.github.android&utm_campaign=notification-email>\n> .\n>\n","updated_at":"2021-08-19T19:44:18Z","created_at":"2021-08-19T19:44:18Z","creator_user_login":"streetcredmusicgroup"}
{"number":19371,"comment_id":"904576516","body":"@bvaughn My account with CircleCI doesn't allow me to test the pipeline completely (get stuck at the paywall), is there anyway where I could use React's pipeline?","updated_at":"2021-08-24T12:02:07Z","created_at":"2021-08-24T12:02:07Z","creator_user_login":"Albert-Jokelin"}
{"number":19371,"comment_id":"904704095","body":"@Albert-Jokelin Creating a PR on this repo (even just a Draft PR) should enable that, no?","updated_at":"2021-08-24T14:41:51Z","created_at":"2021-08-24T14:41:51Z","creator_user_login":"bvaughn"}
{"number":19371,"comment_id":"907479999","body":"Nope, it isn't working ","updated_at":"2021-08-27T21:14:36Z","created_at":"2021-08-27T21:14:36Z","creator_user_login":"Albert-Jokelin"}
{"number":25017,"comment_id":"1200850277","body":"React is built with declarative reactive approach to UI. Thus imperative approach using refs is in many cases is simply not idiomatic React. It is included as an \"escape hatch\" and should be used if declarative approach fails completely or is somehow unreasonable.\r\n\r\nFor example, using imperative API for focus is acceptable because focus is managed by the browser and building declarative solution for focus management seems unreasonably complicated:\r\n\r\n```js\r\nconst ref = useRef();\r\n\r\nreturn <>\r\n  <MyInput ref={ref} .../>\r\n <MyButton onClick={() => { ref.current?.focus() } } ...>\r\n</>\r\n```\r\n\r\nOn the other hand, doing the exact same thing for showing a modal dialog is not idiomatic and should be avoided:\r\n\r\n```js\r\nconst ref = useRef();\r\n\r\nreturn <>\r\n  <MyModal ref={ref} ...>{content}</MyModal>\r\n <MyButton onClick={() => { ref.current?.show() } } ...>\r\n</>\r\n```\r\n\r\nWhy? Because declarative solution is simple:\r\n\r\n```js\r\nconst [isModalVisible, setIsModalVisible] = useState();\r\n\r\nreturn <>\r\n  <MyModal isVisible={isModalVisible}>{content}</MyModal>\r\n <MyButton onClick={() => { setIsModalVisible(true) } } ...>\r\n</>\r\n```\r\n\r\n\r\n","updated_at":"2022-08-01T07:58:23Z","created_at":"2022-08-01T07:58:23Z","creator_user_login":"vkurchatkin"}
{"number":25017,"comment_id":"1200942964","body":"@vkurchatkin thank you for your comments. I agree declarative is suitable for react, and that is what react  aiming for.\r\nSo it's all about coding styles, not a performance issues ? ","updated_at":"2022-08-01T09:20:29Z","created_at":"2022-08-01T09:20:29Z","creator_user_login":"dante01yoon"}
{"number":25017,"comment_id":"1406370979","body":"Hi @dante01yoon, @vkurchatkin Do you currently have any additional thoughts since then?\r\n\r\nI still disagree with the last point of the new documentation regarding the use of \"useImperativeHandle\" as inappropriate.\r\n\r\nI found a [valuable article](https://dev.to/teetotum/modalopen-imperative-component-api-in-react-3inc) that is close to my thoughts. I would especially like to highlight the fact:\r\n* no state redundancy, component stores the state and allows read and write by parent.\r\n* encapsulation\r\n* independent - no need to add duplicate state to parent each time. (we can easily imagine it with inputs) (useRef value - may be a solution, but it will be adding child's logic to the parent.\r\n* parent component can only contain own logic and control the subordinate ones\r\n* can be fully reusable\r\n* less state updates - less rerenders\r\n* all dependent logic is inside component\r\n* minus: It is \"imperative\", which contradicts the main react assumptions.\r\n\r\nUsing props is perfectly fine, but referring to this example from the beta documentation, why adding the state to the parent is better than storing that value inside?\r\n<img width=\"932\" alt=\"Zrzut ekranu 2023-01-27 o 12 25 28\" src=\"https://user-images.githubusercontent.com/76013983/215075196-d4d12ef7-1c06-47d0-b258-a8e351857f15.png\">\r\nsource: https://beta.reactjs.org/reference/react/useImperativeHandle\r\nchange my mind.","updated_at":"2023-01-27T11:29:04Z","created_at":"2023-01-27T11:29:04Z","creator_user_login":"mattoracz"}
{"number":25017,"comment_id":"1406456016","body":"@mattoracz thank you for comment! I'm happy to find someone can share this topic at last.\r\nAmong you mention the pros of `useImperativeHandle`, I think `encapsulation` is the big one. \r\n\r\nwhile passing props or handler to child from parent component should be managed from parent component, which can be verbose in some situation, also it doesn't feel intuitive when you  just need some of child state changed or not. In reactive way, you should always write some logic or state manage things from outside and inject through props which child component allowed. This is not quiet handy. \r\n\r\nI think useImperativeHandle is quiet underrated among the hooks. \r\n\r\n","updated_at":"2023-02-22T14:16:28Z","created_at":"2023-01-27T12:41:09Z","creator_user_login":"dante01yoon"}
{"number":25017,"comment_id":"1407827219","body":"@mattoracz  Did you remove your comment in https://github.com/reactjs/reactjs.org/issues/3308","updated_at":"2023-01-30T00:43:00Z","created_at":"2023-01-30T00:43:00Z","creator_user_login":"dante01yoon"}
{"number":25017,"comment_id":"1410760758","body":"In 99% cases I've found imperative handle avoidable and if anything props passing and useContext can solve much of the parent <-> child communication that your app might need. This will make your app to be always deterministic.\r\n\r\nHowever, in rare cases you might find child components to be so disjointed from the app - yet their state in need to be influenced or determined by unspecified parent that imperative approach is the only sensible way.","updated_at":"2023-01-31T17:11:09Z","created_at":"2023-01-31T17:11:09Z","creator_user_login":"QuietNoise"}
{"number":25017,"comment_id":"1431001265","body":"`useImperativeHandle `is useful when you want to build UI animation with multiple step, ie. the user's walkthrough steps. If you have 4-5 small component and try to show/hide, then moving fast and slow base on step by step, then using state/props will be a disaster. That's why it was born for purpose. ","updated_at":"2023-02-15T09:22:03Z","created_at":"2023-02-15T09:22:03Z","creator_user_login":"rooneyhoi"}
{"number":25017,"comment_id":"1613478454","body":"@mattoracz Thank you for linking to my article. Yes, I believe `useImperativeHandle` is quite a useful thing to have and I still consider it suitable for modals and such. But I had a little journey of further insight during one of my last projects that made me better understand the warning and the general advise to use declarative.\r\n\r\nI had to implement a feature that would open a popup when something was clicked.\r\nThe click would only act as a trigger to open the popup, so there was no further state involved (nothing to connect clicked thing and open popup).\r\nI implemented it using the imperative approach.\r\nSome time went by and requirements changed. Now the clicked thing should be highlighted as long as the popup is open.\r\nThe imperative approach was not suitable anymore because now there was state for `selectedThing` and `show popup as long as thing is selected` and `de-select thing when popup is dismissed`, so I had to change it to declarative which was now better suited.\r\n\r\nIt made me realize that it depends on the circumstances of the usage of a component whether imperative or declarative is better suited for things like the `open` state of a modal. And a component author usually has no crystal ball to predict which approach will be needed in the future.\r\nSo it makes sense to offer declarative props for anything that can be expressed declaratively - to cater to those circumstances of usage when declarative is more suitable.\r\nAnd additionally offer an imperative approach - to cater to those circumstances of usage when imperative is more suitable.\r\n\r\nSo maybe the best of both worlds is reached with a dual approach - I believe that's called `controlled` and `uncontrolled`.\r\nIn the `controlled` case the parent manages the state for the component.\r\nIn the `uncontrolled` case the component manages its own state internally.\r\nThe component can check for certain properties to be present or absent on the `props` object to determine whether it is rendered in the controlled or in the uncontrolled case: `const isUncontrolled = props.isOpen === undefined;`","updated_at":"2023-06-29T16:16:30Z","created_at":"2023-06-29T16:14:15Z","creator_user_login":"teetotum"}
{"number":26446,"comment_id":"1478471213","body":"\n<!--\n  0 failure: \n  0 warning: \n  \n  1 markdown notices\n  DangerID: danger-id-stable;\n-->\n\n\n\n\nComparing: b798223a620dad77077d27e53cc99cbd54312d99...8291597a4115b085d243867810ceb015c279fa31\n\n## Critical size changes\n\nIncludes critical production bundles, as well as any change greater than 2%:\n\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [oss-stable/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-dom/cjs/react-dom.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.01%** | 165.61 kB | 165.63 kB | +0.06% | 51.88 kB | 51.91 kB\n| [oss-experimental/react-dom/cjs/react-dom.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-dom/cjs/react-dom.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.01%** | 173.44 kB | 173.47 kB | +0.06% | 54.25 kB | 54.28 kB\n| [facebook-www/ReactDOM-prod.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactDOM-prod.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 569.80 kB | 569.77 kB | = | 100.39 kB | 100.38 kB\n| [facebook-www/ReactDOM-prod.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactDOM-prod.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 553.60 kB | 553.57 kB | = | 97.54 kB | 97.54 kB\n| [facebook-react-native/scheduler/cjs/SchedulerMock-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/scheduler/cjs/SchedulerMock-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+13.22%** | 18.04 kB | 20.42 kB | +2.29% | 4.36 kB | 4.46 kB\n| [facebook-www/SchedulerMock-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/SchedulerMock-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+13.07%** | 23.44 kB | 26.51 kB | +2.16% | 5.48 kB | 5.59 kB\n| [facebook-www/SchedulerMock-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/SchedulerMock-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+13.07%** | 23.44 kB | 26.51 kB | +2.16% | 5.48 kB | 5.59 kB\n| [facebook-www/ReactTestUtils-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactTestUtils-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.90%** | 48.09 kB | 54.30 kB | +2.12% | 13.51 kB | 13.79 kB\n| [facebook-www/ReactTestUtils-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactTestUtils-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.90%** | 48.09 kB | 54.30 kB | +2.12% | 13.51 kB | 13.79 kB\n| [oss-experimental/use-sync-external-store/cjs/use-sync-external-store.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/use-sync-external-store/cjs/use-sync-external-store.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.43%** | 0.35 kB | 0.39 kB | +5.65% | 0.25 kB | 0.26 kB\n| [oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.43%** | 0.35 kB | 0.39 kB | +5.65% | 0.25 kB | 0.26 kB\n| [oss-stable/use-sync-external-store/cjs/use-sync-external-store.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/use-sync-external-store/cjs/use-sync-external-store.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.43%** | 0.35 kB | 0.39 kB | +5.65% | 0.25 kB | 0.26 kB\n| [facebook-www/ReactDOMServer-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactDOMServer-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.19%** | 363.59 kB | 407.92 kB | +3.01% | 80.43 kB | 82.85 kB\n| [facebook-www/ReactDOMServer-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactDOMServer-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.16%** | 356.16 kB | 399.47 kB | +2.98% | 78.79 kB | 81.13 kB\n| [facebook-www/ReactDOMServerStreaming-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactDOMServerStreaming-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.15%** | 351.36 kB | 394.06 kB | +2.98% | 77.63 kB | 79.94 kB\n| [facebook-react-native/react/cjs/JSXDEVRuntime-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react/cjs/JSXDEVRuntime-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.15%** | 37.02 kB | 41.52 kB | +2.00% | 10.66 kB | 10.87 kB\n| [facebook-react-native/react/cjs/JSXRuntime-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react/cjs/JSXRuntime-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.12%** | 37.62 kB | 42.18 kB | +2.04% | 10.83 kB | 11.05 kB\n| [facebook-www/ReactDOMTesting-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactDOMTesting-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.05%** | 1,461.04 kB | 1,637.10 kB | +2.54% | 315.70 kB | 323.70 kB\n| [facebook-www/ReactDOMTesting-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactDOMTesting-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.03%** | 1,433.15 kB | 1,605.53 kB | +2.55% | 310.13 kB | 318.04 kB\n| [facebook-react-native/react/cjs/React-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react/cjs/React-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.02%** | 118.87 kB | 133.16 kB | +2.79% | 31.38 kB | 32.26 kB\n| [facebook-www/ReactDOM-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactDOM-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.02%** | 1,442.70 kB | 1,616.10 kB | +2.53% | 311.27 kB | 319.13 kB\n| [facebook-www/ReactDOM-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactDOM-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.00%** | 1,414.81 kB | 1,584.52 kB | +2.55% | 305.70 kB | 313.50 kB\n| [facebook-www/JSXDEVRuntime-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/JSXDEVRuntime-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.99%** | 45.15 kB | 50.56 kB | +2.26% | 12.82 kB | 13.11 kB\n| [facebook-www/JSXDEVRuntime-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/JSXDEVRuntime-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.99%** | 45.15 kB | 50.56 kB | +2.26% | 12.82 kB | 13.11 kB\n| [facebook-www/React-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/React-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.98%** | 125.87 kB | 140.95 kB | +2.87% | 33.36 kB | 34.32 kB\n| [facebook-www/React-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/React-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.97%** | 126.97 kB | 142.17 kB | +2.93% | 33.61 kB | 34.60 kB\n| [oss-experimental/react/cjs/react-jsx-dev-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react/cjs/react-jsx-dev-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.88%** | 0.35 kB | 0.39 kB | +5.47% | 0.26 kB | 0.27 kB\n| [oss-stable-semver/react/cjs/react-jsx-dev-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react/cjs/react-jsx-dev-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.88%** | 0.35 kB | 0.39 kB | +5.47% | 0.26 kB | 0.27 kB\n| [oss-stable/react/cjs/react-jsx-dev-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react/cjs/react-jsx-dev-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.88%** | 0.35 kB | 0.39 kB | +5.47% | 0.26 kB | 0.27 kB\n| [facebook-www/ReactFreshRuntime-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactFreshRuntime-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.56%** | 20.56 kB | 22.94 kB | +1.76% | 6.01 kB | 6.12 kB\n| [facebook-www/ReactFreshRuntime-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactFreshRuntime-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.56%** | 20.56 kB | 22.94 kB | +1.76% | 6.01 kB | 6.12 kB\n| [facebook-www/Scheduler-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/Scheduler-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.56%** | 25.19 kB | 28.11 kB | +1.64% | 6.71 kB | 6.82 kB\n| [facebook-www/Scheduler-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/Scheduler-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.56%** | 25.19 kB | 28.11 kB | +1.64% | 6.71 kB | 6.82 kB\n| [oss-experimental/react-refresh/cjs/react-refresh-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-refresh/cjs/react-refresh-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.55%** | 0.36 kB | 0.40 kB | +4.78% | 0.25 kB | 0.26 kB\n| [oss-stable-semver/react-refresh/cjs/react-refresh-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-refresh/cjs/react-refresh-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.55%** | 0.36 kB | 0.40 kB | +4.78% | 0.25 kB | 0.26 kB\n| [oss-stable/react-refresh/cjs/react-refresh-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-refresh/cjs/react-refresh-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.55%** | 0.36 kB | 0.40 kB | +4.78% | 0.25 kB | 0.26 kB\n| [react-native/implementations/ReactNativeRenderer-dev.fb.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/react-native/implementations/ReactNativeRenderer-dev.fb.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.55%** | 905.76 kB | 1,010.34 kB | +2.92% | 197.55 kB | 203.33 kB\n| [facebook-www/ReactART-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactART-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.54%** | 916.90 kB | 1,022.73 kB | +2.52% | 195.79 kB | 200.72 kB\n| [facebook-www/ReactART-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactART-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.53%** | 905.70 kB | 1,010.13 kB | +2.50% | 193.49 kB | 198.33 kB\n| [react-native/implementations/ReactFabric-dev.fb.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/react-native/implementations/ReactFabric-dev.fb.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.52%** | 890.10 kB | 992.67 kB | +2.94% | 193.09 kB | 198.76 kB\n| [facebook-www/ReactTestRenderer-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactTestRenderer-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.46%** | 805.44 kB | 897.77 kB | +2.49% | 174.98 kB | 179.34 kB\n| [facebook-www/ReactTestRenderer-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactTestRenderer-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.46%** | 805.44 kB | 897.77 kB | +2.49% | 174.99 kB | 179.34 kB\n| [facebook-react-native/scheduler/cjs/Scheduler-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/scheduler/cjs/Scheduler-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.46%** | 17.69 kB | 19.72 kB | +1.76% | 5.06 kB | 5.15 kB\n| [react-native/implementations/ReactNativeRenderer-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/react-native/implementations/ReactNativeRenderer-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.46%** | 879.18 kB | 979.90 kB | +2.94% | 192.79 kB | 198.45 kB\n| [react-native/implementations/ReactFabric-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/react-native/implementations/ReactFabric-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.43%** | 863.52 kB | 962.24 kB | +2.94% | 188.46 kB | 194.00 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.42%** | 798.75 kB | 889.95 kB | +2.51% | 174.04 kB | 178.41 kB\n| [facebook-react-native/react-is/cjs/ReactIs-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react-is/cjs/ReactIs-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.26%** | 7.29 kB | 8.12 kB | +1.68% | 1.97 kB | 2.00 kB\n| [facebook-www/ReactIs-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactIs-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+10.92%** | 7.66 kB | 8.50 kB | +1.52% | 2.03 kB | 2.06 kB\n| [facebook-www/ReactIs-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactIs-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+10.92%** | 7.67 kB | 8.50 kB | +1.52% | 2.03 kB | 2.07 kB\n| [facebook-www/SchedulerPostTask-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/SchedulerPostTask-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+10.90%** | 7.18 kB | 7.97 kB | +1.48% | 2.16 kB | 2.19 kB\n| [facebook-www/SchedulerPostTask-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/SchedulerPostTask-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+10.90%** | 7.18 kB | 7.97 kB | +1.48% | 2.16 kB | 2.19 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler-constants.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-reconciler/cjs/react-reconciler-constants.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+10.13%** | 0.45 kB | 0.50 kB | +5.19% | 0.29 kB | 0.30 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler-constants.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-reconciler/cjs/react-reconciler-constants.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+10.13%** | 0.45 kB | 0.50 kB | +5.19% | 0.29 kB | 0.30 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler-constants.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-reconciler/cjs/react-reconciler-constants.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+10.13%** | 0.45 kB | 0.50 kB | +5.19% | 0.29 kB | 0.30 kB\n| [oss-experimental/use-subscription/cjs/use-subscription.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/use-subscription/cjs/use-subscription.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+8.82%** | 0.41 kB | 0.44 kB | +4.81% | 0.29 kB | 0.31 kB\n| [oss-stable-semver/use-subscription/cjs/use-subscription.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/use-subscription/cjs/use-subscription.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+8.82%** | 0.41 kB | 0.44 kB | +4.81% | 0.29 kB | 0.31 kB\n| [oss-stable/use-subscription/cjs/use-subscription.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/use-subscription/cjs/use-subscription.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+8.82%** | 0.41 kB | 0.44 kB | +4.81% | 0.29 kB | 0.31 kB\n| [oss-experimental/use-sync-external-store/cjs/use-sync-external-store-shim.native.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/use-sync-external-store/cjs/use-sync-external-store-shim.native.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+6.12%** | 0.90 kB | 0.95 kB | +3.25% | 0.52 kB | 0.54 kB\n| [oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store-shim.native.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store-shim.native.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+6.12%** | 0.90 kB | 0.95 kB | +3.25% | 0.52 kB | 0.54 kB\n| [oss-stable/use-sync-external-store/cjs/use-sync-external-store-shim.native.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/use-sync-external-store/cjs/use-sync-external-store-shim.native.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+6.12%** | 0.90 kB | 0.95 kB | +3.25% | 0.52 kB | 0.54 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+5.88%** | 0.90 kB | 0.96 kB | +3.37% | 0.51 kB | 0.52 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+5.88%** | 0.90 kB | 0.96 kB | +3.37% | 0.51 kB | 0.52 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+5.88%** | 0.90 kB | 0.96 kB | +3.37% | 0.51 kB | 0.52 kB\n| [oss-experimental/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+5.37%** | 1.06 kB | 1.12 kB | +2.97% | 0.61 kB | 0.62 kB\n| [oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+5.37%** | 1.06 kB | 1.12 kB | +2.97% | 0.61 kB | 0.62 kB\n| [oss-stable/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+5.37%** | 1.06 kB | 1.12 kB | +2.97% | 0.61 kB | 0.62 kB\n| [oss-experimental/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.58%** | 1.05 kB | 1.10 kB | +2.82% | 0.57 kB | 0.58 kB\n| [oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.58%** | 1.05 kB | 1.10 kB | +2.82% | 0.57 kB | 0.58 kB\n| [oss-stable/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.58%** | 1.05 kB | 1.10 kB | +2.82% | 0.57 kB | 0.58 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react/cjs/react-jsx-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.30%** | 0.86 kB | 0.90 kB | +2.76% | 0.54 kB | 0.56 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react/cjs/react-jsx-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.30%** | 0.86 kB | 0.90 kB | +2.76% | 0.54 kB | 0.56 kB\n| [oss-stable/react/cjs/react-jsx-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react/cjs/react-jsx-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.30%** | 0.86 kB | 0.90 kB | +2.76% | 0.54 kB | 0.56 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-flight-server.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-flight-server.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.07%** | 1.30 kB | 1.36 kB | +2.28% | 0.62 kB | 0.63 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-flight-server.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-flight-server.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.07%** | 1.30 kB | 1.36 kB | +2.28% | 0.62 kB | 0.63 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-flight-server.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-flight-server.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.07%** | 1.30 kB | 1.36 kB | +2.28% | 0.62 kB | 0.63 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-dom/cjs/react-dom-server-rendering-stub.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+3.80%** | 1.34 kB | 1.39 kB | +2.10% | 0.71 kB | 0.73 kB\n| [oss-stable/react-dom/cjs/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-dom/cjs/react-dom-server-rendering-stub.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+3.73%** | 1.37 kB | 1.42 kB | +2.31% | 0.74 kB | 0.75 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-dom/cjs/react-dom-server-rendering-stub.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+3.37%** | 1.51 kB | 1.57 kB | +1.76% | 0.79 kB | 0.81 kB\n| [oss-experimental/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.98%** | 1.11 kB | 1.14 kB | +2.73% | 0.62 kB | 0.64 kB\n| [oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.98%** | 1.11 kB | 1.14 kB | +2.73% | 0.62 kB | 0.64 kB\n| [oss-stable/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.98%** | 1.11 kB | 1.14 kB | +2.73% | 0.62 kB | 0.64 kB\n| [oss-experimental/scheduler/cjs/scheduler-unstable_post_task.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/scheduler/cjs/scheduler-unstable_post_task.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.37%** | 2.02 kB | 2.07 kB | +2.17% | 0.88 kB | 0.90 kB\n| [oss-stable-semver/scheduler/cjs/scheduler-unstable_post_task.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/scheduler/cjs/scheduler-unstable_post_task.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.37%** | 2.02 kB | 2.07 kB | +2.17% | 0.88 kB | 0.90 kB\n| [oss-stable/scheduler/cjs/scheduler-unstable_post_task.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/scheduler/cjs/scheduler-unstable_post_task.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.37%** | 2.02 kB | 2.07 kB | +2.17% | 0.88 kB | 0.90 kB\n| [oss-stable-semver/react-dom/unstable_server-external-runtime.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-dom/unstable_server-external-runtime.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.21%** | 2.80 kB | 2.86 kB | +3.58% | 1.26 kB | 1.30 kB\n| [oss-stable/react-dom/unstable_server-external-runtime.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-dom/unstable_server-external-runtime.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.21%** | 2.80 kB | 2.86 kB | +3.58% | 1.26 kB | 1.30 kB\n| [oss-experimental/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/jest-react/cjs/jest-react.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.11%** | 1.43 kB | 1.46 kB | +2.23% | 0.76 kB | 0.78 kB\n| [oss-stable-semver/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/jest-react/cjs/jest-react.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.11%** | 1.43 kB | 1.46 kB | +2.23% | 0.76 kB | 0.78 kB\n| [oss-stable/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/jest-react/cjs/jest-react.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.11%** | 1.43 kB | 1.46 kB | +2.23% | 0.76 kB | 0.78 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react/cjs/react-jsx-runtime.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.86 kB | 0.84 kB | = | 0.54 kB | 0.53 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react/cjs/react-jsx-runtime.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.86 kB | 0.84 kB | = | 0.54 kB | 0.53 kB\n| [oss-stable/react/cjs/react-jsx-runtime.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react/cjs/react-jsx-runtime.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.86 kB | 0.84 kB | = | 0.54 kB | 0.53 kB\n| [facebook-react-native/react/cjs/JSXDEVRuntime-prod.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react/cjs/JSXDEVRuntime-prod.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.43 kB | 0.41 kB | = | 0.32 kB | 0.31 kB\n| [facebook-react-native/react/cjs/JSXDEVRuntime-profiling.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react/cjs/JSXDEVRuntime-profiling.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.43 kB | 0.41 kB | = | 0.32 kB | 0.31 kB\n| [facebook-www/JSXDEVRuntime-prod.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/JSXDEVRuntime-prod.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.43 kB | 0.41 kB | = | 0.30 kB | 0.30 kB\n| [facebook-www/JSXDEVRuntime-prod.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/JSXDEVRuntime-prod.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.43 kB | 0.41 kB | = | 0.30 kB | 0.30 kB\n| [facebook-www/JSXDEVRuntime-profiling.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/JSXDEVRuntime-profiling.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.43 kB | 0.41 kB | = | 0.30 kB | 0.30 kB\n| [facebook-www/JSXDEVRuntime-profiling.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/JSXDEVRuntime-profiling.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.43 kB | 0.41 kB | = | 0.30 kB | 0.30 kB\n| [oss-experimental/react/cjs/react-jsx-dev-runtime.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react/cjs/react-jsx-dev-runtime.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.34 kB | 0.32 kB | = | 0.26 kB | 0.25 kB\n| [oss-stable-semver/react/cjs/react-jsx-dev-runtime.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react/cjs/react-jsx-dev-runtime.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.34 kB | 0.32 kB | = | 0.26 kB | 0.25 kB\n| [oss-stable/react/cjs/react-jsx-dev-runtime.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react/cjs/react-jsx-dev-runtime.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.34 kB | 0.32 kB | = | 0.26 kB | 0.25 kB\n\n## Significant size changes\n\nIncludes any change greater than 0.2%:\n\n\n<details>\n<summary>Expand to show</summary>\n\n  | Name | +/- | Base | Current | +/- gzip | Base gzip | Current gzip |\n  | ---- | --- | ---- | ------- | -------- | --------- | ------------ |\n| [facebook-react-native/scheduler/cjs/SchedulerMock-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/scheduler/cjs/SchedulerMock-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+13.22%** | 18.04 kB | 20.42 kB | +2.29% | 4.36 kB | 4.46 kB\n| [facebook-www/SchedulerMock-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/SchedulerMock-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+13.07%** | 23.44 kB | 26.51 kB | +2.16% | 5.48 kB | 5.59 kB\n| [facebook-www/SchedulerMock-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/SchedulerMock-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+13.07%** | 23.44 kB | 26.51 kB | +2.16% | 5.48 kB | 5.59 kB\n| [facebook-www/ReactTestUtils-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactTestUtils-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.90%** | 48.09 kB | 54.30 kB | +2.12% | 13.51 kB | 13.79 kB\n| [facebook-www/ReactTestUtils-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactTestUtils-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.90%** | 48.09 kB | 54.30 kB | +2.12% | 13.51 kB | 13.79 kB\n| [oss-experimental/use-sync-external-store/cjs/use-sync-external-store.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/use-sync-external-store/cjs/use-sync-external-store.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.43%** | 0.35 kB | 0.39 kB | +5.65% | 0.25 kB | 0.26 kB\n| [oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.43%** | 0.35 kB | 0.39 kB | +5.65% | 0.25 kB | 0.26 kB\n| [oss-stable/use-sync-external-store/cjs/use-sync-external-store.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/use-sync-external-store/cjs/use-sync-external-store.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.43%** | 0.35 kB | 0.39 kB | +5.65% | 0.25 kB | 0.26 kB\n| [facebook-www/ReactDOMServer-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactDOMServer-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.19%** | 363.59 kB | 407.92 kB | +3.01% | 80.43 kB | 82.85 kB\n| [facebook-www/ReactDOMServer-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactDOMServer-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.16%** | 356.16 kB | 399.47 kB | +2.98% | 78.79 kB | 81.13 kB\n| [facebook-www/ReactDOMServerStreaming-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactDOMServerStreaming-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.15%** | 351.36 kB | 394.06 kB | +2.98% | 77.63 kB | 79.94 kB\n| [facebook-react-native/react/cjs/JSXDEVRuntime-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react/cjs/JSXDEVRuntime-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.15%** | 37.02 kB | 41.52 kB | +2.00% | 10.66 kB | 10.87 kB\n| [facebook-react-native/react/cjs/JSXRuntime-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react/cjs/JSXRuntime-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.12%** | 37.62 kB | 42.18 kB | +2.04% | 10.83 kB | 11.05 kB\n| [facebook-www/ReactDOMTesting-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactDOMTesting-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.05%** | 1,461.04 kB | 1,637.10 kB | +2.54% | 315.70 kB | 323.70 kB\n| [facebook-www/ReactDOMTesting-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactDOMTesting-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.03%** | 1,433.15 kB | 1,605.53 kB | +2.55% | 310.13 kB | 318.04 kB\n| [facebook-react-native/react/cjs/React-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react/cjs/React-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.02%** | 118.87 kB | 133.16 kB | +2.79% | 31.38 kB | 32.26 kB\n| [facebook-www/ReactDOM-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactDOM-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.02%** | 1,442.70 kB | 1,616.10 kB | +2.53% | 311.27 kB | 319.13 kB\n| [facebook-www/ReactDOM-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactDOM-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+12.00%** | 1,414.81 kB | 1,584.52 kB | +2.55% | 305.70 kB | 313.50 kB\n| [facebook-www/JSXDEVRuntime-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/JSXDEVRuntime-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.99%** | 45.15 kB | 50.56 kB | +2.26% | 12.82 kB | 13.11 kB\n| [facebook-www/JSXDEVRuntime-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/JSXDEVRuntime-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.99%** | 45.15 kB | 50.56 kB | +2.26% | 12.82 kB | 13.11 kB\n| [facebook-www/React-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/React-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.98%** | 125.87 kB | 140.95 kB | +2.87% | 33.36 kB | 34.32 kB\n| [facebook-www/React-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/React-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.97%** | 126.97 kB | 142.17 kB | +2.93% | 33.61 kB | 34.60 kB\n| [oss-experimental/react/cjs/react-jsx-dev-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react/cjs/react-jsx-dev-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.88%** | 0.35 kB | 0.39 kB | +5.47% | 0.26 kB | 0.27 kB\n| [oss-stable-semver/react/cjs/react-jsx-dev-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react/cjs/react-jsx-dev-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.88%** | 0.35 kB | 0.39 kB | +5.47% | 0.26 kB | 0.27 kB\n| [oss-stable/react/cjs/react-jsx-dev-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react/cjs/react-jsx-dev-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.88%** | 0.35 kB | 0.39 kB | +5.47% | 0.26 kB | 0.27 kB\n| [facebook-www/ReactFreshRuntime-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactFreshRuntime-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.56%** | 20.56 kB | 22.94 kB | +1.76% | 6.01 kB | 6.12 kB\n| [facebook-www/ReactFreshRuntime-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactFreshRuntime-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.56%** | 20.56 kB | 22.94 kB | +1.76% | 6.01 kB | 6.12 kB\n| [facebook-www/Scheduler-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/Scheduler-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.56%** | 25.19 kB | 28.11 kB | +1.64% | 6.71 kB | 6.82 kB\n| [facebook-www/Scheduler-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/Scheduler-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.56%** | 25.19 kB | 28.11 kB | +1.64% | 6.71 kB | 6.82 kB\n| [oss-experimental/react-refresh/cjs/react-refresh-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-refresh/cjs/react-refresh-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.55%** | 0.36 kB | 0.40 kB | +4.78% | 0.25 kB | 0.26 kB\n| [oss-stable-semver/react-refresh/cjs/react-refresh-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-refresh/cjs/react-refresh-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.55%** | 0.36 kB | 0.40 kB | +4.78% | 0.25 kB | 0.26 kB\n| [oss-stable/react-refresh/cjs/react-refresh-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-refresh/cjs/react-refresh-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.55%** | 0.36 kB | 0.40 kB | +4.78% | 0.25 kB | 0.26 kB\n| [react-native/implementations/ReactNativeRenderer-dev.fb.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/react-native/implementations/ReactNativeRenderer-dev.fb.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.55%** | 905.76 kB | 1,010.34 kB | +2.92% | 197.55 kB | 203.33 kB\n| [facebook-www/ReactART-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactART-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.54%** | 916.90 kB | 1,022.73 kB | +2.52% | 195.79 kB | 200.72 kB\n| [facebook-www/ReactART-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactART-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.53%** | 905.70 kB | 1,010.13 kB | +2.50% | 193.49 kB | 198.33 kB\n| [react-native/implementations/ReactFabric-dev.fb.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/react-native/implementations/ReactFabric-dev.fb.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.52%** | 890.10 kB | 992.67 kB | +2.94% | 193.09 kB | 198.76 kB\n| [facebook-www/ReactTestRenderer-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactTestRenderer-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.46%** | 805.44 kB | 897.77 kB | +2.49% | 174.98 kB | 179.34 kB\n| [facebook-www/ReactTestRenderer-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactTestRenderer-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.46%** | 805.44 kB | 897.77 kB | +2.49% | 174.99 kB | 179.34 kB\n| [facebook-react-native/scheduler/cjs/Scheduler-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/scheduler/cjs/Scheduler-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.46%** | 17.69 kB | 19.72 kB | +1.76% | 5.06 kB | 5.15 kB\n| [react-native/implementations/ReactNativeRenderer-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/react-native/implementations/ReactNativeRenderer-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.46%** | 879.18 kB | 979.90 kB | +2.94% | 192.79 kB | 198.45 kB\n| [react-native/implementations/ReactFabric-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/react-native/implementations/ReactFabric-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.43%** | 863.52 kB | 962.24 kB | +2.94% | 188.46 kB | 194.00 kB\n| [facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react-test-renderer/cjs/ReactTestRenderer-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.42%** | 798.75 kB | 889.95 kB | +2.51% | 174.04 kB | 178.41 kB\n| [facebook-react-native/react-is/cjs/ReactIs-dev.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react-is/cjs/ReactIs-dev.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+11.26%** | 7.29 kB | 8.12 kB | +1.68% | 1.97 kB | 2.00 kB\n| [facebook-www/ReactIs-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactIs-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+10.92%** | 7.66 kB | 8.50 kB | +1.52% | 2.03 kB | 2.06 kB\n| [facebook-www/ReactIs-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactIs-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+10.92%** | 7.67 kB | 8.50 kB | +1.52% | 2.03 kB | 2.07 kB\n| [facebook-www/SchedulerPostTask-dev.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/SchedulerPostTask-dev.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+10.90%** | 7.18 kB | 7.97 kB | +1.48% | 2.16 kB | 2.19 kB\n| [facebook-www/SchedulerPostTask-dev.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/SchedulerPostTask-dev.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+10.90%** | 7.18 kB | 7.97 kB | +1.48% | 2.16 kB | 2.19 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler-constants.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-reconciler/cjs/react-reconciler-constants.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+10.13%** | 0.45 kB | 0.50 kB | +5.19% | 0.29 kB | 0.30 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler-constants.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-reconciler/cjs/react-reconciler-constants.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+10.13%** | 0.45 kB | 0.50 kB | +5.19% | 0.29 kB | 0.30 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler-constants.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-reconciler/cjs/react-reconciler-constants.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+10.13%** | 0.45 kB | 0.50 kB | +5.19% | 0.29 kB | 0.30 kB\n| [oss-experimental/use-subscription/cjs/use-subscription.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/use-subscription/cjs/use-subscription.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+8.82%** | 0.41 kB | 0.44 kB | +4.81% | 0.29 kB | 0.31 kB\n| [oss-stable-semver/use-subscription/cjs/use-subscription.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/use-subscription/cjs/use-subscription.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+8.82%** | 0.41 kB | 0.44 kB | +4.81% | 0.29 kB | 0.31 kB\n| [oss-stable/use-subscription/cjs/use-subscription.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/use-subscription/cjs/use-subscription.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+8.82%** | 0.41 kB | 0.44 kB | +4.81% | 0.29 kB | 0.31 kB\n| [oss-experimental/use-sync-external-store/cjs/use-sync-external-store-shim.native.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/use-sync-external-store/cjs/use-sync-external-store-shim.native.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+6.12%** | 0.90 kB | 0.95 kB | +3.25% | 0.52 kB | 0.54 kB\n| [oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store-shim.native.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store-shim.native.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+6.12%** | 0.90 kB | 0.95 kB | +3.25% | 0.52 kB | 0.54 kB\n| [oss-stable/use-sync-external-store/cjs/use-sync-external-store-shim.native.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/use-sync-external-store/cjs/use-sync-external-store-shim.native.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+6.12%** | 0.90 kB | 0.95 kB | +3.25% | 0.52 kB | 0.54 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+5.88%** | 0.90 kB | 0.96 kB | +3.37% | 0.51 kB | 0.52 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+5.88%** | 0.90 kB | 0.96 kB | +3.37% | 0.51 kB | 0.52 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-flight-client.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+5.88%** | 0.90 kB | 0.96 kB | +3.37% | 0.51 kB | 0.52 kB\n| [oss-experimental/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+5.37%** | 1.06 kB | 1.12 kB | +2.97% | 0.61 kB | 0.62 kB\n| [oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+5.37%** | 1.06 kB | 1.12 kB | +2.97% | 0.61 kB | 0.62 kB\n| [oss-stable/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/use-sync-external-store/cjs/use-sync-external-store-with-selector.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+5.37%** | 1.06 kB | 1.12 kB | +2.97% | 0.61 kB | 0.62 kB\n| [oss-experimental/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.58%** | 1.05 kB | 1.10 kB | +2.82% | 0.57 kB | 0.58 kB\n| [oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.58%** | 1.05 kB | 1.10 kB | +2.82% | 0.57 kB | 0.58 kB\n| [oss-stable/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.58%** | 1.05 kB | 1.10 kB | +2.82% | 0.57 kB | 0.58 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react/cjs/react-jsx-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.30%** | 0.86 kB | 0.90 kB | +2.76% | 0.54 kB | 0.56 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react/cjs/react-jsx-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.30%** | 0.86 kB | 0.90 kB | +2.76% | 0.54 kB | 0.56 kB\n| [oss-stable/react/cjs/react-jsx-runtime.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react/cjs/react-jsx-runtime.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.30%** | 0.86 kB | 0.90 kB | +2.76% | 0.54 kB | 0.56 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-flight-server.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-flight-server.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.07%** | 1.30 kB | 1.36 kB | +2.28% | 0.62 kB | 0.63 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-flight-server.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-flight-server.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.07%** | 1.30 kB | 1.36 kB | +2.28% | 0.62 kB | 0.63 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-flight-server.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-flight-server.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+4.07%** | 1.30 kB | 1.36 kB | +2.28% | 0.62 kB | 0.63 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-dom/cjs/react-dom-server-rendering-stub.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+3.80%** | 1.34 kB | 1.39 kB | +2.10% | 0.71 kB | 0.73 kB\n| [oss-stable/react-dom/cjs/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-dom/cjs/react-dom-server-rendering-stub.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+3.73%** | 1.37 kB | 1.42 kB | +2.31% | 0.74 kB | 0.75 kB\n| [oss-experimental/react-dom/cjs/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-dom/cjs/react-dom-server-rendering-stub.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+3.37%** | 1.51 kB | 1.57 kB | +1.76% | 0.79 kB | 0.81 kB\n| [oss-experimental/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.98%** | 1.11 kB | 1.14 kB | +2.73% | 0.62 kB | 0.64 kB\n| [oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.98%** | 1.11 kB | 1.14 kB | +2.73% | 0.62 kB | 0.64 kB\n| [oss-stable/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.98%** | 1.11 kB | 1.14 kB | +2.73% | 0.62 kB | 0.64 kB\n| [oss-experimental/scheduler/cjs/scheduler-unstable_post_task.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/scheduler/cjs/scheduler-unstable_post_task.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.37%** | 2.02 kB | 2.07 kB | +2.17% | 0.88 kB | 0.90 kB\n| [oss-stable-semver/scheduler/cjs/scheduler-unstable_post_task.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/scheduler/cjs/scheduler-unstable_post_task.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.37%** | 2.02 kB | 2.07 kB | +2.17% | 0.88 kB | 0.90 kB\n| [oss-stable/scheduler/cjs/scheduler-unstable_post_task.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/scheduler/cjs/scheduler-unstable_post_task.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.37%** | 2.02 kB | 2.07 kB | +2.17% | 0.88 kB | 0.90 kB\n| [oss-stable-semver/react-dom/unstable_server-external-runtime.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-dom/unstable_server-external-runtime.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.21%** | 2.80 kB | 2.86 kB | +3.58% | 1.26 kB | 1.30 kB\n| [oss-stable/react-dom/unstable_server-external-runtime.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-dom/unstable_server-external-runtime.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.21%** | 2.80 kB | 2.86 kB | +3.58% | 1.26 kB | 1.30 kB\n| [oss-experimental/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/jest-react/cjs/jest-react.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.11%** | 1.43 kB | 1.46 kB | +2.23% | 0.76 kB | 0.78 kB\n| [oss-stable-semver/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/jest-react/cjs/jest-react.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.11%** | 1.43 kB | 1.46 kB | +2.23% | 0.76 kB | 0.78 kB\n| [oss-stable/jest-react/cjs/jest-react.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/jest-react/cjs/jest-react.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+2.11%** | 1.43 kB | 1.46 kB | +2.23% | 0.76 kB | 0.78 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-node-register.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-node-register.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.97%** | 1.37 kB | 1.40 kB | +1.35% | 0.74 kB | 0.75 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-node-register.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-node-register.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.97%** | 1.37 kB | 1.40 kB | +1.35% | 0.74 kB | 0.75 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-node-register.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-node-register.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.97%** | 1.37 kB | 1.40 kB | +1.35% | 0.74 kB | 0.75 kB\n| [oss-experimental/react-dom/unstable_server-external-runtime.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-dom/unstable_server-external-runtime.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.86%** | 3.33 kB | 3.39 kB | +3.09% | 1.49 kB | 1.54 kB\n| [oss-experimental/react-suspense-test-utils/cjs/react-suspense-test-utils.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-suspense-test-utils/cjs/react-suspense-test-utils.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.81%** | 0.78 kB | 0.79 kB | +2.16% | 0.51 kB | 0.52 kB\n| [oss-stable-semver/react-suspense-test-utils/cjs/react-suspense-test-utils.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-suspense-test-utils/cjs/react-suspense-test-utils.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.81%** | 0.78 kB | 0.79 kB | +2.16% | 0.51 kB | 0.52 kB\n| [oss-stable/react-suspense-test-utils/cjs/react-suspense-test-utils.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-suspense-test-utils/cjs/react-suspense-test-utils.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.81%** | 0.78 kB | 0.79 kB | +2.16% | 0.51 kB | 0.52 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler-reflection.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-reconciler/cjs/react-reconciler-reflection.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.75%** | 2.69 kB | 2.73 kB | +1.40% | 1.14 kB | 1.16 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler-reflection.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-reconciler/cjs/react-reconciler-reflection.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.75%** | 2.69 kB | 2.73 kB | +1.40% | 1.14 kB | 1.16 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler-reflection.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-reconciler/cjs/react-reconciler-reflection.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.75%** | 2.69 kB | 2.73 kB | +1.40% | 1.14 kB | 1.16 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-server.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-server.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.44%** | 3.19 kB | 3.24 kB | +1.23% | 1.22 kB | 1.24 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-server.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-server.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.44%** | 3.19 kB | 3.24 kB | +1.23% | 1.22 kB | 1.24 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-server.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-server.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.44%** | 3.19 kB | 3.24 kB | +1.23% | 1.22 kB | 1.24 kB\n| [oss-experimental/react-cache/cjs/react-cache.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-cache/cjs/react-cache.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.43%** | 2.17 kB | 2.20 kB | +1.73% | 1.10 kB | 1.12 kB\n| [oss-stable-semver/react-cache/cjs/react-cache.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-cache/cjs/react-cache.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.43%** | 2.17 kB | 2.20 kB | +1.73% | 1.10 kB | 1.12 kB\n| [oss-stable/react-cache/cjs/react-cache.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-cache/cjs/react-cache.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.43%** | 2.17 kB | 2.20 kB | +1.73% | 1.10 kB | 1.12 kB\n| [oss-stable-semver/react-is/cjs/react-is.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-is/cjs/react-is.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.24%** | 2.27 kB | 2.29 kB | +1.92% | 0.78 kB | 0.80 kB\n| [oss-stable/react-is/cjs/react-is.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-is/cjs/react-is.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.24%** | 2.27 kB | 2.29 kB | +1.92% | 0.78 kB | 0.80 kB\n| [oss-experimental/react-is/cjs/react-is.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-is/cjs/react-is.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+1.22%** | 2.30 kB | 2.33 kB | +1.89% | 0.79 kB | 0.81 kB\n| [oss-experimental/scheduler/cjs/scheduler-unstable_mock.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/scheduler/cjs/scheduler-unstable_mock.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.88%** | 4.88 kB | 4.92 kB | +0.86% | 1.97 kB | 1.99 kB\n| [oss-stable-semver/scheduler/cjs/scheduler-unstable_mock.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/scheduler/cjs/scheduler-unstable_mock.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.88%** | 4.88 kB | 4.92 kB | +0.86% | 1.97 kB | 1.99 kB\n| [oss-stable/scheduler/cjs/scheduler-unstable_mock.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/scheduler/cjs/scheduler-unstable_mock.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.88%** | 4.88 kB | 4.92 kB | +0.86% | 1.97 kB | 1.99 kB\n| [oss-experimental/scheduler/cjs/scheduler.native.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/scheduler/cjs/scheduler.native.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.77%** | 4.65 kB | 4.69 kB | +1.23% | 1.71 kB | 1.73 kB\n| [oss-stable-semver/scheduler/cjs/scheduler.native.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/scheduler/cjs/scheduler.native.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.77%** | 4.65 kB | 4.69 kB | +1.23% | 1.71 kB | 1.73 kB\n| [oss-stable/scheduler/cjs/scheduler.native.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/scheduler/cjs/scheduler.native.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.77%** | 4.65 kB | 4.69 kB | +1.23% | 1.71 kB | 1.73 kB\n| [oss-experimental/scheduler/cjs/scheduler.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/scheduler/cjs/scheduler.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.69%** | 4.23 kB | 4.26 kB | +1.07% | 1.77 kB | 1.79 kB\n| [oss-stable-semver/scheduler/cjs/scheduler.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/scheduler/cjs/scheduler.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.69%** | 4.23 kB | 4.26 kB | +1.07% | 1.77 kB | 1.79 kB\n| [oss-stable/scheduler/cjs/scheduler.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/scheduler/cjs/scheduler.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.69%** | 4.23 kB | 4.26 kB | +1.07% | 1.77 kB | 1.79 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.60%** | 11.05 kB | 11.11 kB | +0.44% | 4.28 kB | 4.30 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.60%** | 11.05 kB | 11.11 kB | +0.44% | 4.28 kB | 4.30 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.57%** | 10.38 kB | 10.44 kB | +0.47% | 4.04 kB | 4.06 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.57%** | 10.38 kB | 10.44 kB | +0.47% | 4.04 kB | 4.06 kB\n| [oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-client.browser.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-client.browser.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.57%** | 9.68 kB | 9.74 kB | +0.48% | 3.76 kB | 3.77 kB\n| [oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-client.browser.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-client.browser.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.57%** | 9.68 kB | 9.74 kB | +0.48% | 3.76 kB | 3.77 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.unbundled.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.53%** | 12.38 kB | 12.44 kB | +0.45% | 4.65 kB | 4.68 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.browser.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.50%** | 11.70 kB | 11.76 kB | +0.43% | 4.41 kB | 4.43 kB\n| [oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-client.browser.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-client.browser.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.50%** | 11.00 kB | 11.05 kB | +0.46% | 4.13 kB | 4.15 kB\n| [oss-stable-semver/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react/cjs/react.shared-subset.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.49%** | 7.92 kB | 7.96 kB | +0.55% | 3.29 kB | 3.31 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.49%** | 11.37 kB | 11.43 kB | +0.41% | 4.41 kB | 4.43 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.49%** | 11.37 kB | 11.43 kB | +0.41% | 4.41 kB | 4.43 kB\n| [oss-stable/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react/cjs/react.shared-subset.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.49%** | 7.94 kB | 7.98 kB | +0.57% | 3.32 kB | 3.34 kB\n| [oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.49%** | 10.65 kB | 10.70 kB | +0.46% | 4.11 kB | 4.13 kB\n| [oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.49%** | 10.65 kB | 10.70 kB | +0.46% | 4.11 kB | 4.13 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.48%** | 11.63 kB | 11.69 kB | +0.40% | 4.50 kB | 4.52 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.48%** | 11.63 kB | 11.69 kB | +0.40% | 4.50 kB | 4.52 kB\n| [oss-experimental/react-refresh/cjs/react-refresh-babel.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-refresh/cjs/react-refresh-babel.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.48%** | 8.12 kB | 8.16 kB | +0.58% | 2.77 kB | 2.79 kB\n| [oss-stable-semver/react-refresh/cjs/react-refresh-babel.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-refresh/cjs/react-refresh-babel.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.48%** | 8.12 kB | 8.16 kB | +0.58% | 2.77 kB | 2.79 kB\n| [oss-stable/react-refresh/cjs/react-refresh-babel.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-refresh/cjs/react-refresh-babel.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.48%** | 8.12 kB | 8.16 kB | +0.58% | 2.77 kB | 2.79 kB\n| [oss-experimental/react/cjs/react.shared-subset.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react/cjs/react.shared-subset.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.46%** | 8.46 kB | 8.50 kB | +0.55% | 3.47 kB | 3.49 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.node.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.44%** | 12.70 kB | 12.76 kB | +0.42% | 4.79 kB | 4.81 kB\n| [oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-client.node.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.43%** | 11.98 kB | 12.03 kB | +0.42% | 4.49 kB | 4.51 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.43%** | 4.62 kB | 4.64 kB | +0.54% | 2.03 kB | 2.04 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.43%** | 4.62 kB | 4.64 kB | +0.54% | 2.03 kB | 2.04 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-plugin.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.43%** | 4.62 kB | 4.64 kB | +0.54% | 2.03 kB | 2.04 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-client.edge.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.43%** | 12.95 kB | 13.00 kB | +0.39% | 4.88 kB | 4.90 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.32%** | 15.64 kB | 15.69 kB | +0.38% | 4.68 kB | 4.70 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.32%** | 15.64 kB | 15.69 kB | +0.38% | 4.68 kB | 4.70 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer-persistent.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.32%** | 15.64 kB | 15.69 kB | +0.38% | 4.68 kB | 4.70 kB\n| [oss-experimental/react-dom/cjs/react-dom-test-utils.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-dom/cjs/react-dom-test-utils.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.32%** | 12.64 kB | 12.68 kB | +0.35% | 4.84 kB | 4.86 kB\n| [oss-stable-semver/react-dom/cjs/react-dom-test-utils.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-dom/cjs/react-dom-test-utils.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.32%** | 12.64 kB | 12.68 kB | +0.35% | 4.84 kB | 4.86 kB\n| [oss-stable/react-dom/cjs/react-dom-test-utils.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-dom/cjs/react-dom-test-utils.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.32%** | 12.64 kB | 12.68 kB | +0.35% | 4.84 kB | 4.86 kB\n| [oss-stable-semver/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react/cjs/react.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.30%** | 8.30 kB | 8.33 kB | +0.60% | 3.15 kB | 3.17 kB\n| [oss-stable/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react/cjs/react.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.30%** | 8.33 kB | 8.36 kB | +0.63% | 3.17 kB | 3.19 kB\n| [oss-experimental/react/cjs/react.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react/cjs/react.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.27%** | 9.28 kB | 9.30 kB | +0.58% | 3.45 kB | 3.47 kB\n| [oss-experimental/react-noop-renderer/cjs/react-noop-renderer.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-noop-renderer/cjs/react-noop-renderer.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.25%** | 15.57 kB | 15.61 kB | +0.39% | 4.67 kB | 4.68 kB\n| [oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-noop-renderer/cjs/react-noop-renderer.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.25%** | 15.57 kB | 15.61 kB | +0.39% | 4.67 kB | 4.68 kB\n| [oss-stable/react-noop-renderer/cjs/react-noop-renderer.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-noop-renderer/cjs/react-noop-renderer.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.25%** | 15.57 kB | 15.61 kB | +0.39% | 4.67 kB | 4.68 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.25%** | 26.58 kB | 26.65 kB | +0.20% | 9.06 kB | 9.08 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.25%** | 26.58 kB | 26.65 kB | +0.20% | 9.06 kB | 9.08 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.unbundled.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.24%** | 27.74 kB | 27.81 kB | +0.21% | 9.34 kB | 9.36 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.23%** | 25.32 kB | 25.38 kB | +0.22% | 8.62 kB | 8.64 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.23%** | 25.32 kB | 25.38 kB | +0.22% | 8.62 kB | 8.64 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.browser.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.22%** | 26.53 kB | 26.59 kB | +0.21% | 8.92 kB | 8.94 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.22%** | 25.64 kB | 25.70 kB | +0.23% | 8.72 kB | 8.74 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.22%** | 25.64 kB | 25.70 kB | +0.23% | 8.72 kB | 8.74 kB\n| [oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-server.node.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-server-dom-esm/cjs/react-server-dom-esm-server.node.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.22%** | 24.17 kB | 24.22 kB | +0.19% | 8.39 kB | 8.40 kB\n| [oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-server.node.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-server-dom-esm/cjs/react-server-dom-esm-server.node.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.22%** | 24.17 kB | 24.22 kB | +0.19% | 8.39 kB | 8.40 kB\n| [oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-server-dom-webpack/cjs/react-server-dom-webpack-server.edge.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.21%** | 26.85 kB | 26.91 kB | +0.19% | 9.02 kB | 9.04 kB\n| [oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.21%** | 27.11 kB | 27.17 kB | +0.20% | 9.22 kB | 9.24 kB\n| [oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-server-dom-webpack/cjs/react-server-dom-webpack-server.node.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.21%** | 27.11 kB | 27.17 kB | +0.20% | 9.22 kB | 9.24 kB\n| [oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-server.node.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-server-dom-esm/cjs/react-server-dom-esm-server.node.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **+0.21%** | 25.33 kB | 25.38 kB | +0.23% | 8.66 kB | 8.68 kB\n| [oss-experimental/react/umd/react.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react/umd/react.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 13.02 kB | 12.99 kB | = | 4.99 kB | 4.99 kB\n| [oss-experimental/react/umd/react.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react/umd/react.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 13.01 kB | 12.99 kB | = | 5.00 kB | 4.99 kB\n| [oss-experimental/react-dom/umd/react-dom-test-utils.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-dom/umd/react-dom-test-utils.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 12.78 kB | 12.75 kB | = | 4.91 kB | 4.90 kB\n| [oss-stable-semver/react-dom/umd/react-dom-test-utils.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-dom/umd/react-dom-test-utils.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 12.78 kB | 12.75 kB | = | 4.91 kB | 4.90 kB\n| [oss-stable/react-dom/umd/react-dom-test-utils.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-dom/umd/react-dom-test-utils.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 12.78 kB | 12.75 kB | = | 4.91 kB | 4.90 kB\n| [oss-stable/react/umd/react.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react/umd/react.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 12.13 kB | 12.10 kB | = | 4.72 kB | 4.71 kB\n| [oss-stable/react/umd/react.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react/umd/react.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 12.13 kB | 12.10 kB | = | 4.72 kB | 4.71 kB\n| [oss-stable-semver/react/umd/react.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react/umd/react.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 12.10 kB | 12.08 kB | = | 4.69 kB | 4.69 kB\n| [oss-stable-semver/react/umd/react.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react/umd/react.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 12.10 kB | 12.07 kB | = | 4.69 kB | 4.69 kB\n| [oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 11.96 kB | 11.94 kB | = | 4.52 kB | 4.51 kB\n| [oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 10.65 kB | 10.62 kB | = | 4.14 kB | 4.13 kB\n| [oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-server-dom-webpack/umd/react-server-dom-webpack-client.browser.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 10.65 kB | 10.62 kB | = | 4.14 kB | 4.13 kB\n| [oss-experimental/react-debug-tools/cjs/react-debug-tools.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-debug-tools/cjs/react-debug-tools.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 7.13 kB | 7.10 kB | = | 2.66 kB | 2.65 kB\n| [oss-stable-semver/react-debug-tools/cjs/react-debug-tools.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-debug-tools/cjs/react-debug-tools.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 7.13 kB | 7.10 kB | = | 2.66 kB | 2.65 kB\n| [oss-stable/react-debug-tools/cjs/react-debug-tools.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-debug-tools/cjs/react-debug-tools.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 7.13 kB | 7.10 kB | = | 2.66 kB | 2.65 kB\n| [facebook-www/ReactIs-prod.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactIs-prod.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 5.36 kB | 5.34 kB | = | 1.31 kB | 1.30 kB\n| [facebook-www/ReactIs-prod.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/ReactIs-prod.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 5.36 kB | 5.34 kB | = | 1.31 kB | 1.30 kB\n| [facebook-react-native/react-is/cjs/ReactIs-prod.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react-is/cjs/ReactIs-prod.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 4.85 kB | 4.83 kB | = | 1.20 kB | 1.19 kB\n| [facebook-react-native/react-is/cjs/ReactIs-profiling.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react-is/cjs/ReactIs-profiling.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 4.85 kB | 4.83 kB | = | 1.20 kB | 1.19 kB\n| [facebook-www/SchedulerPostTask-prod.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/SchedulerPostTask-prod.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 4.31 kB | 4.29 kB | = | 1.19 kB | 1.18 kB\n| [facebook-www/SchedulerPostTask-prod.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/SchedulerPostTask-prod.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 4.31 kB | 4.29 kB | = | 1.19 kB | 1.18 kB\n| [facebook-www/SchedulerPostTask-profiling.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/SchedulerPostTask-profiling.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 4.31 kB | 4.29 kB | = | 1.19 kB | 1.18 kB\n| [facebook-www/SchedulerPostTask-profiling.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/SchedulerPostTask-profiling.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 4.31 kB | 4.29 kB | = | 1.19 kB | 1.18 kB\n| [oss-experimental/scheduler/umd/scheduler-unstable_mock.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/scheduler/umd/scheduler-unstable_mock.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 4.95 kB | 4.93 kB | = | 2.07 kB | 2.06 kB\n| [oss-stable-semver/scheduler/umd/scheduler-unstable_mock.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/scheduler/umd/scheduler-unstable_mock.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 4.95 kB | 4.93 kB | = | 2.07 kB | 2.06 kB\n| [oss-stable/scheduler/umd/scheduler-unstable_mock.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/scheduler/umd/scheduler-unstable_mock.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 4.95 kB | 4.93 kB | = | 2.07 kB | 2.06 kB\n| [facebook-www/React-profiling.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/React-profiling.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 21.32 kB | 21.13 kB | = | 5.34 kB | 5.29 kB\n| [facebook-www/React-profiling.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/React-profiling.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 21.03 kB | 20.84 kB | = | 5.26 kB | 5.21 kB\n| [facebook-react-native/react/cjs/React-profiling.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react/cjs/React-profiling.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 20.76 kB | 20.57 kB | = | 5.23 kB | 5.18 kB\n| [oss-experimental/react-is/umd/react-is.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-is/umd/react-is.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 2.39 kB | 2.36 kB | = | 0.89 kB | 0.88 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 124.10 kB | 122.68 kB | +0.42% | 37.33 kB | 37.48 kB\n| [oss-stable-semver/react-is/umd/react-is.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-is/umd/react-is.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 2.35 kB | 2.32 kB | = | 0.88 kB | 0.87 kB\n| [oss-stable/react-is/umd/react-is.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-is/umd/react-is.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 2.35 kB | 2.32 kB | = | 0.88 kB | 0.87 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 119.57 kB | 118.17 kB | +0.45% | 35.95 kB | 36.11 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-reconciler/cjs/react-reconciler.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 119.54 kB | 118.15 kB | +0.45% | 35.93 kB | 36.09 kB\n| [oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-reconciler/cjs/react-reconciler.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 115.08 kB | 113.72 kB | +0.20% | 35.10 kB | 35.17 kB\n| [oss-experimental/react-client/cjs/react-client-flight.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-client/cjs/react-client-flight.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 10.70 kB | 10.57 kB | = | 4.05 kB | 4.03 kB\n| [oss-stable/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-reconciler/cjs/react-reconciler.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 110.55 kB | 109.22 kB | +0.38% | 33.72 kB | 33.85 kB\n| [oss-stable-semver/react-reconciler/cjs/react-reconciler.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-reconciler/cjs/react-reconciler.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 110.53 kB | 109.20 kB | +0.38% | 33.69 kB | 33.82 kB\n| [facebook-www/Scheduler-profiling.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/Scheduler-profiling.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 15.40 kB | 15.21 kB | = | 3.62 kB | 3.58 kB\n| [facebook-www/Scheduler-profiling.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/Scheduler-profiling.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 15.40 kB | 15.21 kB | = | 3.62 kB | 3.58 kB\n| [facebook-react-native/react/cjs/JSXRuntime-prod.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react/cjs/JSXRuntime-prod.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 1.49 kB | 1.47 kB | = | 0.73 kB | 0.72 kB\n| [facebook-react-native/react/cjs/JSXRuntime-profiling.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react/cjs/JSXRuntime-profiling.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 1.49 kB | 1.47 kB | = | 0.73 kB | 0.72 kB\n| [oss-stable-semver/react-client/cjs/react-client-flight.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-client/cjs/react-client-flight.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 9.51 kB | 9.38 kB | = | 3.73 kB | 3.70 kB\n| [oss-stable/react-client/cjs/react-client-flight.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-client/cjs/react-client-flight.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 9.51 kB | 9.38 kB | = | 3.73 kB | 3.70 kB\n| [oss-experimental/react-server/cjs/react-server-flight.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-server/cjs/react-server-flight.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 17.53 kB | 17.26 kB | = | 6.19 kB | 6.17 kB\n| [oss-experimental/react-dom/umd/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-dom/umd/react-dom-server-rendering-stub.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 1.73 kB | 1.71 kB | = | 0.91 kB | 0.91 kB\n| [oss-stable-semver/react-server/cjs/react-server-flight.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-server/cjs/react-server-flight.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 16.40 kB | 16.13 kB | = | 5.91 kB | 5.90 kB\n| [oss-stable/react-server/cjs/react-server-flight.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-server/cjs/react-server-flight.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 16.40 kB | 16.13 kB | = | 5.91 kB | 5.90 kB\n| [facebook-react-native/scheduler/cjs/Scheduler-profiling.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/scheduler/cjs/Scheduler-profiling.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 11.20 kB | 11.01 kB | = | 2.80 kB | 2.75 kB\n| [oss-stable/react-dom/umd/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-dom/umd/react-dom-server-rendering-stub.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 1.58 kB | 1.55 kB | = | 0.86 kB | 0.86 kB\n| [oss-stable-semver/react-dom/umd/react-dom-server-rendering-stub.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-dom/umd/react-dom-server-rendering-stub.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 1.55 kB | 1.52 kB | = | 0.84 kB | 0.83 kB\n| [oss-experimental/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react-server/cjs/react-server.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 26.27 kB | 25.78 kB | +0.09% | 8.91 kB | 8.92 kB\n| [oss-stable-semver/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react-server/cjs/react-server.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 25.52 kB | 25.03 kB | +0.17% | 8.67 kB | 8.68 kB\n| [oss-stable/react-server/cjs/react-server.production.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react-server/cjs/react-server.production.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 25.52 kB | 25.03 kB | +0.17% | 8.67 kB | 8.68 kB\n| [oss-experimental/react/cjs/react-jsx-runtime.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react/cjs/react-jsx-runtime.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.86 kB | 0.84 kB | = | 0.54 kB | 0.53 kB\n| [oss-stable-semver/react/cjs/react-jsx-runtime.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react/cjs/react-jsx-runtime.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.86 kB | 0.84 kB | = | 0.54 kB | 0.53 kB\n| [oss-stable/react/cjs/react-jsx-runtime.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react/cjs/react-jsx-runtime.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.86 kB | 0.84 kB | = | 0.54 kB | 0.53 kB\n| [facebook-react-native/react/cjs/JSXDEVRuntime-prod.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react/cjs/JSXDEVRuntime-prod.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.43 kB | 0.41 kB | = | 0.32 kB | 0.31 kB\n| [facebook-react-native/react/cjs/JSXDEVRuntime-profiling.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-react-native/react/cjs/JSXDEVRuntime-profiling.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.43 kB | 0.41 kB | = | 0.32 kB | 0.31 kB\n| [facebook-www/JSXDEVRuntime-prod.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/JSXDEVRuntime-prod.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.43 kB | 0.41 kB | = | 0.30 kB | 0.30 kB\n| [facebook-www/JSXDEVRuntime-prod.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/JSXDEVRuntime-prod.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.43 kB | 0.41 kB | = | 0.30 kB | 0.30 kB\n| [facebook-www/JSXDEVRuntime-profiling.classic.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/JSXDEVRuntime-profiling.classic.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.43 kB | 0.41 kB | = | 0.30 kB | 0.30 kB\n| [facebook-www/JSXDEVRuntime-profiling.modern.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/facebook-www/JSXDEVRuntime-profiling.modern.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.43 kB | 0.41 kB | = | 0.30 kB | 0.30 kB\n| [oss-experimental/react/cjs/react-jsx-dev-runtime.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-experimental/react/cjs/react-jsx-dev-runtime.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.34 kB | 0.32 kB | = | 0.26 kB | 0.25 kB\n| [oss-stable-semver/react/cjs/react-jsx-dev-runtime.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable-semver/react/cjs/react-jsx-dev-runtime.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.34 kB | 0.32 kB | = | 0.26 kB | 0.25 kB\n| [oss-stable/react/cjs/react-jsx-dev-runtime.profiling.min.js](https://react-builds.vercel.app/commits/8291597a4115b085d243867810ceb015c279fa31/files/oss-stable/react/cjs/react-jsx-dev-runtime.profiling.min.js?compare=b798223a620dad77077d27e53cc99cbd54312d99) | **=** | 0.34 kB | 0.32 kB | = | 0.26 kB | 0.25 kB\n</details>\n\n\n<p align=\"right\">\n  Generated by :no_entry_sign: <a href=\"https://danger.systems/js\">dangerJS</a> against 8291597a4115b085d243867810ceb015c279fa31\n</p>\n","updated_at":"2023-08-27T18:27:25Z","created_at":"2023-03-21T19:33:04Z","creator_user_login":"react-sizebot"}
{"number":26446,"comment_id":"1478703902","body":"And this PR is now green!\r\n\r\nIt still needs an actual review, and also to rebased after the Rollup v3 PR is merged, but the sourcemaps work and CI is passing.","updated_at":"2023-03-21T22:59:58Z","created_at":"2023-03-21T22:59:58Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1483238837","body":"The Rollup v3 upgrade in #26442 was merged. Just rebased this against `main` to pick up those changes.\r\n\r\nShould be ready for review now!\r\n\r\n/cc @gaearon","updated_at":"2023-03-24T18:26:54Z","created_at":"2023-03-24T18:26:20Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1484461330","body":"Note that this PR will supercede and invalidate past work on this such as:\r\n\r\n- https://github.com/facebook/react/pull/21946","updated_at":"2023-03-27T04:09:04Z","created_at":"2023-03-27T04:09:04Z","creator_user_login":"0xdevalias"}
{"number":26446,"comment_id":"1484468863","body":"Will this PR also help with sourcemaps in debug builds?  In the past, debugging into React source code with the VS Code debugger has been a challenge, I assume because sourcemaps were not aligned with the actual sources. \r\n\r\ncc @jasonwilliams ","updated_at":"2023-03-27T04:20:04Z","created_at":"2023-03-27T04:20:04Z","creator_user_login":"justingrant"}
{"number":26446,"comment_id":"1484470676","body":"@justingrant : no , I'm not trying to generate sourcemaps for dev build artifacts, because those _should_ already be readable.  Do you have an example where debugging a React dev build isn't working well?","updated_at":"2023-03-27T04:23:31Z","created_at":"2023-03-27T04:23:31Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1484537043","body":"@markerikson - my experience is pretty dated from a few years ago, and was largely focused on create-react-app which handled sourcemap creation in its webpack config. Things might have improved since then. But I do remember that debugging into debug React builds seldom/never aligned with the source. If you believe it's working now, then I'm inclined to trust your judgment and assume that the problems I was seeing were caused by CRA not React's debug sourcemaps.\r\n\r\n@jasonwilliams was also looking into this so he may have more info. ","updated_at":"2023-03-27T05:55:29Z","created_at":"2023-03-27T05:55:29Z","creator_user_login":"justingrant"}
{"number":26446,"comment_id":"1487184889","body":"@gaearon you mentioned on Twitter that [\"the license stuff is complicated\"](https://twitter.com/dan_abramov/status/1639799905454571525).  Any specific concerns there, or other feedback on the PR?","updated_at":"2023-03-28T15:54:39Z","created_at":"2023-03-28T15:54:39Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1487260338","body":"Yes. I don't fully understand what's going on there. One option is that I need to dive into this. Another is that I can pose a constraint from my perspective. This constraint is: can we reduce any manual string manipulation in this PR? Ideally there would be none. What would the approach look like if we did not have any string manipulation code? If it's due to license headers, can we inject them at a different stage (e.g. earlier), or inject them in a way that automatically adjusts the sourcemaps? What is the sequence of problems that make this code necessary?","updated_at":"2023-03-28T16:39:26Z","created_at":"2023-03-28T16:39:00Z","creator_user_login":"gaearon"}
{"number":26446,"comment_id":"1487278652","body":"There's a couple pieces here.\r\n\r\nRollup's own sourcemap handling normally produces a sourcemap where the \"original\" code is \"the individual original source files\", such as `packages/react-reconciler/src/ReactFiberWorkLoop.js`.  While that's better than no sourcemap at all, that's not really very helpful.  The React source code appears to undergo major transformations during the bundling process - various dev/prod checks, code being rearranged based on feature flags, etc.\r\n\r\nBecause of that, what we we _really_ want is to have a sourcemap where the \"original\" code is actually \"the bundle contents right before Closure minified it\" - in other words, the code that actually executed in the user's app.\r\n\r\nIn order to make this happen, I skipped Rollup's sourcemap handling, and had Closure write a sourcemap for its minification step to disk. That contains 95% of the actual sourcemap content that we need.\r\n\r\nHowever, there's one more step in the Rollup pipeline after Closure.  `wrappers.js` adds a combination of license header text and module format wrappers around the bundled source, based on the desired output bundle (Node dev/prod, UMD, FB internal, etc).\r\n\r\nBecause of that, the sourcemap from the Closure step is no longer accurate.  If a particular mapping instruction pointed to a specific line segment in the output, the addition of the license text + wrapper _before_ that in the final output throws off all the mappings.\r\n\r\nIn order to align things correctly, we have to generate a sourcemap for the \"possibly minified bundle -> bundle with license wrapper\" step, and merge that with the \"pre-minified bundle -> post-minified bundle\" step.\r\n\r\nThe best option I could come up with for doing that was to take the output of the license step, split it using the code to get the pieces that were added before and after, and re-run that step with a sourcemap-aware tool (the same `magic-string` library that Rollup uses internally) in order to generate the extra sourcemap.\r\n\r\nIt's _maybe_ possible that we could move the license step before the Closure step, but I suspect that Closure would immediately strip off the license headers because those are comments.  Don't know if there's somehow a Closure option that would allow us to preserve the headers.  Also not sure what effect that would have on the rest of the module wrapping code that `wrappers.js` adds.\r\n\r\nI also played with using `magic-string` inside of `wrappers.js` and sorta got it working, but that actually required more overall effort than this approach did.  I had to start modifying all of the license wrapper template strings in `wrappers.js`, and wanted to go for a set of changes that was more minimal and self-contained.\r\n\r\nWith this approach, the bulk of the sourcemap work is in the one custom Rollup plugin there after the license plugin, and almost all the code changes are inside `getRollupOptions` other than the tweak to have `plugins/closure.js` write a sourcemap to disk.\r\n\r\n","updated_at":"2023-03-28T16:52:20Z","created_at":"2023-03-28T16:52:20Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1487827051","body":"> I also played with using `magic-string` inside of `wrappers.js` and sorta got it working, but that actually required more overall effort than this approach did. I had to start modifying all of the license wrapper template strings in `wrappers.js`, and wanted to go for a set of changes that was more minimal and self-contained.\r\n\r\n@markerikson @gaearon @jasonwilliams For historical purposes, this was also an approach I explored back in July 2022 when I was looking into fixing the things required to get sourcemap support added.\r\n\r\nFrom a quick search, this seems to be (at least one of the) places where I was looking at the license wrapper code, and proposed using `magic-string`, etc:\r\n\r\n- https://github.com/facebook/react/pull/21946#discussion_r917339710 (and the comments that follow it)\r\n\r\nIt includes a bit of a code exploration, some exploration of related libraries, and some proposals/diffs of how it could be used within the existing wrapper code in a 'minimally different'/low touch way, that should be simple to maintain, etc.","updated_at":"2023-03-29T01:38:55Z","created_at":"2023-03-29T01:38:55Z","creator_user_login":"0xdevalias"}
{"number":26446,"comment_id":"1489130712","body":"Huh. I just tried reordering the Rollup plugins so that the license step _does_ go before Closure and it skips the string manipulation step...\r\n\r\nand I _think_ it's working the same way?\r\n\r\nI did a very brief search last night and think I found an indication that Closure might preserve comments with `@license` blocks.\r\n\r\nI need to do some more investigation here, but this seems promising at first glance.","updated_at":"2023-03-29T18:52:10Z","created_at":"2023-03-29T18:52:10Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1489229783","body":"Adding the license + wrappers _before_ the Closure step seems to work.\r\n\r\nI did have to [add an extra `@preserve` attribute](https://github.com/google/closure-compiler/wiki/Annotating-JavaScript-for-the-Closure-Compiler#license-preserve-description) to the RN bundle wrappers in order to get it to keep those license blocks, but that appears to be getting kept now.\r\n\r\nThat removes the need for the string manipulation and the extra sourcemap merging step.\r\n\r\nThe sourcemaps themselves still appear to be fully accurate.\r\n\r\nSome of the RN dev bundles have increased in size, but that appears to be due to them getting formatted by Prettier more so than they were previously (function call args getting split across multiple lines, etc).  No actual content changes that I can see.","updated_at":"2023-03-29T20:13:59Z","created_at":"2023-03-29T20:03:47Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1489254326","body":"@gaearon I think this looks pretty good! Please look it over when you get a chance and let me know if you have further feedback!","updated_at":"2023-03-29T20:22:47Z","created_at":"2023-03-29T20:22:47Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1505479569","body":"I reverted the PR back to excluding `react-debug-tools` from having a sourcemap:\r\n\r\n- We know that `ReactDevToolsHooksIntegration-test.js` worked correctly before there were sourcemaps\r\n- `react-debug-tools` is an internal package that doesn't _need_ sourcemaps\r\n- The test fails because having a sourcemap for that production artifact changes Node's generated stack traces.  The test setup code is overriding `global.Error` with a Proxy wrapper.  The sourcemap causes the stack trace to have different text, which causes the error stack to parse differently, which causes the hook name detection to have a mismatch.  So, we _don't_ want a sourcemap for that package.\r\n\r\nThis PR is good to go as far as I can see.\r\n\r\n@gaearon any other questions or concerns here?","updated_at":"2023-04-12T15:30:22Z","created_at":"2023-04-12T15:30:22Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1516609287","body":"I like this change somewhat. What I saw by looking at the source map, however, is that the map itself only has the pre-minified bundled source. That is to say, the `sources` array only contains, for example, `react-dom.production.min.js`, which itself is not actually minified.\r\n\r\nA couple thoughts:\r\n\r\n - I think it would be preferable if we could make it so that this did not have the `.min` in the name. This would allow us to disambiguate between the two states.\r\n - Obviously it would be more ideal if we could put the original file names in. However, I do recognize that the plugin pipeline may not afford this possibility as it currently exists.\r\n\r\nWDYT? Probably we could add a small plugin that would modify the outputted .map files to remove the `.min` from the `sources` array names without too much trouble. \r\n\r\nFor a little background, I'm working to support some of our other internal engineers, and we're considering whether we want to opt into some kind of \"double unminification,\" in which an internal source mapped source with a name ending in `.min.js` might try to go fetch a source map for the internal source file. We could handle this recursive case (of the same file name) just fine, but it occurs to me that this is technically inaccurate as written.","updated_at":"2023-04-20T16:20:36Z","created_at":"2023-04-20T16:18:23Z","creator_user_login":"robpaveza"}
{"number":26446,"comment_id":"1516670743","body":"@robpaveza : I _think_ the `react-dom.production.min.js` \"source\" filename that you would see when viewing the sourcemap / actually debugging is controlled by this line here:\r\n\r\nhttps://github.com/facebook/react/pull/26446/files#diff-f05e9513ea1c7e83c66f63dc3a7a2e1d464c58c7beebe1c375a2845caa6b0bc4R544\r\n\r\nI know I had that line _without_ the `.min` at one point.  I'm still a little hazy on whether that \"source content\" filename needs to be an exact match for the final output or not.  Assuming it doesn't have to be an exact match, yeah, it would be reasonable to list the \"source content\" file as `react-dom.production.js` without the `.min`.\r\n\r\nThat said, note that I intentionally set up the sourcemap generation to show \"the production bundle contents right before that got minified\" instead of the _original_ source files such as `packages/react-reconciler/src/*`, as the original source code undergoes a lot of transformations during the build process.  I think it's much more useful in this situation to see the actual code as it runs in the app (but in a readable form), than to see the structure of the source code in the React repo.","updated_at":"2023-04-20T17:07:15Z","created_at":"2023-04-20T17:07:15Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1518291582","body":"> I'm still a little hazy on whether that \"source content\" filename needs to be an exact match for the final output or not.\r\n\r\nIf there are files on disk (meaning present in the npm package) that correspond to the code in `sourcesContent`, then the `sources` array should contain the filename of each element of the `sourcesContent` array. If the `sources` array contains files in a different folder from the sourcemap, then each element should have the relative path to the source file, unless unless `sourceRoot` is used to define the path instead.\r\n\r\nIt's important to include accurate filenames because some tools (like VS Code and probably the Filesystem sub-pane of Chrome Dev Tools' Sources pane) will use the `sources` array to determine which disk file to open when showing code to the user when the debugger stops inside React code.\r\n\r\nHowever, if the code in `sourcesContent` is NOT included as separate files in the NPM package, then the `sources` array should NOT contain the filename of any valid file on disk. This file-not-found condition tells VS Code (and similar tools) that they need to fall back to showing `sourcesContent` in the IDE editor.  BTW, if source files aren't included in the npm package, then `sources` (and `sourceRoot`, if used) would ideally point to a non-existent path that a developer could populate themselves manually, e.g. by copying original sources from a GitHub repo. \r\n\r\nA bad outcome is if `sources` entries point to valid on-disk files that don't correspond to the same row/col positions in the sourcemap's `mappings` array. In that case VS Code would load the file, navigate to the row/col from `mappings`, but the code would be wrong and the user would be confused. \r\n\r\nA less-bad (but still bad) outcome would be if the `sourcesContent` code does exist on disk, but the sourcemap doesn't point to it. In that case, users might try to set VS Code breakpoints in that file, but the debugger won't stop there because the sourcemap doesn't point to it. \r\n\r\n@markerikson does the info above clarify what filename(s) should be in `sources`?\r\n\r\nFollow-up question: what file's (or files') content does `sourcesContent` contain in the current PR?","updated_at":"2023-04-21T20:14:26Z","created_at":"2023-04-21T20:14:26Z","creator_user_login":"justingrant"}
{"number":26446,"comment_id":"1518298573","body":"BTW, a suggested test (doesn't need to be automated, but would be helpful to verify that everything is working end-to-end) that I'd recommend for this PR would be to do this:\r\n1. `npx create-react-app sourcemaptest`\r\n2. Open VS Code to the sourcemaptest folder\r\n3. Add some code to the app that will cause React to throw an exception.\r\n4. Build the production app\r\n5. Run the app under the VS Code debugger\r\n\r\nExpected: When the exception is thrown, readable React code (including the correct line and column) is shown to the user in the IDE.","updated_at":"2023-04-21T20:23:32Z","created_at":"2023-04-21T20:23:32Z","creator_user_login":"justingrant"}
{"number":26446,"comment_id":"1520529810","body":"@justingrant:\r\n\r\nThe current PR generates a sourcemap that contains \"the contents of the production bundle, right before it got minified by Closure Compiler\", as generated by the preceding steps in the Rollup build pipeline.  That bundle is a file that never actually existed on disk and the content is not currently directly included in the NPM packages.\r\n\r\nI just did the \"Debug a CRA build with VS Code\" test that you suggested.  If I install the current React/ReactDOM builds from this PR, which contain `\"sources\":[\"react-dom.production.min.js\"]` in the sourcemaps (which does actually match the on-disk filename), VS Code correctly loads up the sourcemapped contents when it sees an error and I click on the `react-dom.production.min.js:8877` file link int he console:\r\n\r\n![image](https://user-images.githubusercontent.com/1128784/234065651-168a55a2-da5c-4ce7-8a04-850547c6e756.png)\r\n\r\nIf I hand-edit the sourcemap to drop the `.min` from the `\"sources\"` array, it shows the exact same error stack trace and same file contents, just with `react-dom.production.js` as the linked filename in the console and stack traces.\r\n\r\nI'll go ahead and update this to remove the `.min` from the `\"sources\"` array filename just to help distinguish things (and also rebase against `main` to resolve the conflict).","updated_at":"2023-04-24T17:04:31Z","created_at":"2023-04-24T17:03:12Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1520579271","body":"Rebased the PR to pick up the latest changes from `main` and to remove the `.min` portion of the `\"sources\"` filename.  Here's what it looks like in evanw's Sourcemap Visualizer:\r\n\r\n![image](https://user-images.githubusercontent.com/1128784/234074714-9d1f6f94-749a-406e-aee0-2cb79e95fc27.png)\r\n","updated_at":"2023-04-24T17:42:29Z","created_at":"2023-04-24T17:42:29Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1593476089","body":"I know Dan's on vacation for the next month-ish.\r\n\r\nJust wanted to follow up and see if anyone else on the team has thoughts on this PR?","updated_at":"2023-06-15T17:32:11Z","created_at":"2023-06-15T17:32:11Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1687019216","body":"Hiya, folks. Dan has been on vacation, and also said he's easing off on React involvement to some extent.\r\n\r\nI see the PR has a merge conflict that needs to be fixed up, and I can do that.\r\n\r\nAre there any other concerns or blockers to getting this merged?","updated_at":"2023-08-21T20:45:21Z","created_at":"2023-08-21T20:45:21Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1694790553","body":"Some related news today in case anyone is interested.\r\n\r\nIf and when this PR gets merged, _and_ a future stable version of React is released, that React version would include sourcemaps.\r\n\r\nBut that doesn't do anything to help with sourcemaps for _current_ versions of React.\r\n\r\nMy day job is working at https://replay.io , a time-travel debugger for JS, and we care a lot about sourcemaps for libraries (which is a large part of why I made this PR in the first place).\r\n\r\nI spent today with a checkout of the React repo at the `v18.2.0` tag, trying to see if I could backport the changes from this PR to generate sourcemaps for _old_ versions of React....\r\n\r\nand I think I succeeded!\r\n\r\n- I was able to generate a byte-for-byte identical production build artifact of `react-dom.production.min.js` for 18.2.0\r\n- I backported a variation of the build pipeline changes and generated a sourcemap for `react-dom`\r\n- I built a Vite app with standard React 18.2.0\r\n- and then I was able to run that app bundle's sourcemap through a sourcemap rewriting tool and replace its knowledge of `react-dom.production.min.js` with a sourcemapped version!\r\n\r\nHere's a screenshot of a Vite app bundle sourcemap, except I've overwritten its knowledge of `react-dom.production.min.js` to show the \"original\" unminified ReactDOM bundle file instead:\r\n\r\n![image](https://github.com/facebook/react/assets/1128784/9e37fe5b-6284-4dd2-bb2f-f25e6d3988bf)\r\n\r\nIf I load up that Vite app with the altered sourcemap in Chrome, I can see the original React prod code, and even slap a breakpoint in `renderWithHooks()` and inspect the Fiber!\r\n\r\n![image](https://github.com/facebook/react/assets/1128784/9301754f-66da-4751-8a89-83f750c7de44)\r\n\r\nBased on that, I think I can throw together a package that contains sourcemaps for known stable versions of React (based on recent download stats, probably: 18.2.0, 18.1.0, 17.0.2, 16.14.0, 16.13.1), and a small util function that accepts a sourcemap and rewrites its `react-dom.production.min.js` entry to use the original version instead.  That way, folks can use this as a post-build step, so that their own apps have proper sourcemaps for ReactDOM.\r\n\r\nNeed to find time to do this, but hopefully in the next week or two?\r\n\r\nAlong with that, I think there's a reasonable chance that Replay could automatically apply the same sourcemap update to recordings of apps that use React, thus improving the ability to debug React apps.","updated_at":"2023-08-27T23:28:39Z","created_at":"2023-08-27T23:26:30Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1696176193","body":"I want to give a big +1 to the changes in this PR. We have recently started collecting profiles via js-self profiling API at Sentry and the common complaint is \"Why are all these functions in my profiles minified?\". Not having sourcemaps for react leads to a confusing experience, but also results in a lot of wasted time as users think there is something wrong with their sourcemap upload step. In our case, having react sourcemaps would make for a much nicer and a lot more usable profiling experience.\r\n\r\n@markerikson I would be happy to help with any work around the package to publish react sourcemaps for previous react versions","updated_at":"2023-08-28T18:43:06Z","created_at":"2023-08-28T18:43:06Z","creator_user_login":"JonasBa"}
{"number":26446,"comment_id":"1696203878","body":"@JonasBa Awesome! Honestly, now that I've got the process figured out and have proved I can generate sourcemaps for React 18.2.0, the next step is manually repeating that for additional existing React versions. I now know what changes have to be applied, it's just going to take some manual editing of the build plugin pipeline each time.  I spent maybe 4-5 hours on the exploratory phase of this yesterday, so my guess is I could do each additional React version in _maybe_ an hour-ish?\r\n\r\nOnce I have the sourcemaps built, I can throw together an initial package POC.  There's some stuff I can imagine around a CLI that accepts params for file globbing, reading sourcemaps off disk, etc, but the simplest signature would just be `function updateSourcemapWithReactProd(original: SourceMap): SourceMap` and export that, and then provide suggestions on how to write a post-build script yourself.  (Although hey, if you wanted to start whipping up an example of a package that has that kind of a CLI and stubs out the actual sourcemap update impl so that I can fill that in, that could be helpful!)\r\n\r\nLet me see what I can pull together in the next couple days.\r\n\r\nI'd like to publish this as `@replayio/react-prod-sourcemaps`, since it's all work I've done related to the day job.","updated_at":"2023-08-28T18:51:55Z","created_at":"2023-08-28T18:50:12Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1696214685","body":"Thanks @JonasBa! \r\n\r\nThis reminds me that it's important to share that there's now a TC39 source map working group, so if there are any lingering questions around this PR or the role of source maps in core JS libraries, there are a bunch of folks across many different companies who are interested in helping.\r\n\r\nhttps://www.ecma-international.org/task-groups/tc39-tg4/","updated_at":"2023-08-28T18:58:14Z","created_at":"2023-08-28T18:58:14Z","creator_user_login":"jasonLaster"}
{"number":26446,"comment_id":"1696635123","body":"Looking into generating sourcemaps for other React versions now.\r\n\r\nIf anyone's interested, you can see the exact changes I made on top of React's `v18.2.0` tag to modify the build pipeline here:\r\n\r\n- https://github.com/facebook/react/compare/v18.2.0...replayio:react:feature/react-sourcemaps-18.2.0?expand=1\r\n\r\n90% of the diff is just me commenting out the parts of React's build pipeline that generate \"experimental\" builds, any artifacts other than CJS dev/prod, and any packages other than `react-dom`, in order to speed up the build process so I can try things out faster. The actual meaningful changes are similar to the first attempt at this PR (as seen in https://github.com/facebook/react/compare/3554c8852fe209ad02380ebd24d32f56d6399906...72029f3de59b866628d184e0169a3ef99ad1b85b ), where I had to run Closure Compiler first and then split the output to adjust it for the licensing headers.\r\n\r\nAlso note that you need to run `export RELEASE_CHANNEL=stable && yarn build` in order to keep it from including \"experimental\" channel features.\r\n\r\nThe initial POC script for rewriting an app sourcemap is just:\r\n\r\n```ts\r\nimport remapping from '@ampproject/remapping'\r\nimport fs from 'fs'\r\nimport { createHash } from 'node:crypto'\r\n\r\nconst minifiedTransformedMap = JSON.parse(\r\n  fs.readFileSync('./dist/assets/index-da0b97b9.js.map', 'utf-8')\r\n)\r\n\r\nconst reactDomSourcemap = JSON.parse(\r\n  fs.readFileSync('./react-dom.production.min.js.map', 'utf-8')\r\n)\r\n\r\nconst remapped = remapping(minifiedTransformedMap, (file, ctx) => {\r\n  if (file.includes('react-dom.production')) {\r\n    console.log('ReactDOM file:', file, ctx)\r\n\r\n    if (file.endsWith('react-dom.production.min.js')) {\r\n      return reactDomSourcemap\r\n    }\r\n  }\r\n  return null\r\n})\r\n\r\nfs.writeFileSync(\r\n  './dist/assets/remapped.js.map',\r\n  JSON.stringify(remapped, null, 2)\r\n)\r\n```\r\n\r\nHere's the result:\r\n\r\n[Vite app with ReactDOM updated sourcemaps.zip](https://github.com/facebook/react/files/12459267/Vite.app.with.ReactDOM.updated.sourcemaps.zip)\r\n\r\nI'm going to generate the other sourcemaps, then turn that script into an actual package.","updated_at":"2023-08-29T01:24:16Z","created_at":"2023-08-29T01:24:16Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1696727260","body":"### I've got the initial CLI sourcemap rewriting package published!\r\n\r\nhttps://www.npmjs.com/package/@acemarke/react-prod-sourcemaps\r\n\r\nIt contains sourcemaps for React 18.2.0 and 18.1.0, and an initial CLI tool that will rewrite one input sourcemap file and write the output to `originalSourcemap.remapped.js.map`.\r\n\r\nPlease try it out and let me know ~~all the ways I just screwed up publishing my first CLI package~~ how it works for you! :)","updated_at":"2023-08-29T03:53:52Z","created_at":"2023-08-29T03:53:52Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1697463102","body":"Haven't woken up to such good news in a while! @markerikson great work 🔥 I will test this on one of our internal apps in the coming days (IIRC it might use react 17 so I may look at generating those too)","updated_at":"2023-08-29T13:37:05Z","created_at":"2023-08-29T13:37:05Z","creator_user_login":"JonasBa"}
{"number":26446,"comment_id":"1697522965","body":"@JonasBa gimme a bit and I can try to generate a 17.0.2 sourcemap and add that.","updated_at":"2023-08-29T14:11:40Z","created_at":"2023-08-29T14:11:40Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1697610052","body":"@JonasBa : okay, here you go! Generated the sourcemap for ReactDOM 17.0.2, and published it as `@acemarke/react-prod-sourcemaps@0.0.2`:\r\n\r\nhttps://github.com/markerikson/react-prod-sourcemaps/releases/tag/0.0.2\r\n\r\nI also very briefly tried checking out React v16.14.0, but the build artifacts I generated are looking drastically different than the actual release and I need to get some real work done atm.  I'm sure it's doable, I would just need time to figure out why the build contents are so different and fix that up, so I'm going to punt on that for now.","updated_at":"2023-08-29T14:56:45Z","created_at":"2023-08-29T14:56:45Z","creator_user_login":"markerikson"}
{"number":26446,"comment_id":"1697629975","body":"This is something what I really looking forward to be built-in. @markerikson thank you for your work! It's a wonder how we operated without that.","updated_at":"2023-08-29T15:07:20Z","created_at":"2023-08-29T15:07:20Z","creator_user_login":"landsman"}
{"number":26446,"comment_id":"1701408043","body":"Just wanted to confirm that the cli works nicely for react 17.0.2. Function frames of react-dom now have their names properly inferred thanks to @markerikson's sourcemaps.\r\n\r\nI will likely publish plugins for popular bundlers so that folks can get this out of the box (@markerikson let me know if you have a preference on keeping the plugins in your repo or publish them separately)\r\n\r\nProfile before \r\n![image](https://github.com/facebook/react/assets/9317857/774cfe01-c091-41ff-9d5b-19c862401d45)\r\n\r\nProfile after\r\n![image](https://github.com/facebook/react/assets/9317857/23e96814-66e6-458a-9f44-ccb349ce873b)\r\n\r\n","updated_at":"2023-08-31T16:49:14Z","created_at":"2023-08-31T16:49:14Z","creator_user_login":"JonasBa"}
{"number":15278,"comment_id":"478393121","body":"If you want to rely on it as a semantic guarantee, using a ref sounds like the way to go. Why is that not working out for you?","updated_at":"2019-03-31T22:52:53Z","created_at":"2019-03-31T22:52:53Z","creator_user_login":"gaearon"}
{"number":15278,"comment_id":"478393606","body":"Using a ref is working for me, but I thought it would be nice to not need to use an alternative. I suspect other people might also want to opt out of cache purging if I do. Also, moving away from useMemo and useCallback currently means losing some of the value provided by `eslint-plugin-react-hooks`","updated_at":"2019-03-31T22:59:01Z","created_at":"2019-03-31T22:59:01Z","creator_user_login":"alexreardon"}
{"number":15278,"comment_id":"478393774","body":"Even if `useMemo` and `useCallback` cache behaviour doesn't change it would be nice to know under what conditions the caches are purged","updated_at":"2019-03-31T23:01:10Z","created_at":"2019-03-31T23:01:10Z","creator_user_login":"alexreardon"}
{"number":15278,"comment_id":"478393908","body":"@alexreardon How are you computing the value before useEffect runs? Or are you doing the should-it-update checks manually?","updated_at":"2019-03-31T23:03:16Z","created_at":"2019-03-31T23:03:16Z","creator_user_login":"ntucker"}
{"number":15278,"comment_id":"478394879","body":"My current approach is fairly naive and needs to be thought through:\r\n\r\n- [useMemoOne](https://github.com/atlassian/react-beautiful-dnd/blob/hooks/src/view/use-custom-memo/use-memo-one.js)\r\n- [useCallbackOne](https://github.com/atlassian/react-beautiful-dnd/blob/hooks/src/view/use-custom-memo/use-callback-one.js)\r\n\r\nIt currently does not use `useEffect` or `useLayoutEffect`. It does a side effect during the render","updated_at":"2019-03-31T23:15:54Z","created_at":"2019-03-31T23:15:54Z","creator_user_login":"alexreardon"}
{"number":15278,"comment_id":"478395136","body":"Ah ya the manual approach. Probably uses more memory than if it were baked into React. Definitely adds more bundle bloat. Thanks @alexreardon !","updated_at":"2019-03-31T23:19:36Z","created_at":"2019-03-31T23:19:36Z","creator_user_login":"ntucker"}
{"number":15278,"comment_id":"478427588","body":"I think this is an uncommon enough case that using `useRef` to implement your own stable references is the right approach. \r\n\r\n>While request 1 is favourable, it would be good to know the exact conditions in which the memoization caches are purged\r\n\r\nI don't think it's valuable to document the internal caching strategy beyond \"React might clear the cache when it needs to\" since it's likely to be dynamic and difficult to predict. No single component could predict cache hits or misses at runtime with any certainty.\r\n\r\n> It does a side effect during the render\r\n\r\nJust a heads up that this is likely to be problematic in concurrent mode, since the function might be called many times with different props.\r\n","updated_at":"2019-04-01T04:01:58Z","created_at":"2019-04-01T04:01:58Z","creator_user_login":"aweary"}
{"number":15278,"comment_id":"478428773","body":"> Just a heads up that this is likely to be problematic in concurrent mode, since the function might be called many times with different props.\r\n\r\nWhat is the recommendation then for this behaviour? useEffect? When does `useMemo` update?","updated_at":"2019-04-01T04:10:17Z","created_at":"2019-04-01T04:10:17Z","creator_user_login":"alexreardon"}
{"number":15278,"comment_id":"478438119","body":"@aweary Interesting, so you don't think caching the promise thrown for Suspense will be common? I hear if you return a different promise everything breaks.","updated_at":"2019-04-01T05:12:30Z","created_at":"2019-04-01T05:12:30Z","creator_user_login":"ntucker"}
{"number":15278,"comment_id":"478540843","body":"Here is an alternative `useMemoOne` that seems to be concurrent mode safe 🤞 \r\n\r\n```js\r\n// @flow\r\nimport { useRef, useState, useEffect } from 'react';\r\nimport areInputsEqual from './are-inputs-equal';\r\n\r\ntype Result<T> = {|\r\n  inputs: mixed[],\r\n  result: T,\r\n|};\r\n\r\nexport default function useMemoOne<T>(\r\n  // getResult changes on every call,\r\n  getResult: () => T,\r\n  // the inputs array changes on every call\r\n  inputs?: mixed[] = [],\r\n): T {\r\n  // using useState to generate initial value as it is lazy\r\n  const initial: Result<T> = useState(() => ({\r\n    inputs,\r\n    result: getResult(),\r\n  }))[0];\r\n\r\n  const uncommitted = useRef<Result<T>>(initial);\r\n  const committed = useRef<Result<T>>(initial);\r\n\r\n  // persist any uncommitted changes\r\n  useEffect(() => {\r\n    committed.current = uncommitted.current;\r\n  });\r\n\r\n  if (areInputsEqual(inputs, committed.current.inputs)) {\r\n    return committed.current.result;\r\n  }\r\n\r\n  uncommitted.current = {\r\n    inputs,\r\n    result: getResult(),\r\n  };\r\n\r\n  return uncommitted.current.result;\r\n}\r\n```","updated_at":"2019-04-01T11:25:48Z","created_at":"2019-04-01T11:25:48Z","creator_user_login":"alexreardon"}
{"number":15278,"comment_id":"478553464","body":"If there are no deps I think that `useState` is appropriate: \r\n`const [value] = useState(() => ({ hello: 'hello' }));` \r\n`useRef` is viable, but doesn't offer lazy init and `aRef.current` is annoying.\r\nIf there are deps and the memoization isn't just an optimization, but a semantic guarantee, then you're dealing with *derived state*. \r\nHere is a hook based on react's `useMemo` sources: \r\nhttps://gist.github.com/urugator/5c78da03a7b1a7682919cc1cf68ff8e9\r\nUsage `const value = useDerivedState(() => ({ hello: aProp }), [aProp]);`\r\nConceptually I think it's similar to `getDerivedStateFromProps`","updated_at":"2019-04-01T12:22:09Z","created_at":"2019-04-01T12:10:57Z","creator_user_login":"urugator"}
{"number":15278,"comment_id":"478819295","body":"I have shipped [`useMemoOne`](https://github.com/alexreardon/use-memo-one) which is a drop-in replacement for `useMemo` and `useCallback` that has a stable cache - for those who need it","updated_at":"2019-04-02T02:29:28Z","created_at":"2019-04-02T02:29:28Z","creator_user_login":"alexreardon"}
{"number":15278,"comment_id":"478865133","body":"We also have cases where `useMemo` is required for semantic guarantee:\r\n\r\n```js\r\nconst {keyword} = props;\r\nconst keywordList = useMemo(\r\n    () => keyword.split(' '),\r\n    [keyword]\r\n);\r\nconst flipList = useCallback(\r\n    () => {\r\n        // something about keywordList\r\n    },\r\n    [keywordList]\r\n);\r\nuseEffect(\r\n    () => {\r\n        someSideEffectWithKeywordList(keywordList);\r\n    },\r\n    [keywordList]\r\n);\r\n```\r\n\r\n`useCallback` is not sensitive to cache purging, it only provides performance improvements, however `useEffect` can results in unexpected behaviors when `keywordList` is busted from its cache.\r\n\r\nCurrently we try to get rid of this risk by computing `keyword.split(' ')` inside both `useCallback` and `useEffect`, this is not what we want actually.","updated_at":"2019-04-02T06:40:21Z","created_at":"2019-04-02T06:40:21Z","creator_user_login":"otakustay"}
{"number":15278,"comment_id":"479831184","body":"@otakustay can you rely on `keyword` data instead of `keywordList` callback for your `useEffect`?","updated_at":"2019-04-04T09:53:20Z","created_at":"2019-04-04T09:53:20Z","creator_user_login":"skyboyer"}
{"number":15278,"comment_id":"479843064","body":"> can you rely on `keyword` data instead of `keywordList` callback for your `useEffect`?\r\n\r\nI tried this, then I encountered 2 issues:\r\n\r\n1. `exhaustive-deps` eslint rule complains about it, I'm required to disable lint rule every time, which is not a happy experience\r\n2. More often I need to pass `keywordList` down to child components, I can't pass `keyword` instead of it because there could be a large amount of child components receiving this prop, making component only receiving primitive type props are not my choice","updated_at":"2019-04-04T10:31:55Z","created_at":"2019-04-04T10:31:55Z","creator_user_login":"otakustay"}
{"number":15278,"comment_id":"481592991","body":"@alexreardon `useCallback` docs do not say that it is subject to cache purging. Docs are not clear enough here though. \r\n\r\nDocs only say that: \r\n> `useCallback(fn, deps) is equivalent to useMemo(() => fn, deps)`\r\n\r\nIf `useCallback` is equivalent to `useMemo`, why we have `useCallback` at all? I assume if there is a separate `useCallback` hook shipped with React there is a reason for that and that reason is not documented well.","updated_at":"2019-04-10T08:29:50Z","created_at":"2019-04-10T08:29:50Z","creator_user_login":"bhovhannes"}
{"number":15278,"comment_id":"483530320","body":"@bhovhannes `useCallback` is just a convenient shorthand that makes the code more legible.  Writing \r\n```js\r\nuseMemo(() => e => e.stopPropagation())\r\n```\r\nisn't as pleasant to read or write as\r\n\r\n```js\r\nuseCallback(e => e.stopPropagation())\r\n```\r\nand the double `=>` probably confuses novice JS devs as well.","updated_at":"2019-04-16T06:36:18Z","created_at":"2019-04-16T06:36:18Z","creator_user_login":"jedwards1211"}
{"number":15278,"comment_id":"483531964","body":"@urugator Yup `aRef.current` is only good for element refs, for any other persistent values it's super annoying.  So I abuse it like this instead, especially when I would need multiple `useRef` calls:\r\n```js\r\nconst stash = useRef({}).current\r\nif (!stash.foo) stash.foo = ...\r\nstash.onChange = props.onChange\r\n...\r\n\r\nuseEffect(() => {\r\n  const {onChange} = stash\r\n  onChange(value)\r\n}, [value])\r\n```","updated_at":"2019-04-16T06:45:14Z","created_at":"2019-04-16T06:43:10Z","creator_user_login":"jedwards1211"}
{"number":15278,"comment_id":"483534611","body":"@alexreardon @urugator I haven't read much into concurrent mode but would the following work?\r\n\r\n```js\r\nfunction useMemoOne(compute, deps) {\r\n  const stash = useRef({}).current\r\n  if (!stash.initialized) stash.value = compute()\r\n  useEffect(() => {\r\n    if (!stash.initialized) stash.initialized = true\r\n    else stash.value = compute()\r\n  }, deps)\r\n  return stash.value\r\n}\r\n\r\nfunction useCallbackOne(callback, deps) {\r\n  const ref = useRef(callback)\r\n  useEffect(() => {\r\n    ref.current = callback\r\n  }, deps)\r\n  return ref.current\r\n}\r\n```","updated_at":"2019-04-16T06:57:39Z","created_at":"2019-04-16T06:53:41Z","creator_user_login":"jedwards1211"}
{"number":15278,"comment_id":"483537354","body":"@jedwards1211 No, `useEffect` is too late, the following one may be better:\r\n\r\n```js\r\nconst useMemoOne = (compute, deps) => {\r\n    const value = useRef(compute);\r\n    const previousDeps = useRef(deps);\r\n\r\n    if (!shallowEquals(previousDeps, deps)) {\r\n        previousDeps.current = deps;\r\n        value.current = compute();\r\n    }\r\n\r\n    return value.current;\r\n};\r\n```","updated_at":"2019-04-16T07:03:55Z","created_at":"2019-04-16T07:03:55Z","creator_user_login":"otakustay"}
{"number":15278,"comment_id":"483539545","body":"I was about to delete my comment, I wasn't thinking about how it would be too late. I don't really understand why this side effect during render would be more problematic for concurrent mode than anything else, as @aweary implied.  Will `useMemo` do something special in concurrent mode that's impossible to implement with `useRef` and render side effects?","updated_at":"2019-04-16T07:13:26Z","created_at":"2019-04-16T07:11:34Z","creator_user_login":"jedwards1211"}
{"number":15278,"comment_id":"483547689","body":"> I don't really understand why this side effect during render would be more problematic for concurrent mode than anything else\r\n\r\n`  if (!stash.initialized) stash.value = compute()` can potentially be called multiple times before the effect runs. If this is not a problem I don't see one either.","updated_at":"2019-04-16T14:07:00Z","created_at":"2019-04-16T07:39:51Z","creator_user_login":"eps1lon"}
{"number":15278,"comment_id":"483586588","body":"@jedwards1211 \r\n> I don't really understand why this side effect during render would be more problematic for concurrent mode\r\n\r\nConcurrent mode is not an issue. Problem is that effect runs after render, meaning that when deps are changed, there is one render pass during which memoized value is out of sync with the rest of the props.\r\nThis can lead to bugs in render logic. Speaking of which I don't think your solution works since you update the value in effect, but you don't force the component to re-render with this new value. You should use `useState` as cache storage.","updated_at":"2019-04-16T09:36:06Z","created_at":"2019-04-16T09:36:06Z","creator_user_login":"urugator"}
{"number":15278,"comment_id":"483662456","body":"Yeah I realized the useEffect render sync issue.  I was asking why a hard side effect like in @otakustay's example, instead of useEffect, would be any more of a problem for concurrent mode.\r\n\r\nOr put another way, if all the complexity in @alexreardon's useMemoOne is necessary, or if @otakustay's implementation would suffice.","updated_at":"2019-04-16T13:48:18Z","created_at":"2019-04-16T13:37:15Z","creator_user_login":"jedwards1211"}
{"number":15278,"comment_id":"483733193","body":"> if all the complexity in @alexreardon's useMemoOne is necessary\r\n\r\nI don't think so. The only problem with @otakustay solution is that `useRef` doesn't accept init function, so `const value = useRef(compute);` won't do the trick. Also the deps are unnecessarily compared on initial render.\r\nIf you take a look at the solution I posted (gist) it's basically the same, but deals with this initial render init (most of the code is validation, actual logic is lines 70-81).","updated_at":"2019-04-16T16:24:14Z","created_at":"2019-04-16T16:24:14Z","creator_user_login":"urugator"}
{"number":15278,"comment_id":"529790933","body":"I can't edit the issue, but I think the title is meant to be \"cache purging\" not \"cache busting\".","updated_at":"2019-09-10T06:28:34Z","created_at":"2019-09-10T06:28:34Z","creator_user_login":"TimothyJones"}
{"number":15278,"comment_id":"553900328","body":"@alexreardon What is the difference between the package `use-memo-one` and this code (by @otakustay):\r\n\r\n```js\r\nconst useMemoOne = (compute, deps, equalityFn = shallowEqual) => {\r\n  const value = useRef(compute);\r\n  const previousDeps = useRef(deps);\r\n\r\n  if (!equalityFn(previousDeps, deps)) {\r\n    previousDeps.current = deps;\r\n    value.current = compute();\r\n  }\r\n\r\n  return value.current;\r\n};\r\n\r\nconst useCallbackOne = (compute, deps, equalityFn) => useMemoOne(() => compute, deps, equalityFn);\r\n```","updated_at":"2019-11-14T14:00:32Z","created_at":"2019-11-14T14:00:32Z","creator_user_login":"bertho-zero"}
{"number":15278,"comment_id":"567799188","body":"@bertho-zero `compute` is a function, but unlike `useState`, `useRef` doesn't call provided value, if it's a function, to compute a value. It uses the value as is, even if it's a function.\r\n\r\nThat means `useRef(compute)` should be `useRef(compute())`.\r\n\r\nNow, the problem is that `compute` will be called on every render. This defeats the purpose of memoization, so you'll need a flag to stop this happening.\r\n\r\nAlso, I wouldn't change the semantics of hooks inputs, so `equalityFn` shouldn't be a thing here.\r\n\r\nAlso, there's another bug: You're comparing `previousDeps` instead of `previousDept.current` to `deps`.\r\n\r\nTry this:\r\n\r\n```js\r\nfunction useMemoOne(compute, deps) {\r\n    const isNew = useRef(true);\r\n    const value = useRef(isNew.current ? compute() : null);\r\n    const previousDeps = useRef(deps);\r\n\r\n    isNew.current = false;\r\n\r\n    if (!(\r\n        Array.isArray(deps)\r\n        && Array.isArray(previousDeps.current)\r\n        && deps.length === previousDeps.current.length\r\n        && deps.every((dep, index) => dep === previousDeps.current[index]\r\n    )) {\r\n        previousDeps.current = deps;\r\n        value.current = compute();\r\n    }\r\n\r\n    return value.current;\r\n}\r\n```","updated_at":"2019-12-20T05:53:46Z","created_at":"2019-12-20T05:53:46Z","creator_user_login":"steve-taylor"}
{"number":15278,"comment_id":"570764031","body":"@steve-taylor `isNew` should not be necessary at all since `useRef` only executes its parameter once initially, so `const value = useRef(isNew.current ? compute() : null);` is equal to `const value = useRef(compute());`.\r\n*EDIT:* I was wrong on this one, see comments below.\r\n\r\n```\r\nfunction useMemoOne(compute, deps) {\r\n    const value = useRef(compute());\r\n    const previousDeps = useRef(deps);\r\n\r\n    if (!(\r\n        Array.isArray(deps)\r\n        && Array.isArray(previousDeps.current)\r\n        && deps.length === previousDeps.current.length\r\n        && deps.every((dep, index) => dep === previousDeps.current[index]\r\n    )) {\r\n        previousDeps.current = deps;\r\n        value.current = compute();\r\n    }\r\n\r\n    return value.current;\r\n}\r\n```\r\n\r\nAdditionally the deps comparison can be avoided on the initial render like @urugator mentioned:\r\n\r\n```\r\nfunction useMemoOne(compute, deps) {\r\n    const value = useRef(null);\r\n    const previousDeps = useRef(null);\r\n\r\n    if (!(\r\n        Array.isArray(deps)\r\n        && Array.isArray(previousDeps.current)\r\n        && deps.length === previousDeps.current.length\r\n        && deps.every((dep, index) => dep === previousDeps.current[index]\r\n    )) {\r\n        previousDeps.current = deps;\r\n        value.current = compute();\r\n    }\r\n\r\n    return value.current;\r\n}\r\n```\r\n\r\nThe only issue left is that when `deps` is `undefined` or `null`, the value would be computed every render. So after all maybe an extra flag is necessary indeed, because `compute()` might also return a falsy value and therefore the current value cannot be used to skip the `if` condition.","updated_at":"2020-01-04T09:18:05Z","created_at":"2020-01-04T07:27:47Z","creator_user_login":"fabb"}
{"number":15278,"comment_id":"570764527","body":"@fabb there’s nothing magical about `useRef` that changes the way JavaScript works. For a function to be called, all its actual parameters have to be evaluated. This holds true whether the function chooses to use or ignore the parameters passed to it.\r\n\r\nThe change you made causes `compute` to be called on every render.\r\n\r\n**Edit:** Your second version looks like it might work, because now you’re not evaluating `compute` every render.","updated_at":"2020-01-04T07:43:45Z","created_at":"2020-01-04T07:38:36Z","creator_user_login":"steve-taylor"}
{"number":15278,"comment_id":"570768864","body":"@steve-taylor you are completely right, thanks.\r\n\r\nI've written some unit tests to see what really happens:\r\n\r\n```\r\nimport React, { useRef, DependencyList, FunctionComponent } from 'react'\r\nimport { render, wait, cleanup } from '@testing-library/react'\r\nimport '@testing-library/jest-dom/extend-expect'\r\n\r\nafterEach(cleanup)\r\n\r\nfunction useMemoOne<T>(compute: () => T, deps: DependencyList | undefined) {\r\n    const value = useRef<T | null>(null)\r\n    const previousDeps = useRef<DependencyList | undefined | null>(null)\r\n\r\n    if (\r\n        !(\r\n            Array.isArray(deps) &&\r\n            Array.isArray(previousDeps.current) &&\r\n            deps.length === previousDeps.current!.length &&\r\n            deps.every((dep, index) => dep === previousDeps.current![index])\r\n        )\r\n    ) {\r\n        previousDeps.current = deps\r\n        value.current = compute()\r\n    }\r\n\r\n    return value.current\r\n}\r\n\r\nconst UseMemoTestComponent: FunctionComponent<{\r\n    compute: () => { text: string }\r\n    deps: DependencyList | undefined\r\n}> = props => {\r\n    const value = useMemoOne(props.compute, props.deps)\r\n\r\n    return <div>{value?.text}</div>\r\n}\r\n\r\ndescribe('useMemoOne', () => {\r\n    it('calls \"compute\" only when deps change', async () => {\r\n        const mockedCallback = jest.fn<{ text: string }, []>()\r\n        mockedCallback.mockReturnValue({ text: 'ok' })\r\n\r\n        const sut = render(<UseMemoTestComponent compute={mockedCallback} deps={['1']} />)\r\n\r\n        await wait(() => {\r\n            expect(sut.queryByText('ok')).toBeInTheDocument()\r\n            expect(mockedCallback.mock.calls).toHaveLength(1)\r\n        })\r\n\r\n        sut.rerender(<UseMemoTestComponent compute={mockedCallback} deps={['1']} />)\r\n\r\n        await wait(() => {\r\n            expect(sut.queryByText('ok')).toBeInTheDocument()\r\n            expect(mockedCallback.mock.calls).toHaveLength(1) // mock has not been called again\r\n        })\r\n\r\n        sut.rerender(<UseMemoTestComponent compute={mockedCallback} deps={['2']} />)\r\n\r\n        await wait(() => {\r\n            expect(sut.queryByText('ok')).toBeInTheDocument()\r\n            expect(mockedCallback.mock.calls).toHaveLength(2) // mock has been called once more\r\n        })\r\n    })\r\n\r\n    it('does not call \"compute\" on every render when deps are undefined', async () => {\r\n        const mockedCallback = jest.fn<{ text: string }, []>()\r\n        mockedCallback.mockReturnValue({ text: 'ok' })\r\n\r\n        const sut = render(<UseMemoTestComponent compute={mockedCallback} deps={undefined} />)\r\n\r\n        await wait(() => {\r\n            expect(sut.queryByText('ok')).toBeInTheDocument()\r\n            expect(mockedCallback.mock.calls).toHaveLength(1)\r\n        })\r\n\r\n        sut.rerender(<UseMemoTestComponent compute={mockedCallback} deps={undefined} />)\r\n\r\n        await wait(() => {\r\n            expect(sut.queryByText('ok')).toBeInTheDocument()\r\n            expect(mockedCallback.mock.calls).toHaveLength(1) // mock should be called again - FAILS\r\n        })\r\n    })\r\n})\r\n```\r\n\r\nAs expected the second test fails (same with the version that uses `isNew`).\r\n\r\nHere is a codesandbox with the failing unit test: https://codesandbox.io/s/usememoone-test-entsz?fontsize=14&hidenavigation=1&module=%2Fsrc%2F__tests__%2FuseMemoOne.test.tsx&theme=dark","updated_at":"2020-01-04T08:59:44Z","created_at":"2020-01-04T08:59:24Z","creator_user_login":"fabb"}
{"number":15278,"comment_id":"570771283","body":"I have a different question: from this article and the vague documentation, I had the impression that React might keep not only the latest, but also **previous** values and deps arrays too, which could become a memory problem:\r\n\r\n> As a related note, if you have dependencies then it's quite possible React is hanging on to a reference to previous functions because memoization typically means that we keep copies of old values to return in the event we get the same dependencies as given previously. The especially astute of you will notice that this means React also has to hang on to a reference to the dependencies for this equality check (which incidentally is probably happening anyway thanks to your closure, but it's something worth mentioning anyway).\r\n\r\nSource: https://kentcdodds.com/blog/usememo-and-usecallback\r\n\r\nBut unit tests could not verify that (see [codesandbox](https://codesandbox.io/s/usememo-test-ks1er?fontsize=14&hidenavigation=1&module=%2Fsrc%2F__tests__%2FuseMemo.test.tsx&theme=dark)).\r\n\r\nNow my question is, can we take it for granted that React only keeps the latest value (cc @gaearon)? React keeping several previous values and deps arrays could cause quite some unwanted memory increase. It might make sense to improve the React documentation on these points.\r\nWe're trying to pinpoint memory leaks in the new hooks-based styled-components (https://github.com/styled-components/styled-components/issues/2913) and the uses of `useMemo` have been suspects (accordingly to the tests injustified).","updated_at":"2020-01-04T09:45:48Z","created_at":"2020-01-04T09:41:01Z","creator_user_login":"fabb"}
{"number":15278,"comment_id":"774445394","body":"> Here is an alternative `useMemoOne` that seems to be concurrent mode safe 🤞\r\n> \r\n> ```js\r\n> // @flow\r\n> import { useRef, useState, useEffect } from 'react';\r\n> import areInputsEqual from './are-inputs-equal';\r\n> \r\n> type Result<T> = {|\r\n>   inputs: mixed[],\r\n>   result: T,\r\n> |};\r\n> \r\n> export default function useMemoOne<T>(\r\n>   // getResult changes on every call,\r\n>   getResult: () => T,\r\n>   // the inputs array changes on every call\r\n>   inputs?: mixed[] = [],\r\n> ): T {\r\n>   // using useState to generate initial value as it is lazy\r\n>   const initial: Result<T> = useState(() => ({\r\n>     inputs,\r\n>     result: getResult(),\r\n>   }))[0];\r\n> \r\n>   const uncommitted = useRef<Result<T>>(initial);\r\n>   const committed = useRef<Result<T>>(initial);\r\n> \r\n>   // persist any uncommitted changes\r\n>   useEffect(() => {\r\n>     committed.current = uncommitted.current;\r\n>   });\r\n> \r\n>   if (areInputsEqual(inputs, committed.current.inputs)) {\r\n>     return committed.current.result;\r\n>   }\r\n> \r\n>   uncommitted.current = {\r\n>     inputs,\r\n>     result: getResult(),\r\n>   };\r\n> \r\n>   return uncommitted.current.result;\r\n> }\r\n> ```\r\n\r\nSo is the above genuinely the simplest way to implement useMemo with a semantic guarantee safely?... surely all that complexity warrants inclusion in React itself or at least something in the React docs pointing to [`useMemoOne`](https://github.com/alexreardon/use-memo-one)?\r\n\r\nUnless maybe I'm doing something wrong, however I find I need to perform [change detection on derived data](https://stackoverflow.com/questions/66064561/change-detection-in-react) quite [often](https://github.com/ReactTraining/react-router/issues/7059) 🤔.\r\n\r\nI wonder if users are generally getting away with `useMemo` as a semantic guarantee which is why [`useMemoOne`](https://github.com/alexreardon/use-memo-one) is a little shy of React's 10 million weekly downloads 😅","updated_at":"2021-02-06T10:47:51Z","created_at":"2021-02-06T10:47:51Z","creator_user_login":"richardscarrott"}
{"number":15278,"comment_id":"812434589","body":"> Just a heads up that this is likely to be problematic in concurrent mode, since the function might be called many times with different props.\r\n\r\n@aweary but does it also mean we cannot rely on `useRef` consistent updates as well when concurrent mode arrives? And all that `useMemoOne` will also be broken?\r\n\r\nps sorry for late call.","updated_at":"2021-04-02T08:57:43Z","created_at":"2021-04-02T08:57:43Z","creator_user_login":"skyboyer"}
{"number":15278,"comment_id":"817000072","body":"Functions returned from `useCallback ` are often used as `deps ` for `useEffect`. So semantic guarantee would be more important, isn't it? @gaearon  (the docs about `useCallback `should also be more clear if same thing as `useMemo` applies to `useCallback`, isn't it?)\r\n\r\nHere is a [link]( https://www.reddit.com/r/reactjs/comments/mib8mr/usememo_docs_dont_reflect_how_it_is_used_in/) to the same concern as I described above.","updated_at":"2021-06-16T07:36:40Z","created_at":"2021-04-09T22:15:30Z","creator_user_login":"gmoniava"}
{"number":15278,"comment_id":"841730838","body":"We also use function returned from useCallback as dependency to useEffect for data fetching. Memoized function often comes from another custom hook. Cache busting will cause state to be overwriten.","updated_at":"2021-05-15T21:55:05Z","created_at":"2021-05-15T21:55:05Z","creator_user_login":"pindjur"}
{"number":15446,"comment_id":"484579329","body":"Maybe a similar alternative as `dangerouslySetInnerHTML` but for `attachIsolatedEvents`...?\r\n\r\n```jsx\r\n<img\r\n {...props} \r\n attachIsolatedEvents={{ \r\n   onError: e => { e.target.src = fallbackSrc },\r\n }}\r\n/>\r\n```","updated_at":"2019-04-18T22:32:19Z","created_at":"2019-04-18T16:18:52Z","creator_user_login":"aralroca"}
{"number":15446,"comment_id":"484579534","body":"Is it helpful to use lazy load images?","updated_at":"2019-04-18T16:19:32Z","created_at":"2019-04-18T16:19:32Z","creator_user_login":"zjffun"}
{"number":15446,"comment_id":"484579860","body":"Check the image then set it to src.","updated_at":"2019-04-18T16:20:30Z","created_at":"2019-04-18T16:20:30Z","creator_user_login":"zjffun"}
{"number":15446,"comment_id":"484580472","body":"I don't have any problem with the lazy images. I'm using lazy images almost everywhere. However, in some main parts I want to load these images early as possible (in the SSR), to be rendered at the first moment.","updated_at":"2019-04-18T16:22:24Z","created_at":"2019-04-18T16:22:24Z","creator_user_login":"aralroca"}
{"number":15446,"comment_id":"484584093","body":"Uh... I don't know much about SRR, can the server side check the correctness of the image URL？","updated_at":"2019-04-18T16:38:27Z","created_at":"2019-04-18T16:33:23Z","creator_user_login":"zjffun"}
{"number":15446,"comment_id":"484624721","body":"@1010543618 I thought this as an option. But I dunno if It is possible.","updated_at":"2019-04-18T18:17:38Z","created_at":"2019-04-18T18:17:38Z","creator_user_login":"aralroca"}
{"number":15446,"comment_id":"484699248","body":"I believe you are right about what happens.\r\n>Nevertheless, this code loaded from SSR, is working \"sometimes\"... I guess that this \"sometimes\" is because if the event is fired before the client side hydration. Is not catched by my JS\r\n\r\n\r\nFrom this issue https://github.com/facebook/react/issues/12641\r\n\r\n> If that content finishes loading before ReactDOM hydrates, then the native onload event fires before React has connected any listeners to the  element\r\n\r\nThere seems to be a racing condition between when hydration happens and when the browser throws the error event. If the browser already has thrown the error, I am not sure how a hydration config can help. Seems complicated, but I could be wrong.\r\n\r\n>Or maybe someone can help me providing any tip in order to fix this?\r\n\r\nYou could use `ReactDOM.render` instead of `ReactDOM.hydrate`. (I am not SSR expert, I might be wrong).\r\n\r\nOr you could avoid `onError` event and make your own validation\r\n\r\nHere is a quick rough prototype, (might need adjustments, I am not a hooks expert either )\r\n\r\n```jsx\r\n\r\nfunction isImageValid(src) {\r\n  let promise = new Promise(resolve => {\r\n    let img = document.createElement(\"img\");\r\n    img.onerror = () => resolve(false);\r\n    img.onload = () => resolve(true);\r\n    img.src = src;\r\n  });\r\n\r\n  return promise;\r\n}\r\n\r\nfunction Img({ src, fallbackSrc, ...rest }) {\r\n  const imgEl = React.useRef(null);\r\n  React.useEffect(\r\n    () => {\r\n      isImageValid(src).then(isValid => {\r\n        if (!isValid) {\r\n          imgEl.current.src = fallbackSrc;\r\n        }\r\n      });\r\n    },\r\n    [src]\r\n  );\r\n\r\n  return <img {...rest} ref={imgEl} src={src} />;\r\n}\r\n\r\n// Render usage\r\n\r\n<Img\r\n  alt='some image'\r\n  src=\"https://dummyimage.com/600x400/000/fff\"\r\n  fallbackSrc=\"https://dummyimage.com/600x400/000/f00\"\r\n/>\r\n```\r\n\r\nTry removing the src property and the fallback should be applied. \r\n","updated_at":"2019-04-18T21:41:19Z","created_at":"2019-04-18T21:41:19Z","creator_user_login":"kunukn"}
{"number":15446,"comment_id":"484709466","body":"@kunukn thanks for your answer.\r\n\r\nCurrently I did a workaround to fix these two scenarios:\r\n\r\n1. When the image fails **after hydration** (onError event). Adding the fallback image **after hydration**.\r\n2. When image fails **before hydration** (useEffect). Adding the fallback image **after hydration**.\r\n\r\nHowever, the second scenario for me is not ideal because is adding the fallback image after hydration, and not before. So if the image is broken, first is loading the broken status of the browser, and then the fallback image.\r\n\r\nThis is my code:\r\n\r\n**Custom hook**:\r\n\r\n```js\r\nexport default function useFallbackImageInSSR(fallbackSrc) {\r\n  const ref = useRef(null)\r\n\r\n  /**\r\n   * Error happened / catched after hydration\r\n   */\r\n  const onError = useCallback(\r\n    e => { e.target.src = fallbackSrc }, [fallbackSrc],\r\n  )\r\n\r\n  /**\r\n   * Error happened before hydration, but catched after hydration\r\n   */\r\n  useEffect(() => {\r\n    if (ref && ref.current) {\r\n      const { complete, naturalHeight } = ref.current\r\n      const errorLoadingImgBeforeHydration = complete && naturalHeight === 0\r\n\r\n      if (errorLoadingImgBeforeHydration) {\r\n        ref.current.src = fallbackSrc\r\n      }\r\n    }\r\n  }, [fallbackSrc])\r\n\r\n  return {\r\n    ref,\r\n    onError,\r\n  }\r\n}\r\n```\r\n\r\n**Usage**:\r\n\r\n```jsx\r\nconst fallbackImageProps = useFallbackImageInSSR('/images/no-image.jpg')\r\n\r\nreturn (\r\n  <img \r\n    alt=\"Example\"\r\n    src=\"/images/non-existent-image.jpg\"\r\n    {...fallbackImageProps}\r\n  />\r\n)\r\n```\r\n\r\nBut again. This works, but is not 100% ideal.\r\n\r\nSo I guess, that the only way to do it ideal *(adding the fallback image **before** the hydration)*, is attaching the event before hydration (as exception)... Maybe I'm wrong, but is the only way that I see to fix this 😕 ","updated_at":"2019-04-18T22:26:00Z","created_at":"2019-04-18T22:24:11Z","creator_user_login":"aralroca"}
{"number":15446,"comment_id":"485163151","body":"Here's is one more approach/strategy. \r\n\r\nWhen I see this code \r\n\r\n```jsx\r\nfunction Img(props) {\r\n  return (\r\n    <img {...props} onError={e => { e.target.src = fallbackSrc } } />\r\n  )\r\n}\r\n```\r\n\r\nIt looks like we want to render the fallback image as fast as possible. As the browser parses the server-side rendered html, downloads the img, founds out it can't be rendered, applies the `onerror`  event and sets the src to a fallback image. I believe this is faster than parsing the JS, then apply the same logic. \r\n\r\n.\r\nHere is a html version example with inline script.\r\n\r\n```html\r\n<img src=\"imagenotfound.gif\" alt=\"Image not found\" \r\n  onerror=\"this.onerror=null;this.src='imagefound.gif';\" />\r\n``` \r\n\r\nThis is from\r\nhttps://stackoverflow.com/a/9891041/815507\r\n\r\nBut you can't use the native `onerror` on the img element in React. The closest thing I could get to similar result, where the fallback is executed from server-side html markup is this. I used an extra div markup.\r\n\r\n```jsx\r\nfunction ImageSSR({ src, fallbackSrc, alt }) {\r\n  return (\r\n    <div\r\n      className=\"image\"\r\n      dangerouslySetInnerHTML={{\r\n        __html: `\r\n<img alt=${alt} src=\"${src}\"\r\ndata-fallback=${fallbackSrc} \r\nonerror=\"this.onerror=null;this.src=this.dataset.fallback;\" \r\n/>\r\n  `\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\n// Render\r\n\r\n<ImageSSR\r\n  src=\"https://dummyimage.com/200x100/000/fff&amptext=SSR\"\r\n  fallbackSrc=\"https://dummyimage.com/200x100/000/f00&text=fallback\"\r\n  alt=\"dummy image\"\r\n/>\r\n```\r\n\r\nIf the src is invalid, then the fallbackSrc should kick in.\r\nI tested this with Chrome, Safari and Firefox and it worked for those.\r\n\r\nHere's the codesandbox demo\r\nhttps://codesandbox.io/s/54xr4k8w4\r\n\r\nI tried this with NextJS and confirmed the server-side rendered result.\r\n\r\n```html\r\n<div class=\"image\">\r\n  <img alt=dummy image src=\"https://dummyimage.com/200x100/000/fff&text=SSR\"\r\n  data-fallback=https://dummyimage.com/200x100/000/f00&text=fallback\r\n  onerror=\"this.onerror=null;this.src=this.dataset.fallback;\"\r\n  />\r\n</div>\r\n```\r\n","updated_at":"2019-04-20T20:14:04Z","created_at":"2019-04-20T20:14:04Z","creator_user_login":"kunukn"}
{"number":15446,"comment_id":"485187583","body":"@kunukn Thanks again for your answer.\r\n\r\nDefinitely I'm going to change my current workaround for your proposal. At least the fallback image is going to work as expected 🙂\r\n\r\nNevertheless, I miss a cleaner way to manage this. With your solution, it's hard to manage new props of ImageSSR Component, adding some extra complexity for each one. It also adds an extra `div` node on top.\r\n\r\nAs a workaround to fix my problem, it works for me. However, I want to propose an improvement. I think a nice solution would be something like:\r\n\r\n```jsx\r\n<img \r\n {...props}\r\n data-fallback={fallbackSrc}\r\n attachHTMLProps={{\r\n   onerror: 'this.onerror=null;this.src=this.dataset.fallback;'\r\n }}\r\n/>\r\n```\r\n\r\nMy particular problem is related to the `onerror` event of image, but with the feature `attachHTMLProps` it's also going to be possible to fix similar problems without adding a node wrapper and with less complexity.\r\n\r\nWhat do you think about this?\r\n","updated_at":"2019-04-20T22:44:41Z","created_at":"2019-04-20T22:36:42Z","creator_user_login":"aralroca"}
{"number":15446,"comment_id":"539457679","body":"that would be relly nice solution","updated_at":"2019-10-08T10:46:07Z","created_at":"2019-10-08T10:46:07Z","creator_user_login":"jurajkocan"}
{"number":15446,"comment_id":"560551189","body":"Hi @kunukn and @aralroca, we have encountered the same initial issue at my job. The discussion here is quite helpful, but I have a few clarifying questions:\r\n1. The demo found here: https://codesandbox.io/s/54xr4k8w4\r\n\r\n **Question:** Is the demo intended to exemplify a solution where **two** components (ImageSSR and ImageClientSide) would need to be used?\r\nI feel I'm lacking some context regarding the demo's context - either just demoing what a SSR vs Client Side component may look like, or, implying both are part of a final solution.\r\n\r\n---\r\n\r\n**Our solution: (and question)**\r\nFor clarity, this solution uses **one** component rendered server-side and client-side.\r\n```\r\nreturn (\r\n  <div dangerouslySetInnerHTML={{__html: `\r\n    <img\r\n      alt=\"${alt}\"\r\n      src=\"${src}\"\r\n      srcset=\"${srcSet}\"\r\n      onerror=\"this.onerror=null;this.src='${fallback}';this.srcset='${fallback}';\"\r\n    />\r\n  `}} />\r\n);\r\n```\r\nAn aside: the notable difference is the addition of `srcset`, and resetting `srcset` in the onerror. This is necessary because of the behavior when both `src` and `srcset` are present. In our case, `srcset` defines a 1x so that takes precedence.\r\nReference: https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-src\r\n\r\nThe **server** renders to a markup like this:\r\n```\r\n<img\r\n  alt=\"Description of image\"\r\n  src=\"https://example.com/expected-image.png\"\r\n  srcset=\"[long srcset here]\"\r\n  onerror=\"this.onerror=null;this.src='https://example.com/fallback-image.png';this.srcset='https://example.com/fallback-image.png';\"\r\n  \r\n/>\r\n```\r\nGreat! Now the fallback is executed from server-side html markup. But there's one more thing...\r\n\r\n_When the fallback occurs_, this code results in a console warning:\r\n> Warning: Prop `dangerouslySetInnerHTML` did not match. Server: [server markup] Client: [client markup]\r\n\r\nThis tripped me up, but after analysis I believe it is expected due to the scenario and can be safely ignored. The reason this warning occurs (I believe) is because the **server-rendered** markup's `onerror` is invoked **before** hydration (client calling `hydrate`), so once `hydrate` is invoked, the now-mutated markup (due to fallback) doesn't match the original server-rendered markup that the hydrate thinks it should expect. Thus, the warning indicates the **server** is different than the client, and not the other way around.\r\nAgain, our conclusion is to ignore the warning, but still...\r\n**Question(s):**\r\n1. Does anyone else have the same occur? If so, how have you handled it?\r\n2. Does the reasoning and conclusion make sense, or is something amiss?","updated_at":"2019-12-02T19:45:08Z","created_at":"2019-12-02T19:45:08Z","creator_user_login":"michaelyuen"}
{"number":15446,"comment_id":"561091379","body":">Does the reasoning and conclusion make sense, or is something amiss?\r\n\r\nSounds correct to me.\r\n\r\n--- \r\n\r\nThis is the warning I saw when fiddling with NextJS. Something like this.\r\n\r\n```jsx\r\nconst fallback = 'https://source.unsplash.com/random';\r\nconst src = '';\r\nconst srcSet = '';\r\n```\r\n\r\n>index.js:1 Warning: Prop `dangerouslySetInnerHTML` did not match.\r\n>\r\n> Server:\r\n> <img alt=\\\"random\\\" src=\\\"https://source.unsplash.com/random\\\" srcset=\\\"https://source.unsplash.com/random\\\"\r\n> onerror=\\\"this.onerror=null;this.src=&quot;https://source.unsplash.com/random&quot;;this.srcset=&quot;https://source.unsplash.com/random&quot;;\\\">\r\n> \r\n> Client:\r\n> <img alt=\\\"random\\\" src=\\\"\\\" srcset=\\\"\\\"\r\n> onerror=\\\"this.onerror=null;this.src=&quot;https://source.unsplash.com/random&quot;;this.srcset=&quot;https://source.unsplash.com/random&quot;;\\\">\r\n\r\n\r\nThe markup generation (HTML view source) was this:\r\n```html\r\n\r\n<img\r\n  alt='random'\r\n  src=''\r\n  srcset=''\r\n  onerror='this.onerror=null;this.src=\"https://source.unsplash.com/random\";this.srcset=\"https://source.unsplash.com/random\";'\r\n/>\r\n```\r\n\r\nTo get around the warning, I tried to add `setTimeout 100ms` and the warning went away. This is probably happening because the hydration steps in before the DOM is mutated.\r\n\r\n\r\n```jsx\r\n// Not to be used.\r\n<div dangerouslySetInnerHTML={{\r\n        __html: `\r\n      <img\r\n        alt='random'\r\n        src='${src}'\r\n        srcset='${srcSet}'\r\n        onerror='this.onerror=null;setTimeout((function(){this.src=\"${fallback}\";this.srcset=\"${fallback}\"}).bind(this),100);'\r\n      />\r\n    `}} />\r\n```\r\n\r\nI would ignore the warning.","updated_at":"2019-12-03T09:59:04Z","created_at":"2019-12-03T09:59:04Z","creator_user_login":"kunukn"}
{"number":15446,"comment_id":"593748638","body":"This issue has been automatically marked as stale because it has not had recent activity. It will be closed if no further activity occurs. Thank you for your contribution.\n","updated_at":"2020-03-03T03:28:40Z","created_at":"2020-03-03T03:28:40Z","creator_user_login":"stale[bot]"}
{"number":15446,"comment_id":"607869153","body":"Hi,\r\nI'm testing a solution on NextJs SSR and seems to be working well, but it is to be very different from the ones above so I was curious to know your opinions about.\r\n```\r\nconst Image = ({ id, src, alt, onLoad, onError, className, withLazy }) => {\r\n  const imageRef = useRef();\r\n  const [isVisible] = useIsVisible(imageRef);\r\n  const [imageSrc, setImageSrc] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (!withLazy) {\r\n      setImageSrc(src);\r\n    } else {\r\n      if (isVisible) {\r\n        setImageSrc(src);\r\n      }\r\n    }\r\n  }, [isVisible]);\r\n\r\n  const handleError = e => onError && onError(e);\r\n\r\n  const handleLoad = () => onLoad && onLoad();\r\n\r\n  return (\r\n    <img\r\n      id={id}\r\n      alt={alt}\r\n      src={imageSrc}\r\n      className={className}\r\n      ref={imageRef}\r\n      onLoad={() => handleLoad()}\r\n      onError={e => handleError(e)}\r\n    />\r\n  );\r\n};\r\n```\r\n\r\nThanks ","updated_at":"2020-04-02T14:08:53Z","created_at":"2020-04-02T14:08:53Z","creator_user_login":"andreapiras"}
{"number":15446,"comment_id":"607890463","body":"> Hi,\r\n> I'm testing a solution on NextJs SSR and seems to be working well, but it is to be very different from the ones above so I was curious to know your opinions about.\r\n> \r\n> ```\r\n> const Image = ({ id, src, alt, onLoad, onError, className, withLazy }) => {\r\n>   const imageRef = useRef();\r\n>   const [isVisible] = useIsVisible(imageRef);\r\n>   const [imageSrc, setImageSrc] = useState(null);\r\n> \r\n>   useEffect(() => {\r\n>     if (!withLazy) {\r\n>       setImageSrc(src);\r\n>     } else {\r\n>       if (isVisible) {\r\n>         setImageSrc(src);\r\n>       }\r\n>     }\r\n>   }, [isVisible]);\r\n> \r\n>   const handleError = e => onError && onError(e);\r\n> \r\n>   const handleLoad = () => onLoad && onLoad();\r\n> \r\n>   return (\r\n>     <img\r\n>       id={id}\r\n>       alt={alt}\r\n>       src={imageSrc}\r\n>       className={className}\r\n>       ref={imageRef}\r\n>       onLoad={() => handleLoad()}\r\n>       onError={e => handleError(e)}\r\n>     />\r\n>   );\r\n> };\r\n> ```\r\n> \r\n> Thanks\r\n\r\n@andreapiras The problem that I see is that the image always is loaded after the hydration (after the useEffect). Can be a workaround, but it's interesting to find a solution to load the image earlier.","updated_at":"2020-04-02T14:45:58Z","created_at":"2020-04-02T14:45:36Z","creator_user_login":"aralroca"}
{"number":15446,"comment_id":"608020724","body":"@andreapiras I agree with the previous comment. To state it differently, your code appears to avoid the issue discussed here because the img src is not set until the client has kicked in anyways. It's not server-side rendering to the full extent you probably want.\r\n\r\nIs there somewhere you're calling `renderToString` or `renderToStaticMarkup`? If you log the result of that, I'm guessing your Image renders out to something like `<img alt=\"i am alt\" />` because as previously mentioned, `src` won't be set until after hydration, on the client.","updated_at":"2020-04-02T18:12:23Z","created_at":"2020-04-02T18:12:23Z","creator_user_login":"michaelyuen"}
{"number":15446,"comment_id":"608276436","body":"> @andreapiras I agree with the previous comment. To state it differently, your code appears to avoid the issue discussed here because the img src is not set until the client has kicked in anyways. It's not server-side rendering to the full extent you probably want.\r\n> \r\n> Is there somewhere you're calling `renderToString` or `renderToStaticMarkup`? If you log the result of that, I'm guessing your Image renders out to something like `<img alt=\"i am alt\" />` because as previously mentioned, `src` won't be set until after hydration, on the client.\r\n\r\nYes, you are right, I've checked the generated source and the src was empty so the solution is not valid. Thanks for the feedback guys","updated_at":"2020-04-03T07:28:21Z","created_at":"2020-04-03T07:28:21Z","creator_user_login":"andreapiras"}
{"number":15446,"comment_id":"666739199","body":"this issue is particularly annoying when we need to fire onload metric for SSR image. The only work around for us is to write JS outside React to attach the event listener faster enough. We should provide support rendering for ```onload``` attribute in SSR.","updated_at":"2020-07-30T22:17:12Z","created_at":"2020-07-30T22:16:26Z","creator_user_login":"hkjpotato"}
{"number":15446,"comment_id":"666774533","body":">The only work around for us is to write JS outside React to attach the event listener faster enough.\r\n\r\nFWIW that sounds like a reasonable solution to me. Specifically, a capture phase document-level listener for the `load` event should work?\r\n\r\n```js\r\ndocument.addEventListener('load', (e) => {\r\n // ...\r\n}, { capture: true })\r\n```\r\n\r\nas long as this runs before all other JS you should be able to record which ones have fired.","updated_at":"2020-07-30T23:35:54Z","created_at":"2020-07-30T23:35:54Z","creator_user_login":"gaearon"}
{"number":15446,"comment_id":"666851406","body":"> FWIW that sounds like a reasonable solution to me. Specifically, a capture phase document-level listener for the `load` event should work?\r\n> \r\n> ```js\r\n> document.addEventListener('load', (e) => {\r\n>  // ...\r\n> }, { capture: true })\r\n> ```\r\n> \r\n> as long as this runs before all other JS you should be able to record which ones have fired.\r\n\r\nAre you suggesting some kind of event delegation in that single global event listener? In our case, we are not looking at a document level load event, but the first load event fired by each image element above the fold. I don't think it is very easy to do it outside element level.\r\n\r\nBesides, our img could be SSR or CSR, and I dont want to create a separate imgSSR. Here is my current idea:\r\n\r\nIn component level, I still attach the react event listener, but I will check a flag set on the native event ~~e.defaultPrevented~~ (load event cannot be cancelled:disappointed_relieved:)\r\n```\r\nfunction Image() {\r\n const onLoad = (e) => {\r\n      if (!e.nativeEvent.hasFired) fire();\r\n }\r\n return <img onload={onLoad} />\r\n}\r\n```\r\nAnd only for SSR rendered element, attach an inline script before hydration\r\n```\r\n <img  />  // result of SSR\r\n <script>\r\n      root.querySelector('img').addEventListener('load', function(e) {fire(); e.hasFired = true; })\r\n</script>\r\n```\r\n\r\nBTW, for SyntheticEvent, can you tell me the difference among\r\n```e.isDefaultPrevented() vs e.defaultPrevented vs e.nativeEvent.defaultPrevented```\r\n","updated_at":"2020-07-31T01:18:21Z","created_at":"2020-07-31T01:02:17Z","creator_user_login":"hkjpotato"}
{"number":15446,"comment_id":"702094709","body":"I had similar issue, but solved my problem a bit differently.\r\n\r\n_Waring: it won't work for you if you need the onLoad/onError event, but if you just wan't to validate that the image is loaded it's just fine:_\r\n\r\n```JS\r\nconst PerformanceItem = () => {\r\n    const imageRef = useRef(null)\r\n    const isSSR = useIsSSR()\r\n    const [isPageReady, setPageReady] = useState(false)\r\n  \r\n    const maybeInformPageReady = () => () => {\r\n      if (!isSSR && !isPageReady) {\r\n        triggerSomeAnalytics()\r\n        setPageReady(true)\r\n      }\r\n    }\r\n  \r\n    const onMainImageLoad = maybeInformPageReady()\r\n  \r\n    useEffect(() => {\r\n      const img = imageRef.current\r\n      if (!img || isPageReady) return\r\n  \r\n      // This is needed on first page load after SSR, because onLoad doesn't get fired,\r\n      // but the img is supposed to be loaded on SSR, so we just validate it.\r\n      if (img.complete) {\r\n        onMainImageLoad()\r\n      }\r\n      // NOTE img.complete will be true for failed images as well,\r\n      // so if you want to check for img failure you can do:\r\n      if (img.complete && img.naturalWidth === 0) {\r\n          img.src = 'some fallback url'\r\n      }\r\n    }, [imageRef, isPageReady, onMainImageLoad])\r\n  \r\n    return (\r\n      <img\r\n        src={someUrl}\r\n        onLoad={onMainImageLoad} // won't fire after page refresh due to SSR\r\n        onError={onMainImageLoad} // won't fire after page refresh due to SSR\r\n        onAbort={onMainImageLoad} // won't fire after page refresh due to SSR\r\n        ref={imageRef}\r\n      />\r\n    )\r\n  }\r\n```\r\n\r\n","updated_at":"2020-10-01T12:33:47Z","created_at":"2020-10-01T12:17:38Z","creator_user_login":"todorpr"}
{"number":15446,"comment_id":"770054833","body":"I solved this issue on a Next.js project using these two functions during the server side rendering stage.\r\n[Live codesandbox example](https://codesandbox.io/s/nextjs-ssr-image-404-check-7yx5j).\r\n\r\n```javascript\r\nconst checkImageUrl = async (imageUrl: string): Promise<boolean> => {\r\n  try {\r\n    const response = await axios.get(imageUrl)\r\n    if (response.status === 200) return true\r\n    else return false\r\n  } \r\n  catch (error) {\r\n    return false\r\n  }\r\n}\r\n\r\nexport const checkAndFormatImageUrlWithFallback = async (imageUrl: string, fallbackUrl: string): Promise<string> => {\r\n  \r\n  const isValidImageUrl = await checkImageUrl(imageUrl)\r\n\r\n  return isValidImageUrl ? imageUrl : fallbackUrl\r\n}\r\n```","updated_at":"2021-01-29T21:17:56Z","created_at":"2021-01-29T21:17:24Z","creator_user_login":"taco-tues-on-a-fri"}
{"number":15446,"comment_id":"825457992","body":"Hi! In case this could be useful to anyone, I fix this issues with the following code:\r\n\r\n```\r\nexport const Img = ({\r\n  src = '',\r\n  onImageLoaded,\r\n  title,\r\n  alt,\r\n  ...rest\r\n}: Props) => {\r\n  const imageRef = useRef<HTMLImageElement | null>(null)\r\n\r\n  function handleOnLoad() {\r\n    if (imageRef.current?.currentSrc) {\r\n      onImageLoaded && onImageLoaded()\r\n    }\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    if (imageRef.current?.currentSrc) {\r\n      preloadImageWithCallback({\r\n        imageUrl: imageRef.current.currentSrc,\r\n        callback: onImageLoaded,\r\n      })\r\n    }\r\n  }, [onImageLoaded])\r\n\r\n  return (\r\n    <img\r\n      src={src}\r\n      onLoad={handleOnLoad}\r\n      ref={imageRef}\r\n      title={title}\r\n      alt={alt}\r\n      decoding=\"async\"\r\n      css={css`\r\n        width: 100%;\r\n        height: 100%;\r\n        object-fit: cover;\r\n      `}\r\n      {...rest}\r\n    />\r\n  )\r\n}\r\n```\r\n\r\nand\r\n\r\n```\r\nexport async function preloadImageWithCallback({\r\n  imageUrl,\r\n  callback,\r\n}: {\r\n  imageUrl: string\r\n  callback?(): void\r\n}) {\r\n  function handleCallback() {\r\n    callback && callback()\r\n  }\r\n\r\n  const _image = new Image()\r\n  _image.src = imageUrl\r\n\r\n  if (_image.decode) {\r\n    await _image.decode()\r\n    handleCallback()\r\n  } else {\r\n    _image.onload = handleCallback\r\n  }\r\n}\r\n```\r\n\r\nWith the use of `useLayoutEffect`, I handle the first render case by manually preloading the image, since the `onLoad` will not be triggered. \r\nThe `onLoad` method is only used in those cases when the image is lazy loaded.\r\n\r\nYou can see a real example here -> https://wildtrek.it The images are all lazy loaded, and when the image is fully loaded and ready to be appended to the DOM, I show them.\r\n\r\nThe only thing is that I keep getting the following warning: \r\n`useLayoutEffect does nothing on the server, because its effect cannot be encoded into the server renderer's output format.`\r\n\r\nDoes anyone know how to silence it?\r\n\r\nThanks, and hope this could be useful to anyone!\r\n\r\nEDIT: About yow to silence it, I'm following this guide -> https://medium.com/@alexandereardon/uselayouteffect-and-ssr-192986cdcf7a","updated_at":"2021-04-24T07:34:25Z","created_at":"2021-04-23T07:34:17Z","creator_user_login":"Emiliano-Bucci"}
{"number":15446,"comment_id":"887701200","body":"So, here's a workaround that works (for me)!\r\n\r\n```\r\nconst Img: FC<\r\n  DetailedHTMLProps<ImgHTMLAttributes<HTMLImageElement>, HTMLImageElement>\r\n> = ({ src, ...props }): JSX.Element => {\r\n  const [hasRendered, setHasRendered] = useState(false);\r\n  const imgRef = useRef<HTMLImageElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (imgRef.current && hasRendered) {\r\n      imgRef.current!.src = src || '';\r\n    }\r\n  }, [src, hasRendered]);\r\n\r\n  useEffect(() => {\r\n    setHasRendered(true);\r\n  }, []);\r\n\r\n  return (\r\n    <img\r\n      {...props}\r\n      ref={imgRef as any}\r\n      alt={props.alt || 'image'}\r\n      aria-hidden={true}\r\n      onError={...}\r\n      onLoad={...}\r\n    />\r\n  );\r\n};\r\n```\r\n\r\nSo, the magic happens in the two `useEffect` hooks. (Using just one didn't work).\r\nBasically, the second `useEffect` ensures the first hook is triggered (or component re-renders) a second time (after initial render), due to the `hasRendered` dep, which then forces the image src to be set in that hook which then triggers the events on the client!","updated_at":"2021-07-27T17:41:23Z","created_at":"2021-07-27T17:36:26Z","creator_user_login":"power-f-GOD"}
{"number":15446,"comment_id":"1113731413","body":"There was back and forth what events were being replayed when hydrating in React 18. @gaearon is there still work planned or should we close with a summary?","updated_at":"2022-04-29T21:05:59Z","created_at":"2022-04-29T21:05:59Z","creator_user_login":"eps1lon"}
{"number":15446,"comment_id":"1277943999","body":"@eps1lon @gaearon any updates on this? \r\n","updated_at":"2022-10-13T17:24:40Z","created_at":"2022-10-13T17:24:40Z","creator_user_login":"komlevv"}
{"number":15446,"comment_id":"1666238223","body":"> There was back and forth what events were being replayed when hydrating in React 18. @gaearon is there still work planned or should we close with a summary?\r\n\r\n@gaearon & @eps1lon.\r\nDo you know if there has been any progress on how this should be handled? I'm seeing what i believe is this issue when using React 18 components in a NextJS project that uses SSR.","updated_at":"2023-08-04T22:29:20Z","created_at":"2023-08-04T22:29:20Z","creator_user_login":"Freytag"}
{"number":24986,"comment_id":"1194296358","body":"It's NOT only stupid thing in react.\r\n\r\nHere is some (simplified) code from a project.\r\n```jsx\r\n<div\r\n  // React uses `focusIn/focusOut` under the hood\r\n  onFocus={() => setPauseOnHover(true)}\r\n  onBlur={() => setPauseOnHover(false)}\r\n/>\r\n```\r\nAnd a strange thing is happening with `onMouseLeave`\r\n","updated_at":"2022-07-25T16:08:52Z","created_at":"2022-07-25T16:08:52Z","creator_user_login":"design-principles"}
{"number":24986,"comment_id":"1200775878","body":"I want to work on this issue","updated_at":"2022-08-01T06:38:08Z","created_at":"2022-08-01T06:38:08Z","creator_user_login":"shikhar13012001"}
{"number":24986,"comment_id":"1207279253","body":"For React.js, I was able to fix the issue by adding \"onWheel={(e) => e.target.blur()}\" inside the input tag. ","updated_at":"2022-08-06T20:36:39Z","created_at":"2022-08-06T20:36:21Z","creator_user_login":"hanswang123456"}
{"number":24986,"comment_id":"1207387885","body":"Yeah, it is a workaround I use too. But still, it is lousy UX because it will unfocus the input field while scrolling which is not what users expect. It does not happen for other inputs so why for number one?!","updated_at":"2022-08-07T11:33:38Z","created_at":"2022-08-07T11:33:38Z","creator_user_login":"Jule-"}
{"number":24986,"comment_id":"1229958843","body":"I want to mention, that `react` rendering affects also inputs that are draw outside the React component. \r\n\r\nhttps://codesandbox.io/s/wheel-problem-5nz2b5?file=/src/index.js:110-282","updated_at":"2022-08-29T08:39:01Z","created_at":"2022-08-29T08:39:01Z","creator_user_login":"vvscode"}
{"number":24986,"comment_id":"1230493023","body":"@vvscode indeed, as exposed in my first codesandbox, but I forgot to mention it clearly. Thanks for mentioning that annoying side effect!","updated_at":"2022-08-29T15:43:11Z","created_at":"2022-08-29T15:43:11Z","creator_user_login":"Jule-"}
{"number":24986,"comment_id":"1239368473","body":"It's possible to get correct behaviour with adding event to the ref, but if you are using forwardRef it's became tricky.\r\n\r\n```javascript\r\nconst domRef = React.useRef<HTMLInputElement>();\r\nReact.useEffect(() => {\r\n     const preventInputScroll = (e: WheelEvent) => e.preventDefault();\r\n     domRef.current?.addEventListener('wheel', preventInputScroll);\r\n     return () => {\r\n         domRef.current?.removeEventListener('wheel', preventInputScroll);\r\n     };\r\n});\r\nreturn (<input type='number' ref='domRef' />);\r\n```","updated_at":"2022-09-07T13:17:31Z","created_at":"2022-09-07T13:09:22Z","creator_user_login":"qvantor"}
{"number":24986,"comment_id":"1240470376","body":"```ts\r\ndocument.body.addEventListener(\"wheel\", (ev) => {\r\n    const target = ev.composedPath()[0] as HTMLElement;\r\n    if (target.matches('input[type=\"number\"]')) {\r\n        target.blur();\r\n    }\r\n});\r\n```\r\nsolves the problem globally (including shadow DOM)","updated_at":"2022-09-08T09:34:56Z","created_at":"2022-09-08T09:34:56Z","creator_user_login":"vvscode"}
{"number":24986,"comment_id":"1240498579","body":"@vvscode Thanks for the code snippets but unfortunately this is still a lousy behaviour, not a real transparent solution. And thus this cannot be an excuse to not fix this issue.\r\n\r\n@qvantor Thanks for the code snippet too but last time I checked calling `preventDefault()` have the side effect of preventing the user from scrolling when the input is focused, again not a proper fix but could be a lousy workaround for some people though.\r\n\r\n@shikhar13012001 any news about your help proposal or this has just been ignored?","updated_at":"2022-09-08T10:01:50Z","created_at":"2022-09-08T10:01:50Z","creator_user_login":"Jule-"}
{"number":24986,"comment_id":"1346572575","body":"may not be a React bug, all you need to reproduce this is a passive `wheel` listener attached to some element (does not have to be the input element)\r\n\r\nhttps://codesandbox.io/s/friendly-browser-ueyekx","updated_at":"2022-12-12T14:08:35Z","created_at":"2022-12-12T14:08:35Z","creator_user_login":"yihongang"}
{"number":18945,"comment_id":"630421386","body":"The frame limitation is mentioned in the docs, FWIW:\r\nhttps://github.com/facebook/react/tree/master/packages/react-devtools\r\n\r\nIt's not a bug, just a known limitation. We currently suggest using the standalone version (as linked above) or (if you also control the iframe) passing the hook through from the parent:\r\nhttps://github.com/facebook/react/blob/d897c35ecfb7471b55e41933fd4d993b98dbf600/fixtures/devtools/regression/14.9.html#L9-L11\r\n\r\nI don't think that adding the Manifest setting you mentioned would be enough on its own to make the React DevTools extension detect and support versions of React running inside of iframes.\r\n\r\nI'd be happy for you to take a shot at implementing it though if you'd like. We have a [regression test](https://github.com/facebook/react/blob/d897c35ecfb7471b55e41933fd4d993b98dbf600/fixtures/devtools/regression/server.js) that you could use to verify this:\r\n```sh\r\n./fixtures/devtools/regression/server.js\r\n# Open localhost:3000 and see if DevTools detects React\r\n```","updated_at":"2020-05-18T20:35:03Z","created_at":"2020-05-18T20:35:03Z","creator_user_login":"bvaughn"}
{"number":18945,"comment_id":"630428779","body":"Thank you very much for your answer and rewording the issue title, it's more accurate.\r\n\r\nIn my case the iframe runs in an other domain so window.parent would not be accessible.\r\n\r\nI am ready to try to implement it. I'll take a look tomorrow. If you have any more info to share that would greatly help me when I'll start working on it.\r\n\r\nThanks again, I will keep you informed and I hope I will be able to make it work :)","updated_at":"2020-05-18T20:51:59Z","created_at":"2020-05-18T20:51:59Z","creator_user_login":"dmail"}
{"number":18945,"comment_id":"630429912","body":"Great! Keep me posted on your progress :smile:\r\n\r\nHere's instructions to get you started:\r\nhttps://github.com/facebook/react/tree/master/packages/react-devtools-extensions#build-steps","updated_at":"2020-05-18T20:54:33Z","created_at":"2020-05-18T20:54:33Z","creator_user_login":"bvaughn"}
{"number":18945,"comment_id":"630667574","body":"I have opened a draft pull request. \r\nFor now I have only tested to add all_frames: true on chrome extension manifest.json and it looks like it's working -> react is being detected inside a sandboxed iframe 🎉 .","updated_at":"2020-05-19T08:25:34Z","created_at":"2020-05-19T08:25:34Z","creator_user_login":"dmail"}
{"number":18945,"comment_id":"630695170","body":"Working on edge 🎉 \r\n\r\nAbout firefox however I have some trouble. I have changed nothing yet concerning firefox and after doing\r\n\r\n1. yarn build:firefox\r\n2. yarn run test:firefox\r\n\r\nIn the firefox browser that is launched the extension does not detect react on `reactjs.org`.\r\n\r\n![firefoxko](https://user-images.githubusercontent.com/443639/82307985-6fb39780-99c1-11ea-9e0c-f9e3e07969ea.png)\r\n\r\nIn Firefox console I see this error (and many more with the same error code):\r\n\r\n![image](https://user-images.githubusercontent.com/443639/82307376-92917c00-99c0-11ea-8a7f-3d3fb8f47f0c.png)\r\n\r\nThe extension in firefox store is working properly\r\n\r\n![firefoxok](https://user-images.githubusercontent.com/443639/82307857-3ed36280-99c1-11ea-90ec-068114f33ad8.png)\r\n\r\nFirefox fails to load some file (apparently related to Localization) when the extension is loaded locally. Any idea what is going on ?\r\n\r\n","updated_at":"2020-05-19T09:14:29Z","created_at":"2020-05-19T09:14:29Z","creator_user_login":"dmail"}
{"number":18945,"comment_id":"630790934","body":"About firefox I got workarounds depending what happens:\r\n\r\n(a) Firefox addon is shown but fails to detect react\r\n-> refresh the page and it will work normally\r\n\r\n(b) Firefox addon does not even show up\r\n-> go to Firefox settings\r\n-> disable react devtools addon and enable it right away\r\n-> go back to `reactjs.org` and it will work normally\r\n\r\nAs I said this happens already on `master` branch without any change on my side.\r\n\r\nNow that I can test firefox extension locally I move on and try to add `all_frame: true` on Firefox.","updated_at":"2020-05-19T13:18:15Z","created_at":"2020-05-19T12:40:35Z","creator_user_login":"dmail"}
{"number":18945,"comment_id":"630809736","body":"I'm putting pull request in ready for review.","updated_at":"2020-05-19T13:15:20Z","created_at":"2020-05-19T13:15:20Z","creator_user_login":"dmail"}
{"number":18945,"comment_id":"649269640","body":"What happened to this issue? Is it available for me to try out?\r\n@dmail , are you planning on working on it or I may try to figure this out?","updated_at":"2020-06-25T06:48:33Z","created_at":"2020-06-25T06:47:37Z","creator_user_login":"ghost"}
{"number":18945,"comment_id":"649284683","body":"Hello, the pull request is on hold because I don't know what to tackle first. On my side I was waiting for advice to restart working on it. Go ahead, I'm still interested on the subject so I'll keep an eye on it (and may still help to the extent of my abilities).","updated_at":"2020-06-25T07:04:09Z","created_at":"2020-06-25T07:04:09Z","creator_user_login":"dmail"}
{"number":18945,"comment_id":"649307684","body":"@dmail thank you!","updated_at":"2020-06-25T07:28:13Z","created_at":"2020-06-25T07:28:13Z","creator_user_login":"ghost"}
{"number":18945,"comment_id":"653218453","body":"For the record, I was able to make this work with a Next.js app that is providing the iframe, with these changes:\r\n\r\n**$NEXT_PROJECT/public/js/enableReactDevtoolsIframe.js**\r\n```js\r\n// The React DevTools do not normally look inside of iframes, just the outer window.\r\n// We can enable inspection of React components in an iframe by copying this global variable:\r\n// https://github.com/facebook/react/issues/18945#issuecomment-630421386\r\n// This code must be injected before React runs, so we add it as a separate tag\r\n// and show it via Next.js <Head> in _app.tsx.\r\nif (window.parent) {\r\n  window.__REACT_DEVTOOLS_GLOBAL_HOOK__ = window.parent.__REACT_DEVTOOLS_GLOBAL_HOOK__;\r\n}\r\n```\r\n\r\n**$NEXT_PROJECT/pages/_app.tsx**\r\n```ts\r\nimport React from 'react';\r\nimport Head from 'next/head';\r\n\r\nexport default function MyApp({ Component, pageProps }: { Component: any; pageProps: any }) {\r\n  // Ensure the React DevTools global variable is injected if this is an iframe\r\n  // to enable inspection of components inside the iframe.\r\n  return (\r\n    <React.Fragment>\r\n      <Head>\r\n        <script src=\"js/enableReactDevtoolsIframe.js\"></script>\r\n      </Head>\r\n      <Component {...pageProps} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n```","updated_at":"2020-07-02T21:26:12Z","created_at":"2020-07-02T21:01:05Z","creator_user_login":"markerikson"}
{"number":18945,"comment_id":"653485949","body":"FYI: We've been using the `all_frames: true` option in `manifest.json` for a while now over with preact-devtools and it works like a charm. The only thing one needs to be careful about is to inject the highlighting code into each iframe too! Otherwise  the position will be off.","updated_at":"2020-07-03T10:52:36Z","created_at":"2020-07-03T10:52:36Z","creator_user_login":"marvinhagemeister"}
{"number":18945,"comment_id":"654270839","body":"@marvinhagemeister Do you remember doing anything additional (beyond just adding `all_frames: true` option in `manifest.json`) to get it to work? I haven't taken the time to dig into this yet but I did test out the linked PR (#18952) and it didn't appear to be working.\r\n\r\n@shakhbulatgaz  did you ever end up digging into this?","updated_at":"2020-07-06T14:24:01Z","created_at":"2020-07-06T14:24:01Z","creator_user_login":"bvaughn"}
{"number":18945,"comment_id":"654327556","body":"@bvaughn Not much really, only had to ensure that each adapter that's injected into the client doesn't traverse into other iframes. The linked PR looks correct to me, so I'm guessing something isn't ok with the connection logic. Maybe it's the same timing issue we've been talking about a while back that's more of a regression in Chrome?\r\n\r\nFor reference: The PR that added support for iframes for `preact-devtools`: https://github.com/preactjs/preact-devtools/pull/209/files","updated_at":"2020-07-06T16:05:29Z","created_at":"2020-07-06T16:05:29Z","creator_user_login":"marvinhagemeister"}
{"number":18945,"comment_id":"654340288","body":"Gotcha! Thanks for elaborating :smile:\r\n\r\n> Maybe it's the same timing issue we've been talking about a while back that's more of a regression in Chrome?\r\n\r\nI think the fix for this issue has made its way into stable (or at least I'm no longer seeing the issue myself).","updated_at":"2020-07-06T16:29:52Z","created_at":"2020-07-06T16:29:52Z","creator_user_login":"bvaughn"}
{"number":18945,"comment_id":"654376757","body":"@bvaughn Nah, I'm sorry, other things came up and I completely forgot about this 😢 ","updated_at":"2020-07-06T17:45:41Z","created_at":"2020-07-06T17:45:41Z","creator_user_login":"ghost"}
{"number":18945,"comment_id":"654378730","body":"Fair enough. Maybe someone else will pick it up :)","updated_at":"2020-07-06T17:49:55Z","created_at":"2020-07-06T17:49:55Z","creator_user_login":"bvaughn"}
{"number":18945,"comment_id":"654380848","body":"@bvaughn Can you explain to me the current scenario and what needs to be done? Was reading through the thread but couldn't deduce much. This is my first issue to pick from react repo.","updated_at":"2020-07-06T17:54:30Z","created_at":"2020-07-06T17:54:30Z","creator_user_login":"anrao91"}
{"number":18945,"comment_id":"654383821","body":"@anrao91 Unfortunately, no. Not beyond what's been discussed on this thread and on the linked PR (#18952).","updated_at":"2020-07-06T18:00:59Z","created_at":"2020-07-06T18:00:59Z","creator_user_login":"bvaughn"}
{"number":18945,"comment_id":"657880331","body":"@bvaughn By adding the below code, doesn't enable react to inspect inside an iframe. I tried the [regression test](https://github.com/facebook/react/blob/d897c35ecfb7471b55e41933fd4d993b98dbf600/fixtures/devtools/regression/server.js), didn't work there either.\r\n```javascript\r\n__REACT_DEVTOOLS_GLOBAL_HOOK__ = parent.__REACT_DEVTOOLS_GLOBAL_HOOK__; \r\n```\r\n\r\nI was able to make this work by copying the values of parents `__REACT_DEVTOOLS_GLOBAL_HOOK__` one by one, instead of copying it directly. (Maybe this isn't the right approach, but it seems to work)\r\n```javascript\r\nfor (const key in __REACT_DEVTOOLS_GLOBAL_HOOK__) {\r\n      __REACT_DEVTOOLS_GLOBAL_HOOK__[key] = parent.__REACT_DEVTOOLS_GLOBAL_HOOK__[key]\r\n}\r\n```\r\n\r\nI verified it by doing the [regression test](https://github.com/facebook/react/blob/d897c35ecfb7471b55e41933fd4d993b98dbf600/fixtures/devtools/regression/server.js) on Firefox and Chrome. It detected React and also displayed the entire component tree under the `Components Panel`. (Didn't work for  **React 0.14.9** though due to incompatibility)\r\n\r\nCopying it directly didn't update the iframe's `__REACT_DEVTOOLS_GLOBAL_HOOK__` value, I'm not really sure why though. Maybe because it's is not `writable`. When using `defineProperty`, `writable` is `false` by default. But, In this case, the above working code shouldn't have worked. :smile: \r\nhttps://github.com/facebook/react/blob/9ea0f6752da28a91bdb56382367e2a07390cb733/packages/react-devtools-shared/src/hook.js#L309-L321\r\n\r\nAnyways let me know your thoughts on this.\r\n\r\nBelow is a sceenshot showing the working eg:,\r\n\r\n![react_dev_tools_issue](https://user-images.githubusercontent.com/19655674/87353756-0db77e80-c57b-11ea-8cf8-3c18a3dc105c.png)\r\n","updated_at":"2020-07-13T23:46:23Z","created_at":"2020-07-13T23:44:41Z","creator_user_login":"Reflex-Gravity"}
{"number":18945,"comment_id":"683422864","body":"Can I take this up if no one else is currently working on it? @bvaughn @dmail ","updated_at":"2020-08-30T13:48:07Z","created_at":"2020-08-30T13:48:07Z","creator_user_login":"sarathps93"}
{"number":18945,"comment_id":"683853194","body":"@sarathps93 You're welcome to work on this. Please check out the work and discussion on #19345 before starting though!","updated_at":"2020-08-31T15:32:01Z","created_at":"2020-08-31T15:32:01Z","creator_user_login":"bvaughn"}
{"number":18945,"comment_id":"688073828","body":"@sarathps93  Are you still working on it ?","updated_at":"2020-09-07T06:48:33Z","created_at":"2020-09-07T06:45:49Z","creator_user_login":"omarsy"}
{"number":18945,"comment_id":"688660133","body":"@omarsy I was about to start this weekend. Let me know if you want to take it up","updated_at":"2020-09-08T06:57:08Z","created_at":"2020-09-08T06:57:08Z","creator_user_login":"sarathps93"}
{"number":18945,"comment_id":"691251912","body":"Can I push a PR ?","updated_at":"2020-09-11T18:37:35Z","created_at":"2020-09-11T18:37:35Z","creator_user_login":"omarsy"}
{"number":18945,"comment_id":"691681005","body":"@omarsy Yes please go ahead","updated_at":"2020-09-13T14:49:34Z","created_at":"2020-09-13T14:49:34Z","creator_user_login":"sarathps93"}
{"number":18945,"comment_id":"691722893","body":"Thank you @sarathps93 ","updated_at":"2020-09-13T20:45:07Z","created_at":"2020-09-13T20:45:07Z","creator_user_login":"omarsy"}
{"number":18945,"comment_id":"692074777","body":"Resolved in #19827","updated_at":"2020-09-14T14:05:05Z","created_at":"2020-09-14T14:05:05Z","creator_user_login":"bvaughn"}
{"number":18945,"comment_id":"703641995","body":"Re-opening because this was reverted again.","updated_at":"2020-10-05T13:44:31Z","created_at":"2020-10-05T13:44:31Z","creator_user_login":"bvaughn"}
{"number":18945,"comment_id":"704032878","body":"@bvaughn I have walked through previous discussions. Can I take a look at it as my first issue?","updated_at":"2020-10-06T05:17:31Z","created_at":"2020-10-06T05:17:31Z","creator_user_login":"Eric0926"}
{"number":18945,"comment_id":"704275785","body":"Feel free, @Eric0926.\r\n\r\nI'm a little skeptical about landing this change again though, given we've had to revert it twice. 😅 But if you're willing to do a lot of testing, sure!","updated_at":"2020-10-06T13:39:34Z","created_at":"2020-10-06T13:39:34Z","creator_user_login":"bvaughn"}
{"number":18945,"comment_id":"751542787","body":"It looks like the issue is still relevant. 🙁 ","updated_at":"2020-12-28T01:24:41Z","created_at":"2020-12-28T01:24:41Z","creator_user_login":"alleksei37"}
{"number":18945,"comment_id":"753631918","body":"That's why the issue is still open, @alleksei37.","updated_at":"2021-01-03T15:13:19Z","created_at":"2021-01-03T15:13:19Z","creator_user_login":"bvaughn"}
{"number":18945,"comment_id":"756038095","body":"can you merge the fix with a feature flag? (i.e. enable-able from settings)\r\nI'm having the `__REACT_DEVTOOLS_GLOBAL_HOOK__` fix and I want to remove it!","updated_at":"2021-01-07T10:44:56Z","created_at":"2021-01-07T10:44:56Z","creator_user_login":"KutnerUri"}
{"number":18945,"comment_id":"756139945","body":"No. If there was a simple fix that just needed to be merged, it would have been merged already. Both previous attempts to fix this have needed to be reverted because they've caused unexpected problems.\r\n\r\nRegardless, the fix is not something that could be enabled/disabled via a setting– because it requires changes to things like the extension manifest JSON.","updated_at":"2021-01-07T14:12:27Z","created_at":"2021-01-07T14:11:54Z","creator_user_login":"bvaughn"}
{"number":18945,"comment_id":"855278358","body":"Hi, I want to work on this issue, can you suggest me ways to get started?\r\n","updated_at":"2021-06-05T18:31:54Z","created_at":"2021-06-05T18:31:54Z","creator_user_login":"prsmahajan"}
{"number":18945,"comment_id":"855286390","body":"@prsmahajan You can find an architecture overview doc about how DevTools works here:\r\nhttps://github.com/facebook/react/blob/master/packages/react-devtools/OVERVIEW.md\r\n\r\nAnd instructions for how to build and test the extension here:\r\nhttps://github.com/facebook/react/tree/master/packages/react-devtools-extensions#local-development\r\n\r\nBeyond that, this would likely be an unguided task because we're all spread a little thin at the moment.","updated_at":"2021-06-05T19:41:05Z","created_at":"2021-06-05T19:41:05Z","creator_user_login":"bvaughn"}
{"number":18945,"comment_id":"855379841","body":"What is the main problem you all are facing?\r\n","updated_at":"2021-06-06T11:01:20Z","created_at":"2021-06-06T11:01:20Z","creator_user_login":"prsmahajan"}
{"number":18945,"comment_id":"864398548","body":"Solution above works partly, only with deactivated CORS (**for me**)\r\nDo u have any ideas, how to allow using of devtools with enabled CORS?\r\n![photo_2021-06-19 14 49 30](https://user-images.githubusercontent.com/28603471/122642026-21ffe600-d111-11eb-8987-82f0dfd40044.jpeg)\r\n","updated_at":"2021-06-19T12:16:02Z","created_at":"2021-06-19T12:16:02Z","creator_user_login":"flydge"}
{"number":18945,"comment_id":"881976235","body":"I believe I have the same problem as @flydge .\r\n\r\n![image](https://user-images.githubusercontent.com/3172397/126051919-b64f2109-8e77-4bdd-8e89-393a4958995c.png)\r\n","updated_at":"2021-07-18T00:04:00Z","created_at":"2021-07-18T00:03:48Z","creator_user_login":"jplindgren"}
{"number":18945,"comment_id":"925470001","body":"@bvaughn Can I take a look at it as my first issue?","updated_at":"2021-09-23T02:53:29Z","created_at":"2021-09-23T02:53:29Z","creator_user_login":"amorphousDj"}
{"number":18945,"comment_id":"925764284","body":"If you'd like to, please do.","updated_at":"2021-09-23T12:29:09Z","created_at":"2021-09-23T12:29:09Z","creator_user_login":"bvaughn"}
{"number":18945,"comment_id":"951880852","body":"Can I Pick this, as its pending from long time back @bvaughn ","updated_at":"2021-10-26T12:17:54Z","created_at":"2021-10-26T12:17:54Z","creator_user_login":"Mukulbaid63"}
{"number":18945,"comment_id":"951957223","body":"Sure.","updated_at":"2021-10-26T13:46:43Z","created_at":"2021-10-26T13:46:43Z","creator_user_login":"bvaughn"}
{"number":18945,"comment_id":"983227705","body":"Hi i'd like to contribute.","updated_at":"2021-12-01T02:34:41Z","created_at":"2021-12-01T02:34:41Z","creator_user_login":"luanhcastro"}
{"number":18945,"comment_id":"1151512921","body":"This seems more urgent with google announcing removing [`document.domain`](https://developer.chrome.com/blog/immutable-document-domain). This means the parent hook passthrough is only available for same-protocol/subdomain/domain iframes.\r\n\r\nHas there been any movement on this?","updated_at":"2022-06-09T19:49:54Z","created_at":"2022-06-09T19:13:32Z","creator_user_login":"richiepreece"}
{"number":18945,"comment_id":"1193294736","body":"It looks there are a couple pull requests that try to use the manifest.json approach, setting all_frames: true and getting the global devtools hook from the parent. That hasn't worked for my use case and I'm not confident that I would be able to fix the issue in the repo that way since it looks like that fix has been tried for about 7 years (see [react-devtools issue 76](https://github.com/facebook/react-devtools/issues/76)).\r\n\r\nAs a workaround, what I want to do is create a dropdown that will let the user pick a frame and then show the component tree for that frame. Is that a viable solution? Would I have better luck with using the standalone devtools app found [here](https://github.com/facebook/react/tree/main/packages/react-devtools#usage-with-react-dom)?","updated_at":"2022-07-24T12:09:45Z","created_at":"2022-07-24T11:05:43Z","creator_user_login":"awells111"}
{"number":18945,"comment_id":"1193303665","body":"For the record all_frames: true was inspired from preact-devtools. It might be interesting to see how preact use it and make things work. Out of my abilities.","updated_at":"2022-07-24T12:03:16Z","created_at":"2022-07-24T12:01:39Z","creator_user_login":"dmail"}
{"number":18945,"comment_id":"1195393497","body":"@omarsy Do you remember why #19854 was reverted? Is it because the changes cause some tests to fail or is it something else? The changes in that PR look like they're meeting the needs of my application.","updated_at":"2022-07-26T12:02:39Z","created_at":"2022-07-26T12:02:39Z","creator_user_login":"awells111"}
{"number":18945,"comment_id":"1195406119","body":"Hello the issue is reverted because someone says it has an issue with my PR https://github.com/facebook/react/pull/19854#issuecomment-705190614. But I don't think it is related of my PR.\r\nIt is why I create a new PR to fix the issue of the comment https://github.com/facebook/react/pull/19994 to see  if it is caused by my PR or not.\r\nIf I have time this month I will try to close my two PRs","updated_at":"2022-07-26T12:15:14Z","created_at":"2022-07-26T12:15:14Z","creator_user_login":"omarsy"}
{"number":18945,"comment_id":"1195472547","body":"Thank you. I am available to help if you need. I am currently comparing the outputs of `yarn test` and `yarn flow dom` between the React repo and my fork (updated to 19854) to see what can be resolved.","updated_at":"2022-07-26T13:17:22Z","created_at":"2022-07-26T13:17:22Z","creator_user_login":"awells111"}
{"number":18945,"comment_id":"1195794150","body":"@awells111  I think the frame selector is ideal if possible. Similar to what chrome does when you have iframes.\r\n\r\nThere's always the option for the standalone dev tools, but honestly it's not great for when you're trying to find a component because you don't have a selector, and you have to know the component tree to know where to look.","updated_at":"2022-07-26T17:48:13Z","created_at":"2022-07-26T17:48:13Z","creator_user_login":"richiepreece"}
{"number":18945,"comment_id":"1205252824","body":"#19854 fixes the issue for me. I didn't wind up implementing anything like a frame selector.\r\n\r\nA fork including the changes from #19854 can't be uploaded to the web store until the manifest is updated to v3, if we're even allowed to upload forks to the chrome web store. As a temporary solution, developers can create their own forks and build the modified repo locally. That has worked for me for now.","updated_at":"2022-08-04T13:23:59Z","created_at":"2022-08-04T13:23:59Z","creator_user_login":"awells111"}
{"number":15240,"comment_id":"477797840","body":"What do you [think of this approach (codesandbox)](https://codesandbox.io/s/k2332yjrp7?fontsize=14), based on your \"Option 2\" implementation? It has the following characteristics:\r\n\r\n- unnecessary rerenders don't occur\r\n- there is no `useRef`\r\n- there is no `useEffect`\r\n\r\nThe main reason that this is possible is that the `onSave` function *knows* which item is currently being edited (`editingId` can be closed over). Therefore, we can write:\r\n\r\n```js\r\nlet onSave = useCallback(\r\n  item => {\r\n    setItems(items.map(it => (it.id === editingId ? item : it)));\r\n\r\n    // start any async stuff here\r\n  },\r\n  [items, editingId]\r\n);\r\n```\r\n\r\nThe main problem with this (that you probably noticed) is that `onSave` changes identity whenever `editingId` changes, which means that if you pass it to every `<Row/>`, then every `<Row/>` re-renders whenever you start editing a different one (which is bad!).\r\n\r\nThere are two ways to fix this:\r\n\r\n-  make sure the identity of `onSave` stays the same across all renders. This is what your solution does (using refs to pass state to `onSave`)\r\n- *don't pass it to every Row*\r\n\r\nThe second approach is what I took. The idea is straightforward: the only `<Row/>` that could possible call `onSave()` is the one that's currently being edited. Therefore, we only need to pass `onSave` to that row (you could also get rid of `editing` and simply check for whether `onSave` is truthy, but I thought that was a bit much).\r\n\r\nAny async logic can go after the `setItems` call. If you need to access the \"current\" `items` you're unfortunately out of luck, but it doesn't seem immediately obvious to me that that would be necessary. (For example, since you don't want to send the whole array to the server, your server probably supports updating individual elements without needing to worry about concurrent/older updates to the others).\r\n\r\nIt's possible that this example is missing some of the complexity that prevents you from using this approach (or a similar approach). In that case, I think it would be helpful to figure out what those details are. They should give a better idea of the \"right\" path forward for supporting the cases that `useState` / `useCallback` / `memo` are insufficient for.","updated_at":"2019-03-28T22:43:27Z","created_at":"2019-03-28T22:43:27Z","creator_user_login":"Nathan-Fenner"}
{"number":15240,"comment_id":"477813135","body":"(This will be a quick reply, I gotta run soon) I had thought of that but forgot to mention in my post. It is an option if all you need is `onSave`, but in my app I have several other callbacks, one of them being `onDelete`. You can click an X beside any item to delete it, so they always need `onDelete` since any of them can be deleted at any time (also via special keyboard shortcuts so checking hover or something wouldn't work). It doesn't really scale to guess when they \"need\" the callbacks.","updated_at":"2019-03-28T23:54:39Z","created_at":"2019-03-28T23:54:39Z","creator_user_login":"jlongster"}
{"number":15240,"comment_id":"477909300","body":"@Nathan-Fenner \r\nHere is the running sandbox for more complexity [https://codesandbox.io/s/2pqwl14ywy](https://codesandbox.io/s/2pqwl14ywy)","updated_at":"2019-03-29T08:17:08Z","created_at":"2019-03-29T08:17:08Z","creator_user_login":"behzad888"}
{"number":15240,"comment_id":"477970129","body":"With option two you can actually save the ref of the callback instead of the individual states. So the callback always refers to all latest states and the ergonomics is slightly nicer. Here I introduced useStableCallback - https://codesandbox.io/s/k0zqrkrojo\r\n\r\nIt still suffers from the problem of losing the first save if you call it twice, but I reckon you could combine this and useReducer","updated_at":"2019-03-29T11:50:17Z","created_at":"2019-03-29T11:49:58Z","creator_user_login":"JakeCoxon"}
{"number":15240,"comment_id":"478007011","body":"Are there any drawbacks to functional updates for state? \r\nI tried this change to the early Option 2 example and it seems to work as expected. \r\nhttps://codesandbox.io/embed/yqoj8zyrnz\r\n```javascript\r\nlet onSave = useCallback(\r\n  item => {\r\n    setItems(currentItems => currentItems.map(it => (it.id === item.id ? item : it)));\r\n  },\r\n  []\r\n);\r\n```\r\n","updated_at":"2019-03-29T13:57:50Z","created_at":"2019-03-29T13:57:50Z","creator_user_login":"KaseyPowers"}
{"number":15240,"comment_id":"478053290","body":"> With option two you can actually save the ref of the callback instead of the individual states.\r\n\r\nThat's true, I think I remember seeing this now. It's just as valid a solution as option 2. The only difference I can think of is the behavior when you are doing async work in the callback.\r\n\r\nLater in my post I mentioned that my real callback looks something like this:\r\n\r\n```js\r\nlet onSave = useCallback(item => {\r\n  setItems(latestItems.current.map(it => (it.id === item.id ? item : it)));\r\n  // save to server\r\n  let changes = await post('/save-item', { item })\r\n  setItems(applyChanges(latestItems.current, changes))\r\n}, []);\r\n```\r\n\r\nI need to *act* on the result from the server and apply changes to local state from it. Think of adding a new item - a common pattern is to assign it a temporary id, and the server rewrites the id to a real one and returns the real id to you, which you need to update locally.\r\n\r\nMy code will reference the latest items, whereas as callback from `useStableCallback` will always reference the same items. You might overwrite updates that happened during async work.\r\n\r\nHowever, you can solve this by using functional updates:\r\n\r\n```js\r\n  let onSave = useStableCallback(item => {\r\n    setItems(items => items.map(it => (it.id === item.id ? item : it)));\r\n    let changes = await post(...)\r\n    setItems(items => applyChanges(changes, items))\r\n  });\r\n```\r\n\r\nThis also has the benefit of never overwriting updates, even if they fired off sequentially. You get the same behavior as dispatching multiple actions at once with a reducer.\r\n\r\nI'm curious if the React team (or anybody) sees anything wrong with the above solution. If not, it seems like something like `useStableCallback` could be a builtin hook, or `useCallback` should behavior more like it instead.","updated_at":"2019-03-29T16:01:20Z","created_at":"2019-03-29T16:01:20Z","creator_user_login":"jlongster"}
{"number":15240,"comment_id":"478053478","body":"> Are there any drawbacks to functional updates for state?\r\n\r\nThe problem isn't updating state, the options are trying to solve this problem: \"We need our side effect to run in the commit phase.\" We need to run side effects in addition to updating the state and make sure they stay in sync.\r\n\r\nAs mentioned above functional updates do help with not losing updates but doesn't help with effects.","updated_at":"2019-03-29T16:01:50Z","created_at":"2019-03-29T16:01:50Z","creator_user_login":"jlongster"}
{"number":15240,"comment_id":"478055918","body":"If you're already using reducers, the answer is relatively straight-forward with the same technique, and you don't need `useStableCallback`:\r\n\r\n```js\r\n  let onSave = useCallback(item => {\r\n    dispatch({ type: 'save-item', item })\r\n    let changes = await post('/save-item', { item })\r\n    dispatch({ type: 'apply-updates', changes })\r\n  }, []);\r\n```\r\n\r\nFor my use case I think driving side effects via callbacks works well. Not sure if there is another strong use case for driving them via state changes themselves (meaning the ability to emit effects from reducers).","updated_at":"2019-03-29T16:08:17Z","created_at":"2019-03-29T16:08:17Z","creator_user_login":"jlongster"}
{"number":15240,"comment_id":"478059461","body":"Actually, there is a problem (thinking out loud here, sorry for the multiple posts). Just remembered that in my real app, saving is actually like this:\r\n\r\n```js\r\nfunction onSave(item) {\r\n  setItems(items.map(it => (it.id === item.id ? item : it)));\r\n\r\n  let diff = getDiff(items.find(it => it.id === item.id), item)\r\n  let changes = await post('/save-item', { item })\r\n  setItems(applyChanges(changes, items))\r\n}\r\n```\r\n\r\nIt *diffs* the new item with the existing one and only sends off changed fields to the server. So it needs access to the current items, so the functional updates aren't enough. Option 2 or `useStableCallback` still work if you need this kind of access, but it's not 100% async safe. Will think more on it.\r\n\r\nWhat could happen is `onSave` is fired multiple times before `items` is updated, so the second time it diffs it generates a diff that could revert the first change (because `item` is updated but the item in `items` in not updated yet).\r\n\r\nIf reducers has a way to emit events, the advantage is you get a way to always be in sync with the existing state and have full access to it, knowing that it's always up-to-date. Not sure if that's a good route to go though.","updated_at":"2019-03-29T16:29:13Z","created_at":"2019-03-29T16:18:36Z","creator_user_login":"jlongster"}
{"number":15240,"comment_id":"478060061","body":"Also see the section \"Another small use case for triggering effects\". I need access to the current state to derive a new value and then fire an effect. It's a clearer use case for the need to wait for a state change to happen to then do something.","updated_at":"2019-03-29T16:23:27Z","created_at":"2019-03-29T16:20:19Z","creator_user_login":"jlongster"}
{"number":15240,"comment_id":"478084874","body":"Just on the point of maintaining callback identity for synchronous state modifiers, I think my library [`use-methods`](https://github.com/pelotom/use-methods) solves this very nicely. Here's what your `useReducer` version looks like after conversion to `useMethods`:\r\n\r\n```js\r\nconst methods = state => ({\r\n  saveItem(item) {\r\n    Object.assign(state.items.find(it => it.id === item.id), item);\r\n  },\r\n  editItem(id) {\r\n    state.editingId = id;\r\n  }\r\n});\r\n\r\nconst initialState = {\r\n  items: itemData,\r\n  editingId: null\r\n};\r\n\r\nlet [state, { saveItem, editItem }] = useMethods(methods, initialState);\r\n```\r\n\r\n([full working version](https://codesandbox.io/s/yknryo0vvv))\r\n\r\nNote how `saveItem` and `editItem` just fall out as stable callbacks, no need for `useCallback`.\r\n\r\nAs for the best way to handle the async/sync interplay aspect, it's a great question and I'm glad you're asking it!","updated_at":"2019-03-29T18:44:26Z","created_at":"2019-03-29T17:32:35Z","creator_user_login":"pelotom"}
{"number":15240,"comment_id":"478182594","body":"I've been working on a library called [tiny-atom](https://github.com/KidkArolis/tiny-atom) for managing state/effects in React. It's implementation and usage became nicer with hooks. I wanted to share it here since I think it does solve your specific problem, and maybe it can be useful when thinking about other, possibly \"closer to the metal\" solutions. Also, just looking for feedback and for people to poke holes.\r\n\r\nThe goal with tiny-atom was always collocating state/effect logic, the way you're describing it in Option 2. Normally, tiny-atom was all about global state management (ala redux), but I've been recently thinking about adding a `useLocalAtom/useInlineAtom` hook, and your use case shows it could really be useful.\r\n\r\nExample: https://codesandbox.io/s/71lrr5rwq\r\nBasically, you'd just need this code to achieve your scenario:\r\n\r\n```js\r\n  const [state, { onEdit, onSave }] = useLocalAtom(() => ({\r\n    state: {\r\n      items: itemData,\r\n      editingId: null\r\n    },\r\n    onEdit({ get, set }, editingId) {\r\n      set({ editingId });\r\n    },\r\n    async onSave({ get, set }, item) {\r\n      set({\r\n        items: get().items.map(it => (it.id === item.id ? item : it)),\r\n        editingId: null\r\n      });\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      item = { ...item, name: item.name + \" simulating server update\" };\r\n      set({ items: get().items.map(it => (it.id === item.id ? item : it)) });\r\n    }\r\n  }));\r\n```\r\n\r\nIt's a bit like using `useReducer`, but with async actions. Instead of synchronously returning updated state you use synchronous but dynamic `get()/set()` calls that ensure you're always manipulating up to date state in between your async effects. There's some parallel there between tiny-atom's actions and dancing with React's state/reducers/effects/refs.\r\n\r\nThe implementation of the library itself is fairly small:\r\nhttps://github.com/KidkArolis/tiny-atom/blob/master/src/index.js\r\nhttps://github.com/KidkArolis/tiny-atom/blob/master/src/react/hooks.js\r\n\r\nI do think there are potentially some issues with concurrent mode in the way my hooks are implemented, but there isn't much information about concurrent mode, so I haven't been worrying too much about it.","updated_at":"2019-03-29T23:53:18Z","created_at":"2019-03-29T23:52:30Z","creator_user_login":"KidkArolis"}
{"number":15240,"comment_id":"478237899","body":"> But we can't fix it with the same technique as onEdit because it depends on items - so we _have_ to create a new callback which closes over items otherwise you'd lose previous edits.\r\n\r\nThis isn't really true, as you can get the items by passing a function to setItems. You could trigger side effects from there as well and it has the benefit of not relying on mutation.\r\n\r\n```js\r\nlet onSave = useCallback(\r\n  item => {\r\n    setItems(items => items.map(it => (it.id === item.id ? item : it)));\r\n  },\r\n  []\r\n);\r\n```","updated_at":"2019-03-30T11:41:00Z","created_at":"2019-03-30T11:41:00Z","creator_user_login":"ntkoopman"}
{"number":15240,"comment_id":"478247348","body":"@ntkoopman You cannot perform side effects in that callback, it must be a pure function that returns new state. The thing we are missing is the second callback that `setState` has so you can do: `this.setState(state => newState, () => triggerSideEffect())`. Hooks don't provide the second callback because it will be closed over old state/props when it's called in the commit phase, so the goal of this issue is to explore alternative solutions.","updated_at":"2019-03-30T13:49:33Z","created_at":"2019-03-30T13:49:33Z","creator_user_login":"jlongster"}
{"number":15240,"comment_id":"478258258","body":"I think this is actually quite old (and yet not fully solved) problem.\r\n\r\nThe gist is:\r\n- the side effect needs an access to current state (eg. to trigger conditionally or to use a value)\r\n- the current state is only available inside `setState/reducer`, which can't contain side effects \r\n- you can't access current state safely on other places, due to it's async nature\r\n\r\nNow, before continuing, here is one important thing to realize:\r\nYou can't safely access a state of two components at the same time.\r\nOnly way to safely pass the state from one component to another is via `props` and to do that a component update is required.\r\nAs a consequence you either have to push the state up or you will end up with this weird synchronization dance, causing multiple updates.  \r\nAfaik there is no way around that and it's a direct consequence of one way data flow.\r\nBasically you have to decide between centralized state or synchronization of multiple local isolated states with more updates.\r\n\r\nOk, lets say we are willing to push the state up.\r\nNow you can pass `setState` or `dispatch` down. These are safe to use, but as mentioned how do you run side effects?\r\nIn action creator?\r\nOk, but how do you pass the current state to the action creator?\r\nVia props?\r\nThen you will cause render anyway and there is no point in passing static `setState/dispatch`.\r\nAnd how to chain another effect, which again requires fresh state?\r\nBy moving it to `effect/componentDidUpdate`?\r\nGood luck with pairing these effects with original invocation contexts, I really tried this \"state machine\" approach and it's hard to impossible to manage.\r\n \r\nTherefore we need something more powerful with an access to `state`:\r\n`redux-thunk` has `getState()`.\r\nIn classes we can access `this.state`.\r\nIn hooks it's possible to mimick this with `useRef` \"hack\":\r\n```javascript\r\nconst [state, setState] = React.useState(initialState);\r\nconst stateRef = React.useRef(state);\r\nstateRef.current = state;\r\n\r\nconst dispatch = React.useCallback(fn => {\r\n  ReactDom.unstable_batchedUpdates(() => {\r\n    fn({ state: stateRef.current, setState, xhr, dispatch });\r\n  });\r\n}, [])\r\n\r\n// Usage\r\ndispatch(({ state, setState, dispatch }) => { /* shoot yourself in the foot */ });\r\n```\r\nBut in all these cases the usage is unidiomatic, tricky and often dangerous (less dangerous in redux, because the state is synchronous and isolated).\r\nBasically you have to follow these rules:\r\n- you must NOT call multiple `dispatch()` synchronously (in sequence or one from another)\r\n- the only place where you can safely access current state is at the beggining of dispatch, before any state mutation is performed\r\n- you can chain dispatch at the end of effect, but you must be sure it's done after the state is commited (there isn't anything like `waitForUpdate`, so we assume that dispatch is safe if it's deferred)\r\n- you can't use `async/await` \r\n```javascript\r\ndispatch(({ state, setState, dispatch }) => {    \r\n  // Extract required state here\r\n  const {    \r\n    saving,\r\n    type,\r\n  } = state;\r\n  \r\n  // Bail out based on current state \r\n  if (saving) return; \r\n  \r\n  // Update state\r\n  setState(state => ({\r\n    ...state,\r\n    saving: true,\r\n  }));    \r\n  \r\n  // \"state\" is obsolete from this point\r\n  \r\n  // Trigger effect\r\n  xhr.post('/api')\r\n    .send({      \r\n      type, // use current state\r\n    })\r\n    .then(() => {\r\n       // Chain another dispatch (it has an access to fresh state)       \r\n       dispatch(action)        \r\n    })\r\n})\r\n```  \r\nIt's quite hard to come up with API which has the same power, is safe and is easy to use at the same time.\r\n\r\nI recommend [this blogpost](https://blog.isquaredsoftware.com/2017/01/idiomatic-redux-thoughts-on-thunks-sagas-abstraction-and-reusability/), there is a ton of interesting references.","updated_at":"2019-03-30T15:59:43Z","created_at":"2019-03-30T15:51:07Z","creator_user_login":"urugator"}
{"number":15240,"comment_id":"478264515","body":"@urugator why not `dispatch({ getState, setState, dispatch })` instead of `dispatch({ state, setState, dispatch })` as described in the [comment above](https://github.com/facebook/react/issues/15240#issuecomment-478182594).","updated_at":"2019-03-30T16:59:26Z","created_at":"2019-03-30T16:59:26Z","creator_user_login":"KidkArolis"}
{"number":15240,"comment_id":"478272541","body":"@KidkArolis Well yes, it allows you to obtain fresh state inbetween the async calls without the need to `dispatch`, but it doesn't solve the safety problem - you can still access outdated state.\r\nI intentionally don't use the getter because:\r\n- it may give a false impression, that it can be safely called to retrieve the most current state at *any time*, which isn't true (while `state` is known to be immutable)\r\n- it's similar to `getState` in redux-thunk, where it actually returns fresh state every time, because state updates are synchronous (afaik it's not ensured by API though)\r\n- it forces you to call `dispatch` - `dispatch` is sort of an entry point/gate to your application - when the server response arrives or an event occurs you want it to go trough this gate, so you can introduce batching/logging etc (it delimits a transactional context in a sense) EDIT: or you may want to use reducers instead of imperative approach    \r\n- basically the idea is to enforce a flow like: *external event (network/dom event) -> dispatch -> collect current state -> imperative logic without setState (like bailout) -> update state -> effect -> repeat*\r\n\r\nJust to clarify. I don't suggest it as a solution. I am just confirming that the problem exists, the use cases are real (and common actually), that it's not a hook specific problem and that there isn't a simple bulletproof solution (yet).","updated_at":"2019-04-02T11:06:32Z","created_at":"2019-03-30T18:06:05Z","creator_user_login":"urugator"}
{"number":15240,"comment_id":"478306502","body":"> @ntkoopman You cannot perform side effects in that callback, it must be a pure function that returns new state. \r\n\r\nWhy? The documentation does not mention this.","updated_at":"2019-03-31T02:37:53Z","created_at":"2019-03-31T02:37:53Z","creator_user_login":"ntkoopman"}
{"number":15240,"comment_id":"478326529","body":"@ntkoopman\r\n\r\n>  You could trigger side effects from there\r\n\r\n1. It's non-idiomatic and confusing to read. The things don't occur in the order of their presence in the function.    \r\n```javascript\r\nsetState(state => {  \r\n  if (state.something) { \r\n    xhr.post()    \r\n    .then(() => {       \r\n      // we are in future\r\n      setState(evenNewerState => {})         \r\n    })\r\n  }      \r\n    \r\n  // back to past  \r\n  return newState;\r\n})\r\n```\r\n2. You have to make sure that side effect is deferred, otherwise if it calls `setState` (synchronously) react will throw that you're calling `setState` from within `setState`.\r\nThis can't happen with `setState(null, () => setState())`, because the callback waits for update.\r\nEDIT: Also (if I am not mistaken), you can be sure that the DOM is already updated inside the callback.\r\nHowever `this.setState(updater, onUpdate)` is also far from ideal, because it still depends on `this.state`, which must be accessed cautiously and it doesn't compose very well.","updated_at":"2019-03-31T09:56:15Z","created_at":"2019-03-31T09:38:22Z","creator_user_login":"urugator"}
{"number":15240,"comment_id":"478559270","body":"It becomes idiomatic if you use it enough. I'm not particularly defending this, but it doesn't seem very difficult to understand to me.\r\n\r\n```js\r\nasync function commitChanges(previous, item) {\r\n  let diff = getDiff(previous, item);\r\n  let changes = await post('/save-item', diff);\r\n  setItems(items => applyChanges(changes, items));\r\n}\r\n\r\nfunction onSave(item) {\r\n  setItems(items => {\r\n    let previous = items.find(it => it.id === item.id);\r\n    commitChanges(previous, item);\r\n    return items.map(it => (it == previous ? item : it));\r\n  })\r\n}\r\n```\r\n\r\nThe second one is not really a problem. If you are calling setState synchronously from setState you can refactor the code. Since setState is local to your component this should not be too hard.","updated_at":"2019-04-01T12:29:52Z","created_at":"2019-04-01T12:29:52Z","creator_user_login":"ntkoopman"}
{"number":15240,"comment_id":"478604141","body":"> It becomes idiomatic\r\n\r\nI don't think it will. The updater function is defined as a synchronous function which takes state and returns a new one. Which makes it easy to reason about, compose, test etc.\r\nMost of us are used to read the code from top to bottom, expecting causality in this direction.\r\nError handling is problematic, because the async context is detached from original function.\r\nI think this is known as *releasing Zalgo* in async programming.\r\n\r\n> Since setState is local to your component this should not be too hard.\r\n\r\nIf you move state up, you also has to move all these functions up, so that they have an access to `state/setState`.\r\nFor an app state located in a root component, this means having hundreds of methods located in a single component.\r\nSo you come up with the `dispatch` approach, which allows you decouple these methods from the component.\r\nBut then you need some guarantees about this `dispatch` function, like that it can safely access state and mutate it (like you have these guarantees in `setState(null, () => { /*here*/ })` and `componentDidUpdate`).\r\nYou shouldn't need to worry whether the dispatched function runs deferred or not, no matter what it does.\r\nSecondly, deferring the call is working, but kinda naive aprroach, as it's unaware of react's lifecycle. \r\nThere is no semantical guarantee, that the state (or dom) accessed in deferred call is safe to use, because in theory it can be in any state (not commited yet).","updated_at":"2019-04-01T15:05:46Z","created_at":"2019-04-01T14:32:37Z","creator_user_login":"urugator"}
{"number":15240,"comment_id":"478960602","body":"@jlongster, you wrote:\r\n> What could happen is onSave is fired multiple times before items is updated, so the second time it diffs it generates a diff that could revert the first change (because item is updated but the item in items in not updated yet).\r\n\r\nYou also mentioned that the the changes to the saved item could come from the server.\r\n\r\nHere it sounds like the posts to the API must be done sequentially, i.e. a second post should not be allowed until after the first post has completed. If this is the case, then maybe some other method of effect coordination is required instead of component lifecycle?\r\n","updated_at":"2019-04-02T11:47:53Z","created_at":"2019-04-02T11:47:53Z","creator_user_login":"wmaurer"}
{"number":15240,"comment_id":"479036775","body":"@wmaurer In my scenario, the server is guaranteed to reply in the order that requests come in. So it's totally fine for a second request to fire off before the first one completes. It's safe to always fire a save whenever the state of a field changes. (And if it weren't, this is still a good use case in my opinion as this is a simpler scenario which others will want to do)\r\n\r\nChanges from the server only propagate some internal fields. It keeps the local data fully consistent with the server which is only important if the user does some advanced stuff after editing specific fields. It's fine for this to update whenever it comes back from the server, regardless of what the user is doing.","updated_at":"2019-04-02T14:58:58Z","created_at":"2019-04-02T14:58:58Z","creator_user_login":"jlongster"}
{"number":15240,"comment_id":"480436821","body":"@jlongster thanks for your explanation\r\n\r\nAlso, many thanks for this issue and your detailed explanation of the challenges involved with this problem. I've been 'following' React for a while but never did anything with it until a few weeks ago, and I started with hooks straight away.\r\n\r\nI find this problem intriguing because pretty much every web app I write has at least a few components with a similar level of complexity in the 'dancing between state and effects'. \r\n\r\nI think I've managed an implementation that satisfies the requirements you've documented. Whether one finds it palatable depends on whether one likes RxJS or not ;-)\r\n\r\nVersion 1:\r\nhttps://codesandbox.io/s/github/wmaurer/dancing-state-effects-1/tree/master/\r\n\r\nVersion 2, with a sprinkling of @pelotom's `unionize` and @gcanti's `fp-ts`, just because they're part of my every-day toolbox:\r\nhttps://codesandbox.io/s/github/wmaurer/dancing-state-effects-2/tree/master/\r\n\r\nI'm still very much interested to see an elegant implementation using 'standard' React hooks.\r\n\r\n","updated_at":"2019-04-05T22:10:40Z","created_at":"2019-04-05T22:05:15Z","creator_user_login":"wmaurer"}
{"number":15240,"comment_id":"480539290","body":"@urugator for the problem of reading the state after an action has been dispatched, you could define a `useNext` hook which gives you an async function for obtaining the next value:\r\n\r\n```js\r\nconst nextState = useNext(state);\r\n\r\nuseEffect(() => {\r\n  fetchStuff(state);\r\n}, []);\r\n\r\nasync function fetchStuff(state) {\r\n  dispatch({ type: 'START_LOADING' });\r\n  \r\n  let data = await xhr.post('/api/data');\r\n\r\n  dispatch({ type: 'RECEIVE_DATA', data });\r\n  \r\n  state = await nextState();\r\n\r\n  if (!state.needsMoreData) return;\r\n\r\n  data = await xhr.post('/api/more-data');\r\n\r\n  dispatch({ type: 'RECEIVE_MORE_DATA', data });\r\n}\r\n\r\n// ...\r\n\r\nfunction useNext(value) {\r\n  const valueRef = useRef(value);\r\n  const resolvesRef = useRef([]);\r\n  useEffect(() => {\r\n    if (valueRef.current !== value) {\r\n      for (const resolve of resolvesRef.current) {\r\n        resolve(value);\r\n      }\r\n      resolvesRef.current = [];\r\n    }\r\n    valueRef.current = value;\r\n  }, [value]);\r\n  return () =>\r\n    new Promise(resolve => {\r\n      resolvesRef.current.push(resolve);\r\n    });\r\n}\r\n```\r\n\r\n## EDIT\r\n\r\n`useNext` has the limitation that it requires the state to change as a result of the dispatch... ideally [`dispatch` itself could return a promise of the subsequent state, whether or not it changes](https://github.com/facebook/react/issues/15344).","updated_at":"2019-04-07T00:07:33Z","created_at":"2019-04-06T21:30:56Z","creator_user_login":"pelotom"}
{"number":15240,"comment_id":"480549003","body":"https://codesandbox.io/s/yvl79qj5vj","updated_at":"2019-04-07T00:44:02Z","created_at":"2019-04-07T00:44:02Z","creator_user_login":"Adrenaline1554"}
{"number":15240,"comment_id":"480583991","body":"@pelotom \r\n> useNext has the limitation that it requires the state to change as a result of the dispatch\r\n\r\nActually you always have to force component update and await state before reading it (even the initial state), otherwise there is no guarantee that it's actually up to date. Consider:\r\n```\r\nfetchStuff(state); // sets state.fetching = true\r\nfetchStuff(state); // won't see updated state.fetching so fetches anyway\r\n```\r\nIt's obvious here, but once you start decoupling these calls from components and one another, it becomes hard to reason about.\r\n\r\nI think it's basically a hook variant of:  \r\n```javascript\r\nfunction nextState() {\r\n  return new Promise(resolve => setState(null, () => resolve(this.state))),\r\n}\r\n```\r\nI tried this approach (before hooks) and to me it wasn't generally usable.\r\nThere are other problems with deferred (`async`) calls, it breaks batching, you can't access events in them (react will throw that events are pooled) etc.\r\nThere was a discussion whether `setState` should return `Pomise`, and if I remember correctly, such promise would actually have to resolve synchronously to make it safe/useful, meaning that technically it wouldn't be a promise and therefore not usable as such.\r\nAnother problem was that `setState(state)` is actually cheaper than `setState(state, callback)`, so `setState` would become more expensive even if returned promise isn't used (I expect the same problem with `dispatch`).\r\n\r\nMy conclusion basically is that you really want to keep everything synchronous to the last possible moment.","updated_at":"2019-04-07T12:23:02Z","created_at":"2019-04-07T12:00:39Z","creator_user_login":"urugator"}
{"number":15240,"comment_id":"487404037","body":"I have no idea how this fails with Suspense, but how about something like this:  https://codesandbox.io/embed/ry40mp49rq, which builds off of https://twitter.com/DavidKPiano/status/1121700680291553281 to merge effects.","updated_at":"2019-04-28T18:29:33Z","created_at":"2019-04-28T18:29:33Z","creator_user_login":"bgerm"}
{"number":15240,"comment_id":"524899732","body":"`\r\nlet onSave = useCallback(\r\n    item => {\r\n      setEditingId(editingId => {\r\n        setItems(items => items.map(it => (it.id === editingId ? item : it)));\r\n        return editingId\r\n      })\r\n    },\r\n    []\r\n  );\r\n`\r\n\r\nif you use hook's setState methods like this to access the current state, will it be ok or problematic?\r\njust for current state not related to side effects\r\n\r\nThanks!","updated_at":"2019-08-26T15:12:30Z","created_at":"2019-08-26T15:11:12Z","creator_user_login":"Dulanjala007"}
{"number":15240,"comment_id":"538055355","body":"@jlongster a bit late but that was an interesting read! thanks for sharing!\r\n\r\nI'd like to share some personal thoughts\r\n\r\n### add item use case\r\n\r\nI think this code may have some issues\r\n\r\n```js\r\nlet onSave = useCallback((fields, { add }) => {\r\n  // In my real app, applying the changes to the current item is a bit more complicated than this,\r\n  // so it's not an option to separate on an `onAdd` function that duplicates this logic\r\n  setNewItem({ ...latestNewItem.current, ...fields });\r\n\r\n  // This action also should add, mark the effect to be run\r\n  if(add) {\r\n    shouldAdd.current = true;\r\n  }\r\n}, [])\r\n```\r\nIf multiple `onSave` are 'batched' then the overall effect would be\r\n\r\n- multiple `setNewItem` updates are coalesced\r\n- `shouldAdd.current = true` is idempotent so the effect is the same\r\n\r\nBut that means state updates will run on a single phase and the same happens for `useEffect`, the net effect is that the code will issue a post only for the latest added item.\r\n\r\nI think the issue reflects the way batching undermines the assumption that every state update will get its corresponding `useEffect`s executed along.\r\n\r\n### scheduling effects after `useReducer`\r\n\r\nI have some concerns about scheduling effects after reducers (the sequence `Event handler -> render -> commit`). In Concurrent mode, updates can be reordered by priority, what if a high priority update preempted the above sequence before commit and caused the corresponding Component tree to be discarded (eg low priority Save preempted by a high priority navigation or close)?\r\n\r\nIf I understand properly, effects aren't executed until after the commit phase, so if we discard some work-in-progress subtree then its scheduled effects are also discarded?? it maybe suitable for effects like data loading put not for things like `post`\r\n\r\n(This may look similar to elm architecture but in elm, state updates always cause scheduled effects to execute regardless of render timing, that's because state update occurs a separate pass prior to vdom reconciliation, in React the 2 operations are interleaved).\r\n\r\n### Refs\r\n\r\nIMO mutability tardoffs  are radically different when coupled with concurrency. Especially considering how Concurrent mode works (preemption, batching) I think one should fully understand the consequences using Refs to solve a problem in the app (given many try to use them to get around dependency management)\r\n\r\n\r\n\r\n\r\n","updated_at":"2019-10-08T21:39:01Z","created_at":"2019-10-03T17:54:58Z","creator_user_login":"yelouafi"}
{"number":15240,"comment_id":"1117601838","body":"We've posted an RFC that is relevant to (at least some of) this discussion.\r\n\r\nWould appreciate your input: https://github.com/reactjs/rfcs/pull/220","updated_at":"2022-05-04T17:14:17Z","created_at":"2022-05-04T17:14:17Z","creator_user_login":"gaearon"}
{"number":15344,"comment_id":"493727936","body":"Would use. Any easy hacks to implement this?\r\n\r\nCould put a “refresh” counter in state and watch for it to change with useNext, but this may cause unnecessary rerenders ?","updated_at":"2019-05-19T05:20:48Z","created_at":"2019-05-19T05:18:07Z","creator_user_login":"bionicles"}
{"number":15344,"comment_id":"495047894","body":"If you're willing to pollute your actions, could you add a callback to the action and call it from your reducer?\r\n\r\nFor example (haven't actually tried this, but...), wrap your `reducer` and `dispatch` using something like:\r\n\r\n```\r\nfunction useReducerWithResolvedDispatch(reducer, initialState, init) {\r\n  const reducerWithResolve = useCallback(\r\n    (state, action) => {\r\n      nextState = reducer(state, action)\r\n      if (action._resolveDispatch)\r\n        action._resolveDispatch(nextState)\r\n      return nextState\r\n    },\r\n    [reducer]\r\n  )\r\n  const store = useReducer(reducerWithResolve, initialState, init)\r\n  const [state, dispatch] = store\r\n  dispatch.resolved = useCallback(\r\n    (action) => (new Promise((resolve, reject) => {\r\n      action._resolveDispatch = resolve\r\n      dispatch(action)\r\n    })),\r\n    [dispatch]\r\n  )\r\n  return store\r\n}\r\n```\r\n\r\nAnd then later:\r\n\r\n```\r\n...\r\nlet nextState = await dispatch.resolved({ 'type': 'FOO', ... })\r\n```","updated_at":"2019-05-23T02:52:27Z","created_at":"2019-05-23T02:52:27Z","creator_user_login":"sspiff"}
{"number":15344,"comment_id":"495060272","body":"> If you're willing to pollute your actions, could you add a callback to the action and call it from your reducer?\r\n\r\nA reducer must be a pure function with no side effects; it may be called multiple times, and its having been called is no guarantee that the new state it produced was actually used.","updated_at":"2019-05-23T04:10:59Z","created_at":"2019-05-23T04:10:33Z","creator_user_login":"pelotom"}
{"number":15344,"comment_id":"495205948","body":"> A reducer must be a pure function with no side effects; it may be called multiple times, and its having been called is no guarantee that the new state it produced was actually used.\r\n\r\nYeah, I hear ya.  But, to enhance my understanding:  What do you mean by a reducer may be \"called multiple times\" (multiple times for different actions prior to render, multiple times for the same action, or...)?  And when would you consider a state to be \"used\"?  When it's \"seen\" during a render?","updated_at":"2019-05-23T12:53:57Z","created_at":"2019-05-23T12:53:57Z","creator_user_login":"sspiff"}
{"number":15344,"comment_id":"495260552","body":"How about the following?  When requested via `dispatch.resolved()`, we add a unique id to the action, record the ids of reduced actions in the state, and then notify the waiter in an effect.  We track ids we've already seen, and lazily cleanup the state via future dispatches.\r\n\r\n```\r\nfunction useReducerWithResolvedDispatch(reducer, initialState, init) {\r\n  const r = useRef({\r\n    lastId: 0,\r\n    resolve: {},\r\n    resolved: [],\r\n    state: null,\r\n  })\r\n  const _init = useCallback(\r\n    ([state, included]) => ([init ? init(state) : state, included]),\r\n    [init]\r\n  )\r\n  const _reducer = useCallback(\r\n    ([state, includes], [aId, resolved, action]) => {\r\n      if (resolved.length)\r\n        includes = includes.filter((i) => !resolved.includes(i))\r\n      if (aId)\r\n        includes = [...includes, aId]\r\n      return [reducer(state, action), includes]\r\n    },\r\n    [reducer]\r\n  )\r\n  const [[state, includes], dispatch] = useReducer(\r\n    _reducer, [initialState, []], _init)\r\n  const _dispatch = useCallback(\r\n    (action) => {\r\n      dispatch([0, r.current.resolved, action])\r\n    },\r\n    [dispatch]\r\n  )\r\n  _dispatch.resolved = useCallback(\r\n    (action) => (new Promise((resolve, reject) => {\r\n      const aId = ++r.current.lastId\r\n      r.current.resolve[aId] = resolve\r\n      dispatch([aId, r.current.resolved, action])\r\n    })),\r\n    [dispatch]\r\n  )\r\n  useEffect(() => {\r\n      r.current.state = state\r\n    },\r\n    [state]\r\n  )\r\n  useEffect(() => {\r\n      for (const aId of includes) {\r\n        if (r.current.resolve[aId]) {\r\n          r.current.resolve[aId](r.current.state)\r\n          delete r.current.resolve[aId]\r\n        }\r\n      }\r\n      r.current.resolved = includes\r\n    },\r\n    [includes]\r\n  )\r\n  return useMemo(() => ([state, _dispatch]), [state, _dispatch])\r\n}\r\n```","updated_at":"2019-05-23T15:11:11Z","created_at":"2019-05-23T15:11:11Z","creator_user_login":"sspiff"}
{"number":15344,"comment_id":"515247104","body":"yes, I'm confused right now.\r\nThe Docs don't help. Is dispatch asynchronous or synchronous? How do I know when it has finished affecting the state? with setState I have a call back... What do I do with dispatch to manage the order  of execution before this feature request is included?","updated_at":"2019-07-25T23:11:29Z","created_at":"2019-07-25T23:11:29Z","creator_user_login":"mgenev"}
{"number":15344,"comment_id":"531998970","body":"obviously dispatching is async, there is no way to know when the state has been updated.","updated_at":"2019-09-16T23:41:02Z","created_at":"2019-09-16T23:41:02Z","creator_user_login":"a-eid"}
{"number":15344,"comment_id":"534682407","body":"If it works the same way as redux then it makes sense that it's async. I don't see anywhere in the hooks doc that actually clearly state that dispatch is actually async though. I assume it is since it looks like it's supposed to work similarly to redux (heck, redux is called out in the docs).\r\n\r\nBut, I certainly don't consider it \"obvious\".","updated_at":"2019-09-24T18:14:37Z","created_at":"2019-09-24T18:14:37Z","creator_user_login":"stuckj"}
{"number":15344,"comment_id":"536090501","body":"Why was this closed? AFAIK - the state change is immediate, and the changes to the DOM are made apparently in the microtask queue. So after a Promise.resolve, the new state and DOM changes are complete. But it seems crazy to rely on this. Returning a Promise for when the state change has completed AND the rerender resulting from it is complete makes sense to me.\r\n\r\nIf I have to throw my actions 'into the void' and only depend on React to rerun my functions for me, and I can't hook upon a Promise for 're-rendering is complete', then I am unnecessarily coupled to React.","updated_at":"2019-09-27T20:44:34Z","created_at":"2019-09-27T20:44:34Z","creator_user_login":"deanrad"}
{"number":15344,"comment_id":"536097758","body":"@deanius it wasn’t closed.","updated_at":"2019-09-27T21:10:52Z","created_at":"2019-09-27T21:10:52Z","creator_user_login":"pelotom"}
{"number":15344,"comment_id":"559481572","body":"Instead of returning a promise, could it not also accept a callback - kind of like how `setState` in classes work, I don't really have a feeling over which would be nicer, but I expect the use-case is similar to the class `setState` use-case, I.e. do this action, and then run this callback that may call a function on props\r\n\r\n","updated_at":"2019-11-28T12:46:28Z","created_at":"2019-11-28T12:46:28Z","creator_user_login":"johnjesse"}
{"number":15344,"comment_id":"560986924","body":"@johnjesse - Promises have a contract, unlike callbacks, and protect the code that performs step A from even knowing about a function to do step B. Modern APIs should use Promises without a compelling reason not to—it makes for simpler code all around, that's why I didn't propose that even though some React APIs still accept callbacks (ReactDOM.render I'm looking at you!)","updated_at":"2019-12-03T03:53:14Z","created_at":"2019-12-03T03:53:14Z","creator_user_login":"deanrad"}
{"number":15344,"comment_id":"564540442","body":"I'm using useReducer to manipulate my Context, I need to know when the Dispatch is finished and the actions has been completed. I believe returning a promise is a clean way to achieve this.","updated_at":"2019-12-11T13:31:13Z","created_at":"2019-12-11T13:31:13Z","creator_user_login":"Arman92"}
{"number":15344,"comment_id":"570526927","body":"Any update on this, one way would be to use the useEffect on the state variable that is being changed by the action. This way we can know when the state finished updating","updated_at":"2020-01-03T10:08:20Z","created_at":"2020-01-03T10:08:20Z","creator_user_login":"pratik-sinha"}
{"number":15344,"comment_id":"570533744","body":"There a lot of different solutions in user-lands however, most of them blocking UI thread.\r\nI think something like this - https://codesandbox.io/s/use-reducer-promisify-dispatch-ffnm3\r\nCould not block UI thread and pretty simple to use\r\n\r\n","updated_at":"2020-01-03T10:33:31Z","created_at":"2020-01-03T10:33:31Z","creator_user_login":"OlegLustenko"}
{"number":15344,"comment_id":"576720707","body":"Any updates? It could be really helpful to await dispatchs to perform any given task without using a lot of useEffect that doesn't really trigger on any order in particular. ","updated_at":"2020-01-21T15:00:09Z","created_at":"2020-01-21T15:00:09Z","creator_user_login":"smaudd"}
{"number":15344,"comment_id":"581080358","body":"@pelotom I may be missing something, but wouldn't the nextState() promise in your example get triggered by any state change? It need not necessarily be due to the effect of the action 'RECEIVE_DATA' on the state.\r\n\r\n```js\r\nlet data = await xhr.post('/api/data');\r\ndispatch({ type: 'RECEIVE_DATA', data });\r\n  \r\n// get the new state after the action has taken effect\r\nstate = await nextState();\r\n```","updated_at":"2020-02-03T04:28:38Z","created_at":"2020-02-01T23:26:36Z","creator_user_login":"jeswin"}
{"number":15344,"comment_id":"581168199","body":"> @pelotom I may be missing something, but wouldn't the nextState() promise in your example get triggered by any state change? It need not necessarily be due to the effect of the action 'DISPATCH_DATA' on the state.\r\n\r\nYes, it would resolve in response to any change to that particular piece of state. It's all around not a great solution, hence this issue.","updated_at":"2020-02-02T19:27:54Z","created_at":"2020-02-02T19:27:54Z","creator_user_login":"pelotom"}
{"number":15344,"comment_id":"616062876","body":"(For the people who doesn't want to use any libraries but want to solve these kind of issues.)\r\nHow about using `useMemo()` instead of `useEffect()`?\r\n\r\n```jsx\r\nconst stateRef = useRef(state);\r\n\r\nuseMemo(() => { //useMemo runs its callback DURING rendering.\r\n  stateRef.current = state;\r\n}, [state]);\r\n\r\nuseEffect(() => {\r\n  fetchStuff();\r\n}, []);\r\n\r\nasync function fetchStuff() {\r\n  dispatch({ type: 'START_LOADING' });\r\n  \r\n  let data = await xhr.post('/api/data');\r\n  dispatch({ type: 'RECEIVE_DATA', data }); //it will triggers useMemo.\r\n\r\n  if (!stateRef.current.needsMoreData) return;\r\n\r\n  data = await xhr.post('/api/more-data');\r\n  dispatch({ type: 'RECEIVE_MORE_DATA', data });\r\n}\r\n```\r\n`useEffect()` runs after rendering, but `useMemo()` runs during rendering.\r\n\r\n1. So, when `dispatch({ type: RECEIVE_DATA', data })` updates the state,\r\n2. `useMemo()` will updates `stateRef.current`,\r\n3. thus we can access updated state in the next line. (`if (!stateRef.current.needsMoreData) return;` )\r\n\r\nWe can make it into a simple custom hook. \r\nHere's the [codesandbox](https://codesandbox.io/s/complex-async-usememo-qpxzp?file=/src/App.js) for above code including custom hook.\r\n\r\nAlthough `useMemo()` may not an API for the usage like this, but it works.\r\n\r\nHowever, it seems really useful if dispatch returns a Promise with an updated state.\r\n\r\n","updated_at":"2020-04-19T07:10:34Z","created_at":"2020-04-19T07:10:34Z","creator_user_login":"dev-allenk"}
{"number":15344,"comment_id":"616479958","body":"Hi everyone, what is the current status of this FeatureRequest? Does React core team (@aweary ) thinks that we need to implement with behavior? Should someone work on this?\r\n\r\nI personally really miss being able to call getState() (similar to redux-thunk middleware) or being able to await next state in return of dispatch.\r\n\r\nThis feature would really help to create more clean and independent logic inside single function.","updated_at":"2020-04-20T11:15:01Z","created_at":"2020-04-20T11:09:02Z","creator_user_login":"6graNik"}
{"number":15344,"comment_id":"616532117","body":"> (For the people who doesn't want to use any libraries but want to solve these kind of issues.)\r\n> How about using `useMemo()` instead of `useEffect()`?\r\n\r\nI don't have a thorough understanding of the react internals, but the main problem I see with this is that it's not concurrency safe. The `render` and `commit` phases are separate.\r\n\r\nThe fact that a component is being rendered does not guarantee that this particular render is going to be committed. It may be paused, re-rendered because of new data, and then committed. In the mean-time the data you stored in a ref may not match what's visible on screen.","updated_at":"2020-04-20T12:51:34Z","created_at":"2020-04-20T12:51:34Z","creator_user_login":"nikparo"}
{"number":15344,"comment_id":"620402156","body":"The team that I work with prefer to minimise external dependencies, so we don't use redux, etc. \r\n\r\nWe're using `useReducer` and wrote a dead-simple wrapper around it that hides the weirdness of `useEffect` and the render / commit phases.\r\n\r\nIt's effectively a drop-in replacement for `useReducer`\r\n\r\nhttps://codesandbox.io/s/new-frost-ll1y9 - shows an async incrementer, with cancellation.\r\n\r\nDead simple data fetching example here:\r\n\r\n1. Write your normal reducer\r\n```js\r\nconst reducer = (prevState, action) => {\r\n  switch(action.type) {\r\n    case \"START_FETCHING\": {\r\n      return { ...prevState, isFetching: true }\r\n    }\r\n\r\n    case \"DONE_FETCHING\": {\r\n      return { ...prevState, isFetching: false, myData: action.payload }\r\n    }\r\n\r\n    default: {\r\n      return prevState\r\n    }\r\n  }\r\n}\r\n```\r\n2. Write your async side-effect functions (data fetching, etc), return the next action to dispatch:\r\n```js\r\nconst callMyApi = async (newState, action) => {\r\n  switch(action.type) {\r\n    case \"START_FETCHING\": {\r\n      const response = await window.fetch(\"api/mydata\")\r\n      const myData = await response.json()\r\n\r\n      return doneFetching(myData)\r\n    }\r\n\r\n    default: {\r\n      return // Nothing more to do here\r\n    }\r\n  }\r\n}\r\n```\r\n3. Write your normal actions, add an `effects` property like so:\r\n```js\r\nconst startFetching = () => ({\r\n  type: \"START_FETCHING\",\r\n  payload: undefined,\r\n  effects: fetchingMyDataSideEffect\r\n})\r\n\r\nconst doneFetching = (myData) => ({\r\n  type: \"DONE_FETCHING\",\r\n  payload: myData,\r\n  // no need to add `effects` here, unless there are more side effects that need to run\r\n})\r\n```\r\n\r\n4. Tie it all together with `useReducerWithEffects`\r\n```js\r\nconst [state, dispatch] = useReducerWithEffects(reducer, { isFetching: false, myData: null })\r\n```\r\n\r\nEDIT:\r\nWorth noting- there is a third argument to `useReducerWithEffects`: \r\n- Some additional \"context\" (can be object, function, anything you want) which will be passed into all side effect functions as the third argument. In my team's case, we pass a wrapper around `window.fetch` which handles error response status codes, `credentials: \"include\"` and a few other cross-cutting concerns that we face when making API requests.\r\n\r\nYou also get the added benefit, that most of your side effect functions can be unit tested very easily using `async`, which is supported by `jest` and other test frameworks. \r\nJust:\r\n1. pass in your state, action, context...\r\n2. await the result\r\n3. expect that it's the action you want with the correct payload, etc.\r\n\r\nYou may be able to add another layer of abstraction to get even better testability.\r\n\r\nWe find that this is a lot less burdensome than calling `act(...)` a bunch of times in your React component tests. In most cases now, we'll need `act` at most one, maaaaybe two times if a component for some reason has internal state that is deemed important enough to test against.","updated_at":"2020-04-28T07:03:50Z","created_at":"2020-04-28T06:12:35Z","creator_user_login":"timweightman"}
{"number":15344,"comment_id":"652301701","body":"It's 2020, the world is ending next year, why is this thread dead, if there's one last accomplishment of mankind, it should be returning of the promise here!","updated_at":"2020-07-01T09:20:34Z","created_at":"2020-07-01T09:20:34Z","creator_user_login":"adiled"}
{"number":15344,"comment_id":"652356781","body":"@m-adilshaikh this is likely not gonna be supported. ","updated_at":"2020-07-01T11:13:51Z","created_at":"2020-07-01T11:13:51Z","creator_user_login":"a-eid"}
{"number":15344,"comment_id":"652375051","body":"@a-eid Sure, `useReducer` ought to be deprecated entirely, it's incompatible and based on fairy dust design philosophy. A dead load that practically serves nothing but neo-puritan egos.","updated_at":"2020-07-01T11:56:31Z","created_at":"2020-07-01T11:56:31Z","creator_user_login":"adiled"}
{"number":15344,"comment_id":"652376333","body":"@m-adilshaikh I don't think so, I do use it in my apps ( with the context api .)","updated_at":"2020-07-01T11:59:46Z","created_at":"2020-07-01T11:59:46Z","creator_user_login":"a-eid"}
{"number":15344,"comment_id":"652377549","body":"@a-eid That's what I am referring to, everyone uses it, myself included. That's why I have come to the revelation, and I am ripping it out just about now. It's a tyrannical method forced on the ecosystem through soft power.","updated_at":"2020-07-01T12:02:47Z","created_at":"2020-07-01T12:02:47Z","creator_user_login":"adiled"}
{"number":15344,"comment_id":"653852127","body":"I've tried out two solutions for this. Both of them rely on `reduce` doing a bit of extra work. The use case looks like this:\r\n\r\n* we call `endpoint1`, receive `result1`, then dispatch action `update1` with payload `result1`\r\n* we want to get updated state after `update1`\r\n* we call `endpoint2`, using information from updated state\r\n\r\n## Using a callback (not recommended) [stackblitz](https://stackblitz.com/edit/react-6qxj6g)\r\n\r\nThe service call looks like this:\r\n\r\n```\r\nasync function callApi(dispatch) {\r\n  const result1 = await doServiceCall();\r\n\r\n  const callback = async (newState) => {\r\n    const result2 = await doServiceCall();\r\n    dispatch({type: 'updateAfterEndpoint2', result: result2});\r\n  }\r\n\r\n  dispatch({type: 'updateAfterEndpoint1', result: result1, callback});\r\n}\r\n```\r\n\r\nReducer looks like this:\r\n\r\n```\r\nfunction reduce(state, action) {\r\n  switch(action.type) {\r\n    case 'updateAfterEndpoint1': \r\n      state = \"new state\";\r\n      action.callback(state)\r\n      return state;\r\n    ...\r\n  }\r\n}\r\n```\r\n\r\nAs you can see, reducer calls `action.callback(state)`.\r\n\r\nI don't like this solution because it is really ugly syntactically.\r\n## Using promise (not sure if recommended, but better) [stackblitz](https://stackblitz.com/edit/react-lx7kln)\r\n\r\nThe service call looks like this:\r\n\r\n```\r\nfunction makeResolver() {\r\n  let _resolve;\r\n  const promise = new Promise(resolve => _resolve = resolve);\r\n  return [promise, _resolve];\r\n}\r\n\r\nasync function callApi(dispatch) {\r\n  const result1 = await doServiceCall();\r\n\r\n  const [promise, resolve] = makeResolver();\r\n  dispatch({type: 'updateAfterEndpoint1', result: result1, resolve});\r\n  const newState = await promise;\r\n\r\n  const result2 = await doServiceCall();\r\n  dispatch({type: 'updateAfterEndpoint2', result: result2});\r\n}\r\n```\r\n\r\nReducer looks like this (it's actually exactly the same as before):\r\n\r\n```\r\nfunction reduce(state, action) {\r\n  switch(action.type) {\r\n    case 'updateAfterEndpoint1': \r\n      state = \"new state\";\r\n      action.resolve(state)\r\n      return state;\r\n    ...\r\n  }\r\n}\r\n```\r\n\r\nAs you can see, reducer calls `action.resolve(state)`.\r\n\r\nWhat i like about this solution is, that it will be easy to refactor, should `useReducer` introduce the Promise API one day:\r\n\r\n```diff\r\n- const [promise, resolve] = makeResolver();\r\n- dispatch({type: 'updateAfterEndpoint1', result: result1, resolve});\r\n- const newState = await promise;\r\n+ const newState = await dispatch({type: 'updateAfterEndpoint1', result: result1});\r\n```\r\n\r\n```diff\r\n  function reduce(state, action) {\r\n    switch(action.type) {\r\n      case 'updateAfterEndpoint1': \r\n        state = \"new state\";\r\n-       action.resolve(state)\r\n        return state;\r\n      ...\r\n    }\r\n  }\r\n```\r\n\r\n## Note\r\nWhile the approach with the promise is nicer syntactically, it is also more \"correct\" in terms of code flow:\r\n\r\nWith approach 1, the code is called _as part of the execution stack of the reducer_. Therefore it can happen that _we accidentally trigger a dispatch inside a dispatch_. See [here](https://stackblitz.com/edit/react-nfrucu).\r\n\r\nThe output shows that dispatch 2 happens while dispatch 1 is still ongoing:\r\n\r\n```\r\nREDUCER: start \r\nupdate after endpoint 1 – undefined \r\nupdate after endpoint 2 – undefined \r\nREDUCER: end\r\n```\r\n\r\nWith approach 2 there is a significant difference. See [here](https://stackblitz.com/edit/react-yjdssh).\r\n\r\nThe output shows that dispatch 2 happens _after_ dispatch 1:\r\n\r\n```\r\nREDUCER: start \r\nupdate after endpoint 1 – undefined \r\nREDUCER: end \r\nupdate after endpoint 2 – undefined \r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","updated_at":"2020-07-05T09:46:56Z","created_at":"2020-07-05T07:20:03Z","creator_user_login":"samu"}
{"number":15344,"comment_id":"665557496","body":"Thank you Dear @pelotom, actually, the lack of functional component is this issue, I wanna be sure the re-render is finished and then I wanna do something, So really the `dispatch` need to have a promise returned.\r\n\r\nOr instead, just like `this.setState` it could have a callback argument:\r\n\r\n```javascript\r\nthis.setState(~~~, callbackFunction)\r\n```\r\n\r\nIt's just an idea, the `dispatch` function could have a callback argument:\r\n\r\n```javascript\r\nconst [state, dispatch] = useReducer(developerReducer, initialState);\r\n\r\ndispatch(\r\n  { type: 'SOME_ACTION' },\r\n  callbackFunction\r\n);\r\n```","updated_at":"2020-07-29T09:39:57Z","created_at":"2020-07-29T09:39:57Z","creator_user_login":"amerllica"}
{"number":15344,"comment_id":"706545365","body":"> we need to be able to wait until after a dispatch() has taken affect.\r\n\r\nI think it will be good to have it perhaps with a different hook. My last implementation to achieve this, was to use a reducer wrapper on the useReduce something like:\r\n\r\n```\r\nconst promiseReducer = (reducer, pState, initialState=() => \r\n  ({...initialState, dispatcherPromise: Promise.resolve('Initial State')}) ) => {\r\n\r\n  const [state, dispatch] = useReducer(reducer, pState, initialState);\r\n  const pDispatch = async (params) => {\r\n    params.data.dispatcherPromise = Promise.resolve(nanoid());\r\n    dispatch(params);\r\n    return await state.dispatcherPromise;\r\n  };\r\n  return [state, pDispatch];\r\n}\r\n```\r\n\r\nI use the params.data.dispatcherPromise here for demo purposes you should move it in the actual component's effects functions. You will guarantee state update because an extra state property patch (dispatcherPromise) can use nanoid or an equivalent randomizer to create unique identifiers that will trigger the state update. The iniialState function is to initialize the state property so you won't see an error the first time on the state.dispatcherPromise. Then for the implementation part:\r\n\r\n```\r\n  const [state, dispatch] = useServiceContext(sContext);\r\n\r\n  const makeUpdate = (itemQty) => {\r\n    dispatch({type: 'changeQuantity', data:{uid, qty:itemQty}})\r\n      .then(data => {\r\n        console.log('dispatch promise resolved with:', data);\r\n      }\r\n    )\r\n  };\r\n```\r\nI use a custom hook to get the state/dispatcher with the previously mentioned reducer, not shown here as it is beyond the point. So far with I've tried I haven't seen an issue.\r\n","updated_at":"2020-10-10T12:55:51Z","created_at":"2020-10-10T12:55:51Z","creator_user_login":"enigma1"}
{"number":15344,"comment_id":"707459165","body":"I subscribed to this issue a while back and forgot all about it until this latest message. As a workaround for the original use case I had for wanting a promise from `dispatch` I've been using this library: https://github.com/conorhastings/use-reducer-with-side-effects. It basically allows you to pair a side effect based on the state from the reducer. Not exactly the same ask, but depending on your situation it may satisfy your requirements. It was originally written a couple months after this issue was raised, but has been around for a little over a year now. I only started using it very recently, but so far it's working fine.","updated_at":"2020-10-13T03:20:02Z","created_at":"2020-10-13T03:20:02Z","creator_user_login":"stuckj"}
{"number":15344,"comment_id":"707574489","body":"@stuckj yes that's the tradeoff, as this library you mentioned does. I do a similar thing. You can keep the state pure but have the payload with the side effect. In my approach above I used a state prop as the promise holder but it's better to use a payload parameter instead. It's easier to implement, because the reducer is executed immediately with the original dispatch call, so the promise property is populated right then and it becomes available to the caller.","updated_at":"2020-10-13T08:16:06Z","created_at":"2020-10-13T08:16:06Z","creator_user_login":"enigma1"}
{"number":15344,"comment_id":"724775593","body":"Does react development team consider adding this feature in the future at all? ","updated_at":"2020-11-10T15:28:00Z","created_at":"2020-11-10T15:27:52Z","creator_user_login":"JoyTailor-1775"}
{"number":15344,"comment_id":"752364249","body":"I keep encountering situations where this promise or callback would be very helpful. Does anyone know any strong reason why this would not be implemented?","updated_at":"2020-12-30T07:51:58Z","created_at":"2020-12-30T07:51:58Z","creator_user_login":"genistv"}
{"number":15344,"comment_id":"841733365","body":"+1","updated_at":"2021-05-15T22:20:44Z","created_at":"2021-05-15T22:20:44Z","creator_user_login":"ghost"}
{"number":15344,"comment_id":"847828767","body":"May the force be with `this ticket`.","updated_at":"2021-05-25T12:31:48Z","created_at":"2021-05-25T12:31:36Z","creator_user_login":"anchi20"}
{"number":15344,"comment_id":"860080173","body":"Im curious on the reasoning for the React team not prioritizing this. \r\n\r\nUsing a `useEffect` with state in the dependency array wont work for me. Not with maintainable or clean code anyway.  I have added a new record to my state collection which results in a bunch of inputs being created/recreated from that collection. I want to focus on the new input from the record I created without tracking it by id in some new component state variable for current focus to be used within a `useEffect` (which would likely interfere with the browsers focus behaviour and open a fragile can of worms). \r\n\r\nI should be able to listen for the reducer to finish and focus the input within the function scope where I call dispatch rather than creating some complicated confusing useEffect _magic_ code that is prone to overreach for the purpose of input focus at least. \r\n\r\nI could break reducer rules and call a callback/make a side effect, which would be an anti-pattern, but would be easier-to-reason-about code than `useEffect` (and way cheaper for my client).\r\n\r\n(Other than FP ideology, I wonder what the other reasons for avoiding effects in reducers are. Will it necessarily result in a a reasonable bug risk? More research needed there on my part)","updated_at":"2021-06-12T17:01:28Z","created_at":"2021-06-12T16:58:58Z","creator_user_login":"mmnoo"}
{"number":15344,"comment_id":"860094490","body":"Why does it matter when an action was delivered? What's that mean - it was applied to the store by the reducer? The effect of the action is an updated store. The only event a component should be interested in, due to an action, is that the store was updated, and it can use a selector to react to that event.","updated_at":"2021-06-12T18:54:46Z","created_at":"2021-06-12T18:54:46Z","creator_user_login":"llaenowyd"}
{"number":15344,"comment_id":"860100201","body":"Sometimes responding to changes on the entire store will make sense. Other times it wont. \r\n\r\nIn my case, I want to know when the store is updated with my item in a very specific scenario so I can do a thing related to the updated item. I want my code to be declarative and read nicely. So `dispatch({ type: 'doVeryVerySpecificThingEdgeCase', payload: id}}).then(respondAndDoSomething(id))` or using a callback makes a whole lot more sense than having to store that id in some component state (and know when to trigger clearing it), and then listening to store changes with an effect which grabs that id and then call `respondAndDoSomethingWithId(id)` after checking 500 conditionals to make sure I only call it when a very specific edge case scenario occurs. \r\n\r\nWith the latter, I need to make extra sure `respondAndDoSomething(id)` doesnt get called too much and its unlikely to be colocated anywhere near the actual logic that triggered it (because now its in `useEffect` magic which leans much more to the imperative than to the declarative in this case)","updated_at":"2021-06-12T19:47:10Z","created_at":"2021-06-12T19:47:10Z","creator_user_login":"mmnoo"}
{"number":15344,"comment_id":"860127835","body":"> Im curious on the reasoning for the React team not prioritizing this.\r\n\r\nI'm not on the React team, but I can think of at least a few possible reasons off the top of my head:\r\n\r\n- The team is small (only a handful of engineers)\r\n- The team has been focused on the changes that _are_ planned for React 18, which center around Concurrent Rendering and Suspense (per [Introducing React 18](https://github.com/reactwg/react-18/discussions/4) and the other threads in that discussion group)\r\n- This may not be a thing that they feel is necessary or sufficiently useful\r\n- Even if they do plan to try it at some point, it may be very low priority compared to the current work that they're trying to get out the door\r\n\r\n> (Other than FP ideology, I wonder what the other reasons for avoiding effects in reducers are. Will it necessarily result in a a reasonable bug risk? More research needed there on my part)\r\n\r\nThere's excellent reasons for this, and it's not just \"ideology\".\r\n\r\nIn Concurrent Rendering, React can and _will_ start rendering components, only to pause and throw away the results.  Because of that, React expects that the rendering process truly is \"pure\" with no side effects.  \r\n\r\nReact calls your reducers at a couple points in the lifecycle and rendering process.  It apparently does sometimes try to call it immediately when the update is queued to see if there's a chance of bailing out early.  Assuming it keeps going, then it will normally get called _during the rendering phase_.\r\n\r\nSo, if you start putting side effects in reducers, you will almost definitely see unexpected behavior because those effects are running even if the component isn't getting updated at that point.\r\n\r\n\r\nNote that I'm not saying that the feature being asked for in this thread is bad, impossible, or unwanted.\r\n\r\nI'm just observing that the React team has limited resources and other major priorities atm, and that proposed workarounds that involve side effects in reducer functions are likely going to cause problems in real apps.","updated_at":"2021-06-12T23:58:18Z","created_at":"2021-06-12T23:58:18Z","creator_user_login":"markerikson"}
{"number":15344,"comment_id":"860238494","body":"@markerikson that is a very useful explanation, thanks for taking the time to write it.\r\n\r\nI think I have another solution to my specific problem that is less convoluted than a useEffect. (Munging ui (focus) state with data state as a tradeoff). \r\n\r\nIf I were to pollute my reducer with a side effect and there was no downside to redundant calls to that side effect, is there still a risk of issues with your understanding? \r\n\r\nJust curious where rules can be bent. Not meaning to call all of FP 'ideology' , as I actually quite like it. When blindly followed, anything start to feel that way though :)","updated_at":"2021-06-13T16:37:41Z","created_at":"2021-06-13T16:35:59Z","creator_user_login":"mmnoo"}
{"number":15344,"comment_id":"860267486","body":"@mmnoo that's sort of what I was saying. Think of it is less as \"rules\", and think of it as \"how is this going to potentially change behavior in my application?\".  \r\n\r\nI can't give specifics, because I don't know your app and I don't know what side effects you're considering doing here.\r\n\r\nIf the \"side effect\" is logging to the console or writing to localStorage, then while it's technically \"breaking the rules\", it's meaningless in the grand scheme and won't cause bugs.\r\n\r\nIf it's, say, making an `HTTP DELETE` call at the wrong time... then that could be very bad for your app :)\r\n\r\nSo, try to think about _behavior_ based on the stated way React is going to execute things, not \"am I breaking the rules\".","updated_at":"2021-06-13T20:41:37Z","created_at":"2021-06-13T20:41:37Z","creator_user_login":"markerikson"}
{"number":15344,"comment_id":"864236996","body":">Im curious on the reasoning for the React team not prioritizing this.\r\n\r\nSorry, I know this is frustrating. (It's a known pain point with Hooks.) The truth is we don't know what a good solution looks like for this problem. We don't think the proposed solutions we've seen so far (here and in many other places) solve the issue very well.\r\n\r\nThere are several problems with the proposed solution.\r\n\r\nSomething like `await` for a dispatch result does not work great because it encourages writing code with race conditions. (What if you get another state update in the middle? What if this same function runs again in different arguments while you're waiting? What if responses come out of order? How are you going to coordinate that? Which state values are you hoping to receive?) \r\n\r\nIf the issue is \"I just want a setState callback to do something imperative\", then Hooks don't offer that—but if the only problem is that React delays DOM update, you can force it to happen sync.\r\n\r\n```js\r\nimport { flushSync } from 'react-dom'\r\n\r\nflushSync(() => {\r\n  setTabVisible(true)\r\n}) // flushes DOM update\r\ntabRef.current.scrollIntoView(); // updated by this point\r\n```\r\n\r\nThis isn't quite the same but solves a number of cases.\r\n\r\nThis doesn't let you read the latest state value. But allowing to read it is also not enough, unfortunately. It also needs to be able to read fresh props which come from parent component. Or possibly other state. That's easy with classes because they're mutable, but you can't do it with Hooks without managing refs yourself. So it's not clear how a React API would do this.\r\n\r\nYou could of course always call the reducer yourself.\r\n\r\n```ls\r\ndispatch(action)\r\nlet nextLikelyState = reducer(state, action)\r\n// ...\r\n```\r\n\r\nNot super pretty but you have full control.\r\n\r\nSo — we'd like to fix this, if we knew how to do it well. ","updated_at":"2021-06-18T19:36:15Z","created_at":"2021-06-18T19:36:15Z","creator_user_login":"gaearon"}
{"number":15344,"comment_id":"864392285","body":"**flushSync** is not a solution I had considered or was aware of, thanks for the pointer! I think it will serve my needs well enough, though it seems a bit heavy-handed to force the update to happen synchronously. Would an async version be possible? I reckon that on its own would cover most of the need, since the tools available for selecting and passing around state are already pretty good.\r\n\r\n```js\r\n// Asynchronous version of flushSync. Not sure about the name. awaitFlush() perhaps?\r\nawait flushAsync(() => {\r\n  setTabVisible(true)\r\n}) // flushes DOM update\r\ntabRef.current.scrollIntoView(); // updated by this point\r\n```\r\n\r\nThe above suggestion is bare-bones, but I think you could do quite a lot with it. As an example:\r\n\r\n```js\r\nfunction usePromiseReducer(reducer, initialState, initializer) {\r\n  const [state, dispatch] = useReducer(reducer, initialState, initializer);\r\n  const ref = useRef(state);\r\n\r\n  // Keep track of the committed state. Layout effects happen before flushAsync resolves.\r\n  useLayoutEffect(() => {\r\n    ref.current = state;\r\n  });\r\n\r\n  const wrappedDispatch = useCallback(async (action) => {\r\n    // Wait for the next committed (or skipped) component render\r\n    await flushAsync(() => dispatch(action));\r\n    // Return the latest state, whether it was updated or not.\r\n    // The reducer may have processed multiple actions before we get here.\r\n    return ref.current;\r\n  }, [dispatch]);\r\n\r\n  return [state, wrappedDispatch];\r\n}","updated_at":"2021-06-19T11:18:54Z","created_at":"2021-06-19T11:15:19Z","creator_user_login":"nikparo"}
{"number":15344,"comment_id":"868204394","body":"I have come up with work around this problem, This might help\r\n\r\n[Live Example](https://stackblitz.com/edit/react-dispatcher)\r\n\r\n```import { useReducer, useEffect } from \"react\";\r\n\r\nlet cb; \r\nfunction useDispatch() {\r\n  const [state, dispatch] = useReducer(\r\n    (state, action) => {\r\n      if (action.value === state.someState) return state;\r\n      return { someState: action.value };\r\n    },\r\n    { someState: 0 }\r\n  );\r\n\r\n  useEffect(() => {\r\n   cb && cb(state);\r\n  }, [state]);\r\n\r\n  return [\r\n    state,\r\n    (action, callback) => {\r\n      cb = callback;\r\n      dispatch(action);\r\n    },\r\n  ];\r\n}\r\n\r\nconst Component = () => {\r\n  const [state, dispatch] = useDispatch();\r\n  const loggedDispatch = (action) => {\r\n    console.log(\"pre-state\", state);\r\n    dispatch(action, (newState) => {\r\n      console.log(\"new-state\", newState);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div onClick={() => loggedDispatch({ value: 1 })}>Set to 1</div>\r\n      <div onClick={() => loggedDispatch({ value: 2 })}>Set to 2</div>\r\n    </div>\r\n  );\r\n};","updated_at":"2021-06-25T04:59:51Z","created_at":"2021-06-25T04:59:09Z","creator_user_login":"devsmitra"}
{"number":15344,"comment_id":"868500895","body":"> I have come up with work around this problem, This might help\r\n> \r\n> [Live Example](https://stackblitz.com/edit/react-dispatcher)\r\n> \r\n> ```\r\n> \r\n> let cb; \r\n> function useDispatch() {\r\n>   const [state, dispatch] = useReducer(\r\n>     (state, action) => {\r\n>       if (action.value === state.someState) return state;\r\n>       return { someState: action.value };\r\n>     },\r\n>     { someState: 0 }\r\n>   );\r\n> \r\n>   useEffect(() => {\r\n>    cb && cb(state);\r\n>   }, [state]);\r\n> \r\n>   return [\r\n>     state,\r\n>     (action, callback) => {\r\n>       cb = callback;\r\n>       dispatch(action);\r\n>     },\r\n>   ];\r\n> }\r\n> \r\n> const Component = () => {\r\n>   const [state, dispatch] = useDispatch();\r\n>   const loggedDispatch = (action) => {\r\n>     console.log(\"pre-state\", state);\r\n>     dispatch(action, (newState) => {\r\n>       console.log(\"new-state\", newState);\r\n>     });\r\n>   };\r\n> \r\n>   return (\r\n>     <div>\r\n>       <div onClick={() => loggedDispatch({ value: 1 })}>Set to 1</div>\r\n>       <div onClick={() => loggedDispatch({ value: 2 })}>Set to 2</div>\r\n>     </div>\r\n>   );\r\n> };\r\n> ```\r\n\r\nNo that's basically an anti-pattern in React as things currently stand. Our painful experience is that useEffect currently does not always run to completion as any re-render can interrupt the running instance.\r\n\r\nThat's difficult to reproduce and your simple example may not have enough changing variables or your callback running long enough to see it but it happens and dramatically reduces the usability of useEffect. You basically can only use useEffect in cases where you are idempotent and certain that useEffect will keep getting called until whatever it is doing completes.","updated_at":"2021-06-25T13:29:24Z","created_at":"2021-06-25T13:29:24Z","creator_user_login":"disrael"}
{"number":15344,"comment_id":"915418915","body":"Following up on @gaearon last suggestion, a potential workaround for synchronous actions would be to wrap the `dispatch` in a function that returns the result of the reducer, in that way we could obtain the next state immediately after dispatching \r\n\r\n```javascript\r\n// const reducer = ...;\r\n// const initialState = ...;\r\nconst useCustomReducer = (reducer, initialState) => {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState);\r\n\r\n  return [\r\n    state,\r\n    (action) => {\r\n      dispatch(action);\r\n\r\n      return reducer(state, action);\r\n    },\r\n  ];\r\n};\r\n\r\nconst someComponent = () => {\r\n  const [state, dispatch] = useCustomReducer(reducer, initialState);\r\n\r\n  const someFunction = () => {\r\n    const result = dispatch({ type: 'DO_SOMETHING', payload: 'some value' });\r\n\r\n    console.log(`Result from my dispatch obtained immediately: ${result}`);\r\n    console.log(`This is the sate without the change caused by the latest dispatch: ${state}`);\r\n  };\r\n  return <button onClick={someFunction}></button>;\r\n};\r\n```","updated_at":"2021-09-08T17:13:54Z","created_at":"2021-09-08T17:12:50Z","creator_user_login":"juanpreciado"}
{"number":15344,"comment_id":"922018397","body":"@juanpreciado I believe this is a flawed approach to this problem. You are using the `state` value that is in your render. If the state was to update between when your component renders and when that dispatch is called, you'll find the current `state` mismatches the state you see. For example, you can see this issue if you just add another call to `dispatch` before your current `dispatch`. That first dispatch will change the state, but the second will assume it's using the state in it's context, which is incorrect. Obviously that's a contrived example, but in practice it's likely some other part of your app that's calling the first dispatch().","updated_at":"2021-09-17T19:06:40Z","created_at":"2021-09-17T19:06:40Z","creator_user_login":"owenallenaz"}
{"number":15344,"comment_id":"922042935","body":"The following is my attempt at solving this problem. I utilize an `EventEmitter` and a `WeakMap` that keys off the action object. You can use the `useReducerPromise` with the exact same signature as `useReducer` but a guarantee that it returns a promise that only resolves when the reducer is run. It returns the calculated state. If the state did not change, then a UI update won't occur, but the reducer will have completed it's run.\r\n\r\nInternally, the way it works is that whenever a dispatch is called it stores the `action` object in a `WeakMap` with the value being the `resolve` from the returned Promise. An event is emitted that contains the `action` and the `newState` whenever a `resolver` completes. This allows a single event listener to listen for the `reduced` event, locate the associated promise `resolve` in the `WeakMap` and execute it with the `newState`. This is abstracted away, so that you simply can just `await` or `then` every call to dispatch.\r\n\r\nuseReducerPromise.js:\r\n\r\n```ts\r\nimport { useReducer, useMemo } from \"react\";\r\nimport EventEmitter from \"eventemitter3\";\r\n\r\nconst events = new EventEmitter();\r\nconst waiters = new WeakMap();\r\n\r\nevents.on(\"reduced\", function (action, newState) {\r\n  const resolver = waiters.get(action);\r\n  if (resolver) {\r\n    waiters.delete(action);\r\n    resolver(newState);\r\n  }\r\n});\r\n\r\nfunction reducerWrap(reducer) {\r\n  return function (state, action) {\r\n    const reduced = reducer(state, action);\r\n    events.emit(\"reduced\", action, reduced);\r\n    return reduced;\r\n  };\r\n}\r\n\r\nfunction dispatchWrap(dispatch) {\r\n  return function (action) {\r\n    const p = new Promise(function (resolve, reject) {\r\n      waiters.set(action, resolve);\r\n    });\r\n\r\n    dispatch(action);\r\n\r\n    return p;\r\n  };\r\n}\r\n\r\nexport default function useReducerPromise(reducer, ...reducerArgs) {\r\n  const wrappedReducer = useMemo(() => reducerWrap(reducer), [reducer]);\r\n  const [state, dispatch] = useReducer(wrappedReducer, ...reducerArgs);\r\n  const wrappedDispatch = useMemo(() => dispatchWrap(dispatch), [dispatch]);\r\n  return [state, wrappedDispatch];\r\n}\r\n\r\n```\r\n\r\nhttps://codesandbox.io/s/usereducerpromise-8sp89","updated_at":"2021-09-17T19:55:58Z","created_at":"2021-09-17T19:52:19Z","creator_user_login":"owenallenaz"}
{"number":15344,"comment_id":"1008183414","body":"This issue has been automatically marked as stale. **If this issue is still affecting you, please leave any comment** (for example, \"bump\"), and we'll keep it open. We are sorry that we haven't been able to prioritize it yet. If you have any new additional information, please include it with your comment!\n","updated_at":"2022-01-08T23:42:51Z","created_at":"2022-01-08T23:42:51Z","creator_user_login":"stale[bot]"}
{"number":15344,"comment_id":"1008190695","body":"bump","updated_at":"2022-01-09T00:09:46Z","created_at":"2022-01-09T00:09:46Z","creator_user_login":"martinkadlec0"}
{"number":15344,"comment_id":"1046087820","body":"I'm not sure how Redux works under the hood, but if Redux can return a Promise with the dispatch function what's preventing the React team from implementing it the same way? \r\n\r\nExample of awaiting dispatch with redux\r\n```\r\nconst onAddTodoClicked = async () => {\r\n  await dispatch(createTodo(todoText))\r\n  navigate(`/todos/${todo.id}`)\r\n}\r\n```\r\n\r\nIs it because Redux uses classes as opposed the useReducer being a hook?","updated_at":"2022-02-19T19:32:53Z","created_at":"2022-02-19T19:23:12Z","creator_user_login":"anolan23"}
{"number":15344,"comment_id":"1046089737","body":"@anolan23 no, this only works with Redux because you can configure a Redux store to use the \"thunk\" middleware.  Since Redux middleware wrap around the `dispatch` function, any middleware can alter the return value of `dispatch`.  The thunk middleware specifically returns whatever your thunk function returns.  Additionally, the normal dispatching process is synchronous, allowing an immediate return value.\r\n\r\nSee these resources:\r\n\r\n- https://redux.js.org/tutorials/fundamentals/part-6-async-logic\r\n- https://redux.js.org/tutorials/fundamentals/part-7-standard-patterns#thunks-and-promises\r\n- https://redux.js.org/usage/writing-logic-thunks\r\n\r\n`useReducer`, on the other hand, has a `dispatch` function that A) directly updates React's internals, B) queues a state update, C) does _not_ allow for middleware, and D) does not provide a way to know when the state update has been applied.  So, completely different technical constraints.","updated_at":"2022-02-19T19:36:19Z","created_at":"2022-02-19T19:36:19Z","creator_user_login":"markerikson"}
{"number":15344,"comment_id":"1138698393","body":"I see many blog posts addressing asynchronous implementations of this hook, and I came here searching the issues trying to understand why `userReducer` is not dispatching asynchronously. This is certainly confusing and it does not answer many apps' use cases.\r\n\r\nFrom my understanding, the dispatch function is called asynchronously, but may be called repeatedly. This is fine, as the dispatch function may indeed to called from different contexts (e.g. inside a `useEffect`, inside a `useCallback`, etc.), and it's execution should prevent concurrent calls, in order to avoid updating the state concurrently, etc. (e.g. **A** calls `dispatch`, then **B** calls `dispatch`, but **B** finishes before **A** so the state has an undefined behavior).\r\n\r\nHowever, this does not resolve many use cases, where the state depends on asynchronous executions. For example, a component has a form with server validations. Currently, this requires a reducer and some hacky `useEffect` function. In other words, there should be another hook to handle more complex state manipulations.\r\n\r\nSomething like :\r\n\r\n```js\r\nconst reducer = async (setState, action) => {\r\n   switch (action.type) {\r\n      case 'foo':\r\n         const foo = await somethingFoo();\r\n         setState(state => ({ ...state, foo }));\r\n         break;\r\n   }\r\n}\r\n\r\n...\r\n\r\nconst [ state, dispatch ] = useAsyncReducer(reducer, initialState);\r\n\r\n...\r\n\r\nawait dispatch({ type: 'foo' });\r\n// the reducer has returned at this point\r\n```\r\n\r\nNote that the reducer now takes a function similar to `setState`, where the state can either be fully replaced or merged. This would allow concurrent executions of the reducer and allow asynchronous dispatching of actions.","updated_at":"2022-05-26T15:35:46Z","created_at":"2022-05-26T15:25:45Z","creator_user_login":"yanickrochon"}
{"number":15344,"comment_id":"1496191895","body":"I thought I would leave my solution: if I want my dispatch to \"accept callbacks\" then I add a queue of callbacks to my state.\r\n\r\n```ts\r\n// example of an action with a callback\r\nconst doSomethingWithCallback = (payload, callback) => {\r\n  dispatch({ type: DO_SOMETHING, payload })\r\n  dispatch({ type: ADD_CALLBACK, payload: callback })\r\n}\r\n```\r\n\r\nThen elsewhere, usually where the useReducer is called\r\n\r\n```ts\r\n  const [state, dispatch] = useReducer(reducer, initialState)\r\n\r\n  useEffect(() => {\r\n    if (isEmpty(state.scheduledCallbacks)) {\r\n      return\r\n    }\r\n\r\n    state.scheduledCallbacks.forEach((callback) => {\r\n      callback(state)\r\n    })\r\n\r\n    dispatch({ type: ResourceActionType.CLEAR_CALLBACKS })\r\n  }, [state.scheduledCallbacks])\r\n```\r\n\r\nI have also considered pulling this into my useReducer implementation directly, so that all my reducers can do this generically...","updated_at":"2023-04-04T15:34:28Z","created_at":"2023-04-04T15:34:10Z","creator_user_login":"andre-byrne"}
{"number":15317,"comment_id":"479820041","body":"@mweststrate","updated_at":"2019-04-04T09:21:01Z","created_at":"2019-04-04T09:21:01Z","creator_user_login":"gaearon"}
{"number":15317,"comment_id":"479822004","body":"No need to ping him, he knows about it. \r\n\r\nEither way, I wanted to ask for a more generic solution, not only related to a MobX. I can imagine similar problems will be happening all over the place once people start preparing for Concurrent. It feels like that React is not giving enough tools to tackle the problem gracefully.","updated_at":"2019-04-04T09:26:16Z","created_at":"2019-04-04T09:26:16Z","creator_user_login":"danielkcz"}
{"number":15317,"comment_id":"479877025","body":"I’m tagging him precisely because “he knows about it” and because we’ve had conversations in the past about it. :-)\r\n\r\nGiven that he knows constraints of both I thought his input could be valuable.\r\n\r\nAs for your question — the design tradeoff we’re going for is that we don’t have a cleanup phase for renders that never committed. Rendering isn’t supposed to “allocate” resources that have to be cleaned up later. Instead we rely on the garbage collector. Resources that have to be disposed are only safe to allocate after the first commit. \r\n\r\nI don’t know for certain if tradeoffs chosen by MobX are compatible or not with this approach, as I don’t know enough about MobX.\r\n\r\nCan you explain what “reactions” are and why GC isn’t sufficient for them? Or why creating them can’t wait until after the first commit?","updated_at":"2019-04-04T12:32:13Z","created_at":"2019-04-04T12:29:29Z","creator_user_login":"gaearon"}
{"number":15317,"comment_id":"479893994","body":"> Can you explain what “reactions” are and why GC isn’t sufficient for them? Or why creating them can’t wait until after the first commit?\r\n\r\nWell, I don't know exact internals how it works, it's very entangled there, but my assumption is that Reaction kinda attaches itself to observable variables present in the callback function. So as long as those variables exist, the Reaction won't be GCed. Those variables can definitely exist outside the scope of the component, that's kinda point of the MobX.\r\n\r\nI think we have managed to figure out some way around it. Custom GC :) Basically, we globally keep the list of created reactions (in WeakMap) along with a time of their creation. If Reaction gets committed, all is fine and it gets removed from the list. A global timer takes care of cleaning up those that weren't committed in a given time.\r\n\r\nI am wondering if you have some idea for a good \"timeout\" period? I mean time from render to commit. For now, we are thinking like 1 second. I assume it should be a long enough period even on a really slow computer. Is it bad idea to rely on that?","updated_at":"2019-04-04T13:20:49Z","created_at":"2019-04-04T13:20:49Z","creator_user_login":"danielkcz"}
{"number":15317,"comment_id":"479898124","body":"> Or why creating them can’t wait until after the first commit?\r\n\r\n@RoystonS wrote [a good explanation of that](https://github.com/mobxjs/mobx-react-lite/issues/53#issuecomment-479869115). We could end up in very ugly situations ...","updated_at":"2019-04-04T13:31:59Z","created_at":"2019-04-04T13:31:59Z","creator_user_login":"danielkcz"}
{"number":15317,"comment_id":"479999573","body":"> Can you explain what “reactions”\r\n\r\nMobx automatically manages subscriptions based on usage.\r\nYou define a function (reaction), which can access observable objects.\r\nWhen the function is invoked, the observables accessed inside the function are added as dependencies to the function (reaction).\r\nWhen you modify an observable, the function is automatically invoked again, resubscribing and optionally running a side effect.\r\nWe wrap `render` inside such function, so that if you access an observable in render, it creates a subscription:\r\n```javascript\r\nconst disposer = reaction(\r\n  () => {    \r\n    // accesses observables, creating subscriptions\r\n    render()\r\n  }, \r\n  () => {\r\n    // a side effect to invalidate the component\r\n    setState() // or forceUpdate() \r\n  }\r\n)\r\n``` \r\n\r\n> why creating them can’t wait until after the first commit\r\n\r\nThe subscriptions are determined by rendering logic, so we would have to re-run the rendering logic in effect (double render).\r\n\r\n> why GC isn’t sufficient for them\r\n\r\nWhile reactions come and go (together with react's component instances), the observable objects possibly stay for the whole app lifetime and they hold references to reactions (preventing them from being GCed).","updated_at":"2019-04-04T17:54:34Z","created_at":"2019-04-04T17:54:34Z","creator_user_login":"urugator"}
{"number":15317,"comment_id":"480026051","body":"Basically: we're trying to avoid double-rendering _all_ MobX-observer components.  The only time we actually _need_ to double-render is if StrictMode/ConcurrentMode began rendering our component but then never got to the commit phase with us, or if something we're observing changed between initial render and commit.  Taking a double-render hit on _every_ component to cope with those (hopefully edge) cases is something we'd _like_ to avoid.\r\n\r\n\r\n\r\n","updated_at":"2019-04-04T19:10:58Z","created_at":"2019-04-04T19:10:58Z","creator_user_login":"RoystonS"}
{"number":15317,"comment_id":"481710080","body":"@gaearon @urugator's description is pretty accurate. Whether it should be fixed through a React life-cycleish thing or by doing some additional administration on MobX side (timer + custom GC) have both it's merits. So let's leave that aside for now, and just focus on the use case:\r\n\r\n### Basic concepts\r\n\r\nBut the reason why immediate subscription is important to MobX (as opposed to a lifecycle hook that happens after render, such as useEffect) is because observables can be in 'hot' and 'cold' states (in RxJS terms). Suppose we have:\r\n\r\n1. A collection of todo items\r\n2. An expression (we call this a `computed`) that computes the amount of unfinished computed items\r\n3. A component that renders the amount of unfinished computed items.\r\n\r\nNow, the expression `computed` can be read in two different modes:\r\n1. If the computed is cold, that is, no one is subscribed to it's result; it evaluates as a normal expression, returning and forgetting its result\r\n2. If the computed is hot, it will start observing its own dependencies (the todo items), and caching the response as long as the todo item set is unaffected and the output of the computed expression is unchanged.\r\n\r\n### MobX without concurrent mode\r\n\r\nWith that I mind, how `observer` was working so far is as follows:\r\n1. During the first (and any subsequent) render, MobX creates a so called `reaction` object which keeps track of all the dependencies being read during the render and subscribes to them. This caused the computed to become hot immediately, and a subscription to the computed to be set up. The computed in turn subscribes to the todos it used (and any other observable used). So a dependency graph forms. \r\n2. Since there is an immediate subscription, it means that the `reaction` will no longer be GC-ed as long as the computed exists. Until the subscription is disposed. This is done automatically done during `componentWillUnmount`. This cause the reaction to release its subscriptions. And in turn, if nobody else depends on the 'computed' value, that will also release its subscriptions to the todos. Reaction objects can now be GC-ed.\r\n\r\n### So what is the problem?\r\n\r\nIn concurrent mode, phase 2, disposing the reaction, might no longer happen, as an initial render can happen without matching \"unmount\" phase. (For just suspense promise throwing this seems avoidable by using `finally`)\r\n\r\n### Possible solutions\r\n\r\nSolution 1: Having an explicit hook that is called for never committed objects (e.g. `useOnCancelledComponent(() => reaction.dispose())`\r\n\r\nSolution 2: Have global state that records all created `reaction` objects, and remove reactions belonging to committed components from that collection. On a set interval dispose any non-committed reactions. This is the current (WIP) work around, that requires some magic numbers, such as what is a good grace period? Also needs special handling for `reactions` that are cleaned up, but actually get committed after the grace period!\r\n\r\nSolution 3: Only subscribe after the component has been committed. This roughly looks like;\r\n1. During the first render, read the `computed` value cold, meaning it will be untracked\r\n2. After commit (using `useEffect`) render another time, this time with proper tracking. This serves two goals:\r\n  1. The dependencies can be established\r\n  2. Any updates to the `computed` between first rendering and commit will be picked up. (I can imagine this is a generic problem with subscribing to event emitters as part of `useEffect`, updates might have been missed?)\r\n\r\nThe downsides:\r\n  1. Every component will render twice!\r\n  2. The `computed` will always compute twice, as there is first a 'cold', which won't cache, and then a 'hot' read. Since in complicated applications there might be entire trees of depending computable values be needed, this problem might be worse than it sounds; as the dependencies of a computed value also go 'cold' if the computed value itself goes cold. \r\n\r\nHope that explains the problem succinctly! If not, some pictures will be added :). \r\n\r\n","updated_at":"2019-04-10T14:17:38Z","created_at":"2019-04-10T14:17:38Z","creator_user_login":"mweststrate"}
{"number":15317,"comment_id":"481716405","body":"Does MobX have bigger problems in Concurrent Mode? How valuable is it to fix this in isolation without addressing e.g. rebasing?","updated_at":"2019-04-10T14:33:12Z","created_at":"2019-04-10T14:33:12Z","creator_user_login":"gaearon"}
{"number":15317,"comment_id":"481727125","body":"I think the later problem can be largely avoided by making a clear\ndistinction between component own state (use useState instead of MobX) and\nstate that lives outside the component tree (external domain state).\n\nIf I am not mistaken, my intuition is that rebasing only makes sense for\n'volatile ui state' such as the state of pending requests, switching tabs /\npages, charts etc. But state that is domain specific (e.g. a collection of\ntodo's), typically doesn't need rebasing as that would lead to weird\nbehavior for the end-user?\n\nOn Wed, Apr 10, 2019 at 4:36 PM Dan Abramov <notifications@github.com>\nwrote:\n\n> Does MobX have bigger problems in Concurrent Mode? How valuable is it to\n> fix this in isolation without addressing e.g. rebasing?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/facebook/react/issues/15317#issuecomment-481716405>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/ABvGhOMREb3lbrEL4q9sccIXfNj5f5vfks5vffcHgaJpZM4ccUAP>\n> .\n>\n","updated_at":"2019-04-10T14:59:09Z","created_at":"2019-04-10T14:59:09Z","creator_user_login":"mweststrate"}
{"number":15317,"comment_id":"486563910","body":"Any picture? Thanks~ :)","updated_at":"2019-04-25T08:07:18Z","created_at":"2019-04-25T08:07:18Z","creator_user_login":"NE-SmallTown"}
{"number":15317,"comment_id":"491269433","body":"We have a very similar issue to MobX's with [🍉 WatermelonDB](https://github.com/Nozbe/watermelondb/), but even more tricky because of asynchronicity.\r\n\r\nWhen connecting the data source to components, we subscribe to the Observable. This has to happen directly in render, because:\r\n\r\n- if we subscribe in an effect/on did mount, we'll ALWAYS render twice, and the first render will be wasted, even if we have the data ready to render and we can skip a bunch of unnecessary work.\r\n- it wouldn't be appropriate for an `useObservable` hook to return `null` on initial render, because it's not always clear what the component developer is supposed to do with it. For example, if an observable value is necessary to fetch another observable value, the developer would have to make a whole bunch of extra logic just to get to the `return null` (since we can't just bail early and render `null` with hooks - like we can today with a `withObservables` HOC).\r\n- it would be appropriate for `useObservable` to throw a Promise and suspend, however, we risk showing stale data (which can lead to bugs or ugly glitches) if we treat the data source like an async promise, not a reactive Observable — it could be that between the time the initial data is fetched, and component re-rendered, the value of the observable has changed again. But it's not possible to know that on the second render if we don't stay subscribed to it. Which means we have to subscribe before we throw a Promise — and have to deal with cleaning up the subscription if the component never ends up being rendered","updated_at":"2019-05-10T12:21:01Z","created_at":"2019-05-10T12:21:01Z","creator_user_login":"radex"}
{"number":15317,"comment_id":"521693020","body":"We have a similar situation in Meteor, where we set up a computation and its observers the first time it's run. If we use `useEffect` we have to either wait for `useEffect` to do that, causing a render of no content, or use `useLayoutEffect` without touching the dom, which would violate the suggestions and complicate the API for our users and still render twice if somewhat synchronously, or render twice with `useEffect` - once without setting up observers which is hacky (or doing a full create/dispose lifecycle) and then always at least one additional time after `useEffect` (this was janky in testing).\r\n\r\nWhat I ended up doing is something based on `setTimeout`, but it takes a lot of juggling (we also have some backward compat code which complicates [our implementation](https://github.com/CaptainN/react-packages/blob/hooks-plus-ultra/packages/react-meteor-data/useTracker.js). It has to set up the computation and a timeout, then in `useEffect` it has to look for a few things; Is the computation still alive (did `setTimeout` trigger dispose)? If not rebuild it, and re-render (back to 2 renders). Did we get a reactive change between render and `useEffect`? If so, re-run the computation, and re-render (this is fine, because it should anyway).\r\n\r\nI originally set the timeout to 50ms, assuming commit would happen relatively quickly, but in testing in concurrent mode 50ms missed almost all commits. It often took longer than 500ms to commit. I've now set the timeout to 1000ms. I also saw that there are a lot of discarded renders for every commit, between 2-4 to 1. (I have no idea how to write tests for all this, this is based on some counter/console logging.)\r\n\r\nSince there is a lengthy gap between render and commit, I had to decide what to do for reactive changes that happened in renders which will never be committed. I could either run the user's reactive function for every change, knowing it might be run by 4 different handlers without doing anything, or block reactive updates until the component was committed. I chose the latter.\r\n\r\nI tried a workaround using `useLayoutEffect`. I incorrectly assumed it would run in the same event loop as render. If it had, the code for juggling when and if to build/rebuild/re-run/re-render could all be greatly simplified, and a timeout of 0ms or 1ms would work just fine. In Strict Mode, this worked beautifully (and greatly [simplified our implementation](https://github.com/CaptainN/react-packages/blob/90b37a40ff4f53343c6334e6816e5dc300330e48/packages/react-meteor-data/useTracker.js)). In practice, in concurrent mode, `useEffect` and `useLayoutEffect` performed no differently from each other.\r\n\r\nBTW, one additional thing we found challenging was trying to leverage a `deps` compare. We had at one point [copied some parts of react](https://github.com/CaptainN/react-packages/blob/hooks/packages/react-meteor-data/useTracker.js) out of core to manage that, before just switching to `useMemo` to use its `deps` compare without it's memoization. I understand that may lead some some additional re-creations, our old HOC used to do that anyway (and it does that now if a user supplies no deps to our `useTracker` hook), so I went with `useMemo` just to reduce our overhead - but it'd be nice if the deps compare functions were somehow available to use.","updated_at":"2019-08-15T16:46:52Z","created_at":"2019-08-15T15:54:51Z","creator_user_login":"CaptainN"}
{"number":15317,"comment_id":"522096359","body":"A quick additional observation - one of the things I have in place is a check to make sure that if the timeout period elapsed (currently 1 second), it will make sure to restart our computation when/if the render is eventually committed in `useEffect`. This has almost never triggered outside of concurrent mode (and it rarely triggers inside concurrent mode at 1second). It did trigger today during a particularly janky local dev reload. All of this would be so much simpler if there was a way to reliably clean up after discarded renders without resorting to timeout based GC hacks.","updated_at":"2019-08-16T17:54:07Z","created_at":"2019-08-16T17:53:45Z","creator_user_login":"CaptainN"}
{"number":15317,"comment_id":"522351053","body":"Using dual-phased subscriptions (phase 1: collect observed object/key pairs and their current values, phase 2: subscribe to them), you can avoid any timer-based GC and postpone subscribing until React commits. In phase 2, be sure to check for changed values before subscribing, so you can know if an immediate re-render is required. [This](https://github.com/alloc/wana/commit/1658f609d5111cac9d8e658beffd5d4f39512b09) is what I did with the `Auto` class in [wana](https://npmjs.com/package/wana). Of course, this only applies to observable objects. Streams and event emitters, not so much.","updated_at":"2020-01-11T18:17:00Z","created_at":"2019-08-18T20:05:59Z","creator_user_login":"aleclarson"}
{"number":15317,"comment_id":"522717201","body":"We'd have to modify a bunch of stuff in Meteor core to convert that to a dual-phase subscription model like that (although we can fake it by just setting up the subscription, running the computation, then disposing of it immediately, to restart it again in `useEffect`). An additional problem is that the return data from a Meteor computation is not immutable, and can be any type of data (with possibly very deep structures), so a deep compare would be necessary to make sure data hasn't changed, or we'd have to render twice (same problem as before).","updated_at":"2019-08-19T19:32:09Z","created_at":"2019-08-19T19:18:31Z","creator_user_login":"CaptainN"}
{"number":15317,"comment_id":"523134128","body":"> We'd have to modify a bunch of stuff in Meteor core to convert that to a dual-phase subscription model like that\r\n\r\nThe issue with Meteor is that its tracking system doesn't associate \"observable dependencies\" with state. In other words, the `Tracker.Dependency` instance is disconnected from what it represents. Although, you could get around that by updating a nonce property on the dependency whenever it emits a change event.\r\n\r\n> (although we can fake it by just setting up the subscription, running the computation, then disposing of it immediately, to restart it again in `useEffect`)\r\n\r\nWouldn't you miss changes between render and commit if you did it that way?\r\n\r\n> An additional problem is that the return data from a Meteor computation is not immutable, and can be any type of data (with possibly very deep structures), so a deep compare would be necessary to make sure data hasn't changed, or we'd have to render twice (same problem as before).\r\n\r\nYep, that's the problem with not using observable proxies that track every property access.","updated_at":"2019-08-20T18:15:22Z","created_at":"2019-08-20T18:15:22Z","creator_user_login":"aleclarson"}
{"number":15317,"comment_id":"523135287","body":"Another good use case for `useCancelledEffect` is being able to lazily allocate *shared* state (which is stored in a global cache or in context) during render, without the risk of leaks or the need to implement a timer-based GC.","updated_at":"2019-08-20T18:18:50Z","created_at":"2019-08-20T18:18:16Z","creator_user_login":"aleclarson"}
{"number":15317,"comment_id":"523152954","body":"> Wouldn't you miss changes between render and commit if you did it that way?\r\n\r\nYes. It's actually that way now even with the timer. If an update comes in before the render is committed (which takes about a half a second in my testing), I had to make a choice - run the user's reactive function for every uncommitted computation, or don't run any of them until the render is committed (I detect if an update happened, but don't run user code until later) - I chose the latter.  In the example I gave in the other comment, I'm saying we could simply always rerun the computation and user function again in `useEffect` - but then we have to always eat a second render, and all the rest.\r\n\r\n> Another good use case for `useCancelledEffect` is being able to lazily allocate shared state (which is stored in a global cache or in context) during render, without the risk of leaks or the need to implement a timer-based GC.\r\n\r\nI had thought it would be useful if we could get some kind of deterministic ID for whatever the current leaf is, which is consistent for all renders of current component, even those that would not be committed. Then I could use my own global store. I think someone explained that couldn't happen though, for various reasons. (Can `react-cache` be used for this? I'm not clear on what that is useful for.) I could offload the naming/ID responsibility to the user, but that seem onerous, and I'm not sure how I'd be able to detect collisions - though, would I have to? 🤔","updated_at":"2019-08-20T19:05:15Z","created_at":"2019-08-20T19:05:15Z","creator_user_login":"CaptainN"}
{"number":15317,"comment_id":"552602126","body":"This problem also exists **without** Concurrent mode enabled, because no-op state changes can trigger a render that bails out before effects are ever called. [Source](https://twitter.com/dan_abramov/status/1193934566517563393)","updated_at":"2019-11-11T20:29:47Z","created_at":"2019-11-11T20:29:47Z","creator_user_login":"aleclarson"}
{"number":15317,"comment_id":"573337558","body":"We've had to find a solution to this for `urql`. It's a similar problem to what MobX has in that we're using streams that start a GraphQL operation when subscribed to which then yields either synchronous or asynchronous results (cached or fetching).\r\n\r\nThe solution to this can be found here: https://github.com/kitten/react-wonka/blob/master/src/index.ts\r\nWe're essentially dealing with 1) synchronous subscriptions since they may immediately return a result, so they can't be started in `useEffect` only, 2) cleanups on interrupted or double renders, 3) updates to values in `useEffect`.\r\n\r\nI'll leave some simplified / generic code here in case someone else has to implement it from scratch, since we haven't found a generic solution yet that could be shared (like an alternative to `use-subscription` for instance)\r\n\r\n<details><summary>Interruptible Subscriptions implementation walkthrough</summary>\r\n\r\nOn mount we start the subscription if it hasn't started yet:\r\n_(note: most of this is pseudo code since the full implementation is linked above)_\r\n\r\n```js\r\nconst useObservable = observable => {\r\n  const subscription = useRef({\r\n    value: init,\r\n    onValue: value => {\r\n      subscription.current.value = value;\r\n    },\r\n    teardown: null,\r\n    task: null,\r\n  });\r\n\r\n  if (subscription.current.teardown === null) {\r\n    // Suppose we have a subscription that needs to be started somehow, with a teardown:\r\n    subscription.current.teardown = observable.subscribe(value => {\r\n      subscription.current.onValue(value)\r\n    });\r\n  }\r\n\r\n  return subscription.value;\r\n};\r\n```\r\n\r\nThen we schedule an immedite teardown/cancellation of the subscription using `scheduler` (this way we get really predictable and cooperative timing):\r\n\r\n```js\r\nimport {\r\n  unstable_scheduleCallback,\r\n  unstable_cancelCallback,\r\n  unstable_getCurrentPriorityLevel,\r\n} from 'scheduler';\r\n\r\nconst useObservable = observable => {\r\n  // ...\r\n  if (subscription.current.teardown === null) {\r\n    subscription.current.teardown = observable.subscribe(value => {\r\n      subscription.current.onValue(value)\r\n    });\r\n\r\n    subscription.task = unstable_scheduleCallback(\r\n      unstable_getCurrentPriorityLevel(),\r\n      subscription.teardown\r\n    );\r\n  }\r\n\r\n  return subscription.value;\r\n};\r\n```\r\n\r\nOn interrupted rendering we won't have any effects run (`useEffect` and `useLayoutEffect`) but on a normal render we don't want to cancel the subscription by calling the `teardown`. We can use `useLayoutEffect` to cancel the teardown (`unstable_cancelCallback`) since that has synchronous timing (after mount during the commit phase)\r\n\r\n```js\r\nconst useObservable = observable => {\r\n  // ...\r\n  if (subscription.current.teardown === null) {\r\n    subscription.current.teardown = observable.subscribe(value => {\r\n      subscription.current.onValue(value)\r\n    });\r\n\r\n    subscription.task = unstable_scheduleCallback(\r\n      unstable_getCurrentPriorityLevel(),\r\n      subscription.teardown\r\n    );\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    // Cancel the scheduled teardown\r\n    if (subscription.current.task !== null) {\r\n      unstable_cancelCallback(subscription.current.task);\r\n    }\r\n\r\n\t// We also add the teardown for unmounting\r\n    return () => {\r\n      if (subscription.current.teardown !== null) {\r\n        subscription.current.teardown();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return subscription.value;\r\n};\r\n```\r\n\r\nLastly we'd like a normal `useEffect` to take over for normal cooperative effect scheduling. In the real implementation we also send updates back to a subject which affects the observable, so we do that there as well. For simplification/generalisation purposes that's excluded here though.\r\n\r\n```js\r\nconst useObservable = observable => {\r\n  // ...\r\n\r\n  // We add an updater that causes React to rerender\r\n  // There's of course different ways to do this\r\n  const [, setValue] = useReducer((x, value)) => {\r\n    subscription.current.value = value;\r\n    return x + 1;\r\n  }, 0);\r\n\r\n  if (subscription.current.teardown === null) {\r\n    // ...\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    // ...\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n\t// In useEffect we \"adopt\" the subscription by swapping out the\r\n    // onValue callback with the setValue call from useReducer above\r\n    subscription.current.onValue = setValue;\r\n\r\n    // If we've cancelled the subscription due to a very long interrupt,\r\n    // we restart it here, which may give us a synchronous update again,\r\n    // ensuring that we don't miss any changes to our value\r\n    if (subscription.current.teardown === null) {\r\n      subscription.teardown = observable.subscribe(value => {\r\n        subscription.onValue(value)\r\n      });\r\n    }\r\n\r\n    // We'd typically also change dependencies and update a Subject,\r\n    // but that's missing in this example \r\n  }, []);\r\n\r\n  return subscription.value;\r\n};\r\n```\r\n\r\nLastly we need to update this to work on server-side rendering.\r\nFor that we swap out `useLayoutEffect` with a `useIsomorphicEffect`\r\n\r\n```js\r\nconst isServerSide = typeof window === 'undefined';\r\nconst useIsomorphicEffect = !isServerSide ? useLayoutEffect : useEffect;\r\n```\r\n\r\nAnd add some code that immediately cancels the subscription on the server-side:\r\n\r\n```js\r\nconst useObservable = observable => {\r\n  // ...\r\n  if (subscription.current.teardown === null) {\r\n    subscription.teardown = observable.subscribe(value => {\r\n      subscription.onValue(value)\r\n    });\r\n\r\n    if (isServerSide) {\r\n      // On SSR we immediately cancel the subscription so we're only using\r\n      // synchronous initial values from it\r\n\t  subscription.current.teardown();\r\n    } else {\r\n      subscription.current.task = unstable_scheduleCallback(\r\n        unstable_getCurrentPriorityLevel(),\r\n        subscription.current.teardown\r\n      );\r\n    }\r\n  }\r\n  // ...\r\n};\r\n```\r\n\r\nAfterwards we added some code that handles our updates to an input value.\r\n\r\n</details>\r\n\r\ntl;dr We start the subscription on mount synchronously, schedule the teardown using `scheduler`, cancel the scheduled teardown in `useLayoutEffect` (since that tells us that effects will run and we're not in an interrupted render), let a `useEffect` adopt the subscription and switch an `onValue` updater over to a `useReducer` update.\r\n\r\nIf note is that this only works as well as it does for us because we're already handling starting operations only once if necessary and avoiding duplicates, so in a lot of cases our subscriptions are already idempotent. I can totally see that this isn't the case for everyone, so a lot of subscriptions with heavy computations won't be as \"safe\" to run twice in rapid succession.\r\n\r\nThis is a little inconvenient to say the least. I'd love if either `use-subscription` or a built-in primitive could introduce a concept of observing changing values that starts a subscription synchronously but also ensures it's cleaned up properly on interrupts or unmounts. 🤔 ","updated_at":"2020-01-11T17:42:50Z","created_at":"2020-01-11T17:39:08Z","creator_user_login":"kitten"}
{"number":15317,"comment_id":"573453444","body":"@FredyC At a quick glance, the above might be cleaner than the current approach in lite 2. Thoughts? (Probably better to discuss further in the repo, just wanted to cc you in!)","updated_at":"2020-01-12T20:23:55Z","created_at":"2020-01-12T20:23:55Z","creator_user_login":"mweststrate"}
{"number":15317,"comment_id":"573473002","body":"It's really interesting.\r\n\r\n> we haven't found a generic solution yet that could be shared (like an alternative to use-subscription for instance)\r\n\r\nLet me give a quick trial in TS:\r\n\r\n```ts\r\nimport { useState, useRef, useLayoutEffect } from 'react';\r\nimport {\r\n  unstable_scheduleCallback as scheduleCallback,\r\n  unstable_cancelCallback as cancelCallback,\r\n  unstable_getCurrentPriorityLevel as getCurrentPriorityLevel,\r\n} from 'scheduler';\r\n\r\ntype Subscription<Value> = {\r\n  currentValue: Value; // synchronous value\r\n  unsubscribe: () => void;\r\n};\r\ntype Subscribe<Value> = (callback: (nextValue: Value) => void) => Subscription<Value>;\r\n\r\nexport const useSubscription = <Value>(subscribe: Subscribe<Value extends undefined ? never : Value>): Value => {\r\n  if (subscribe !== useRef(subscribe).current) {\r\n    throw new Error('no support for changing `subscribe` in this PoC');\r\n  }\r\n\r\n  const [value, setValue] = useState<Value | undefined>();\r\n\r\n  const subscription = useRef<Subscription<Value>>();\r\n  const cleanup = useRef<ReturnType<typeof scheduleCallback>>();\r\n  if (!subscription.current) {\r\n    subscription.current = subscribe(setValue);\r\n    cleanup.current = scheduleCallback(getCurrentPriorityLevel(), subscription.current.unsubscribe);\r\n  }\r\n\r\n  useLayoutEffect(() => {\r\n    if (cleanup.current) cancelCallback(cleanup.current);\r\n    return subscription.current?.unsubscribe;\r\n  }, []);\r\n\r\n  return value !== undefined ? value : subscription.current.currentValue;\r\n};\r\n```\r\n","updated_at":"2020-01-13T02:29:30Z","created_at":"2020-01-13T00:03:35Z","creator_user_login":"dai-shi"}
{"number":15317,"comment_id":"573511589","body":"@dai-shi How does that scheduleCallback function work? Does it use a timeout?","updated_at":"2020-01-13T05:17:10Z","created_at":"2020-01-13T05:17:10Z","creator_user_login":"CaptainN"}
{"number":15317,"comment_id":"573525031","body":"@CaptainN I re-organized what @kitten described in a general way. I haven't tested it (at least yet).\r\nHaving said that, my understanding is that\r\n1) scheduleCallback registers a callback into a queue,\r\n2) useLayoutEffect runs in a higher priority (or the same but somehow before it?),\r\n3) thus cancels the registered callback in the queue before executing.\r\n\r\nsetTimeout would be [used in `scheduler`](https://github.com/facebook/react/blob/901139c2910d0dc33f07f85c748c64371f8664f4/packages/scheduler/src/Scheduler.js#L343), but not like in a naive way.\r\n\r\n@kitten @JoviDeCroock Did you figure out which priorities are used in render and layout effect? `NormalPriority` for the former and `ImmediatePriority` for the latter, I presume,  but not confirmed.\r\n\r\n----\r\n\r\n(edit) On second thought, I'm a bit suspicious about this. Suppose, if one of render is really slow (like taking several seconds), React will likely to throw away that render result on updates, but it may(?) keep other components that are not committed yet and will commit them after a long time.","updated_at":"2020-01-13T06:44:12Z","created_at":"2020-01-13T06:26:22Z","creator_user_login":"dai-shi"}
{"number":15317,"comment_id":"573753939","body":"@dai-shi That's why I asked it was timeout based. In the Meteor hook we implemented, we just use a timeout. I found that a full 1000ms was needed in order for the subscription (computation in our case) to be preserved in some large percentage of cases (at least on my machine). We had to do a couple of other things though - we also will destroy the computation if an update comes in before the render is committed. And we also check in `useEffect` if we need to rebuild the computation.\r\n\r\nThere's a lot of overhead to implement this correctly, all of it is difficult, and there are dozens of bad examples out on the net masquerading as good suggestions, most of which will leak memory and resources, mostly silently. There really needs to be an easier properly supported solution to this common problem.","updated_at":"2020-01-13T16:36:59Z","created_at":"2020-01-13T16:36:59Z","creator_user_login":"CaptainN"}
{"number":15317,"comment_id":"573814056","body":"I wonder is the take on this from the React team. Apparently, the use cases are pilling up and with Concurrent more getting more attention it would be silly to expect everyone implementing some hacky workarounds.\r\n\r\nJust a wild idea, but what about Suspense? Can we, in theory, suspend rendering until any sort of \"rendering setup\" is ready? I am not really sure what would be the implications. I know just basics about the whole thing. Would it harm the performance?\r\n\r\n@sebmarkbage Can you possibly give some thoughts here? Is this something the React simply won't support officially?","updated_at":"2020-01-13T18:52:23Z","created_at":"2020-01-13T18:51:54Z","creator_user_login":"danielkcz"}
{"number":15317,"comment_id":"573818046","body":"@FredyC Suspense is similarly unintuitive. It doesn't \"suspend\" execution, and then later commit. After you throw a promise, later on a fresh render runs again from scratch. But that doesn't give us the info we need anyway. Suspense is great for when *our* resource is not yet ready. But if our resource is ready (and it almost always is in Meteor) during the first render, concurrent mode will run it however many times (up to 4 in my testing), and then only commit one of them. But there's no reliable or easy way to determine which ones are tossed.\r\n\r\nIt'd be great if there were some sort of way to know that all /n/ renders are candidates for the same commit - that'd be ideal. We could run the effect once for the pool, and associate it with the committed render, but that's probably too much overhead or something to set up.\r\n\r\nIf only there was a \"componentWillMount\" hook.  🤔","updated_at":"2020-01-13T19:01:07Z","created_at":"2020-01-13T19:01:07Z","creator_user_login":"CaptainN"}
{"number":15317,"comment_id":"573926802","body":"While waiting for the official answer, which I think is \"won't support\", here's another suggestion. Coming from the basics, we make render function side effect free.\r\n\r\n```js\r\nconst useSubscription = (subscribe, initialValue) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  useLayoutEffect(() => {\r\n    const { currentValue, unsubscribe } = subscribe(setValue);\r\n    setValue(currentValue);\r\n    return unsubscribe;\r\n  }, [subscribe]);\r\n  return value;\r\n};\r\n```\r\n\r\nOne caveat as you see is that developers who use this hook has to provide `initialValue`.\r\nBut, end users won't see the initialValue rendered because it's the layout effect.\r\n\r\nI'm pretty sure many of us already tried such an approach, but just an option to re-consider as it's the closest one to `componentWillMount`.\r\n\r\n----\r\n\r\nYet another approach would be to store the current value in a global cache.\r\n\r\n```js\r\nconst cache = new WeakMap();\r\n\r\nconst useSubscription = (subscribe) => {\r\n  if (!cache.has(subscribe)) {\r\n    const { currentValue, unsubscribe } = subscribe(() => null /* noop */);\r\n    cache.set(subscribe, currentValue);\r\n    unsubscribe();\r\n  }\r\n  const [value, setValue] = useState(() => cache.get(subscribe));\r\n  useEffect(() => {\r\n    const { currentValue, unsubscribe } = subscribe(setValue);\r\n    cache.set(subscribe, currentValue);\r\n    setValue(currentValue);\r\n    return unsubscribe;\r\n  }, [subscribe]);\r\n  return value;\r\n};\r\n```\r\n\r\nThis approach can be done with the official `use-subscription`, which might be appropriate.\r\nObviously, this pattern is not very nice, if we often need customized subscribe functions, like one-to-one to components.\r\n\r\n","updated_at":"2020-01-13T23:39:55Z","created_at":"2020-01-13T23:39:55Z","creator_user_login":"dai-shi"}
{"number":15317,"comment_id":"574041905","body":"The `useLayoutEffect` even though it runs almost immediately, it's still runs after the first render happens. For MobX purposes, it's useless as we need to watch over that first render.\r\n\r\nThe global cache might be almost good only if there would be some reliable identity of the component _instance_. Especially the identity that would be the same over the Concurrent mode _retries_. We cannot expect users to pass that identity there. Generating something out of thin air and storing with `useRef` or `useState` is useless too as we end up with exactly the same problem of having multiple reactions and we won't know which one to dispose of.","updated_at":"2020-01-14T07:46:00Z","created_at":"2020-01-14T07:29:11Z","creator_user_login":"danielkcz"}
{"number":15317,"comment_id":"574141166","body":"@FredyC \r\nFor the MobX case, it would be ideal to work with dual-phased subscriptions.\r\nIt would be nice if MobX provides such capabilities. As I look at the mobx code, unfortunately not. (Now, I understand where your concerns are coming from.)\r\n\r\n> if there would be some reliable identity component instance\r\n\r\nTotally right about that. I forgot that useCallback is also reset.","updated_at":"2020-01-14T11:59:49Z","created_at":"2020-01-14T11:59:49Z","creator_user_login":"dai-shi"}
{"number":15317,"comment_id":"575739823","body":"@dai-shi I mean, to get this out of the way, this issue is explicitly _not_ about \"dual-phased subscriptions\" (let's just say subscriptions via/in `useEffect` to keep things simple), so I do think we all know that that does work, but we'd like our subscriptions to be represented as values in React 1:1 and not _eventually_ match up 😅 ","updated_at":"2020-01-17T18:23:21Z","created_at":"2020-01-17T18:23:21Z","creator_user_login":"kitten"}
{"number":15317,"comment_id":"575761699","body":"Re: connecting to an external store.\r\n\r\nThere are a lot of implementation details of current systems. That might make upgrading hard but that doesn't say whether it's a good idea longer term. I think ultimately this problem bottoms out in reading a mutable value in a newly created component (already mounted components can use snapshots in their state). Depending on if your system also wants to support Suspense this might get conflated with Suspense, see below.\r\n\r\nWe're working on a new hook for mutable external values that deopts in scenarios where it would produce an inconsistent tree. By doing a full batched render in synchronous mode. It's \"safe\" and it does allow a tree to commit as one. It's unsatisfactory because it will deopt and produce unfortunate perf characteristics in certain scenarios.\r\n\r\nIt's related to this thread, because it aims to solve scenarios that I'm not sure has been considered yet. I believe that even if we had a clean up hook, you would still leave unsafe scenarios on the table or at the very least deopt in more cases.\r\n\r\nIn terms of a mutable store, the subscription fills the purpose of invalidating the render if it changes before commit. Otherwise the useSubscription pattern works. However, you also have to think about whether invalidating the render should also take any higher pri updates with it. It's not just about consistency but whether you merge multiple timelines. Additionally, if you always invalidate a \r\n render for changes to the store you risk starving out. I think what you really want is to commit the work you've already done even if it's now stale, as long as that commit is consistent with itself.\r\n\r\nThat means we should continue rendering until we find a case that is impossible to make consistent and only deopt once we hit that. Because if you use it sparingly you don't have to deopt at all. However, you don't need a subscription to accomplish this because it's not the already rendered component that determines whether the tree is inconsistent, it's the next rendered component that we haven't gotten to yet.\r\n\r\nRe: suspense.\r\n\r\nI agree that suspense intuitively feels like you should be able to open connections during render. That's what our original demos showed. It seems right. However, there are a few caveats.\r\n\r\nOne is that even when React does its best to preserve already started work, it's surprisingly easy for rebases, especially long lived ones, to invalidate it. Therefore I believe you still need something like a timeout based cache to solve this regardless of what React does.\r\n\r\nAdditionally, there are other problems with this approach with regard to when invalidation of data that has already rendered should happen. The solution to that is keeping an object in state that represents the current lifetime like we showed at the latest React Conf. If you use that approach then you also solve the problem of when to invalidate opened requests. When you explicitly cancel the lifetime of the subtree, then you cancel any requests opened by that subtree.\r\n\r\nNow, in theory we could do a traversal for most cases but it wouldn't be fool-proof and it would make React slower for everyone. To be convinced of this, we would have to see that the whole system overall that spawns from this actually works well, not just in theory, and that its convenience is worth making React slightly slower for everyone.\r\n\r\n","updated_at":"2020-01-17T19:25:02Z","created_at":"2020-01-17T19:25:02Z","creator_user_login":"sebmarkbage"}
{"number":15317,"comment_id":"575805336","body":"I am probably misunderstanding something, but having a hook to deopt rendering won't work well for MobX case. It would mean to _slow down_ most of the components that work with observables on purpose, right? Or to be precise it would be same performance as without Concurrent mode. That sounds more like a foot gun and not a solution.\r\n\r\nWith the current solution based on timers, it's ugly, but there is only a risk memory leaks which is not that bad in comparison to deoptimizing rendering on purpose.\r\n\r\n@sebmarkbage By any chance, the idea of having hook that provides _unique component instance identity_ does not sound useful? It should be the same over the rendering _attempts_. Ideally some sort of object so it can be utilized in `WeakMap` and we will be able to keep info about things that should happen only once.","updated_at":"2020-01-17T21:42:04Z","created_at":"2020-01-17T21:41:16Z","creator_user_login":"danielkcz"}
{"number":15317,"comment_id":"579842962","body":"> I mean, to get this out of the way, this issue is explicitly not about \"dual-phased subscriptions\"...\r\n\r\nPlease forgive me, @kitten. I was wrong.\r\nI just stumbled upon this issue [while I was developing a new library](https://github.com/dai-shi/react-suspense-router/blob/c325f28c6fd40779f9ca6c3e69dc07a8e7ec6ad2/src/Route.tsx#L62).\r\n\r\nI may misunderstand something either for suspense support. Still figuring out best practices.\r\n\r\n----\r\n\r\nJust found https://github.com/FormidableLabs/urql/pull/514, so you could fix it in a better way in urql. That's nice.","updated_at":"2020-01-29T16:31:59Z","created_at":"2020-01-29T16:31:59Z","creator_user_login":"dai-shi"}
{"number":15317,"comment_id":"579850140","body":"@FredyC The issue with the subscription based approach is what you do when the subscription fires after we’ve rendered that component but before we’ve committed it onto the screen and we get an update. React can do two things with that information. If React doesn’t immediately stop then the rest of the tree will get the new state and it will be inconsistent and cause tearing problems. If React does restart, it’s worse than the deopt approach because you eagerly throw away work even in cases where you wouldn’t need to. If you restart but keep it non-synchronous rendering you risk keep throwing away the work as you get new updates and you starve which is really bad.\r\n\r\nSo the subscription solution is actually a much worse deopt or it has the tearing problems.\r\n\r\n> Or to be precise it would be same performance as without Concurrent mode. That sounds more like a foot gun and not a solution.\r\n\r\nYes, this is indeed a foot gun but there’s not much we can do about that. A mutable state that mutates and then later dispatches a change notification that the state has already changed inherently has this property.\r\n\r\nIt’s a known property in systems that use threads too. Immutable data lets you about snapshots and allows work to be queued and parallelized. Mutable data requires locks and synchronization.\r\n\r\nIt comes with some downsides too and it’s a tradeoff. We can’t magically fix that.\r\n\r\nThe deopt approach is a decent compromise. At least it’s not really worse than synchronous React. It does make the story more complicated because you can’t really just say to use the same state for everything since that risks deopting too much. So that makes it a foot gun. It’s not React creating this tradeoff though. It’s just the realities of the tradeoffs of using mutable state.","updated_at":"2020-01-29T16:51:34Z","created_at":"2020-01-29T16:46:59Z","creator_user_login":"sebmarkbage"}
{"number":15317,"comment_id":"579900797","body":"@dai-shi Yes, but our solution is only possible because we can subscribe on mount and unsubscribe immediately which is our implementation for `getCurrentValue`, so we’re side-stepping the problem in our new approach.\r\n\r\nWe essentially stop listening between the first render (mount) and the commit phase. So this only works in our case because we can stop all side-effects in-between both phases.\r\n\r\n@sebmarkbage Are the docs in `use-subscription` still correct about potential deopts there? As far as I understand that hook it doesn't cause any side-effects during render that trigger an update, but only in `useEffect` and in a listener callback. The comment in the issue seems to highlight the case where `getCurrentValue` inside `useEffect` may trigger a state update immediately. Is that what can also cause a deopt?\r\n\r\n- https://github.com/facebook/react/issues/13186\r\n- https://github.com/facebook/react/tree/master/packages/use-subscription#limitations-in-concurrent-mode","updated_at":"2020-01-29T18:58:16Z","created_at":"2020-01-29T18:42:46Z","creator_user_login":"kitten"}
{"number":15317,"comment_id":"580060743","body":"@sebmarkbage : can we get a definition of what \"deopt\" _specifically_ means in this context?  The React team has thrown that phrase around a lot, and it would help to know exactly what you're referring to.\r\n\r\nIs it simply \"a synchronous re-render during the commit phase\", or something more specialized than that?","updated_at":"2020-01-30T02:53:40Z","created_at":"2020-01-30T02:53:40Z","creator_user_login":"markerikson"}
{"number":15317,"comment_id":"580074416","body":"As @dai-shi pointed out in the other issue, this gist by @bvaughn clears things up in terms of what “deopt” means, when it happens, and what may cause tearing https://gist.github.com/bvaughn/054b82781bec875345bd85a5b1344698\r\n\r\nIf I’m not mistaken, “deopt” means that all updates triggered inside `useSubscription`‘s subscription or listener in the same tick will be batched and all changes will be committed and flushed immediately altogether. So for certain use cases, this is probably desirable actually, but may be expensive, because I don’t think this will update will be sliced, since the point of this big batch is to avoid tearing.\r\n\r\nTearing (which I’m more unsure of) may occur with `useSubscription` (and I suppose similar approaches) when either before this big commit phase or during it the subscription updates again. In such cases the newly mounted consumers of a subscription may temporarily be “more up-to-date” and additional update cycle will start.\r\n\r\nThis doesn’t seem to be an issue with `useMutableSubscription`, however this hook may trigger an interrupt by throwing and will restart the entire (then even larger) batch","updated_at":"2020-01-30T04:13:39Z","created_at":"2020-01-30T04:09:57Z","creator_user_login":"kitten"}
{"number":15317,"comment_id":"580078812","body":"@markerikson It can mean slightly different things in different implementation details. For example, it might not need to be in the \"commit\" phase. We can do it before the commit phase if we know it's going to happen earlier. It always means switching to synchronous rendering though.\r\n\r\nIt may also mean including more things in the batch than is necessary. E.g. normally React concurrent can work with multiple different pending transitions independently but deopt might group them into one batch.\r\n\r\nFor example if you have pending transitions loading it might also need to force those to be included into one big batch and force them to show early fallbacks. Such as pending `startTransition`. This can be an unfortunate experience if forcing fallbacks means hiding existing content while loading but you really just wanted to show a temporary busy spinner.\r\n\r\nAnother case we haven't built yet but that I'm thinking of is enter/exit animations. It might force the animation to terminate early.\r\n\r\nI.e. new features that don't work with synchronous rendering can become disabled if we're forced into synchronous rendering. I think that's the worst part of the deopt. Not actually the rendering performance.\r\n\r\nThe cases _when_ deopts happen is also an interesting discussion point that varies by implementation details. E.g. the `useMutableSource` approach is meant to trigger the deopt less often.","updated_at":"2020-01-30T04:33:56Z","created_at":"2020-01-30T04:33:56Z","creator_user_login":"sebmarkbage"}
{"number":15317,"comment_id":"580079732","body":"Being able to deopt would be great for Meteor's legacy container and what should become the legacy hook, which can do a bunch of unknowable things in its general tracker. It will always create a computation, but might also fetch data, and or set up subscriptions. If there is a way to opt out of concurrency (deopting), that'd actually be ideal. We could create a separate set of specialized hooks which follow the rules in more specialized hooks to gain the purity benefits (which we probably should have anyway). I'm also looking at a new clean implementation of a general hook to support Suspense, and follow the rules of hooks.","updated_at":"2020-01-30T04:38:31Z","created_at":"2020-01-30T04:38:31Z","creator_user_login":"CaptainN"}
{"number":15317,"comment_id":"604529972","body":"While developing another library, I encountered this issue again.\r\n(All cases for me are when using libraries that I don't have control. Yeah, just like all of us here.)\r\n\r\nAs I understand the current best workaround is to use timers, I made a small hook for it.\r\nThere's no deep thought, so it may contain a potential bug.\r\nhttps://github.com/dai-shi/gqless-hook/blob/d2ee1778cbf3236932b219f332be877b2a5cfd3a/src/useCleanup.ts#L8-L26\r\n```ts\r\nexport const useCleanup = () => {\r\n  type Cleanup = {\r\n    timer: NodeJS.Timeout;\r\n    func: () => void;\r\n  };\r\n  const cleanups = useRef<Cleanup[]>([]);\r\n  const addCleanup = useCallback((func: () => void) => {\r\n    const timer = setTimeout(func, 5 * 1000);\r\n    cleanups.current.push({ timer, func });\r\n  }, []);\r\n  useEffect(() => {\r\n    const cleanupsCurrent = cleanups.current;\r\n    cleanupsCurrent.forEach(({ timer }) => clearTimeout(timer));\r\n    return () => {\r\n      cleanupsCurrent.forEach(({ func }) => func());\r\n    };\r\n  }, []);\r\n  return addCleanup;\r\n};\r\n```\r\nDoes it look OK?","updated_at":"2020-03-26T16:27:08Z","created_at":"2020-03-26T16:27:08Z","creator_user_login":"dai-shi"}
{"number":15317,"comment_id":"716204801","body":"Without cleanup primitives for all cases (if part of a component runs, a final cleanup is a _must_) then this becomes needlessly complex for libraries built on top of React.\r\n\r\nAny libs relying on timeouts, dual phase setup, or whatever, are now relying on React's internal implementation, which makes React less able to migrate to better implementation later without breaking libs.\r\n\r\n---\r\n\r\nAll APIs (whether React, or not) should have creation APIs with reciprocal disposal APIs for _all_ cases. If everyone follows this principal for an API, then all libraries built on top of such API will always have a reliable way to clean up.\r\n\r\nIn React's case,\r\n\r\n- `render` has the potential to allocate memory (especially when using third-party state tracking libs of any sort, no need to understand how they actually work).\r\n- thus `render` should always have a guaranteed reciprocal cleanup method (f.e. `useCancelledEffect` or something like described above, or see idea below) where for every batch of render calls (or even just a single render call) there is always guaranteed to be a cleanup call (f.e. if a component renders at least once, then a cleanup call must always happen after no more render calls will ever happen).\r\n\r\nFollowing these basic principals are the basis of good software design, whether that's in React or anything else.\r\n\r\n---\r\n\r\nAnother idea is maybe update `useEffect` instead supply a cleanup function as a second arg instead of having an effect return it:\r\n\r\n```js\r\nuseEffect(\r\n  () => console.log('instantiate some stuff'),\r\n  () => console.log('destroy some stuff'),\r\n)\r\n```\r\n\r\nthen people interested in writing libs that depend on render use it like this:\r\n\r\n```js\r\nuseEffect(\r\n  () => /*empty, this never runs if render is not committed*/,\r\n  () => console.log('destroy some stuff from that first render'),\r\n)\r\n```\r\n\r\nwhere `useCancelEffect` is effect the same thing but without requiring a first arg.\r\n\r\nMain point: there should be _something_ that can signal to cleanup _if any part_ (at least any reactive part) of the component has ran.","updated_at":"2020-10-25T20:13:13Z","created_at":"2020-10-25T20:11:29Z","creator_user_login":"trusktr"}
{"number":15317,"comment_id":"716205959","body":"@trusktr : React _does_ have a place to do cleanups: in the effect hooks, which will always run _after a committed render_.\r\n\r\nThe entire point of CM is that allocating values that have side effects, while rendering, is not safe because that render might _not_ get committed.\r\n\r\nI understand that you're asking for something _else_ beyond that, but people seem to be dancing around the issue that allocating things with side effects while rendering has never been correct.  Well, now it matters.","updated_at":"2020-10-25T20:21:04Z","created_at":"2020-10-25T20:21:04Z","creator_user_login":"markerikson"}
{"number":15317,"comment_id":"716206379","body":"Seems like the React Hooks effort is battling against the JavaScript language.\r\n\r\nState that will be used in a React component can technically be accessed from anywhere, for example an object with a property that is backed by an accessor that tracks state. And now React team has to explain to users why they shouldn't write code (or use any such library) that uses such language features for dynamic stuff.\r\n\r\nAdding a simple hook (f.e. `onCancelled`) would be fairly simple for React to implement (I think) and it would prevent a lot of complicated code in code written on top of React (namely those state tracking libs). It's a win-win.\r\n\r\n---\r\n\r\nNow react basically has [poor](https://wiki.c2.com/?ClosuresAndObjectsAreEquivalent) [man's](https://stackoverflow.com/questions/2497801/closures-are-poor-mans-objects-and-vice-versa-what-does-this-mean) [classes](https://news.ycombinator.com/item?id=14235020) (`React.FC`, and worse than `class`es because now every \"method\" is re-created on every render), which is effectively the same as instantiating a `class` that  `extends React.Component`, calling its `render` method, and never calling `componentWillUnmount`, which doesn't seem like a good idea.\r\n\r\n---\r\n\r\nIn the code I write (in general, not talking about React) I always try to write explicit cleanup code that is always guaranteed to run after any object (or poor man's class scope) has been instantiated and when that object (or scope) is no longer needed.\r\n\r\nThis is a good practice that naturally leads to code that is easier to manage in the long run and in new and unexpected scenarios that may arise, and at worse a practice that can minimize the size of memory leaks (leaks are too easy to create, especially if never thinking about explicit cleanup, which is a far too common thing for novices to not think about).","updated_at":"2020-10-25T20:46:45Z","created_at":"2020-10-25T20:24:06Z","creator_user_login":"trusktr"}
{"number":15317,"comment_id":"716208517","body":"Besides all of that, isn't an uncommitted render one render too many? Maybe React, basically using poor man's classes, may as well have a `useRender` and the return type of `React.FC` should always be `void`.","updated_at":"2020-10-25T20:46:28Z","created_at":"2020-10-25T20:39:44Z","creator_user_login":"trusktr"}
{"number":15317,"comment_id":"716209498","body":"@trusktr No idea what you're trying to say with that last bit.\r\n\r\nHere's the canonical reason why a render might get thrown away:\r\n\r\n- React starts a low-priority render pass (say, due to an AJAX response coming in)\r\n- React pauses partway through the render pass due to frame timing limits.  It's called `render()` for half of the components in the tree so far.\r\n- During the pause, the user presses a key in an input\r\n- This starts a high-priority render pass.  React executes that render pass immediately and commits it\r\n- React now returns to the low-priority render pass that was interrupted. The input potentially changed a lot about what _should_ be rendered right now - maybe some components got unmounted or something.\r\n- Therefore, some or all of the WIP component render output gets thrown away as React recalculates what the new UI should look like by applying the \"received AJAX data\" state change on top of the \"input update\" committed component tree.\r\n\r\nSo, where in that process is React supposed to do additional cleanup work, when it has no idea what side effects happened in _your_ code, and those renders were never committed?\r\n\r\nThe question here shouldn't be \"how can I clean up work that got thrown away?\"  It should be \"how do I do my work once I know that the component has actually mounted?\"\r\n\r\nIf there are truly use cases that _aren't_ solvable with the current primitives that React provides, then the community should collect a list of specific use cases that are completely incapable of being solved so that we can figure out what primitives _are_ needed.\r\n\r\nBut so far most of what I seem to be seeing in all these different discussions is \"I've been breaking the rules and now that's going to cause me problems, how can I keep breaking the rules without it causing me problems?\".","updated_at":"2020-10-25T20:46:46Z","created_at":"2020-10-25T20:46:46Z","creator_user_login":"markerikson"}
{"number":15317,"comment_id":"716210926","body":"We’re focused on the “interruption” case but that’s not the only one where this matters. Another example you can think of is a hypothetical gesture API that generates keyframe animations between multiple states (e.g. an image gallery that you can scrub through with your finger). In this case we’d want to do several render passes to precalculate the keyframes, but none of them get committed until you lift the finger. So this notion of “cleanup” becomes really confusing because the thing you are “cleaning up” was never committed to the screen in the first place. It doesn’t have any particular lifetime.\r\n\r\nThe point we’re trying to make is that rendering is considered a process that should not allocate resources beyond what a traditional GC would collect. Because even if we built a user-space collector for it, it would have poorer performance characteristics and undermine the ability to do these renders fast. Since now we can’t just throw away trees. This undermines all the features that we’re building on top of it.\r\n\r\nThat said, you could just rely on GC eventually. The WeakRef proposal lets you add some cleanup logic. Its timing would not be deterministic, but neither would it be for a similar React-managed mechanism. So this seems like the longer term solution for the rare cases where you can’t use an effect and for some reason have to allocate a resource during render. ","updated_at":"2020-10-25T20:57:45Z","created_at":"2020-10-25T20:57:45Z","creator_user_login":"gaearon"}
{"number":15317,"comment_id":"716211171","body":"I think of the canonical reason why a render might get thrown away as the following:\r\n\r\n- because there's no way to prevent a React.FC from returning something, so basically they always \"render\" because they always construct a vdom tree. Otherwise, with an idea like `useRender` in my last comment, React could selectively skip renders for any of the reasons you listed (saving CPU and memory cost, and avoiding the above problem in a different way).\r\n\r\n> So, where in that process is React supposed to do additional cleanup work, when it has no idea what side effects happened in your code, and those renders were never committed?\r\n\r\n\r\nWhy should any library like React ever need to know about side effects in _my_ code? It should never need to know. It should only provide a guaranteed cleanup method (after all, it's (poor man's) classes at this point).\r\n\r\n> \"how do I do my work once I know that the component has actually mounted?\"\r\n\r\nWhen using only the React APIs, then that question is already answered with `useEffect`. But as mentioned above, people are making other libraries that are activated by a React.FC being called and there being cases when the FC is called and no cleanup opportunity is presented.\r\n\r\nThis problem is the same as a `class` constructor being ran and instantiating third-party state tracking libs, but no reciprocal cleanup method ever being called and thus those libs tracking state forever. That's exactly what the body of a `React.FC` is: the `constructor` of a poor man's class, and React not every calling a cleanup \"method\" at any point in the future if that component has not been \"committed\".\r\n\r\n---\r\n\r\nImagine writing all C++ classes without destructors. That's the same issue.","updated_at":"2020-10-25T21:00:45Z","created_at":"2020-10-25T20:59:59Z","creator_user_login":"trusktr"}
{"number":15317,"comment_id":"716213149","body":"> But as mentioned above, people are making other libraries that are activated by a React.FC being called and there being cases when the FC is called and no cleanup opportunity is presented.\r\n\r\nWe’re going in circles but let me reply to this. People can write any kinds of libraries — we can’t stop them. But the React component contract has always emphasized that the render method is meant to be a pure function of props and state. This makes it throwaway-friendly. It is *not* intended as a constructor, in fact it’s the other way around — it’s React *classes* that act as poor approximations of functions. Which is why React is converging on a stateful function API now.\r\n\r\nIf a library chooses to ignore the rules and mutate a list of subscriptions during render, it is its business. But it shouldn’t be surprising that when we add new higher-level features to React that rely on the component contract having a pure render method, those features may not work. I think it’s fair to say that render being pure is well-documented and one of the very first things people learn about React. ","updated_at":"2020-10-25T21:17:07Z","created_at":"2020-10-25T21:15:53Z","creator_user_login":"gaearon"}
{"number":15317,"comment_id":"716256511","body":"That's all fair enough. It's React team's library, and React team has the right to say how React is supposed to be used and does not need to support everyone else's alternative paradigms.\r\n\r\n---\r\n\r\nThat being said,\r\n\r\n> It is not intended as a constructor\r\n\r\nThat may be the intent, but by providing ways to define method-like things (f.e. `useEffect`) the FC body has become _similar_ to a constructor because the \"instance\" (the lexical scope) has the ability to have long lived things associated with it after creation (normally those things are created in something like `useEffect`, not in the function body itself) including DOM objects.\r\n\r\nActually, the \"instance\" is the cumulative set of scopes from every time that the FC has been called in its life time (a very important but subtle difference, sometimes a confusing one).\r\n\r\nThe similarity of FCs to classes may be an unintentional invitation for code that creates state at the beginning. The render (f.e. the FC return value) is the only thing that an external dependency-tracking system can rely on for tracking dependencies used for rendering. \r\n\r\n---\r\n\r\nSomething like `onCancel` (or whatever name it would have) seems like a very easy way to solve this problem.","updated_at":"2020-10-26T19:09:48Z","created_at":"2020-10-26T01:40:01Z","creator_user_login":"trusktr"}
{"number":15317,"comment_id":"716447003","body":"To solve this, what I did is to treat my own objects to have a dispose/cleanup logic, and created a hook similar to what @dai-shi created:\r\n\r\n```tsx\r\nfunction useDispose(dispose) {\r\n  // schedule a cleanup, 16 could be a good number.\r\n  const timeout = setTimeout(dispose, 64);\r\n  // cancel the scheduled cleanup if the side-effects went through.\r\n  useEffect(() => {\r\n    clearTimeout(timeout);\r\n  }, [timeout]);\r\n}\r\n```\r\n\r\nThis worked, in my case, specially just to prevent an external source (e.g. an object that subscribes to multiple events) from subscribing twice.","updated_at":"2020-10-26T10:11:46Z","created_at":"2020-10-26T10:10:18Z","creator_user_login":"lxsmnsyc"}
{"number":15317,"comment_id":"716475209","body":"> Actually, the \"instance\" is the cumulative set of scopes from every time that the FC has been called in its lifetime (a very important but subtle difference, sometimes a confusing one).\r\n\r\nThis mental model is not correct - some render calls can be freely dropped by React so it's a false assumption to think about an instance being a cumulative set of scopes from every time that FC has been called in its lifetime. If anything it's a cumulative set of **committed** scopes. This distinction is very important in understanding how to obey React rules.\r\n\r\nIt has been mentioned here in the thread already - but those rules are **old**. They just start to be way more important now but breaking those rules probably has caused mem leaks and similar problems in the past already. \r\n\r\nI can't say about the community as a whole but it has always been quite clear for me that `constructor` in a React's class was not an appropriate place for side-effects and while it was maybe annoying at times I just have always used such logic to `componentDidMount` and usually had no problem with that. It was a simple refactor. ","updated_at":"2020-10-26T11:06:46Z","created_at":"2020-10-26T11:02:57Z","creator_user_login":"Andarist"}
{"number":15317,"comment_id":"716532493","body":"> Adding a simple hook (f.e. `onCancelled`) would be fairly simple for React to implement (I think) and it would prevent a lot of complicated code in code written on top of React (namely those state tracking libs). It's a win-win.\r\n\r\nYou are right that it would be *easy* to add such a hook. The reason we haven't done it is that it would have a *significant negative impact on performance*.\r\n\r\n> I think of the canonical reason why a render might get thrown away as the following:\r\n>\r\n> - because there's no way to prevent a React.FC from returning something, so basically they always \"render\" because they always construct a vdom tree. Otherwise, with an idea like `useRender` in my last comment, React could selectively skip renders for any of the reasons you listed (saving CPU and memory cost, and avoiding the above problem in a different way).\r\n\r\nUnless I'm reading this comment wrong, I think it's a misconception. A component can already return `null` to say that it does not want to render anything. That is not the reason a render may be thrown away. There are a few reasons why React might not commit the value rendered by a component, including:\r\n* Something else scheduled a higher priority update (an interruption)\r\n* Another component threw an error\r\n* Another component suspends to wait on loading data\r\n* The pre-rendering animation use case Dan mentioned above","updated_at":"2020-10-26T13:14:57Z","created_at":"2020-10-26T13:05:05Z","creator_user_login":"bvaughn"}
{"number":15317,"comment_id":"716554673","body":"@bvaughn @gaearon Are you considering a system for push-based subscriptions that coöperate with the component lifecycle by any chance? I still find it to be a little odd that most systems are rather pull-based once they instantiate their state, i.e. outside of effects we prefer to be able to get either \"snapshots\" (`useMutableSource`) or the state directly (`useSubscription`). The same goes for suspense, it's all rather dependent on having pull-based state/effect sources.\r\n\r\nI think a lot of problems could be solved if there was a way to make push-based systems work better together with React's hooks & lifecycles. This would indeed be rather novel, but I think it'd fix this. This is especially important for derived event sources, where the state isn't pull-accessible. Currently in `urql` we work around this by creating a state snapshot by subscribing & unsubscribing to our source to get a current one-time snapshot of our state.\r\n\r\nHowever, if state was tied to some kind of observable source from the start of a component lifecycle, similar to how `useMutableSource` prevents tearing and forces the source into a more coöperative timing, it'd have a good method of ensuring that a synchronous event would lead to a valid initial state and that subsequent events would have a sufficient amount of backpressure applied to them — in other words, a push-event would still act just like a normal state setter today.","updated_at":"2020-10-26T13:43:41Z","created_at":"2020-10-26T13:43:41Z","creator_user_login":"kitten"}
{"number":15317,"comment_id":"716579021","body":"> If there are truly use cases that aren't solvable with the current primitives that React provides, then the community should collect a list of specific use cases that are completely incapable of being solved so that we can figure out what primitives are needed.\r\n\r\nHere's the issue in Meteor. Meteor uses a computation for setting up observers on \"reactive\" sources, based on accesses to those sources on the first run of the computation function. It does that in the render pass now, with some caveats. We could simply turn off the observer for the render pass, then run it again in `useEffect` - in this case it would always need to run again, because state might change between render and `useEffect`. We currently use timers to try and avoid that, but we already had to disabled that for one case to support StrictMode, and it's proving unmaintainable.\r\n\r\nThe question is, if we have to run our setup code a second time on commit, is it really earning performance, or just moving the performance hit off to other parts of the app? Then again, in most cases in Meteor, it's probably not a big deal to run the computation again - most computations are relatively cheap, unless there is some huge complex mini mongo query or something\r\n\r\nI went down the rabbit hole of trying to pull that out in to a data source, as described in the \"suspense for data\" section in the React docs, but that has a number of problems. Primarily, it complicates what is otherwise a clear and easy API for us (with `useTracker` - except for deps, developers regularly mess up deps), but it also felt like I was just picking up that kicked down the road performance work, and things were getting COMPLICATED. Ultimately, I couldn't figure out a real great way to make an externalized API like that work because of various scoping issues, and the complexity of basically rebuilding redux with a sort of dependency injected inversion of control system (which is where I was headed) felt like a step backwards.","updated_at":"2020-10-26T14:21:51Z","created_at":"2020-10-26T14:21:51Z","creator_user_login":"CaptainN"}
{"number":15317,"comment_id":"716583144","body":"@CaptainN : fwiw, that \"might need to run again because state could have changed before the effect\" part sounds _exactly_ like how the new `useMutableSource` hook is intended to work.  Have you looked at that at all?","updated_at":"2020-10-26T14:28:10Z","created_at":"2020-10-26T14:28:10Z","creator_user_login":"markerikson"}
{"number":15317,"comment_id":"716585100","body":"I've also hit a few times the case of a component needing to instantiate objects tied to the WASM heap. In those cases there is no garbage collection to rely on for freeing uncommitted resources (not yet, at the very least), so the only choices seem to be to enter a world of double-renders with `useLayoutEffect`, or to break the CM assumptions. I'm currently doing the first, but it seems prone to degraded performances should those components be nested a bit too much.\r\n\r\n[edit] I made a search on \"WASM\" before sharing my experience, but I think the following comment is pretty much what the React team would answer to that: https://github.com/facebook/react/issues/15317#issuecomment-716210926\r\n\r\n> That said, you could just rely on GC eventually. The WeakRef proposal lets you add some cleanup logic. Its timing would not be deterministic, but neither would it be for a similar React-managed mechanism. So this seems like the longer term solution for the rare cases where you can’t use an effect and for some reason have to allocate a resource during render.\r\n\r\nUnfortunately it'll be years before WeakRef reaches general availability. I guess it can work if CM takes years too 😛","updated_at":"2020-10-26T14:37:29Z","created_at":"2020-10-26T14:31:02Z","creator_user_login":"arcanis"}
{"number":15317,"comment_id":"716591453","body":"@markerikson I did look at that a few months back, but wasn't sure exactly what that does or how (or if it was ready for use) -  is that finalized or still in RFC? Last time I looked at it, I thought it would drop any component using it in to a \"deopt\" mode, opting out of the benefits of concurrent mode for that component, and wanted to see if I could keep the benefits. \r\n\r\nIt's on my list to pursue a `useMutableSource` based solution for a future version the generic `useTracker` (or simply eat the second setup pass) while moving to a new more tailored set of hooks to integrate React with Meteor, which can be implemented in the pure way, without a ton of complexity. [Those hooks already look better.](https://github.com/meteor/react-packages/pull/298)\r\n\r\n","updated_at":"2020-10-26T14:40:56Z","created_at":"2020-10-26T14:40:56Z","creator_user_login":"CaptainN"}
{"number":15317,"comment_id":"716594383","body":"@CaptainN : `useMutableSource` has been merged in, but I _think_ it's still only available in \"experimental\" builds.  The \"deopt\" behavior as I understand it only kicks in in certain situations.\r\n\r\nNot saying it's going to magically fix your problems, but I think you should go review the RFC and PR discussions around it and give it a shot to see if it does potentially address your use case.","updated_at":"2020-10-26T14:45:29Z","created_at":"2020-10-26T14:45:29Z","creator_user_login":"markerikson"}
{"number":15317,"comment_id":"716616573","body":"> But the React component contract has always emphasized that the render method is meant to be a pure function of props and state.\r\n\r\n@gaearon Functions components that use hooks are not pure in the most general cases (i.e., unless you find a hook that is actually pure). I am not sure what is the render method you are referring to. I assume you are referring to the render method use in React's class API? That render method should indeed be a pure function of the parameters it is passed, as it is documented. But then there seems to be some confusion in your next assertion:\r\n\r\n> But it shouldn’t be surprising that when we add new higher-level features to React that rely on the component contract having a pure render method, those features may not work. I think it’s fair to say that render being pure is well-documented and one of the very first things people learn about React.\r\n\r\nThe component contract you are referring to is the class component contract. If you get rid of class components, you get rid of that contract. Then function components (if they use hooks) renounced to purity so you can't really refer there to a pure render here. Given that functional components and concurrent mode are a new thing, why not clarify the new contracts for the new thing? That takes possibly wrong assumptions out of the way together with the bugs they create. This especially applies to concurrent mode as it seriously changes what was assumed to be a contract in former React versions. Some people continue to think that it is React as usual apart from cosmetic changes but it is really a fundamental change. I am not sure this has been captured yet in the documentation.\r\n","updated_at":"2020-10-26T15:18:02Z","created_at":"2020-10-26T15:18:02Z","creator_user_login":"brucou"}
{"number":15317,"comment_id":"716622867","body":"> I am not sure what is the render method you are referring to.\r\n\r\n```js\r\nclass ClassComponent extends React.Component() {\r\n  // ...\r\n\r\n  render() {\r\n    // This is a render method and should be pure.\r\n  }\r\n}\r\n\r\nfunction FunctionComponent(props) {\r\n  // This is also a render method and should be pure.\r\n\r\n  // Built-in hooks (e.g. React.useState) are an exception\r\n  // because they are explicitly managed by React\r\n  // and so are more like locally created variables.\r\n}\r\n```","updated_at":"2020-10-26T15:28:34Z","created_at":"2020-10-26T15:26:57Z","creator_user_login":"bvaughn"}
{"number":15317,"comment_id":"716623595","body":"Can't MobX just use a [FinalizationRegistry](https://github.com/tc39/proposal-weakrefs) @mweststrate ?","updated_at":"2020-10-26T15:27:55Z","created_at":"2020-10-26T15:27:55Z","creator_user_login":"benjamingr"}
{"number":15317,"comment_id":"716659915","body":"@bvaughn The second case (FunctionComponent) is a function. Methods usually refer to functions within classes (or by extension objects). Then, again, it is not accurate to say that function components should be pure when them being impure is far from being an edge case (due to hooks usage). There is no such thing like an impure function that is like a pure function except this or that. People get confused precisely because we use the same words to mean different things. In the context of computer science, functions that may be impure are usually referred to as procedures. So you may call a function component a render procedure if you will, but not a pure function in a large majority of cases (when they use hooks). Which is one of my points and the reason why people get confused by functional programming notions decaffeinated with exception and metaphors. \r\n","updated_at":"2020-10-26T16:27:35Z","created_at":"2020-10-26T16:20:12Z","creator_user_login":"brucou"}
{"number":15317,"comment_id":"716664154","body":"I'm not looking to debate the semantics of \"methods\" or \"functions\", just addressing your comment that you were \"*not sure what is the render method*\". The answer is: Dan was referring to both class components and function components.","updated_at":"2020-10-26T16:30:38Z","created_at":"2020-10-26T16:26:03Z","creator_user_login":"bvaughn"}
{"number":15317,"comment_id":"716796461","body":"I hear that the documentation does not do a good enough job defining “purity”. This is something we’re keeping in mind for the upcoming docs rewrite.\r\n\r\nOn the other hand, if you take the technical argument that “function components are impure because of Hooks”, I don’t think you can claim that “the class render method is pure” either. After all, it reads `this.props` and `this.state` which are by definition properties on a mutable instance — thereby making any `render` method technically impure. This technicality hasn’t prevented people from understanding that the rendering process in React (whether with a class method or a function component) is meant to be generally pure. But we could definitely be stricter in our definitions and this is good feedback. ","updated_at":"2020-10-26T20:13:45Z","created_at":"2020-10-26T20:13:45Z","creator_user_login":"gaearon"}
{"number":15317,"comment_id":"716844024","body":"@gaeron you are indeed right. The render class method is often impure too. That escaped me. I thought it received props as an argument, but it is true that it gets it from `this`. Actually often the reason why you would use a class is precisely to do this kind of impure things that pure functions does not let you do (this.state). Your point is well taken. \r\n\r\nBut still, whatever it is that you mean by `the rendering process is meant to be generally pure` can probably be expressed in a more precise (albeit more wordy) way. Did you mean something like the vDom should be (generally) computed only from props, context and children --- independently of how you actually get that information, and that effectful components should be the exception and non-effectful components the rule? There is a pattern like that, which combines renderless components and pure components. Or did you simply mean that React functions components can do all kind of things as long as the computation of those things only depends on props, context, children etc and a variety of React APIs? That is, the output (understood as effect executed + computed return value) of function components depend only on inputs and the React runtime state? So basically you don't do effects that do not go through a React API.\r\n\r\nWith concurrent mode, I believe that accuracy is going to be even more important. The hard part is going to have developers build the mental model that shortens debugging sessions and reduce the need for technical support. Of course, examples of usage will help a ton and you have good stuff already on the documentation site. But having consistency in words and meaning (we call that ubiquitous language in TDD) goes a long way too. It was for instance important that React introduced different words for rendering and for committing in order to explain the different operations that React does at different moments and it would be unfortunate to mix one with the other randomly.\r\n","updated_at":"2020-10-27T00:13:50Z","created_at":"2020-10-26T21:51:30Z","creator_user_login":"brucou"}
{"number":15317,"comment_id":"721383797","body":"Random update: in mobx-react-lite we are now [experimenting](https://github.com/mobxjs/mobx-react-lite/pull/332/files) with using a [FinalizationRegistery](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/FinalizationRegistry) as suggested (and executed) by @bnaya / @benjamingr. So far it looks quite promising and something that could be abstracted away in a generic hook (possibly with a timer based fallback). \r\n\r\nThe two liner summary of the approach is that in the component some a local object is allocated and stored using useState: `const [objectRetainedByReact] = React.useState({})`. With a finalizationRegistery we can then register a callback to get a notification when the `objectRetainedByReact` is garbage collected by the JS engine, which should be a safe heuristic that a an instance wasn't committed. \r\n\r\n ","updated_at":"2020-11-03T21:28:47Z","created_at":"2020-11-03T21:28:47Z","creator_user_login":"mweststrate"}
{"number":15317,"comment_id":"721408206","body":"Interesting. So, it doesn't even check if it's committed with useEffect. Should we expect JS engine not to garbage collect objects very soon if there's enough free memory?","updated_at":"2020-11-03T22:31:16Z","created_at":"2020-11-03T22:31:16Z","creator_user_login":"dai-shi"}
{"number":15317,"comment_id":"721409195","body":"It does useEffect to mark comitted, left all the implementation details out\n😉\n\nOn Tue, 3 Nov 2020, 22:31 Daishi Kato, <notifications@github.com> wrote:\n\n> Interesting. So, it doesn't even check if it's committed with useEffect.\n> Should we expect JS engine not to garbage collect objects very soon if\n> there's enough free memory?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/facebook/react/issues/15317#issuecomment-721408206>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAN4NBHHYJZDCAVPTSM4DBDSOCAEPANCNFSM4HDRIAHQ>\n> .\n>\n","updated_at":"2020-11-03T22:33:56Z","created_at":"2020-11-03T22:33:56Z","creator_user_login":"mweststrate"}
{"number":15317,"comment_id":"721558606","body":"Just a small correction, I suggested using FinalizationRegistry (for MobX) - the execution is 100% @Bnaya :] \r\n\r\n(the idea came after discussing the idea ±2 years ago for MobX in some JSConf with Daniel Erhenberg in the context of \"how should Node behave\" and I figured \"what other libraries am I involved with and may use this\")\r\n\r\nMichel had an interesting idea (to make this into a generic hook - `useDisposer` or something) which I believe would be very cool.\r\n\r\n@gaearon I think it would be very useful if you can't commit to cleanup or when cleanup runs if React provided this sort of hook as part of React since the use case is pretty common. Is that something you'd be willing to explore or is that antithetical to the direction you want to see React take?\r\n\r\nIn any case I think it's better to discuss this once @Bnaya is further along with the `useDisposer` work.","updated_at":"2020-11-04T07:21:39Z","created_at":"2020-11-04T07:21:39Z","creator_user_login":"benjamingr"}
{"number":15317,"comment_id":"721566295","body":"Cool. I was going to draft something like `useDisposer` with FinalizationRegistry, but will sit and wait. My two cents is this is still like an escape hatch and is not something like a first recommended pattern.","updated_at":"2020-11-04T07:41:22Z","created_at":"2020-11-04T07:41:22Z","creator_user_login":"dai-shi"}
{"number":15317,"comment_id":"721597171","body":"Is using `FinalizationRegistry` really a good idea? I mean - I understand some part of the frustration coming from people wanting this kind of a feature, I also understand why this is not something that the React team wants to support (unless compelling arguments are found). However, resorting to things like this is a huge bandaid, a hack. I think that no one even would question that. So if this is a hack (and not a small one) - is it worth pursuing? I feel like either idiomatic React approaches should be used - which for some use cases are at least quirky to deal with, I don't have super compelling use cases for myself regarding this as, usually, I can rather easily work around this **or** convince the React team that this is really needed for the community. It's obvious that the React team understands challenges and the use cases mentioned here but those deviate from their model and they are hesitant to implement this as it can actually be a footgun if not used properly, but maybe it's time to gather the people most interested in this in sort-of a focus group that would figure out the path forward? Maybe this happens somewhere in the background - I don't know, but at this point in time this really seems like a stagnant issue. A pretty much the same thing is repeated all over the place from both sides and the discussion seems kinda fruitless. \r\n\r\nIf no consensus is found then I expect such hacks to be actually implemented and used, not because I feel like that they are needed that much but just because of human nature. We all have strong opinions about things and it's inevitable that something like this will exist in the community eventually, question is - can we prevent it? Or at least eliminate it from being needed for more use cases? \r\n\r\nGiven the recent work on the docs - some of the use cases mentioned here should probably be documented there to present what's the React team's stance on them, what are proposed solutions.","updated_at":"2020-11-04T08:49:20Z","created_at":"2020-11-04T08:49:20Z","creator_user_login":"Andarist"}
{"number":15317,"comment_id":"721828820","body":"@Andarist fwiw, my take is that this might be a \"hack\" in the sense of \"well, this really isn't how you _ought_ to be writing your code in the first place based on the rules\", but it may very well be a valid technical solution for MobX's use case and potentially other folks as well.\r\n\r\nGiven that, I wouldn't expect the React team to specifically _recommend_ this approach, but perhaps it can be published as an independent package by whoever's writing it, and the React team could maybe at least document it as a known workaround.","updated_at":"2020-11-04T16:18:11Z","created_at":"2020-11-04T16:18:11Z","creator_user_login":"markerikson"}
{"number":15317,"comment_id":"722627311","body":"Especially as an incremental upgrade approach can be a valid strategy. As new research is going into new patterns.\r\n\r\nHowever, there's one interesting case to think about. The main motivation for FinalizationRegistry to be added to the language _now_ of all times, is because it allows building interop with WASM linear memory (aka array buffers). In a more general sense, it's how you build interop with a tracing GC language and a ref count or manual collection GC language.\r\n\r\nFor any library implementing its backing store in a WASM world, this would be the primary way to interop with it.\r\n\r\nThere are many patterns that might be a bad idea around this (like opening web socket connections without deduplication until the GC runs). The core principle of using FinalizationRegistry to interop with an external memory management library isn't though. That's the point of FinalizationRegistry in the first place.","updated_at":"2020-11-05T20:32:05Z","created_at":"2020-11-05T20:32:05Z","creator_user_login":"sebmarkbage"}
{"number":15317,"comment_id":"731660822","body":"I've created `useDisposeUncommitted` hook, similar to MobX's impl\r\nhttps://www.npmjs.com/package/use-dispose-uncommitted\r\nI've also opened a self-PR to collect feedback on the initial version and api\r\nhttps://github.com/Bnaya/use-dispose-uncommitted/pull/3/files\r\n\r\n","updated_at":"2020-11-22T01:07:24Z","created_at":"2020-11-22T01:07:24Z","creator_user_login":"Bnaya"}
{"number":15317,"comment_id":"751383866","body":"And for anyone like me who ends up here because their jest test uses `observer` and logs:\r\n\r\n> Jest did not exit one second after the test run has completed.\r\n>\r\n> This usually means that there are asynchronous operations that weren't stopped in your tests. Consider running Jest with `--detectOpenHandles` to troubleshoot this issue.\r\n\r\nTry:\r\n\r\n```ts\r\nimport { clearTimers } from \"mobx-react-lite\";\r\n\r\n// at end of your test:\r\nclearTimers();\r\n```\r\n\r\nThis tells the timer-based cleanup to run immediately instead of waiting N seconds.","updated_at":"2020-12-26T18:34:19Z","created_at":"2020-12-26T18:34:19Z","creator_user_login":"danielearwicker"}
{"number":25040,"comment_id":"1218488799","body":"Hey! Thanks for the suggestions! I think they definitely have potential and, I have some initial thoughts:\r\n a. This seems like an interesting solution. It would make it easier to navigate the tree and might help with being able to figure out how many children a parent has. One difference between React DevTools and VSCode/IntelliJ though is that React could have arbitrarily long chains (vs file structures which are usually only so deep). Also, React components tend to have information, so we'd have to figure out the best way for developers to be able to access that (though that shouldn't be too hard).\r\nb. This is also an interesting solution. We'd need a way to denote whether a component is a sibling or a single child of the parent component though.\r\n\r\nOverall this is a really interesting idea though, and we'd love to think about this further!","updated_at":"2022-08-17T21:04:15Z","created_at":"2022-08-17T21:04:15Z","creator_user_login":"lunaruan"}
{"number":14099,"comment_id":"436632800","body":"@gaearon thank you for your answer in reactjs/rfcs#83. I've look at sources of `useReducer`. But I can't understand how it is related to `useCallback`. What issues has \"mutation of ref during rendering\"? Can you explain me in brief?","updated_at":"2018-11-07T14:03:44Z","created_at":"2018-11-07T14:03:44Z","creator_user_login":"edkalina"}
{"number":14099,"comment_id":"436647120","body":"> I've look at sources of useReducer. But I can't understand how it is related to useCallback\r\n\r\n`useCallback` lets you memoize the callback to avoid a different function being passed down every time. But you have to specify everything it depends on in the second array argument. If it's something from props or state, your callback might get invalidated too often.\r\n\r\n`useReducer` doesn't suffer from this issue. The `dispatch` function it gives you will stay the same between re-renders even if the reducer itself closes over props and state. This works because the reducer runs during the next render (and thus has natural ability to read props and state). It would be nice if `useCallback` could also do something like this but it's not clear how.\r\n\r\n>What issues has \"mutation of ref during rendering\"? Can you explain me in brief?\r\n\r\nIn concurrent mode (not yet released), it would \"remember\" the last rendered version, which isn't great if we render different work-in-progress priorities. So it's not \"async safe\".","updated_at":"2018-11-07T14:47:32Z","created_at":"2018-11-07T14:47:32Z","creator_user_login":"gaearon"}
{"number":14099,"comment_id":"437619579","body":"Would be nice if second argument of `useCallback` was injected as dependencies to callback function.\r\n\r\n```javascript\r\n  function useCallback(cb, deps) => {\r\n    lastDeps = deps; // save current deps and cb deep in somewhere\r\n    lastCb = cb;\r\n\r\n    if (!cached) {\r\n      cached = (...args) => lastCb(...lastDeps)(...args); // memoize that forevere\r\n    }\r\n\r\n    return cached; // never invalidates\r\n  }\r\n\r\n  const myCallback = useCallback(\r\n    (state, props) => (a, b) => a + b + state + props,\r\n    [state, props]\r\n  );\r\n\r\n  myCallback(1, 2)\r\n```","updated_at":"2018-11-14T09:19:20Z","created_at":"2018-11-10T20:38:30Z","creator_user_login":"strayiker"}
{"number":14099,"comment_id":"439826037","body":"``` js\r\nconst useCallback = (fn, args) => {\r\n  const callback = useMemo(() => {\r\n    if (__DEV__) {\r\n      if (fn.length !== args.length) warning(...);\r\n    }\r\n    const callback = () => fn(...callback.args);\r\n    return callback;\r\n  });\r\n  useEffect(() => callback.args = args, [args]);\r\n  return callback;\r\n}\r\n```\r\n\r\nDrawbacks:\r\n\r\nIt's easy to forget the arguments list, which would result in hard to find bugs. In dev mode it would make sense to check fn.length for the correct length.\r\n\r\nIt's still possible to forget arguments in the dependencies array, but this applies to other hooks too.","updated_at":"2018-11-19T09:26:45Z","created_at":"2018-11-19T09:26:45Z","creator_user_login":"sokra"}
{"number":14099,"comment_id":"439922530","body":"Yes, that's the approach from https://github.com/reactjs/rfcs/issues/83 and https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback. We don't want it to be default because it's easier to introduce bugs in concurrent mode this way.","updated_at":"2018-11-19T15:02:11Z","created_at":"2018-11-19T15:02:11Z","creator_user_login":"gaearon"}
{"number":14099,"comment_id":"440013892","body":"@sokra An alternate would be:\r\n\r\n```js\r\nfunction useEventCallback(fn) {\r\n  let ref = useRef();\r\n  useLayoutEffect(() => {\r\n    ref.current = fn;\r\n  });\r\n  return useCallback(() => (0, ref.current)(), []);\r\n}\r\n```\r\n\r\nThis doesn't require the args like yours has. But again, you can't call this in the render phase and the use of mutation is dicey for concurrent.","updated_at":"2018-11-19T19:30:53Z","created_at":"2018-11-19T19:30:53Z","creator_user_login":"sophiebits"}
{"number":14099,"comment_id":"440172008","body":"@sophiebits That's clever and would have none of the problems with args, etc. It even doesn't require a dependencies list.\r\n\r\nOne nitpick: `return useCallback((...args) => (0, ref.current)(...args), []);` to pass along i. e. `event` argument.","updated_at":"2018-11-20T07:31:23Z","created_at":"2018-11-20T07:31:09Z","creator_user_login":"sokra"}
{"number":14099,"comment_id":"440177160","body":"@sokra With this you will not be able to access to state and props updates inside a callback.\r\n```javascript\r\nconst [state, setState] = useState(0);\r\n\r\nconst handleClick = useCallback((event) => {\r\n  console.log(state); // always 0\r\n  setState(s => s + 1);\r\n});\r\n\r\nreturn <button onClick={handleClick} />\r\n```\r\nSo dependencies are required.\r\n\r\n```javascript\r\nfunction useCallback(fn, deps) {\r\n  const fnRef = useRef(fn);\r\n  const depsRef = useRef(deps);\r\n\r\n  useLayoutEffect(() => {\r\n    fnRef.current = fn;\r\n    depsRef.current = deps;\r\n  });\r\n\r\n  return useCallback((...args) => (0, ref.current)(...depsRef.current)(...args), []);\r\n}\r\n```\r\n\r\n```javascript\r\ncons handleClick = useCallback(\r\n  (state) => event => console.log(state), // up-to-date\r\n  [state]\r\n);\r\n```","updated_at":"2018-11-20T08:01:10Z","created_at":"2018-11-20T07:54:25Z","creator_user_login":"strayiker"}
{"number":14099,"comment_id":"440187797","body":"> @sokra With this you will not be able to access to state and props updates inside a callback.\r\n\r\nI think with @sophiebits' approach this will work. The latest function is always copied into the ref and only a trampoline function is returned. This will make sure that the latest function is called, which has the latest state in context.","updated_at":"2018-11-20T08:36:12Z","created_at":"2018-11-20T08:36:12Z","creator_user_login":"sokra"}
{"number":14099,"comment_id":"440717985","body":"I recently made a duplicate issue and was asked to check this one. What I proposed there was very similar to @sophiebits' approach, but still looks a bit simpler to me:\r\n\r\n```JavaScript\r\nfunction useStatic(cb) {\r\n  const callback = useRef(cb)\r\n  callback.current = cb\r\n\r\n  const mem = useRef((...args) => callback.current(...args))\r\n  return mem.current\r\n  \r\n  // We could, of course still, use the useCallback hook instead of a second reference.\r\n  // return useCallback((...args) => callback.current(...args), [])\r\n  // Although I think that the one above is better since it avoids the need to compare anything at all.\r\n}\r\n```\r\n\r\nThis way it is guaranteed to update where the hook is called since it does not directly use any side effect and instead it only updates a reference. It seems to me that it should be callable during the render phase and should not be dicey with concurrent mode (unless references don't meet these two conditions). Wouldn't this approach be a little better or am I missing something?","updated_at":"2018-11-21T16:04:29Z","created_at":"2018-11-21T15:59:34Z","creator_user_login":"muqg"}
{"number":14099,"comment_id":"440794435","body":"@muqg In concurrent mode, last render doesn't necessarily mean \"latest committed state\". So a low-priority render with new props or state would overwrite a reference used by current event handler.","updated_at":"2018-11-21T20:09:03Z","created_at":"2018-11-21T20:09:03Z","creator_user_login":"gaearon"}
{"number":14099,"comment_id":"440853271","body":"If I understand the problem correctly...\r\n\r\nWhat if useCallback will return a special callable object with two different states of an our callback function? The first is a `current` callback, that will changes on each render. The second is a `commited` callback, that changes within a commit phase.\r\nBy default call to that object will trigger the `current` value, so it can be used in render phase. \r\nBut internally, React will pass the `commited` value to the dom, which prevents the callback from being modified until the next commit.\r\n\r\n```javascript\r\nfunction Callback(cb) {\r\n  function callback(...args) {\r\n    return callback.current(...args);\r\n  }\r\n\r\n  callback.commited = cb;\r\n  callback.current = cb;\r\n  callback.SPECIAL_MARKER_FOR_REACT = true;\r\n\r\n  return callback;\r\n}\r\n\r\nfunction useCallback(cb) {\r\n  const callback = useMemo(() => new Callback(cb), []);\r\n\r\n  callback.current = cb;\r\n  \r\n  useLayoutEffect(() => {\r\n    callback.commited = cb;\r\n  });\r\n\r\n  return callback;\r\n}\r\n```\r\n```javascript\r\nfunction Component(counter) {\r\n  const handler = useCallback(() => {\r\n    console.log(counter);\r\n  });\r\n\r\n  handler(); // call to handler.current\r\n\r\n  // pass handler.commited to the dom\r\n  return <button onClick={handler} />\r\n}\r\n```","updated_at":"2018-11-23T14:41:47Z","created_at":"2018-11-21T23:53:21Z","creator_user_login":"strayiker"}
{"number":14099,"comment_id":"440898471","body":"I don't think there is a point in saving the \"current\", if you want to call it during rendering, just save it in advance out of the hook:\r\n```\r\nconst handler = () => {/* do something*/};\r\nconst callback = useCallback(handler);\r\n// I can call the current:\r\nhandler();\r\n```\r\n----\r\nI personally don't see any benefits of the current `useCallback` implementation over the proposed `useEventCallback`, will it become the new implementation?\r\nAlso, can it warn when the callback is called during render in development mode?","updated_at":"2018-11-22T03:00:46Z","created_at":"2018-11-22T03:00:46Z","creator_user_login":"Volune"}
{"number":14099,"comment_id":"440946678","body":"Concurrent mode can produce two different representations of a component (the first one is that commited to the dom and the second one is that in memory). This representations should behaves accordingly with their props and state.\r\n\r\n`useEventCallback` by @sophiebits mutates `ref.current` after all dom mutations is completed, so the `current` (in-memory) component can't use the newest callback until the commit is done.\r\n\r\n@muqg proposal mutate the callback on each render, so the `commited` component will lose the reference to the `old` callback.\r\n\r\nThe point of my proposal in the passing a separated callback reference, that will changes in commit phase, to the dom, while the in-memory (not commited) representation of a component can use the latest version of that callback.\r\n\r\n```javascript\r\nconst handler = () => {/* do something*/};\r\nconst callback = useCallback(handler);\r\n```\r\nIn this case, you wont pass down the `handler` to other components because it always changes. You will pass the `callback`, but will face again the concurrent mode problem.","updated_at":"2018-11-22T11:03:39Z","created_at":"2018-11-22T08:12:02Z","creator_user_login":"strayiker"}
{"number":14099,"comment_id":"447230163","body":"Hi.\r\nAccording to @sophiebits `useEventCallback` implementation why is it \r\nfunction uses `useLayoutEffect` and not `useEffect` for `ref` updating?\r\nAnd is it normal due to current limitations use `useEventCallback` for all internal regular functions with some logic (which wants be memoized for \r\nusing in expensive pure components tree or/and has closured variables from outer hook function) inside custom hook?","updated_at":"2018-12-14T07:47:03Z","created_at":"2018-12-14T06:37:00Z","creator_user_login":"Voronar"}
{"number":14099,"comment_id":"450527953","body":"How/why is it that variables are dereferenced within `useEffect`?\r\n\r\nWhether or not the effect is called again based on changes to state/reducer/etc (`useEffect`'s second param), shouldn't have any implication on those variable's references within `useEffect`, right?\r\n\r\nThis behavior seems unexpected and having to leverage \"escape hatches\" just feels broken to me.","updated_at":"2018-12-29T23:24:06Z","created_at":"2018-12-29T23:24:06Z","creator_user_login":"jonnyasmar"}
{"number":14099,"comment_id":"451655339","body":"I have a problem with converting this kind of thing to use functional components and the useCallback hook...\r\n\r\n```\r\nexport class TestForm extends React.Component {\r\n\r\n    onChangeField = (name,value) => {\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    render () {\r\n        const state = this.state;\r\n        return (\r\n            <>\r\n                <PickField name=\"gender\"      value={state.gender}      onChangeField={this.onChangeField} />\r\n                <TextField name=\"firstName\"   value={state.firstName}   onChangeField={this.onChangeField} />\r\n                <TextField name=\"lastName\"    value={state.lastName}    onChangeField={this.onChangeField} />\r\n                <DateField name=\"dateOfBirth\" value={state.dateOfBirth} onChangeField={this.onChangeField} />\r\n            </>\r\n        );\r\n    }\r\n```\r\n\r\nThe PickField, TextField and DateField components can be implemented with React.PureComponent or React.memo(...). Basically they just display an input field and a label - they have their own onChange handler which calls the onChangeField prop passed in. **They only redraw if their specific value changes**\r\n\r\n_onChangeField_ as above works just fine - but if I try this using a functional component for TestForm and _useCallback_ for onChangeField I just can't get it to 'not' redraw everything on a single field change\r\n\r\n\r\n","updated_at":"2019-01-05T13:28:48Z","created_at":"2019-01-05T13:28:48Z","creator_user_login":"Bazzer588"}
{"number":14099,"comment_id":"451697211","body":"@Bazzer588 Are you using React.memo on your functional component? What do your attempts using hooks/functional look like? Your problem may or may not be related to this issue; it's hard to tell without seeing your code.","updated_at":"2019-01-05T22:33:00Z","created_at":"2019-01-05T22:33:00Z","creator_user_login":"jonnyasmar"}
{"number":14099,"comment_id":"451765812","body":"Here's the full code - just drop a `<TestForm/>` or a `<HookTestForm/>` somewhere on a page\r\n\r\nUsing a React.Component, only the field being editted does a full render\r\n\r\n```\r\nimport React from 'react';\r\nimport TextField from \"./TextField\";\r\n\r\nexport default class TestForm extends React.Component {\r\n\r\n    onChangeField = (name,value) => {\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    render () {\r\n        const state = this.state || {};\r\n        return (\r\n            <>\r\n                <TextField name=\"gender\"      value={state.gender}      onChangeField={this.onChangeField} />\r\n                <TextField name=\"firstName\"   value={state.firstName}   onChangeField={this.onChangeField} />\r\n                <TextField name=\"lastName\"    value={state.lastName}    onChangeField={this.onChangeField} />\r\n                <TextField name=\"dateOfBirth\" value={state.dateOfBirth} onChangeField={this.onChangeField} />\r\n            </>\r\n        );\r\n    }\r\n}\r\n```\r\n\r\nUsing Hooks, all the child elements are re-rendered every time - presumably as onChangeField changes every time the state data changes. Is there some way I can implement onChangeField so it behaves like the above example?\r\n\r\n```\r\nimport React, {useState, useCallback} from 'react';\r\nimport TextField from \"./TextField\";\r\n\r\nexport default React.memo( () => {\r\n\r\n    const [data, changeData] = useState({});\r\n\r\n    const onChangeField = useCallback((name,value) => {\r\n        changeData({ ...data, [name]: value });\r\n    }, [data] );\r\n\r\n    return (\r\n        <>\r\n            <TextField name=\"gender\"      value={data.gender}      onChangeField={onChangeField} />\r\n            <TextField name=\"firstName\"   value={data.firstName}   onChangeField={onChangeField} />\r\n            <TextField name=\"lastName\"    value={data.lastName}    onChangeField={onChangeField} />\r\n            <TextField name=\"dateOfBirth\" value={data.dateOfBirth} onChangeField={onChangeField} />\r\n        </>\r\n    );\r\n});\r\n```\r\n\r\nThis is my `<TextField>` component - you can see when it does a full render from the console or with the React dev tools\r\n\r\n```\r\nimport React from 'react';\r\n\r\nexport default React.memo( ({ name, value, onChangeField }) => {\r\n\r\n    console.log('RENDER TEXT FIELD',name,value);\r\n\r\n    return (\r\n        <div className=\"form-field\">\r\n            <label htmlFor={name}>{name}</label>\r\n            <input\r\n                type=\"text\"\r\n                onChange={ (ev) => onChangeField( name, ev.target.value ) }\r\n                value={value || ''}\r\n            />\r\n        </div>\r\n    );\r\n});\r\n\r\n```\r\n","updated_at":"2019-01-06T19:07:55Z","created_at":"2019-01-06T19:04:26Z","creator_user_login":"Bazzer588"}
{"number":14099,"comment_id":"451770188","body":"@Bazzer588 I think its due to the object value kept in state under the variable name of `data`. I don't know why but objects in state always invalidate memoization and  thus your callback `onChangeField` is a new on on each render thus breaking the memoization of the components you're passing it to.\r\n\r\nI've had a similar issue like you and noticed this as being its cause. I have no idea why the object in state does not keep its reference when it has not been explicitly set to a new object.","updated_at":"2019-01-06T20:03:18Z","created_at":"2019-01-06T20:03:18Z","creator_user_login":"muqg"}
{"number":14099,"comment_id":"451771122","body":"Yes my problem is that the in first example (using React.Component) I can create a _onChangeField_ callback which is bound to _this_, and never changes during renders\r\n\r\nUsing the new hook methods I can't seem to replicate the way the existing functionality works, \r\n\r\nOn the project I'm working on we often do this to have a hierachy of components and state:\r\n\r\n```\r\n    onChangeField = (fieldName,fieldValue) => {\r\n        const newValue = { ...this.props.value, [fieldName]: fieldValue };\r\n        this.props.onChangeField( this.props.name, newValue );\r\n    };\r\n```\r\nSo it passes props down the tree (ie value {})\r\nAnd uses the callback to send new values up the tree\r\n\r\n","updated_at":"2019-01-06T20:16:07Z","created_at":"2019-01-06T20:16:07Z","creator_user_login":"Bazzer588"}
{"number":14099,"comment_id":"451771878","body":"> Using the new hook methods I can't seem to replicate the way the existing functionality works,\r\n\r\nUse `useReducer`.","updated_at":"2019-01-06T20:26:15Z","created_at":"2019-01-06T20:26:15Z","creator_user_login":"dantman"}
{"number":14099,"comment_id":"451772519","body":"@Bazzer588 The data var your passing to the second parameter of useCallback is going to invalidate every time. useCallback doesn't do a deep comparison. You need to pass in a flat array for it to properly memoize.","updated_at":"2019-01-06T20:35:12Z","created_at":"2019-01-06T20:35:12Z","creator_user_login":"jonnyasmar"}
{"number":14099,"comment_id":"451774117","body":"Yes I've tried similar with _useReducer_ and passing _dispatch_ down to the child components - this does seem to work as you get the same _dispatch_ method so it doesn't force a re-render\r\n\r\nIf there's no way to make callback functions work as they did before I guess that's the way we'll have to go\r\n\r\n\r\n","updated_at":"2019-01-06T20:56:26Z","created_at":"2019-01-06T20:56:26Z","creator_user_login":"Bazzer588"}
{"number":14099,"comment_id":"451775592","body":"@Bazzer588 The general recommendation is to `useReducer`.\r\n\r\nThat said, your particular example can be solved like this but it is pretty unusual to not depend on any props so this doesn't always work:\r\n\r\n```js\r\n    const onChangeField = useCallback((name, value) => {\r\n        changeData(oldData => ({ ...oldData, [name]: value }));\r\n    }, []);\r\n```","updated_at":"2019-01-06T21:16:03Z","created_at":"2019-01-06T21:16:03Z","creator_user_login":"sebmarkbage"}
{"number":14099,"comment_id":"451777330","body":"Thanks @sebmarkbage - didn't realise you could pass a function to changeData\r\n(As in `const [data, changeData] = useState({});` )\r\nHowever now I'm worried - in what case would this _doesn't always work_ ?\r\n","updated_at":"2019-01-06T21:39:18Z","created_at":"2019-01-06T21:39:18Z","creator_user_login":"Bazzer588"}
{"number":14099,"comment_id":"457861783","body":"@gaearon, is this issue going to be solved before hooks release?","updated_at":"2019-01-26T20:05:21Z","created_at":"2019-01-26T20:05:21Z","creator_user_login":"doasync"}
{"number":14099,"comment_id":"457866052","body":"Workarounds above (especially relying more on `useReducer`) seem sufficient for most cases. There are cases when they’re not, but we’ll likely revisit this again in a few months.","updated_at":"2019-01-26T21:07:03Z","created_at":"2019-01-26T21:07:03Z","creator_user_login":"gaearon"}
{"number":14099,"comment_id":"457877042","body":"It's very, very different behaviour\r\n\r\nWith a ES6 class I can pass _onChange={this.handleChange}_ to the child component and it does not redraw every time (because it sends the same _handleChange_ method every time)\r\n\r\nIt's frustrating that _dispatch_ works independent of state (I mean the _dispatch_ method does not change even if the underlying state does) but useCallback does not (if your callback needs to do something with state that is)\r\n\r\nI see a lot of code where the whole form redraws when the use types into a field\r\n\r\nA lot of devs don't understand this until users complain 'it's slow'","updated_at":"2019-01-27T00:05:10Z","created_at":"2019-01-27T00:05:10Z","creator_user_login":"Bazzer588"}
{"number":14099,"comment_id":"457880537","body":"> @Bazzer588 The general recommendation is to `useReducer`.\r\n> \r\n> That said, your particular example can be solved like this but it is pretty unusual to not depend on any props so this doesn't always work:\r\n> \r\n> ```js\r\n>     const onChangeField = useCallback((name, value) => {\r\n>         changeData(oldData => ({ ...oldData, [name]: value }));\r\n>     }, []);\r\n> ```\r\n\r\n@sebmarkbage I tried the approach above of using the `oldData` argument, but it didn't help me to avoid re-renders of the children components (that's why I was using useCallback)\r\n\r\nSo I [tried using useReducer and use dispatch inside the useCallback](https://codesandbox.io/s/8zmyo11m72) but all the children are still re-rendering. \r\n\r\nMoreover, I'm passing the state to a callback after changing it, and it is always the previous state (off by one).\r\n\r\nCan someone [take a look](https://codesandbox.io/s/8zmyo11m72) and let me know what the recommended approach is?       \r\n\r\nThanks in advance!","updated_at":"2019-01-27T01:21:35Z","created_at":"2019-01-27T01:21:35Z","creator_user_login":"carlosagsmendes"}
{"number":14099,"comment_id":"457885333","body":"> Workarounds above (especially relying more on `useReducer`) seem sufficient for most cases. There are cases when they’re not, but we’ll likely revisit this again in a few months.\r\n\r\n@gaearon then do you plan to release `useCallback` with the first release of the hooks? After all it is confusing (current issue) and it is not a primitive hook (is equivalent to `useMemo(() => fn, inputs)`)\r\n\r\n----\r\n\r\n@carlosagsmendes you can probably use the workaround `useEventCallback` from above. You can see your example with it [here](https://codesandbox.io/s/7kym96lyp0)\r\n\r\nI put the `useEventCallback` (with couple changes) here again:\r\n```\r\nfunction useEventCallback(fn) {\r\n  let ref = useRef();\r\n  useLayoutEffect(() => {\r\n    ref.current = fn;\r\n  });\r\n  return useMemo(() => (...args) => (0, ref.current)(...args), []);\r\n}\r\n```","updated_at":"2019-01-27T03:13:24Z","created_at":"2019-01-27T03:13:24Z","creator_user_login":"Volune"}
{"number":14099,"comment_id":"471276212","body":"I worked around this issue, by creating the following hook:\r\n\r\n**Code:**\r\n\r\n```js\r\nimport { useRef, useEffect } from 'react'\r\n\r\n/**\r\n * This hook reduces the amount of rebindings.\r\n * Use it when your props or state change a lot \r\n * or when you have nested handlers.\r\n *\r\n * @param {DomRef} targetRef The reference to the dom node\r\n * @param {String} eventName The eventName you want to bind\r\n * @param {Function} handler The actual event handler\r\n */\r\nfunction useCachedRefHandler (targetRef, eventName, handler) {\r\n  const savedHandler = useRef()\r\n\r\n  useEffect(() => {\r\n    savedHandler.current = handler\r\n  }, [handler])\r\n\r\n  useEffect(() => {\r\n    const internalHandler = (...args) => {\r\n      if (savedHandler.current) {\r\n        savedHandler.current(...args)\r\n      }\r\n    }\r\n    targetRef.current.addEventListener(eventName, internalHandler)\r\n    return () => targetRef.current.removeEventListener(eventName, internalHandler)\r\n  }, [])\r\n}\r\n\r\nexport default useCachedRefHandler\r\n```\r\n\r\nThis code allows me to omit `useCallback` completely and therefore use state and props without diffing. \r\n\r\n**Usage Example:**\r\n\r\n```js\r\nimport React, { useRef } from 'react'\r\nimport useCachedRefHandler from './hooks/useCachedRefHandler'\r\n\r\nfunction Webview({ onSomeingA, onSomethingB, onSomethingC }) {\r\n  const ref = useRef()\r\n\r\n  useCachedRefHandler(ref, 'ipc-message', (event) => {\r\n    switch (event.channel) {\r\n      case 'someingA':\r\n        onSomeingA (event.data)\r\n        return\r\n      case 'someingB':\r\n        onSomeingB (event.data)\r\n        return\r\n      case 'someingC':\r\n        onSomeingB (event.data)\r\n        return\r\n    }\r\n  })\r\n\r\n  return (\r\n    <webview ref={ref} />\r\n  )\r\n}\r\n\r\nexport default Webview\r\n```\r\n","updated_at":"2019-03-10T10:42:07Z","created_at":"2019-03-10T10:41:23Z","creator_user_login":"HaNdTriX"}
{"number":14099,"comment_id":"499781277","body":"Had a use case for @sophiebits proposed `useEventCallback` (https://github.com/facebook/react/issues/14099#issuecomment-440013892). The problem with `useLayoutEffect` is that it issues warnings when server side rendering. You can trick React by switching to `useEffect` based on the environment (`typeof window`) but this won't work if the SSR API is called in the browser (`with-apollo`).\r\n\r\nWouldn't `useImperativeHandle` work as well?\r\n\r\nEdit: __WARNING__ This means that the callback __cannot__ be called safely in the effect cleanup phase. When unmounting the ref will be nulled before the cleanup phase.\r\n\r\n```diff\r\nfunction useEventCallback(fn) {\r\n  let ref = useRef();\r\n-  useLayoutEffect(() => {\r\n+  useImperativeHandle(ref, () => {\r\n-    ref.current = fn;\r\n+    return fn;\r\n  });\r\n  return useCallback(() => (0, ref.current)(), []);\r\n}\r\n```\r\n","updated_at":"2019-06-08T10:23:26Z","created_at":"2019-06-07T07:06:40Z","creator_user_login":"eps1lon"}
{"number":14099,"comment_id":"512558658","body":"I found myself doing this often:\r\n\r\n```jsx\r\nfunction Foo({ someProp, otherProp }) {\r\n  const somePropRef = useRef(someProp);\r\n  useLayoutEffect(() => {  // or useEffect\r\n    somePropRef.current = someProp;\r\n  }, [someProp]);\r\n\r\n  const otherPropRef = useRef(otherProp);\r\n  useLayoutEffect(() => {  // or useEffect\r\n    otherPropRef.current = otherProp;\r\n  }, [otherProp]);\r\n\r\n  const onSomething = useCallback(() => {\r\n    handleSomething(somePropRef.current, otherPropRef.current);\r\n  }, []);\r\n\r\n  return <Bar onSomething={onSomething} />;\r\n\r\n  // or...\r\n  //\r\n  // // This ref value never changes, so can use .current in render.\r\n  // // WARNING: Safe to close over refs and outer scope consts only.\r\n  // const onSomethingRef = useRef(() => {\r\n  //   handleSomething(somePropRef.current, otherPropRef.current);\r\n  // });\r\n  //\r\n  // return <Bar onSomething={onSomethingRef.current} />;\r\n}\r\n```\r\n\r\nDoes that have any drawbacks besides unnecessary effects?","updated_at":"2019-07-17T20:36:45Z","created_at":"2019-07-17T20:36:45Z","creator_user_login":"sompylasar"}
{"number":14099,"comment_id":"529440941","body":"> I found myself doing this often:\r\n> \r\n> ```js-jsx\r\n> function Foo({ someProp, otherProp }) {\r\n>   const somePropRef = useRef(someProp);\r\n>   useLayoutEffect(() => {  // or useEffect\r\n>     somePropRef.current = someProp;\r\n>   }, [someProp]);\r\n> \r\n>   const otherPropRef = useRef(otherProp);\r\n>   useLayoutEffect(() => {  // or useEffect\r\n>     otherPropRef.current = otherProp;\r\n>   }, [otherProp]);\r\n> \r\n>   const onSomething = useCallback(() => {\r\n>     handleSomething(somePropRef.current, otherPropRef.current);\r\n>   }, []);\r\n> \r\n>   return <Bar onSomething={onSomething} />;\r\n> \r\n>   // or...\r\n>   //\r\n>   // // This ref value never changes, so can use .current in render.\r\n>   // // WARNING: Safe to close over refs and outer scope consts only.\r\n>   // const onSomethingRef = useRef(() => {\r\n>   //   handleSomething(somePropRef.current, otherPropRef.current);\r\n>   // });\r\n>   //\r\n>   // return <Bar onSomething={onSomethingRef.current} />;\r\n> }\r\n> ```\r\n> \r\n> Does that have any drawbacks besides unnecessary effects?\r\n\r\n@sompylasar I wanna know as well. we are doing the same thing using this hook\r\n```\r\nuseController<T extends IPropsAndState>(propsAndState:T):T{\r\n  const controllerRef = useRef({});\r\n  Object.assign(controllerRef.current, propsAndState);\r\n  return controllerRef.current;\r\n}\r\n....\r\n\r\n....\r\n\r\n\r\n```\r\n\r\nwe badly need it since we have a websocket rjxs subscription and we need an updated context for the callback functions inside filter pipes and the actual subscription.\r\n\r\ni cant use a useeffect that contains dependencies in my case because i dont want to constantly disconnect/reconnect to our socket server","updated_at":"2019-09-09T12:06:30Z","created_at":"2019-09-09T12:06:02Z","creator_user_login":"arnotes"}
{"number":14099,"comment_id":"529507322","body":"@arnotes Looks like you are updating your ref during the render phase, i.e. before it has been commited, rather than in a `useEffect` call. To quote @gaearon : \r\n\r\n> In concurrent mode, last render doesn't necessarily mean \"latest committed state\". So a low-priority render with new props or state would overwrite a reference used by current event handler.\r\n\r\nAfaik the drawback with updating the ref in a `useEffect` is mainly that you then can't use it during the render.","updated_at":"2019-09-09T14:38:57Z","created_at":"2019-09-09T14:38:57Z","creator_user_login":"nikparo"}
{"number":14099,"comment_id":"534673602","body":"> Does that have any drawbacks besides unnecessary effects?\r\n\r\nLate to the party here, but after scanning the above thread- there is another potential problem in [the `useEventCallback` example](https://github.com/facebook/react/issues/14099#issuecomment-440013892) and other example uses of `useLayoutEffect` above:\r\n\r\n```js\r\nfunction Example({ callback }) {\r\n  const stableCallback = useEventCallback(callback);\r\n  return <Child callback={stableCallback} />;\r\n}\r\n\r\nfunction Child({ callback }) {\r\n  useLayoutEffect(() => {\r\n    // Callback has not yet been updated!\r\n    // This is because child effects are run before parent effects,\r\n    // So the callback ref has not yet been updated (and still points to the old value).\r\n    callback();\r\n  }, [callback]);\r\n}\r\n```","updated_at":"2019-09-24T17:55:50Z","created_at":"2019-09-24T17:52:48Z","creator_user_login":"bvaughn"}
{"number":14099,"comment_id":"537946829","body":">>What issues has \"mutation of ref during rendering\"? Can you explain me in brief?\r\n\r\n>In concurrent mode (not yet released), it would \"remember\" the last rendered version, which isn't great if we render different work-in-progress priorities. So it's not \"async safe\".\r\n\r\nAren't class components also exposed to this? Seems React does the same thing to Class Components (mutating props in render phase)\r\n\r\nhttps://github.com/facebook/react/blob/4c5698400f04bbc6d0b4bd766b0993d0bcb37609/packages/react-reconciler/src/ReactFiberClassComponent.js#L1042-L1045\r\n\r\nalso seems the committed and work-in-progress fibers share the same class instance\r\n\r\nhttps://github.com/facebook/react/blob/4c5698400f04bbc6d0b4bd766b0993d0bcb37609/packages/react-reconciler/src/ReactFiber.js#L413\r\n\r\nIf React assigns pending props to `instance.props` in the render phase but the render work is interrupted for some reason, `this.props` will reflect the props of the WIP (outside of render phase) since both share the same instance. If an event handler fires in between and accesses `this.props` it'll see the WIP props while it should rather seethe committed props.\r\n\r\nI assume the solution is to switch `this.props` between phases, maybe this is already done but I couldn't trace it in the sources so just wanted to make sure this is handled.\r\n","updated_at":"2019-10-04T13:37:59Z","created_at":"2019-10-03T13:31:09Z","creator_user_login":"yelouafi"}
{"number":14099,"comment_id":"541414397","body":"@vzaidman\r\n\r\nThe [solution](https://github.com/facebook/react/issues/14099#issuecomment-440013892) by @sophiebits does the same without a need for stating any deps at all. The callback from `ref.current` always has a fresh closure. So the usage looks like this\r\n\r\n```js\r\nconst handleClick= useEventCallback(() => {\r\n  // do anything with props, state, or any other local variables\r\n})\r\n```\r\n","updated_at":"2019-10-13T12:35:24Z","created_at":"2019-10-13T12:30:05Z","creator_user_login":"Hypnosphi"}
{"number":14099,"comment_id":"541414898","body":"missed it altogether and deleted my comment. thanks","updated_at":"2019-12-25T05:53:17Z","created_at":"2019-10-13T12:36:37Z","creator_user_login":"vzaidman"}
{"number":14099,"comment_id":"541714637","body":"@Volune \r\n\r\n> I personally don't see any benefits of the current `useCallback` implementation over the proposed `useEventCallback`\r\n\r\nCurrent `useCallback` is quite helpful with render props pattern. One example is `List` from `react-virtualized`. It's a `PureComponent`, so you can pass a memoized `rowRenderer` function to prevent rerenders. But if your `rowRenderer` doesn't invalidate when its deps change (e.g. if it's an instance property on a class component), you have to pass all those deps as `List` props to trigger rerenders when they're actually needed.\r\n\r\nExample on codesandbox: https://codesandbox.io/embed/staging-snow-sgh7v\r\nNote how I have to pass an extra `value` property to `List` to fix the class example while `useCallback` works as is because it invalidates whenever it would produce a different output.\r\n\r\n@muqg @strayiker BTW this is why there's no much sense in trying to make `useEventCallback` work in the render phase: If a child uses your callback to render something, you most likely _want_ it to invalidate as often as its deps change. Also, this is why `useEventCallback` is a really good name. Basically, it says \"only use me for event handlers\".\r\n\r\n","updated_at":"2019-10-14T14:32:58Z","created_at":"2019-10-14T14:32:58Z","creator_user_login":"Hypnosphi"}
{"number":14099,"comment_id":"547533124","body":"@gaearon @sebmarkbage @lastw\r\n\r\nLets imagen, we have react-redux in our App. So, in any component, where we are going to dispatch something we will code something like this:\r\n\r\n```jsx\r\nconst Comp = React.memo((props) => {\r\n  // This is from react-redux\r\n  const dispatch = useDispatch();\r\n  const handler = useCallback(() => {\r\n    // actionCreator is created in our project and it is static function\r\n    dispatch(actionCreator(props));\r\n  }, [props]);\r\n\r\n  return <Button onClick={handler}></Button>\r\n})\r\n```\r\nButton component will receive new handler every time, than props are changed. As I understand, this is the main theme of the issue)\r\n\r\nWhat if we will create our own custom hook useHandler, which will look like:\r\n```jsx\r\n// actionCreator won't be changed, just static function in our case\r\nconst useHandler = (actionCreator, params) => {\r\n  // This is from react-redux. Dispatch won't be changed.\r\n  const dispatch = useDispatch();\r\n  const paramsRef = useRef(params);\r\n  // This is useless for the first time, but we need it later\r\n  // This code can be moved or we can add a condition that paramsRef.current !== params.\r\n  paramsRef.current = params;\r\n  // callback will be created only on the first call of useHandler, cause of []\r\n  // But it will dispatch action with new params on next calls\r\n  const callback = useCallback(() => {\r\n    dispatch(actionCreator(paramsRef.current));\r\n  }, []);\r\n  \r\n  return callback;\r\n}\r\n```\r\nSo, if we have static actionCreator, static dispatch from useDispatch — is it safe to use that approach in concurrent mode?\r\n\r\nBy the way, how can we understand, what is safe to use in concurrent mode, and what will break our app?","updated_at":"2019-10-29T17:26:01Z","created_at":"2019-10-29T17:14:19Z","creator_user_login":"artem-malko"}
{"number":14099,"comment_id":"547548087","body":"This line in your above example could cause problems:\r\n```js\r\nparamsRef.current = params;\r\n```\r\n\r\nSince you're mutating the ref during render- and renders can be async- you can end up mutating it prematurely (so that a previously-rendered thing calls the `callback` and gets a not-yet-rendered `params` value.\r\n\r\nTo avoid this, you would want to update the ref in a layout effect (`useLayoutEffect`) although this has its own drawbacks (see [this comment](https://github.com/facebook/react/issues/14099#issuecomment-534673602)).\r\n\r\n**Edit** for clarity.","updated_at":"2019-10-29T18:09:21Z","created_at":"2019-10-29T17:47:24Z","creator_user_login":"bvaughn"}
{"number":14099,"comment_id":"547551807","body":"@bvaughn but in that case it is possible to have a bug like in your example here https://github.com/facebook/react/issues/14099#issuecomment-534673602\r\nuseEffect will be preferable. What do you think?\r\n","updated_at":"2019-10-29T18:01:12Z","created_at":"2019-10-29T17:55:37Z","creator_user_login":"artem-malko"}
{"number":14099,"comment_id":"547557567","body":"Yup! Still has potential for bugs. Mutating during during render seems worse to me though.","updated_at":"2019-10-29T18:08:41Z","created_at":"2019-10-29T18:08:41Z","creator_user_login":"bvaughn"}
{"number":14099,"comment_id":"547699022","body":"As I understand, we can use safely a value from useRef in any hook, but we can not change it safely. Only React itself can do it. For example, if we use useRef to have a ref on dom-node — it is ok, cause React change current value. \r\n\r\nIt's not about current issue only. It's a general conclusion about useRef and concurrent mode.","updated_at":"2019-10-30T01:28:05Z","created_at":"2019-10-30T01:26:08Z","creator_user_login":"artem-malko"}
{"number":14099,"comment_id":"547979856","body":"That doesn't sound right. Our docs list [examples](https://reactjs.org/docs/hooks-faq.html#is-there-something-like-instance-variables) of using the ref for non-React values. The key is when to update the `.current` property. React updates this property during the \"commit phase\" (when effects are run) and we suggest you do the same<sup>1</sup> to avoid problems like the one I mentioned above.\r\n\r\n<sup>1</sup> The one exception to this is using a ref to [lazily initialize a value](https://reactjs.org/docs/hooks-faq.html#how-to-create-expensive-objects-lazily). This is only safe because it's idempotent.","updated_at":"2019-10-30T15:59:45Z","created_at":"2019-10-30T15:59:45Z","creator_user_login":"bvaughn"}
{"number":14099,"comment_id":"548004991","body":"@bvaughn \r\nOk, thanks. Now it's much more clear for me) useEffect/useLayoutEffect is not a silver bullet, but a compromise for useHandler in case, when fn for callback is just static function and only params are changing.\r\n\r\nSo, will wait for new hook, which is based on useReducer or something like this.\r\n\r\n","updated_at":"2019-10-30T16:51:59Z","created_at":"2019-10-30T16:51:16Z","creator_user_login":"artem-malko"}
{"number":14099,"comment_id":"556072818","body":"@sophiebits Why is the comma expression needed here?\r\n\r\n> ```js\r\n> useEventCallback(fn) {\r\n>   ...\r\n>   return useCallback(() => (0, ref.current)(), []);\r\n> }\r\n> ```\r\n\r\n","updated_at":"2019-11-20T16:00:56Z","created_at":"2019-11-20T16:00:56Z","creator_user_login":"igodorogea"}
{"number":14099,"comment_id":"556090007","body":"It ensures that the receiver (this value) of the function isn’t ref.","updated_at":"2019-11-20T16:38:37Z","created_at":"2019-11-20T16:38:37Z","creator_user_login":"ljharb"}
{"number":14099,"comment_id":"569027159","body":"@eps1lon \r\nhttps://github.com/facebook/react/issues/14099#issuecomment-499781277\r\n\r\nThe `useImperativeHandle()` solution looks good, but it turns out that ref.current will not be set when the callback is called in `useLayoutEffect()` placed in a child component.\r\n(Original \"callback is outdated\" issue is here: https://github.com/facebook/react/issues/14099#issuecomment-534673602 )\r\n\r\nhttps://codesandbox.io/s/react-useeventcallback-test-eirgj\r\nThis PoC code shows that `ref.current` is always not set at callback call.\r\n\r\n```\r\nApp: rendering text=\"abc\"\r\nChild: calling layout callback\r\nCallback called: ab\r\nChild: calling imperative callback\r\n!!! imperative callback: ref.current == null\r\nlayout callback: ref.current = fn\r\n```","updated_at":"2019-12-26T10:03:19Z","created_at":"2019-12-26T09:53:22Z","creator_user_login":"ypresto"}
{"number":14099,"comment_id":"569044797","body":"The `useImperativeHandle()` solution still does not call outdated func at least. So it can be used where you are confident that the callback will not be called from useLayoutEffect().","updated_at":"2019-12-26T11:49:35Z","created_at":"2019-12-26T11:49:06Z","creator_user_login":"ypresto"}
{"number":14099,"comment_id":"595104498","body":"Tbh this is making me super skeptical of concurrent mode, given that function memoization is the number one tedious thing I deal with daily in React since hooks were introduced (everything else about hooks being fantastic) and concurrent mode wouldn't benefit me personally right now AFAIK, yet sounds quite dangerous to use.","updated_at":"2020-03-05T09:00:05Z","created_at":"2020-03-05T08:51:26Z","creator_user_login":"jedwards1211"}
{"number":14099,"comment_id":"638446746","body":"I came across this problem when I tried to call one callback from another one, and observed strange effects. A very simplified example:\r\n\r\n```jsx\r\nconst MyComponent = props => {\r\n  const [value, setValue] = useState();\r\n  const [copy, setCopy] = useState();\r\n\r\n  const createCopy = useCallback(() => {\r\n    setCopy(value);\r\n  }, [value]);\r\n\r\n  const callback = useCallback(() => {\r\n    createCopy();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <input onChange={e => setValue(e.target.value)} />\r\n      <button onClick={callback}>Copy</button>\r\n      <span>{copy}</span>\r\n    </div>\r\n  );\r\n};\r\n```\r\n\r\nThis is obviously a simplified and therefore contrived example. It does not behave how I would expect it to.\r\n\r\nAccording to [the documentation](https://reactjs.org/docs/hooks-reference.html#usestate) it is safe to use `setCopy` from within a callback (or effect) without adding it to the dependency list. But it appears it's not safe to call another callback created with `useCallback` without adding it to the dependency list. There is probably a good reason for it, but it seems weird to me and clearly several other people in this thread.\r\n\r\nSo in the above example calling `callback()` will not update `copy`, since it calls an old version of `createCopy` which holds an old version of `value`. ","updated_at":"2020-06-03T20:34:36Z","created_at":"2020-06-03T20:34:09Z","creator_user_login":"mariusGundersen"}
{"number":14099,"comment_id":"638460399","body":"@mariusGundersen `setCopy` is guaranteed to remain the same through component's lifetime, while `createCopy` changes each time when `value` does","updated_at":"2020-06-03T21:03:52Z","created_at":"2020-06-03T21:03:52Z","creator_user_login":"Hypnosphi"}
{"number":14099,"comment_id":"638479857","body":"Yes, that's clearly how it behaves. But it also means that `callback` needs to change too. It would be useful and consistent if `useCallback` behaved like `useState`. ","updated_at":"2020-06-03T21:49:24Z","created_at":"2020-06-03T21:49:24Z","creator_user_login":"mariusGundersen"}
{"number":14099,"comment_id":"638600797","body":"@mariusGundersen If you want callback change too, it need setCopy as its dependency.\nIn this way it is guarantee that no side effects happened","updated_at":"2020-06-04T04:50:58Z","created_at":"2020-06-04T04:50:58Z","creator_user_login":"davidnussio"}
{"number":14099,"comment_id":"641811678","body":"I found that you can use useReducer to mitigate this effectively. the bit that was hard to swallow is when i needed side effects to happen in the callback.\r\n\r\nSide effects **cant** happen in the reducer as it is being called with past actions _a lot_, on re renders, for some reason. so the reducer must be pure (state, action) => resultState, with no side effects.\r\n\r\nThe solution was to use useEffect that listen to changes in the reduced state (resultState), to initiate side effects, which suddenly seemed obvious. 😅\r\n\r\nfor example, this code:\r\n\r\n```\r\n  const [counter, setCounter] = useState(0);\r\n\r\n  const handleClick = useCallback(() => {\r\n    console.log(`child clicked ${counter + 1} times`);\r\n    setCounter((c) => c + 1);\r\n  }, [counter]);\r\n```\r\n\r\nwhich will create a very problematic callback, could be perfectly replaced with:\r\n\r\n```\r\n  const [counter, handleClick] = useReducer((c) => c + 1, 0);\r\n\r\n  useEffect(() => {\r\n    counter && console.log(`child clicked ${counter} times`);\r\n  }, [counter]);\r\n```\r\n\r\nwhich will have the same effect but with handler that will persist through the entire lifetime of the component.\r\n\r\ni think this is the most complete solution to the useCallback problem.\r\n@gaearon can you confirm? \r\n\r\n","updated_at":"2020-06-10T08:44:09Z","created_at":"2020-06-10T07:58:14Z","creator_user_login":"liorJuice"}
{"number":14099,"comment_id":"642159068","body":"@liorJuice I wonder if in some cases people would need side effects to happen synchronously, right away when something is clicked though?","updated_at":"2020-06-10T17:42:08Z","created_at":"2020-06-10T17:42:08Z","creator_user_login":"jedwards1211"}
{"number":14099,"comment_id":"642199086","body":"@liorJuice how would you use props in side effects with this approach?","updated_at":"2020-06-10T19:03:15Z","created_at":"2020-06-10T19:03:15Z","creator_user_login":"Hypnosphi"}
{"number":14099,"comment_id":"643742376","body":"@Hypnosphi like other effect dependencies. remember that if if you only use them for calculations - you can safely move them to the reducer.\r\n","updated_at":"2020-06-14T10:38:29Z","created_at":"2020-06-14T09:36:43Z","creator_user_login":"liorJuice"}
{"number":14099,"comment_id":"643787431","body":"@liorJuice\r\n\r\n> like other effect dependencies\r\n\r\nthen the effect will trigger whenever the prop changes which is probably not what you want.\r\n\r\nI'm talking about cases like that:\r\n\r\n```\r\nconst handleClick = useCallback(() => {\r\n  console.log(props.name);\r\n}, [props.name]);\r\n```\r\n\r\nHow would you apply your approach to this case?","updated_at":"2020-06-14T16:10:54Z","created_at":"2020-06-14T16:09:48Z","creator_user_login":"Hypnosphi"}
{"number":14099,"comment_id":"643791996","body":"You wouldn't need to pass props used in side effects as dependencies -- the new values for those props would be part of the new closure when the effect fires because the counter dependency changed.\r\n\r\n```\r\n  useEffect(() => {\r\n    counter && console.log(`${props.name}: child clicked ${counter} times`);\r\n  }, [counter]);\r\n```\r\n\r\nThough I assume it may be possible for the props to change between the click that incremented the counter and the render that triggers the effect?","updated_at":"2020-06-14T16:46:25Z","created_at":"2020-06-14T16:46:25Z","creator_user_login":"jedwards1211"}
{"number":14099,"comment_id":"643792889","body":"@Hypnosphi the problem you describe is a general useEffect problem (how to write effects with dependencies that don't need to trigger the effect),\r\nit is not specific to the the useCallback solution i described.\r\nthere are number of approaches you can take to solve prop dependencies in effects.\r\n\r\ni suggest taking a look here:\r\nhttps://overreacted.io/a-complete-guide-to-useeffect/#why-usereducer-is-the-cheat-mode-of-hooks\r\n\r\nthere is also a custom hook named \"usePrevious\", you can use it to check if a specific dependency changed on useEffect. im not sure how much of a best practice it is.\r\n\r\nhere is one solution:\r\n```\r\n  const [{logReport}, handleClick] = useReducer((state) => ({\r\n    counter: state.counter + 1,\r\n    logReport: `${props.name}: child clicked ${state.counter + 1} times`\r\n  }), {counter: 0, logReport: ''});\r\n\r\n  useEffect(() => {\r\n    logReport && console.log(logReport);\r\n  }, [logReport]);\r\n\r\n```\r\n\r\nyou can use props inside reducers if you put the reducer function inside the component (which you shouldn't do by default, but you can).\r\nnote that logReport does not change when props.name changes, but only when the user clicks.","updated_at":"2020-06-15T13:59:25Z","created_at":"2020-06-14T16:53:44Z","creator_user_login":"liorJuice"}
{"number":14099,"comment_id":"652062647","body":"I was inspired by @liorJuice's [thoughts on useReducer -> useEffect above](https://github.com/facebook/react/issues/14099#issuecomment-641811678) to create a custom hook as an experiment, [use-effect-callbacks](https://github.com/nikparo/use-effect-callbacks/). It transforms an object of callbacks into stable methods that can then be passed down. It works by caching the callbacks through a `useReducer` and executing them in the next `useEffect`. Could be used as such:\r\n\r\n```js\r\nimport { useEffectCallbacks } from 'use-effect-callbacks';\r\n\r\n// ...\r\n\r\n// Within parent component\r\nconst [state, setState] = useState({ foo: 'bar' });\r\nconst { getState } = useEffectCallbacks({\r\n  getState: () => state,\r\n});\r\n\r\n// ...\r\n\r\n// Within memoized child component\r\nconst handleClick = async () => {\r\n  setState({ foo: 'baz' });\r\n  const latestState = await getState();\r\n  console.log(latestState); // -> { foo: 'baz' }\r\n};\r\n```\r\n\r\n#### Pros:\r\n- It should be concurrent safe.\r\n- The methods are stable as long as the callback names are stable.\r\n- It is quite straightforward and simple to use.\r\n- You don't need to manually keep track of a lot of different properties in your state to trigger various effects. (Compared to the more manual approach proposed by @liorJuice.)\r\n\r\n#### Cons:\r\n- It's a bit wasteful.\r\n  - Calling a method will trigger the owner component to re-render. (Not a problem if you expect it to re-render anyway, e.g. due to a setState call)\r\n  - If a method is called in a `useEffect`, I believe it will still trigger a full render-cycle and only execute in the next `useEffect`.\r\n- The methods are not suitable as event listeners since they execute later, and any react event would have been recycled. (They can however very well be called from event listeners)\r\n- While the methods can \"safely\" be called during renders, there's not much point in doing so since they return promises.\r\n\r\n### Conclusion:\r\nTo be perfectly honest I'm still not quite sure what to think of this approach. It seems handy for occasionally getting the **next** state, but most other use-cases I can think of seem like a bit of a stretch.\r\n","updated_at":"2020-06-30T22:10:51Z","created_at":"2020-06-30T21:44:54Z","creator_user_login":"nikparo"}
{"number":14099,"comment_id":"659298422","body":"FYI: My snippet of useImperativeHandle solution https://github.com/facebook/react/issues/14099#issuecomment-569044797 is like this (it is TypeScript, remove type annotations for JS):\r\n\r\n```ts\r\n// Better useCallback() which always returns the same (wrapped) function reference and does not require deps array.\r\n// Use this when the callback requires to be same ref across rendering (for performance) but parent could pass a callback without useCallback().\r\n// useEventCallback(): https://github.com/facebook/react/issues/14099#issuecomment-499781277\r\n// WARNING: Returned callback should not be called from useLayoutEffect(). https://github.com/facebook/react/issues/14099#issuecomment-569044797\r\nexport function useStableCallback<T extends (...args: any[]) => any>(fn: T): T {\r\n  const ref = useRef<T>()\r\n  useImperativeHandle(ref, () => fn) // Assign fn to ref.current (currentFunc) in async-safe way\r\n\r\n  return useRef(((...args: any[]) => {\r\n    const currentFunc = ref.current\r\n    if (!currentFunc) {\r\n      throw new Error('Callback retrieved from useStableCallback() cannot be called from useLayoutEffect().')\r\n    }\r\n    return currentFunc(...args)\r\n  }) as T).current\r\n}\r\n```","updated_at":"2020-07-16T09:40:09Z","created_at":"2020-07-16T09:38:54Z","creator_user_login":"ypresto"}
{"number":14099,"comment_id":"762578896","body":"my workaround try to be KISS by abuse self reference from JS context.\r\n\r\nBut it always point to latest, not sure what could it break in various mode and lifecycle in react.\r\nAt least it work in my case.\r\n\r\n```\r\nexport default function useStableCallback<T extends (...args: any[]) => unknown>(callback: T): T {\r\n  const ref = useRef({\r\n    stableProxy: (...args: any) => {\r\n      return ref.current.targetFunc(...args);\r\n    },\r\n    targetFunc: callback,\r\n  });\r\n  ref.current.targetFunc = callback;\r\n  return ref.current.stableProxy as T;\r\n}\r\n```","updated_at":"2021-01-19T03:29:04Z","created_at":"2021-01-19T03:29:04Z","creator_user_login":"dcheung2"}
{"number":14099,"comment_id":"797709089","body":"I got **problem** with **invalidated callback** when try to call it **after some state mutation**.\r\n\r\nVery simplified example:\r\n\r\n```javascript\r\nconst onClick = (value) => {\r\n    setValue(value);\r\n    navigateToNextPage();\r\n}\r\n```\r\n\r\nHere `navigateToNextPage` uses old state in its closure and leads to a wrong screen.\r\n\r\nI had to create `useNextUpdateCallback` hook to make it work on the next render:\r\n\r\n```javascript\r\nconst navigateOnNextUpdate = useNextUpdateCallback(navigateToNextPage);\r\n\r\nconst onClick = () => {\r\n    setValue(value);\r\n    navigateOnNextUpdate();\r\n}\r\n```\r\n\r\n**Implementation:**\r\n\r\n```javascript\r\nconst forceUpdateReducer = (x) => x + 1;\r\n\r\nexport const useForceUpdate = () => {\r\n  const [, forceUpdate] = useReducer(forceUpdateReducer, 0);\r\n  return forceUpdate;\r\n};\r\n\r\nexport const useNextUpdateCallback = (callback) => {\r\n  // eslint-disable-next-line no-unused-vars\r\n  const forceUpdate = useForceUpdate();\r\n  const shouldCallRef = useRef(false); // ref is used not to rerender after callback is called\r\n\r\n  useEffect(() => {\r\n    if (!shouldCallRef.current) return;\r\n\r\n    callback();\r\n    shouldCallRef.current = false;\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [shouldCallRef.current]);\r\n\r\n  return useCallback(() => {\r\n    shouldCallRef.current = true;\r\n    forceUpdate();\r\n  }, [forceUpdate]);\r\n};\r\n```\r\n\r\n**Problems:**\r\n\r\n- Navigation happens not immediately, this feels a little slower.\r\n- It is a hack.\r\n\r\nDoes anyone know a better workaround?\r\n\r\nPS. The more I use React and hooks, the more i understand how complex they are. Too complex.","updated_at":"2021-03-12T19:39:20Z","created_at":"2021-03-12T19:37:04Z","creator_user_login":"gentlee"}
{"number":14099,"comment_id":"845738175","body":"@Gentlee I ran into a different problem but the workaround should help in your case as well. \r\nLet's assume **navigateToNextPage** depends on state **currentPage** in the closure. You could modify navigateToNextPage to read currentPage from an argument rather than the state in the closure.\r\n\r\n> ```js\r\n> \r\n> const onClick = () => {\r\n>     setValue(value);\r\n>     setCurrentPage((currentPage)=>{\r\n>          navigateToNextPage(currentPage)\r\n>          return currentPage\r\n>     });\r\n> }\r\n> ```\r\n> \r\n\r\n**Caution**: It does not work in all cases, eg: if this setState call causes parent component to re-render.","updated_at":"2021-05-21T10:18:22Z","created_at":"2021-05-21T07:49:11Z","creator_user_login":"vdgodse"}
{"number":14099,"comment_id":"857189042","body":"Hoping there will be some solution to this in React 18.\r\n\r\nWhat if we had some kind of ref hook that safely keeps track of the last commited value on any given render thread?\r\n\r\n```js\r\nfunction useEventCallback(fn) {\r\n  let ref = React.useConcurrentRef(fn);\r\n  // value could be updated like:\r\n  //   ref.setCurrent(fn);\r\n  return useCallback((...args) => (0, ref.getCurrent)(...args), []);\r\n}\r\n```\r\n\r\nMaybe it could have a `current` property with getters/setters just like `useRef`; I just used `setCurrent`/`getCurrent` in my example to illustrate that magic would be happening under the hood.","updated_at":"2021-06-08T21:48:20Z","created_at":"2021-06-08T21:48:20Z","creator_user_login":"jedwards1211"}
{"number":14099,"comment_id":"863656694","body":"I smell useRef here. Either you want to manage the update or not.","updated_at":"2021-06-18T01:03:36Z","created_at":"2021-06-18T01:03:36Z","creator_user_login":"windmaomao"}
{"number":14099,"comment_id":"1001742366","body":"Might [this approach](https://github.com/facebook/react/issues/14099#issuecomment-440717985) work fine when combined with [useConcurrentModeSafeRef()](https://dev.to/uhyo_/a-concurrent-mode-safe-version-of-useref-1325)?","updated_at":"2021-12-27T20:32:17Z","created_at":"2021-12-27T20:32:17Z","creator_user_login":"jampy"}
{"number":14099,"comment_id":"1001964735","body":"> Might [this approach](https://github.com/facebook/react/issues/14099#issuecomment-440717985) work fine when combined with [useConcurrentModeSafeRef()](https://dev.to/uhyo_/a-concurrent-mode-safe-version-of-useref-1325)?\r\n\r\n`useConcurrentModeSafeRef` looks pretty cool at a first glance, but I'd want to know a bit more about this core line before using it in production:\r\n\r\n```js\r\nPromise.resolve().then(()=> raw.isRendering = false)\r\n```\r\n\r\n1. Do renders always complete during the same microtask? Including all child components? \r\n    - Can we count on this to remain true for concurrent renderering?\r\n2. At exactly what point does the promise resolve? Before or after (layout) effects?","updated_at":"2021-12-28T09:32:31Z","created_at":"2021-12-28T09:32:31Z","creator_user_login":"nikparo"}
{"number":14099,"comment_id":"1002011860","body":">useConcurrentModeSafeRef looks pretty cool at a first glance, but I'd want to know a bit more about this core line before using it in production:\r\n\r\nPlease check [this comment](https://dev.to/reaysawa/comment/10aap) at the end of the article, where João Paulo expresses similar thoughts and proposes to change that part to:\r\n\r\n```\r\n  raw.isRendering = true;\r\n  raw.currentValue = raw.comittedValue;\r\n  useLayoutEffect(() => {\r\n    raw.isRendering = false;\r\n    raw.comittedValue = raw.currentValue;\r\n  });\r\n```\r\n\r\nThe full implementation for `useConcurrentModeSafeRef()` would be like so, I guess (including a fix for the \"committedValue\" typo):\r\n\r\n```tsx\r\ntype Raw<T> = {\r\n  isRendering: boolean;\r\n  committedValue: T;\r\n  currentValue: T;\r\n  ref: { current: T };\r\n};\r\nexport const useConcurrentModeSafeRef = <T>(initialValue: T) => {\r\n  const rawRef = useRef<Raw<T>>();\r\n  const raw: Raw<T> = rawRef.current ?? (\r\n    rawRef.current ={\r\n      isRendering: true,\r\n      committedValue: initialValue,\r\n      currentValue: initialValue,\r\n      ref: {\r\n        get current() {\r\n          if (raw.isRendering) {\r\n            return raw.currentValue;\r\n          } else {\r\n            return raw.committedValue;\r\n          }\r\n        },\r\n        set current(v) {\r\n          if (!raw.isRendering) {\r\n           raw.committedValue= v;\r\n          }\r\n          raw.currentValue = v;\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  raw.isRendering = true;\r\n  raw.currentValue = raw.committedValue;\r\n  useLayoutEffect(() => {\r\n    raw.isRendering = false;\r\n    raw.committedValue= raw.currentValue;\r\n  });\r\n\r\n  return raw.ref;\r\n};\r\n```\r\n\r\nSo...\r\n\r\n```js\r\nfunction useStatic(cb) {\r\n  const callback = useRef(cb)\r\n  callback.current = cb\r\n\r\n  const mem = useConcurrentModeSafeRef((...args) => callback.current(...args))\r\n  return mem.current\r\n}\r\n```\r\n\r\nThis looks promising to me, but I'm not familiar enough about the lifecycle details (especially if the `useLayoutEffect()` callback fires before or after rendering children). Also, it's unclear to me if this covers all edge cases.\r\n\r\nProbably only someone from the core team, like @gaearon, might be able to answer this.\r\n\r\n*BTW, also have a look at [useMenoizedFn()](https://ahooks.js.org/hooks/use-memoized-fn/) ([source](https://github.com/alibaba/hooks/blob/3163809184594b03cfa3551e6698436492a112ea/packages/hooks/src/useMemoizedFn/index.ts)), which is a implementation like `useStatic()` above (ignoring the concurrent mode problem, IMHO, but avoiding [some problem when devtools is open](https://github-com.translate.goog/alibaba/hooks/issues/728?_x_tr_sl=zh-CN&_x_tr_tl=en&_x_tr_hl=de)).*","updated_at":"2021-12-28T10:53:21Z","created_at":"2021-12-28T10:53:21Z","creator_user_login":"jampy"}
{"number":14099,"comment_id":"1002087590","body":"> This looks promising to me, but I'm not familiar enough about the lifecycle details (especially if the useLayoutEffect() callback fires before or after rendering children). Also, it's unclear to me if this covers all edge cases.\r\n\r\nEffects only run once a component is committed (a separate step to update the DOM after a component has been successfully rendered). But due to concurrent features such as suspense, there is no guarantee that a component that has started rendering will finish rendering, much less be committed.\r\n\r\nIn other words, `useLayoutEffect` is not a reliable way to tell whether it is still rendering. Afaik the component will eventually re-render and be committed once it's no longer held up, but in the meantime the hook will think that it is still rendering even though it isn't.","updated_at":"2021-12-28T12:48:27Z","created_at":"2021-12-28T12:48:27Z","creator_user_login":"nikparo"}
{"number":14099,"comment_id":"1002738546","body":"> Effects only run once a component is committed (a separate step to update the DOM after a component has been successfully rendered). But due to concurrent features such as suspense, there is no guarantee that a component that has started rendering will finish rendering, much less be committed.\r\n\r\nI was aware of that. I actually meant \"before or after *committing* children\". Sorry for the confusion.\r\n\r\n> In other words, useLayoutEffect is not a reliable way to tell whether it is still rendering.\r\n\r\nAgree.\r\n\r\nAnother solution, that would work better, I think:\r\n\r\n```jsx\r\nfunction useConcurrentModeSafeRef(initialValue) {\r\n\r\n  const isRendering = () =>\r\n    !!React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner.current;\r\n\r\n  const rawRef = useRef();\r\n\r\n  const raw = rawRef.current ? rawRef.current : (\r\n    rawRef.current = {\r\n      comittedValue: initialValue,\r\n      currentValue: initialValue,\r\n      ref: {\r\n        get current() {\r\n          if (isRendering()) {\r\n            return raw.currentValue;\r\n          } else {\r\n            return raw.comittedValue;\r\n          }\r\n        },\r\n        set current(v) {\r\n          if (!isRendering()) {\r\n            raw.comittedValue = v;\r\n          }\r\n          raw.currentValue = v;\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  raw.currentValue = raw.comittedValue;\r\n\r\n  useLayoutEffect(() => {\r\n    raw.comittedValue = raw.currentValue;\r\n  });\r\n\r\n  return raw.ref;\r\n\r\n}\r\n\r\nfunction useStatic(cb) {\r\n  const callback = useRef(cb)\r\n  callback.current = cb\r\n\r\n  const mem = useConcurrentModeSafeRef((...args) => callback.current(...args))\r\n  return mem.current\r\n}\r\n```\r\n\r\nOf course, that's bad because it's using unsafe API (`React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED`). Perhaps something like `useConcurrentModeSafeRef()` could be added to React itself.","updated_at":"2021-12-29T19:06:40Z","created_at":"2021-12-29T19:06:40Z","creator_user_login":"jampy"}
{"number":14099,"comment_id":"1117587754","body":"We've submitted a proposal to solve this. Would appreciate your input!\r\n\r\nhttps://github.com/reactjs/rfcs/pull/220","updated_at":"2022-05-04T16:58:30Z","created_at":"2022-05-04T16:58:30Z","creator_user_login":"gaearon"}
{"number":14099,"comment_id":"1119518948","body":"Adding more *React* specific concepts like `useEvent` seem troublesome on a first glance considering it's more of *Reactisms* that kinda fight with the underlaying JS language principles. That being said, I don't see a better solution for this specific issue at the moment, RFC seems very well thought through.","updated_at":"2022-05-06T11:29:34Z","created_at":"2022-05-06T11:29:34Z","creator_user_login":"nikolalukovic"}
{"number":14099,"comment_id":"1124807382","body":"I wrote a hook that achieves exactly the same some time ago.\r\n\r\nWould you please have a look, @gaearon? It might be every so slightly more efficient than yours, as it uses two hooks rather than three.\r\n\r\nIf you're interested, I also tried to start a discussion [here.](https://www.reddit.com/r/reactjs/comments/tsysgp/ref_callbacks_use_cases_and_pitfalls_of_this/)\r\n\r\n\r\n```ts\r\n/**\r\n * Returns a memoized version of your function that maintains a stable reference, but\r\n * also can read the latest scope (props and state) of the component in which it is used.\r\n */\r\nfunction useStableCallback<Args extends any[], T>(\r\n    callback: (...args: Args[]) => T\r\n) {\r\n    const callbackContainer = useRef(callback)\r\n    callbackContainer.current = callback\r\n    return useCallback(\r\n        (...args: Args) => callbackContainer.current(...args),\r\n        [callbackContainer]\r\n    )\r\n}\r\n```","updated_at":"2022-05-12T10:07:35Z","created_at":"2022-05-12T10:07:35Z","creator_user_login":"mariusbrataas"}
{"number":14099,"comment_id":"1124901039","body":"> const callbackContainer = useRef(callback)\r\n> callbackContainer.current = callback\r\n\r\n@mariusbrataas Updating a ref during render is an [unsafe side effect](https://reactjs.org/docs/strict-mode.html#detecting-unexpected-side-effects).","updated_at":"2022-05-12T11:56:41Z","created_at":"2022-05-12T11:56:41Z","creator_user_login":"bvaughn"}
{"number":14099,"comment_id":"1125047461","body":"The `useEvent` proposal definitely goes in the right direction, as the misuse of `useCallback`  is something we've all seen countless times across teams and organizations. \r\n\r\nI do want to express some strong concerns around the naming as `useEvent` could potentially be very confusing for less experienced engineers or those who are coming to React from other frameworks.\r\nThe dangerous naming correlation to DOM events makes it quite misleading at first glance and seems to hide its true purpose.\r\n\r\nI much prefer `useStableCallback` as someone else suggested, or `useHandler` as I feel it makes it easier to document and explain its usage moving forward.","updated_at":"2022-05-12T14:13:39Z","created_at":"2022-05-12T14:13:02Z","creator_user_login":"floroz"}
{"number":14099,"comment_id":"1125601620","body":"There is a situation we shouldn't use `useEvent`:\r\n\r\nWe need to spread value handlers to a list of components that track their own data collection position. \r\n\r\n```\r\nconst handleChangeValueByIndex = useCallback(\r\n  (index) => (indexValue) => {\r\n     onChange(listValue.map((v, i) => i === index ? indexValue : v))\r\n  },\r\n  [onChange, value]\r\n)\r\n\r\nreturn (\r\n   <>\r\n      {value.map((v, i) => (\r\n          <Item key={value.id} onChange={handleChangeValueByIndex(i)} value={v} />\r\n      ))}\r\n   </>\r\n)\r\n```\r\n\r\n`useEvent` keeps the reference of the raw value instead of the latest value.\r\n\r\n`useCallback` handles the higher-order function well.\r\n\r\nCan we have some doc elaborate on this?","updated_at":"2022-05-13T03:23:43Z","created_at":"2022-05-13T02:41:44Z","creator_user_login":"zheeeng"}
{"number":14099,"comment_id":"1125721093","body":"Definitely agree with @floroz regarding the naming and would prefer something like `useStableCallback`.","updated_at":"2022-05-13T07:01:14Z","created_at":"2022-05-13T07:01:14Z","creator_user_login":"thmsobrmlr"}
{"number":14099,"comment_id":"1126193204","body":"@zheeeng I'm not sure what's the benefit of even using `useCallback` in your case. `handleChangeValueByIndex(i)` will always return a new function even though the `handleChangeValueByIndex` itself is memoized.\r\n\r\nHaving said that, there definitely are cases where `useCallback` should still be used even after introducing `useEvent`. One example is memoized components that use render props:\r\n\r\n```\r\nconst renderItem = useCallback(i => <Item data={items[i]} />, [items])\r\nreturn <List renderItem={renderItem} count={items.length} />\r\n```\r\n\r\nHere, if `List` is memoized, `renderItem` reference has to change along with `items`, otherwise the changes to `items` won't be reflected on screen","updated_at":"2022-05-13T15:49:01Z","created_at":"2022-05-13T15:43:47Z","creator_user_login":"Hypnosphi"}
{"number":14099,"comment_id":"1126241064","body":"Hi, @Hypnosphi, I update this case here, the old style I use `useCallback` like this below. After switching to `useEvent` causes buggy behavior.\r\n\r\n```\r\nconst handleChangeValueByIndex = useCallback(\r\n  (index) => (indexValue) => {\r\n     onChange(listValue.map((v, i) => i === index ? indexValue : v))\r\n  },\r\n  [onChange, value]\r\n)\r\n\r\nreturn (\r\n   <>\r\n      {value.map((v, i) => (\r\n          <Item key={value.id} onChangeByIndex={handleChangeValueByIndex} index={i} value={v}  />\r\n      ))}\r\n   </>\r\n)\r\n```\r\n\r\n```\r\nconst Item = React.memo(({ onChangeByIndex, index, value }) => {\r\n    const handleChange = useMemo(() => onChangeByIndex(index), [onChangeByIndex, index]);\r\n\r\n    return (\r\n        <Input value={value} onChange={handleChange} />\r\n    )\r\n}) \r\n```\r\n\r\nThis way we get benefits for memoizing the handleChangeValueByIndex which passe to `Item`. The parent component rerender won't affect the child `Item`.\r\n\r\n","updated_at":"2022-05-13T16:31:57Z","created_at":"2022-05-13T16:31:57Z","creator_user_login":"zheeeng"}
{"number":14099,"comment_id":"1126244755","body":"In this case the “event” is the inner curried part. In general I would not recommend currying React event handlers. It’s a pretty confusing pattern to read and deal with. ","updated_at":"2022-05-13T16:36:37Z","created_at":"2022-05-13T16:36:37Z","creator_user_login":"gaearon"}
{"number":14099,"comment_id":"1126408696","body":"> The `useEvent` proposal definitely goes in the right direction, as the misuse of `useCallback` is something we've all seen countless times across teams and organizations.\r\n> \r\n> I do want to express some strong concerns around the naming as `useEvent` could potentially be very confusing for less experienced engineers or those who are coming to React from other frameworks. The dangerous naming correlation to DOM events makes it quite misleading at first glance and seems to hide its true purpose.\r\n> \r\n> I much prefer `useStableCallback` as someone else suggested, or `useHandler` as I feel it makes it easier to document and explain its usage moving forward.\r\n\r\nAs a long time user of react, I also agree. `useEvent` makes me assume we are using an emitter and i would avoid handler for the same reason as it implies action in response to an emitted event.  I like your suggestion of `useStableCallback` over `useEvent`","updated_at":"2022-05-13T19:53:42Z","created_at":"2022-05-13T19:53:42Z","creator_user_login":"davidcoleman007"}
{"number":14099,"comment_id":"1126679566","body":"> In this case the “event” is the inner curried part. In general I would not recommend currying React event handlers. It’s a pretty confusing pattern to read and deal with.\r\n\r\nCan we have documented rules or principles to note this recommendation? Users can't avoid getting trapped by using `useEvent` in ways out of the `When useEvent should not be used` chapter listed.","updated_at":"2022-05-14T09:30:34Z","created_at":"2022-05-14T09:30:34Z","creator_user_login":"zheeeng"}
{"number":14099,"comment_id":"1126687928","body":"> > In this case the “event” is the inner curried part. In general I would not recommend currying React event handlers. It’s a pretty confusing pattern to read and deal with.\r\n> \r\n> Can we have documented rules or principles to note this recommendation? Users can't avoid getting trapped by using `useEvent` in ways out of the `When useEvent should not be used` chapter listed.\r\n\r\nThe RFC states that the event function created by `useEvent` will throw if called during render, which is what you did with your curried handler.","updated_at":"2022-05-14T11:07:12Z","created_at":"2022-05-14T10:33:12Z","creator_user_login":"nikparo"}
{"number":14099,"comment_id":"1126691314","body":"One more argument against the \"useEvent\" naming. The following statement derived from the RFC doesn't make sense in English:\r\n\r\n> [The RFC states that] the event created by useEvent will throw if called\r\n\r\nHow can an event throw? How can an event be called? An event is something that happens. Sometimes we say \"an event\" as a shorthand to \"an event object\" that not only mentions what happened, but also describes the details about what happened. \r\n\r\nBut it feels unintuitive to use \"an event\" as a shorthand for \"an event handler function\" that processes what happened during an event.\r\n\r\nWhile writing the above, I think I understood one way of thinking where these can be equivalent: if we treat an event as something not instantaneous that has duration (which is not how events are usually treated in software engineering), and then treat the side effects as an unseparable part of an event, then the function that processes the event is the part of the event, hence \"using an event\" makes some sense.","updated_at":"2022-05-14T10:59:16Z","created_at":"2022-05-14T10:59:16Z","creator_user_login":"sompylasar"}
{"number":14099,"comment_id":"1126692738","body":"> How can an event throw? How can an event be called?\r\n\r\n@sompylasar I think that was just me accidentally leaving out \"function\" from \"event function\". Sorry about that.\r\n","updated_at":"2022-05-14T11:09:33Z","created_at":"2022-05-14T11:09:33Z","creator_user_login":"nikparo"}
{"number":14099,"comment_id":"1126700091","body":"@nikparo Nothing to be sorry for, I think that's important and that proves my point. We use programming languages and naming conventions to communicate, but this particular (useEvent) naming introduces a lot of space for ambiguity. By the way, \"event function\" also doesn't make a lot of sense in the context of \"an event\" as a marker for a point in time when something happened instantaneously.\r\n\r\nEDIT: \"An event handler function\" (or, more grammatically correct \"an event-handling function\") from my point of view makes more sense than \"an event function\" because the main keyword here is \"handler\"/\"handling\", a function that that \"handles\" the event. English doesn't make this easy because whether a word is a noun or an adjective depends on its position in a sequence of words.","updated_at":"2022-05-14T12:09:56Z","created_at":"2022-05-14T11:53:51Z","creator_user_login":"sompylasar"}
{"number":14099,"comment_id":"1126968182","body":"[the rfc](https://github.com/reactjs/rfcs/blob/useevent/text/0000-useevent.md) sounds nice. In almost any react app, I end up using a `useLatest` hook to ref-ify non-reactive values I only need in response to some event. I wonder if all usages of `useLatest` are related to event handling and hence covered by the proposed hook for creating event handlers.\r\n\r\nOn a different note, the name `useEvent` confused me in the beginning and I see many people are also talking about it.\r\n🟢 `useState` => returns state (and setter)\r\n🟢 `useRef` => returns ref\r\n🟢 `useCallback` => returns callback\r\n🟢 `useMemo` => returns memorized value\r\n🔴 `useEvent` => returns event **handler**\r\n\r\nI get that [having a short name](https://github.com/reactjs/rfcs/blob/useevent/text/0000-useevent.md#:~:text=Having%20a%20short%20name%20helps) is nice, but confusing \"event\" and \"event handler\" is a much more considerable drawback IMO.\r\nI think `useEventHandler` or `useHandler` (if having a short name is deemed very important) are better choices.","updated_at":"2022-09-06T19:40:20Z","created_at":"2022-05-15T15:51:46Z","creator_user_login":"alirezamirian"}
{"number":14099,"comment_id":"1127556203","body":"yeah, it's implemented in https://www.npmjs.com/package/react-use-handler\r\nwould be nice to have it in react.","updated_at":"2022-05-16T11:31:10Z","created_at":"2022-05-16T11:31:10Z","creator_user_login":"vadzim"}
{"number":14099,"comment_id":"1128335325","body":"> > > In this case the “event” is the inner curried part. In general I would not recommend currying React event handlers. It’s a pretty confusing pattern to read and deal with.\r\n> > \r\n> > \r\n> > Can we have documented rules or principles to note this recommendation? Users can't avoid getting trapped by using `useEvent` in ways out of the `When useEvent should not be used` chapter listed.\r\n> \r\n> The RFC states that the event function created by `useEvent` will throw if called during render, which is what you did with your curried handler.\r\n\r\n`useEvent` shouldn't be used in render-props, a common react pattern. it's explainable but it is hard to realize intuitively. Should we list more cases in RFC?","updated_at":"2022-05-17T02:30:10Z","created_at":"2022-05-17T02:30:10Z","creator_user_login":"zheeeng"}
{"number":14099,"comment_id":"1132310869","body":"Gentlemen: `useGranularCallback` from `npm i granular-hooks`\r\nBTW, I use their useGranularEffect() a lot because I don't want useEffect style triggering when only certain vars should trigger updates. It takes two lists of arguments, primary and secondary deps as arrays. primary deps trigger calling the hook or changing the callback, secondaries don't.","updated_at":"2022-05-20T00:02:11Z","created_at":"2022-05-20T00:02:11Z","creator_user_login":"BirdTho"}
{"number":14099,"comment_id":"1133049113","body":"@BirdTho this line modifies ref during render which is not safe in concurrent mode\r\nhttps://github.com/gfox1984/granular-hooks/blob/main/src/hooks/useGranularHook.ts#L17","updated_at":"2022-05-20T15:40:16Z","created_at":"2022-05-20T15:40:16Z","creator_user_login":"Hypnosphi"}
{"number":14099,"comment_id":"1133099062","body":"@BirdTho I checked the code of [granular-hooks](https://github.com/gfox1984/granular-hooks). The whole library is just a roundabout way of calling hooks while leaving out some dependencies. The secondary dependency array does nothing at all - it doesn't matter whether you include it or not. It does not protect you against stale values!\r\n\r\nIf you want a hook that doesn't nag at you about `exhaustive-deps`, then you are better off with `export const useGranularCallback = useCallback;`. ","updated_at":"2022-05-20T16:28:45Z","created_at":"2022-05-20T16:28:45Z","creator_user_login":"nikparo"}
{"number":14099,"comment_id":"1133259630","body":"@nikparo\r\n\r\nI disagree.\r\nSecondary deps array does something:\r\nhttps://github.com/gfox1984/granular-hooks/blob/8fbb19cbb949e5cd7f15827c4a6a6a60c2465788/src/hooks/useGranularHook.ts#L17\r\n\r\nIt is clearly being included in what's passed to the callback, along with the primary deps.\r\nIt's only running the equivalency check on the primary deps.","updated_at":"2022-05-20T19:39:40Z","created_at":"2022-05-20T19:37:30Z","creator_user_login":"BirdTho"}
{"number":14099,"comment_id":"1133455707","body":"@Hypnosphi So basically, if I'm not going to use concurrent mode, this is fine then?","updated_at":"2022-05-20T23:13:54Z","created_at":"2022-05-20T23:13:54Z","creator_user_login":"BirdTho"}
{"number":14099,"comment_id":"1133603651","body":"> It is clearly being included in what's passed to the callback, along with the primary deps.\r\nIt's only running the equivalency check on the primary deps.\r\n\r\n@BirdTho They are being passed to the hook* (not callback), sure, but they are only updated when the primary deps are updated. There is no magic connection between the values in the closure and the values in the dependency array. In other words, the callback closure remains stale until the primary deps change.\r\n\r\nBut this is getting off topic, so if you don't believe me I suggest you simply test it yourself with and without the so called secondary deps.","updated_at":"2022-05-21T11:28:20Z","created_at":"2022-05-21T11:28:20Z","creator_user_login":"nikparo"}
{"number":14099,"comment_id":"1147109554","body":"Seems like it's useless with onChange events for input:\r\n```tsx\r\ntype InputProps = {\r\n  name: string;\r\n  value: string;\r\n  setValue: (value: string) => void;\r\n};\r\n\r\nconst Input: React.FC<InputPropsA> = ({ name, value, setValue }) => {\r\n  const onChangeHandler = useEvent((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value);\r\n  });\r\n\r\n  return <input name={name} onChange={onChangeHandler} value={value} />;\r\n};\r\n\r\nconst Form = () => {\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n  const [middlename, setMiddlename] = useState('');\r\n\r\n  return (\r\n    <form>\r\n      <Input name=\"firstname\" setValue={setFirstname} value={firstname} />\r\n      <Input name=\"lastname\" setValue={setLastname} value={lastname} />\r\n      <Input name=\"middlename\" setValue={setMiddlename} value={middlename} />\r\n    </form>\r\n  );\r\n};\r\n```\r\n\r\nEven if you put every setState into useCallback - it's not working for me right now with [this hook](https://github.com/reactjs/rfcs/blob/useevent/text/0000-useevent.md#internal-implementation)\r\n\r\nIf I'm doing something wrong, pelase guide me.","updated_at":"2022-06-06T06:53:52Z","created_at":"2022-06-06T06:51:35Z","creator_user_login":"Moranilt"}
{"number":14099,"comment_id":"1147557003","body":"@Moranilt \r\n\r\nThe main idea is to memoize a callback, which is passed to another component. In your example you're trying to memoize a callback, which is passed into `<input />`. But there is no point to do it, cause, `<input />` does not have any instruments to use that memoized callback.\r\n\r\nSo, in your example you could memoize set*** callback. But in your case they are memoized already) \r\n\r\nBut, I have a fix for your example:\r\n\r\n```tsx\r\ntype InputProps = {\r\n  name: string;\r\n  value: string;\r\n  setValue: (value: string) => void;\r\n  onClick: (value: string) => void;\r\n};\r\n\r\n// You have to use memo() here, to make memoization work\r\nconst Input = memo<InputPropsA>(({ name, value, setValue, onClick }) => {\r\n  // You do not need any memoization here for onChange or onClick handler\r\n  return <input name={name} onChange={(e) => e.taget.value} value={value} onClick={() => onClick(value)} />;\r\n});\r\n\r\nconst Form = () => {\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n  const [middlename, setMiddlename] = useState('');\r\n  \r\n  // And this is a correct memoization, cause onInputClick is passed into Input\r\n  const onInputClick = useEvent((value: string) => {\r\n    console.log(`value is: ${value}`);\r\n  });\r\n\r\n  return (\r\n    <form>\r\n      <Input name=\"firstname\" setValue={setFirstname} value={firstname} onClick={onInputClick} />\r\n      <Input name=\"lastname\" setValue={setLastname} value={lastname} onClick={onInputClick} />\r\n      <Input name=\"middlename\" setValue={setMiddlename} value={middlename} onClick={onInputClick} />\r\n    </form>\r\n  );\r\n};\r\n```\r\n\r\nRight now, `<Input />` will be rerendered in case of the `value` prop changing.","updated_at":"2022-06-07T10:16:38Z","created_at":"2022-06-06T15:10:27Z","creator_user_login":"artem-malko"}
{"number":14099,"comment_id":"1272704336","body":"to be honest, I'm not sure why the implementation of the useEvent has to be so complicated, why not just this?\r\n\r\n```js\r\nfunction useEvent(callback) {\r\n  const callbackRef = useRef(callback)\r\n  callbackRef.current = callback\r\n  \r\n  return useCallback((...args) => {\r\n    return callbackRef.current(...args)\r\n  }, [])\r\n}\r\n```\r\n\r\nbelow is the typescript version\r\n```ts\r\nfunction useEvent<ArgumentsType extends unknown[], ReturnType>(\r\n  callback: (...args: ArgumentsType) => ReturnType,\r\n) {\r\n  const callbackRef = useRef(callback)\r\n  callbackRef.current = callback\r\n\r\n  return useCallback((...args: ArgumentsType): ReturnType => {\r\n    return callbackRef.current(...args)\r\n  }, [])\r\n}\r\n```\r\n\r\nwith this implementation, there is no such thing as when will the current is switched, because it will be switched every single time, and it can be used in rendering as well","updated_at":"2022-10-10T02:36:00Z","created_at":"2022-10-10T02:00:10Z","creator_user_login":"kambing86"}
{"number":14099,"comment_id":"1272792499","body":"@kambing86 this will not work properly in \"concurrent mode\", see https://github.com/facebook/react/issues/14099#issuecomment-440794435","updated_at":"2022-10-10T05:08:38Z","created_at":"2022-10-10T05:08:38Z","creator_user_login":"jampy"}
{"number":14099,"comment_id":"1282431610","body":"```ts\r\nfunction getStateAsync(setter) {\r\n  return new Promise(resolve => {\r\n     setter(prevValue => {\r\n        resolve(prevValue);\r\n        return prevValue; // The value has not changed.\r\n     });\r\n  })\r\n}\r\n\r\nfunction Chat() {\r\n  const [text, setText] = useState('');\r\n\r\n  const onClick = useCallback(async () => {\r\n    sendMessage(await getStateAsync(setText));\r\n  }, []); // There is no dependency array.\r\n\r\n  return <SendButton onClick={onClick} />;\r\n}\r\n```\r\nThis [gist](https://gist.github.com/sarakusha/2fc9d1d4d3e732d3ac890993a9c80a4a) is written in typescript and allows you to get several states at once.","updated_at":"2022-10-18T13:54:38Z","created_at":"2022-10-18T13:54:38Z","creator_user_login":"sarakusha"}
{"number":14099,"comment_id":"1288000643","body":"While it's not fully available, what could we use to achieve the closest behavior? https://github.com/vadzim/react-use-handler, https://github.com/gfox1984/granular-hooks, or some gist above? I'm using React 16","updated_at":"2022-10-23T04:20:15Z","created_at":"2022-10-23T04:20:15Z","creator_user_login":"kfcaio"}
{"number":14099,"comment_id":"1349676244","body":"> @sokra An alternate would be:\r\n> \r\n> ```js\r\n> function useEventCallback(fn) {\r\n>   let ref = useRef();\r\n>   useLayoutEffect(() => {\r\n>     ref.current = fn;\r\n>   });\r\n>   return useCallback(() => (0, ref.current)(), []);\r\n> }\r\n> ```\r\n> \r\n> This doesn't require the args like yours has. But again, you can't call this in the render phase and the use of mutation is dicey for concurrent.\r\n\r\n@sophiebits wouldn't `useImperativeHandle` be even closer to the desired behavior:\r\n```js\r\nfunction useEventCallback(fn) {\r\n  const ref = useRef(fn);\r\n  useImperativeHandle(ref, () => fn);\r\n  return useCallback((...args) => ref.current?.(...args), []);\r\n}\r\n```\r\nIf thats not the case, can you explain why? - Just curious whether I'm understanding everything properly.\r\n","updated_at":"2022-12-13T20:58:14Z","created_at":"2022-12-13T20:54:27Z","creator_user_login":"KingSora"}
{"number":14099,"comment_id":"1354043937","body":"I think we can save some overhead by writing it this way (avoiding what seems to be an unnecessary `useCallback` call in the above proposals):\r\n\r\n```javascript\r\nexport const useEvent = (fn) => {\r\n  const ref = useRef([fn, (...args) => ref[0](...args)]).current;\r\n  useLayoutEffect(() => {\r\n    ref[0] = fn;\r\n  });\r\n  return ref[1];\r\n}\r\n```","updated_at":"2022-12-16T01:22:43Z","created_at":"2022-12-16T01:19:38Z","creator_user_login":"HansBrende"}
{"number":14099,"comment_id":"1407393353","body":"I bumped into this thread while already having a solution and trying to understand if I'm reinventing the wheel :) \r\n\r\nLooks like I'm not, as my solution to the problem is different than existing options:\r\n\r\n```typescript\r\nexport default function useConstCallback<T extends CallableFunction>(func: T, deps?: React.DependencyList): T {\r\n  const ref = useRef<T>(func)\r\n\r\n  useMemo(() => {\r\n    ref.current = func\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, deps)\r\n\r\n  return useCallback((...params) => ref.current(...params), []) as unknown as T\r\n}\r\n```\r\n\r\nThe main difference compared to `useEvent` above is that I'm abusing `useMemo()` (which runs instantly during hook call) instead of using `useLayoutEffect()` or `useEffect()` which calls only after the render;\r\n\r\nConsidering `useCallback(x, deps)` is functionally the same as `useMemo(() => x, deps)` (see implementation in React: https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberHooks.js#L2242), this works exactly like `useCallback()` would, with the exception of having a constant reference.\r\n\r\nAt the first glance, it may have the same issues with `concurrent mode` as this comment: https://github.com/facebook/react/issues/14099#issuecomment-1272704336\r\nBut, by quickly checking, it looks like `concurrent mode` was abandoned altogether, and as such, any considerations about it are irrelevant.","updated_at":"2023-01-28T13:06:35Z","created_at":"2023-01-28T12:56:38Z","creator_user_login":"jewalky"}
{"number":14099,"comment_id":"1407399676","body":"Stuff like this is why Vue or Angular are still alive.\n\nOn Sat, Jan 28, 2023, 7:57 AM ZZYZX ***@***.***> wrote:\n\n> I bumped into this thread while already having a solution and trying to\n> understand if I'm reinventing the wheel :)\n>\n> Looks like I'm not, as my solution to the problem is different than\n> existing options:\n>\n> export default function useConstCallback<T extends CallableFunction>(func: T, deps?: React.DependencyList): T {\n>   const ref = useRef<T>(func)\n>\n>   useMemo(() => {\n>     ref.current = func\n>     // eslint-disable-next-line react-hooks/exhaustive-deps\n>   }, deps)\n>\n>   return useCallback((...params) => ref.current(...params), []) as unknown as T}\n>\n> The main difference compared to useEvent above is that I'm abusing\n> useMemo() (which runs instantly during hook call) instead of using\n> useLayoutEffect() or useEffect() which calls only after the render;\n>\n> Considering useCallback(x, deps) is functionally the same as useMemo(()\n> => x, deps) (see implementation in React:\n> https://github.com/facebook/react/blob/main/packages/react-reconciler/src/ReactFiberHooks.js#L2242),\n> this works exactly like useCallback() would, with the exception of having\n> a constant reference.\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/facebook/react/issues/14099#issuecomment-1407393353>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ACR376PUOJWLDN3ZRZEVPF3WUUJR7ANCNFSM4GB2QADA>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***>\n>\n","updated_at":"2023-01-28T13:29:40Z","created_at":"2023-01-28T13:29:40Z","creator_user_login":"BirdTho"}
{"number":14099,"comment_id":"1463879162","body":"Given that the 'useEvent' hook has [gone the way of the doodoo](https://github.com/facebook/react/pull/25881) what are the plans to solve this issue?\r\n\r\nI was a big fan of the 'useEvent' hook - and end up having to copy my own implementation in every other project (something like [use-event-callback](https://github.com/Volune/use-event-callback) or the one @HansBrende mentioned in that issue).\r\n\r\nTo bring this issue to a final close why not encourage a simply \"hook recipe\" on the documentation?\r\n\r\nSomething like:\r\n\r\n```\r\n## Avoiding Invalidated Memoized Objects\r\n\r\nSlap your function into a ref that's updated through useLayoutEffect.\r\n\r\n<recipe here>\r\n\r\nCaveats:\r\n\r\nbla bla SSR bla bla\r\n```\r\n\r\nI understand that the team is currently investigating other options for the 'rendering optimizations are cumbersome to type' problem- but us every day developers don't have access to these tools.\r\n\r\nIndeed, should they be released we might not be able to use them because we're stuck on an old version of React for some reason or another.","updated_at":"2023-03-10T14:25:38Z","created_at":"2023-03-10T14:25:38Z","creator_user_login":"JoaquimEsteves"}
{"number":13991,"comment_id":"433629397","body":"So just for clarification: You were importing a hook (say `useState`) from a different `react` module than the one used to render the component?\r\n\r\nI agree that this is confusing. I'm not sure though if we have a way of knowing if any other React module is rendering. AFAIK we try to run React in isolation as much as possible so that multiple React instances can work in the same global context without issues.\r\n\r\nOtherwise we could probably update the error message and mention this case as well if it's not too confusing.","updated_at":"2018-10-27T15:17:59Z","created_at":"2018-10-27T15:17:59Z","creator_user_login":"philipp-spiess"}
{"number":13991,"comment_id":"433630460","body":"Yes, I compared `React1 === React2` and it was `false` (React1 being from index.js and React2 being from the file using the hook). When this happens, hooks fail with the generic error message above.\r\n\r\nThis issue is to raise awareness of this case and maybe improve the error message in some way to help people that face this. It's probably very edge though.","updated_at":"2018-10-31T16:11:31Z","created_at":"2018-10-27T15:31:08Z","creator_user_login":"brunolemos"}
{"number":13991,"comment_id":"435135293","body":"Yup, i tried to [npm link](http://www.deadcoderising.com/how-to-smoothly-develop-node-modules-locally-using-npm-link/) a package i'm creating. It throws that same error since the other package is also using hooks but with its own React. I had to publish my package to NPM and then import it directly from NPM. That way the error was gone, but i hope this is fixed since publishing a package without testing it is bad, obviously ","updated_at":"2018-11-01T18:18:46Z","created_at":"2018-11-01T18:16:30Z","creator_user_login":"GabrielBB"}
{"number":13991,"comment_id":"435343455","body":"Lerna monorepos suffer from this as well when a custom hook is defined in one package and used by another as the symlinked dependencies use their own copy of react.\r\n\r\nI have a (hacky) workaround at the moment using [`npm-link-shared`](https://www.npmjs.com/package/npm-link-shared) and a `prestart` npm script to essentially replace the one package's `react` dependency with a symlink to the other's, so they use the same instance.\r\n\r\n```json\r\n\"prestart\": \"npm-link-shared ./node_modules/<other package>/node_modules . react\"\r\n```","updated_at":"2018-11-02T11:08:30Z","created_at":"2018-11-02T11:00:27Z","creator_user_login":"mpeyper"}
{"number":13991,"comment_id":"435587809","body":"I had the same issue and I resolved it by adding:\r\n```\r\n alias: {\r\n        react: path.resolve('./node_modules/react')\r\n      }\r\n```\r\nto `resolve` property in webpack config of my main app. \r\n\r\nIt's was obviously my mistake of using two copies of React but I agree that it would be great if the error message was better. I think this is maybe similar to: https://github.com/facebook/react/issues/2402","updated_at":"2018-11-03T13:25:39Z","created_at":"2018-11-03T13:25:39Z","creator_user_login":"apieceofbart"}
{"number":13991,"comment_id":"435943686","body":"@mpeyper It works. Thanks\r\n","updated_at":"2018-11-05T16:40:02Z","created_at":"2018-11-05T16:40:02Z","creator_user_login":"GabrielBB"}
{"number":13991,"comment_id":"439667051","body":"@apieceofbart That worked for me. Thanks for the suggestion. 👍 ","updated_at":"2018-11-18T04:33:17Z","created_at":"2018-11-18T04:33:17Z","creator_user_login":"jimbo"}
{"number":13991,"comment_id":"443909137","body":"As I understand this problem arises when there are multiple copies of React in the same bundle.\r\n\r\nIs this also a problem if two separate bundles with their own copies of React are bootstrapping their own React applications on separate dom elements, like described here: https://medium.jonasbandi.net/hosting-multiple-react-applications-on-the-same-document-c887df1a1fcd\r\n\r\nI think the latter is a common \"integration\" pattern used for instance in the single-spa meta-framework (https://github.com/CanopyTax/single-spa).","updated_at":"2018-12-04T06:54:57Z","created_at":"2018-12-03T23:23:16Z","creator_user_login":"jbandi"}
{"number":13991,"comment_id":"445873622","body":"I'm also having this issue even with the exact same react versions, developing hooks to be published on their own is broken when using `npm-link`. Getting the same unhelpful `hooks can only be called inside the body of a function component` message. @apieceofbart's alias solution solved this for me. Thanks so much!","updated_at":"2018-12-10T18:25:59Z","created_at":"2018-12-10T16:15:41Z","creator_user_login":"vpicone"}
{"number":13991,"comment_id":"446256018","body":"Same issue here when I `npm link` a package to my main application. I could not get [`babel-plugin-module-resolver`](https://github.com/tleunen/babel-plugin-module-resolver) working.\r\nIt says:\r\n`Could not find module './node_module/react'`\r\nThis is annoying because it prevents me from testing my component locally before publishing it.","updated_at":"2018-12-11T16:01:03Z","created_at":"2018-12-11T16:01:03Z","creator_user_login":"dotlouis"}
{"number":13991,"comment_id":"449585188","body":"I fixed my issue by removing the **caret** in `\"react\": \"^16.7.0-alpha.2\"`\r\nHere is the full comment: https://github.com/facebook/react/issues/14454#issuecomment-449585005","updated_at":"2018-12-22T17:17:37Z","created_at":"2018-12-22T17:17:24Z","creator_user_login":"doasync"}
{"number":13991,"comment_id":"449597362","body":"I'm using Yarn, and fixed this by [forcing resolution](https://yarnpkg.com/lang/en/docs/package-json/#toc-resolutions) in my `package.json`:\r\n\r\n```\r\n  \"resolutions\": {\r\n    \"**/react\": \"16.7.0-alpha.2\",\r\n    \"**/react-dom\": \"16.7.0-alpha.2\"\r\n  },\r\n```","updated_at":"2018-12-22T21:01:02Z","created_at":"2018-12-22T21:01:02Z","creator_user_login":"pelotom"}
{"number":13991,"comment_id":"449730060","body":"Same here!!","updated_at":"2018-12-24T12:45:46Z","created_at":"2018-12-24T12:45:46Z","creator_user_login":"leecade"}
{"number":13991,"comment_id":"460803584","body":"Just wanted to leave a note here for anyone who might have had this problem in the same manner I did. \r\n\r\nWe're running React and Rails with the `react-rails` gem and rendering components directly into Rails views. I was receiving this error every time a new version of the app was pushed, because Turbolinks was grabbing the new JS bundle out of the `<head>` which loaded up an extra instance of React. Solution was to have Turbolinks do a full page reload when it detects the bundle has changed: https://github.com/turbolinks/turbolinks#reloading-when-assets-change\r\n\r\nThis appears to have solved it for us.","updated_at":"2019-02-05T21:06:33Z","created_at":"2019-02-05T21:06:33Z","creator_user_login":"zbuttram"}
{"number":13991,"comment_id":"461206667","body":"I'm very excited to finally put Hooks into production, and we all owe a huge thank you to everyone who made it possible. They're a _**ton**_ of fun to work with and have made my code shorter *and* more declarative.\r\n\r\nJust as a heads up, this issue is still relevant in the released version with the same unhelpful error message of \"Hooks can only be called inside the body of a function component.\"\r\n\r\nIs this something that can be fixed? I imagine it might become more and more prevalent as more devs start to implement the new features, and a clearer error message would go a long way in lieu of an outright \"fix\".\r\n\r\nThanks again for all the hard work and congrats on the release! It's really an amazing set of features.\r\n\r\n*Edit*: Should have looked closer at the open PRs, just found #14690 that addresses this. Thanks @threepointone!","updated_at":"2019-02-06T23:09:48Z","created_at":"2019-02-06T22:05:27Z","creator_user_login":"taylorham"}
{"number":13991,"comment_id":"461343276","body":"@taylorham The link in the commit doesn't point to anything yet. I'll wait for it, but this is an issue I have been having since using hooks in a linked _(as of `npm link`)_ package and it's impossible to work with it locally without publishing.\r\nAfter looking severals issues, I tought this was an [issue with react-hot-loader](https://github.com/gaearon/react-hot-loader/issues/1088) that was compiling components to classes, but even after [they released a version with Hook support](https://github.com/gaearon/react-hot-loader/issues/1088#issuecomment-446938770), it still fails the same way.\r\nI've tried a lot of different hacks but no luck. I don't know why everybody hasn't been struck with this issue yet 🧐","updated_at":"2019-02-08T09:52:07Z","created_at":"2019-02-07T09:22:08Z","creator_user_login":"dotlouis"}
{"number":13991,"comment_id":"461559148","body":"@dotlouis Yeah, it's just an updated error message so far and the issue itself is still a pain.\r\n\r\nThe only thing that has worked for me at all is to make whatever app I'm developing depend on the *library's* instance of React by using `\"react\": \"link:../my-library/node_modules/react\"`.","updated_at":"2019-02-07T19:15:43Z","created_at":"2019-02-07T19:15:43Z","creator_user_login":"taylorham"}
{"number":13991,"comment_id":"461862242","body":"- none of the proposed resolutions did work for me, and i've been trying all\r\n- trying to install on a project implementing context and a lot of HOCs\r\n- starting from a blank project did the trick\r\n- i'm keeping on looking for the cause\r\n\r\n[ok] for me, correction was not about package.json or others double react cause : i had a global themeProvider on top of my app, coming from context. Replacing it with a \"useContext Hook\" ( while rewriting it as a functional comp ) seemed to be the only solution\r\nMaybe is there an issue when\r\n```\r\n<GoodOldContext iam={a class component}>\r\n    <BrandNewHook>\r\n             errors : Hooks can only be called inside the body of a function component #35\r\n     </BrandnewHook>\r\n</GooOldContext>\r\nexport withGoodOldContext.consumer(here component)\r\n```","updated_at":"2019-02-11T10:19:34Z","created_at":"2019-02-08T16:32:44Z","creator_user_login":"medyll"}
{"number":13991,"comment_id":"462090853","body":"I'm developing a component where there is an `example` folder that uses `create-react-app`.\r\n\r\nDoing this in `package.json` resolved this issue for me:\r\n\r\n```\r\n{\r\n    ...\r\n    \"dependencies\": {\r\n        \"my-component\": \"link:..\",\r\n        \"react\": \"link:../node_modules/react\",\r\n        \"react-dom\": \"link:../node_modules/react-dom\",\r\n        \"react-scripts\": \"2.1.3\"\r\n    },\r\n    ...\r\n}\r\n```","updated_at":"2019-02-10T00:00:05Z","created_at":"2019-02-09T23:59:43Z","creator_user_login":"DylanVann"}
{"number":13991,"comment_id":"462687740","body":"@taylorham @DylanVann Thanks for your input guys. Unfortunately, it still does not work for me.\r\nAnd I could not find any documentation about this `link:` protocol you used.\r\nBasically, it says that \"react-spring\" (another dep that also uses react as a dependency) cannot find `react-dom`. Can you point me to some documentation about `\"react\": \"link:../some/path\"` please?","updated_at":"2019-02-12T09:39:19Z","created_at":"2019-02-12T09:39:19Z","creator_user_login":"dotlouis"}
{"number":13991,"comment_id":"462693340","body":"I am using linked UI package as well and I was able to fix this issue.\r\nYou need to export react renderToString from UI (linked package).\r\nI created render function in the linked package.\r\n","updated_at":"2019-02-12T09:55:27Z","created_at":"2019-02-12T09:55:27Z","creator_user_login":"seeden"}
{"number":13991,"comment_id":"462946168","body":"Just for a better context - https://github.com/facebook/react/issues/14257","updated_at":"2019-02-12T21:38:45Z","created_at":"2019-02-12T21:38:45Z","creator_user_login":"theKashey"}
{"number":13991,"comment_id":"463151783","body":"Thanks @theKashey. @gaearon seems to think that it is the normal behavior. I get that React should not be loaded twice, but what is the recommended way of working with a linked local package then?","updated_at":"2019-02-13T10:48:00Z","created_at":"2019-02-13T10:48:00Z","creator_user_login":"dotlouis"}
{"number":13991,"comment_id":"463376537","body":"I also had issues with Lerna workspaces getting symlinked properly. This was the trick I used to get this to work. Be sure to run `npm install` afterwards.\r\n```\r\n\"dependencies\": {\r\n\t\"react-dom\": \"file:../common/node_modules/react-dom\",\r\n\t\"react\": \"file:../common/node_modules/react\"\r\n}\r\n```","updated_at":"2019-02-13T21:20:49Z","created_at":"2019-02-13T21:20:49Z","creator_user_login":"jmlivingston"}
{"number":13991,"comment_id":"463486871","body":"There is many ways to solve it, and yarn resolutions would not usually help - it's more related to the \"building tool\"\r\n- for webpack use `aliases` - just \"hard\" alias everything ducks like `react` to a single file\r\n```js\r\n  resolve: {\r\n    extensions: ['.ts', '.tsx', '.js', '.jsx'],\r\n    alias: {\r\n     react: path.resolve(path.join(__dirname, './node_modules/react')),\r\n   }\r\n```\r\n- for parcel use the same aliaes, but define them in package.json - https://parceljs.org/module_resolution.html#aliases\r\n- for nodejs (non jest) you may use [require control](https://github.com/theKashey/require-control)\r\n```js\r\nimport {setAliases} from 'require-control';\r\nsetAliases({\r\n  'react': path.resolve(path.join(__dirname, './node_modules/react'))\r\n});\r\n```\r\n- for jest use `moduleNameMapper`\r\n```js\r\n\"jest\": {\r\n    \"moduleNameMapper\": {\r\n      \"^react$\": \"<rootDir>/node_modules/$1\",\r\n    },\r\n```","updated_at":"2019-03-12T21:33:52Z","created_at":"2019-02-14T04:39:17Z","creator_user_login":"theKashey"}
{"number":13991,"comment_id":"463689922","body":"@theKashey thanks for your insights, this makes sense when we consider how module resolution is done (bottom, then up the tree), but from a user point of view I don't find this very practical. When I `npm link` a package, I would expect it to work without having to re-wire dependencies explicitly. This makes developing a package locally quite painful.","updated_at":"2019-02-14T16:18:39Z","created_at":"2019-02-14T16:18:39Z","creator_user_login":"dotlouis"}
{"number":13991,"comment_id":"463802551","body":"This is a cornerstone, this is how `node_modules` designed to work, this is why you might have two versions of a `Button` in two different major versions, and dependent modules will easely find the \"right\" version of a package.\r\nThis is how it should work all the time.\r\n\r\n`Node.js` internals are quite straightforward - try to open a file adding all known prefixes (like `node_modules`) or extensions(like `js`, `ts`, `json`); if none found go one directory up. The only way to \"fix it\" - replace nodejs module resolution system.\r\n\r\n`yarn pnp` will do that, and might solve the problem. `yarn workspaces`, which might _hoist_ shared packages to the top - will also solve the problem without any \"magic\" involved. \r\n\r\n`npm workspaces`? Does not exists right now.","updated_at":"2019-02-14T21:23:37Z","created_at":"2019-02-14T21:22:47Z","creator_user_login":"theKashey"}
{"number":13991,"comment_id":"463809209","body":"I actually ended up switching my project to use workspaces. It resolves this without having to use resolutions, and the hoisting/structure is beneficial anyways.","updated_at":"2019-02-14T21:39:43Z","created_at":"2019-02-14T21:39:43Z","creator_user_login":"DylanVann"}
{"number":13991,"comment_id":"463950978","body":"This one was a headscratcher. I tried the webpack resolve.alias setting but it was not working, tried many settings too but never really managed to get it to work unfortunately, but here's how I finally managed to get it to work:\r\n\r\nHere's my folder structure:\r\n\r\nProject\r\n |\r\n +-- node_modules\r\n |    \r\n +-- build\r\n |  |  \r\n |  +-- index.js\r\n |    \r\n +-- example (create-react-app)\r\n |  |  \r\n |  +-- **package.json**\r\n\r\nI had to modify my package.json inside the example folder, essentially pulling react from the project's 'main' node_modules based on @jmlivingston's suggestion, here's how it end up:\r\n\r\n```\r\n  \"dependencies\": {\r\n    \"react\": \"file:../node_modules/react\",\r\n    \"react-dom\": \"file:../node_modules/react-dom\",\r\n    \"react-scripts\": \"2.1.5\"\r\n  },\r\n```\r\nNow after that I ran `npm install` **and then I ran `npm link`**, that did the trick.\r\n\r\nHopefully this can help someone else and save some time.","updated_at":"2019-02-15T08:28:40Z","created_at":"2019-02-15T08:28:40Z","creator_user_login":"rmolinamir"}
{"number":13991,"comment_id":"466829312","body":"So any fix to this issue? I've tried as many recommendations here as I can and no luck. I am using create-react-app and typescript. Using React/React-dom 16.8.3. This is a new project I created 2 days ago so pretty plain. I am using useSpring() and animated.div. Thanks","updated_at":"2019-02-24T23:26:52Z","created_at":"2019-02-24T23:26:52Z","creator_user_login":"guru-florida"}
{"number":13991,"comment_id":"467696799","body":"@guru-florida  are you using react-router by any chance?\r\n\r\nI'm using the same stack as you (typescript & create-react-app) and my issue with with the `render` attribute. Changing it to `component` did the trick.\r\n\r\nBefore:\r\n```javascript\r\n<Route path=\"/signup\" render={SignUp} />\r\n```\r\nAfter:\r\n```javascript\r\n<Route path=\"/signup\" component={SignUp} />\r\n```\r\n\r\nHope it helps..!","updated_at":"2019-02-27T02:20:09Z","created_at":"2019-02-27T02:20:09Z","creator_user_login":"ghost"}
{"number":13991,"comment_id":"467988631","body":"@mikeyyyyyy No, not using React Router in this one. Thanks for the tip though cuz I was in the last project I tried using spring and had the same issue.","updated_at":"2019-02-27T19:03:08Z","created_at":"2019-02-27T19:03:08Z","creator_user_login":"guru-florida"}
{"number":13991,"comment_id":"469607699","body":"I had this issue with npm link (in a parcel app), the `npm link .../whatever/node_modules/react` doesn't seem to resolve it, works fine with non-hook components though","updated_at":"2019-03-05T11:36:29Z","created_at":"2019-03-05T09:32:11Z","creator_user_login":"tj"}
{"number":13991,"comment_id":"469610178","body":"@tj I guess you have problem with ssr. Fast workaround is to export react functions or whole react from linked package and import it in your server package","updated_at":"2019-03-05T09:39:09Z","created_at":"2019-03-05T09:39:09Z","creator_user_login":"seeden"}
{"number":13991,"comment_id":"469615108","body":"@seeden ahh I'm not using SSR, just a SPA w/ Parcel. I have a `ui` pkg internally for my own stuff and an app I'm working on, both have the same `react` version, seems odd that there's a duplicate but maybe that's a Parcel concern","updated_at":"2019-03-05T09:53:20Z","created_at":"2019-03-05T09:53:20Z","creator_user_login":"tj"}
{"number":13991,"comment_id":"469622438","body":"@tj  oh, I see. Then good luck with this very strange issue. I spent one week with this","updated_at":"2019-03-05T10:13:12Z","created_at":"2019-03-05T10:13:12Z","creator_user_login":"seeden"}
{"number":13991,"comment_id":"469720192","body":">So any fix to this issue?\r\n\r\nThere is no *issue* here per se. As explained on [this page](https://reactjs.org/warnings/invalid-hook-call-warning.html), React needs `useState()` calls to be on the same `react` object as the `react` object as \"seen\" from inside `react-dom`. If that's not what happens for you, it means you're bundling two copies of React on the page — which is bad by itself and also breaks some other features before Hooks. So you'll want to fix it anyway. [This page](https://reactjs.org/warnings/invalid-hook-call-warning.html) contains common ways to diagnose to fix it.\r\n\r\nWe're leaving this discussion open for sharing particular workarounds when people run into this problem. But it's not an issue per se that can be \"fixed\" by anyone but you.","updated_at":"2019-03-05T15:20:14Z","created_at":"2019-03-05T15:20:14Z","creator_user_login":"gaearon"}
{"number":13991,"comment_id":"469723555","body":">I had this issue with npm link (in a parcel app), the npm link .../whatever/node_modules/react doesn't seem to resolve it, works fine with non-hook components though\r\n\r\nDo you mind creating a small repro case?","updated_at":"2019-03-05T15:28:19Z","created_at":"2019-03-05T15:28:19Z","creator_user_login":"gaearon"}
{"number":13991,"comment_id":"469741772","body":"@gaearon will do, should have time to dig in a bit more next week","updated_at":"2019-03-05T16:13:56Z","created_at":"2019-03-05T16:13:56Z","creator_user_login":"tj"}
{"number":13991,"comment_id":"470410414","body":"Happily, `require-control` has fixed our issue with `yarn link` + SSR + styled-components 4's static context. Thanks @theKashey 👍 ","updated_at":"2019-03-07T07:01:57Z","created_at":"2019-03-07T07:01:57Z","creator_user_login":"damassi"}
{"number":13991,"comment_id":"470906064","body":"I tried everything here and failed. It was actually something different not documented here. **It was to do with the case sensitivity of the react imports**. In some cases we had:\r\n\r\n```\r\nimport React from 'react'\r\n```\r\n\r\nAnd in others:\r\n\r\n```\r\nimport React from 'React'\r\n```\r\n\r\n**On some file systems (unix, osx) this causes Webpack to instantiate two copies of React.**\r\n\r\nThis caused extreme confusion as I could clearly see we only have one copy of React; but it was instead the way we were importing it.\r\n\r\nThe test on the react documentation also comes out fine as it obviously uses only lower case.\r\n\r\nThis sounds like it could be worthy of a mention in the docs?\r\n","updated_at":"2019-03-11T20:23:38Z","created_at":"2019-03-08T12:03:33Z","creator_user_login":"adamscybot"}
{"number":13991,"comment_id":"471063365","body":"For me the reason of multiple instances of React was Webpack DllPlugin. For my vendor DLL I didn't include `react` and `react-dom` to my the entries list, however, I had other libraries which required `react` or `react-dom` so my DLL contained `react` and `react-dom` (quick check of the manifest json file can reveal that). So, when I was running the code, and import React into the application it was loading it from `node_modules`, but in the vendors' code React was required from their DLL file.\r\n\r\n**Overall**: be careful with DLL files and make sure your included modules don't include extra dependencies that you don't need otherwise you will double import them. ","updated_at":"2019-03-12T17:45:53Z","created_at":"2019-03-08T20:19:21Z","creator_user_login":"mike1808"}
{"number":13991,"comment_id":"471951293","body":"I was able to fix this by updating `react-hot-loader` to `4.6.0`","updated_at":"2019-03-12T10:50:45Z","created_at":"2019-03-12T10:50:45Z","creator_user_login":"OliverRadini"}
{"number":13991,"comment_id":"471963717","body":"this did the trick for the `npm link` stuff in Parcel:\r\n\r\n```\r\n\"alias\": {\r\n\t\t\"react\": \"../ui/node_modules/react\",\r\n\t\t\"react-dom\": \"../ui/node_modules/react-dom\"\r\n\t}\r\n```\r\n\r\nnot sure if that's what it'll try to use for a production build, seems kind of hacky but it works for development at least","updated_at":"2019-03-12T11:33:25Z","created_at":"2019-03-12T11:33:11Z","creator_user_login":"tj"}
{"number":13991,"comment_id":"471999790","body":"@theKashey OMG man, it works! I've tried many different solutions that people suggests related to this issues: mangling with `package.json` deps, tracing \"two reacts\" across project, checking if I'm breaking the *rule of hooks` (which I'm not), but I think that your [option](https://github.com/facebook/react/issues/13991#issuecomment-463486871) with:\r\n\r\n```\r\nalias: {\r\n      react: path.resolve(path.join(__dirname, './node_modules/react')),\r\n      'react-dom': path.resolve(path.join(__dirname, './node_modules/react-dom'))\r\n    }\r\n```\r\nallows us to move our project to the next lvl, using hooks in our *app-as-a-lib*.\r\n\r\nThis is the resulted [webpack.config.js](https://jsbin.com/lecejij/edit?js)","updated_at":"2019-03-12T13:28:06Z","created_at":"2019-03-12T13:27:31Z","creator_user_login":"chulanovskyi"}
{"number":13991,"comment_id":"472040818","body":"`npm ls react`\r\n\r\nreturns \r\n```\r\nweb@0.0.0 D:\\code\\project\r\n`-- (empty)\r\n```\r\n\r\nfor me\r\n\r\n` console.log(window.React1 === window.React2)` returns true\r\nat this point i'm thinking it's SSR causing the issue\r\n\r\nUpdate. It was indeed caused By React-apollo's SSR behaviour (https://github.com/apollographql/react-apollo/issues/2541)\r\nUpgrading to 2.3.1 fixed it\r\n","updated_at":"2019-03-12T17:38:16Z","created_at":"2019-03-12T15:09:09Z","creator_user_login":"damiangreen"}
{"number":13991,"comment_id":"472740798","body":"Hi guys, our team face this problem and took few days to sort it out.\r\n\r\n### the working solutions for us\r\n\r\nSolution A: specify the package position to look for, as mentioned above\r\n```\r\n  alias: {\r\n      react: path.resolve(path.join(__dirname, './node_modules/react')),\r\n      'react-dom': path.resolve(path.join(__dirname, './node_modules/react-dom'))\r\n    }\r\n```\r\n\r\nSolution B:  use webpack [resolve.modules](https://webpack.js.org/configuration/resolve/#resolvemodules) to prioritise the right node_modules folder to look for modules\r\n\r\n### case background and why it happens\r\n\r\nFirst thing first, it's not react's fault, it's not even lerna's, but react, webpack, and npm-link might need to take some responsibilities.\r\n\r\n#### Case requirement:\r\n\r\n-Non-monorepo:\r\n  - have symlinked packages\r\n  - symlinked package has exported component using hooks\r\n  - creating react client side pages\r\n- If working on a monorepo\r\n  - packages symlinked\r\n  - packages got different versions of dependencies (even patch version difference), so even workspace will solve as 2 react installed\r\n  - entrance package imported a symlinked package which use hooks\r\n\r\n#### Example\r\n\r\nStructure\r\n```\r\n- mono repo root\r\n  - packages\r\n    - ComponentWithHooks (peerDependency: react@^16.8.1)\r\n    - ProductA (dependency: ComponentWithHooks, dependency: react@^16.8.4)\r\n    - ProductB (dependency: react@^16.8.1)\r\n```\r\n\r\nOnce bootstrap with workspaces, it will resolve to \r\n```\r\n- mono repo root\r\n  - node_modules\r\n    - react(16.8.1)\r\n  - packages\r\n    - ComponentWithHooks\r\n      - node_modules (empty)\r\n    - ProductA\r\n      - node_modules\r\n        - react(16.8.4)\r\n    - ProductB\r\n      - node_modules (empty)\r\n```\r\n\r\nAnd once you serve `ProductA` with webpack or maybe something else, it will contain 2 react instances.\r\n\r\nCode in ProductA, will looks for `ProductA/node_modules/react`.\r\n\r\nBut the imported ComponentWithHooks will look for `mono repo root/node_modules/react`.\r\n\r\nWhy? Remember the look up rules of npm? If it cannot find the module in it's own node_modules folder, it will look for parent's node_modules...\r\n\r\nSo tools like webpack applied this rule in default perfectly.   \r\nIt's nothing wrong util mono repo solution become popular.  \r\nAnd normal package won't notice this as most of them do not require single instance as react and redux.","updated_at":"2019-03-14T07:52:58Z","created_at":"2019-03-14T07:52:58Z","creator_user_login":"JennieJi"}
{"number":13991,"comment_id":"473005931","body":"I'm having this same issue using a very basic reproduction using yarn workspaces example - https://github.com/mwarger/yarn-workspace-hooks-repro\r\n\r\nI have a `component-library` that is written in typescript and bundled with parcel.  The `example-demo` is what will showcase this `component-library` and is a freshly created CRA app.  All common packages are hoisted with yarn, so in theory there should only be one version of react available.  However, the `React.useEffect` call I'm making in index.tsx causes the error that leads me to this GitHub issue.  \r\n\r\nEverything works until a hook is added.  To reproduce the error, uncomment lines 7-9 in `component-library/src/index.tsx`\r\n\r\nHopefully I'm doing something silly that I have overlooked.  Please advise as to any steps I may use to try and remedy this.  Thank you!\r\n\r\nFollow-up Edit: The below suggested debug script output prints `true` for me.  It appears that I do not have two Reacts.\r\n```\r\n// Add this in node_modules/react-dom/index.js\r\nwindow.React1 = require('react');\r\n\r\n// Add this in your component file\r\nrequire('react-dom');\r\nwindow.React2 = require('react');\r\nconsole.log(window.React1 === window.React2);\r\n```\r\n","updated_at":"2019-03-15T13:07:59Z","created_at":"2019-03-14T18:38:30Z","creator_user_login":"mwarger"}
{"number":13991,"comment_id":"473246217","body":"Took me several hours so it might worth to take a note here.\r\n\r\nIn my case, I put a line of `<script defer src=\"./dist/bundle.js\" />` in the head of the HTML template, which works as normal when not using React hooks. All the solutions don't work and the `window.React1 == window.React2` check returns `true` in this case.\r\n\r\nSince webpack will inject the script tag afterward, the template should not have script tag by its own. Remove the script tag from the template make React functional with hooks (pun intended) again.","updated_at":"2019-03-18T15:55:55Z","created_at":"2019-03-15T11:07:30Z","creator_user_login":"taiansu"}
{"number":13991,"comment_id":"473399736","body":"In my case I have a React app which was npm linked to a dependency I was working on. This will do the trick until I can fix a couple dependencies that need to move `react` and `react-dom` to dev and peer deps.\r\n\r\n1. From the app: `cd node_modules/react && npm link`\r\n1. From the app: `cd node_modules/react-dom && npm link react`\r\n1. From the linked package: `npm link react`\r\n\r\nWhy does it work? The [error warning page](https://reactjs.org/warnings/invalid-hook-call-warning.html) mentions that \"in order for Hooks to work, the react import from your application code needs to resolve to the same module as the react import from inside the react-dom package\".","updated_at":"2019-03-15T18:40:07Z","created_at":"2019-03-15T18:40:07Z","creator_user_login":"ajcrews"}
{"number":13991,"comment_id":"473719423","body":"I am still having this issue, despite trying all of the above. Standard webpack4/babel config, with `preset-env` and `preset-react` plugins. My react/react-dom versions are pinned to `16.8.4` using yarn resolutions (where also the `window.React1 === window.React2` check from above returns `true`).\r\n\r\nThis is on the most basic of usages:\r\n\r\n\r\n```jsx\r\nimport React, { useState } from \"react\";\r\n\r\nfunction MyComp() {\r\n  const [hello] = useState(0);\r\n\r\n  return <div>HELLO {hello}</div>;\r\n}\r\nexport default MyComp;\r\n```\r\n\r\nDoes anyone have any other ideas?\r\n\r\nEDIT: To clarify, the error is shown as `react.development.js:88 Uncaught Invariant Violation: Hooks can only be called inside the body of a function component.` as per the OP","updated_at":"2019-03-17T22:03:06Z","created_at":"2019-03-17T22:01:40Z","creator_user_login":"baking-code"}
{"number":13991,"comment_id":"474967647","body":"> In my case I have a React app which was npm linked to a dependency I was working on. This will do the trick until I can fix a couple dependencies that need to move `react` and `react-dom` to dev and peer deps.\r\n> \r\n> 1. From the app: `cd node_modules/react && npm link`\r\n> 2. From the app: `cd node_modules/react-dom && npm link react`\r\n> 3. From the linked package: `npm link react`\r\n> \r\n> Why does it work? The [error warning page](https://reactjs.org/warnings/invalid-hook-call-warning.html) mentions that \"in order for Hooks to work, the react import from your application code needs to resolve to the same module as the react import from inside the react-dom package\".\r\n\r\nThanks! This works great for me. (even when I use npm link and symlink mixed situation)","updated_at":"2019-03-20T18:16:23Z","created_at":"2019-03-20T18:16:23Z","creator_user_login":"Saebyuckbaan"}
{"number":13991,"comment_id":"475183520","body":"I have tried all of the suggested above and was still having the error. \r\n\r\nWith a little help from @inverherive we found that `enzyme-adapter-react-16` was still causing issues.\r\n\r\nWhilst we updated `react-test-renderer` to the latest version (16.8.4) as it only recently added hooks support,  we found  via `npm ls react-test-renderer` that the latest version of  `enzyme-adapter-react-16` (1.11.2) had an internal dependancy of `react-test-renderer@16.4.2`, which doesn't support hooks.\r\n\r\n```\r\n├─┬ enzyme-adapter-react-16@1.11.2\r\n│ └── react-test-renderer@16.4.2 \r\n└── react-test-renderer@16.8.4\r\n```\r\n\r\nTo fix this issue , as well as following @chulanovskyi's [fixes](https://github.com/facebook/react/issues/13991#issuecomment-471999790), as we are using yarn we added `react-test-renderer` resolutions to our package.json .  This forces all references of `react-test-renderer` to use \"16.8.4\".\r\n```\r\n  \"resolutions\": {\r\n    \"react-test-renderer\": \"16.8.4\"\r\n  },\r\n```\r\n\r\nThis was mega frustrating, hope this can help someone else. Thanks to  @chulanovskyi and @theKashey for their suggestions as well.","updated_at":"2019-03-21T10:48:19Z","created_at":"2019-03-21T10:47:17Z","creator_user_login":"Paddy-Hamilton"}
{"number":13991,"comment_id":"475841505","body":">  This will do the trick until I can fix a couple dependencies that need to move react and react-dom to dev and peer deps.\r\n\r\n@ajcrews (I might have missed something but) I `npm link` an internal library in and that library has `react` in `peerDependencies` and `devDependencies` and I still needed your fix regardless to solve the error. Nice find!","updated_at":"2019-03-23T05:37:55Z","created_at":"2019-03-23T05:37:55Z","creator_user_login":"ricokahler"}
{"number":13991,"comment_id":"475852466","body":"I was about to post but found a solution\r\n\r\nI have a component library, with an example CRA app inside for development\r\n\r\nIn the CRA app's package.json I had to modify react and react-dom to \"borrow\" from the root component's package.json\r\n```json\r\n\"dependencies\": {\r\n  \"react\": \"link:../node_modules/react\",\r\n  \"react-dom\": \"link:../node_modules/reac-dom\",\r\n}\r\n```","updated_at":"2019-03-23T08:46:38Z","created_at":"2019-03-23T08:46:38Z","creator_user_login":"tim-soft"}
{"number":13991,"comment_id":"475855107","body":"> This was mega frustrating, hope this can help someone else. Thanks to @chulanovskyi and @theKashey for their suggestions as well.\r\n\r\n@Paddy-Hamilton  Always check your lockfile after an install. I had encountered the same issue where `yarn` was duplicating `react-test-renderer`. With a little bit of surgery in your lockfile you could fix those:\r\n\r\n`yarn add -D react-test-renderer`\r\n```diff\r\n-react-test-renderer@^16.0.0-0, react-test-renderer@^16.1.1:\r\n+react-test-renderer@^16.0.0-0:\r\n  version \"16.8.4\"\r\n  resolved \"https://registry.yarnpkg.com/react-test-renderer/-/react-test-renderer-16.8.4.tgz#abee4c2c3bf967a8892a7b37f77370c5570d5329\"\r\n  integrity sha512-jQ9Tf/ilIGSr55Cz23AZ/7H3ABEdo9oy2zF9nDHZyhLHDSLKuoILxw2ifpBfuuwQvj4LCoqdru9iZf7gwFH28A==\r\n  dependencies:\r\n    object-assign \"^4.1.1\"\r\n    prop-types \"^15.6.2\"\r\n    react-is \"^16.8.4\"\r\n    scheduler \"^0.13.4\"\r\n\r\n+react-test-renderer@^16.8.5:\r\n+  version \"16.8.5\"\r\n+  resolved \"https://registry.yarnpkg.com/react-test-renderer/-/react-test-renderer-16.8.5.tgz#4cba7a8aad73f7e8a0bc4379a0fe21632886a563\"\r\n+  integrity sha512-/pFpHYQH4f35OqOae/DgOCXJDxBqD3K3akVfDhLgR0qYHoHjnICI/XS9QDwIhbrOFHWL7okVW9kKMaHuKvt2ng==\r\n+  dependencies:\r\n+    object-assign \"^4.1.1\"\r\n+    prop-types \"^15.6.2\"\r\n+    react-is \"^16.8.5\"\r\n+    scheduler \"^0.13.5\"\r\n```\r\n\r\nA `yarn check` would already warn you\r\n```sh\r\n$ yarn check\r\nwarning \"enzyme-adapter-react-16#react-test-renderer@^16.0.0-0\" could be deduped from \"16.8.5\" to \"react-test-renderer@16.8.5\"\r\n```\r\n\r\nthen manually dedupe it by applying the following patch:\r\n```diff\r\n-react-test-renderer@^16.0.0-0:\r\n-  version \"16.8.4\"\r\n-  resolved \"https://registry.yarnpkg.com/react-test-renderer/-/react-test-renderer-16.8.4.tgz#abee4c2c3bf967a8892a7b37f77370c5570d5329\"\r\n-  integrity sha512-jQ9Tf/ilIGSr55Cz23AZ/7H3ABEdo9oy2zF9nDHZyhLHDSLKuoILxw2ifpBfuuwQvj4LCoqdru9iZf7gwFH28A==\r\n-  dependencies:\r\n-    object-assign \"^4.1.1\"\r\n-    prop-types \"^15.6.2\"\r\n-    react-is \"^16.8.4\"\r\n-    scheduler \"^0.13.4\"\r\n-\r\n-react-test-renderer@^16.8.5:\r\n+react-test-renderer@^16.0.0-0, react-test-renderer@^16.8.5:\r\n```\r\n\r\nNow you have a single version of `react-test-renderer` without any `resolutions` or `webpack` alias shenanigans.\r\n\r\nFor any issues related to linked packages and `create-react-app` follow facebook/create-react-app#6207","updated_at":"2019-03-23T09:32:33Z","created_at":"2019-03-23T09:32:33Z","creator_user_login":"eps1lon"}
{"number":13991,"comment_id":"477362355","body":"> There is many ways to solve it, and yarn resolutions would not usually help - it's more related to the \"building tool\"\r\n> \r\n> * for webpack use `aliases` - just \"hard\" alias everything ducks like `react` to a single file\r\n> \r\n> ```js\r\n>   resolve: {\r\n>     extensions: ['.ts', '.tsx', '.js', '.jsx'],\r\n>     alias: {\r\n>      react: path.resolve(path.join(__dirname, './node_modules/react')),\r\n>    }\r\n> ```\r\n> \r\n> * for parcel use the same aliaes, but define them in package.json - https://parceljs.org/module_resolution.html#aliases\r\n> * for nodejs (non jest) you may use [require control](https://github.com/theKashey/require-control)\r\n> \r\n> ```js\r\n> import {setAliases} from 'require-control';\r\n> setAliases({\r\n>   'react': path.resolve(path.join(__dirname, './node_modules/react'))\r\n> });\r\n> ```\r\n> \r\n> * for jest use `moduleNameMapper`\r\n> \r\n> ```js\r\n> \"jest\": {\r\n>     \"moduleNameMapper\": {\r\n>       \"^react$\": \"<rootDir>/node_modules/$1\",\r\n>     },\r\n> ```\r\n\r\nThis did it for me.","updated_at":"2019-03-27T21:55:02Z","created_at":"2019-03-27T21:55:02Z","creator_user_login":"ryudice"}
{"number":13991,"comment_id":"477672112","body":"@ajcrews \r\nThank you! Works brilliantly to me!","updated_at":"2019-03-28T16:31:02Z","created_at":"2019-03-28T16:31:02Z","creator_user_login":"nakhodkin"}
{"number":13991,"comment_id":"480013418","body":"I made a little test case with minimal setup using react 16.8.6, electron-webpack and RHL. Notably, when this error occurs the entire browser (in this setup, electron) just starts to use up a whole bunch of CPU time)\r\n\r\nhttps://github.com/PerfectionCSGO/reeee\r\n\r\nI've been bashing my head over this problem for 3 days now. Originally I thought RHL was the problem but removing that entirely from this project won't resolve the issue.\r\n\r\nnpm ls react returns only one result. I ensured that the above fix is applied with the latest versions + webpack alias.\r\n\r\nThe code will work in a sandbox.\r\n\r\nIn a simple webpack/website the code will work without problem. However, with electron-webpack this problem persists.\r\n\r\n```\r\n  \"dependencies\": {\r\n    \"i18next\": \"^15.0.9\",\r\n    \"i18next-browser-languagedetector\": \"^3.0.1\",\r\n    \"react\": \"^16.8.6\",\r\n    \"react-dom\": \"npm:@hot-loader/react-dom\",\r\n    \"react-hot-loader\": \"^4.8.2\",\r\n    \"react-i18next\": \"^10.6.1\",\r\n    \"source-map-support\": \"^0.5.11\",\r\n    \"tslint\": \"^5.15.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@babel/core\": \"^7.4.3\",\r\n    \"@babel/preset-react\": \"^7.0.0\",\r\n    \"@babel/preset-typescript\": \"^7.3.3\",\r\n    \"@types/react\": \"^16.8.12\",\r\n    \"@types/react-dom\": \"^16.8.3\",\r\n    \"electron\": \"^4.1.3\",\r\n    \"electron-builder\": \"20.39.0\",\r\n    \"electron-webpack\": \"^2.6.2\",\r\n    \"electron-webpack-ts\": \"^3.1.1\",\r\n    \"typescript\": \"^3.4.1\",\r\n    \"webpack\": \"^4.29.6\"\r\n  }\r\n```\r\n\r\nI hope someone can give me a pointer...\r\n\r\nWhen I replace react-l18next with mobx-react-lite and use observer, it will cause the same effect.","updated_at":"2019-04-04T18:34:30Z","created_at":"2019-04-04T18:33:32Z","creator_user_login":"PerfectionVR"}
{"number":13991,"comment_id":"480264171","body":"In regards to my issue, I have resolved it by elbowing electron-webpack and go with a more 'pure' electron solution. My guess is that it's a toolchain used in webpack or babel that's incompatible.","updated_at":"2019-04-05T12:52:33Z","created_at":"2019-04-05T12:52:33Z","creator_user_login":"PerfectionVR"}
{"number":13991,"comment_id":"480344613","body":"I encountered this issue only in production. Non of the proposed solutions here helped.\r\nMy use case was a third party app that loads as a widget in another website. \r\nWhen the site first loaded with the widget all worked well, but when the user navigate to a different page and returned to the page with the widget, I got the hooks error. \r\n\r\nNote that the error only occurs when the navigation doesn't cause a page reload.\r\n\r\nI spent hours trying to figure out what was the issue. Finally the problem was with the code snippet that loads the app bundle. On page change the bundle could load multiple times, which caused I guess to a multiple React instances in the same name space.\r\n\r\nI fixed it by checking if the script has already been loaded. \r\nFirst  I exported my library to the global namespace by using Webpack's 'library' configuration:\r\n```javascript\r\noutput: {\r\n    library: 'myLib',\r\n    ...\r\n}\r\n```\r\n\r\nAnd then in the loading script I checked if the library exists or not:\r\n\r\n```javascript\r\nif(!window.myLib){\r\n    var bz = document.createElement('script');\r\n    bz.type = 'text/javascript'; \r\n    bz.async = true;\r\n    bz.src = 'https://path/to/bundle.js';\r\n    var s = document.getElementsByTagName('script')[0];\r\n    s.parentNode.insertBefore(bz, s);\r\n}\r\n\r\n```\r\nIt might be a very specific use case but I hope this can help someone else.\r\n","updated_at":"2019-04-05T16:46:28Z","created_at":"2019-04-05T16:46:28Z","creator_user_login":"eladlevy"}
{"number":13991,"comment_id":"481407920","body":"So we have a main React application leveraging webpack.\r\nWe're trying to create a small React library that uses hooks, we've tried swapping out bundlers (parcel, pure babel, webpack).\r\nWhen trying out our webpack implementation, we marked react and react-dom as external, so we won't include them in our bundle.\r\nWe still get the same hooks exception when using npm link.\r\n\r\nCreating a symlink to the main application's react does work, but it's not a great dev workflow.\r\n\r\nI'm having a rough time figuring out the underlying cause of the issue. What's producing duplicate React instance?\r\n","updated_at":"2019-04-09T19:47:04Z","created_at":"2019-04-09T19:47:04Z","creator_user_login":"adriene-orange"}
{"number":13991,"comment_id":"481506614","body":"Hi @adriene-orange , you might find my post https://github.com/facebook/react/issues/13991#issuecomment-472740798 for more explanations.\r\n\r\nMulti-instance caused by npm link is because node by default will look up in parent folder's node_modules for the module if it cannot find in your package.\r\n\r\nThe simplest and best solution we find for this is in your entrance package's webpack (or other tools) configuration, there's something like `resolve.modules` to manually set the paths and order for the paths that webpack will look for modules. Exp., `resolve: { modules: [path.resolve(PACKAGE_ROOT, 'node_modules'), 'node_modules'] }`, will force webpack to find modules in your entrance package root's node_module first. If cannot find the module in root, then find in the relative node_modules folder...\r\n\r\n> So we have a main React application leveraging webpack.\r\n> We're trying to create a small React library that uses hooks, we've tried swapping out bundlers (parcel, pure babel, webpack).\r\n> When trying out our webpack implementation, we marked react and react-dom as external, so we won't include them in our bundle.\r\n> We still get the same hooks exception when using npm link.\r\n> \r\n> Creating a symlink to the main application's react does work, but it's not a great dev workflow.\r\n> \r\n> I'm having a rough time figuring out the underlying cause of the issue. What's producing duplicate React instance?\r\n\r\n","updated_at":"2019-04-10T02:15:03Z","created_at":"2019-04-10T02:15:03Z","creator_user_login":"JennieJi"}
{"number":13991,"comment_id":"482057981","body":"Hi im getting this error\r\n \r\nInvariant Violation: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\r\n    1. You might have mismatching versions of React and the renderer (such as React DOM)\r\n    2. You might be breaking the Rules of Hooks\r\n    3. You might have more than one copy of React in the same app\r\n    See https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.\r\n\r\n       5 | \r\n       6 | const useApiHelper = (url, reducer) => {\r\n    >  7 |     const [state, dispatch] = useReducer(reducer, {});\r\n         |                                                  ^\r\n       8 | \r\n       9 |     useEffect(() => {\r\n      10 |         fetch(url).then(res => res.json())\r\n\r\nSample code https://stackblitz.com/edit/react-mbze9q \r\n\r\nWhen i try to access this function inside test cases i'm getting above error ","updated_at":"2019-04-11T11:19:42Z","created_at":"2019-04-11T10:22:14Z","creator_user_login":"abhishekguru"}
{"number":13991,"comment_id":"482089537","body":"@abhishekguru You are calling the Hook outside of a component here in your test:\r\n\r\n```js\r\ntest('API test', async () => {\r\n  const newState = useAPIHelper( // <- Called outside of a component\r\n    'https://jsonplaceholder.typicode.com/posts',\r\n    reducer\r\n  )\r\n  console.log(newState, 'new');\r\n  // expect(newState[samUrl].loading).toEqual(true);\r\n});\r\n```\r\n\r\nAs the error states, hooks can only be called from another hook, or from within a component. In your case you could create a component for your test and render that component which uses the hook if you'd like.","updated_at":"2019-04-11T12:14:17Z","created_at":"2019-04-11T12:14:17Z","creator_user_login":"hamlim"}
{"number":13991,"comment_id":"482314806","body":"**Shameless plug**\r\n\r\n@abhishekguru if you have a generic hook used between multiple components and you want to test it independently of any particular component, you might consider using [`react-hooks-testing-library`](https://github.com/mpeyper/react-hooks-testing-library).\r\n\r\n```js\r\nimport { renderHook } from 'react-hooks-testing-library'\r\n\r\ntest('API test', async () => {\r\n  const { result } = renderHook(() => useAPIHelper( // <- now called within a component\r\n    'https://jsonplaceholder.typicode.com/posts',\r\n    reducer\r\n  ))\r\n\r\n  console.log(result.current, 'new');\r\n  // expect(result.current[samUrl].loading).toEqual(true);\r\n});\r\n```","updated_at":"2019-04-11T21:09:20Z","created_at":"2019-04-11T21:08:37Z","creator_user_login":"mpeyper"}
{"number":13991,"comment_id":"482605326","body":"I wanted to chime in here because we had issues with SSR only. We clear node's `require.cache` on file changes. This effectively gives hot reloading on the server. Clearing node's `require.cache` will cause issues with libraries that need to have a single copy. Here's our solution:\r\n\r\n```javascript\r\nObject.keys(require.cache)\r\n  .filter(key => !isSingleton(key)) // This is needed here because react cannot be deleted without causing errors\r\n  .forEach(key => {\r\n    delete require.cache[key]\r\n  })\r\n```\r\n\r\nOur `isSingleton` function contains the list of libraries that must have a single copy. A good rule of thumb is any library that needs to be defined in `peerDependencies`\r\n\r\nhttps://yarnpkg.com/lang/en/docs/dependency-types/#toc-peerdependencies","updated_at":"2019-04-12T14:55:35Z","created_at":"2019-04-12T14:55:35Z","creator_user_login":"joeshehata"}
{"number":13991,"comment_id":"484117747","body":"Also had the same issue and for me\r\n```js\r\nwindow.React1 = require('react');\r\nrequire('react-dom');\r\nwindow.React2 = require('react');\r\nconsole.log(window.React1 === window.React2); // true\r\n```\r\nalso returned `true`, tried all given suggestion but nothing worked. Finally it turned out that:\r\n\r\nWebpack adds script tag with the `bundle.js` into the `index.html` automatically. My issue was because I was **adding the `bundle.js` into `index.html` explicitly**, which used to work fine before hooks. \r\n\r\n\r\n\r\n","updated_at":"2019-04-17T14:37:26Z","created_at":"2019-04-17T14:37:26Z","creator_user_login":"jaikathuria"}
{"number":13991,"comment_id":"487771524","body":"For me issue was after babel 7 upgrade, there was no separate versions with npm ls react. Removing \r\n\"react-hot-loader/babel\" from .babelrc fixed the issue temporarily.\r\n","updated_at":"2019-04-29T22:53:26Z","created_at":"2019-04-29T22:53:26Z","creator_user_login":"ts-jait"}
{"number":13991,"comment_id":"487798668","body":"I tried all the solutions above, but still got the error.\r\nEventually, I found it was caused by the package `why-did-you-update`, and there is a related [issue](https://github.com/maicki/why-did-you-update/issues/52) for it. Just a clue for anyone uses a similar package which modifies React.","updated_at":"2019-04-30T01:42:09Z","created_at":"2019-04-30T01:41:04Z","creator_user_login":"desmondgong"}
{"number":13991,"comment_id":"488085464","body":"I was able to fix this in a `react-native` + `Yarn Workspaces` scenario.\r\n\r\n---\r\n\r\nIn root `package.json`\r\n\r\n```json\r\n{\r\n  \"private\": true,\r\n  \"workspaces\": {\r\n    \"packages\": [\r\n      \"packages/*\"\r\n    ],\r\n    \"nohoist\": [\r\n      \"**/react-native\",\r\n      \"**/react-native/!(react)/**\"\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\nThis prevents `react-native` code from being hoisted (as is needed for react native), while still hoisting `react`, thus having all shared modules use the same react. \r\n\r\n---\r\n\r\nIn the `metro.config.js`\r\n```javascript\r\nmodule.exports = {\r\n  watchFolders: [\r\n    path.resolve(__dirname, '../', 'shared-module'), \r\n    // ...more modules\r\n    path.resolve(__dirname, '../', '../') // to make sure the root `react` is also part of the haste module map\r\n  ]\r\n}\r\n```\r\nThe metro config lets the bundler know where everything is. ","updated_at":"2019-04-30T19:35:41Z","created_at":"2019-04-30T19:34:10Z","creator_user_login":"sartaj"}
{"number":13991,"comment_id":"488731637","body":"I found a way to solve the problem for people who are locally developing a npm package for example, and they are trying to test it locally by loading their package using npm link in some sort of example app. \r\n\r\nI switched from example app (original way of testing the component) to [Storybook](https://storybook.js.org/). When using the storybook in the project it will not load React twice as it will use the same one that component is using. While using npm link I had problems with hooks and React being loaded twice, also I was not able to get any of the above solutions to work. So Storybook solved my problem, and now I have a way to test my component through multiple scenarios and at the same time build some interactive documentation for it. ","updated_at":"2019-05-02T16:02:31Z","created_at":"2019-05-02T16:02:31Z","creator_user_login":"Danilo-Zekovic"}
{"number":13991,"comment_id":"490809442","body":"Sharing my experience with this, solved it for our project by using [webpack externals](https://webpack.js.org/configuration/externals/) for the component library to exclude `react` and `react-dom` from the build.\r\n\r\nWe are just starting with React. In my case, we are starting with Lerna monorepo with Neutrino components library package and Neutrino webapp client package. The webapp consume the build product of the linked components library. After some experimenting and getting `true` for the same React instance, I have looked to a way to exclude `react` and `react-dom` from the build of the components library at all. \r\n\r\nIt seems a common design pattern [solution](https://stackoverflow.com/questions/33154285/exclude-react-from-webpack-bundle) for webpack components libraries so in the components library I have added to the webpack config:\r\n\r\n```json\r\n\"externals\": {\r\n  \"react\": \"react\",\r\n  \"react-dom\": \"react-dom\"\r\n}\r\n```\r\n\r\nI didn't need to put a global script tag in the webapp package for `react` and `react-dom`. I am guessing Webpack is providing those to the component library in its `require` implementation the same as it provides to the webapp.","updated_at":"2019-05-09T08:29:58Z","created_at":"2019-05-09T08:29:58Z","creator_user_login":"elpddev"}
{"number":13991,"comment_id":"491534835","body":"another cause of this error is mis-configuring React Router's `Route`,\r\n\r\nThis **fails**:\r\n```jsx\r\n<Route render={MyHookedComponent}/>\r\n```\r\n, but this **succeeds**:\r\n```jsx\r\n<Route component={MyHookedComponent}/>\r\n```\r\n\r\nEg. you need to use `component` not `render`. This is an easy mistake to make since `render` generally works fine with class based components.","updated_at":"2019-05-11T18:42:58Z","created_at":"2019-05-11T18:42:58Z","creator_user_login":"samuelcolvin"}
{"number":13991,"comment_id":"491936180","body":"I was working on biolerplate and want to publish it to npm, and developing with the help of [npm link](https://www.deadcoderising.com/how-to-smoothly-develop-node-modules-locally-using-npm-link/) It was working properly but after sometime started giving errors ```Invalid Hook call warning```.\r\nI tried using npm link ../myapp/node_modules/react but it doesn't solve out my problem, \r\nAnd compared ```React1 === React2``` it is true as well as ```npm ls react``` also done, it shows only one package.\r\n\r\nAnd i am not using webpack also, i am just adding some layer outside create-react-app so i can't forced my app to use local installed react module.\r\nStucked with it from past 3 days._","updated_at":"2019-05-13T18:49:25Z","created_at":"2019-05-13T18:33:17Z","creator_user_login":"hnagarkoti"}
{"number":13991,"comment_id":"492617894","body":"Same as @hnagarkoti .","updated_at":"2019-05-15T11:34:47Z","created_at":"2019-05-15T11:34:47Z","creator_user_login":"RohovDmytro"}
{"number":13991,"comment_id":"493702787","body":"I experienced this warning during server side rendering (SSR) because I was using an older version of `react-apollo` so just wanted to leave this link here to help out the next poor soul who runs into this issue:\r\n\r\nhttps://github.com/apollographql/react-apollo/issues/2541\r\n\r\nIn short, `getDataFromTree` doesn't support react hooks until version `react-apollo@2.3.1`.","updated_at":"2019-05-18T19:52:07Z","created_at":"2019-05-18T19:52:07Z","creator_user_login":"richardscarrott"}
{"number":13991,"comment_id":"496371950","body":"> I had the same issue and I resolved it by adding:\r\n> \r\n> ```\r\n>  alias: {\r\n>         react: path.resolve('./node_modules/react')\r\n>       }\r\n> ```\r\n> \r\n> to `resolve` property in webpack config of my main app.\r\n> \r\n> It's was obviously my mistake of using two copies of React but I agree that it would be great if the error message was better. I think this is maybe similar to: #2402\r\n\r\nAny suggestions for doing this with create-react-app? ","updated_at":"2019-05-28T05:38:23Z","created_at":"2019-05-28T05:38:23Z","creator_user_login":"dwjohnston"}
{"number":13991,"comment_id":"496383268","body":"^ Ok, the solution I went for to solve this for create-react-app is to use [react-app-rewired](https://github.com/timarney/react-app-rewired) and [customize-cra.](https://github.com/arackaf/customize-cra) \r\n\r\nHere is my config-overrides.js : \r\n```\r\nconst {\r\n    override,\r\n    addWebpackAlias,\r\n  } = require(\"customize-cra\");\r\n\r\nconst path = require('path'); \r\n\r\nmodule.exports = override( \r\n    addWebpackAlias({\r\n        react: path.resolve('./node_modules/react')\r\n    })\r\n)\r\n```\r\n\r\nExample project: https://github.com/dwjohnston/material-ui-hooks-issue/tree/master","updated_at":"2019-05-28T06:33:30Z","created_at":"2019-05-28T06:32:51Z","creator_user_login":"dwjohnston"}
{"number":13991,"comment_id":"496396335","body":"In our team we have a universal navigation component work across tens of apps, all these apps comes from react 15.0.0 to react 16.8.0, in order to enable navigation implemented above hooks, we have to bundle it with a latest react\r\n\r\nIn this case, having multiple instances of react is a fundamental requirement for us, I'd like to know whether react official team is willing to solve this issue in the future?","updated_at":"2019-05-28T07:21:53Z","created_at":"2019-05-28T07:21:53Z","creator_user_login":"otakustay"}
{"number":13991,"comment_id":"496515680","body":"@dwjohnston my workaround for `create-react-app` was to create a webpack config for development. `create-react-app` internally uses webpack, webpack-dev-server, and the babel-loader so creating a webpack config just for development wasn't too bad because the dependencies are already implictly there but still a good amount of overhead to get the working correctly.\r\n\r\nI have a issue on `create-react-app`: https://github.com/facebook/create-react-app/issues/6953 to add [webpack `alias`](https://webpack.js.org/configuration/resolve#resolvealias) support or similar.\r\n\r\n👋  **If anyone is also using `create-react-app` and experiencing this pain point, could you please give that issue a thumb ups? It might help prioritize the issue.**","updated_at":"2019-05-31T14:53:46Z","created_at":"2019-05-28T13:26:40Z","creator_user_login":"ricokahler"}
{"number":13991,"comment_id":"496725271","body":"@ricokahler  - Thanks for point that out. I'm glad to see that I'm not the only person with this issue - I've run into it with context as well. \r\n\r\nIs there any resources that you know of that discuss this issue further? ","updated_at":"2019-05-28T23:20:01Z","created_at":"2019-05-28T23:20:01Z","creator_user_login":"dwjohnston"}
{"number":13991,"comment_id":"497341130","body":"If you're in my boat, you've added a react component package from a local directory, and now it automatically builds and install it, along with its own copy of node_modules (because it uses npm link to do this), giving your app 2 copies or React now.\r\n\r\nI've worked around it by deleting the node_modules/<my_package>/node_modules before running the app.  To do this automatically:\r\n\r\n`\"prestart\": \"rimraf ./node_modules/<my_package>/node_modules\"`\r\n","updated_at":"2019-05-30T14:04:37Z","created_at":"2019-05-30T14:04:37Z","creator_user_login":"JeremyGrieshop"}
{"number":13991,"comment_id":"501102189","body":"I also faced this when doing SSR. \r\nIf you use **Lerna** for locally testing your React library, you might add \"react/react-dom/react-router\" as peerDependencies on your library, but you **shouldn't** add them as devDependencies. (this makes it duplicate)\r\nYou can use `node --preserve-symlinks` so it can lookup to the parent repo which install the peerDependencies.\r\nFor jest, you need to add the parent repo path to \"jest.moduleDirectories\" option so Jest can resolve them","updated_at":"2019-06-12T03:03:29Z","created_at":"2019-06-12T03:02:06Z","creator_user_login":"antonybudianto"}
{"number":13991,"comment_id":"502612256","body":"@apieceofbart it works for me, thx!","updated_at":"2019-06-17T09:41:56Z","created_at":"2019-06-17T09:41:56Z","creator_user_login":"wind4gis"}
{"number":13991,"comment_id":"504613981","body":"I ran into this error when loading external React components, for example with JS modules. They are completely outside the project, loaded with dynamic import() (well jsonp for more support). To get around the issue, we pass/inject React as a property to each module. This works, but then each module is dependent on the containing React app. We're trying to remove dependencies.","updated_at":"2019-06-22T01:08:23Z","created_at":"2019-06-22T01:08:23Z","creator_user_login":"mikeaustin"}
{"number":13991,"comment_id":"505931669","body":"As others have mentioned, this property eliminates React as usable for any type of micro front end.  The issue is that there is this side-effect of creating global state in the JS runtime when importing React to use as a library.\r\n\r\nI understand that for simple use cases, having that side-effect means that React is \"easier to use.\"  But when a web page is composed of multiple scripts from multiple bundle steps, one of them should be able to set up React (do that side effect explicitly) and the others can simply call library functions.","updated_at":"2019-06-26T15:42:39Z","created_at":"2019-06-26T15:42:39Z","creator_user_login":"psharbau-cmu"}
{"number":13991,"comment_id":"506625071","body":"I still have an issue with react-bootstrap: #https://github.com/react-bootstrap/react-bootstrap/issues/3965","updated_at":"2019-06-28T06:54:34Z","created_at":"2019-06-28T06:54:34Z","creator_user_login":"timgerhard"}
{"number":13991,"comment_id":"506698008","body":"For anyone else stuck trying to make a lib for React, try https://github.com/whitecolor/yalc it works much better than symlinks.","updated_at":"2019-06-28T11:15:25Z","created_at":"2019-06-28T11:15:25Z","creator_user_login":"corysimmons"}
{"number":13991,"comment_id":"506902807","body":"@mpeyper works well. Thx","updated_at":"2019-06-28T23:15:42Z","created_at":"2019-06-28T23:15:42Z","creator_user_login":"ediopia"}
{"number":13991,"comment_id":"506919564","body":"@apieceofbart That worked for me. Thanks for the suggestion. 👍","updated_at":"2019-06-29T02:27:53Z","created_at":"2019-06-29T02:27:53Z","creator_user_login":"pankaz"}
{"number":13991,"comment_id":"507771887","body":"For me this problem was caused when I navigated to my project directory in PowerShell and didn't capitalize a directory name in the path.  I created the project in users/…/… instead of Users/…/...\r\nThe issue was resolved when I fixed capitalization errors and recreated the project.","updated_at":"2019-07-02T17:26:18Z","created_at":"2019-07-02T17:26:18Z","creator_user_login":"Annie-Johnson"}
{"number":13991,"comment_id":"508773609","body":"For me, doing:\r\n```\r\n    \"react\": \"file:../my-library/node_modules/react\",\r\n    \"react-dom\": \"file:../my-library/node_modules/react-dom\",\r\n```\r\nFixed most of it but wasn't enough, I kept getting the error `hooks can only be called inside the body of a function component`.\r\n\r\nTurns out it was because some of my library's components where exported like so:\r\n```javascript\r\nexport default Radium(withTranslation()(MyComponent))\r\n```\r\n:x: \r\n\r\nWhere `withTranslation` is the HOC from react-i18next and `Radium` is the HOC from Radium.\r\n\r\nAnd exporting them like so:\r\n```javascript\r\nexport default withTranslation()(Radium(MyComponent))\r\n```\r\n:heavy_check_mark: \r\nFixed everything.\r\n\r\nNote that react-i18next was in version 10 which uses React Hooks","updated_at":"2019-07-05T14:18:49Z","created_at":"2019-07-05T14:18:49Z","creator_user_login":"Skylsmoi"}
{"number":13991,"comment_id":"509608459","body":"@mikeaustin We're having the same issue. Do you have any example of \"passing/injecting React as a property to each module\" ?","updated_at":"2019-07-09T11:42:57Z","created_at":"2019-07-09T11:42:57Z","creator_user_login":"cpuy"}
{"number":13991,"comment_id":"510137828","body":"Still getting this issue, tried all steps:\r\n- yarn workspaces (via lerna)\r\n- checked if there is one react dep, yes\r\n\r\nSome things that can have impact:\r\n- using webpack with libraryTarget\r\n- using typescript\r\n\r\n```\r\n$ npm ls react-dom\r\n/xxx\r\n└── react-dom@16.8.6\r\n\r\n$ npm ls react\r\n/xxx\r\n└── react-dom@16.8.6\r\n```\r\n\r\nroot package.json\r\n\r\n```json\r\n{\r\n  ...\r\n  \"workspaces\": [\r\n    \"packages/*\",\r\n  ],\r\n  \"devDependencies\": {\r\n    ...\r\n  },\r\n  \"dependencies\": {\r\n    \"react\": \"16.8.6\",\r\n    \"react-dom\": \"16.8.6\"\r\n  },\r\n  \"resolutions\": {\r\n    \"react\": \"16.8.6\",\r\n    \"react-dom\": \"16.8.6\",\r\n    \"**/react\": \"16.8.6\",\r\n    \"**/react-dom\": \"16.8.6\"\r\n  }\r\n}\r\n```","updated_at":"2019-07-10T16:40:24Z","created_at":"2019-07-10T16:39:06Z","creator_user_login":"robmoorman"}
{"number":13991,"comment_id":"510163288","body":"@JeremyGrieshop I had a same issue and that worked for me, Thanks.\r\n\r\nAdd \"prestart\" in your package.json like below:\r\n```\r\n\r\n\"scripts\": {\r\n    \"prestart\": \"rimraf ./node_modules/<my package>/node_modules\",\r\n    \"start\": \"react-scripts start\",\r\n    \"build\": \"react-scripts build\",\r\n  },\r\n\r\n```\r\n","updated_at":"2019-07-10T18:34:22Z","created_at":"2019-07-10T17:51:51Z","creator_user_login":"sureshsevarthi"}
{"number":13991,"comment_id":"510505556","body":"I had this issue and it wasnt due to multiple versions of react / react-dom\r\nIn the custom tooling I use, the require cache was being cleared out (for a purpose outside of this discussion), eg:\r\n```\r\nObject.keys(require.cache).forEach((key) => {\r\n      delete require.cache[key];\r\n    });\r\n```\r\n\r\nSo fyi to people out there, if you are doing something like this - it will effect React Hooks, so avoid it if you can","updated_at":"2019-07-11T14:19:01Z","created_at":"2019-07-11T14:19:01Z","creator_user_login":"jooj123"}
{"number":13991,"comment_id":"510948198","body":"> I had the same issue and I resolved it by adding:\r\n> \r\n> ```\r\n>  alias: {\r\n>         react: path.resolve('./node_modules/react')\r\n>       }\r\n> ```\r\n> \r\n> to `resolve` property in webpack config of my main app.\r\n> \r\n> It's was obviously my mistake of using two copies of React but I agree that it would be great if the error message was better. I think this is maybe similar to: #2402\r\n\r\nFor anyone out there using Parcel, if `dist` is where your compiled files are, you ought to add:\r\n```json\r\n  \"alias\": {\r\n    \"react-mediator\": \"./dist\"\r\n  },\r\n```\r\nTo your `package.json` and then you can still `link` (npm or yarn) the library for local development/testing. ","updated_at":"2019-07-12T16:23:48Z","created_at":"2019-07-12T16:23:48Z","creator_user_login":"icyJoseph"}
{"number":13991,"comment_id":"511074258","body":"> @mikeaustin We're having the same issue. Do you have any example of \"passing/injecting React as a property to each module\" ?\r\n\r\nYou can use React Context to pass around \"React\" itself, and create a HoC to inject the property into every component. You can pass anything in api like api.React, but it gets a little tricky wrapping HoCs around those components (because now they are only available inside a component, not available to export.\r\n\r\n```\r\nconst withReact = Component = props => (\r\n  <ReactContext.Provider value={api => <Component api={api} {...props} /> } />\r\n)\r\n```","updated_at":"2019-07-13T01:05:57Z","created_at":"2019-07-13T01:05:57Z","creator_user_login":"mikeaustin"}
{"number":13991,"comment_id":"511095990","body":"I spend couple of hours on this, if changing the source code to alter the error message and adding more info to it is not easy and you need more time, at least add this note into the [doc](https://reactjs.org/warnings/invalid-hook-call-warning.html),\r\n\r\n_p.s: react has great documentation, but I think that page needs review._","updated_at":"2019-07-13T06:57:51Z","created_at":"2019-07-13T06:57:51Z","creator_user_login":"dehghani-mehdi"}
{"number":13991,"comment_id":"513657220","body":"@OliverRadini \r\n\r\n> I was able to fix this by updating `react-hot-loader` to `^4.6.0`\r\n\r\nMaaan, that fixed it.\r\n@gaearon @theKashey How about adding this to https://reactjs.org/warnings/invalid-hook-call-warning.html so that people don't waste their time due to an older version of `react-hot-loader` ?\r\n","updated_at":"2019-07-22T06:26:19Z","created_at":"2019-07-22T06:24:18Z","creator_user_login":"catamphetamine"}
{"number":13991,"comment_id":"513660556","body":"I thought it's quite good documented across a dozen issues already.","updated_at":"2019-07-22T06:38:19Z","created_at":"2019-07-22T06:38:19Z","creator_user_login":"theKashey"}
{"number":13991,"comment_id":"513855651","body":"Hi, i'm using React in both an *app* and a *library*. I use the library inside the app. I managed to fix the two react instances issue by using :\r\n\r\nIn *app* webpack config :\r\n```\r\n    alias: { react: path.resolve( '__dirname', '..',  'node_modules', 'react' ) // Adapt this to match your file tree\r\n```\r\n\r\nIn *library* webpack config \r\n```\r\n  externals: {\r\n    react: 'react', // Case matters here\r\n    'react-dom': 'react-dom' // Case matters here\r\n  }\r\n```\r\n","updated_at":"2019-07-22T16:28:07Z","created_at":"2019-07-22T16:27:19Z","creator_user_login":"pierreferry"}
{"number":13991,"comment_id":"514008367","body":"So I'm running into an issue with calling hooks from a non-transpiled file (*.js):\r\n\r\n`index.js`:\r\n```javascript\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\n\r\nReactDOM.render(App(), document.getElementById('root'));\r\n```\r\n\r\n```app.jsx```\r\n```javascript\r\nimport React from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nconst BaseContext = React.createContext();\r\n\r\nconst initialState = {\r\n  woo: true\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Home = () => <h1>You're at home.</h1>;\r\n\r\nconst App = () => {\r\n  // eslint-disable-next-line\r\n  const [state, dispatch] = React.useReducer(reducer, initialState);\r\n  return (\r\n    <Router>\r\n      <BaseContext.Provider value={initialState}>\r\n        <BaseContext.Consumer>\r\n          <div className=\"welcome\">\r\n            <nav>\r\n              <ul>\r\n                <li>\r\n                  <Link to=\"/\">Home</Link>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n            <header className=\"header\">\r\n              <h1>Welcome!</h1>\r\n            </header>\r\n            <Route path=\"/\" exact component={Home} />\r\n          </div>\r\n        </BaseContext.Consumer>\r\n      </BaseContext.Provider>\r\n    </Router>\r\n  );\r\n};\r\nexport default App;\r\n```\r\n\r\nAny advice, assuming it isn't \"Move it to JSX file and transpile\"?","updated_at":"2019-07-23T00:43:32Z","created_at":"2019-07-23T00:43:32Z","creator_user_login":"chrisgeo"}
{"number":13991,"comment_id":"514049200","body":"Nothing seems to work for me, im using a mix of stimulus and react, i have a hybrid app, started using hooks and it failed as soon as i started adding turbolinks :( \r\n\r\nEdit: for now i solved my problem by adding ```data-turbolinks-track=\"reload\" data-turbolinks-eval=\"false\"``` to the script tags im using so that should do it for now","updated_at":"2019-07-23T04:38:55Z","created_at":"2019-07-23T04:27:22Z","creator_user_login":"abdul-hamid-achik"}
{"number":13991,"comment_id":"515375332","body":"i have same question , after 4hours , i was fount that was  jenkins util missing transform .babelrc files to server。。。","updated_at":"2019-07-26T09:16:25Z","created_at":"2019-07-26T09:16:25Z","creator_user_login":"GoToBoy"}
{"number":13991,"comment_id":"515574452","body":"Why would this create the error?\r\n\r\n```\r\n$ npm ls react\r\nvehmain@0.1.0 /mnt/g/development/javascript/pow-vehmain\r\n└── react@16.8.6`\r\n```\r\n\r\n```\r\nInvalid hook call...\r\nServiceVisitMaintenance\r\nsrc/components/ServiceVisit/ServiceVisitMaintenance.js:6\r\n  3 | import { ServiceVisitForm } from './ServiceVisitForm';\r\n  4 | \r\n  5 | const data = [{ id: 1, description: 'Ford' }, { id: 10, description: 'Edsel' }];\r\n> 6 | const ServiceVisitMaintenance = () => {\r\n  7 |   const [vehicleList, setVehicleList] = useState([]);\r\n  8 |   return (\r\n  9 |     <div>\r\n```\r\nServiceVisitMaintenance.js:\r\n```\r\nimport React, { useState } from 'react';\r\nimport { ServiceVisitForm } from './ServiceVisitForm';\r\nconst data = [{ id: 1, description: 'Ford' }, { id: 10, description: 'Edsel' }];\r\nconst ServiceVisitMaintenance = () => {\r\n  const [vehicleList, setVehicleList] = useState([]);\r\n  return (\r\n    <div>\r\n      <ServiceVisitForm vehicleList={data} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { ServiceVisitMaintenance };\r\n```\r\n","updated_at":"2019-07-26T19:36:26Z","created_at":"2019-07-26T19:36:26Z","creator_user_login":"larrym"}
{"number":13991,"comment_id":"515579288","body":"\r\nPlease do check what's your react-dom version.","updated_at":"2019-07-26T19:55:22Z","created_at":"2019-07-26T19:54:25Z","creator_user_login":"icyJoseph"}
{"number":13991,"comment_id":"515590402","body":"$ npm ls react-dom\r\nvehmain@0.1.0 /mnt/g/development/javascript/pow-vehmain\r\n└── react-dom@16.8.6","updated_at":"2019-07-26T20:32:53Z","created_at":"2019-07-26T20:32:53Z","creator_user_login":"larrym"}
{"number":13991,"comment_id":"516104436","body":"I faced this when I export a connect(mapStateToProps)(MyComponent) from the library and using that library in my CRA app.","updated_at":"2019-07-29T18:16:49Z","created_at":"2019-07-29T18:16:49Z","creator_user_login":"ashokkumarsand"}
{"number":13991,"comment_id":"516107312","body":"No, this was my bad error. The routine which called this used react-router-dom and used the render prop rather than the component.","updated_at":"2019-07-29T18:24:23Z","created_at":"2019-07-29T18:24:23Z","creator_user_login":"larrym"}
{"number":13991,"comment_id":"516709455","body":"Have any of you had the same issue but with gatsby?\r\n\r\nI get the following result after I 'npm ls react':\r\n![image](https://user-images.githubusercontent.com/22627739/62187121-66741400-b336-11e9-97c5-d89cd82e772a.png)\r\n\r\nand 'npm ls react-dom'\r\n![image](https://user-images.githubusercontent.com/22627739/62187181-873c6980-b336-11e9-9755-e6dd89dfc2be.png)\r\n\r\nAt first, I thought I had accidentally installed react globally, after uninstalling globally, nothing changed.  Then, I tried creating an entirely new project in a different directory, 'gatsby new random-name' and added a tiny feature (add comments, following along to https://www.youtube.com/watch?v=asrdFuAxPaU&feature=youtu.be) to the gatsby-starter-default to test if the error would reproduce itself.  Well, to my chagrin, it did!  \r\n\r\nAny and all advice would be well-received by a frustrated plebe.","updated_at":"2019-07-31T06:04:35Z","created_at":"2019-07-31T06:04:35Z","creator_user_login":"xianrusso"}
{"number":13991,"comment_id":"517587329","body":"I'm still facing this issue in storybook. Is this output from npm ls correct or not?\r\n![image](https://user-images.githubusercontent.com/4493100/62351728-a984e180-b506-11e9-9b10-251f3a1a2a54.png)![image](https://user-images.githubusercontent.com/4493100/62351726-a689f100-b506-11e9-91ad-5edd44162ed6.png)\r\n\r\n","updated_at":"2019-08-02T07:20:35Z","created_at":"2019-08-02T07:19:45Z","creator_user_login":"zibra"}
{"number":13991,"comment_id":"517595534","body":"In my case, the problem was caused by `why-did-you-update` module.","updated_at":"2019-08-02T07:45:00Z","created_at":"2019-08-02T07:45:00Z","creator_user_login":"zibra"}
{"number":13991,"comment_id":"517688231","body":"User either workspace and lerna monorepo and hoist the package. that will solve problem .","updated_at":"2019-08-02T12:51:48Z","created_at":"2019-08-02T12:51:48Z","creator_user_login":"ashokkumarsand"}
{"number":13991,"comment_id":"518886845","body":"we are having the same issue with SSR. it seem to work by setting `externals: [“react”]` in our webpack config then manually loading `react/umd/react.development.js`. this is a pain, however and would love to find a simpler way.","updated_at":"2019-08-07T00:00:49Z","created_at":"2019-08-07T00:00:49Z","creator_user_login":"ianks"}
{"number":13991,"comment_id":"519320558","body":"Ok so hopefully this helps somebody. We were loading the webpack runtime.js multiple times accidentally which caused multiple copies of React to exist. Make sure you only load the runtimeChunk  (runtime.js) once.","updated_at":"2019-08-08T00:52:26Z","created_at":"2019-08-08T00:52:26Z","creator_user_login":"ianks"}
{"number":13991,"comment_id":"520814579","body":"If you have the problem with your Jest tests like me, this is what seems to fix it for me.\r\nAdd this in your `jest.config.js`\r\n```js\r\nmoduleNameMapper: {\r\n    '^react$': '<rootDir>/node_modules/react/'\r\n  }\r\n```","updated_at":"2019-08-13T12:30:38Z","created_at":"2019-08-13T12:30:38Z","creator_user_login":"francisprovost"}
{"number":13991,"comment_id":"521022959","body":"It would be nice if this error at least pointed to the file where it's happening. I accidentally called a hook in a normal function and it was hard to debug.","updated_at":"2019-08-13T21:50:46Z","created_at":"2019-08-13T21:50:46Z","creator_user_login":"nandorojo"}
{"number":13991,"comment_id":"521903787","body":"I found another cause of the problem and solution for it.\r\n\r\nMy environment is `electron` and `webpack` but this might help also non-electron folks. I spent painful days trying to resolve why I get this error message after upgrading to React 16.9 (and React DOM 16.9).\r\n\r\nIn my case seemed I had two Reacts in the app, but I could not find two physical libraries in node_modules, not even using `npm ls react`. I even used `webpack-bundle-analyzer` to have a look what inside the bundle.\r\n\r\nEventually, I discovered that I don't have two reacts physically in the project, but **React and React DOM was referenced/loaded twice in the HTML file**. This can be easily checked by adding e.g. `console.log(\"React load\")` to the index.js of React library.\r\n\r\nThe real source was connected to `electron-webpack`. **react and react-dom were not marked as external** therefore were loaded in the bundle as well as later from node_modules due to require used in some other module.\r\n\r\nSolution was as simple as adding these lines to `webpack.renderer.config.js`:\r\n```\r\nmodule.exports = {\r\n    externals: [\r\n        \"react\",\r\n        \"react-dom\"\r\n    ],\r\n};\r\n```","updated_at":"2019-08-16T06:40:23Z","created_at":"2019-08-16T06:40:23Z","creator_user_login":"travenec"}
{"number":13991,"comment_id":"522352679","body":"Okay, so if anyone here uses parcel.js, for some odd reason I was able to get away with the following import: `import React from 'React';` and once I started using react hooks, I got the invariant violation error not realizing it was because I was improperly importing using `from 'React'` instead of `from 'react'`. Whoops.","updated_at":"2019-08-18T20:27:22Z","created_at":"2019-08-18T20:27:22Z","creator_user_login":"jamesguan"}
{"number":13991,"comment_id":"522353341","body":"> Have any of you had the same issue but with gatsby?\r\n> \r\n> I get the following result after I 'npm ls react':\r\n> ![image](https://user-images.githubusercontent.com/22627739/62187121-66741400-b336-11e9-97c5-d89cd82e772a.png)\r\n> \r\n> and 'npm ls react-dom'\r\n> ![image](https://user-images.githubusercontent.com/22627739/62187181-873c6980-b336-11e9-9755-e6dd89dfc2be.png)\r\n> \r\n> At first, I thought I had accidentally installed react globally, after uninstalling globally, nothing changed. Then, I tried creating an entirely new project in a different directory, 'gatsby new random-name' and added a tiny feature (add comments, following along to https://www.youtube.com/watch?v=asrdFuAxPaU&feature=youtu.be) to the gatsby-starter-default to test if the error would reproduce itself. Well, to my chagrin, it did!\r\n> \r\n> Any and all advice would be well-received by a frustrated plebe.\r\n\r\nYes I have encountered the same issue as you. I have followed the advice [here...](https://reactjs.org/warnings/invalid-hook-call-warning.html), \r\n```\r\n// Add this in node_modules/react-dom/index.js\r\nwindow.React1 = require('react');\r\n\r\n// Add this in your component file\r\nrequire('react-dom');\r\nwindow.React2 = require('react');\r\nconsole.log(window.React1 === window.React2);\r\n```\r\nI added React2 to index file under pages. It returns false. \r\n\r\nDeduped means that npm should have dedeuplicated the dependency see [here... ](https://stackoverflow.com/questions/52781142/what-is-deduped-in-npm-packages-list)\r\n\r\n> The same package doesn't have to be installed twice! It's just referenced.\r\n> \r\n> Also, it moves the packages \"up the tree\" (flattens the tree). This makes total sense as otherwise one package would have to look in the node_modules of some other package (which would be kind of messy) and helps to simplify the dependencies.\r\n> \r\n> You can validate this, as every package in your dependency graph that says deduped, can be found at least one more time in the graph, usually at a \"higher level.\"\r\n\r\nThough evidently the dedupping hasn't worked.\r\n\r\nWhat have you tried?\r\n\r\n","updated_at":"2019-08-18T20:48:14Z","created_at":"2019-08-18T20:36:35Z","creator_user_login":"Sandbagger"}
{"number":13991,"comment_id":"525030595","body":"I'm getting this error when trying to build with NextJS. Some components use material-ui and the problem goes away if I remove them. I don't use styled-components. I tried deleting node_modules etc. without luck. I tried adding aliases and resolves for `react` in my next.config.js file and package.json without luck. I'm using react 16.8.6, react-dom 16.8.6, and next 9.0.4. `npm ls` says there's only one of each. I am not using any npm links.\r\n\r\nRepository: https://github.com/dancancro/questions/tree/invalid-hook-call\r\n\r\nCodesandbox is here: https://codesandbox.io/s/github/dancancro/questions/tree/invalid-hook-call/?fontsize=14\r\n\r\nStackoverflow: https://stackoverflow.com/questions/57647040/nextjs-invalid-hook-call-hooks-can-only-be-called-inside-of-the-body-of-a-fun\r\n\r\nThe error is here: https://gist.github.com/dancancro/2dfafb053aaaedfade406fd4f67eb68a\r\n... render -> renderToString -> ReactDOMServerRenderer.read -> ReactDOMServerRenderer.render -> Object.WithStyles [as render] ...\r\n\r\nThe offending hook is a `useStyles()` call on line 17428 of the following file in a `withStyles` function. Search for \"var classes = useStyles(props)\". The problem is with nextjs-generated code. The code I wrote doesn't use `withStyles` or any hooks or any functions that start with \"use*\"\r\n\r\nhttps://raw.githubusercontent.com/dancancro/questions/invalid-hook-call/.next/static/development/pages/index.js\r\n\r\nUPDATE: removing this from my next.config.js solved the problem:\r\n```\r\n\r\n\twebpack: config => {\r\n\t\tconfig.externals = [\r\n\t\t\t'/'\r\n\t\t]\r\n\t\treturn config\r\n\t},\r\n```","updated_at":"2019-08-28T14:53:59Z","created_at":"2019-08-26T21:00:21Z","creator_user_login":"dancancro"}
{"number":13991,"comment_id":"525509953","body":"I discovered a workaround by deleting `react` and `react-dom` from my linked package's `node_modules` folder. \r\n\r\nI'm in the same boat as a lot of you. I have a library package I'm working on locally, and I don't want to go through the trouble of publishing it each time I need to see changes in my application package. I linked it and started getting this error.\r\n\r\nHere's the workaround:\r\n\r\n* Package A: your library code package, has been `npm link`'d\r\n* Package B: your application code package. Has a symlink in your `node_modules` folder for package A\r\n\r\n1. Build package A. Mine outputs its assets to `dist/`, including it's `node_modules`\r\n2. In package A's distributed `node_modules` folder, delete `react` and `react-dom`\r\n3. ???\r\n4. Profit!\r\n\r\nNote that I had installed the same version of React in both packages. You'll have to restart any running processes.","updated_at":"2019-08-27T22:36:49Z","created_at":"2019-08-27T22:36:49Z","creator_user_login":"mrdave-dev"}
{"number":13991,"comment_id":"525614043","body":"Remove incompatible `why-did-you-update` works for me. (https://github.com/maicki/why-did-you-update/issues/52)","updated_at":"2019-08-28T07:09:52Z","created_at":"2019-08-28T07:09:52Z","creator_user_login":"bertho-zero"}
{"number":13991,"comment_id":"525774613","body":"> incompatible why-did-you-update\r\n\r\n@bertho-zero use can use the new devtools or my hook [useWhyDidYouUpdate](https://twitter.com/brunolemos/status/1090377532845801473?s=21)","updated_at":"2019-08-28T14:36:12Z","created_at":"2019-08-28T14:36:12Z","creator_user_login":"brunolemos"}
{"number":13991,"comment_id":"525816638","body":"@brunolemos It's great but more constraining because you have to put it on each component.","updated_at":"2019-08-28T16:15:42Z","created_at":"2019-08-28T16:15:42Z","creator_user_login":"bertho-zero"}
{"number":13991,"comment_id":"527289193","body":"@dmart914's solution solved the issue for me. I too have packages linked so that I can test my library without publishing a change... has anyone found a workaround for this? It's not a great experience to publish an open-source library and have to document deleting specific NPM packages for the hooks to magically start working...","updated_at":"2019-09-03T03:25:21Z","created_at":"2019-09-03T03:24:18Z","creator_user_login":"AndrewCraswell"}
{"number":13991,"comment_id":"530061791","body":"The solution around removing the linked package's `react` module doesn't work if that package has tests that require `react` (e.g. `@testing-library/react` or `@testing-library/react-hooks`), so it looks like we still need a better way to handle this.","updated_at":"2019-09-10T18:25:28Z","created_at":"2019-09-10T18:25:28Z","creator_user_login":"mcmillion"}
{"number":13991,"comment_id":"530224386","body":"My application consists of two parts. The main web application and a module which gets dynamically loaded into the web application. Both web application and the module uses React 16.9.0.\r\nThe module is loaded into the web application using React.lazy() and dynamic import() statement.\r\nWhen the module is loaded the \"Invalid hook call\" error is thrown.\r\n\r\nIn my case since the main application and the module are built separately they are not aware of each other and going to have their own copy of react. I tried the following suggestions found in the thread but didn't solve the issue.\r\n\r\n1. Adding an alias in the module's webpack.config which points to the main application's react as suggested by apieceofbart .\r\nalias: {\r\n    react: path.resolve('../../node_modules/react')\r\n}\r\n\r\n2. Tried to point the react dependencies in the module's package.json to the main application.\r\n\"dependencies\": {\r\n\t\"react-dom\": \"file:../common/node_modules/react-dom\",\r\n\t\"react\": \"file:../common/node_modules/react\"\r\n}\r\n\r\nI think react has to support running multiple copies when it comes to dynamically loaded modules.","updated_at":"2019-09-11T05:23:24Z","created_at":"2019-09-11T05:23:24Z","creator_user_login":"rajithaw"}
{"number":13991,"comment_id":"530540957","body":"Based on some of the responses above, here's what worked for me:\r\n\r\n1. Added the following to `config/webpack.config.js`\r\n```\r\nexternals: {\r\n  react: {\r\n    root: 'React',\r\n    commonjs2: 'react',\r\n    commonjs: 'react',\r\n    amd: 'react'\r\n  },\r\n  'react-dom': {\r\n    root: 'ReactDOM',\r\n    commonjs2: 'react-dom',\r\n    commonjs: 'react-dom',\r\n    amd: 'react-dom'\r\n  }\r\n}\r\n```\r\n\r\n2. Edited `package.json`\r\n```\r\n\"devDependencies\" : {\r\n  ...\r\n  \"react\": \"^16.9.0\",\r\n  \"react-dom\": \"^16.9.0\",\r\n}\r\n```\r\n\r\n```\r\n\"peerDependencies\": {\r\n  \"react\": \"^16.9.0\",\r\n  \"react-dom\": \"^16.9.0\"\r\n}\r\n```\r\n\r\n3. Edited `public/index.html`\r\n```\r\n<head>\r\n  <script crossorigin src=\"https://unpkg.com/react@16/umd/react.production.min.js\"></script>\r\n  <script crossorigin src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\"></script>\r\n...\r\n```\r\n\r\nAfter that, I was able to run hooks in my library using the React loaded from CDN, while Jest still loaded the react copy from node_modules (installed from devDependencies).\r\n\r\nHope that helps","updated_at":"2019-09-11T19:57:27Z","created_at":"2019-09-11T19:57:27Z","creator_user_login":"hodgef"}
{"number":13991,"comment_id":"533500658","body":"I have face this issue when I try to change my component from functional to classfull component and I also get this error so here is my solution regarding this error hope it helps in your case also.\r\n\r\ntry use higher order component in this case\r\n\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst styles = theme => ({\r\nroot: {\r\nbackground: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\nborder: 0,\r\nborderRadius: 3,\r\nboxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\ncolor: 'white',\r\nheight: 48,\r\npadding: '0 30px',\r\n},\r\n});\r\n\r\nclass HigherOrderComponent extends React.Component {\r\n\r\nrender(){\r\nconst { classes } = this.props;\r\nreturn (\r\nHigher-order component\r\n);\r\n}\r\n}\r\n\r\nHigherOrderComponent.propTypes = {\r\nclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(HigherOrderComponent);","updated_at":"2019-09-20T10:31:32Z","created_at":"2019-09-20T10:31:32Z","creator_user_login":"abdulmoizshaikh"}
{"number":13991,"comment_id":"533781845","body":"> I'm using Yarn, and fixed this by [forcing resolution](https://yarnpkg.com/lang/en/docs/package-json/#toc-resolutions) in my `package.json`:\r\n> \r\n> ```\r\n>   \"resolutions\": {\r\n>     \"**/react\": \"16.7.0-alpha.2\",\r\n>     \"**/react-dom\": \"16.7.0-alpha.2\"\r\n>   },\r\n> ```\r\n\r\nDid you add in the Parent or Child package?","updated_at":"2019-09-21T09:03:45Z","created_at":"2019-09-21T09:03:45Z","creator_user_login":"iwarner"}
{"number":13991,"comment_id":"534641440","body":"> Based on some of the responses above, here's what worked for me:\r\n> \r\n> 1. Added the following to `config/webpack.config.js`\r\n> \r\n> ```\r\n> externals: {\r\n>   react: {\r\n>     root: 'React',\r\n>     commonjs2: 'react',\r\n>     commonjs: 'react',\r\n>     amd: 'react'\r\n>   },\r\n>   'react-dom': {\r\n>     root: 'ReactDOM',\r\n>     commonjs2: 'react-dom',\r\n>     commonjs: 'react-dom',\r\n>     amd: 'react-dom'\r\n>   }\r\n> }\r\n> ```\r\n> \r\n> 1. Edited `package.json`\r\n> \r\n> ```\r\n> \"devDependencies\" : {\r\n>   ...\r\n>   \"react\": \"^16.9.0\",\r\n>   \"react-dom\": \"^16.9.0\",\r\n> }\r\n> ```\r\n> \r\n> ```\r\n> \"peerDependencies\": {\r\n>   \"react\": \"^16.9.0\",\r\n>   \"react-dom\": \"^16.9.0\"\r\n> }\r\n> ```\r\n> \r\n> 1. Edited `public/index.html`\r\n> \r\n> ```\r\n> <head>\r\n>   <script crossorigin src=\"https://unpkg.com/react@16/umd/react.production.min.js\"></script>\r\n>   <script crossorigin src=\"https://unpkg.com/react-dom@16/umd/react-dom.production.min.js\"></script>\r\n> ...\r\n> ```\r\n> \r\n> After that, I was able to run hooks in my library using the React loaded from CDN, while Jest still loaded the react copy from node_modules (installed from devDependencies).\r\n> \r\n> Hope that helps\r\n\r\nNo offence, but it is disturbing that solutions like this have to be followed. I have been trying to get this bug resolved for the last couple of days without relying on such hacks.\r\n\r\nI am working on a reusable library that contains components using hooks. I need to test them in actual projects before publishing them. The only solution for this is to use `yarn|npm link`. I bundle the library using rollup, and I can verify that the bundle does not contain a version of react. When I bundle (webpack) the app that makes use of the library the bug/issue appears. This happens for bare `create-react-app` and a `next.js` apps too. Both frameworks use webpack in the background.\r\n\r\nHas anyone found a sustainable solution yet?","updated_at":"2019-09-24T16:36:35Z","created_at":"2019-09-24T16:36:35Z","creator_user_login":"kelvinlouis"}
{"number":13991,"comment_id":"535150839","body":"By ditching `npm|yarn link` completely, I was able to resolve the issue. Instead, I use [this](https://github.com/whitecolor/yalc) lovely library, which is agnostic of your project structure. It also allows you to keep using webpack as your bundler, so you do not have to declare _react_ and _react-dom_ as an `external` or `alias`. Unfortunately, it introduces some new directories and lock files to the project, but hey it works...locally and even inside our docker containers.","updated_at":"2019-09-25T18:25:40Z","created_at":"2019-09-25T18:25:40Z","creator_user_login":"kelvinlouis"}
{"number":13991,"comment_id":"535659174","body":"Maybe this will be at list a little bit helpful:\r\n\r\n[Link](https://www.wolesblog.com/react-component-npm-package-boilerplate-with-hooks-typescript-lint-jest-and-example-part-1/)","updated_at":"2019-09-28T06:40:02Z","created_at":"2019-09-26T19:48:14Z","creator_user_login":"woles"}
{"number":13991,"comment_id":"535679989","body":"@GabrielBB thank's, it's work for me","updated_at":"2019-09-26T20:48:04Z","created_at":"2019-09-26T20:48:04Z","creator_user_login":"behnammodi"}
{"number":13991,"comment_id":"536328970","body":"@dmart914 thanks! So far the only workaround that works for me :)","updated_at":"2019-09-29T18:37:06Z","created_at":"2019-09-29T18:37:06Z","creator_user_login":"maciekgrzybek"}
{"number":13991,"comment_id":"537269513","body":"Currently getting the React Invalid Hook Call warning when using a minimal, straightforward setup.\r\n\r\nThis function component: \r\n\r\n1. Uses the same version for React and ReactDOM.\r\n2. Follows the Rules of Hooks. \r\n3. Only has one copy of React.\r\n\r\n__Dependencies__\r\nreact@16.10.1\r\nreact-dom@16.10.1\r\nwebpack@4.41.0\r\nwebpack-cli@3.3.9\r\n\r\nAnd running `webpack test.js -o main.js` to build.\r\n\r\nI expect this file to: \r\n - Render the box.\r\n- Pause the debugger before calling `React.useState`.\r\n- Create a boolean `test` and update callback `updateTest`.\r\n  - Throws the React error.\r\n- On render perform the `React.useEffect` callbacks.\r\n  - Throws the React error.\r\n\r\nAm I doing something wrong, or is there something else going on?\r\n\r\n```\r\n// test.js\r\nimport React, { createElement as el } from 'react';\r\nimport ReactDOM from 'react-dom'; \r\n\r\nfunction Item() {\r\n  debugger;\r\n  const [test, updateTest] = React.useState(false); // Throws React error.\r\n\r\n  React.useEffect(function checkTest() { // Throws React error.\r\n    console.log(\"checking test\", test);\r\n  }, [test]);\r\n\r\n  React.useEffect(function tester() { // Throws React error.\r\n    if (!test) {\r\n      setTimeout(() => {\r\n        console.log(\"changing value for test\");\r\n        updateTest(true);\r\n      }, 1000);\r\n    }\r\n  }, [test]);\r\n\r\n  return el('div', {style: {width: '300px', height: '300px', 'background-color': 'green', border: '1px solid red'}});\r\n}\r\n\r\nfunction render() {\r\n  let root = document.querySelector('#primary');\r\n  if (!root) {\r\n    root = document.createElement('div');\r\n    document.body.appendChild(root);\r\n  }\r\n  \r\n  ReactDOM.render(Item(), root);\r\n}\r\n\r\nrender();\r\n```","updated_at":"2019-10-01T23:13:39Z","created_at":"2019-10-01T23:13:39Z","creator_user_login":"ckmahoney"}
{"number":13991,"comment_id":"537302457","body":"You forgot to actually create an element. You're synchronously invoking `Item()` before you reach the `ReactDOM.render` call. You need to pass `el(Item)`.","updated_at":"2019-10-02T01:56:36Z","created_at":"2019-10-02T01:55:51Z","creator_user_login":"Jessidhia"}
{"number":13991,"comment_id":"537509328","body":"True! Thank you for the info.","updated_at":"2019-10-02T14:07:55Z","created_at":"2019-10-02T14:07:55Z","creator_user_login":"ckmahoney"}
{"number":13991,"comment_id":"537696020","body":"Am in a similar situation to some of the other commenters. I am using webpack to transpile some react components (some of which use hooks) and placing the transpiled code into a `lib` folder. I added react to the `externals` field of the webpack config so it does not get bundled with the component code. I would like to use these components in two separate projects - these components are common between them and so we would like to develop them in one place and have the updates be reflected in both apps.\r\n\r\nIf the dependency is added using `common-components: file:../../common-components/lib` in package.json then the components load perfectly, however running webpack doesn't update the components immediately - instead I must run `yarn upgrade common-components` and then restart the dev server.\r\n\r\nIf the dependency is added using `common-components: link:../../common-components/lib` then rerunning webpack will update the files in the main app's `node_modules` (since it is using a symlink now), but I am getting the above error of multiple instances of react. I suppose it is now using the react version in the `common-components/node_modules` folder.\r\n\r\nIs there a way to use symlinks (i.e. `common-components: link:../../common-components/lib`), while also making sure the linked components use the react found in the main app's node_modules folder? Since I am planning on using these components in both apps I cannot link the react package from one of them into the common components library and I would like to avoid linking both the main apps' reacts to the one used in the common components package. I have seen some comments referring to the webpack `resolve` field which sounds promising but I am unable to get it to work. Any help would be greatly appreciated!\r\n\r\nedit: for anyone interested in our use case, we ended up changing the build step to simply copy the files into the two projects in which they are needed, and avoiding transpiling altogether.","updated_at":"2019-10-30T19:46:35Z","created_at":"2019-10-02T21:48:12Z","creator_user_login":"ZM123"}
{"number":13991,"comment_id":"542657363","body":"One quick work around would be not to publish the package, but just push it to github and import it into your project using `yarn add <git-url>`.","updated_at":"2019-10-16T11:33:28Z","created_at":"2019-10-16T11:33:28Z","creator_user_login":"eskawl"}
{"number":13991,"comment_id":"542732480","body":"> One quick work around would be not to publish the package, but just push it to github and import it into your project using `yarn add <git-url>`.\r\n\r\nThe reason many of us use npm link and npm package relative paths is to develop and test the code without having to publish changes to NPM or GitHub before we know it will work.","updated_at":"2019-10-16T14:35:19Z","created_at":"2019-10-16T14:35:19Z","creator_user_login":"JeremyGrieshop"}
{"number":13991,"comment_id":"543309929","body":"We've ran into this issue being related to https://github.com/facebook/react/issues/13972#issuecomment-447599035 in that I think this can also be caused by a Webpack'd Node server. Our use case was an integration test running within Jest which ran `webpack()` programmatically to build the server prior to executing the tests. The issue, I believe, is related to how ESM and CJS can exist at the same time.\r\n\r\nTake this example for instance:\r\n\r\n```js\r\n// node express server, doing server-rendering\r\nimport React from 'react';\r\nimport { ApolloProvider } from '@apollo/react-common';\r\nimport { renderToStringWithData } from '@apollo/react-ssr';\r\n\r\nres.send(await renderToStringWithData(<ApolloProvider><App /></ApolloProvider>)\r\n```\r\n\r\nWhat I am seeing while in a debugger session is that we can get two different instances of React in the compiled version of this file:\r\n```\r\n_react: {Children, ...}\r\n_react2: {default: {Children, ...}\r\n```\r\n\r\nWhere\r\n`_react` is from the ESM `import React from 'react'` in this file\r\n`_react2` is from the CJS `var _react = _interopRequireDefault(require(\"react\"));` from within `node_modules/@apollo/react-ssr/lib/react-ssr.cjs.js`\r\n\r\nI believe this caused the reference to React to not be equal in the two places (server-render file, and inside `@apollo/react-ssr`'s bundle) and thus caused the error to be thrown.\r\n\r\nWe found that this was probably caused by programmatic usage of `webpack()` from within the test, and have refactored those tests to be end-to-end tests. Lesson being for us that if the issue is happening only in test code, you may have overly complicated tests.","updated_at":"2019-10-17T18:44:35Z","created_at":"2019-10-17T18:44:35Z","creator_user_login":"bwhitty"}
{"number":13991,"comment_id":"544344559","body":"I managed to solve it with yarn:\r\n\r\ncd to `myApp/node_modules/react` and `yarn link`\r\n\r\nthen in your library, run `yarn link react`\r\n\r\nNow your library is using the exact same react version as your main app\r\n\r\nI tried to set react as a peer Dependancy in my lib but then the lib wouldn't build","updated_at":"2019-10-21T04:32:14Z","created_at":"2019-10-21T04:32:14Z","creator_user_login":"danydhondt"}
{"number":13991,"comment_id":"544683297","body":"How one can fix this using `create-react-app` without ejecting or switching to `yarn`?","updated_at":"2019-10-21T20:02:25Z","created_at":"2019-10-21T20:02:25Z","creator_user_login":"renanvalentin"}
{"number":13991,"comment_id":"544797491","body":"You can just use the exact same technique using npm link. No ejecting necessary.","updated_at":"2019-10-22T04:07:10Z","created_at":"2019-10-22T04:07:10Z","creator_user_login":"danydhondt"}
{"number":13991,"comment_id":"545285356","body":"Linking  `react` is not the best idea when you work on multiple projects with different versions. ","updated_at":"2019-10-23T06:14:23Z","created_at":"2019-10-23T06:14:23Z","creator_user_login":"woles"}
{"number":13991,"comment_id":"545297818","body":"@woles you're totally right but in my case, it solves my 'hooks' problem. I hope react developers come up with a better solution","updated_at":"2019-10-23T06:55:13Z","created_at":"2019-10-23T06:55:13Z","creator_user_login":"danydhondt"}
{"number":13991,"comment_id":"545363900","body":"Hi,\r\nI fixed this bug after hours realising that I accidentally used the component falsely inside react router.\r\n\r\nMy app was working but in one component I could not add useState at all. the reason was that I used the component inside react routers render method without the higher order function like this:\r\n `<Route exact path=\"/path\" render={ ComponentCausingTheErrorMesage }/>`\r\nswitching to\r\n`<Route exact path=\"/path\" component={ ComponentNowWorkingAgain }/>`\r\nfixed it for me","updated_at":"2019-10-23T09:50:18Z","created_at":"2019-10-23T09:50:18Z","creator_user_login":"aricma"}
{"number":13991,"comment_id":"551042742","body":"I was using `npm link` between an app and a module I was actively working on, and I had to fix it by linking the app's `react` and `react-dom` to the module, then linking the module to the app:\r\n\r\nin app:\r\n1. `cd node_modules/react && npm link`\r\n2. same for `react-dom`\r\n\r\nin module:\r\n\r\n3. `npm link react && npm link react-dom`\r\n4. `npm link`\r\n\r\nin app:\r\n\r\n5. `npm link [module-name]`\r\n\r\nHope this helps someone","updated_at":"2019-11-07T11:37:58Z","created_at":"2019-11-07T11:37:11Z","creator_user_login":"kristojorg"}
{"number":13991,"comment_id":"551083712","body":"We had hooks working client-side but were hitting this error on SSR. My colleague solved this it with the following in our server-side webpack config:\r\n\r\n```js\r\nconst nodeExternals = require('webpack-node-externals');\r\n\r\nconst serverConfig = () => {\r\n  // lots of config, then:\r\n  externals: [\r\n    nodeExternals({\r\n      modulesFromFile: true,\r\n    }),\r\n  ],\r\n}\r\n```","updated_at":"2019-11-07T13:41:51Z","created_at":"2019-11-07T13:41:51Z","creator_user_login":"sandinmyjoints"}
{"number":13991,"comment_id":"551317278","body":"> I managed to solve it with yarn:\r\n> \r\n> cd to `myApp/node_modules/react` and `yarn link`\r\n> \r\n> then in your library, run `yarn link react`\r\n> \r\n> Now your library is using the exact same react version as your main app\r\n> \r\n> I tried to set react as a peer Dependancy in my lib but then the lib wouldn't build\r\n\r\nThis works just beautful","updated_at":"2019-11-07T23:42:08Z","created_at":"2019-11-07T23:42:08Z","creator_user_login":"viniciusrangelfp"}
{"number":13991,"comment_id":"552847184","body":"Just ran into this issue, when using electron-webpack, react and material-ui at the same time. When i try to use anything from material-ui - i get this error (e.g. try to use <Button /> component or use <ThemeProvider>). If i try to use hooks and dont use material-ui - everything is fine.\r\nThe error occurres in components from material-ui.\r\nAny solutions for my case?","updated_at":"2019-11-12T11:06:47Z","created_at":"2019-11-12T11:06:47Z","creator_user_login":"ivan-palatov"}
{"number":13991,"comment_id":"552901729","body":"Hi ZVER3D, try reading my earlier [comment](https://github.com/facebook/react/issues/13991#issuecomment-521903787). Hope it helps!","updated_at":"2019-11-12T13:51:42Z","created_at":"2019-11-12T13:51:42Z","creator_user_login":"travenec"}
{"number":13991,"comment_id":"552967987","body":"> I was using `npm link` between an app and a module I was actively working on, and I had to fix it by linking the app's `react` and `react-dom` to the module, then linking the module to the app:\r\n> \r\n> in app:\r\n> \r\n>     1. `cd node_modules/react && npm link`\r\n> \r\n>     2. same for `react-dom`\r\n> \r\n> \r\n> in module:\r\n> \r\n>     1. `npm link react && npm link react-dom`\r\n> \r\n>     2. `npm link`\r\n> \r\n> \r\n> in app:\r\n> \r\n>     1. `npm link [module-name]`\r\n> \r\n> \r\n> Hope this helps someone\r\n\r\nSweet baby moses, this helped me so much. Didn't even consider the problem being different versions of react!! I'm building a component locally to publish to NPM but have a separate project to test it locally, using npm link. Obviously (now) they're both using different versions of react. D'oh!","updated_at":"2019-11-12T16:21:30Z","created_at":"2019-11-12T16:21:30Z","creator_user_login":"bpk68"}
{"number":13991,"comment_id":"553227122","body":"> Hi ZVER3D, try reading my earlier [comment](https://github.com/facebook/react/issues/13991#issuecomment-521903787). Hope it helps!\r\n\r\nThanks for pointing me in the right direction. Another solution was to add the ui library, that im using into \"whiteListedModules\". The only problem would be that you would have to do it for all modules that require react to compile.\r\nSo, in package.json i wrote this:\r\n```json\r\n\"electronWebpack\": {\r\n    \"whiteListedModules\": [\r\n      \"@material-ui/core\",\r\n      \"@material-ui/icons\"\r\n    ]\r\n  }\r\n```","updated_at":"2019-11-13T03:52:38Z","created_at":"2019-11-13T03:52:38Z","creator_user_login":"ivan-palatov"}
{"number":13991,"comment_id":"554792616","body":"I'm developing a React application using the monorepo approach. I have a main app (`brush`) and a react library component (`react-gbajs`).\r\n\r\nSo when I try to render my `react-gbajs` component, I have this error about multiple instances of React. If I copy and paste the same code on `brush` I don't have any problem.\r\nI followed many approaches to fix it, but I none of them solved it (change build on Webpack, Yarn's workspace, npm link...)\r\n\r\nI tried to debug to check if I really have two copies os React (using `console.log(window.React1 === window.React2)` from React's doc), but it evaluates as `true`!\r\n(a **VERY BAD** workaround that I'm using now is to pass the hooks as prop: `<GBAEmulator useEffect={useEffect} />`... but I really don't want to merge it)\r\n\r\nAnyone have some ideia to fix it?\r\n\r\nMy project is open source and I'm adding this new react library component at this branch: https://github.com/macabeus/klo-gba.js/blob/ac18f4d42b122c333622f502947135c2de217ce2/react-gbajs/src/index.js#L251-L274","updated_at":"2019-11-18T06:32:48Z","created_at":"2019-11-17T22:05:35Z","creator_user_login":"macabeus"}
{"number":13991,"comment_id":"554928373","body":"Hi all, \r\n\r\nI have an app (myApp) that uses as dependency a custom library (myDepPackage). Both of them are using **webpack** as a build tool and of course I was having the same error. None of the above solutions worked for me. What it did, was to force webpack **NOT** to include react into the final bundle of the custom library (myDepPackage). The only configuration line I had to add to the webpack config (of the myDepPackage) is the below:\r\n\r\n```\r\nexternals: {\r\n  react: \"react\",\r\n},\r\n```\r\n\r\nYou can learn more about the \"externals\" option here: https://webpack.js.org/configuration/externals/#externals","updated_at":"2019-11-19T10:05:43Z","created_at":"2019-11-18T09:22:36Z","creator_user_login":"tsevdos"}
{"number":13991,"comment_id":"555023504","body":"@tsevdos Veeeery thank you!!! ❤️\r\nIt solved my problem that I said at the previous comment.","updated_at":"2019-11-18T13:51:35Z","created_at":"2019-11-18T13:51:35Z","creator_user_login":"macabeus"}
{"number":13991,"comment_id":"555721532","body":"For us, the problem was that we have an embeddable React app that gets loaded in the page from a WordPress shortcode and gets mounted on a div with a random ID. On some pages we have multiple embedded apps and it was working just fine until we started using hooks.\r\n\r\nIt would only complain on pages that have multiple embedded apps, so the solution was to update the WP shortcode to load the script with the build only once.\r\n\r\nSounds simple and obvious, but it was tricky to figure out! Specially because it was doing that and working fine until we added hooks.\r\n\r\nInterestingly enough, on some pages we have other - different -  apps that we embed that are also using hooks, and they load their own script/build with React too,... but then it works just fine! The problem was when it was the **exact same build being loaded more than once and they use hooks**.","updated_at":"2019-11-19T21:23:11Z","created_at":"2019-11-19T21:23:11Z","creator_user_login":"florantara"}
{"number":13991,"comment_id":"557677352","body":"What worked for me was a combination of two suggestions from this issue thread.\r\n\r\nMain application's webpack config (@apieceofbart's [suggestion](https://github.com/facebook/react/issues/13991#issuecomment-435587809))\r\n```\r\n  resolve: {\r\n    alias: {\r\n      react: resolve('./node_modules/react')\r\n    }\r\n  }\r\n```\r\n\r\nDependency's webpack config (@tsevdos's [suggestion](https://github.com/facebook/react/issues/13991#issuecomment-554928373))\r\n```\r\n  externals:\r\n    react: 'react'\r\n  }\r\n```","updated_at":"2019-11-22T20:16:29Z","created_at":"2019-11-22T20:12:26Z","creator_user_login":"kevireilly"}
{"number":13991,"comment_id":"557773063","body":"I was having this issue with `html-webpack-plugin` and I was using `index.html` looks like this as a `template` to `HtmlWebpackPlugin` setting.\r\n```js\r\n// webpack.config.js\r\nplugins: [\r\n   new HtmlWebpackPlugin({\r\n      template: \"./public/index.html\"\r\n   })\r\n],\r\n```\r\n\r\n```html\r\n<!-- public/index.html -->\r\n<html>\r\n<head>\r\n    <title>React App</title>\r\n</head>\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script src=\"main.js\"></script>\r\n</body>\r\n\r\n</html>\r\n```\r\n\r\nI realized the plugin was injecting `<script type=\"text/javascript\" src=\"main.js\"></script>` right after `<div id=\"root\"></div>`.\r\n\r\nSo, when I opened the dev tool and generated html looked like this.\r\n```html\r\n<html>\r\n<head>\r\n    <title>React App</title>\r\n</head>\r\n<body>\r\n    <div id=\"root\"></div>\r\n    <script src=\"main.js\"></script>\r\n    <script type=\"text/javascript\" src=\"main.js\"></script> <!-- injected from html-webpack-plugin -->\r\n</body>\r\n\r\n</html>\r\n```\r\n\r\nFor me, that was causing `Invalid Hook Call Warning`.\r\n\r\nI was able to remove warning by removing `<script src=\"main.js\"></script>` like below.\r\n\r\n```html\r\n<!-- public/index.html -->\r\n<html>\r\n<head>\r\n    <title>React App</title>\r\n</head>\r\n<body>\r\n    <div id=\"root\"></div>\r\n</body>\r\n\r\n</html>\r\n```\r\n\r\nI hope it helps someone looking for a solution!\r\n","updated_at":"2019-11-23T06:52:28Z","created_at":"2019-11-23T06:52:28Z","creator_user_login":"leejh3224"}
{"number":13991,"comment_id":"557824790","body":"Be aware that React-dependent libraries can also cause these issues. In my case, I was using different versions of `@emotion/core` and `@emotion/styled`.\r\n\r\nhttps://github.com/emotion-js/emotion/issues/1470","updated_at":"2019-11-23T19:12:48Z","created_at":"2019-11-23T19:12:48Z","creator_user_login":"awdyson"}
{"number":13991,"comment_id":"557942451","body":"Hi,\r\n\r\nA possible solution without ejecting is mixing the webpack alias configuration solution with [customize-cra ](https://github.com/arackaf/customize-cra) and [react-app-rewired](https://github.com/timarney/react-app-rewired) libraries. This way you can override just the necessary webpack configuration to solve the problem, by creating a config-overrides.js file with:\r\n\r\n```\r\nconst { override, addWebpackAlias } = require('customize-cra');\r\nconst path = require('path');\r\n\r\nmodule.exports = override(\r\n  addWebpackAlias({\r\n    react: path.resolve(path.join(__dirname, './node_modules/react')),\r\n  }),\r\n);\r\n```\r\n","updated_at":"2019-11-24T23:50:47Z","created_at":"2019-11-24T23:50:47Z","creator_user_login":"jecastro2"}
{"number":13991,"comment_id":"559900145","body":"I had this issue on a Gatsby site, I ran npm install and updated to the latest version of Gatsby and it fixed it all","updated_at":"2019-11-30T00:44:33Z","created_at":"2019-11-30T00:44:33Z","creator_user_login":"OliverHuntsman"}
{"number":13991,"comment_id":"560567096","body":"If you are having an issue with jest testing running ```yarn or npm test``` (like I was) and are using `react-test-renderer`, make sure `react-test-renderer` matches the same version of `react` you are using. \r\n\r\n#### Example: \r\n```js\r\n// Package.json\r\n{\r\n  ...\r\n    \"react\" : \"16.8.3\",\r\n  ...\r\n}\r\n```\r\nRun `yarn add react-test-renderer@16.8.3` ","updated_at":"2019-12-02T20:28:37Z","created_at":"2019-12-02T20:28:37Z","creator_user_login":"evanlesmez"}
{"number":13991,"comment_id":"562859716","body":"I have a lib and i checked all versions of `react` and `react-dom` in both lib and main projects. they are exact the same but didn't work.\r\nHowever @apieceofbart  solution worked for me.\r\n","updated_at":"2019-12-07T15:17:48Z","created_at":"2019-12-07T15:17:48Z","creator_user_login":"arminyahya"}
{"number":13991,"comment_id":"562960472","body":"@apieceofbart , you saved my day <3","updated_at":"2019-12-08T15:33:38Z","created_at":"2019-12-08T15:33:38Z","creator_user_login":"netojose"}
{"number":13991,"comment_id":"564788827","body":"> What worked for me was a combination of two suggestions from this issue thread.\r\n> \r\n> Main application's webpack config (@apieceofbart's [suggestion](https://github.com/facebook/react/issues/13991#issuecomment-435587809))\r\n> \r\n> ```\r\n>   resolve: {\r\n>     alias: {\r\n>       react: resolve('./node_modules/react')\r\n>     }\r\n>   }\r\n> ```\r\n> \r\n> Dependency's webpack config (@tsevdos's [suggestion](https://github.com/facebook/react/issues/13991#issuecomment-554928373))\r\n> \r\n> ```\r\n>   externals:\r\n>     react: 'react'\r\n>   }\r\n> ```\r\n\r\nSame here. I need to do both of these fixes to make it work. My explanation is that the second config tells the dependency to use external react with the name 'react', and the first config points the name 'react' to the 'node_modules/react' folder in the main repository. Therefore, both of them are necessary to make the react bridge work. \r\n\r\nStill, it seems that for some people one of them is enough, which I don't really understand.","updated_at":"2019-12-12T00:12:50Z","created_at":"2019-12-12T00:05:09Z","creator_user_login":"ghost"}
{"number":13991,"comment_id":"564791282","body":"> > What worked for me was a combination of two suggestions from this issue thread.\r\n> > Main application's webpack config (@apieceofbart's [suggestion](https://github.com/facebook/react/issues/13991#issuecomment-435587809))\r\n> > ```\r\n> >   resolve: {\r\n> >     alias: {\r\n> >       react: resolve('./node_modules/react')\r\n> >     }\r\n> >   }\r\n> > ```\r\n> > \r\n> > \r\n> > Dependency's webpack config (@tsevdos's [suggestion](https://github.com/facebook/react/issues/13991#issuecomment-554928373))\r\n> > ```\r\n> >   externals:\r\n> >     react: 'react'\r\n> >   }\r\n> > ```\r\n> \r\n> Same here. I need to do both of these fixes to make it work. My explanation is that the second config tells the dependency to use external react with the name 'react', and the first config points the name 'react' to the 'node_modules/react' folder in the main repository. Therefore, both of them are necessary to make the react bridge work.\r\n> \r\n> Still, it seems that for some people one of them is enough, which I don't really understand.\r\n\r\nThe second item is important!\r\nIf ignored, on the build process, the react will be exported together, because it's an internal dependency","updated_at":"2019-12-12T00:14:30Z","created_at":"2019-12-12T00:14:30Z","creator_user_login":"netojose"}
{"number":13991,"comment_id":"565748264","body":"much love @apieceofbart !!!! I was about to kick my desk through the wall","updated_at":"2019-12-14T19:58:53Z","created_at":"2019-12-14T19:58:53Z","creator_user_login":"coderdix"}
{"number":13991,"comment_id":"565796960","body":"So, there is still no workaround for microservices. I have root application with react that dynamically requires bundles with another react. We can't just use external version of react because there are a lot of independent teams with their own dependencies. If we push 'em to use same external version then most projects obviously will crash and it will become impossible to upgrade this version due each project will depend on this version.\r\n\r\nAny ideas?","updated_at":"2019-12-15T10:43:52Z","created_at":"2019-12-15T10:34:42Z","creator_user_login":"asvetly"}
{"number":13991,"comment_id":"566370429","body":"Is there a solution for using react hooks together with npm link, that doesn't require ejecting from CRA?","updated_at":"2019-12-17T04:03:01Z","created_at":"2019-12-17T04:03:01Z","creator_user_login":"tschellenbach"}
{"number":13991,"comment_id":"566393903","body":"@tschellenbach \r\nyou can use craco to overwrite CRA config without eject.\r\nhttps://github.com/gsoft-inc/craco","updated_at":"2019-12-17T06:01:20Z","created_at":"2019-12-17T05:56:52Z","creator_user_login":"arminyahya"}
{"number":13991,"comment_id":"566408623","body":"Thanks to @tsevdos I've resolved my issue and made a tutorial on how to create a React package: https://youtu.be/esyS87NfBOw","updated_at":"2019-12-17T06:56:13Z","created_at":"2019-12-17T06:56:03Z","creator_user_login":"yurkoturskiy"}
{"number":13991,"comment_id":"567436376","body":"I was getting this issue and the webpack solution didn't apply because I am using parcel bundler instead. I was able to fix it by specifying an alias in the package.json of my main app that looked like this\r\n```\r\n\t\"alias\": {\r\n\t\t\"react\": \"./node_modules/react\",\r\n\t\t\"react-dom\": \"./node_modules/react-dom\"\r\n\t},\r\n```","updated_at":"2019-12-23T17:17:11Z","created_at":"2019-12-19T10:42:10Z","creator_user_login":"ewan-m"}
{"number":13991,"comment_id":"567641378","body":"Getting issues with trying to use my React components (written in hooks) in an electron app in the same project with different package json. The file structure looks like this:\r\n```\r\n- javascript\r\n  - src\r\n     - ComponentIWantToUse.tsx\r\n      - package.json\r\n- electron\r\n   - src\r\n     - IwantToUseItHere.tsx\r\n      - package.json\r\n```\r\n\r\nBoth package.json include react and react-dom in package.json but they're the same versions and I'm not seeing it show two react installs when I do `npm ls react`. Any ideas?\r\n\r\nEDIT: @ewan-m 's solution worked!","updated_at":"2019-12-20T20:01:59Z","created_at":"2019-12-19T20:02:11Z","creator_user_login":"davidsth"}
{"number":13991,"comment_id":"568524631","body":"So I've run into a weird case, I think. A third party library has unfortunately mixed functional and class based components. My components in my codebase are functional. A class based component from the library acts as a layout that renders my component as a child. This I believe is what is triggering the 'Error: Invalid hook call.' How should I work around that to use hooks, do I need to convert mine to a class component?","updated_at":"2019-12-23T16:52:37Z","created_at":"2019-12-23T16:52:37Z","creator_user_login":"iantbutler01"}
{"number":13991,"comment_id":"568526464","body":"@GrandathePanda Mixing classes and functional components shouldn't matter.  If a class calls a functional, which calls a hook, there's no problem there.  The only thing you can't do is call a hook directly from the class.","updated_at":"2019-12-23T16:59:24Z","created_at":"2019-12-23T16:59:24Z","creator_user_login":"JeremyGrieshop"}
{"number":13991,"comment_id":"568528048","body":"Okay, @JeremyGrieshop then I still have some investigation to do, if I render without using the third party component it renders fine so there is some conflict between that library and my code then. If I had to guess they are using a different react version maybe in their package.","updated_at":"2019-12-23T17:05:29Z","created_at":"2019-12-23T17:05:29Z","creator_user_login":"iantbutler01"}
{"number":13991,"comment_id":"568529087","body":"> Okay, @JeremyGrieshop then I still have some investigation to do, if I render without using the third party component it renders fine so there is some conflict between that library and my code then. If I had to guess they are using a different react version maybe in their package.\r\n\r\nRight, check `npm ls react react-dom` from your app to see if there are multiple versions.  It's possible the third-party library has a dependency with a specific version.","updated_at":"2019-12-23T17:09:30Z","created_at":"2019-12-23T17:09:30Z","creator_user_login":"JeremyGrieshop"}
{"number":13991,"comment_id":"568551106","body":"@JeremyGrieshop So it looks like my application is using 16.12.0 for react and dom and the third-party (elastic search-ui) uses 16.8.0 for react and dom. If I am correct the issue is then that since my 16.8.0 third-party library is rendering the component created with 16.12.0 this will cause the issue? They are also a lerna monorepo which potentially complicates this even further after reading through all of the above comments. The issue is arising from a useStyles hook created in materialui, they supply a withStyles hoc for backwards compatibility and I think in the meantime I'm going to go that route. All the changes to webpack and or the package json mentioned above really seem like a bandaid that is more liable to break then just going with a classic hoc in the meantime while hooks figure out how to mature in the face of so many different implementation quibbles.","updated_at":"2019-12-23T18:48:45Z","created_at":"2019-12-23T18:47:21Z","creator_user_login":"iantbutler01"}
{"number":13991,"comment_id":"568565259","body":"@GrandathePanda IMHO, your options are to (1) get the third-party to either update their react dependency to 16.12, or have them decide if having it as a peerDependency is more suitable than a dependency; (2) Use 16.8 in your app so they share same lib versions; (3) Eliminate their copy of react with:\r\n\r\n`rimraf node_modules/search-ui/node_modules/react && rimraf node_modules/search-ui/node_modules/react-dom`\r\n\r\nThe above command can be placed in a \"prebuild\" and \"prestart\" under the \"scripts\" part of your package.json (which is what I\"m currently doing).  The downside to (3), I suppose, is if they are using anything deprecated between 16.8 and 16.12.","updated_at":"2019-12-23T19:46:22Z","created_at":"2019-12-23T19:46:22Z","creator_user_login":"JeremyGrieshop"}
{"number":13991,"comment_id":"569139043","body":"> Hi all,\r\n> \r\n> I have an app (myApp) that uses as dependency a custom library (myDepPackage). Both of them are using **webpack** as a build tool and of course I was having the same error. None of the above solutions worked for me. What it did, was to force webpack **NOT** to include react into the final bundle of the custom library (myDepPackage). The only configuration line I had to add to the webpack config (of the myDepPackage) is the below:\r\n> \r\n> ```\r\n> externals: {\r\n>   react: \"react\",\r\n> },\r\n> ```\r\n> \r\n> You can learn more about the \"externals\" option here: https://webpack.js.org/configuration/externals/#externals\r\n\r\n@tsevdos I love you. You just put an end to some days of intense hassle. Thank you.","updated_at":"2019-12-26T21:52:48Z","created_at":"2019-12-26T21:51:46Z","creator_user_login":"Totone"}
{"number":13991,"comment_id":"572984992","body":"Hi everyone,\r\n\r\nI'm trying to use a hook in a component, this component is to be exported from [gatsby-browser.js](https://www.gatsbyjs.org/docs/browser-apis).\r\n\r\n**What is the current behaviour?**\r\n\r\nI am getting this error:\r\n\r\n> Unhandled Rejection (Error): Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\r\n> 1. You might have mismatching versions of React and the renderer (such as React DOM)\r\n> 2. You might be breaking the Rules of Hooks\r\n> 3. You might have more than one copy of React in the same app\r\n> See https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.\r\n\r\nThis is a sample code:\r\n\r\n```\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport configureStore from './src/utils/configure-store';\r\nimport { useApiResources } from './src/hooks/use-api-resources';\r\n\r\nconst RootWrapper = ({ element }) => {\r\n  const resources = useApiResources();\r\n  const store = configureStore();\r\n  return <Provider store={store}>{element}</Provider>;\r\n};\r\n\r\nRootWrapper.propTypes = {\r\n  element: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default RootWrapper;\r\n```\r\n\r\n**What is the expected behaviour?**\r\n\r\nHook should run without errors, or useful error messages should be provided.\r\n\r\nVersions of the react and react-dom depencies are 16.12.0","updated_at":"2020-01-10T11:52:37Z","created_at":"2020-01-10T10:46:27Z","creator_user_login":"davifantasia"}
{"number":13991,"comment_id":"574339799","body":"@leejh3224 thanks a lot dude! after hours of searching I found this answer, It solved my problem.\r\nJust changed the HtmlWebpackPlugin config from\r\n`inject: true` to `inject: 'head'` and the minified react errors are gone.\r\n","updated_at":"2020-01-14T19:42:52Z","created_at":"2020-01-14T19:42:52Z","creator_user_login":"ccarnivore"}
{"number":13991,"comment_id":"576573413","body":"I have created a [stackoverflow question](https://stackoverflow.com/questions/59785539/using-one-webpack-project-inside-another-with-react-hooks-causes-an-error) with my experience of trying to get this to work. Would it be possible, for those who have managed to get this to work, to give it a look and offer some advice?","updated_at":"2020-01-21T08:33:56Z","created_at":"2020-01-21T08:33:56Z","creator_user_login":"Meberem"}
{"number":13991,"comment_id":"579844952","body":"I'm porting a jquery application to React. I have a utility to expose React components within jQuery called `asJqueryPlugin`. Here is the file:\r\n```\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\n/**\r\n * A way to render React components with props easily with jQuery\r\n *\r\n * ## Register the React Component\r\n *\r\n * In your React Component file, register the component with jQuery using `asJqueryPlugin`\r\n * ```\r\n * const Greeting = ({ person }) => <div>Hello {person}</div>\r\n * asJqueryPlugin('Greeting', Greeting, { person: \"Bob\" })\r\n * ```\r\n *\r\n * ## Rendering, Selecting and Updating Props with jQuery\r\n *\r\n * Select an element and render using the `react` function\r\n * ```\r\n * $('#greeting').react('Greeting', { person: 'Frank' })\r\n * ```\r\n */\r\n\r\nwindow.reactRegistry = window.reactRegistry || {}\r\n\r\n// This is how React components register themselves as available within jQuery\r\nexport default function asJqueryPlugin(componentName, Component) {\r\n  window.reactRegistry[componentName] = { Component }\r\n}\r\n\r\nif (typeof window.$ !== 'undefined') {\r\n  ;(function($) {\r\n    // Add the plugin function jQuery\r\n    $.fn.react = function renderReactIntoElements(componentName, props) {\r\n      this.each(function render() {\r\n        const entry = window.reactRegistry[componentName || $(this).data('react')]\r\n        if (!entry) throw Error(`${componentName} component is not registered.`)\r\n        ReactDOM.render(<entry.Component {...props} />, this)\r\n      })\r\n      return this\r\n    }\r\n  })(window.$)\r\n}\r\n```\r\n\r\nThe app has many entry points in Webpack, and about 3-4 components are using this technique now. When components are bundled into different entrypoint bundles, I believe that's when the issue happens.\r\n\r\nSo if I have two entrypoints in Webpack:\r\n```\r\nentry: {\r\n      foo: './assets/js/foo',\r\n      bar: './assets/js/bar'\r\n}\r\n```\r\n\r\nThen in each of those files we set up an exposed Component (each using hooks):\r\n```\r\n// foo.js\r\nimport React from 'react'\r\nimport asJqueryPlugin from '../utils/asJqueryPlugin'\r\nconst Foo = () => {\r\n  const ref = useRef()\r\n  return <div ref={ref}>Foo</div>\r\n}\r\nasJqueryPlugin('Foo', Foo)\r\n\r\n// bar.js\r\n... same stuff but with Bar component\r\n```\r\nNow if I include both entries on the same page, and try to render both components via the jquery plugin...\r\n```\r\n<script src=\"/bundles/foo.js\" />\r\n<script src=\"/bundles/bar.js\" />\r\n<script>\r\n    $('#foo-container').react('Foo')\r\n    $('#bar-container').react('Bar')\r\n</script>\r\n```\r\n...I get this hooks error.\r\n\r\nNot sure if this helps the conversation or not, but at least shows a use case of how a (questionably) sane dev might get themselves into a situation with multiple react instances.","updated_at":"2020-01-29T16:36:14Z","created_at":"2020-01-29T16:36:14Z","creator_user_login":"timkindberg"}
{"number":13991,"comment_id":"580139432","body":"That helped me - https://github.com/facebook/react/issues/13991#issuecomment-554928373\r\nBut I also had to remove `react` and `react-dom` from the dependencies and move them to peer dependencies and uninstall and reinstall node modules.","updated_at":"2020-01-30T08:29:20Z","created_at":"2020-01-30T08:29:20Z","creator_user_login":"maciekgrzybek"}
{"number":13991,"comment_id":"580826656","body":"Hi,\r\nI read the conversation and many posts on the web and I m still stuck with the error multiple instances of react.\r\nI push this repo for reproduce the bug : https://github.com/jeromelegrand/dooliz-lib\r\nI hope someone can help me.\r\nThanks.","updated_at":"2020-01-31T17:19:50Z","created_at":"2020-01-31T17:19:50Z","creator_user_login":"jeromelegrand"}
{"number":13991,"comment_id":"584645291","body":"Im facing this issue and don't get anywhere with solutions above.\r\nIn short: I am very certain I have only one react version running, and I get the error using react-bootstrap, which probably doesn't use hooks wrong, because noone else has issues.\r\n\r\nThis error occurs on a node.js backend for me.\r\n\r\n__What I checked around react versions__\r\n\r\nI have a yarn setup with workspaces, `yarn list react` or `yarn list react-dom` only shows one instance.\r\n\r\nI've printed require cache to see what has been imported :\r\n\r\n    for(var key in require.cache) {\r\n        if(key.indexOf(\"react\") !== -1 && key.indexOf(\"index\") !== -1) {\r\n            console.log(key);\r\n        }\r\n    }\r\n\r\nI run it just before rending something from react-bootstrap, which causes the invalid hook error for me, and it logs:\r\n\r\n```\r\nC:\\web\\resourceful\\daCore\\node_modules\\react-dom\\index.js\r\nC:\\web\\resourceful\\daCore\\node_modules\\react\\index.js\r\nC:\\web\\resourceful\\daCore\\node_modules\\react-router-dom\\index.js\r\nC:\\web\\resourceful\\daCore\\node_modules\\react-router-dom\\node_modules\\react-router\\index.js\r\nC:\\web\\resourceful\\daCore\\node_modules\\react-is\\index.js\r\nC:\\web\\resourceful\\daCore\\node_modules\\mini-create-react-context\\dist\\cjs\\index.js\r\nC:\\web\\resourceful\\daCore\\node_modules\\react-router\\index.js\r\nC:\\web\\resourceful\\daCore\\node_modules\\@fortawesome\\react-fontawesome\\index.js\r\nC:\\web\\resourceful\\daCore\\node_modules\\@tinymce\\tinymce-react\\lib\\cjs\\main\\ts\\index.js\r\n```\r\n\r\nWhich seems to confirm that there is only 1 react version loaded.\r\n\r\nFinally I've added this to node_modules/react-dom/index.js\r\n\r\n    console.log(\"React DOM daCore\");\r\n    global['React1'] = require('react');\r\n\r\nAnd this to node_modules/react-router-dom/cjs/Form.js\r\n\r\n    require('react-dom');\r\n    global['React2'] = require('react');\r\n    console.log('#TEST '+(global['React1'] === global['React2']? 'SAME' : 'NOT SAME'));\r\n\r\nWhich prints `SAME`\r\n\r\nAny idea what else this can be?\r\nI will also post this on react-bootstrap repo.","updated_at":"2020-02-11T14:58:32Z","created_at":"2020-02-11T13:55:37Z","creator_user_login":"flyon"}
{"number":13991,"comment_id":"584761836","body":"So I'm pretty sure that having two instances of React is not the issue here. I think the issue is when there are two react _roots_. Are you calling `ReactDOM.render()` multiple times into different parts of the page? If so, I think this can cause the issue. I think hooks \"belong\" to a particular \"root\" and break when there are multiple of them and the two bundles share some common code. I'm guessing here...","updated_at":"2020-02-11T17:43:22Z","created_at":"2020-02-11T17:43:22Z","creator_user_login":"timkindberg"}
{"number":13991,"comment_id":"584972676","body":"> \r\n> \r\n> ... I think the issue is when there are two react _roots_. Are you calling `ReactDOM.render()` multiple times into different parts of the page? \r\n\r\nThank you @timkindberg  this helped me finaly resolve it. I realised I'm using [react-tree-walker](https://github.com/ctrlplusb/react-tree-walker) to do an initial render and fetch required data before making the final render with `ReactDOMServer.renderToString` \r\n\r\nQuickly removing the use of this package removed the error, and I've now got the same thing working with [react-ssr-prepass](https://github.com/FormidableLabs/react-ssr-prepass) , which is actually now recommended on the react-tree-walker readme page\r\n\r\nSo it was indeed two `ReactDOM.render` calls! For now this setup with [react-ssr-prepass](https://github.com/FormidableLabs/react-ssr-prepass) works for me, and when Suspense lands in react-dom/server I can switch to that\r\n\r\n\r\n\r\n\r\n\r\n","updated_at":"2020-02-12T01:34:54Z","created_at":"2020-02-12T01:33:57Z","creator_user_login":"flyon"}
{"number":13991,"comment_id":"588140908","body":"I'm using ```react-compare-image```  ```https://github.com/junkboy0315/react-compare-image``` in my Gutenberg project but having this strange issue though everything works whenever I remove the `ReactCompareImage` component from save function. Edit function works perfectly but the save not working. \r\n\r\nI went through https://reactjs.org/warnings/invalid-hook-call-warning.html and I don't think, I've any of these issues.\r\n\r\nHere is complete save function file:\r\n\r\n```import Inspector from \"./inspector\";\r\nimport { Fragment } from \"react\";\r\nimport ReactCompareImage from \"react-compare-image\";\r\n\r\n/**\r\n * WordPress dependencies\r\n */\r\nconst {__} = wp.i18n;\r\n\r\nconst save = ({className, attributes}) => {\r\n\r\n\tconst {\r\n\t\tpaddingTop,\r\n\t\tpaddingRight,\r\n\t\tpaddingBottom,\r\n\t\tpaddingLeft,\r\n\r\n\t\tmarginTop,\r\n\t\tmarginRight,\r\n\t\tmarginBottom,\r\n\t\tmarginLeft,\r\n\r\n\t\tborder,\r\n\t\tborderColor,\r\n\t\tborderType,\r\n\t\tbackground,\r\n\r\n\t\tbackgroundImage,\r\n\t\tgradient,\r\n\r\n\t\tdividerColor,\r\n\t\tbuttonColor,\r\n\r\n\t\tdirection,\r\n\r\n\t\tbeforeImage,\r\n\t\tbeforeLabel,\r\n\t\tafterImage,\r\n\t\tafterLabel,\r\n\r\n\t} = attributes;\r\n\r\n\tconst style = {\r\n\t\t\"padding\": `${paddingTop}px ${paddingRight}px ${paddingBottom}px ${paddingLeft}px`,\r\n\t\t\"margin\": `${marginTop}px ${marginRight}px ${marginBottom}px ${marginLeft}px`,\r\n\t\t\"border\": `${border}px ${borderType} ${borderColor}`,\r\n\t\t\"background\": background\r\n\t};\r\n\r\n\treturn(\r\n\t\t<Fragment>\r\n\t\t\t<ReactCompareImage\r\n\t\t\t\tleftImage={beforeImage.url}\r\n\t\t\t\tleftImageLabel={beforeLabel}\r\n\t\t\t\trightImage={afterImage.url}\r\n\t\t\t\trightImageLabel={afterLabel}\r\n\t\t\t\tvertical={'vertical' === direction}\r\n\t\t\t\tsliderLineColor={dividerColor}\r\n\t\t\t/>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default save;\r\n```\r\n![Screenshot 2020-02-19 at 4 11 52 PM](https://user-images.githubusercontent.com/6356552/74824591-9a467380-5332-11ea-93c5-275a2ddb38ef.png)\r\n\r\n","updated_at":"2020-02-19T10:12:47Z","created_at":"2020-02-19T10:08:58Z","creator_user_login":"azizultex"}
{"number":13991,"comment_id":"589468043","body":"I am also running into this issue. I have a recap posted on SO: https://stackoverflow.com/questions/60331304/next-js-with-typescript-invalid-hook-call-hooks-can-only-be-called-inside-of-t\r\n\r\nI also have a minimal reproducible example: https://github.com/coler-j/shopify_playground","updated_at":"2020-02-21T02:26:37Z","created_at":"2020-02-21T02:26:37Z","creator_user_login":"cjancsar"}
{"number":13991,"comment_id":"589498160","body":"My Main app is a `create-react` app (not ejected) that was importing a shared library that also used React. I was able to resolve this by:\r\n\r\n**Using Rollup to package the library instead of webpack**\r\nFor some reason I've yet to work out, using externals did not remove React from the library bundle.\r\n\r\n*rollup-config.js*\r\n```\r\nexport default [\r\n  {\r\n    input: 'src/index.js',\r\n    output: {\r\n      file: pkg.main,\r\n      format: 'cjs',\r\n      sourcemap: true,\r\n    },\r\n    plugins: [external(), babel(), resolve(), commonjs(), svgr()],\r\n  },\r\n  {\r\n    input: 'src/index.js',\r\n    output: {\r\n      file: pkg.module,\r\n      format: 'es',\r\n      sourcemap: true,\r\n    },\r\n    plugins: [\r\n      alias({\r\n        entries: [{ find: '@components', replacement: 'src/components' }],\r\n      }),\r\n      external(),\r\n      babel(),\r\n      svgr(),\r\n    ],\r\n  },\r\n]\r\n```\r\n\r\n**Installing craco and using that to modify webpack of main app**\r\n*craco.config.js*\r\n```\r\nconst path = require('path')\r\n\r\nmodule.exports = {\r\n  webpack: {\r\n    alias: {\r\n      react: path.resolve(__dirname, './node_modules/react'),\r\n    },\r\n  },\r\n}\r\n```\r\nThanks to @arminyahya  for pointing me to craco.","updated_at":"2020-02-21T04:55:24Z","created_at":"2020-02-21T04:55:24Z","creator_user_login":"blacksandsolutions"}
{"number":13991,"comment_id":"591530194","body":"I'm trying to use hooks while loading react from a cdn.  This example (this is the entire html page) gives the `Hooks can only be called inside of the body of a function component` error when `Example()` is called.  I've removed everything, even ReactDOM, so it's hard to imagine that I could have multiple copies of React.  Is this just impossible?\r\n\r\n```\r\n<!DOCTYPE html>\r\n<html>\r\n\r\n<head>\r\n  <script crossorigin src=\"https://unpkg.com/react@16.12.0/umd/react.development.js\"></script>\r\n  <script crossorigin src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\r\n</head>\r\n\r\n</body>\r\n  <script type=\"text/babel\">\r\n    function Example() {\r\n      let [count, setCount] = React.useState(0);\r\n      return ( <h1>Hello</h1> );\r\n    };\r\n\r\n  Example();\r\n  </script>\r\n</body>\r\n\r\n</html>\r\n```","updated_at":"2020-02-26T16:54:59Z","created_at":"2020-02-26T16:54:59Z","creator_user_login":"samkamin"}
{"number":13991,"comment_id":"591659671","body":"@samkamin That's because you have ZERO react roots. You need to render your application. However, this is still a good confirmation that hooks rely on (and are coupled to) a react root.\r\n\r\n```html\r\n<html>\r\n<head>\r\n  <script crossorigin src=\"https://unpkg.com/react@16.12.0/umd/react.development.js\"></script>\r\n  <script crossorigin src=\"https://unpkg.com/react-dom@16.12.0/umd/react-dom.development.js\"></script>\r\n  <script crossorigin src=\"https://unpkg.com/@babel/standalone/babel.min.js\"></script>\r\n</head>\r\n</body>\r\n  <div id=\"root\"></div>\r\n  <script type=\"text/babel\">\r\n    function Example() {\r\n      let [count, setCount] = React.useState(0);\r\n      return ( <h1>Hello</h1> );\r\n    };\r\n\r\n    ReactDOM.render(<Example />, document.getElementById('root'))\r\n  </script>\r\n</body>\r\n</html>\r\n```","updated_at":"2020-02-26T21:43:42Z","created_at":"2020-02-26T21:43:42Z","creator_user_login":"timkindberg"}
{"number":13991,"comment_id":"591665901","body":"Thank you!  It actually wasn't the lack of a react root - I just removed that in the course of simplifying the error as much as possible - but something equally dumb:  Instead of `<Example />`, I was just write `Example()`.  Not the same thing, at all.  Thanks again.","updated_at":"2020-02-26T21:59:16Z","created_at":"2020-02-26T21:59:16Z","creator_user_login":"samkamin"}
{"number":13991,"comment_id":"591764100","body":"Nothing seems to work for me. I am creating a component for share and use in other projects, but when testing locally from another project does not work. I'm using Hooks with react 16.13.0.\r\n\r\nwebpack.config.js\r\n\r\n```\r\nmodule.exports = {\r\n  entry: ENTRY,\r\n  output: {\r\n    library: LIBRARY_NAME,\r\n    path: path.resolve(__dirname, OUTPUT_DIR),\r\n    filename: OUTPUT_FILENAME,\r\n    libraryTarget: 'commonjs2',\r\n  },\r\n  module: {\r\n    rules: [\r\n      {\r\n        test: /\\.(js|tsx)$/,\r\n        exclude: /node_modules/,\r\n        loader: 'babel-loader',\r\n      },\r\n      {\r\n        test: /\\.tsx?$/,\r\n        exclude: /node_modules/,\r\n        use: 'ts-loader',\r\n      },\r\n    ],\r\n  },\r\n  resolve: {\r\n    alias: {\r\n      '@src': path.resolve(__dirname, './src'),\r\n      '@components': path.resolve(__dirname, './src/components'),\r\n      '@core': path.resolve(__dirname, './src/core'),\r\n      react: path.resolve(__dirname, './node_modules/react'),\r\n      'react-dom': path.resolve(__dirname, './node_modules/react-dom'),\r\n    },\r\n    extensions: ['.js', '.json', '.tsx', '.ts'],\r\n  },\r\n  externals: {\r\n    react: 'react',\r\n  },\r\n  target: 'node',\r\n  plugins: [\r\n    new HtmlWebPackPlugin({\r\n      template: './tests/index.html',\r\n      filename: 'index.html',\r\n    }),\r\n  ]}\r\n\r\n```\r\n\r\nAny suggestions? I tested all the suggestions of old discussions.\r\nThanks! :grin: \r\n","updated_at":"2020-02-27T03:40:48Z","created_at":"2020-02-27T03:40:48Z","creator_user_login":"Jeconias"}
{"number":13991,"comment_id":"592185620","body":"I declared a Settings.js as follows:\r\n\r\n```\r\nimport React, {useState} from 'react';\r\n\r\nimport {\r\n    View,\r\n    Text,\r\n    Switch\r\n} from 'react-native';\r\n\r\nexport function Settings(props) {\r\n    const [rememberPin, setRememberPin] = useState(false);\r\n    let {changeView, header} = props;\r\n   \r\n\r\n    const toggleRememberPin = (value) => {\r\n        setRememberPin(value);\r\n    };\r\n\r\n    return (\r\n            <View>\r\n                    <Text>Remember PIN:</Text>\r\n                    <Switch\r\n                        onValueChange={toggleRememberPin}\r\n                        value={rememberPin}\r\n                        ios_backgroundColor=\"#aeaeae\"\r\n                        />\r\n            </View>\r\n    );\r\n}\r\n\r\nexport default {Settings};\r\n```\r\n\r\nI import and use it in App.js as follows:\r\n\r\n```\r\nimport React, {Component} from 'react';\r\nimport {\r\n    SafeAreaView,\r\n    StyleSheet,\r\n    View,\r\n    Text,\r\n    TouchableOpacity,\r\n    Dimensions,\r\n    ScrollView,\r\n    Switch\r\n} from 'react-native';\r\n\r\nimport Colors from './src/assets/Colors';\r\nimport {Settings} from './src/components/Settings';\r\n...\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {viewsStack: this.viewsStack};\r\n    }\r\n\r\n    viewsStack = {\r\n        SplashScreen: false,\r\n        BindingInstructions: false,\r\n        PinPad: false,\r\n        Qr: false,\r\n        Dashboard: false,\r\n        Authorizations: false,\r\n        Settings: true,\r\n        Browsers: false,\r\n        TransmitSDK: false,\r\n        OTP: false,\r\n    };\r\n\r\n    changeView = (newView) => {\r\n        let {viewsStack} = this.state;\r\n        for (let key of Object.keys(viewsStack)) {\r\n            viewsStack[key] = false;\r\n        }\r\n        viewsStack[newView] = true;\r\n        this.setState(viewsStack);\r\n    };\r\n\r\n    render() {\r\n        let {viewsStack} = this.state;\r\n        return (\r\n            <SafeAreaView style={styles.safeAreaView}>\r\n                {viewsStack.SplashScreen && (splashScreen())}\r\n                {viewsStack.BindingInstructions && (bindingInstructions({changeView: this.changeView}))}\r\n                {viewsStack.PinPad && (pinPad({message: 'Inserisci un nuovo PIN', changeView: this.changeView}))}\r\n                {viewsStack.Qr && (qr({header: 'QR Binding', message: 'Scansiona il QR dalla tua dashboard\\noppure\\ninserisci il codice manualmente.', changeView: this.changeView}))}\r\n                {viewsStack.Dashboard && (dashboard({header: 'Profilo Utente', changeView: this.changeView}))}\r\n                {viewsStack.Authorizations && (authorizations({header: 'Autorizzazioni', authorizations: [1, 2, 3, 4, 5, 6], changeView: this.changeView}))}\r\n                {viewsStack.Settings && (Settings({header: 'Impostazioni', changeView: this.changeView}))}\r\n            </SafeAreaView>\r\n        );\r\n    }\r\n};\r\n...\r\n```\r\n\r\nBut I get:\r\n\r\n<img width=\"502\" alt=\"Screenshot 2020-02-27 at 22 27 01\" src=\"https://user-images.githubusercontent.com/18684103/75488276-509ffd80-59b0-11ea-8175-59989a8722b3.png\">\r\n\r\nI am using:\r\n\r\n```\r\n\"react\": \"16.9.0\",\r\n\"react-native\": \"0.61.5\"\r\n```\r\n\r\nWhat's wrong?\r\n","updated_at":"2020-02-27T21:30:58Z","created_at":"2020-02-27T21:29:01Z","creator_user_login":"strawberry-code"}
{"number":13991,"comment_id":"592392621","body":"You're calling your `Settings` component as a function and not as a function component. \n\n```js\n<Settings header='Impostazioni' changeView={this.changeView} />\n```\n\nHooks are not allowed inside plain functions, only in function components and the way you're calling it tricks React into thinking that your component is in reality a normal function.","updated_at":"2020-02-28T07:49:01Z","created_at":"2020-02-28T07:49:01Z","creator_user_login":"emeraldsanto"}
{"number":13991,"comment_id":"597621530","body":"Maybe this will spare someone the headache, if you're using react-router-dom if you pass your component in render like this (not the proper way) it will give `Invalid Hook Call Warning`\r\n`<Route path=\"/:cuid/:title\" render={PostArticle} />`\r\n\r\nTook me half an hour to know where I went wrong\r\n\r\n","updated_at":"2020-03-11T13:08:23Z","created_at":"2020-03-11T13:08:23Z","creator_user_login":"RodPaDev"}
{"number":13991,"comment_id":"598718949","body":"This may help someone - if you're experiencing this bug after using react-router-dom, check how you've defined your routes. e.g. it should be`<Route path={'/upgrade/:plan'} exact children={<Upgrade />} />` while I was doing `<Route path={'/upgrade/:plan'} exact children={Upgrade} />`","updated_at":"2020-03-13T13:26:48Z","created_at":"2020-03-13T13:26:48Z","creator_user_login":"amoghs"}
{"number":13991,"comment_id":"599010014","body":"This is especially awkward if you're using [ink](https://github.com/vadimdemedes/ink) or [pastel](https://github.com/vadimdemedes/pastel) to build a CLI (see https://github.com/vadimdemedes/pastel/issues/2). I can't make it a peerDep because I can't ask every user to install React and I can't force them to use a certain version / range of React either.","updated_at":"2020-03-14T04:31:12Z","created_at":"2020-03-14T04:31:12Z","creator_user_login":"adam-lynch"}
{"number":13991,"comment_id":"600339058","body":"My team is using Yarn and was getting the `Invalid hook call` error only in the tests, not in the app.  The problem was that `react-test-renderer` was resolving to a version lower than that of `react` and `react-dom`, so we added `resolutions` in `package.json`:\r\n\r\n```\r\n\"devDependencies\": {\r\n\t...\r\n\t\"react\": \"16.12.0\",\r\n\t\"react-dom\": \"16.12.0\",\r\n\t...\r\n},\r\n\"resolutions\": {\r\n\t\"react-test-renderer\": \"16.12.0\"\r\n}\r\n```\r\n","updated_at":"2020-03-17T22:54:41Z","created_at":"2020-03-17T22:52:58Z","creator_user_login":"cbryan-risklens"}
{"number":13991,"comment_id":"602195659","body":"For people using Gatsby in a subdir, this is a possible solution.\r\n\r\n`gatsby-node.js`:\r\n\r\n```\r\nconst path = require('path')\r\nconst fromRoot = name => path.resolve(__dirname + '/../node_modules/' + name)\r\n\r\nexports.onCreateWebpackConfig = ({ actions }) => actions.setWebpackConfig({\r\n  resolve: {\r\n    alias: {\r\n      'react': fromRoot('react'),\r\n      'react-dom': fromRoot('react-dom'),\r\n    },\r\n  },\r\n})\r\n```","updated_at":"2020-03-22T12:52:40Z","created_at":"2020-03-22T12:52:07Z","creator_user_login":"luukdv"}
{"number":13991,"comment_id":"603665614","body":"I have the same problem when executing the ` npm link ` command ，there is a problem\r\n\r\nThen I used the official solution provided by react to solve this problem\r\n\r\n> This problem can also come up when you use npm link or an equivalent. In that case, your bundler might “see” two Reacts — one in application folder and one in your library folder. Assuming myapp and mylib are sibling folders, one possible fix is to run npm link ../myapp/node_modules/react from mylib. This should make the library use the application’s React copy.\r\n\r\nIf A needs to introduce B （A and B are siblings）\r\n- step 1 (in B)\r\n  - `npm link ./../A/node_modules/react`\r\n  - `npm link`\r\n- step 2 (in A)\r\n`npm link B`\r\n\r\nit works for me \r\n","updated_at":"2020-03-25T06:30:44Z","created_at":"2020-03-25T06:30:44Z","creator_user_login":"IFmiss"}
{"number":13991,"comment_id":"604071826","body":"Even with these answers I'm unsure why I'm getting the error. I have my dependency library linked to my main app and after I got the error I followed the react-docs and linked my dependency library's version of react to my app's react (running `npm link <>/webapp/node_modules/react`. (even did this with react-dom). When I logged to test if React1  and React2 were the same, it logged `true` so I wasn't using duplicate versions of React, I was using the same versions of React, and I was using function components. So even though the test logging indicated that I didn't have a duplicate version of React I was still getting the hook error. \r\n\r\nBut trying this solution as mentioned above fixed that particular bug:\r\n\r\n``` \r\nalias: {\r\n        react: path.resolve('./node_modules/react')\r\n }\r\n```\r\n\r\nSo I'm at a loss.\r\n","updated_at":"2020-03-25T21:42:32Z","created_at":"2020-03-25T20:32:50Z","creator_user_login":"orpheus"}
{"number":13991,"comment_id":"604091265","body":"> So I'm at a loss.\r\n\r\n@orpheus Do you render more than a single react root into the same page? aka do you have more than one `ReactDOM.render` call on the same page?","updated_at":"2020-03-25T21:14:43Z","created_at":"2020-03-25T21:14:43Z","creator_user_login":"timkindberg"}
{"number":13991,"comment_id":"604100633","body":">  Do you render more than a single react root into the same page? aka do you have more than one `ReactDOM.render` call on the same page?\r\n\r\n@timkindberg\r\n\r\nI do not. I have my one `ReactDOM.render` at the root of my `app`, and the `lib` module I'm linking is a component library and does not use a `ReactDOM.render` at all. \r\n\r\nedit: I'm doing something akin to:\r\n\r\n```\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport Root from './App/Root'\r\n\r\nReactDOM.render(\r\n  <Root />,\r\n  document.getElementById('root')\r\n)\r\n```\r\nwhere `<Root />` renders something like\r\n\r\n```\r\nconst Root = () => {\r\n  return <Provider store={store}>\r\n        <PermissionsProvider>\r\n              <Suspense fallback={null}>\r\n                <Router history={history}>\r\n                  <Routes store={store} />\r\n                </Router>\r\n              </Suspense>\r\n        </PermissionsProvider>\r\n  </Provider>\r\n}\r\n```\r\n`PermissionsProvider` is the React component that I import from my linked `lib` module that uses a hook which causes the app to fail. It creates state and context and renders it's children.\r\n","updated_at":"2020-03-25T21:41:22Z","created_at":"2020-03-25T21:36:19Z","creator_user_login":"orpheus"}
{"number":13991,"comment_id":"607129606","body":"Hi, I'm using electron with react hooks. if I write my own hook, it' works. But it throw error when I use hooks from other package in node_module, like `react-use`, `swr`. \r\n\r\nI have to copy package  to my local file.\r\n\r\nDoes anyone  meet this problem?\r\n\r\nExample project here:\r\nhttps://github.com/Zaynex/electron-react-ts-kit/tree/hooks-error\r\n\r\ncore code:\r\nhttps://github.com/Zaynex/electron-react-ts-kit/blob/hooks-error/src/renderer/app.tsx","updated_at":"2020-04-01T09:07:10Z","created_at":"2020-04-01T09:06:01Z","creator_user_login":"Zaynex"}
{"number":13991,"comment_id":"608027903","body":"I'm also still having this issue even after removing duplicate copies of react and react-dom. I created a super simple [test project](https://github.com/onlyanegg/test-proj) to reproduce.\r\n\r\n```\r\n$ tree -I node_modules\r\n.\r\n|-- test-app\r\n|   |-- dist\r\n|   |   |-- index.html\r\n|   |   `-- main.js\r\n|   |-- package-lock.json\r\n|   |-- package.json\r\n|   |-- src\r\n|   |   |-- index.html\r\n|   |   `-- index.js\r\n|   `-- webpack.config.js\r\n`-- test-lib\r\n    |-- dist\r\n    |   `-- main.js\r\n    |-- package-lock.json\r\n    |-- package.json\r\n    |-- src\r\n    |   `-- index.js\r\n    `-- webpack.config.js\r\n```\r\n\r\nCurrently, I'm using the webpack alias method, but I've also tried the `npm link` method, and neither work.","updated_at":"2020-04-02T18:26:07Z","created_at":"2020-04-02T18:26:07Z","creator_user_login":"onlyanegg"}
{"number":13991,"comment_id":"610039866","body":"I came across this issue as well. I am using ExpressJS + Pug to render views, I have then written a renderer (similar to ReactRails) that allows you to render components server and client side.\r\n\r\nI tried to extract this to a separate package as it was getting messy, and I came across this issue.\r\n\r\nIn order to fix it, I had to add under the `resolve` key:\r\n\r\n``` js\r\nalias: {\r\n  react: path.resolve(\"./node_modules/react\"),\r\n},\r\n```\r\nIt now works as expected when running webpack normally, but the problem still persists with a docker volume. I'm too new to docker to deal with it, so going to revisit it later.\r\n\r\nEdit: I spoke too soon. It works fine now with React render, but not with hydrate.","updated_at":"2020-04-06T21:50:02Z","created_at":"2020-04-06T21:13:29Z","creator_user_login":"Gibbo3771"}
{"number":13991,"comment_id":"611211438","body":"> \r\n> \r\n> Hi, I'm using electron with react hooks. if I write my own hook, it' works. But it throw error when I use hooks from other package in node_module, like `react-use`, `swr`.\r\n> \r\n> I have to copy package to my local file.\r\n> \r\n> Does anyone meet this problem?\r\n> \r\n> Example project here:\r\n> https://github.com/Zaynex/electron-react-ts-kit/tree/hooks-error\r\n> \r\n> core code:\r\n> https://github.com/Zaynex/electron-react-ts-kit/blob/hooks-error/src/renderer/app.tsx\r\n\r\nHello. I had the same issue. I am using electron-webpack which marks all modules as externals for webpack. With few hardcoded exceptions - like react and react-dom.\r\nFor me that meant that react loaded from my code was different than react loaded from such module.\r\nAdding these modules to the [whitelist](https://webpack.electron.build/configuration#white-listing-externals) seems to help (not sure if it didn't break anything else yet :)\r\n","updated_at":"2020-04-08T21:49:31Z","created_at":"2020-04-08T21:46:25Z","creator_user_login":"huhle"}
{"number":13991,"comment_id":"611393738","body":"@huhle  thanks, it works! Maybe we should dive into electron-webpack.","updated_at":"2020-04-09T08:09:50Z","created_at":"2020-04-09T08:09:30Z","creator_user_login":"Zaynex"}
{"number":13991,"comment_id":"613756400","body":"I just managed to get this working myself. I think it's one of the better solutions when it comes to Lerna and Yarn workspaces, and maybe some of the pieces could be used for another solution.\r\n\r\nIt all seems to boil down to the configuration of the `package.json` project I'm importing. I needed to include these sections: \r\n\r\n``` json\r\n \"peerDependencies\": {\r\n    \"react\": \"^16.13.1\",\r\n    \"react-dom\": \"^16.13.1\"\r\n  },\r\n  \"workspaces\": {\r\n    \"nohoist\": [\r\n      \"react\", \"react-dom\"\r\n    ]\r\n  }\r\n```\r\nAfter doing this, I had to rebuild the projects and I was up and running. It seems that listing them as peer dependencies allows them to be required to be installed by your consuming project. And because they're not listed in dependencies they shouldn't be available to the package you're trying to import, but for some reason unless you tell it not to hoist, they remain available and a new react instance makes its way in and causes the error.\r\n\r\nGood luck!","updated_at":"2020-04-15T01:02:31Z","created_at":"2020-04-15T01:02:31Z","creator_user_login":"counterbeing"}
{"number":13991,"comment_id":"616557566","body":"I am trying to use react-spring to get a simple fade-in effect. Nothing seems to be working. \r\n`import React, { useState, useEffect } from 'react';\r\nimport { animated, useTransition } from 'react-spring';\r\n\r\n\r\nconst TextContent = (props) => {\r\n\r\n    const [items] = useState([\r\n        { id: '0', title: 'Text1' },\r\n        { id: '1', title: 'Text2' },\r\n        { id: '2', title: 'Text1' }\r\n    ])\r\n\r\n    const [index, setIndex] = useState(0);\r\n\r\n    const transitions = useTransition(items[index], index => index.id,\r\n        {\r\n            from: { opacity: 0 },\r\n            enter: { opacity: 1 },\r\n            leave: { opacity: 0 },\r\n            config: { tension: 220, friction: 120 }\r\n        }\r\n    )\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval(() => {\r\n            setIndex((state) => (state + 1) % items.length);\r\n        }, 4000)\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                transitions.map(({ item, props, key }) => (\r\n                    <animated.div\r\n                        key={key}\r\n                        style={{ ...props, position: 'absolute' }}\r\n                    >\r\n                        <p>{item.title}</p>\r\n                    </animated.div>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextContent;`\r\n![Capture](https://user-images.githubusercontent.com/62280674/79757470-c2a21c80-8339-11ea-80c9-49b2e988d155.PNG)\r\n\r\nI tried checking if I have multiple instances of React. Npm ls-ing tells me I just have just a single version of react and react-dom, both of which at 16.13.1.\r\n","updated_at":"2020-04-20T13:35:43Z","created_at":"2020-04-20T13:35:43Z","creator_user_login":"Prat2103"}
{"number":13991,"comment_id":"618097369","body":"> > Hi, I'm using electron with react hooks. if I write my own hook, it' works. But it throw error when I use hooks from other package in node_module, like `react-use`, `swr`.\r\n> > I have to copy package to my local file.\r\n> > Does anyone meet this problem?\r\n> > Example project here:\r\n> > https://github.com/Zaynex/electron-react-ts-kit/tree/hooks-error\r\n> > core code:\r\n> > https://github.com/Zaynex/electron-react-ts-kit/blob/hooks-error/src/renderer/app.tsx\r\n> \r\n> Hello. I had the same issue. I am using electron-webpack which marks all modules as externals for webpack. With few hardcoded exceptions - like react and react-dom.\r\n> For me that meant that react loaded from my code was different than react loaded from such module.\r\n> Adding these modules to the [whitelist](https://webpack.electron.build/configuration#white-listing-externals) seems to help (not sure if it didn't break anything else yet :)\r\n\r\nBrilliant! Thank you","updated_at":"2020-04-22T23:51:37Z","created_at":"2020-04-22T23:51:37Z","creator_user_login":"JuanIrache"}
{"number":13991,"comment_id":"618153335","body":"> I am trying to use react-spring to get a simple fade-in effect. Nothing seems to be working.\r\n> `import React, { useState, useEffect } from 'react';\r\n> import { animated, useTransition } from 'react-spring';\r\n> \r\n> const TextContent = (props) => {\r\n> \r\n> ```\r\n> const [items] = useState([\r\n>     { id: '0', title: 'Text1' },\r\n>     { id: '1', title: 'Text2' },\r\n>     { id: '2', title: 'Text1' }\r\n> ])\r\n> \r\n> const [index, setIndex] = useState(0);\r\n> \r\n> const transitions = useTransition(items[index], index => index.id,\r\n>     {\r\n>         from: { opacity: 0 },\r\n>         enter: { opacity: 1 },\r\n>         leave: { opacity: 0 },\r\n>         config: { tension: 220, friction: 120 }\r\n>     }\r\n> )\r\n> \r\n> useEffect(() => {\r\n>     const interval = setInterval(() => {\r\n>         setIndex((state) => (state + 1) % items.length);\r\n>     }, 4000)\r\n>     return () => clearInterval(interval);\r\n> }, []);\r\n> \r\n> return (\r\n>     <div>\r\n>         {\r\n>             transitions.map(({ item, props, key }) => (\r\n>                 <animated.div\r\n>                     key={key}\r\n>                     style={{ ...props, position: 'absolute' }}\r\n>                 >\r\n>                     <p>{item.title}</p>\r\n>                 </animated.div>\r\n>             ))\r\n>         }\r\n>     </div>\r\n> )\r\n> ```\r\n> \r\n> }\r\n> \r\n> export default TextContent;`\r\n> ![Capture](https://user-images.githubusercontent.com/62280674/79757470-c2a21c80-8339-11ea-80c9-49b2e988d155.PNG)\r\n> \r\n> I tried checking if I have multiple instances of React. Npm ls-ing tells me I just have just a single version of react and react-dom, both of which at 16.13.1.\r\n\r\nSame here. react and react-dom are at 16.13.1 for me, and attempting to use react-spring brings this same error.","updated_at":"2020-04-23T03:20:02Z","created_at":"2020-04-23T03:20:02Z","creator_user_login":"OctonianCat"}
{"number":13991,"comment_id":"618390056","body":"From another thread over at `styled-components`, I learned that if you're using a local package of your own through a `file:` URI in `package.json`, you need to `rm -rf node_modules/local-package-name/node_modules` before running your app, because apparently, local packages are copied without checking `node_modules` for redundant dependencies.","updated_at":"2020-04-23T13:03:48Z","created_at":"2020-04-23T13:02:24Z","creator_user_login":"jorisw"}
{"number":13991,"comment_id":"618403833","body":"> From another thread over at `styled-components`, I learned that if you're using a local package of your own through a `file:` URI in `package.json`, you need to `rm -rf node_modules/local-package-name/node_modules` before running your app, because apparently, local packages are copied without checking `node_modules` for redundant dependencies.\r\n\r\nYep, this is the same issue for roughly a dozen use cases in just this thread alone.  I added a \"prestart\" and \"prebuild\" target to do the rm -rf (using rimraf).  Another user in this thread used npm-link-shared in their prestart to get the modules to share the same instance of react.  So many of us monorepo users are running into this.","updated_at":"2020-04-23T13:47:42Z","created_at":"2020-04-23T13:47:42Z","creator_user_login":"JeremyGrieshop"}
{"number":13991,"comment_id":"619427688","body":"> > Hi, I'm using electron with react hooks. if I write my own hook, it' works. But it throw error when I use hooks from other package in node_module, like `react-use`, `swr`.\r\n> > I have to copy package to my local file.\r\n> > Does anyone meet this problem?\r\n> > Example project here:\r\n> > https://github.com/Zaynex/electron-react-ts-kit/tree/hooks-error\r\n> > core code:\r\n> > https://github.com/Zaynex/electron-react-ts-kit/blob/hooks-error/src/renderer/app.tsx\r\n> \r\n> Hello. I had the same issue. I am using electron-webpack which marks all modules as externals for webpack. With few hardcoded exceptions - like react and react-dom.\r\n> For me that meant that react loaded from my code was different than react loaded from such module.\r\n> Adding these modules to the [whitelist](https://webpack.electron.build/configuration#white-listing-externals) seems to help (not sure if it didn't break anything else yet :)\r\n\r\nThis also applies for people having trouble with redux or redux toolkit and electron-webpack. I have the following working config:\r\n```\r\n// package.json\r\n...\r\n\"electronWebpack\": {\r\n  \"whiteListedModules\": [\"react-redux\"]\r\n}\r\n```\r\nsee https://github.com/electron-userland/electron-webpack/issues/349","updated_at":"2020-04-25T19:15:51Z","created_at":"2020-04-25T19:15:23Z","creator_user_login":"victormier"}
{"number":13991,"comment_id":"623181444","body":"My issue was that I wrote\r\n\r\n```\r\nimport React from 'React'\r\n```\r\n\r\nInstead of:\r\n\r\n```\r\nimport React from 'react'\r\n```\r\n\r\nSometimes it's the dumb things.","updated_at":"2020-05-03T21:00:51Z","created_at":"2020-05-03T21:00:37Z","creator_user_login":"alflennik"}
{"number":13991,"comment_id":"624338260","body":"I solved it by adding the following to my webpack configuration:\r\n\r\n```\r\n externals: {\r\n    react: {\r\n      root: \"React\",\r\n      commonjs2: \"react\",\r\n      commonjs: \"react\",\r\n      amd: \"react\",\r\n    },\r\n    \"react-dom\": {\r\n      root: \"ReactDOM\",\r\n      commonjs2: \"react-dom\",\r\n      commonjs: \"react-dom\",\r\n      amd: \"react-dom\",\r\n    },\r\n  },\r\n```\r\n\r\nI initially thought it was a problem with npm link, did all that was suggested, and even switched to yarn. Eventually figured something else was going on when publishing to npm gave the same error when importing in another project.","updated_at":"2020-05-05T22:23:31Z","created_at":"2020-05-05T22:23:31Z","creator_user_login":"essential-randomness"}
{"number":13991,"comment_id":"629709849","body":"Has anyone here solved this recently with a lerna monorepo? I've tried a few of the suggestions with no luck.","updated_at":"2020-05-16T21:44:46Z","created_at":"2020-05-16T21:44:46Z","creator_user_login":"tettoffensive"}
{"number":13991,"comment_id":"631840485","body":"Running into the error after adding the code that is commented out with the // below.  Adding the CssBaseline, and react fragment info causes the error.  Everything runs fine when it's commented out.  The original code is simply the basic npx create-react-app code.  Completely new to this and a few of the fixes I tried from above didn't have an effect. \r\n\r\nimport React from 'react';\r\nimport logo from './logo.svg';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\n\r\nexport default function App() {\r\n    return (\r\n\r\n            //<React.Fragment>\r\n\r\n            //<CssBaseline />\r\n\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n                    <p>\r\n                        Edit <code>src/App.js</code> and save to reload.\r\n                        </p>\r\n                    <a\r\n                        className=\"App-link\"\r\n                        href=\"https://reactjs.org\"\r\n                        target=\"_blank\"\r\n                        rel=\"noopener noreferrer\"\r\n                    >\r\n                        Learn React\r\n                        </a>\r\n                </header>\r\n            </div>\r\n           \r\n        //</React.Fragment>\r\n  );\r\n}\r\n","updated_at":"2020-05-21T02:31:39Z","created_at":"2020-05-21T02:26:56Z","creator_user_login":"tsg-l"}
{"number":13991,"comment_id":"638331819","body":"For local testing:\r\nIn the library node_modules delete the react and react-dom folder\r\nIn the main package run \"yarn install\" or \"npm install\" again.\r\n\r\nThis prevents the second copy of react being loaded into the main bundle. Obviously not a permanent fix but works for local testing.","updated_at":"2020-06-03T17:09:16Z","created_at":"2020-06-03T17:09:16Z","creator_user_login":"warrenday"}
{"number":13991,"comment_id":"638504160","body":"For anyone using lerna, you may come across this problem when running tests in one package, where the code references components in another package.\r\n\r\nThe problem that we experienced in this case was due to react being imported in the spec, and also being imported in a component in the component tree that was using [Material UI's withStyles](https://material-ui.com/styles/api/#withstyles-styles-options-higher-order-component), which is implemented using hooks in Material UI.\r\n\r\nIt seems that react internally manages state in a `ReactCurrentDispatcher.current` variable, and this ends up getting set in one instance of react, but used in the other instance of react -- when it's empty, it throws the `Invalid hook call ...` message.\r\n\r\nWe were already using [Craco](https://github.com/gsoft-inc/craco) to override Create React App's webpack config at build time:\r\n\r\n```\r\n  webpack: {\r\n    alias: {\r\n      react: path.resolve(__dirname, './node_modules/react'),\r\n    },\r\n  },\r\n```\r\n\r\nHowever, this webpack override is only used at build time -- when running the tests, the code isn't built, but instantiated from source -- so our solution was to make use of [CracoAlias](https://github.com/risenforces/craco-alias) in our `craco.config.js` to specify the react path during the tests:\r\n\r\n```\r\n  plugins: [\r\n    {\r\n      plugin: CracoAlias,\r\n      options: {\r\n        source: 'options',\r\n        baseUrl: './',\r\n        aliases: {\r\n          // We need to alias react to the one installed in the desktop/node_modules\r\n          // in order to solve the error \"hooks can only be called inside the body of a function component\"\r\n          // which is encountered during desktop jest unit tests,\r\n          // described at https://github.com/facebook/react/issues/13991\r\n          // This is caused by two different instances of react being loaded:\r\n          // * the first at packages/desktop/node_modules (for HostSignUpDownloadComponent.spec.js)\r\n          // * the second at packages/components/node_modules (for packages/components/Modal)\r\n          react: './node_modules/react',\r\n        },\r\n      },\r\n    },\r\n  ],\r\n```","updated_at":"2020-06-03T22:59:26Z","created_at":"2020-06-03T22:59:26Z","creator_user_login":"jasondarwin"}
{"number":13991,"comment_id":"639068098","body":"I used `@craco/craco` as a solution, without ejecting, following the example of @apieceofbart . Steps for me were the following using `npm link ` to get local module tested:\r\n\r\n1. Install craco to my demo app by running `npm i @craco/craco --save`\r\n2. Create configuration file `craco.config.js` to root where package.json lives in demo app.\r\n3. Change `start`, `build` and `test` scripts by replacing `react-scripts` with `craco` in my demo app.\r\n\r\n```js\r\n// craco.config.js\r\nconst path = require('path');\r\n\r\nmodule.exports = {\r\n    webpack: {\r\n        alias: {\r\n            react: path.resolve(__dirname, './node_modules/react')\r\n        }\r\n    }\r\n}\r\n```\r\n```js\r\n// package.json\r\n{\r\n....\r\n\"scripts\": {\r\n    \"start\": \"craco start\",\r\n    \"build\": \"craco build\",\r\n    \"test\": \"craco test\",\r\n    \"eject\": \"react-scripts eject\"\r\n  },\r\n...\r\n}\r\n```\r\n**edit: I did not even notice that @jasondarwin had the same idea.**","updated_at":"2020-06-05T08:53:42Z","created_at":"2020-06-04T19:26:03Z","creator_user_login":"tlehtimaki"}
{"number":13991,"comment_id":"639081507","body":"Spent the better of a day trying to fixing this issue. Posting my solution here incase it helps anyone.\r\n\r\nWe are using a monorepo and two packages were importing different instances from react, but they were resolving to the same place in the root node modules. Turns out we had these two instances because one of the apps was using it's own webpack to create a bundle. This was correctly being hoisted to the root node module, but would get it's own instance when imported by that package. The solution was include react and react DOM in the externals of the webpack config so that webpack wouldn't create a new instance of react for the bundle.\r\n\r\n`externals: {\r\n    react: 'react',\r\n    reactDOM: 'react-dom',\r\n  },`\r\n\r\nHope this helps someone!","updated_at":"2020-06-04T19:55:27Z","created_at":"2020-06-04T19:54:29Z","creator_user_login":"Jstuff36"}
{"number":13991,"comment_id":"640864225","body":"For me it was using react-hot-loader version 4.0.0, updating to react-hot-loader 4.8 seems to do the trick","updated_at":"2020-06-08T20:21:41Z","created_at":"2020-06-08T20:20:08Z","creator_user_login":"eliahuhorwitz"}
{"number":13991,"comment_id":"641343565","body":"I'm receiving the `Invalid hook call` message **ONLY** when running my tests on a custom Hook that I am creating for working with Modal windows.\r\n\r\nTo demonstrate the behavior, I have created an example in the following:\r\n(https://github.com/BradCandell/invalid-hook-example)\r\n\r\n- Only one version of `react` and `react-dom`\r\n\r\nAm I missing something terribly obvious? When I've broken the rule in the past, the `npm start` would fail. But this is only failing in my tests.\r\n\r\nI appreciate the help!\r\n-Brad","updated_at":"2020-06-09T14:43:26Z","created_at":"2020-06-09T14:43:26Z","creator_user_login":"BradCandell"}
{"number":13991,"comment_id":"641673569","body":"> \r\n> \r\n> I solved it by adding the following to my webpack configuration:\r\n> \r\n> ```\r\n>  externals: {\r\n>     react: {\r\n>       root: \"React\",\r\n>       commonjs2: \"react\",\r\n>       commonjs: \"react\",\r\n>       amd: \"react\",\r\n>     },\r\n>     \"react-dom\": {\r\n>       root: \"ReactDOM\",\r\n>       commonjs2: \"react-dom\",\r\n>       commonjs: \"react-dom\",\r\n>       amd: \"react-dom\",\r\n>     },\r\n>   },\r\n> ```\r\n> \r\n> I initially thought it was a problem with npm link, did all that was suggested, and even switched to yarn. Eventually figured something else was going on when publishing to npm gave the same error when importing in another project.\r\n\r\nThis fixed it for me. I was importing react-toastify and was getting the invalid hook call. I went through each item in the console error:\r\n\r\n>   1.  You might have mismatching versions of React and React DOM.\r\n>    2. You might be breaking the Rules of Hooks.\r\n>    3. You might have more than one copy of React in the same app.\r\n\r\nEnded up being 3rd issue. I followed this: \r\nhttps://reactjs.org/warnings/invalid-hook-call-warning.html#duplicate-react","updated_at":"2020-06-10T01:58:17Z","created_at":"2020-06-10T01:58:17Z","creator_user_login":"RaoufOsman"}
{"number":13991,"comment_id":"642072991","body":"None of the solutions above worked for me, until I realized that I was bundling another copy of react with the library I was _importing_.\r\nI had transpiled and bundled the source code of my library, so the check for different versions of React listed on the docs was returning `true` instead of `false`.\r\nMarking `react` as an external dependency and leaving it out of the bundle of my library did the trick.\r\n","updated_at":"2020-06-10T15:09:11Z","created_at":"2020-06-10T15:09:11Z","creator_user_login":"fulminmaxi"}
{"number":13991,"comment_id":"646039130","body":"My case was not a monorepo, but somewhat similar situation. We are developing a new UI framework, and instead of using npm link or lerna we just use webpack aliases to require the files on a sibling folder. It works fine, but you will run into this problem. Luckily the solution from @apieceofbart fixed the issue for us.","updated_at":"2020-06-18T14:03:07Z","created_at":"2020-06-18T14:03:07Z","creator_user_login":"danielo515"}
{"number":13991,"comment_id":"646437709","body":" Line 130:21:  React Hook \"useStyles\" is called in function \"pharmacyDashboard\" which is neither a React function component or a custom React Hook function       react-hooks/rules-of-hooks\r\n  Line 133:45:  React Hook \"React.useState\" is called in function \"pharmacyDashboard\" which is neither a React function component or a custom React Hook function  react-hooks/rules-of-hooks\r\n\r\nthis is the error.....can anyone please help me in resolving this ","updated_at":"2020-06-19T05:08:28Z","created_at":"2020-06-19T05:08:28Z","creator_user_login":"vyshnaviryali"}
{"number":13991,"comment_id":"646665095","body":"@vyshnaviryali you better call your function `usePharmacyDashboard `","updated_at":"2020-06-19T14:26:09Z","created_at":"2020-06-19T14:26:09Z","creator_user_login":"danielo515"}
{"number":13991,"comment_id":"646678376","body":"./src/components/HomeFiles/AppFooter.js\r\n  Line 1:1:  Definition for rule 'material-ui/no-hardcoded-labels'' was not found  material-ui/no-hardcoded-labels'\r\ncan anyone please help me in resolving this\r\n","updated_at":"2020-06-19T14:48:04Z","created_at":"2020-06-19T14:48:04Z","creator_user_login":"vyshnaviryali"}
{"number":13991,"comment_id":"654283120","body":"For everyone who are running this issue with `npm link` because you need to add features to your component(s) but not wanting to `npm publish` before testing, I'm surprised nobody suggested using `yalc` (https://www.npmjs.com/package/yalc)","updated_at":"2020-07-06T14:49:32Z","created_at":"2020-07-06T14:46:10Z","creator_user_login":"promethyttrium"}
{"number":13991,"comment_id":"654345962","body":"> For everyone who are running this issue with `npm link` because you need to add features to your component(s) but not wanting to `npm publish` before testing, I'm surprised nobody suggested using `yalc` (https://www.npmjs.com/package/yalc)\r\n\r\nI actually did last year: https://github.com/facebook/react/issues/13991#issuecomment-535150839\r\n\r\nWe have been using it for almost a year now without any issues.\r\n\r\n","updated_at":"2020-07-06T16:41:16Z","created_at":"2020-07-06T16:41:16Z","creator_user_login":"kelvinlouis"}
{"number":13991,"comment_id":"657279064","body":"Another one here using lerna; to fix this, I moved the `react` and `react-dom` dependencies to my root `package.json`.","updated_at":"2020-07-12T21:37:51Z","created_at":"2020-07-12T21:37:51Z","creator_user_login":"TranquilMarmot"}
{"number":13991,"comment_id":"657351642","body":"> I had the same issue and I resolved it by adding:\r\n> \r\n> ```\r\n>  alias: {\r\n>         react: path.resolve('./node_modules/react')\r\n>       }\r\n> ```\r\n> \r\n> to `resolve` property in webpack config of my main app.\r\n> \r\n> It's was obviously my mistake of using two copies of React but I agree that it would be great if the error message was better. I think this is maybe similar to: #2402\r\n\r\nFor those who are using the method above but still get the errors when running jest, add these to `moduleNameMapper` in jest's config (omit react-dom if it's not necessary):\r\n\r\n```\r\nmoduleNameMapper: {\r\n\r\n...\r\n\r\n  \"^react$\": \"<rootDir>/node_modules/react\",\r\n  \"^react-dom$\": \"<rootDir>/node_modules/react-dom\",\r\n\r\n...\r\n\r\n}\r\n```","updated_at":"2020-07-13T04:28:30Z","created_at":"2020-07-13T04:28:30Z","creator_user_login":"nopol10"}
{"number":13991,"comment_id":"661668726","body":"I'm at a loss. I'm getting this but my app doesn't use any hooks and there are no react or react-dom duplicates. I'm using next.js. Could that have something to do with it?","updated_at":"2020-07-21T06:46:36Z","created_at":"2020-07-21T06:46:36Z","creator_user_login":"dancancro"}
{"number":13991,"comment_id":"661890430","body":"`npm ls react`\r\n`npm ls react-dom`","updated_at":"2020-07-21T14:19:58Z","created_at":"2020-07-21T14:19:58Z","creator_user_login":"maapteh"}
{"number":13991,"comment_id":"661931996","body":"@maapteh was that for me? I did run those commands and didn't find any duplicates. Both libraries are at version 16.13.1\r\n","updated_at":"2020-07-21T15:30:54Z","created_at":"2020-07-21T15:30:54Z","creator_user_login":"dancancro"}
{"number":13991,"comment_id":"661933448","body":"@dancancro I'm also using Next.js and am unable to fix this.\r\n\r\n`npm ls react` and `npm ls react-dom` both only return one entry. But I'm not sure that's correct. I run into this error when linking to a local package for development. `npm ls` returns only one entry even when I don't link react in the dependency back to the main repo. But even when I do link react properly, I still get the error.","updated_at":"2020-07-21T15:38:58Z","created_at":"2020-07-21T15:33:20Z","creator_user_login":"justincy"}
{"number":13991,"comment_id":"661939999","body":"@justincy I don't have any package links in my project. I'm betting it's related to Next.js. The problem goes away if I put the main component inside a `typeof document !== 'undefined'`, effectively undermining the purpose of Next.js","updated_at":"2020-07-21T15:44:53Z","created_at":"2020-07-21T15:44:53Z","creator_user_login":"dancancro"}
{"number":13991,"comment_id":"661954847","body":"I managed to fix my problem by deleting react and react-dom from node_modules in the dependency. It's not ideal, but at least I can continue working.\r\n\r\n@dancancro I'm skeptical that your problem is caused by Next.js. If it were, lots of other people would have the problem. I'm only running into it because of linked packages. I don't see the error without linked packages.","updated_at":"2020-07-21T16:10:50Z","created_at":"2020-07-21T16:10:50Z","creator_user_login":"justincy"}
{"number":13991,"comment_id":"662043673","body":"The problem goes away if I remove five of the seven components in the main component. I can't see anything special about these components. Wrapping these components in `typeof document !== 'undefined'`s works too.","updated_at":"2020-07-21T19:36:45Z","created_at":"2020-07-21T18:51:45Z","creator_user_login":"dancancro"}
{"number":13991,"comment_id":"662622653","body":"Hi Team, i am trying to upgrade React version from 16.2.0 to 16.13.1, also did the same for react-dom. \r\nNow i am have a wrapper component which is being called at \"/test\" \r\n\r\n`class TestWrapper extends React.Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n          <TestComponent />\r\n       </React.Fragment>\r\n    )\r\n  }\r\n}`\r\n\r\nin test wrapper i have imported a functional component with a hook\r\n`function TestComponent(props) {\r\n  useEffect(() => {\r\n    console.log(\"TEST COMPONENT\");\r\n  });\r\n  return (\r\n    <div>\r\n      Hello world!\r\n    </div>\r\n  )\r\n}`\r\n\r\nBut when the page renders UseEffect hook does not work and Error occurs **i.e. Invalid Hook Call Warning**\r\nPS. : \r\n 1. I have checked that i have only one copy of react and react-dom is installed\r\n 2. React and react-dom version is 16.13.1 \r\n\r\n","updated_at":"2020-07-22T18:47:03Z","created_at":"2020-07-22T18:46:16Z","creator_user_login":"singhneha14"}
{"number":13991,"comment_id":"665738332","body":"That's what I have\r\nI just ...\r\n@ @\r\n![ReactError](https://user-images.githubusercontent.com/20440554/88820735-60737600-d1ca-11ea-8f32-7fe8280b78a4.PNG)\r\n I use nextJS so it don't need React importing. And I tried it - don't help.","updated_at":"2020-07-29T15:42:46Z","created_at":"2020-07-29T15:36:42Z","creator_user_login":"CypherPaw"}
{"number":13991,"comment_id":"665738579","body":"All other pages and func's working perfectly","updated_at":"2020-07-29T15:38:03Z","created_at":"2020-07-29T15:37:11Z","creator_user_login":"CypherPaw"}
{"number":13991,"comment_id":"666433396","body":"@Brotipok  what version of next.js?  (Seeing simliar problems, but only when moving to 9.5 from 9.4.X)","updated_at":"2020-07-30T15:06:15Z","created_at":"2020-07-30T15:06:15Z","creator_user_login":"bitfrost"}
{"number":13991,"comment_id":"666942024","body":"Hi! \r\n\r\nI’ve go the same error , only one package for react and react dom when I do npm ls .\r\n\r\nReact version : 16.13.1\r\nReact-dom version : 16.13.1 \r\n\r\nI’m using typescript and I have initialized the project with create-react-app my-app --template typescript.\r\n\r\nFunctional component are only working if I’am not using hooks within it.\r\n\r\nPackage.json \r\n\r\n{\r\n  \"name\": \"blablamovie\",\r\n  \"version\": \"0.1.0\",\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@testing-library/jest-dom\": \"^4.2.4\",\r\n    \"@testing-library/react\": \"^9.5.0\",\r\n    \"@testing-library/user-event\": \"^7.2.1\",\r\n    \"@types/jest\": \"^24.9.1\",\r\n    \"@types/node\": \"^12.12.53\",\r\n    \"@types/react\": \"^16.9.43\",\r\n    \"@types/react-dom\": \"^16.9.8\",\r\n    \"@types/react-router-dom\": \"^5.1.5\",\r\n    \"react-icons\": \"^3.10.0\",\r\n    \"react-scripts\": \"3.4.1\",\r\n    \"typescript\": \"^3.7.5\",\r\n    \"webpack-bundle-analyzer\": \"^3.8.0\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"react-scripts start\",\r\n    \"build\": \"react-scripts build\",\r\n    \"test\": \"react-scripts test\",\r\n    \"eject\": \"react-scripts eject\",\r\n    \"analyze\": \"source-map-explorer 'build/static/js/*.js'\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": \"react-app\"\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  }\r\n}\r\nI'ts an important project and It's turning me a little bit crazy.\r\nIf someone can help It would be great.\r\nThanks.\r\n\r\n","updated_at":"2020-07-31T06:29:06Z","created_at":"2020-07-31T05:56:17Z","creator_user_login":"florianzemma"}
{"number":13991,"comment_id":"667575566","body":"> \r\n> \r\n> @Brotipok what version of next.js? (Seeing simliar problems, but only when moving to 9.5 from 9.4.X)\r\n\r\nHere's dependencies\r\n  \"dependencies\": {\r\n    \"next\": \"9.4.4\",\r\n    \"next-images\": \"^1.4.0\",\r\n    \"node-sass\": \"^4.14.1\",\r\n    \"react\": \"16.13.1\",\r\n    \"react-document-meta\": \"^3.0.0-beta.2\",\r\n    \"react-dom\": \"16.13.1\",\r\n    \"react-horizontal-timeline\": \"^1.5.3\",\r\n    \"react-meta-tags\": \"^0.7.4\",\r\n    \"react-onclickoutside\": \"^6.9.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@types/node\": \"^14.0.23\",\r\n    \"@types/react\": \"^16.9.43\",\r\n    \"typescript\": \"^3.9.7\"\r\n  }","updated_at":"2020-08-01T19:18:19Z","created_at":"2020-08-01T19:18:19Z","creator_user_login":"CypherPaw"}
{"number":13991,"comment_id":"669098233","body":"I'm running into this same issue when importing `material-ui/core/Dialog` components, I've set my `package.json` to use react `16.8.0` specifically for both `react` and `react-dom` imports.\r\n\r\nI've ran `npm ls react` and `npm ls react-dom` with only one import I've also tried the test described in the error page:\r\n\r\n```\r\n// Add this in node_modules/react-dom/index.js\r\nwindow.React1 = require('react');\r\n\r\n// Add this in your component file\r\nrequire('react-dom');\r\nwindow.React2 = require('react');\r\nconsole.log(window.React1 === window.React2);\r\n```\r\n\r\nWhich returns `false`, however how would I track down the \"different\" react version that is being imported by a dependency?, it seems to only happen when I import the [Material UI Dialog](https://material-ui.com/api/dialog/) component, it happens as soon as tap a button that triggers it for rendering. I'm able to use other components such as `List` and `ListItems`, etc.\r\n\r\nI tried [forcing resolutions](https://github.com/facebook/react/issues/13991#issuecomment-449597362) and it didn't fix it either.\r\n\r\nI'm not using web pack (really small project) so the build happens with `react-scripts build` if that makes a difference.","updated_at":"2020-08-05T09:51:04Z","created_at":"2020-08-05T09:51:04Z","creator_user_login":"triztian"}
{"number":13991,"comment_id":"669171027","body":"Rewrite: I'll just replace my question with a solution reference (and maybe a request for even more term clarity in the docs, for us dummies? :) )\r\n\r\n**Background:**\r\nI was trying to webpack-compile a functional component with hooks into an asset that where that component could be called from vanilla JS in the browser.\r\n\r\nFor example,\r\n```\r\nfunction Example() {\r\n    const [count, setCount] = React.useState(0);\r\n\r\n    return <button onClick={() => setCount(count + 1)}>\r\n        You clicked {count} times\r\n    </button>;\r\n}\r\nexport default Example;\r\n```\r\n\r\n...which I wanted to be exported as a module in itself, and after loading that asset, use it directly from HTML, similar to:\r\n```\r\n<script defer>\r\n            ReactDOM.render(\r\n                ExportedCompiledExample.default(props),\r\n                document.getElementById(\"my_element\")\r\n            );\r\n</script>\r\n```\r\n\r\nI got this working a long time ago _as long as the component didn't contain hooks_. But when using hooks I kept running into this dreaded error message.\r\n\r\n**The table-flippingly simple solution**\r\nI followed _a lot_ of more complicated red herrings (multiple react/reactDOM versions/instances, npm imports and hidden secondary dependencies, react-hot-loader, webpack setup, externals, different bundle/module/library conventions, post-compilation structure...) before trying this, which worked:\r\n\r\n`export default () => <Example />;`\r\n\r\n(or `export default props => <Example {...props} />` where applicable).\r\n\r\nIn retrospective 20/20 it makes sense, I guess. \r\n\r\nBut just to pinpoint the source of confusion in case someone else needs it: the rules-of-hooks docs say _Call them at the top level in the body of a function component_. Which I thought I did, since I actually pasted the example directly into my structure.\r\n\r\nMy interpretation is that **this**, from the examples...\r\n\r\n```\r\nfunction Example() {\r\n  // Declare a new state variable, which we'll call \"count\"\r\n  const [count, setCount] = useState(0);\r\n\r\n  return (\r\n    <div>\r\n      <p>You clicked {count} times</p>\r\n      <button onClick={() => setCount(count + 1)}>\r\n        Click me\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n```\r\n\r\n...**is NOT a function component** in itself? It becomes so in the right calling context (so, not `Example()` but `<Example />`).\r\n\r\nI guess I may have missed it somewhere else in the docs, but in case not: it would have saved me a lot of time if a bit of usage context (or just a ES module setup) was included/mentioned/linked to. :) Especially since the direct `export default Example` version works without hooks.","updated_at":"2020-08-06T14:48:26Z","created_at":"2020-08-05T12:43:27Z","creator_user_login":"espen42"}
{"number":13991,"comment_id":"673539558","body":"Thanks for a working solution @apieceofbart! My issue was related to npm link.\r\n\r\nHere's how I got it working with Create React App, where the Webpack config is hidden by design. It might be your solution too @florianzemma?\r\n\r\n1. `npm install -D react-app-rewired`\r\n2. Create a file called **config-overrides.js** in your in your project root.\r\n```\r\n// config-overrides.js\r\nmodule.exports = function override(config, env) {\r\n  const path = require('path');\r\n\r\n  return {\r\n    ...config,\r\n    resolve: {\r\n      ...config.resolve,\r\n      alias: {\r\n        ...config.resolve.alias,\r\n        react: path.resolve('./node_modules/react')\r\n      }\r\n    }\r\n  };\r\n}\r\n```\r\n3. Replace relevant `react-scripts ...` -commands in package.json with `react-app-rewired ...`.\r\n\r\nI hope it helps","updated_at":"2020-08-13T15:17:17Z","created_at":"2020-08-13T15:17:17Z","creator_user_login":"lapponiandevil"}
{"number":13991,"comment_id":"677883532","body":"I got this error because I loaded the bundles 2 times .\r\nIn my case it happened because the nunjucks template where script tags were rendered has been used 2 times - in layout itself, and in general template for head tag content,","updated_at":"2020-08-20T20:21:28Z","created_at":"2020-08-20T20:21:28Z","creator_user_login":"koteisaev"}
{"number":13991,"comment_id":"678423667","body":"### Yarn workaround\r\n\r\n> I'm using Yarn, and fixed this by [forcing resolution](https://yarnpkg.com/lang/en/docs/package-json/#toc-resolutions) in my `package.json`:\r\n> \r\n> ```\r\n>   \"resolutions\": {\r\n>     \"**/react\": \"16.7.0-alpha.2\",\r\n>     \"**/react-dom\": \"16.7.0-alpha.2\"\r\n>   },\r\n> ```\r\n\r\nBesides adding the resolution in the parent app (consuming library) I updated the library dependencies with the following commands:\r\n\r\n1. `yarn add link:/path/to/parent-app/node_modules/react`\r\n2. `yarn add link:/path/to/parent-app/node_modules/react-dom`\r\n\r\nAfter this I re-linked the library at the parent app with `yarn add link:/path/to/library`","updated_at":"2020-08-21T18:17:35Z","created_at":"2020-08-21T18:16:28Z","creator_user_login":"luciomartinez"}
{"number":13991,"comment_id":"679834472","body":"Hi\r\nI am coming across the same problem with yarn workspaces.\r\nI have a layout like this:\r\n\r\nworkspace/\r\n├── library/\r\n├── app1/\r\n├── app2/\r\n\r\n\r\napp1 and app2 have direct dependencies to react v16.9.0, react-dom v16.9.0 and 'library'. \r\n'library' has a peer dependency to react v16.9.0 but also a dev dependency on storybook. \r\nThe problem seems to come from storybook which has a dependency on react v16.13.1.\r\nHowever, when I run yarn install, I end up with with react 16.13.1 in my top level node_modules and react 16.9.0 in the local node_modules of app1 and app2.\r\n\r\nWhen I run app1 (created with CRA), it is using its local react v16.9.0, but the components from 'library' are using React v16.13.1\r\n\r\nThis seems to me to be a problem with yarn hoisting logic, create-react-apps' webpack definition or both?\r\nAnyone have any idea of a workaround for this scenario?\r\n\r\n\r\n","updated_at":"2020-08-25T06:39:49Z","created_at":"2020-08-25T06:39:49Z","creator_user_login":"JamesRamm"}
{"number":13991,"comment_id":"680010966","body":"> Hi\r\n> I am coming across the same problem with yarn workspaces.\r\n> I have a layout like this:\r\n> \r\n> workspace/\r\n> ├── library/\r\n> ├── app1/\r\n> ├── app2/\r\n> \r\n> app1 and app2 have direct dependencies to react v16.9.0, react-dom v16.9.0 and 'library'.\r\n> 'library' has a peer dependency to react v16.9.0 but also a dev dependency on storybook.\r\n> The problem seems to come from storybook which has a dependency on react v16.13.1.\r\n> However, when I run yarn install, I end up with with react 16.13.1 in my top level node_modules and react 16.9.0 in the local node_modules of app1 and app2.\r\n> \r\n> When I run app1 (created with CRA), it is using its local react v16.9.0, but the components from 'library' are using React v16.13.1\r\n> \r\n> This seems to me to be a problem with yarn hoisting logic, create-react-apps' webpack definition or both?\r\n> Anyone have any idea of a workaround for this scenario?\r\n\r\nThe only solution I found for this was to ``yarn run eject`` the CRA app and switch the order of the ``resolve`` section from:\r\n\r\n```javascript\r\nmodules: ['node_modules', paths.appNodeModules].concat(\r\n        modules.additionalModulePaths || []\r\n      ),\r\n````\r\n\r\nto \r\n```javascript\r\nmodules: [paths.appNodeModules, 'node_modules'].concat(\r\n        modules.additionalModulePaths || []\r\n      ),\r\n````\r\n\r\nIt seems strange to me that the 'appNodeModules' is not highest priority - surely the actual app in question should be deferred to when it comes to resolving dependencies?","updated_at":"2020-08-25T13:02:47Z","created_at":"2020-08-25T13:02:47Z","creator_user_login":"JamesRamm"}
{"number":13991,"comment_id":"683109390","body":"I encountered the 'hooks' problem in a setting involving Webpack and Electron. My project has a dependency on a module A that is itself bundled by Webpack (and that I authored myself). I externalised React from A (declaring it to be a commonjs2 module). This excludes the React files from the library bundle.\r\n\r\nMy main program, running in the Electron Renderer process, uses React as well. I had Webpack include React into the bundle (no special configuration).\r\n\r\nHowever, this produced the 'hooks' problem because of two instances of React in the runtime environment.\r\n\r\nThis is caused by these facts:\r\n\r\n- module A 'requires' React and this is resolved by the module system of Electron. So Electron takes React from node_modules;\r\n- the main program relies on the Webpack runtime to 'load' React from the bundle itself.\r\n- both Electron and the Webpack runtime have their own module cache...\r\n\r\nMy solution was to externalise React from the main program as well. This way, both the main program and module A get their React from Electron - a single instance in memory.\r\n\r\nI tried any number of aliases, but that does not solve the problem as an alias only instructs Webpack where to find the module code. It does nothing with respect to the problem of multiple module caches!\r\n\r\nIf you run into this problem with a module that you cannot control, find out if and how React is externalised. If it is not externalised, I think you cannot solve this problem in the context of Electron. If it is just externalised as a global, put React into your .html file and make your main program depend on that as well.\r\n","updated_at":"2020-08-28T19:36:15Z","created_at":"2020-08-28T19:36:15Z","creator_user_login":"joopringelberg"}
{"number":13991,"comment_id":"686912853","body":"Finally...\r\n\r\n```\r\n//webpack.config.js\r\n\r\nmodule.exports = {\r\n  ...\r\n  externals: {\r\n      react: 'react',\r\n  },\r\n}\r\n```\r\n","updated_at":"2020-09-04T05:16:40Z","created_at":"2020-09-04T05:16:40Z","creator_user_login":"Naterra"}
{"number":13991,"comment_id":"689740791","body":"Vue3 has the same problem\r\n\r\n","updated_at":"2020-09-09T18:32:32Z","created_at":"2020-09-09T18:32:32Z","creator_user_login":"frei-x"}
{"number":13991,"comment_id":"692400501","body":"I solved this issue putting `react` and `react-dom` as `peerDependencies` in my package.json of my external library, which uses React.\r\n\r\n```bash\r\n  \"peerDependencies\": {\r\n    \"react\": \"^16.13.1\",\r\n    \"react-dom\": \"^16.13.1\"\r\n  },\r\n```","updated_at":"2020-09-15T01:11:24Z","created_at":"2020-09-15T01:11:24Z","creator_user_login":"Sergioamjr"}
{"number":13991,"comment_id":"692658867","body":"> I guess I may have missed it somewhere else in the docs, but in case not: it would have saved me a lot of time if a bit of usage context (or just a ES module setup) was included/mentioned/linked to. :) Especially since the direct `export default Example` version works without hooks.\r\n\r\nHi @espen42 ,\r\nI was really hoping your solution will help us. We literally tried _everything_, just like you mentioned. \r\n\r\nUnfortunately, your solution does not seem to help either. I wonder maybe I just missed something?\r\n\r\nSo, in a package (I'll call it @bla/bla), we have the `index.js` that has a component with hooks, like \r\n```\r\nfunction Bla = ({...props]) => {\r\nconst [bla, setBla] = useState(false);\r\nreturn bla ? <div {...props} /> : 'no luck';\r\n}\r\n```\r\nWe compile the package using `npx babel`.\r\n\r\nWe link this package with `npm link` and then include it in the project like `npm link @bla/bla`.\r\nBoth the package and the project use the same version of React and react-dom.\r\n\r\nIn the project, we include the package like this:\r\n```\r\nimport Bla from `@bla/bla`\r\n\r\nconst RenderBla = ({...props}) => <Bla {...props} />\r\n\r\nexport default RenderBla\r\n```\r\nUnfortunately, the error still persists.\r\n`Invalid hook call. Hooks can only be called inside of the body of a function component.`\r\n\r\nWhat can we be missing?","updated_at":"2020-09-15T11:38:10Z","created_at":"2020-09-15T11:38:10Z","creator_user_login":"afkatja"}
{"number":13991,"comment_id":"694799841","body":"> ```json\r\n> \"externals\": {\r\n>   \"react\": \"react\",\r\n>   \"react-dom\": \"react-dom\"\r\n> }\r\n> ```\r\n\r\nThis one fixed the issue for me, thank you so much man ❤️","updated_at":"2020-09-18T10:53:19Z","created_at":"2020-09-18T10:53:19Z","creator_user_login":"brenoprata10"}
{"number":13991,"comment_id":"694819334","body":"Field Customizer error when accessed via external link (Sharepoint Online)\r\n\r\nA spfx field customizer extension with a few fabric ui component, when accessed via link, getting one of  these error depending on the fabricUI version: \r\nhttps://reactjs.org/docs/error-decoder.html/?invariant=321,\r\nhttps://reactjs.org/docs/error-decoder.html/?invariant=290&args[]=A.%20General\r\n\r\n**when the page is refreshed,  everything works properly.**\r\nI haven't used any React Hooks in the code, only React Components.\r\nHaven't used any refs either.\r\n\r\nI think it might be because of Fabric ui cause when all fabric ui components are removed, no error occurs. \r\n\r\nHave tried different versions of fabic ui, 6.189.2, 6.214.0 and 7.114.1 and also tried replacing all fabric-ui references with fluent ui, still issue persists \r\n\r\n\r\nchecked the react versions, here is the output\r\nnpm ls react\r\n+-- @microsoft/sp-webpart-workbench@1.9.1\r\n| +-- @microsoft/office-ui-fabric-react-bundle@1.9.1\r\n| | `-- react@16.8.5  deduped\r\n| +-- @microsoft/sp-loader@1.9.1\r\n| | `-- react@16.8.5  deduped\r\n| +-- @microsoft/sp-property-pane@1.9.1\r\n| | `-- react@16.8.5  deduped\r\n| `-- react@16.8.5  deduped\r\n`-- react@16.8.5","updated_at":"2020-09-18T11:41:20Z","created_at":"2020-09-18T11:41:20Z","creator_user_login":"aj2rck"}
{"number":13991,"comment_id":"698991369","body":"Hi all,\r\ni also stumbled upon this annoying error. In my case this was also a miss-configuration of my webpack build in the end. But none of the suggested things in this issue has worked for me. So i want to share my experience as well.\r\n\r\nMy page includes multiple entry points, and the SplitChunkPlugin can create runtime chunks. Because we are using the rails-webpacker gem it was configured by default to create a runtime for each chunk. But webpack does something similar by default, it includes the runtime inside the chunks.\r\n\r\nOf course the documentation warns about this case, but you have to find it. Setting the `optimization.runtimeChunk` to `single` will create a seperated runtime. This will prevent your build instantiating multiple copies of react, when using react from multiple entry points. \r\n\r\nSee https://webpack.js.org/configuration/optimization/#optimizationruntimechunk","updated_at":"2020-09-25T15:26:02Z","created_at":"2020-09-25T15:21:35Z","creator_user_login":"dino115"}
{"number":13991,"comment_id":"705465181","body":"Hey everyone,\r\nI have the problem that I want to use an external lib that comes from a CDN and is included with a `<script>` tag, so there is not much I can do with the code itself. The lib uses react and hooks, so I get the\r\n`3. You might have more than one copy of React in the same app ` error.\r\nSadly there is no NPM package for the library: https://github.com/Anyline/anyline-ocr-anylinejs-module\r\nIm using CRA and the project is not ejected.\r\n\r\nCreated a little example [Sandbox](https://codesandbox.io/s/stoic-hermann-dtw74).","updated_at":"2020-10-08T11:45:48Z","created_at":"2020-10-08T09:58:48Z","creator_user_login":"TomlDev"}
{"number":13991,"comment_id":"713254725","body":"> It throws that same error since the other package is also using hooks but with its own React. I had to publish my package to NPM and then import it directly from NPM. That\r\n\r\nI come into this issue recently and wonder why.\r\nI solved it by upload it to GitLab and install it by address.\r\nWhat's the difference between package and local package?","updated_at":"2020-10-21T02:37:23Z","created_at":"2020-10-21T02:35:52Z","creator_user_login":"catsheue"}
{"number":13991,"comment_id":"713525492","body":"I have found that I get the \"Invalid hook call.\" when I dynamically load the Component that is calling the hook.\r\n\r\n[Code Sandbox](https://codesandbox.io/s/trusting-pine-xu830?file=/src/App.spec.js)\r\n\r\nThe test that loads \"App\" statically passes. The two tests that load it dynamically (one using `require`, one using `import` as a function) both give the error.\r\n\r\nWhy I even care: I'm trying to write some tests where I am using jest.doMock to mock some things out and then dynamically loading the module I want to test, [as per the documentation](https://jestjs.io/docs/en/jest-object#jestdomockmodulename-factory-options). I'm using doMock instead of Mock because I need to be able to mock things differently in different functions. You'll notice that the error occurs without any mocking involved, though.","updated_at":"2020-10-21T12:14:10Z","created_at":"2020-10-21T12:14:10Z","creator_user_login":"miket01"}
{"number":13991,"comment_id":"718083375","body":"> > It throws that same error since the other package is also using hooks but with its own React. I had to publish my package to NPM and then import it directly from NPM. That\r\n> \r\n> I come into this issue recently and wonder why.\r\n> I solved it by upload it to GitLab and install it by address.\r\n> What's the difference between package and local package?\r\n\r\n@catsheue was `React1 === React2` `true` for you?\r\ni havent had mine published in npm yet wanted to know if thats the cause\r\n\r\nmine seems to be `React1 === React2 = true` and havent found solution why this is happening when im importing my react library into a project","updated_at":"2020-10-28T17:16:05Z","created_at":"2020-10-28T17:16:05Z","creator_user_login":"jyoon006"}
{"number":13991,"comment_id":"718693370","body":"Had this same problem using `yarn link` to test a local library. My mistake was listing `react` and `react-dom` as dev dependencies not peer.\r\n\r\nSo I should have done `yarn add --peer react react-dom`. **Finally, because I already made the mistake in committing React as a dev dependency, I needed to purge node_modules from my library.** `rm -rf node_modules; yarn` fixed the problem for me.","updated_at":"2020-10-29T11:30:44Z","created_at":"2020-10-29T11:30:22Z","creator_user_login":"zaydek"}
{"number":13991,"comment_id":"726784276","body":"I too faced this issue. In my case it was caused by a duplicate React from Storybook (v6.0.28). I believe you can find more info [here](https://github.com/storybookjs/storybook/issues/11904).\r\n\r\nI uninstalled Storybook dependencies, deleted `node_modules` and run `yarn install` again. This worked for me. I hope it helps someone avoid the tears and wasted hours on this. ","updated_at":"2020-11-13T14:08:23Z","created_at":"2020-11-13T14:08:23Z","creator_user_login":"giorgosera"}
{"number":13991,"comment_id":"726826063","body":"This workaround works for me as well. I'm using Firebase Functions and have a `node_modules` folder in both my project root and under the `/functions/` directory. If I delete `/functions/node_modules`, my app runs fine. This is a workaround, but it is fairly annoying. Has anyone found a workaround that allows for both `node_modules` folders to exist at the same time?","updated_at":"2020-11-13T15:24:55Z","created_at":"2020-11-13T15:24:55Z","creator_user_login":"schlosser"}
{"number":13991,"comment_id":"728867826","body":"For posterity and anyone who might be facing this problem when using mdbootstrap in an app created with `create-react-app`.\r\n\r\nI saw this error when adding various mdbootstrap components such as buttons and card images. The console output added to index.js for troubleshooting as per React support article returned `true` on comparing versions. So I had to try something else.\r\n\r\nThe fix was to run an `npm dedupe`\r\n\r\n```\r\nnpm ls react\r\n\r\n+-- mdbreact@4.27.0\r\n| `-- react@16.14.0\r\n`-- react@16.14.0\r\n\r\nnpm dedupe\r\n\r\nnpm ls react\r\n\r\n+-- mdbreact@4.27.0\r\n| `-- react@16.14.0  deduped\r\n`-- react@16.14.0\r\n```\r\n\r\nAfter this, all components worked just fine. Happy days.","updated_at":"2020-11-17T11:31:26Z","created_at":"2020-11-17T11:31:26Z","creator_user_login":"pnm563"}
{"number":13991,"comment_id":"729934299","body":"> I have found that I get the \"Invalid hook call.\" when I dynamically load the Component that is calling the hook.\r\n> \r\n> [Code Sandbox](https://codesandbox.io/s/trusting-pine-xu830?file=/src/App.spec.js)\r\n> \r\n> The test that loads \"App\" statically passes. The two tests that load it dynamically (one using `require`, one using `import` as a function) both give the error.\r\n> \r\n> Why I even care: I'm trying to write some tests where I am using jest.doMock to mock some things out and then dynamically loading the module I want to test, [as per the documentation](https://jestjs.io/docs/en/jest-object#jestdomockmodulename-factory-options). I'm using doMock instead of Mock because I need to be able to mock things differently in different functions. You'll notice that the error occurs without any mocking involved, though.\r\n\r\n@miket01 Exactly what I try to do (but w/o mocking). Did you found any solution?","updated_at":"2020-11-19T11:57:14Z","created_at":"2020-11-18T20:27:31Z","creator_user_login":"YannickFricke"}
{"number":13991,"comment_id":"732983865","body":"Encountered this doing:\r\n\r\n```js\r\nfunction HeadedSection (props) {\r\n   if (!ReactDOMServer.renderToStaticMarkup(props.children))\r\n        return null;\r\n\r\n    const [hidden, set_hidden] = useState(props.hidden);\r\n```\r\n\r\nFixed by calling `useState` first:\r\n\r\n```js\r\nfunction HeadedSection (props) {\r\n    const [hidden, set_hidden] = useState(props.hidden);\r\n\r\n    if (!ReactDOMServer.renderToStaticMarkup(props.children))\r\n        return null;\r\n```\r\n","updated_at":"2020-11-24T13:49:01Z","created_at":"2020-11-24T13:49:01Z","creator_user_login":"mwri"}
{"number":13991,"comment_id":"734640853","body":"I'm still getting this error after setting it aside for many months. \r\n\r\nI use zero hooks in my program. There is exactly one copy of `react` and one copy of `react-dom` and they are the same version. There are no links.\r\n\r\nIt had partly worked before I recently tried to update a few packages to fix security problems. I'm using next.js and the fix was to exclude some subcomponents from the top level component by wrapping them in `{typeof window !== 'undefined'` but now that doesn't work either.\r\n\r\n```\r\n[18:50:42] (master) questions\r\n// ♥ npm ls react\r\nmyapp@1.0.0 /Users/Dan/work/b/questions\r\n└── react@16.14.0\r\n\r\n[22:46:34] (master) questions\r\n// ♥ npm ls react-dom\r\nmyapp@1.0.0 /Users/Dan/work/b/questions\r\n└── react-dom@16.14.0\r\n\r\n[22:46:55] (master) questions\r\n// ♥ npm dedupe\r\nremoved 55 packages, moved 46 packages and audited 1712 packages in 65.449s\r\n\r\n33 packages are looking for funding\r\n  run `npm fund` for details\r\n\r\nfound 26 vulnerabilities (15 low, 3 moderate, 8 high)\r\n  run `npm audit fix` to fix them, or `npm audit` for details\r\n```\r\n\r\n[The error](https://github.com/facebook/react/blob/ddd1faa1972b614dfbfae205f2aa4a6c0b39a759/packages/react/src/ReactHooks.js#L26) is thrown because `ReactCurrentDispatcher.current === null` but I can't find anywhere in the `/node_modules/react/cjs/react.development.js` where this is set to something. \r\n\r\nCan someone tell me where `ReactCurrentDispatcher.current` ought to be getting a value?\r\nhttps://github.com/facebook/react/search?p=2&q=%22ReactCurrentDispatcher.current+%3D%22&type=code\r\n\r\nThis looks like a candidate, but this code is not contained in my `react-development.js`. Should it be? \r\n```\r\n    const prevPartialRenderer = currentPartialRenderer;\r\n    setCurrentPartialRenderer(this);\r\n    const prevDispatcher = ReactCurrentDispatcher.current;\r\n    ReactCurrentDispatcher.current = Dispatcher;\r\n```\r\nhttps://github.com/facebook/react/blob/702fad4b1b48ac8f626ed3f35e8f86f5ea728084/packages/react-dom/src/server/ReactPartialRenderer.js#L859\r\n\r\nI'm getting this error with server-side rendering by `next.js` and this code is in the react source under `react-dom/server`. How can I determine if `/node_modules/react/cjs/react-development.js` is correct?\r\n\r\nUPDATE: This was the problem. I had edited `webpack.config.externals` in my `next.config.js` file\r\nhttps://github.com/vercel/next.js/issues/17592#issuecomment-712443172","updated_at":"2020-11-28T20:56:14Z","created_at":"2020-11-27T04:41:06Z","creator_user_login":"dancancro"}
{"number":13991,"comment_id":"735548757","body":"My App throws a massive error (invalid hook call) any time i try to integrate material UI into it. I'm completely new to React so i need help.","updated_at":"2020-11-30T05:10:16Z","created_at":"2020-11-30T05:10:16Z","creator_user_login":"Ksound22"}
{"number":13991,"comment_id":"735774948","body":"@YannickFricke It turned out that I didn't need to load the module dynamically to do the mocking that I needed, so I don't really have a solution beyond try _not_ doing it(?). Sorry!","updated_at":"2020-11-30T13:08:05Z","created_at":"2020-11-30T13:08:05Z","creator_user_login":"miket01"}
{"number":13991,"comment_id":"735945718","body":"My fix:\r\n I was using npm link between an app and a module I was actively working on, \r\n and I had to fix it by linking the app's react and react-dom to the module, \r\n then linking the module to the app:\r\n\r\n## in app:\r\n```\r\npushd node_modules/react && npm link; popd\r\npushd node_modules/react-dom && npm link; popd\r\n```\r\n## in module:\r\n```\r\nnpm link  # this creates a global link for module.\r\nnpm link react && npm link react-dom # link app's react and react-dom, so they're in sync.\r\n```\r\n## in app:\r\n```\r\nnpm link [module-name]  # this replace the module lib in node_modules with a link to the module's local copy.\r\n```","updated_at":"2020-11-30T18:01:47Z","created_at":"2020-11-30T17:59:17Z","creator_user_login":"WesleyRen"}
{"number":13991,"comment_id":"751841980","body":"I finally figured it out, if you are using **react-router-dom**, use `<Route component={component}>`to render instead of `<Route render={component}>` render only takes functions not components `<Route render={()=><Component/>}`  , it is a beginner mistake however the solution is not well documented \r\n","updated_at":"2020-12-28T19:44:46Z","created_at":"2020-12-28T19:44:16Z","creator_user_login":"pierre-campoverde"}
{"number":13991,"comment_id":"753714092","body":"> > ```json\r\n> > \"externals\": {\r\n> >   \"react\": \"react\",\r\n> >   \"react-dom\": \"react-dom\"\r\n> > }\r\n> > ```\r\n> \r\n> This one fixed the issue for me, thank you so much man ❤️\r\n\r\nme  too","updated_at":"2021-01-04T01:33:03Z","created_at":"2021-01-04T01:33:03Z","creator_user_login":"dengnan123"}
{"number":13991,"comment_id":"756212757","body":"Stop using npm link and use [yalc](https://www.npmjs.com/package/yalc) if you want to save yourself hours of misery","updated_at":"2021-01-07T21:54:01Z","created_at":"2021-01-07T16:10:04Z","creator_user_login":"wichopy"}
{"number":13991,"comment_id":"756437676","body":"we had two versions of React being installed in a monorepo. needed to use metro's `blacklistRE` field and alias `react` to root `node_modules`","updated_at":"2021-01-07T22:58:19Z","created_at":"2021-01-07T22:58:19Z","creator_user_login":"anthonychung14"}
{"number":13991,"comment_id":"758760934","body":"Hi, I had this bug while trying to export a functional component upon declaring it.\r\n```\r\nexport default Map = () => {...}\r\n```\r\nwould fail, while:\r\n```\r\nconst Map = () => {...}\r\n```\r\nthen:\r\n```\r\nexport default Map;\r\n```\r\nwould work like a charm!\r\n\r\nI don't know if there is any general provision against exporting a component upon declaring it, because it works fo me in other situations. If so, I would love to learn about the reason.\r\n\r\nI'm using:\r\n    \"react\": \"16.13.1\",\r\n    \"react-native\": \"0.63.3\",","updated_at":"2021-01-13T10:19:09Z","created_at":"2021-01-12T16:07:46Z","creator_user_login":"arikpre"}
{"number":13991,"comment_id":"763087121","body":"The only real solution for me is to use React as an external in webpack, then to load the React delivery in the root html page.\r\nLike this react will 'ot be bundled in the app and all the code will use the same instance","updated_at":"2021-01-19T19:49:18Z","created_at":"2021-01-19T19:49:18Z","creator_user_login":"paztis"}
{"number":13991,"comment_id":"764606600","body":"I tried everything from here and from other places as well, but no luck. I still get the \"invalid hook call\" error. \r\n\r\nI [raised my question on Stackoverflow](https://stackoverflow.com/questions/65825992/react-components-library-and-react-hooks-throws-invalid-hook-call-error) with repo links, and details, but for some reason, people started to downgrade it. \r\n\r\nIf anyone here could help me, I'd really appreciate it!\r\n","updated_at":"2021-01-21T12:22:14Z","created_at":"2021-01-21T12:21:47Z","creator_user_login":"SasSam"}
{"number":13991,"comment_id":"764894678","body":"I have had this issue too, so posting my situation/solution in case it helps others. The issue I encountered came in a custom React Library I was building, but was pulling into a sample application in order to test in the browser easily. When I tried to add a custom hook, I kept getting the \"Two versions of React\" error...which is probably what is bringing anyone to this Issue.\r\n\r\nIn order to connect the sample app with the package, I had `nameofpackage: file:..` in my package.json. This allows npm to pull in the package into the node_modules of the application. I am using webpack to create the `dist/` files. And I kept getting that \"two versions of react\" error. I found that webpack has a property you can define `externals` that tells webpack to NOT bundle whatever you define in your dist. So I added React and React-dom, it seemed to work, but ran into issues with production and development....and testing.\r\n\r\nAfter trying every combination of things, it seemed nothing would work for Dev, Prod and Testing. So in the package.json \"scripts\" block, I had \r\n`\"test\":  \"karma start --single-run --browsers Chrome\",` I ended up with this:\r\n`\"test\": \"NODE_ENV=testing karma start --single-run --browsers Chrome\",`\r\n\r\nBy adding that `NODE_ENV=testing` I can then conditionally set the `externals` in the webpack file.\r\n\r\nThe problem was the Production and Development builds need to specifically NOT bundle React and React-dom, but since in the testing env, there are no other copies of react/react-dom, you need to allow them.\r\n\r\nI am not saying this is the best solution, but I think it describes the situation I experienced, and at least allowed me to get something working so that I can work on something else.","updated_at":"2021-01-21T19:48:42Z","created_at":"2021-01-21T19:48:42Z","creator_user_login":"ahuggins"}
{"number":13991,"comment_id":"766633581","body":"It took a few hours of my life so I'm sharing my setup: **lerna** monorepo + **peer dependencies**.\r\n\r\n### Initial state\r\n\r\n```json\r\n// ./packages/aaa/package.json\r\n{\r\n    \"name\": \"@company/aaa\",\r\n    \"version\": \"1.0.0\",\r\n    \"peerDependencies\": {\r\n        \"react\": \"*\",\r\n        \"react-dom\": \"*\"\r\n    }\r\n}\r\n\r\n// ./packages/bbb/package.json\r\n{\r\n    \"name\": \"@company/bbb\",\r\n    \"version\": \"1.0.0\",\r\n    \"dependencies\": {\r\n        \"@company/aaa\": \"^1.0.0\",\r\n        \"react\": \"^17.0.0\",\r\n        \"react-dom\": \"^17.0.0\"\r\n    },\r\n    \"devDependencies\": {\r\n        \"@types/react\": \"^17.0.0\",\r\n        \"@types/react-dom\": \"^17.0.0\"\r\n    }\r\n}\r\n```\r\n\r\nSo this gave me 2 instances of React in `@company/bbb` package, despite having properly configured `externals` in webpack config of `@company/aaa` package.\r\n\r\nThe solution that worked for me was to move `react` & `react-dom` to `dependencies` (works in `devDependencies` too, but I'm not publishing the `@company/aaa` package, so maybe it's better to put it in dependencies) in root `package.json` (and `@types/react` & `@types/react-dom` to `devDependencies` in root `package.json`) :man_shrugging:\r\n\r\n### Final state\r\n\r\n```json\r\n// ./packages/aaa/package.json\r\n{\r\n    \"name\": \"@company/aaa\",\r\n    \"version\": \"1.0.0\",\r\n    \"peerDependencies\": {\r\n        \"react\": \"*\",\r\n        \"react-dom\": \"*\"\r\n    }\r\n}\r\n\r\n// ./packages/bbb/package.json\r\n{\r\n    \"name\": \"@company/bbb\",\r\n    \"version\": \"1.0.0\",\r\n    \"dependencies\": {\r\n        \"@company/aaa\": \"^1.0.0\"\r\n    }\r\n}\r\n\r\n// ./package.json\r\n{\r\n    \"name\": \"company\",\r\n    \"version\": \"1.0.0\",\r\n    \"dependencies\": {\r\n        \"react\": \"^17.0.0\",\r\n        \"react-dom\": \"^17.0.0\"\r\n    },\r\n    \"devDependencies\": {\r\n        \"@types/react\": \"^17.0.0\",\r\n        \"@types/react-dom\": \"^17.0.0\"\r\n    }\r\n}\r\n```\r\n\r\n","updated_at":"2021-01-25T08:13:32Z","created_at":"2021-01-25T08:13:32Z","creator_user_login":"kamilmielnik"}
{"number":13991,"comment_id":"767382958","body":"you can move react and react-dom from dependencies to devDependencies in your lib，this can ensure react consistency in project\r\n```\r\n// package.json\r\n{\r\n  \"dependencies\": {},\r\n  \"devDependencies\": {\r\n    \"@types/react\": \"^17.0.0\",\r\n    \"@types/react-dom\": \"^17.0.0\"\r\n    \"react\": \"^17.0.0\",\r\n    \"react-dom\": \"^17.0.0\",\r\n  }\r\n}\r\n\r\n```","updated_at":"2021-01-26T08:26:58Z","created_at":"2021-01-26T08:25:05Z","creator_user_login":"Statfine"}
{"number":13991,"comment_id":"767402867","body":"Ok I think I find the problem- my env is jest + react native testing library + typescript, I found out that this problem occurs when `resetModules: true` in jest config. removing this flag solved my problem.\r\n\r\nupdate: here is a working fix without removing the flag: https://github.com/facebook/jest/issues/8987#issuecomment-584898030","updated_at":"2021-02-18T09:35:07Z","created_at":"2021-01-26T09:02:53Z","creator_user_login":"Niryo"}
{"number":13991,"comment_id":"767821518","body":"**I'm getting this error :**\r\nError: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\r\n1. You might have mismatching versions of React and the renderer (such as React DOM)\r\n2. You might be breaking the Rules of Hooks\r\n3. You might have more than one copy of React in the same app\r\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\r\n\r\n**Can anyone suggest me how to solve this issue.**\r\n\r\n**Here is my code:**\r\n\r\n```javascript\r\nimport React, { Fragment, useEffect, useContext } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport Repos from '../repos/Repos';\r\nimport { Link } from 'react-router-dom';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst User = ({ match }) => {\r\n    const githubContext = useContext(GithubContext);\r\n\r\n    const { getUser,user,loading,repos,getUserRepos } = githubContext;\r\n\r\n    useEffect(()=>{\r\n        getUser(match.params.login) // to get it from url\r\n        getUserRepos(match.params.login)\r\n        // eslint-disable-next-line             \r\n    },[]);\r\n\r\n        const {\r\n            name,\r\n            avatar_url,\r\n            location,\r\n            bio,\r\n            blog,\r\n            login,\r\n            html_url,\r\n            followers,\r\n            following,\r\n            public_repos,\r\n            public_gists,\r\n            company,\r\n            website,\r\n            hirable\r\n        } = user;\r\n \r\n        if(loading) return <Spinner />\r\n\r\n        return (\r\n            <Fragment>\r\n              <Link to='/' className='btn btn-light'>Back to Search</Link>\r\n              Hirable: {' '}\r\n              {hirable ? <i className='fas fa-check text-success' />:<i className='fas fa-times-circle text-danger' />}\r\n\r\n              <div className='card grid-2' >\r\n                  <div className='all-center'>\r\n                     <img src={avatar_url} className='round-img' alt='' style={{width: '150px'}} />\r\n                     <h1>{name}</h1>\r\n                     <p>Loaction: {location}</p>\r\n                  </div>\r\n                  <div>\r\n                      {bio && <Fragment>\r\n                          <h3>Bio</h3>\r\n                          <p>{bio}</p>\r\n                          </Fragment>}\r\n                       <a href={html_url} className='btn btn-dark my-1'>Visit Github Profile</a>\r\n                       <ul>\r\n                           <li>\r\n                               {login && <Fragment>\r\n                                    <strong>Username: {login}</strong>\r\n                                   </Fragment>}\r\n                           </li>\r\n                           <li>\r\n                               {company && <Fragment>\r\n                                    <strong>Company: {company}</strong>\r\n                                   </Fragment>}\r\n                           </li>\r\n                           <li>\r\n                               {website && <Fragment>\r\n                                    <strong>Website: {website}</strong>\r\n                                   </Fragment>}\r\n                           </li>\r\n                       </ul>\r\n                  </div>\r\n              </div>\r\n              <div className='card text-center'>\r\n                 <div className='badge badge-primary'>Followers: {followers}</div>\r\n                 <div className='badge badge-success'>Following: {following}</div>\r\n                 <div className='badge badge-light'>Public Repos: {public_repos}</div>\r\n                 <div className='badge badge-dark'>Public Gists: {public_gists}</div>\r\n              </div>\r\n              <Repos repos={repos} />\r\n            </Fragment>\r\n\r\n        )\r\n}\r\n\r\nexport default User;\r\n```","updated_at":"2021-01-26T20:54:43Z","created_at":"2021-01-26T20:54:43Z","creator_user_login":"shruti1421"}
{"number":13991,"comment_id":"768395924","body":"Hey guys, I am experiencing this issue and can't figure out how to solve it.\r\n\r\nI asked for help on [StackOverflow](https://stackoverflow.com/questions/65922344/how-to-fix-react-invalid-hook-call-error-when-importing-npm-linked-component) but perhaps here is more suited.\r\n\r\nThis issue is taking a toll on me (and apparently, many others). Thanks for your help! \r\n\r\n# How to fix React “Invalid hook call” error when importing npm link(ed) component that depends on styled-components?\r\n\r\nFirst, I added `react`, `react-dom` and `styled-components` to `peerDependencies` of npm link(ed) component (and removed these dependencies from `dependencies` and `devDependencies`).\r\n\r\nSecond, I used the [official](https://reactjs.org/warnings/invalid-hook-call-warning.html#duplicate-react) workaround to use `npm link` (which, in theory, should solve this issue).\r\n\r\n> This problem can also come up when you use `npm link` or an equivalent. In that case, your bundler might “see” two Reacts — one in application folder and one in your library folder. Assuming `myapp` and `mylib` are sibling folders, one possible fix is to run `npm link ../myapp/node_modules/react` from `mylib`. This should make the library use the application’s React copy.\r\n\r\nI use the following scripts to link and unlink peer dependencies (I run them from directory of npm link(ed) component).\r\n\r\n```console\r\n$ cat .env\r\nPEER_DEPS_NODE_MODULES_PATH=/Users/sunknudsen/Code/sunknudsen/sunknudsen-website/node_modules\r\n\r\n$ cat link-peer-deps.sh\r\n#!/bin/sh\r\n\r\nif [ -f .env ]\r\nthen\r\n  export $(cat .env | sed 's/#.*//g' | xargs)\r\nfi\r\n\r\nnpm link\r\n\r\nnpm link \\\r\n  $PEER_DEPS_NODE_MODULES_PATH/react \\\r\n  $PEER_DEPS_NODE_MODULES_PATH/react-dom \\\r\n  $PEER_DEPS_NODE_MODULES_PATH/styled-components\r\n\r\ncd $PEER_DEPS_NODE_MODULES_PATH\r\n\r\nnpm link @sunknudsen/react-cms\r\n\r\nprintf \"%s\\n\" \"Done\"\r\n\r\n$ cat unlink-peer-deps.sh\r\n#!/bin/sh\r\n\r\nif [ -f .env ]\r\nthen\r\n  export $(cat .env | sed 's/#.*//g' | xargs)\r\nfi\r\n\r\nnpm uninstall\r\n\r\nnpm uninstall -g react react-dom styled-components\r\n\r\npath=\"$PEER_DEPS_NODE_MODULES_PATH/@sunknudsen/react-cms\"\r\n\r\nif [[ -L \"$path\" ]]; then\r\n  rm \"$path\"\r\nfi\r\n\r\nprintf \"%s\\n\" \"Done\"\r\n```\r\n\r\nThe project that depends on npm link(ed) component does not appear to have `react`, `react-dom` or `styled-components` conflicts.\r\n\r\n```console\r\n$ npm ls react            \r\nsunknudsen-website@0.0.1 /Users/sunknudsen/Code/sunknudsen/sunknudsen-website\r\n└── react@17.0.1\r\n\r\n$ npm ls react-dom\r\nsunknudsen-website@0.0.1 /Users/sunknudsen/Code/sunknudsen/sunknudsen-website\r\n└── react-dom@17.0.1\r\n\r\n$ npm ls styled-components\r\nsunknudsen-website@0.0.1 /Users/sunknudsen/Code/sunknudsen/sunknudsen-website\r\n└── styled-components@5.2.1\r\n```\r\n\r\nWhat am I missing? This issue is driving me bananas!","updated_at":"2021-01-27T16:14:07Z","created_at":"2021-01-27T16:14:07Z","creator_user_login":"sunknudsen"}
{"number":13991,"comment_id":"768492195","body":"Hey @gaearon, sorry for the shout-out.\r\n\r\nWould you happen to have a minute to check the [issue](https://github.com/facebook/react/issues/13991#issuecomment-768395924) above?\r\n\r\nThe issue is only present when using `npm link`. I tried everything I could find in the React docs and a dozen StackOverflow questions (feeling desperate).\r\n\r\nCopying a package to `node_modules` instead of using symlinks (`npm link`) works flawlessly. Before reinventing the wheel (and developing a tool to automate watching and copying package files to a parent project's `node_modules` folder), I would like to make sure I am not missing something and `npm link` is simply broken and should be avoided in the context of React.\r\n\r\nI could really use some guidance.\r\n\r\n🤞","updated_at":"2021-01-27T18:42:49Z","created_at":"2021-01-27T18:42:49Z","creator_user_login":"sunknudsen"}
{"number":13991,"comment_id":"768548435","body":"Stop using links and use monorepos (yarn, Leena, npm,...) Only monorepo are\nable to correctly aggregate common dependencies and hoist them\n\nLe mer. 27 janv. 2021 à 19:43, Sun Knudsen <notifications@github.com> a\nécrit :\n\n> Hey @gaearon <https://github.com/gaearon>, sorry for the shout-out.\n>\n> Would you happen to have a minute to check the issue\n> <https://github.com/facebook/react/issues/13991#issuecomment-768395924>\n> above?\n>\n> The issue is only present when using npm link. I tried everything I could\n> find in the React docs and a dozen StackOverflow questions (feeling\n> desperate).\n>\n> Copying a package to node_modules instead of using symlinks (npm link)\n> works flawlessly. Before reinventing the wheel (and developing a tool to\n> automate watching and copying package files to a parent project's\n> node_modules folder), I would like to make sure I am not missing\n> something and npm link is simply broken and should be avoided in the\n> context of React.\n>\n> I could really use some guidance.\n>\n> 🤞\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/facebook/react/issues/13991#issuecomment-768492195>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ABIKMMINFKMLR7KDO6DOT7DS4BNEBANCNFSM4F7UTLDA>\n> .\n>\n","updated_at":"2021-01-27T20:14:10Z","created_at":"2021-01-27T20:14:10Z","creator_user_login":"paztis"}
{"number":13991,"comment_id":"769301664","body":"Hey guys, I got to work on ~~[npm-hardlink](https://www.npmjs.com/package/npm-hardlink)~~ [npm-sync](https://www.npmjs.com/package/npm-sync) (in **beta**, use at your own risks), an alternative to `npm link` that uses hard links fixing the issues discussed here.\r\n\r\nI am  missing one piece of the puzzle. **How can we enable live reloads when hard linked files in `node_modules/hard-linked-package-name-goes-here` change?**.\r\n\r\nThe packages are hard linked in `node_modules` folder... I guess that folder is excluded by default (wasn't able to figure out where).\r\n\r\nCurious, how does `react-scripts` listen for changes of packages that are npm link(ed)?\r\n\r\nAnother way of helping my project is to upvote https://stackoverflow.com/q/65940110/4579271, https://stackoverflow.com/q/65922344/4579271 and https://stackoverflow.com/q/65944182/4579271 on StackOverflow.\r\n\r\n## Status update 1: it appears changes in `node_modules` are watched by default, but [inconsistently](https://github.com/paulmillr/chokidar/issues/1071) on macOS (perhaps on other operating systems too). According to some experiments, hard linked packages in `node_modules` appear to never trigger watch events.\r\n\r\n##  Status update 2: given hard links are not watched by chokidar (might actually be related to how hard links work vs a bug), I deprecated [npm-hardlink](https://www.npmjs.com/package/npm-hardlink) in favor of [npm-sync](https://www.npmjs.com/package/npm-sync).\r\n","updated_at":"2021-01-30T17:42:32Z","created_at":"2021-01-28T18:57:24Z","creator_user_login":"sunknudsen"}
{"number":13991,"comment_id":"769998263","body":"We would like to import a React component as a standalone module in a page that is served by react-rails and as long as we don't use hooks there is no issue (no error in the console), but as soon as we add a hook (e.g. useState, useEffect) we get the \r\n```\r\nHooks can only be called inside the body of a function component.\r\n```\r\nerror. In the bundle there is no React since we're using it as an external supplied to us by the rails server.\r\nDid someone have a similar setup? Did you find a way to work around this?\r\n\r\nThanks!","updated_at":"2021-01-29T19:18:51Z","created_at":"2021-01-29T19:18:51Z","creator_user_login":"francoissunatori"}
{"number":13991,"comment_id":"771405942","body":"> I had the same issue and I resolved it by adding:\r\n> \r\n> ```\r\n>  alias: {\r\n>         react: path.resolve('./node_modules/react')\r\n>       }\r\n> ```\r\n> \r\n> to `resolve` property in webpack config of my main app.\r\n> \r\n> It's was obviously my mistake of using two copies of React but I agree that it would be great if the error message was better. I think this is maybe similar to: #2402\r\n\r\nIt worked for me too! 🙌","updated_at":"2021-02-02T06:43:01Z","created_at":"2021-02-02T06:43:01Z","creator_user_login":"geetaingle"}
{"number":13991,"comment_id":"777196988","body":"> I finally figured it out, if you are using **react-router-dom**, use `<Route component={component}>`to render instead of `<Route render={component}>` render only takes functions not components `<Route render={()=><Component/>}` , it is a beginner mistake however the solution is not well documented\r\n\r\nThis saved my day, thanks very much.","updated_at":"2021-02-11T04:33:20Z","created_at":"2021-02-11T04:33:20Z","creator_user_login":"sarimarton"}
{"number":13991,"comment_id":"777234751","body":"> > I had the same issue and I resolved it by adding:\r\n> > ```\r\n> >  alias: {\r\n> >         react: path.resolve('./node_modules/react')\r\n> >       }\r\n> > ```\r\n> > \r\n> > \r\n> > to `resolve` property in webpack config of my main app.\r\n> > It's was obviously my mistake of using two copies of React but I agree that it would be great if the error message was better. I think this is maybe similar to: #2402\r\n> \r\n> It worked for me too! 🙌\r\n\r\nCan you show me exactly how to get this done? I like to use Material UI but the error fucks me up all the time.","updated_at":"2021-02-11T06:43:32Z","created_at":"2021-02-11T06:43:32Z","creator_user_login":"Ernest21"}
{"number":13991,"comment_id":"781102130","body":"This error could occur when you import React for example with capital R ```import React from 'React';``` but everywhere else it's with the small *r* ```import React from 'react';```. Two days spent trying to debug everything to spot this bug. Maybe it helps someone :)","updated_at":"2021-02-18T06:54:06Z","created_at":"2021-02-18T06:54:06Z","creator_user_login":"ronar"}
{"number":13991,"comment_id":"783869737","body":"it works for me:\r\n\r\npackage.json\r\n\r\n```\r\n...\r\n},\r\n  \"resolutions\": {\r\n    \"react\": \"17.0.1\",\r\n    \"react-dom\": \"17.0.1\",\r\n    \"**/react\": \"17.0.1\",\r\n    \"**/react-dom\": \"17.0.1\"\r\n  },\r\n  ...\r\n  ```","updated_at":"2021-02-23T04:31:59Z","created_at":"2021-02-23T04:31:59Z","creator_user_login":"tetogomez"}
{"number":13991,"comment_id":"786608007","body":"> > > I had the same issue and I resolved it by adding:\r\n> > > ```\r\n> > >  alias: {\r\n> > >         react: path.resolve('./node_modules/react')\r\n> > >       }\r\n> > > ```\r\n> > > \r\n> > > \r\n> > > to `resolve` property in webpack config of my main app.\r\n> > > It's was obviously my mistake of using two copies of React but I agree that it would be great if the error message was better. I think this is maybe similar to: #2402\r\n> > \r\n> > \r\n> > It worked for me too! raised_hands\r\n> \r\n> Can you show me exactly how to get this done? I like to use Material UI but the error fucks me up all the time.\r\n\r\nI assume you created you're app with `create-react-app`\r\n\r\n**solution1**\r\n\r\nI tried this and it worked.\r\n\r\nFirst you need to eject you're app: go to root of app and run: `yarn eject`\r\nThen you have access to `webpack.config.js` file where you can add the above suggested line in resolve key:\r\n```\r\n    resolve: {\r\n        alias: {\r\n            react: path.resolve('./node_modules/react')\r\n        }\r\n    },\r\n```   \r\nPay attention, this will require you to eject the app. Decide yourself if you should or not do this.\r\n\r\n**solution2**\r\n\r\nI didn't tried this. \r\n\r\nAt the below link is suggested a solution to override webpack config without ejecting, using [craco](https://github.com/gsoft-inc/craco).\r\n\r\nhttps://dev.to/kildareflare/how-to-modify-config-of-create-react-app-without-ejecting-5cbn\r\n\r\n","updated_at":"2021-02-26T12:06:32Z","created_at":"2021-02-26T12:06:32Z","creator_user_login":"ccolonna"}
{"number":13991,"comment_id":"794557843","body":"I am also having an issue with this. I have a components lib project and a nextjs project. I wanna use the lib inside the nextjs project. I am also using `material-ui` in the lib.\r\n\r\nWhat I'm doing is:\r\n1. `npm link` inside the lib project\r\n2. `npm link <lib_name>` inside the nextjs project\r\n\r\n```js\r\n// lib package.json\r\n\"peerDependencies\": {\r\n\t\"react\": \"^17.0.1\",\r\n\t\"react-dom\": \"^17.0.1\",\r\n\t\"@material-ui/core\": \"^4.11.3\",\r\n\t\"@material-ui/icons\": \"^4.11.2\"\r\n}\r\n\r\n// nextjs app\r\n\"dependencies\": {\r\n\t\"next\": \"10.0.8\",\r\n\t\"react\": \"17.0.1\",\r\n\t\"react-dom\": \"17.0.1\"\r\n}\r\n```\r\nIf I add `react` and `react-dom` as `devDependencies` in the lib's `package.json`, I get the `Error: Invalid hook call` error in the nextjs project, however, if I remove those from `devDependencies` I get `Module not found: Can't resolve 'react'`. \r\n\r\nI also tried adding the `alias` to `webpack` (next.config.js), but no success:\r\n```js\r\nconst path = require('path');\r\n\r\nmodule.exports = {\r\n\twebpack: (config, { buildId, dev, isServer, defaultLoaders, webpack }) => {\r\n\t\tconfig.resolve = {\r\n\t\t\talias: {\r\n\t\t\t\t...config.resolve.alias,\r\n\t\t\t\treact: path.resolve('./node_modules/react')\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn config;\r\n\t}\r\n};\r\n```\r\nWith this I now get: `Module not found: Can't resolve 'react-dom'`. If I add `react-dom` to the webpack config\r\n```js\r\n'react-dom': path.resolve('./node_modules/react-dom')\r\n```\r\nI then get `Error: Invalid hook call` error again. Can anyone help me out...\r\n\r\nEDIT: everything works fine if I dont use a `material-ui` component btw...","updated_at":"2021-03-09T22:49:31Z","created_at":"2021-03-09T22:43:18Z","creator_user_login":"Slmii"}
{"number":13991,"comment_id":"803462628","body":"> I had the same issue and I resolved it by adding:\r\n> \r\n> ```\r\n>  alias: {\r\n>         react: path.resolve('./node_modules/react')\r\n>       }\r\n> ```\r\n> \r\n> to `resolve` property in webpack config of my main app.\r\n> \r\n> It's was obviously my mistake of using two copies of React but I agree that it would be great if the error message was better. I think this is maybe similar to: #2402\r\nThanks @apieceofbart It worked from me.\r\n","updated_at":"2021-03-20T21:01:18Z","created_at":"2021-03-20T21:01:18Z","creator_user_login":"archithadge"}
{"number":13991,"comment_id":"803629611","body":"I have the same issue here, and tried everything I can.\r\n\r\nThis returns true.\r\n```\r\n// node_modules/react-dom/index.js\r\nwindow.React1 = require('react');\r\n\r\n// my fucntionnal component\r\nrequire('react-dom');\r\nwindow.React2 = require('react');\r\nconsole.log(window.React1 === window.React2);\r\n```\r\n\r\nThose commands return this.\r\n```\r\n> npm ls react \r\n`-- react@16.13.1\r\n npm ls react-dom\r\n`-- react-dom@16.13.1\r\n```\r\n\r\nAnd I use a functionnal component, not a class component :\r\n```\r\nimport React, { useState } from 'react';\r\nconst AppJsx = (props) => {\r\n  console.log(useState());\r\n```","updated_at":"2021-03-21T17:38:01Z","created_at":"2021-03-21T17:38:01Z","creator_user_login":"Schneider95"}
{"number":13991,"comment_id":"804625176","body":"I am using Lerna and noticed one of my packages is using a different version of React and React-Dom. So i set them all as  \r\n```  \r\n\"react\": \"^17.0.1\"\r\n\"react-dom\": \"^17.0.1\"\r\n```\r\n\r\nCleaned npm cache with  `npm cache clean --force`\r\n\r\nReinstalled all the packages and no error.","updated_at":"2021-04-14T10:55:45Z","created_at":"2021-03-23T05:21:03Z","creator_user_login":"bozdoganCihangir"}
{"number":13991,"comment_id":"805090857","body":"For those of you who, like myself, have struggled a day or two with hooks for lerna (with yarn workspaces), and don't want to eject; use @craco like suggested above. What ended up being a fix for me was https://dev.to/kildareflare/how-to-modify-config-of-create-react-app-without-ejecting-5cbn\r\n\r\nEasy fix:\r\n1. install i your package: `yarn add @craco/craco`\r\n2. Change your scripts in your *package.json* to the following;\r\n```\r\n\"scripts\": {\r\n    ...\r\n    \"start\": \"craco start\",\r\n    \"build\": \"craco build\"\r\n    ...\r\n}\r\n```\r\n3. Create a *craco.config.js* in your package folder with the following:\r\n```\r\nconst path = require(\"path\");\r\n\r\nmodule.exports = {\r\n  webpack: {\r\n    alias: {\r\n      react: path.resolve(__dirname, \"./node_modules/react\"),\r\n    }\r\n};\r\n```\r\n\r\nHope this helps anyone out there struggling.","updated_at":"2021-03-23T17:30:14Z","created_at":"2021-03-23T17:30:14Z","creator_user_login":"japalo"}
{"number":13991,"comment_id":"811087815","body":"Whenever I use useParams(), even within the body of a component, I keep on getting the following error: \r\n\r\n<img width=\"1440\" alt=\"Screen Shot 2021-03-31 at 8 47 19 AM\" src=\"https://user-images.githubusercontent.com/67920345/113154638-d3236e00-91fd-11eb-91cf-069ad3a4a8d9.png\">\r\n\r\nYou can see all of the code that I've written to get this error on my post on StackOverflow here: https://stackoverflow.com/questions/66877261/getting-an-error-when-useparams-is-invoked\r\n\r\nAnd here's the Github link to all of the files that I've used for this project (the main files of concern are 'Menu', 'Restaurant', and 'Page'): https://github.com/Toriong/quick_eat_carnivore_search_and_delivery\r\n","updated_at":"2021-03-31T13:55:09Z","created_at":"2021-03-31T13:55:09Z","creator_user_login":"Toriong"}
{"number":13991,"comment_id":"811097792","body":"> Whenever I use useParams(), even within the body of a component, I keep on getting the following error: \n> \n> \n> \n> <img width=\"1440\" alt=\"Screen Shot 2021-03-31 at 8 47 19 AM\" src=\"https://user-images.githubusercontent.com/67920345/113154638-d3236e00-91fd-11eb-91cf-069ad3a4a8d9.png\">\n> \n> \n> \n> You can see all of the code that I've written to get this error on my post on StackOverflow here: https://stackoverflow.com/questions/66877261/getting-an-error-when-useparams-is-invoked\n> \n> \n> \n> And here's the Github link to all of the files that I've used for this project (the main files of concern are 'Menu', 'Restaurant', and 'Page'): https://github.com/Toriong/quick_eat_carnivore_search_and_delivery\n> \n> \n\nHard to tell from the screenshot, but your hook may be wrong.  Make sure useContext is called near the top of the hook, before any conditional code.","updated_at":"2021-03-31T14:08:48Z","created_at":"2021-03-31T14:08:48Z","creator_user_login":"JeremyGrieshop"}
{"number":13991,"comment_id":"813175785","body":"Error: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\r\n1. You might have mismatching versions of React and the renderer (such as React DOM)\r\n2. You might be breaking the Rules of Hooks\r\n3. You might have more than one copy of React in the same app\r\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.","updated_at":"2021-04-05T04:33:18Z","created_at":"2021-04-05T04:33:18Z","creator_user_login":"manan-29"}
{"number":13991,"comment_id":"816514089","body":"If this happens during testing and you are using `jest.resetAllMocks` it might be cause you are importing your react at the top of the page and then requiring your component in an `it` or `beforeEach`\r\n\r\nsolution is to move the imports to a beforeEach block react/react-test-renderer,@testing-library/react and your component\r\n\r\n","updated_at":"2021-04-09T08:26:35Z","created_at":"2021-04-09T08:26:11Z","creator_user_login":"mo-fc"}
{"number":13991,"comment_id":"818540978","body":"This error gave me a nice day of aimless debugging.\r\nTurns out that the error came from doing a `import {useState} from 'React'` instead of `import {useState} from 'react'`, just changing it to lowercase worked. ","updated_at":"2021-04-13T08:13:26Z","created_at":"2021-04-13T08:13:26Z","creator_user_login":"TheGrandmother"}
{"number":13991,"comment_id":"819329822","body":"I had this issue on 16.8\r\n\r\n```\r\nroot@a458fc62cf3a:/var/www/app# npm ls react\r\n/var/www/app\r\n`-- react@16.8.6\r\n\r\nroot@a458fc62cf3a:/var/www/app# npm ls react-dom\r\n/var/www/app\r\n`-- react-dom@16.8.6\r\n\r\n```\r\n\r\nNothing listed in this thread helped. What did help was upgrading to 16.14, the problem went away\r\n\r\n```\r\nroot@a458fc62cf3a:/var/www/app# yarn upgrade react react-dom\r\n...\r\ninfo Direct dependencies                             \r\n├─ react-dom@16.14.0                                 \r\n└─ react@16.14.0 \r\n```","updated_at":"2021-04-14T08:20:16Z","created_at":"2021-04-14T08:20:16Z","creator_user_login":"reafle"}
{"number":13991,"comment_id":"819516766","body":"Just in case anyone here thinks they've done all the 3 suggestions but is still getting an error, Check if you're calling a function, instead of rendering it.\r\n\r\nIn my case, it was an error caused while trying to use `react-router-dom` and generate Routes with map, based on data on a different .jsx file.\r\n\r\nI made a mistake and did  `<Route> {data.someComponent} </Route>` ,  which didn't exactly cause any problem until i decided to use hook, changing it to `<Route> <data.someComponent/> </Route>` worked like a charm. \r\n\r\nOther solutions already mention using `component = {}` instead of `render = {} ` on Router, but the situation itself is sort of confusion-driven anyway, so i thought adding another example would be helpful.","updated_at":"2021-04-14T13:32:26Z","created_at":"2021-04-14T13:26:16Z","creator_user_login":"bmjeon5957"}
{"number":13991,"comment_id":"823269052","body":"I'm using yarn version-resolution and webpack config resolve aliases which seem to fix the issue outside of jest, however in jest tests I was still getting multiple versions of React, so I tried the following, which seems to fix my duplicate versions issue:\r\n\r\nAdding moduleNameMapper to jest config in package.json \r\n\r\n```json\r\n  \"jest\": {\r\n    \"moduleNameMapper\": {\r\n      \"^react$\": \"<rootDir>/node_modules/react\",\r\n      \"^react-dom$\": \"<rootDir>/node_modules/react-dom\",\r\n      \"^react-test-renderer$\": \"<rootDir>/node_modules/react-test-renderer\",\r\n```\r\n\r\nBut it seems like a pretty poor band aid and probably not a good idea. Anyone else tried this and had success? Or know a reason why this is a bad idea? Thanks","updated_at":"2021-04-20T13:21:12Z","created_at":"2021-04-20T13:21:12Z","creator_user_login":"TSMMark"}
{"number":13991,"comment_id":"824123277","body":"@japalo your solution works for me, thanks! \r\nAlso i used nohoist feature from yarn workspaces like this:\r\n```\r\n \"workspaces\": {\r\n    \"packages\": [\r\n      \"packages/*\",\r\n    ],\r\n    \"nohoist\": [\r\n      \"**/react*\", \"**/react*/**\", \"react*\",\r\n     ]\r\n  },\r\n```\r\nMaybe it will be usefull for someone.","updated_at":"2021-04-21T14:50:18Z","created_at":"2021-04-21T14:50:18Z","creator_user_login":"nadzhafox"}
{"number":13991,"comment_id":"824993178","body":"So im new to react. Im getting this error about an invalid hook call. The line of code where its happening is hit a bunch of times before it throws the error.\r\n\r\nI did the \r\n```\r\n// Add this in node_modules/react-dom/index.js\r\nwindow.React1 = require('react');\r\n\r\n// Add this in your component file\r\nrequire('react-dom');\r\nwindow.React2 = require('react');\r\nconsole.log('Conor: ' + window.React1 === window.React2);\r\n```\r\n\r\nand its returning false. I have that at the start of my App.tsx. But when i run into the problem I do window.React1==window.React2 in the console and it returns true. I have no idea whats going on. Can anyone help?\r\n\r\nit wasnt happening before I added Context to my project. Im assuming there is something there, but i dont know. ive attached my code and heres the stack trace:\r\n\r\n`Error: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\r\n1. You might have mismatching versions of React and the renderer (such as React DOM)\r\n2. You might be breaking the Rules of Hooks\r\n3. You might have more than one copy of React in the same app\r\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\r\n    at resolveDispatcher (react.development.js:1476)\r\n    at useContext (react.development.js:1484)\r\n    at NewOwnerSearch (NewOwnerSearch.tsx:27)\r\n    at describeNativeComponentFrame (react-dom.development.js:946)\r\n    at describeFunctionComponentFrame (react-dom.development.js:1034)\r\n    at describeFiber (react-dom.development.js:1116)\r\n    at getStackByFiberInDevAndProd (react-dom.development.js:1138)\r\n    at getCurrentFiberStackInDev (react-dom.development.js:1261)\r\n    at Object.ReactDebugCurrentFrame.getStackAddendum (react.development.js:149)\r\n    at printWarning (react-dom.development.js:52)\r\n[src.zip](https://github.com/facebook/react/files/6359977/src.zip)\r\n`\r\n","updated_at":"2021-04-22T16:50:08Z","created_at":"2021-04-22T16:27:41Z","creator_user_login":"conormdowney"}
{"number":13991,"comment_id":"825233605","body":"@conormdowney these two snippets of code are supposed to be in different files. \r\n\r\n> ```\r\n> // Add this in node_modules/react-dom/index.js\r\n> window.React1 = require('react');\r\n> ```\r\n>\r\n> ```\r\n> // Add this in your component file\r\n> require('react-dom');\r\n> window.React2 = require('react');\r\n> console.log('Conor: ' + window.React1 === window.React2);\r\n> ```\r\n\r\n\r\nThey want you to edit `node_modules/react-dom/index.js` directly (temporarily) for debugging.","updated_at":"2021-04-22T22:56:26Z","created_at":"2021-04-22T22:56:26Z","creator_user_login":"TSMMark"}
{"number":13991,"comment_id":"825642591","body":"@TSMMark I did that just there and its the same behaviour. its false when the console logs it at the start of the app but when i check again in the console after hitting the error its true","updated_at":"2021-04-23T13:01:38Z","created_at":"2021-04-23T13:01:38Z","creator_user_login":"conormdowney"}
{"number":13991,"comment_id":"825790106","body":"So it seems it was a problem with a third party library that i was using incorrectly at one point. ","updated_at":"2021-04-23T16:58:54Z","created_at":"2021-04-23T16:58:54Z","creator_user_login":"conormdowney"}
{"number":13991,"comment_id":"826332942","body":"> Just in case anyone here thinks they've done all the 3 suggestions but is still getting an error, Check if you're calling a function, instead of rendering it.\r\n> \r\n> In my case, it was an error caused while trying to use `react-router-dom` and generate Routes with map, based on data on a different .jsx file.\r\n> \r\n> I made a mistake and did `<Route> {data.someComponent} </Route>` , which didn't exactly cause any problem until i decided to use hook, changing it to `<Route> <data.someComponent/> </Route>` worked like a charm.\r\n> \r\nI had the same problem, but it has nothing to do with `Route`. \r\n\r\nBefore I added a `useState` call, another React component was successfully using my functional component. When I added the `useState`, I encountered this error report. \r\n\r\nThe outer component had been like\r\n```\r\nconst Outer = () => Inner({a: 1})\r\n```\r\nTo avoid the problem I changed it to \r\n```\r\nconst Outer = () => <Inner a=\"1\" />\r\n```\r\n\r\nWithout the JSX decoration, that line was a straight function call, and nothing tells the React runtime that we have changed component context. When you add the JSX decoration, the transpiler inserts a call to React runtime code (React.createElement) that can update the context before invoking the `Inner()` function.\r\n\r\n","updated_at":"2021-04-25T15:30:02Z","created_at":"2021-04-25T14:22:55Z","creator_user_login":"hwinkler"}
{"number":13991,"comment_id":"826785982","body":"@Slmii did you figure it out? having the same issue with a next app right now","updated_at":"2021-04-26T12:12:52Z","created_at":"2021-04-26T12:12:52Z","creator_user_login":"JohnDeved"}
{"number":13991,"comment_id":"827478229","body":"@Slmii this was the solution for me https://github.com/vercel/next.js/issues/9022#issuecomment-816327232","updated_at":"2021-04-27T09:55:12Z","created_at":"2021-04-27T09:55:12Z","creator_user_login":"JohnDeved"}
{"number":13991,"comment_id":"827482775","body":"> @Slmii this was the solution for me [vercel/next.js#9022 (comment)](https://github.com/vercel/next.js/issues/9022#issuecomment-816327232)\r\n\r\nI already gave up and switched to git submodules. ","updated_at":"2021-04-27T10:02:33Z","created_at":"2021-04-27T10:02:33Z","creator_user_login":"Slmii"}
{"number":13991,"comment_id":"830308729","body":"Just fought a big battle with Yarn workspaces and multiple instances of React, thought I'd share:\r\n\r\n## My problem\r\n\r\nI have two packages in a [Yarn monorepo](https://classic.yarnpkg.com/en/docs/workspaces/): a vanilla react app and a universal react-native/react-native-web app. I instructed yarn [not to hoist react-native packages or their dependencies](https://classic.yarnpkg.com/blog/2018/02/15/nohoist/) to get the react-native app running in the monorepo. This resulted in one copy of react in the monorepo's root node_modules (hoisted from the react app) and one copy of react in the react-native app's local node_modules (not hoisted per yarn workspace configuration). This worked fine at first - the react app used the copy of react in the monorepo's root node_modules and the react-native app used its own copy. Then I installed `styled-components` in both apps. Yarn hoisted `styled-components` up to the monorepo's root node_modules. This worked for the react app, but the react-native app started giving me the dreaded \"Invalid Hook Call Warning\" because `styled-components` was importing one copy of `react` from the monorepo's root node_modules while my other dependencies were using `react` from the react-native app's local node_modules.\r\n\r\n## My solution\r\n\r\nI could have instructed Yarn to stop hoisting `styled-components`, but that would mean a) further limiting the benefits of hoisting and b) continuing to fight this battle for every new dependency that required react. Instead I updated my react-native app's Metro config with a custom resolver that *always* resolves `react` to the copy in the local node_modules folder. Here's my full `metro.config.js` file (which has some other bits relevant to using react-native in a Yarn monorepo):\r\n\r\n```\r\n// metro.config.js\r\nconst path = require(\"path\")\r\nconst Resolver = require(\"metro-resolver\")\r\n\r\nmodule.exports = {\r\n  // Default ReactNative transformer\r\n  transformer: {\r\n    getTransformOptions: async () => ({\r\n      transform: {\r\n        experimentalImportSupport: false,\r\n        inlineRequires: true,\r\n      },\r\n    }),\r\n  },\r\n  resolver: {\r\n    // This was added to enable Metro to handle the symlinks that yarn\r\n    // workspaces places in the node_modules folder.\r\n    extraNodeModules: new Proxy(\r\n      {},\r\n      {\r\n        get: (target, name) => {\r\n          return path.join(__dirname, `node_modules/${name}`)\r\n        },\r\n      },\r\n    ),\r\n    // Make sure we use the local copy of react and react-native\r\n    resolveRequest: (context, realModuleName, platform, moduleName) => {\r\n      const clearContext = { ...context, resolveRequest: undefined }\r\n      const module = moduleName === \"react\" || moduleName === \"react-native\"\r\n        ? path.join(__dirname, \"node_modules\", realModuleName)\r\n        : realModuleName\r\n      return Resolver.resolve(clearContext, module, platform)\r\n    },\r\n  },\r\n}\r\n```\r\n\r\nFor the react-native-web side of the react-native app I implemented the same fix via Webpack's resolve aliases:\r\n\r\n```\r\n// webpack.config.js\r\nmodule.exports = {\r\n  resolve: {\r\n    // Make sure we use the local copy of react and react native (and alias react-native to react-native-web)\r\n    alias: {\r\n      \"react-native$\": path.join(__dirname, \"node_modules\", \"react-native-web\"),\r\n      \"react$\": path.join(__dirname, \"node_modules\", \"react\"),\r\n    },\r\n  },\r\n}\r\n```\r\n\r\n## Update\r\n\r\nA few weeks in and I've dropped the solution above in favor of using Yarn V2 with `nmHoistingLimits: workspaces` and `nodeLinker: node-modules` set. Those settings turn off plug and play (not compatible with react native) and disable hoisting across all workspaces, removing an entire class of problems. Unless hoisting is a key feature for you I recommend considering Yarn V2 w/o hoisting.","updated_at":"2021-05-25T20:15:13Z","created_at":"2021-04-30T18:57:33Z","creator_user_login":"elliotdickison"}
{"number":13991,"comment_id":"834409989","body":"I'm having this issue too, I've tried everything mentioned above and still can't figure it out. I've replicated the issue in a smaller example, hosted [here](https://github.com/KadenBiel/Electron-React-Test). I'm not sure where the other copy of react is coming from, and I've checked to make sure that none of the other issues are casing the error. I wouldn't consider myself a pro at typescript, so it's entirely possible I'm missing something really simple, I just need help.","updated_at":"2021-05-07T13:47:04Z","created_at":"2021-05-07T13:47:04Z","creator_user_login":"KadenBiel"}
{"number":13991,"comment_id":"834452464","body":"@KadenBiel I took a quick look at your repo and didn't see anything too obviously out of place, other than you have some `@types/react` packages in the lock file for react v 16 instead of 17 \r\n\r\nhttps://github.com/KadenBiel/Electron-React-Test/blob/d2ca41fee05080769bee7ddb3d12a97dfd4d0763/yarn.lock#L1163-L1183\r\n\r\nbut afaik that shouldn't affect runtime?","updated_at":"2021-05-07T14:26:14Z","created_at":"2021-05-07T14:26:14Z","creator_user_login":"TSMMark"}
{"number":13991,"comment_id":"834518809","body":"> @KadenBiel I took a quick look at your repo and didn't see anything too obviously out of place, other than you have some `@types/react` packages in the lock file for react v 16 instead of 17\r\n> \r\n> https://github.com/KadenBiel/Electron-React-Test/blob/d2ca41fee05080769bee7ddb3d12a97dfd4d0763/yarn.lock#L1163-L1183\r\n> \r\n> but afaik that shouldn't affect runtime?\r\n\r\nThat is a type definition for React, it allows me to use native imports instead of require(). The version of that package isn't dependent upon the same version of React, and it's not the source of the issue. I did find that \"react-transition-group\" wasn't using React as a peer dependency, so I fixed that in the lock file but that did not fix the issue. I also can't find any other modules using React as a peer dependency, so a package incorrectly labeling React as a dependency isn't the issue.\r\n\r\nEdit: I commented out the hooks and tested the app to see if it works without hooks, and I get the same error regardless of whether or not I use hooks. I'm gonna look around to see if I used any other hooks, but this doesn't happen in the app I was originally trying to build.\r\n\r\nEdit 2: I fixed the issue. For those using webpack you can fix it by resolving react in your webpack.config.js like this:\r\n```\r\nconst path = require('path');\r\n\r\nmodule.exports = {\r\n    resolve: {\r\n        alias: {\r\n            react: path.resolve(__dirname, 'node_modules', 'react')\r\n        }\r\n    }\r\n}\r\n```","updated_at":"2021-05-11T13:51:53Z","created_at":"2021-05-07T15:23:34Z","creator_user_login":"KadenBiel"}
{"number":13991,"comment_id":"840299152","body":"I have an issue with yarn workspaces when running `create-react-app` for who knows what reason.\r\n\r\n## App Structure\r\nI have 3 apps in this monorepo:\r\n- `appA` (uses React 17.0.2).\r\n- `appB` (uses React Experimental for Concurrent mode, but isn't using Concurrent mode in this example).\r\n- `component-library` (uses React 17.0.2 and exports a single hook).\r\n\r\nOther than `package.json`, `appA` and `appB` are identical. I'm not using Concurrent mode to minimize variations, but that's a reason why `appB` has a different version of React.\r\n\r\nAlso note, all projects use `create-react-app` for local testing and `component-library` uses Webpack for building a bundle.\r\n\r\n_**NOTE:** Yarn workspaces automatically links packages in the monorepo which is how both apps are importing the local `component-library` package which is different from what's on npmjs.org._\r\n\r\n## Troubleshooting\r\nI did this then logged:\r\n```js\r\n// Add this in node_modules/react-dom/index.js\r\nwindow.React1 = require('react');\r\n\r\n// Add this in your component file\r\nrequire('react-dom');\r\nwindow.React2 = require('react');\r\nconsole.log(window.React1 === window.React2);\r\n```\r\n\r\n1. Originally showed `false`.\r\n1. I did `\"resolutions\"` in `package.json`.\r\n1. **Now it shows `true`,** but I still get the same invalid hooks error.\r\n\r\nAlso note, `component-library` has `\"react\"` set as an external in the Webpack config.\r\n\r\n## Try it out yourself\r\nWorking code showing 2 commands to see the working and not-working versions:\r\nhttps://github.com/Sawtaytoes/react-hooks-error\r\n\r\n`appB` is the one that has the issue as it uses a different version of React.\r\n\r\n## Reactjs.org Solutions\r\nThe solution to use `npm link` doesn't make any sense:\r\n> This problem can also come up when you use npm link or an equivalent. In that case, your bundler might “see” two Reacts — one in application folder and one in your library folder. Assuming myapp and mylib are sibling folders, one possible fix is to run npm link ../myapp/node_modules/react from mylib. This should make the library use the application’s React copy.\r\n\r\nEven if I replace `npm` with `yarn`, I don't understand what's being asked here or if it'll even do anything.\r\n\r\nI'd like to see a better description on exactly what steps I need to take and how this would solve my issue. Seems super hacky.\r\n\r\n## Notes\r\n- This only happens when running `create-react-app` to develop locally, not when building a bundle for deployment. I didn't include the production build step in either app.\r\n- Monorepos absolutely shouldn't require all projects share the same React version; that's insane. If `component-library` doesn't include React in the bundle output, why the heck isn't this working?\r\n- The `component-library` bundle includes React as `__WEBPACK_EXTERNAL_MODULE_react__`. Does this conflict with `create-react-app`?\r\n```js\r\n/*!************************!*\\\r\n  !*** external \"react\" ***!\r\n  \\************************/\r\n/***/ (function(module) {\r\n\r\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_react__;\r\n\r\n/***/ })\r\n```\r\n- Why isn't React smarter about this? I know it's not an easy problem.\r\n- I swear React 17 fixed this by not requiring all apps use the same version. Am I misunderstanding?","updated_at":"2021-05-13T05:04:06Z","created_at":"2021-05-13T05:01:17Z","creator_user_login":"Sawtaytoes"}
{"number":13991,"comment_id":"841509933","body":"If anybody is using **npm link** on a **Webpack UMD module**, this post might be helpful. This might be the same issue @Sawtaytoes above is experiencing.\r\n\r\nI have a CRA app (myapp) that references a custom React component library (mylib). The React component library was built from the ground up and uses Webpack to create a UMD module. Mylib was then **npm link**'d from myapp for development purposes. I had a functional component that was working until I added a call to `useState()`. After reviewing the package.json of mylib and myapp, I knew that I was running into an issue with duplicate React copies.\r\n\r\nThese are the following steps I used to diagnose and fix the issue. Some of them might be extraneous, but I'm leaving them in here for completeness sake.\r\n\r\n# Diagnosis\r\n1. I used the suggested diagnostic for duplicate React copies from https://reactjs.org/warnings/invalid-hook-call-warning.html:\r\n```\r\n// Add this in node_modules/react-dom/index.js\r\nwindow.React1 = require('react');\r\n\r\n// Add this in your component file\r\nrequire('react-dom');\r\nwindow.React2 = require('react');\r\nconsole.log(window.React1 === window.React2);\r\n```\r\n\r\n2. I then npm linked myapp's react **and** react-dom directories from mylib. The React docs say just to link react, but this will cause the browser console to still log false (Fail)\r\n3. This is where the React docs stop. Unfortunately, I was still receiving this admittedly infuriating error message. I then found a helpful article written by Rob Kendal (https://robkendal.co.uk/blog/2019-12-22-solving-react-hooks-invalid-hook-call-warning).\r\n4. I made sure my Webpack config (for mylib) had react & react-dom as peerDependencies per Rob's article. Still got an error.\r\n5. Per Rob's article, I also had to set the **externals** section of my Webpack config file. Rob's suggestion was this\r\n```\r\nexternals: {\r\n   react: 'commonjs react',\r\n  'react-dom': 'commonjs react-dom',\r\n}\r\n```\r\n6. Ok, no more hook error, but now I'm getting a webpack error. After some searching, I tried this:\r\n```\r\n    externals: {\r\n        'react': {\r\n\t\t\tcommonjs: 'react'\r\n\t\t},\r\n        'react-dom': {\r\n\t\t\tcommonjs: 'react-dom'\r\n\t\t}\r\n    }\r\n```\r\n7. Well, that didn't work either, but the error messages give me hope. Running **npm run start** from myapp results in an unhelpful error message, but I then try **npm run start** from mylib. For the record, mylib's start command is defined as `webpack --mode=development --watch`. I then get an error in the CLI mentioning a lack of a \"commonjs2\" definition. After some searching and reading the Webpack docs, I tried:\r\n```\r\n    externals: {\r\n        'react': {\r\n\t\t\tcommonjs: 'react',\r\n\t\t\tcommonjs2: 'react'\r\n\t\t},\r\n        'react-dom': {\r\n\t\t\tcommonjs: 'react-dom',\r\n\t\t\tcommonjs2: 'react-dom'\r\n\t\t}\r\n    }\r\n```\r\n\r\nFinally, my component library compiled and my app didn't complain about hooks anymore!\r\n\r\n## tl;dr\r\nIf you are npm linking a Webpack/React module (yourlib) from another React app (yourapp), then you need to:\r\n * Go to yourlib and npm link yourapp's copy of React & ReactDOM\r\n * Modify yourlib's package.json to exclude React from the output bundle by specifying it as a **peerDependency** and setting the **externals** section\r\n\r\nIt was a little frustrating that this scenario was covered (incompletely) by this little blurb:\r\n> This problem can also come up when you use npm link or an equivalent. In that case, your bundler might “see” two Reacts — one in application folder and one in your library folder. Assuming myapp and mylib are sibling folders, one possible fix is to run npm link ../myapp/node_modules/react from mylib. This should make the library use the application’s React copy.\r\n\r\nGrabbing my React component library from npm would have solved this issue, but I'm not going to publish my company's proprietary code to the public (not that it's my call anyways). Furthermore, while I could have also used a private npm repo like Verdaccio, I think the ability to use `npm link` and develop my library as the same time as my app is a huge boon for development.\r\n\r\nI don't think my scenario is an edge case at all, and the React docs need to be updated to have more accurate wording. To say \"one possible fix is to run npm link ../myapp/node_modules/react from mylib\" is inaccurate because in most cases `mylib` is going to be bundled via some bundler like Webpack which means additional steps are required to produce a fix. At the very least another sentence should be appended to that paragraph which says, \"Furthermore, if you are using a bundler you should consult your bundler's documentation to ensure React is being excluded from the output.\"","updated_at":"2021-05-14T21:35:37Z","created_at":"2021-05-14T21:20:55Z","creator_user_login":"vincentlaucsb"}
{"number":13991,"comment_id":"842786835","body":"I got this error after installing and trying to use material-ui\r\nI do have a nested component \r\n\r\n\r\n```\r\n// parent component passes a inner component in...\r\n\r\n            <ItemList\r\n                innerItem={SimItem}\r\n            />\r\n\r\n// item list renders with that `innerItem` something like\r\n\r\n            inner = props.innerItem({\r\n                item, idx, text, separator, active, \r\n                category\r\n            })\r\n            return ( <div>inner</div> )\r\n```\r\n\r\nand the inner item has some code.\r\nI realize this is not quite a JSXy way to do this, but components are just functions right?\r\nCould this be breaking one of the \"rules of hooks\"?\r\neverything was working fine until I tried to import material-ui and use one of its components inside the inner item.\r\n","updated_at":"2021-05-18T02:54:47Z","created_at":"2021-05-18T02:54:47Z","creator_user_login":"dcsan"}
{"number":13991,"comment_id":"843607623","body":"Just move react to peerDependencies in local library project. see [this](https://fathomtech.io/blog/create-a-react-component-library-using-create-react-app/) or [this](https://fathomtech.io/blog/understanding-peer-dependencies-in-npm/)\r\n\r\npackage.json\r\n```json\r\n\"peerDependencies\": {\r\n    \"react\": \"17.0.1\"\r\n}\r\n```","updated_at":"2021-05-18T22:25:17Z","created_at":"2021-05-18T22:23:44Z","creator_user_login":"canozgen9"}
{"number":13991,"comment_id":"844600647","body":"@canozgen9  This solution is insufficient for Webpack builds. Both Rob Kendal (article linked) and I have failed to resolve the issue simply by moving React to peerDependencies.","updated_at":"2021-05-20T00:59:32Z","created_at":"2021-05-20T00:59:32Z","creator_user_login":"vincentlaucsb"}
{"number":13991,"comment_id":"844603933","body":"@vincentlaucsb \r\n> If anybody is using **npm link** on a **Webpack UMD module**, this post might be helpful. This might be the same issue @Sawtaytoes above is experiencing.\r\n> \r\n> I have a CRA app (myapp) that references a custom React component library (mylib). The React component library was built from the ground up and uses Webpack to create a UMD module. Mylib was then **npm link**'d from myapp for development purposes. I had a functional component that was working until I added a call to `useState()`. After reviewing the package.json of mylib and myapp, I knew that I was running into an issue with duplicate React copies.\r\n\r\n> 1. Well, that didn't work either, but the error messages give me hope. Running **npm run start** from myapp results in an unhelpful error message, but I then try **npm run start** from mylib. For the record, mylib's start command is defined as `webpack --mode=development --watch`. I then get an error in the CLI mentioning a lack of a \"commonjs2\" definition. After some searching and reading the Webpack docs, I tried:\r\n> \r\n> ```\r\n>     externals: {\r\n>         'react': {\r\n> \t\t\tcommonjs: 'react',\r\n> \t\t\tcommonjs2: 'react'\r\n> \t\t},\r\n>         'react-dom': {\r\n> \t\t\tcommonjs: 'react-dom',\r\n> \t\t\tcommonjs2: 'react-dom'\r\n> \t\t}\r\n>     }\r\n> ```\r\n> \r\n> Finally, my component library compiled and my app didn't complain about hooks anymore!\r\n\r\nHow are you modifying the Webpack config for a Create-React-App project? I wasn't getting hooks errors when building with a custom Webpack production JS file. I was only getting the errors when running create-react-app using react-scripts.\r\n\r\nOr am I misunderstanding and all the changes came from how you compiled your other project? The question I'd have is why we need to build for `commonjs2` rather than use es modules. Seems very strange.","updated_at":"2021-05-20T01:08:51Z","created_at":"2021-05-20T01:07:40Z","creator_user_login":"Sawtaytoes"}
{"number":13991,"comment_id":"849365398","body":"please somebody help me, where can i find the wepback.config.js file so that i can edit the external ","updated_at":"2021-05-27T06:29:03Z","created_at":"2021-05-27T06:29:03Z","creator_user_login":"nahomjc"}
{"number":13991,"comment_id":"849626907","body":"> please somebody help me, where can i find the wepback.config.js file so that i can edit the external\r\n\r\nyou have to create it, it goes in the main directory where your package.json and other config files go. You can find an example [here](https://github.com/KadenBiel/DVD-TS/tree/nightly).","updated_at":"2021-05-27T13:17:33Z","created_at":"2021-05-27T13:17:33Z","creator_user_login":"KadenBiel"}
{"number":13991,"comment_id":"855259163","body":"In my case I was developing a library and by mistake I added react on dependencies, so it fails because we have two different versions of react.","updated_at":"2021-06-05T15:56:58Z","created_at":"2021-06-05T15:56:58Z","creator_user_login":"Marcoo09"}
{"number":13991,"comment_id":"855322458","body":"I ran into this issue in the same situation as @Marcoo09, so for anyone coming from a websearch, if you're developing a typescript library, you can just use the types library instead of installing the actual `react` package, like this\r\n\r\n```json\r\n\"dependencies\": {\r\n    \"@types/react\": \"^17.0.9\",\r\n    ...\r\n}\r\n```","updated_at":"2021-06-06T01:45:13Z","created_at":"2021-06-06T01:44:56Z","creator_user_login":"felipemullen"}
{"number":13991,"comment_id":"867653663","body":"I just had this issue for what seems like a silly mistake:\r\n```javascript\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./app\";\r\n\r\nReactDOM.render(App(), document.getElementById(\"root\"));  //  Changing App() to <App /> fixes the problem\r\n```","updated_at":"2021-06-24T13:51:46Z","created_at":"2021-06-24T13:51:46Z","creator_user_login":"AustinScola"}
{"number":13991,"comment_id":"868195698","body":"> I just had this issue for what seems like a silly mistake:\r\n> \r\n> ```js\r\n> import ReactDOM from \"react-dom\";\r\n> import { App } from \"./app\";\r\n> \r\n> ReactDOM.render(App(), document.getElementById(\"root\"));  //  Changing App() to <App /> fixes the problem\r\n> ```\r\n\r\nIf the file where it happens is not an JSX file, this construct can work as well:\r\n```\r\nReactDOM.render(React.createElement(App, {}), document.getElementById(\"root\"));\r\n```\r\nWould work as well","updated_at":"2021-06-25T04:30:49Z","created_at":"2021-06-25T04:30:49Z","creator_user_login":"koteisaev"}
{"number":13991,"comment_id":"869115774","body":"> # To people coming from search: please [read this page first](https://reactjs.org/warnings/invalid-hook-call-warning.html). It contains most common possible fixes!\r\n> **Do you want to request a _feature_ or report a _bug_?**\r\n> \r\n> Enhancement\r\n> \r\n> **What is the current behavior?**\r\n> \r\n> I had multiple instances of React by mistake.\r\n> \r\n> When trying to use hooks, got this error:\r\n> `hooks can only be called inside the body of a function component`\r\n> \r\n> Which is not correct since I was using function components. Took me a while to find the real cause of the issue.\r\n> \r\n> **What is the expected behavior?**\r\n> \r\n> Show the correct error message. Maybe detect that the app has multiple instances of React and say that it may be the reason of bugs.\r\n\r\nnpm i framer-motion in your react app","updated_at":"2021-06-27T07:26:22Z","created_at":"2021-06-27T07:26:22Z","creator_user_login":"vyshnav-chikku"}
{"number":13991,"comment_id":"869115843","body":"npm i framer-motion in your react app\r\nor add in dependencies ","updated_at":"2021-06-27T07:27:05Z","created_at":"2021-06-27T07:27:05Z","creator_user_login":"vyshnav-chikku"}
{"number":13991,"comment_id":"870536281","body":"In your React component NPM package.json, change\r\n```\r\n \"dependencies\": {\r\n    \"react\": \"^16.12.0\",\r\n    \"react-dom\": \"^16.9.0\"\r\n  },\r\n\r\n``` \r\nto \r\n```\r\n \"peerDependencies\": {\r\n    \"react\": \"^16.12.0\",\r\n    \"react-dom\": \"^16.9.0\"\r\n  },\r\n \"devDependencies\": {\r\n    \"react\": \"^16.12.0\",\r\n    \"react-dom\": \"^16.9.0\"\r\n  },\r\n```\r\n may helps you.\r\nYou'd better keep react version of project and component be the same one.\r\n**If you do this，you must uninstall your packages( rm -rf node_modules) and install again.**\r\n:)","updated_at":"2021-09-23T11:50:49Z","created_at":"2021-06-29T12:07:01Z","creator_user_login":"yinsang"}
{"number":13991,"comment_id":"872559992","body":"I've been struggling with this issue as well, but I found the solution for my use case.\r\n\r\nI have a monorepo, containing a shared React component library, and an application that uses the component library via a `file:../mylib/lib` dependency. The component library does not use a bundler, but the application uses webpack.\r\n\r\nA simplified view of the repository looks like this:\r\n\r\n```\r\n/mylib\r\n    lib/ (tsc output)\r\n        index.js\r\n        package.json (copied from parent dir on build)\r\n            ^ has react as a peer dependency, and a dev dependency\r\n    node_modules/\r\n        ^ contains react, installed as a dev dependency\r\n/myapp\r\n    index.jsx\r\n    package.json\r\n        ^ has a dependecy on file:../mylib/lib\r\n    node_modules/\r\n        ^ contains react, as a normal dependency\r\n        mylib -> ../../mylib/lib (npm symlinks it)\r\n    webpack.config.js\r\n```\r\n\r\nIn this setup, I get an invalid hook call when using a component from `mylib` that uses a state hook. This is why:\r\n\r\n1. `/myapp/index.jsx` imports a component from `mylib`\r\n2. Webpack attempts to resolve `mylib`, by recursively walking up the directory tree looking for `node_modules`\r\n3. Webpack finds `/myapp/node_modules` and finds `mylib` (as a symlink) within it\r\n4. Webpack **resolves the symlink** and treats the path of `mylib` as `/mylib/lib/index.jsx`\r\n5. `/mylib/lib/index.jsx` imports `react`.\r\n6. Webpack attempts to resolve `react`, using the same method as before. Because the path for the `mylib` module was resolved to `/mylib/lib/index.jsx`, Webpack finds `/mylib/node_modules` and looks for React there\r\n7. A second React is imported\r\n\r\nThe solution that worked for me was to set `resolve.symlinks: false` in my Webpack config. Thus, the path for `mylib` remains `/myapp/node_modules/mylib` and the other `node_modules` with the dev dependencies isn't discovered.\r\n\r\nYou could also set `resolve.modules:` to strictly only the current directory's node_modules instead of trying to resolve wherever it finds one.","updated_at":"2021-07-01T21:23:34Z","created_at":"2021-07-01T21:23:34Z","creator_user_login":"waweber"}
{"number":13991,"comment_id":"877453984","body":"I've spent more than an hour on this issue and no comment here solved my issue until I came across this: https://stackoverflow.com/questions/62387392/react-native-invalid-hook-call-for-flat-list-render-item\r\n\r\nBasically I was using a hook inside of a component that is used to render a flat list item","updated_at":"2021-07-09T21:01:41Z","created_at":"2021-07-09T21:01:41Z","creator_user_login":"TalalYousif"}
{"number":13991,"comment_id":"886256547","body":"I cloned a repo and installed all dependencies directly from terminal and everything worked except for useHistory and  useDispatch,it throwed the invalid hook call error.however I re-installed react-router-dom and react-redux directly from VS code's terminal and now it seems to be working fine.","updated_at":"2021-07-25T20:55:18Z","created_at":"2021-07-25T20:54:59Z","creator_user_login":"shouravrahman"}
{"number":13991,"comment_id":"886656170","body":"I tried all of the suggested solutions but none worked for me. I've created a simple library and build using Webpack https://github.com/vasilev-alex/webpack-example\r\n\r\nAs soon, as I import a React hook in my library and use it in my App I see the following error\r\n\r\n```\r\nError: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\r\n1. You might have mismatching versions of React and the renderer (such as React DOM)\r\n2. You might be breaking the Rules of Hooks\r\n3. You might have more than one copy of React in the same app\r\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\r\n```\r\n\r\nI link my library (`webpack-example`) using  the app's package.json\r\n```json\r\n\"dependencies\": {\r\n  \"webpack-example\": \"link:../../webpack-example\"\r\n}\r\n```\r\n\r\nI ensure that I have only one copy of React by tweaking the `react-scripts`' `webpack.config.js` (node_modules/react-scripts/config/webpack.config.js)\r\n\r\n```js\r\n    alias: {\r\n      // Support React Native Web\r\n      // https://www.smashingmagazine.com/2016/08/a-glimpse-into-the-future-with-react-native-for-web/\r\n      'react-native': 'react-native-web',\r\n      // Allows for better profiling with ReactDevTools\r\n      ...(isEnvProductionProfile && {\r\n        'react-dom$': 'react-dom/profiling',\r\n        'scheduler/tracing': 'scheduler/tracing-profiling',\r\n      }),\r\n      ...(modules.webpackAliases || {}),\r\n// here\r\n      react: path.resolve(__dirname, '../../react')\r\n    },\r\n```\r\n\r\nP.S. if I bundle my lib using Rollup it works just fine.\r\n\r\n","updated_at":"2021-07-26T12:24:47Z","created_at":"2021-07-26T12:24:47Z","creator_user_login":"vasilev-alex"}
{"number":13991,"comment_id":"886865274","body":"My issue wound up being an old `node_modules` directory installed locally. We had previously moved our `node_modules` dir from a nested directory into the project root. So fresh copies of the repo worked fine, but the hooks error was present for any devs who hadn't manually deleted the original nested `node_modules` directory locally - this was causing two versions of React to be resolved, but this wasn't made visible by `npm ls react`. Deleting the outdated `node_modules` directory cleared it right up.","updated_at":"2021-07-26T16:52:21Z","created_at":"2021-07-26T16:52:21Z","creator_user_login":"jonaldinger"}
{"number":13991,"comment_id":"895697891","body":"Want to leave some information regarding how I workaround this issue occurred to me in my environment. I've developing React application using create-react-app on Windows, which uses a case-insensitive file system, and that's exactly the reason that I got two React instances.\r\n\r\nI've tried the `window.React1 === window.React2` which returns `false` although I've very sure I have only one copy of React in my root node_modules folder in my monorepo.  So I added a `debugger` statement in `node_modules/react/index.js` and noticed it really has been loaded twice, from the same path, but with two different \"tags\" (tags below are for description purpose only).\r\n\r\n1. First load: `../../node_module/react/index.js?1234`\r\n2. First load: `../../node_module/react/index.js?abcd`\r\n\r\nAfter working through webpack, added `console.log` everywhere for hours, I've finally realized that the \"tags\" are hashes generated by the full path of that file in `node_modules/webpack/lib/NamedModulesPlugin.js`. The reason it's having two different hashes is because:\r\n\r\n1. The first hash is generated from `c:\\my-project\\node_modules\\react\\index.js`\r\n2. The second hash is generated from `C:\\my-project\\node_modules\\react\\index.js`\r\n\r\nNotice the difference between `C:` and `c:`? So I apply the workaround by adding a `postinstall` script to patch the file `node_modules/webpack/lib/NamedModulesPlugin.js`.\r\n\r\nOriginal:\r\n\r\n```js\r\n\"use strict\";\r\n\r\nconst createHash = require(\"./util/createHash\");\r\nconst RequestShortener = require(\"./RequestShortener\");\r\n\r\nconst getHash = str => {\r\n\tconst hash = createHash(\"md4\");\r\n\thash.update(str);\r\n\tconst digest = /** @type {string} */ (hash.digest(\"hex\"));\r\n\treturn digest.substr(0, 4);\r\n};\r\n```\r\n\r\nPatched:\r\n\r\n```js\r\n\"use strict\";\r\n\r\n// new helper function to convert the root driver to upper case when FIX_MODULE_HASH is set\r\nfunction fixModulePath(str) {\r\n  if (!process.env.FIX_MODULE_HASH) return str;\r\n  return str.replace(/[a-z]:/g, m => m.toUpperCase())\r\n}\r\n\r\nconst createHash = require(\"./util/createHash\");\r\nconst RequestShortener = require(\"./RequestShortener\");\r\n\r\nconst getHash = str => {\r\n\tconst hash = createHash(\"md4\");\r\n\thash.update(fixModulePath(str)); // call fixModulePath\r\n\tconst digest = /** @type {string} */ (hash.digest(\"hex\"));\r\n\treturn digest.substr(0, 4);\r\n};\r\n```\r\n\r\nHope it helps.","updated_at":"2021-08-10T05:56:40Z","created_at":"2021-08-10T03:19:59Z","creator_user_login":"JeffreyZhao"}
{"number":13991,"comment_id":"898848548","body":"@waweber \r\n\r\nThanks for mentioning webpack resolve.modules, that helped me sort this cleanly.\r\nHopefully this helps some other people in similar scenario.\r\n\r\nProjectA\\source\\packages\\nextjsapp\\\r\nProjectB\\source\\packages\\library\r\n\r\nProjectA\\source\\packages\\nextjsapp: yarn link library\r\n\r\nBoth projects are using yarn workspaces/lerna rooted at the 'source' dir level.\r\n\r\nOverriding resolve.modules is the tidiest fix for my scenario where using yarn/npm link to another library that is in a different directory tree and using a different install of React and other components i.e. different node_modules resolution paths.\r\n\r\nFor nextjsapp webpack config, I put traditional node_modules resolution at the end 'node_modules', prioritising node_modules dirs in ProjectA\r\n\r\n```\r\nif (process.env.NODE_ENV == 'development') {\r\n  config.resolve.modules = [path.resolve(__dirname, 'src'),path.resolve(__dirname, 'node_modules'),path.resolve(__dirname, '../../node_modules'),'node_modules']\r\n}\r\n```\r\n\r\nNow I don't have to explicitly set resolve.alias for specific modules e.g. React,\r\nand I don't have to perform any other package.json or symlink magic in either Project repo\r\n","updated_at":"2021-08-14T08:35:28Z","created_at":"2021-08-14T06:59:19Z","creator_user_login":"TimNZ"}
{"number":13991,"comment_id":"907686308","body":"Hi. I need help with my project, I am relatively new to React JS so sorry for tha lack of knowledge :). So I have small project, folder structure is:\r\n\r\nrootFolder\r\n  | node_mdules\r\n  | public\r\n  | src\r\n  | package.json\r\n  \r\nSo I found out that when I added this onSubmit function in AddTask.js file I get error:\r\n\r\nError: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons: ...\r\n\r\nAnd I found out that I have Duplicate React and i dont't know why and where is it comming from.  These are some of my files.\r\n\r\n// ------ index.js  ------\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n \r\n \r\n \r\n// ------ App.js  ------\r\nimport { useState } from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Tasks from \"./components/Tasks\";\r\nimport AddTask from \"./components/AddTask\";\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState([ ]);\r\n\r\n  // Add task\r\n  const addTask = (e) => {\r\n    console.log(e);\r\n  };\r\n  // Delete task\r\n  const deleteTask = (id) => {\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n  // Toggle Reminder\r\n  const toggleReminder = (id) => {\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id ? { ...task, reminder: !task.reminder } : task\r\n      )\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <Header></Header>\r\n      <AddTask addTask={addTask}></AddTask>\r\n      {tasks.length > 0 ? (\r\n        <Tasks\r\n          tasks={tasks}\r\n          deleteTask={deleteTask}\r\n          toggleReminder={toggleReminder}\r\n        ></Tasks>\r\n      ) : (\r\n        \"No Tasks To Show\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n//AddTask.js\r\nimport { useState } from \"react\";\r\n\r\nconst AddTask = ({ addTask }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert(\"Please add a task\");\r\n      return;\r\n    }\r\n\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n\r\n    AddTask({ text, day, reminder });\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Task</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Task\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Day & Time</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Day & Time\"\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n\r\n\r\n\r\n//package.json\r\n\r\n{\r\n  \"name\": \"react-task-tracker\",\r\n  \"version\": \"0.1.0\",\r\n  \"private\": true,\r\n  \"dependencies\": {\r\n    \"@testing-library/jest-dom\": \"^5.14.1\",\r\n    \"@testing-library/react\": \"^11.2.7\",\r\n    \"@testing-library/user-event\": \"^12.8.3\",\r\n    \"react\": \"^16.14.0\",\r\n    \"react-dom\": \"^16.14.0\",\r\n    \"react-icons\": \"^4.2.0\",\r\n    \"react-scripts\": \"^4.0.3\",\r\n    \"web-vitals\": \"^1.1.2\"\r\n  },\r\n  \"scripts\": {\r\n    \"start\": \"react-scripts start\",\r\n    \"build\": \"react-scripts build\",\r\n    \"test\": \"react-scripts test\",\r\n    \"eject\": \"react-scripts eject\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": [\r\n      \"react-app\",\r\n      \"react-app/jest\"\r\n    ]\r\n  },\r\n  \"browserslist\": {\r\n    \"production\": [\r\n      \">0.2%\",\r\n      \"not dead\",\r\n      \"not op_mini all\"\r\n    ],\r\n    \"development\": [\r\n      \"last 1 chrome version\",\r\n      \"last 1 firefox version\",\r\n      \"last 1 safari version\"\r\n    ]\r\n  }\r\n}\r\n\r\n\r\nSorry for long post, didn't know how to add text box :)","updated_at":"2021-08-28T20:34:49Z","created_at":"2021-08-28T20:34:49Z","creator_user_login":"mmilet02"}
{"number":13991,"comment_id":"907686630","body":"You are calling the component function AddTask from within the onSubmit handler inside AddTask.\r\nThis is definitely not what you are intending.","updated_at":"2021-08-28T20:38:04Z","created_at":"2021-08-28T20:38:04Z","creator_user_login":"TimNZ"}
{"number":13991,"comment_id":"907690599","body":"> You are calling the component function AddTask from within the onSubmit handler inside AddTask.\r\n> This is definitely not what you are intending.\r\n\r\nWow, @TimNZ thank you a lot :D I was losing my mind for two day because of typo :(","updated_at":"2021-08-28T21:14:55Z","created_at":"2021-08-28T21:14:55Z","creator_user_login":"mmilet02"}
{"number":13991,"comment_id":"908664085","body":"Using `npm-link-shared` as suggested by @mpeyper didn't work for me. For some reason, it just deletes the symlink to `<other_package>` from `./node_modules`, and doesn't make a symlink to `react` in `./node_modules`.\r\n\r\nAlso, using `alias` in `webpack.config.js`, as several have suggested, wasn't suitable in my case, since I just don't have one.\r\n\r\nWhat did work was what explained in this [StackOverflow answer](https://stackoverflow.com/a/63068531/3002584), which is using `craco`. I'll just quote it here:\r\n\r\n\r\n>After [following the installation](https://github.com/gsoft-inc/craco/blob/master/packages/craco/README.md#installation), add `craco.config.js` to your root folder with the desired configuration.\r\n>\r\n>My example:\r\n>\r\n>```\r\n>// craco.config.js\r\n>const path = require(`path`);\r\n>const alias = require(`./src/config/aliases`);\r\n>\r\n>const SRC = `./src`;\r\n>const aliases = alias(SRC);\r\n>\r\n>const resolvedAliases = Object.fromEntries(\r\n>  Object.entries(aliases).map(([key, value]) => [key, path.resolve(__dirname, value)]),\r\n>);\r\n>\r\n>module.exports = {\r\n>  webpack: {\r\n>    alias: resolvedAliases,\r\n>  },\r\n>};\r\n>```\r\n>  \r\n>Where `aliases.js` (`./src/config/aliases`) exports a helper function:  \r\n>  \r\n>```\r\n>const aliases = (prefix = `src`) => ({\r\n>  '@atoms': `${prefix}/components/atoms`,\r\n>  [...]\r\n>  '@storybookHelpers': `../.storybook/helpers`,\r\n>});\r\n>\r\n>module.exports = aliases;\r\n>```","updated_at":"2021-08-30T21:09:58Z","created_at":"2021-08-30T20:20:17Z","creator_user_login":"OfirD1"}
{"number":13991,"comment_id":"908959882","body":"My React-dom is 16.14.0 and has no copy react, and my code is using class component but import an component writing by hooks? I don't know why got this error! any one help~","updated_at":"2021-08-31T07:06:28Z","created_at":"2021-08-31T07:06:28Z","creator_user_login":"foolish-boy"}
{"number":13991,"comment_id":"914092300","body":"try link react from you app project:\r\n```\r\ncd component \r\nnpm link ../app/node_modules/react\r\n```\r\nthen restart your app","updated_at":"2021-09-07T08:16:06Z","created_at":"2021-09-07T08:16:06Z","creator_user_login":"Yrobot"}
{"number":13991,"comment_id":"915331456","body":"> This problem can also come up when you use npm link or an equivalent. In that case, your bundler might “see” two Reacts — one in application folder and one in your library folder. Assuming myapp and mylib are sibling folders, one possible fix is to run npm link ../myapp/node_modules/react from mylib. This should make the library use the application’s React copy.\r\n\r\nUsing this command from [react-native documentation](https://reactjs.org/warnings/invalid-hook-call-warning.html#duplicate-react) in order to link react version from my app and my local lib did the job 👍","updated_at":"2021-09-08T15:17:18Z","created_at":"2021-09-08T15:17:08Z","creator_user_login":"PABourdais"}
{"number":13991,"comment_id":"915652017","body":"Any insight on why there are multiple react instances? I've set react and react-dom as peerdependencies in the imported library but still need to set alias to avoid this error.","updated_at":"2021-09-09T00:01:41Z","created_at":"2021-09-09T00:01:41Z","creator_user_login":"Shikamaru1995"}
{"number":13991,"comment_id":"916670731","body":"```\r\nimport { useState } from 'react';\r\nimport \"./Searchbar.css\"\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\nimport { Button } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Searchbar() {\r\n    const history = useHistory();\r\n    const[input, setInput] = useState('');\r\n   \r\n\r\n    const search = (e) =>{\r\n        e.preventDefault();\r\n\r\n        // when the click enter button \r\n        \r\n        history.push(\"/search\")\r\n    }\r\n\r\n    return (\r\n        <form className=\"search\">\r\n            <div className=\"search_box\">\r\n                <SearchIcon className=\"search_icon\" />\r\n                <input value={input} onChange={e => setInput(e.target.value)}></input>\r\n                <MicIcon />\r\n            </div>\r\n\r\n            <div className=\"search_cards\">\r\n               <Button type='submit' onClick={search} variant=\"outlined\">Google Search</Button>\r\n               <Button variant=\"outlined\">I'm Feeling Lucky</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Searchbar; \r\n```\r\nthis is the my code. i have tried to use **useHistory** hook to redirect to the searchpage when i have clicked that search button.\r\nbut after adding Use History hook it displays message like\r\n\r\n> Invalid hook call. Hooks can only be called inside of the body of a function component.\r\n\r\nis it wrong that the way i have called **useHistory** hook???","updated_at":"2021-09-10T06:46:27Z","created_at":"2021-09-10T06:44:36Z","creator_user_login":"Dimuthu-10"}
{"number":13991,"comment_id":"921609349","body":"function  App (){\r\n  const counter = useSelector(state => state.counter);\r\n  const log = useSelector(state => state.log);\r\n  return (\r\n    <div className=\"App\">\r\n     Hello world {counter} {log}\r\n    </div>\r\n  );\r\n}\r\n\r\nI'm also facing same issue, what is wrong in it? but using redux dev tools I can see the changes as well","updated_at":"2021-09-17T08:45:18Z","created_at":"2021-09-17T08:27:48Z","creator_user_login":"yedhukrishnagirish"}
{"number":13991,"comment_id":"933018966","body":"I had import React from '**R**eact'; \r\n\r\ninstead of \r\n\r\nimport React from 'react';\r\n\r\n","updated_at":"2021-10-03T20:20:10Z","created_at":"2021-10-03T20:20:10Z","creator_user_login":"ExtraGG"}
{"number":13991,"comment_id":"941198264","body":"This is extremely frustrating. Everything works on the development and things break on production. And I can't find why. I read your documentation on possibilities, and I have followed the rules of hooks, and I have used only one react, etc etc.\r\n\r\nThis has now taken almost two complete days for me and still no progress. If it breaks on production, how on Earth you are not reporting it in the development?\r\n\r\nI create Android applications using Java, and when I build the application, either it gets built or it won't. It's that simple. Then what's the point of having a compiler?\r\n\r\nI don't even know how to debug this. In a real-world application with literally hundreds of components, it's certainly impossible to follow trial-and-error method. We need a systematic approach for this.\r\n\r\nI should be notified of all possible syntactic errors, **WHILE THE COMPILER BUILDS**.\r\n\r\nIt's acceptable to have logical problems at run-time. It's acceptable to have null references at run-time. But errors related to syntax, that's totally unacceptable. Please do something about it.","updated_at":"2021-10-12T17:00:10Z","created_at":"2021-10-12T17:00:10Z","creator_user_login":"Nefcanto"}
{"number":13991,"comment_id":"942400108","body":"This is breaking for me.\r\nhttps://stackblitz.com/edit/react-ts-rawdv6?file=index.tsx","updated_at":"2021-10-13T15:06:47Z","created_at":"2021-10-13T15:06:47Z","creator_user_login":"sujit510"}
{"number":13991,"comment_id":"943303620","body":"Hello,\r\n\r\nI am trying to render a storybook component which is rendering antd / react styled components from a microfront end application. But failed with this-\r\n\r\nUncaught Error: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\r\n1. You might have mismatching versions of React and the renderer (such as React DOM)\r\n2. You might be breaking the Rules of Hooks\r\n3. You might have more than one copy of React in the same app\r\n\r\nStorybook >6, react>17, redux>17, webpack>5","updated_at":"2021-10-14T12:20:58Z","created_at":"2021-10-14T12:20:58Z","creator_user_login":"AnubhutiRoX"}
{"number":13991,"comment_id":"943698221","body":"Im using expo and electron with react-hook-forms. It was working fine for a while until it wasn't. Now its not working at all\r\n\r\nSteps to reproduce:\r\n\r\n````\r\nexpo init --name test --template blank\r\ncd test\r\nyarn add -D @expo/electron-adapter\r\nyarn expo-electron\r\nyarn add react-hook-forms--save\r\n````\r\n\r\n````javascript\r\n// App.js\r\n\r\n...\r\n\r\nexport default function App() {\r\n  const methods = useForm()\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Open up App.js to start working on your app!</Text>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\n...\r\n\r\n````\r\n````\r\nyarn expo-electron start\r\n````\r\n\r\nUncaught Error: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons....\r\n\r\nNo version mismatch or multiple instances\r\n\r\n```console\r\nfoo@bar:~$ npm ls react react-dom\r\n├── react@16.13.1\r\n└── react-dom@16.13.1\r\n````\r\n\r\nEdit:\r\n\r\nFound my solution [here](https://github.com/expo/expo-cli/issues/2835#issuecomment-722952296)\r\n\r\nAdding 'react-hook-form' to whiteListedModules in electron-webpack.js\r\n\r\n````javascript\r\nconst { withExpoAdapter } = require('@expo/electron-adapter');\r\n\r\nmodule.exports = withExpoAdapter({\r\n    projectRoot: __dirname,\r\n    whiteListedModules: [\"react-hook-form\"]\r\n});\r\n````","updated_at":"2021-10-14T20:34:46Z","created_at":"2021-10-14T20:18:43Z","creator_user_login":"spaceghostu"}
{"number":13991,"comment_id":"944442399","body":"I faced same issue today.\r\nmaybe, it is caused if you implement your library and install locally by `npm install ./dir` (you too?).\r\n\r\nIn my case, I solved simply. and maybe you too.\r\n\r\nPlease run following steps instead of `npm install ./dir`.\r\n\r\n```\r\n# In your library\r\n$ npm pack\r\n# you got xxx.tgz by above command\r\n\r\n# In your app\r\n$ npm i ./dir/xxx.tgz\r\n```\r\n\r\nThanks.","updated_at":"2021-10-15T16:40:11Z","created_at":"2021-10-15T16:40:11Z","creator_user_login":"ysuzuki19"}
{"number":13991,"comment_id":"950497709","body":"I'm getting `Error: Invalid hook call. Hooks can only be called inside of the body of a function component` while using functional components and styled-components to make a responsive hamburger menu. I've checked for multiple instances of react and checked the versions of react and react-dom. I'm not seeing where the issue is and need help. [Invalid hook call when making responsive hamburger](https://github.com/MrWil95/Portfolio) \r\n`├─┬ @testing-library/react@11.2.7\r\n│ └── react@17.0.2 deduped\r\n├─┬ react-dom@17.0.2\r\n│ └── react@17.0.2 deduped\r\n├─┬ react-icons@4.3.1\r\n│ └── react@17.0.2 deduped\r\n├─┬ react-router-dom@5.3.0\r\n│ ├─┬ react-router@5.2.1\r\n│ │ ├─┬ mini-create-react-context@0.4.1\r\n│ │ │ └── react@17.0.2 deduped\r\n│ │ └── react@17.0.2 deduped\r\n│ └── react@17.0.2 deduped\r\n├─┬ react-scripts@4.0.3\r\n│ └── react@17.0.2 deduped\r\n└── react@17.0.2`","updated_at":"2021-10-25T03:45:40Z","created_at":"2021-10-25T03:40:21Z","creator_user_login":"MrWil95"}
{"number":13991,"comment_id":"959778032","body":"Thank you for your response! Yes I was, for some reason when installing\nstyled components into my client directory it installed it in a separate\npackage.json file by itself. I had to uninstall and reinstall and it worked\nfine\n\nOn Wed, Nov 3, 2021, 8:39 AM climb719 ***@***.***> wrote:\n\n> @MrWil95 <https://github.com/MrWil95> I am running into the same error\n> and have a similar looking tree, were you able to resolve it?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/facebook/react/issues/13991#issuecomment-959101087>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AUQKVNBYZTKBUCJAAUPSABLUKFCS5ANCNFSM4F7UTLDA>\n> .\n> Triage notifications on the go with GitHub Mobile for iOS\n> <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>\n> or Android\n> <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.\n>\n>\n","updated_at":"2021-11-03T17:50:49Z","created_at":"2021-11-03T17:50:49Z","creator_user_login":"MrWil95"}
{"number":13991,"comment_id":"962814865","body":" Error: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\r\n1. You might have mismatching versions of React and the renderer (such as React DOM)\r\n2. You might be breaking the Rules of Hooks\r\n3. You might have more than one copy of React in the same app\r\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\r\n","updated_at":"2021-11-08T05:03:18Z","created_at":"2021-11-08T05:03:18Z","creator_user_login":"Batutankuma"}
{"number":13991,"comment_id":"970053311","body":"@apieceofbart   your method is great. thank you.\r\n\r\n\r\n","updated_at":"2021-11-16T08:51:46Z","created_at":"2021-11-16T08:51:46Z","creator_user_login":"zsjun"}
{"number":13991,"comment_id":"974731416","body":"Had the same issue (with react component in a library, react app imports the component). My webpack was misconfigured. I had to add react to the externals:\r\n\r\n```javascript\r\n// webpack.config.js\r\nmodule.exports = {\r\n  //...\r\n  externals: {\r\n    react: {\r\n      commonjs: \"react\",\r\n      commonjs2: \"react\",\r\n      amd: \"React\",\r\n      root: \"React\"\r\n    }\r\n  }\r\n  //...\r\n}\r\n```\r\n\r\nCredits go to https://itnext.io/how-to-package-your-react-component-for-distribution-via-npm-d32d4bf71b4f","updated_at":"2021-11-21T00:20:45Z","created_at":"2021-11-21T00:19:07Z","creator_user_login":"TimmFitschen"}
{"number":13991,"comment_id":"983316545","body":"I'm facing the same issue with no idea what to do, since I don't have any control over webpack here.\r\nI have this expo snack that works on their snack website, but not when downloaded, installed, and run (expo start..)\r\nI bet it is the same issue as above, but I think worse since I cannot modify any webpack files.\r\n\r\nhttps://snack.expo.dev/@tones31/expo-camera-hook-break\r\n\r\n------\r\n\r\nYou know, I just gotta say, never give up. I spent 3-4 days on this now, and some amazing person who works on expo decided \"we should let users configure webpack\". So to fix this on expo projects do this\r\n\r\nexpo customize:web\r\nselect webpack (PRESS SPACE)\r\nenter\r\n\r\nThen have this as your webpack.config.js file\r\n```\r\n\r\nconst createExpoWebpackConfigAsync = require('@expo/webpack-config');\r\nconst path = require('path');\r\n\r\nmodule.exports = async function (env, argv) {\r\n  const config = await createExpoWebpackConfigAsync(env, argv);\r\n  // Customize the config before returning it.\r\n  config.resolve.alias = {\r\n    react: path.resolve('./node_modules/react')\r\n  }\r\n  return config;\r\n};\r\n\r\n```\r\n\r\nWOOOO!!!! I can sleep until the next one!","updated_at":"2021-12-01T06:30:58Z","created_at":"2021-12-01T06:02:32Z","creator_user_login":"tones31"}
{"number":13991,"comment_id":"987930027","body":"Wow... there is a lot of discussion here, but I've spent the last half day working through it all and still have no working solution to the \"edit a library in-situ\" problem, even a temporary one.\r\n\r\nDoes anyone have the magic answer for the following configuration? My goal is to develop `mylib` and observe the output in `myapp` as I go.\r\n\r\nUsing _create-react-app_ (react-scripts 4.3.0).\r\n\r\n/repos/mylib/\r\n/repos/myapp/\r\n\r\nFrom /repos/mylib/\r\n```\r\nnpm link\r\n```\r\n\r\nFrom /repos/myapp\r\n```\r\nnpm link mylib\r\n```\r\n\r\nRun the project..\r\n![image](https://user-images.githubusercontent.com/4292237/145037362-2b5ae03e-6ed4-4cce-9ede-9b56cbac1b28.png)\r\n\r\nOk, I've been done over by npm and left with two copies of React; **what's the next step??** I'm not using yarn or anything like that, just plain react-scripts and npm.\r\n\r\nI've heard things like _\"make xyz changes to your webpack.config\"_ (don't have one as this is managed by react-scripts) or _\"use --preserve-symlinks\"_ (where do I put it??). So far none of my trial and error has paid off.\r\n\r\nEither there is a solution, even a temporary workaround (in which case once I know it I'll plaster it all over to prevent someone else having to search as long!!) or I'm just barking up the wrong tree here? Considering the amount of discussion online it feels like a fairly big gap in the workflow.\r\n\r\nAny help greatly appreciated!\r\n","updated_at":"2021-12-07T13:32:55Z","created_at":"2021-12-07T13:32:55Z","creator_user_login":"RobTF"}
{"number":13991,"comment_id":"990874877","body":"I'm trying to use hooks from @ apollo / client (useMutation, useQuery) but I got the error: \r\nUnhandled Rejection (Error): Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\r\n1. You might have mismatching versions of React and the renderer (such as React DOM)\r\n2. You might be breaking the Rules of Hooks\r\n3. You might have more than one copy of React in the same app\r\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.","updated_at":"2021-12-10T11:04:53Z","created_at":"2021-12-10T11:04:53Z","creator_user_login":"Meshak-okonda"}
{"number":13991,"comment_id":"990931025","body":"Thanks, yes agreed, I am breaking the rule of hooks as I have two copies of React loaded due to the behaviour of `npm link` (Points 2 and 3 on your list). I am not sure however, how others have managed to work around this when trying to make changes to libraries which are locally installed via `npm link`.\r\n\r\nFor now, I've used NTFS junctions (hard symlinks) to inject the source of the library into the app and rewrite the imports like so\r\n```typescript\r\n//import { foo } from \"@mystuff/packageA\";\r\nimport { foo } from \"../@mystuff/packageA\";\r\n```\r\n\r\nThen once the changes are made and tested, remove the junction and change the import statements back.","updated_at":"2021-12-10T12:25:56Z","created_at":"2021-12-10T12:25:56Z","creator_user_login":"RobTF"}
{"number":13991,"comment_id":"995762009","body":"Same issue solved in Windows by changing the way I enter the path from which I call `npm run dev.`\r\n\r\nIt didn't work at all if the path starts with lowercase c:\r\n\r\nIt works well if the path starts with a capital C:","updated_at":"2021-12-16T12:16:27Z","created_at":"2021-12-16T12:16:27Z","creator_user_login":"hernaneche"}
{"number":13991,"comment_id":"999051634","body":"Trying to use my `npm link` library from a create-react-app after trying the recommended fix (linking to a single react version) as detailed in https://reactjs.org/warnings/invalid-hook-call-warning.html#duplicate-react, I get the following:\r\n\r\n```\r\nThere might be a problem with the project dependency tree.\r\nIt is likely not a bug in Create React App, but something you need to fix locally.\r\n\r\nThe react-scripts package provided by Create React App requires a dependency:\r\n\r\n  \"jest\": \"26.6.0\"\r\n\r\nDon't try to install it manually: your package manager does it automatically.\r\n```\r\n\r\nnot sure why this is the case because I don't have any version of jest installed in my hook library.\r\n\r\nUPDATE: I actually _was_ able to resolve the issue by the advice mentioned in  https://reactjs.org/warnings/invalid-hook-call-warning.html#duplicate-react - but be warned, you must do all the linking in the same terminal! (or at least opening a new terminal after issuing all the `link`s you need.) I posted here after quickly running the `npm link` command to the react version I wanted to use and ran into this weird issue. Just a word of advice to doublecheck all your links, you can issue `npm ls -g --depth=0 --link=true` in a terminal to see them all. It helped me more clearly see what I was doing.","updated_at":"2021-12-27T22:27:14Z","created_at":"2021-12-21T19:50:45Z","creator_user_login":"princefishthrower"}
{"number":13991,"comment_id":"1000989931","body":"> \r\n\r\n\r\n\r\n> @apieceofbart That worked for me. Thanks for the suggestion. 👍\r\n\r\n","updated_at":"2021-12-25T08:13:14Z","created_at":"2021-12-25T08:13:14Z","creator_user_login":"ClausClaus"}
{"number":13991,"comment_id":"1001934039","body":"When dealing with a few levels of dependencies locally in our monorepo, building is fine but testing raised the hooks error with multiple copies of React being installed for local development (they are peer dependencies, of course). My solution was forcing jest to resolve all the `react` modules from the same place, for the package being tested. I added this to the jest config:\r\n\r\n```javascript\r\nmoduleNameMapper: {\r\n    '^react$': '<rootDir>/node_modules/react'\r\n  },\r\n```","updated_at":"2021-12-28T08:23:59Z","created_at":"2021-12-28T08:23:59Z","creator_user_login":"erango"}
{"number":13991,"comment_id":"1003185457","body":"Probably obvious to most but: `React.FunctionComponent`s can't be called from the render function of class `React.Component`s.\r\n\r\nA concrete example might be: your `App` is a class that extends `React.Component` and in it's render function you try to use an exported `React.FunctionComponent` that calls `useState`.\r\n\r\nNow that I've figured it out, it seems clear that I was violating `(2): Breaking the Rules of Hooks:  Do not call hooks from class components`. Throwing it out here in case it helps anyone.","updated_at":"2021-12-30T21:23:24Z","created_at":"2021-12-30T21:23:24Z","creator_user_login":"cubisttriangle"}
{"number":13991,"comment_id":"1003553389","body":"> This is extremely frustrating. Everything works on the development and things break on production. And I can't find why. I read your documentation on possibilities, and I have followed the rules of hooks, and I have used only one react, etc etc.\r\n> \r\n> This has now taken almost two complete days for me and still no progress. If it breaks on production, how on Earth you are not reporting it in the development?\r\n> \r\n> I create Android applications using Java, and when I build the application, either it gets built or it won't. It's that simple. Then what's the point of having a compiler?\r\n> \r\n> I don't even know how to debug this. In a real-world application with literally hundreds of components, it's certainly impossible to follow trial-and-error method. We need a systematic approach for this.\r\n> \r\n> I should be notified of all possible syntactic errors, **WHILE THE COMPILER BUILDS**.\r\n> \r\n> It's acceptable to have logical problems at run-time. It's acceptable to have null references at run-time. But errors related to syntax, that's totally unacceptable. Please do something about it.\r\n\r\nI am beginning to DISLIKE REACT NATIVE and EXPO and everything in between. The loss of time is enormous and annoying.","updated_at":"2022-01-01T12:40:31Z","created_at":"2022-01-01T12:40:31Z","creator_user_login":"AnatuGreen"}
{"number":13991,"comment_id":"1014066367","body":"@RobTF were you able to find a proper solution at all? I'm in the exact same situation as you, but your workaround is causing more problems than I can justify dealing with rn.","updated_at":"2022-01-17T01:53:51Z","created_at":"2022-01-17T01:53:51Z","creator_user_login":"M4THYOU"}
{"number":13991,"comment_id":"1027280336","body":"I have just made the boilerplate expo app and it runs fine. When I try to add unit test, I get the error though. \r\n\r\nI have added \r\n`\"test\": \"jest\"`\r\nto the scripts section in package.json. \r\n\r\nI had added a App.test.js file with this contents\r\n\r\n`import React from 'react';\r\nimport renderer from 'react-test-renderer';\r\n\r\nimport App from './App';\r\n\r\ndescribe('<App />', () => {\r\n    it('renders correctly', () => {\r\n        const tree = renderer.create(<App />).toJSON();\r\n        expect(tree).toMatchSnapshot();\r\n    });\r\n});`\r\n\r\nThis is the contents of my App.js for reference (I haven't changed anything)\r\n`import { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Open up App.js to start working on your app!</Text>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n`\r\n\r\nThen, when I run `npm run local` I receive\r\n`$ npm run test\r\n\r\n> guitarapp@1.0.0 test\r\n> jest\r\n\r\n  console.error\r\n    The above error occurred in the <ExpoStatusBar> component:\r\n    \r\n        at ExpoStatusBar\r\n        at View\r\n        at construct (/Users/riggenab/Developer/blah/blah/GApp/node_modules/react-native/jest/mockComponent.js:28:18)\r\n        at App\r\n    \r\n    Consider adding an error boundary to your tree to customize error handling behavior.\r\n    Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.\r\n\r\n      at logCapturedError (../../../../node_modules/react-test-renderer/cjs/react-test-renderer.development.js:10989:7)\r\n      at call (../../../../node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11022:5)\r\n      at callCallback (../../../../node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3662:12)\r\n      at commitUpdateQueue (../../../../node_modules/react-test-renderer/cjs/react-test-renderer.development.js:3683:9)\r\n      at commitLifeCycles (../../../../node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11855:11)\r\n      at apply (../../../../node_modules/react-test-renderer/cjs/react-test-renderer.development.js:14443:7)\r\n      at Object.invokeGuardedCallbackProd (../../../../node_modules/react-test-renderer/cjs/react-test-renderer.development.js:11308:10)\r\n\r\n FAIL  ./App.test.js\r\n  <App />\r\n    ✕ renders correctly (417 ms)\r\n\r\n  ● <App /> › renders correctly\r\n\r\n    Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\r\n    1. You might have mismatching versions of React and the renderer (such as React DOM)\r\n    2. You might be breaking the Rules of Hooks\r\n    3. You might have more than one copy of React in the same app\r\n    See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\r\n\r\n      at resolveDispatcher (node_modules/react/cjs/react.development.js:1476:13)\r\n      at useMemo (node_modules/react/cjs/react.development.js:1531:20)\r\n      at useColorScheme (node_modules/react-native/Libraries/Utilities/useColorScheme.js:19:24)\r\n      at Component (node_modules/expo-status-bar/src/ExpoStatusBar.ios.tsx:17:23)\r\n      at renderWithHooks (../../../../node_modules/react-test-renderer/cjs/react-test-renderer.development.js:6016:18)\r\n      at mountIndeterminateComponent (../../../../node_modules/react-test-renderer/cjs/react-test-renderer.development.js:8744:13)\r\n      at beginWork$1 (../../../../node_modules/react-test-renderer/cjs/react-test-renderer.development.js:9966:16)\r\n      at performUnitOfWork (../../../../node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13800:12)\r\n      at workLoopSync (../../../../node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13728:5)\r\n      at renderRootSync (../../../../node_modules/react-test-renderer/cjs/react-test-renderer.development.js:13691:7)\r\n\r\nTest Suites: 1 failed, 1 total\r\nTests:       1 failed, 1 total\r\nSnapshots:   0 total\r\nTime:        2.271 s, estimated 6 s\r\nRan all test suites.`\r\n\r\nThis is what I see when I run `npm ls react-dom`:\r\n`$ npm ls react-dom\r\nblah@1.0.0 /Users/riggenab/Developer/blah/blah/GApp\r\n├── react-dom@17.0.1\r\n└─┬ react-native-web@0.17.1\r\n  └── react-dom@17.0.1 deduped`\r\n  \r\n  This is what I see when I run `npm ls react-native`:\r\n  `$ npm ls react-native\r\nblah@1.0.0 /Users/riggenab/Developer/blah/blah/GApp\r\n└─┬ react-native@0.64.3\r\n  └─┬ @react-native-community/cli@5.0.1\r\n    └── react-native@0.64.3 deduped\r\n`\r\n\r\nThis is wha tI see when I run `npm ls react`:\r\n`$ npm ls react\r\nblah@1.0.0 /Users/riggenab/Developer/blah/blah/GApp\r\n├─┬ react-dom@17.0.1\r\n│ └── react@17.0.1 deduped\r\n├─┬ react-native-web@0.17.1\r\n│ └── react@17.0.1 deduped\r\n├─┬ react-native@0.64.3\r\n│ ├── react@17.0.1 deduped\r\n│ └─┬ use-subscription@1.5.1\r\n│   └── react@17.0.1 deduped\r\n└── react@17.0.1`\r\n\r\nIf someone could please give some guidance as I am new to expo that would be great.","updated_at":"2022-02-01T20:59:00Z","created_at":"2022-02-01T20:59:00Z","creator_user_login":"riggenab"}
{"number":13991,"comment_id":"1034263313","body":"I got this Invalid hook call error and stuck for a few hours after I upgraded webpack 4 to 5 for my project. I ended up find my vendor list used for DllPlugin not including react, react-dom, I added them back and the error is gone. It's working in webpack 4, not sure why webpack 5 can have this issue.","updated_at":"2022-02-09T22:28:12Z","created_at":"2022-02-09T22:28:12Z","creator_user_login":"roblatprogen"}
{"number":13991,"comment_id":"1034849913","body":"This happened to me in a nextjs app with many nested packages (used as monorepo). The problem was that one of this packages had another `node_modules` folder inside.\r\n\r\n```\r\ncomponents\r\n    FooBarWidget.tsx -> is importing ../packages/foobar\r\nnode_modules\r\npages\r\npackages\r\n    foobar\r\n        node_modules  -> remove this one\r\n        index.tsx\r\n\r\n```\r\n\r\nThis is probably a duplication or version mismatch issue, but It took a while to figure out  that I had to delete the nested node_modules.\r\n\r\nIt would be helpful to indicate this as possible solution in the [warning page](https://reactjs.org/warnings/invalid-hook-call-warning.html)\r\n\r\nSo, make sure you don't have nested `node_modules` in whatever you are importing.","updated_at":"2022-02-10T12:12:00Z","created_at":"2022-02-10T12:12:00Z","creator_user_login":"itsjavi"}
{"number":13991,"comment_id":"1048887605","body":"In case it helps. I had two copies of React, same version, one at the top level, the other one as a dependency of another library, `npm dedup` fixed this.","updated_at":"2022-02-23T15:14:51Z","created_at":"2022-02-23T15:13:22Z","creator_user_login":"roboli"}
{"number":13991,"comment_id":"1056453379","body":"> I had the same issue and I resolved it by adding:\r\n> \r\n> ```\r\n>  alias: {\r\n>         react: path.resolve('./node_modules/react')\r\n>       }\r\n> ```\r\n> \r\n> to `resolve` property in webpack config of my main app.\r\n> \r\n> It's was obviously my mistake of using two copies of React but I agree that it would be great if the error message was better. I think this is maybe similar to: #2402\r\n\r\nso we are adding this to our package.json file right???","updated_at":"2022-03-02T07:28:05Z","created_at":"2022-03-02T07:28:05Z","creator_user_login":"Codingpowerx"}
{"number":13991,"comment_id":"1056509519","body":"> # To people coming from search: please [read this page first](https://reactjs.org/warnings/invalid-hook-call-warning.html). It contains most common possible fixes!\r\n> **Do you want to request a _feature_ or report a _bug_?**\r\n> \r\n> Enhancement\r\n> \r\n> **What is the current behavior?**\r\n> \r\n> I had multiple instances of React by mistake.\r\n> \r\n> When trying to use hooks, got this error: `hooks can only be called inside the body of a function component`\r\n> \r\n> Which is not correct since I was using function components. Took me a while to find the real cause of the issue.\r\n> \r\n> **What is the expected behavior?**\r\n> \r\n> Show the correct error message. Maybe detect that the app has multiple instances of React and say that it may be the reason of bugs.\r\n\r\nHello , please i have compared my react and it resulted to true meaning i do not have two reacts running, but i still get this error printed out ⬇️\r\nreact.development.js:1476 Uncaught Error: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\r\n1. You might have mismatching versions of React and the renderer (such as React DOM)\r\n2. You might be breaking the Rules of Hooks\r\n3. You might have more than one copy of React in the same app\r\nSee https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\r\n    at resolveDispatcher (react.development.js:1476:1)\r\n    at useContext (react.development.js:1484:1)\r\n    at useReduxContext (useReduxContext.js:21:1)\r\n    at useSelector (useSelector.js:125:1) ","updated_at":"2022-03-02T08:01:27Z","created_at":"2022-03-02T08:01:27Z","creator_user_login":"Codingpowerx"}
{"number":13991,"comment_id":"1062717633","body":"I have this problem when linking my own react component library. I read https://reactjs.org/warnings/invalid-hook-call-warning.html but it is not a solution we expected. Is here a way to solve it without doing manual fixes every time?","updated_at":"2022-03-09T09:23:07Z","created_at":"2022-03-09T09:23:07Z","creator_user_login":"guoyunhe"}
{"number":13991,"comment_id":"1076768960","body":"> I have this problem when linking my own react component library. I read https://reactjs.org/warnings/invalid-hook-call-warning.html but it is not a solution we expected. Is here a way to solve it without doing manual fixes every time?\r\n\r\nHave you tried https://github.com/facebook/react/issues/13991#issuecomment-944442399 ?","updated_at":"2022-03-23T20:04:15Z","created_at":"2022-03-23T20:04:15Z","creator_user_login":"kaueDM"}
{"number":13991,"comment_id":"1077034030","body":"> Have you tried [#13991 (comment)](https://github.com/facebook/react/issues/13991#issuecomment-944442399) ?\r\n\r\nI need to live rebuild the library when developing. Making a tarball and install isn't an automatic process.","updated_at":"2022-03-24T03:35:33Z","created_at":"2022-03-24T03:35:33Z","creator_user_login":"guoyunhe"}
{"number":13991,"comment_id":"1077618777","body":"I was having this problem because, for some reason, I had a \"node_modules\" directory in my \"C:\\Users\\myUser\" folder and some of my project (located in my desktop) dependencys was coming from there.\r\n\r\nOnce I deleted that folder everything worked just fine.","updated_at":"2022-03-24T13:18:22Z","created_at":"2022-03-24T13:18:22Z","creator_user_login":"lforalozzo"}
{"number":13991,"comment_id":"1097967576","body":"Hi, is it possible to call functional component from class component? I have a class component that has fluentui@react functional components in render() method and I encountered this error. Thank you\r\nEdit: I switched from Class Component to Functional component and the error still persists.","updated_at":"2022-04-13T14:44:16Z","created_at":"2022-04-13T12:00:14Z","creator_user_login":"sedlaceks"}
{"number":13991,"comment_id":"1098562580","body":"For us users of create-react-app that don't have access to the webpack config, I managed to create an absolutely disgraceful workaround that works with hot-reloading of changed library code that basically relies on just deleting the nested `react` folder from `node_modules` inside the library project. Some caveats:\r\n\r\n* I couldn't get this to work with yarn.\r\n* This won't work if your library has tests, or otherwise requires react to actually be present in `node_modules`. There could be a workaround by temporarily renaming the `react` folder instead of deleting it, but I'm seriously done for the day and don't want to think about it!\r\n\r\n*Edit:* A slight alternative to this workaround is to use `npm link` instead of deleting react, as described at the bottom of [this page](https://reactjs.org/warnings/invalid-hook-call-warning.html), which is linked in the original post. There are a couple of issues with this:\r\n\r\n* The linking is undone when you `npm install`\r\n* It requires your **lib** peer dependency to resolve exactly to the version used by your **app**, otherwise the link fails\r\n* It only works if you have one **app** using the lib. If you have **app2** using the lib, when you run it, the link to **app1** react gives you a second copy of react (and the original error again)\r\n* A workaround might be to run `npm link` when any dependant `app` is run, but this wouldn't work if you wanted to run multiple apps simultaneously.\r\n\r\n### Verify that the delete hack will work\r\n\r\n1. Update the library dependency in `package.json` of the react **app** to point to local library folder (e.g. `\"mylib\": \"../path-to-lib\"`)\r\n2. `npm install`\r\n3. In `node_modules` in the **library** project, delete the `react` folder\r\n4. Try starting the **app** and check that it now works without the hooks error\r\n\r\nIf there's still a problem at this point, the workaround won't work\r\n\r\n### Auto delete `react`\r\n\r\nOk... so now it works, but `npm install` on the library will put the `react` folder back, and we don't want to manually delete it every time, so you guessed it...\r\n\r\n1. Modify the `package.json` of the **library** project so that it deletes the `react` module folder automatically before building. This might vary depending on what your setup is. In my case I'm using `tsdx` to get hot reloading via `rollup`, so I end up modifying my `start` script to the following: `\"node -e \\\"require('fs').rmSync('./node_modules/react', { force: true, recursive: true })\\\" && tsdx watch --noClean\",`\r\n2. Try not to puke","updated_at":"2022-04-14T17:48:17Z","created_at":"2022-04-13T23:10:15Z","creator_user_login":"MikeRippon"}
{"number":13991,"comment_id":"1103847654","body":"I suggest a change to the expected behaviour for a case when `npm link` is being used for local library development. The error *should not happen to begin with*.\r\n\r\nThere's no technical reason for this error to happen. From NodeJS point of view, only `myapp/node_modules/react` matters when building and running `myapp`. `mylib/node_modules/react` shouldn't matter. It should only matter when building `mylib`, assuming that it belongs to `peerDependencies` of `mylib`, not `dependencies`.\r\n\r\nThe solution proposed at https://reactjs.org/warnings/invalid-hook-call-warning.html...\r\n\r\n>Assuming `myapp` and `mylib` are sibling folders, one possible fix is to run `npm link ../myapp/node_modules/react` from `mylib`. This should make the library use the application’s React copy.\r\n\r\n...is not viable, because mylib can be (and usually is being) used in multiple applications. Referencing one application from `mylib` makes it unusable in another one.","updated_at":"2022-04-20T12:01:55Z","created_at":"2022-04-20T11:57:33Z","creator_user_login":"enepomnyaschih"}
{"number":13991,"comment_id":"1105094341","body":"Use the alias in your main project. Then for your library, it will use the alias of your main project. \r\n\r\n`      react : path.resolve(__dirname, './node_modules/react')\r\n`","updated_at":"2022-04-21T11:36:30Z","created_at":"2022-04-21T11:36:30Z","creator_user_login":"Himnashu"}
{"number":13991,"comment_id":"1105197387","body":"> Use the alias in your main project. Then for your library, it will use the alias of your main project.\r\n> \r\n> ` react : path.resolve(__dirname, './node_modules/react')`\r\n\r\nExcellent, except that I had to write `react : path.resolve(process.cwd(), '../../node_modules/react')` since I use monorepo where the webpack config lies deep into scripts folder.","updated_at":"2022-04-21T13:19:58Z","created_at":"2022-04-21T13:19:58Z","creator_user_login":"Kutalia"}
{"number":13991,"comment_id":"1112932139","body":"Okay, when I see this message: **Hooks can only be called inside the body of a function component,** I'm not quite sure what it means. I know of two ways to render something. One is in a function, and the other is in a class that extends React.Component. So when I see **function component**, I don't know which one it's talking about. Does it means my **function** or my class that extends **Component**?\r\n\r\nTwo things would be helpful. First of all, just to be clear, please define the term \"function component.\" (I'm new to JavaScript, which may be part of the problem, but I haven't encountered that term in any of my tutorials.)\r\n\r\nSecond, some examples would be very helpful. In particular, please provide an example of what ***not*** to do. That would be especially helpful, provided it's clearly marked \"Do Not Do It This way. (Naming the object \"Wrong Way\" might also help. ","updated_at":"2022-04-29T06:55:47Z","created_at":"2022-04-29T06:55:47Z","creator_user_login":"SwingGuy1024"}
{"number":13991,"comment_id":"1120421410","body":"Let's say you have a parent component  like below\r\n\r\n```js\r\nimport Sidebar from './sidebar'\r\n\r\nfunction Layout({children}){\r\n  const [open, setOpen] = useState(false)\r\n\r\n  return (\r\n    <div className='layout'>\r\n      <Sidebar isOpen={open} onClose={() => setOpen(prev => !prev)} />\r\n      {children}\r\n    </div>\r\n   )\r\n}\r\n\r\nexport default Layout\r\n```\r\n\r\nAnd then in another component, you use it like this\r\n```js\r\nimport Layout from './layout'\r\n\r\nfunction HomePage(){\r\n\r\n  return (\r\n    <div className='homepage'>\r\n        <h1> Home Component </h1>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout(HomePage) // ERROR: invalid hook call\r\n```\r\nThere is an error because the Layout component is invoked as a regular JavaScript function. To correct it, you can do this\r\n\r\n```js\r\nimport Layout from './layout'\r\n\r\nfunction HomePage(){\r\n\r\n  return (\r\n   <Layout>\r\n     <div className='homepage'>\r\n        <h1> Home Component </h1>\r\n     </div>\r\n   </Layout>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n```","updated_at":"2022-05-08T13:42:04Z","created_at":"2022-05-08T13:42:04Z","creator_user_login":"moses-20"}
{"number":13991,"comment_id":"1120425050","body":"I am using NextJs and I got this message updating to React18 and updating to the latest Next version. \r\n\r\nAfter banging my head for awhile. I just updated each package I'm using the latest version (@latest) and that fixed my problem. Once of the packages must of had a conflict.\r\n\r\nMaybe something with older packages and the newest React version.\r\n\r\nLet me know if this helps.","updated_at":"2022-05-08T14:05:07Z","created_at":"2022-05-08T14:05:07Z","creator_user_login":"danboyle8637"}
{"number":13991,"comment_id":"1120426903","body":"@danboyle8637 \r\nin [this docs](https://nextjs.org/docs/messages/react-version#why-this-error-occurred), Next.js recommend `react@17` now (despite of `latest` keyword).\r\n\r\nI think you can solve this problem with the command `npm i react@17 react-dom@17`.\r\nAfter the while, you can upgrade React version with the command `npm i react@latest react-dom@latest` after Next.js upgraded.","updated_at":"2022-05-08T14:16:13Z","created_at":"2022-05-08T14:16:13Z","creator_user_login":"ysuzuki19"}
{"number":13991,"comment_id":"1128088927","body":"Ran into another elementary cause of this error (on Mac): Improperly named parent directories, such as \"node.js/examples\".","updated_at":"2022-05-16T20:12:22Z","created_at":"2022-05-16T20:11:07Z","creator_user_login":"danielmartin0"}
{"number":13991,"comment_id":"1133029443","body":"I had been getting \"multiple instances of React\" error but via: \"Uncaught Error: Minified React error #321; visit https://reactjs.org/docs/error-decoder.html?invariant=321 for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"  \r\n\r\nWhat has been happening (and I don't understand why because I'm a new learner\" is that when I import useState, the auto-complete in VS Code uses \r\n```import { useState } from \"react/cjs/react.production.min\";```   \r\n\r\ninstead of just   \r\n```import { useState } from \"react\";```\r\n\r\nchanging this solved this issue for me.\r\n\r\n\r\n","updated_at":"2022-05-20T15:19:26Z","created_at":"2022-05-20T15:18:42Z","creator_user_login":"cordovez"}
{"number":13991,"comment_id":"1134137515","body":"I was able to solve it by making sure both my monorepos (lib + app) are using same version of react","updated_at":"2022-05-23T03:35:46Z","created_at":"2022-05-23T03:35:46Z","creator_user_login":"GSingh01"}
{"number":13991,"comment_id":"1139423199","body":"@moses-20 you saved my day!\r\nAll the code was fine except that I was calling the functional component as a regular javascript function and that was the reason of the error.\r\nCalling the functional component as a component (with tags: `<Component>`) solved the issue. Thank you!","updated_at":"2022-05-27T09:00:00Z","created_at":"2022-05-27T09:00:00Z","creator_user_login":"asastre"}
{"number":13991,"comment_id":"1140692886","body":"I'm not sure what is going on fully with my case. Nothing seems to render at all, and the console throws multiple invalid hook issues, mentioning the <Provider> objects.\r\n\r\n\r\nLooking at npm ls react, I see:\r\n\r\n`calculator@0.1.0 /Users/chris/Desktop/reactWebsite/calculator\r\n├─┬ @reduxjs/toolkit@1.8.2\r\n│ └── react@18.1.0 deduped\r\n├─┬ @testing-library/react@13.3.0\r\n│ └── react@18.1.0 deduped\r\n├─┬ react-dom@18.1.0\r\n│ └── react@18.1.0 deduped\r\n├─┬ react-scripts@5.0.1\r\n│ └── react@18.1.0 deduped\r\n└── react@18.1.0`\r\n\r\nSo everything looks good in that regard (I think). I checked and all my components are functional, and I don't believe I'm using hooks anywhere I shouldn't be. Code is here just in case: https://github.com/cmitch/calculator\r\n\r\nI also first noticed this when installing MathJS, and while I uninstalled it this issue is still happening, and I'm not sure how to version control the packages for this case.\r\n\r\nI did notice that the debug statement shown here failed for me (giving me false):\r\n\r\n`// Add this in node_modules/react-dom/index.js\r\nwindow.React1 = require('react');\r\n\r\n// Add this in your component file\r\nrequire('react-dom');\r\nwindow.React2 = require('react');\r\nconsole.log(window.React1 === window.React2);`\r\n\r\nI also noticed when logging that the React1 was set as undefined. Any tips for how to address this problem would be appreciated","updated_at":"2022-05-30T04:45:51Z","created_at":"2022-05-30T04:45:51Z","creator_user_login":"cmitch"}
{"number":13991,"comment_id":"1146696701","body":"> I had the same issue and I resolved it by adding:\r\n> \r\n> ```\r\n>  alias: {\r\n>         react: path.resolve('./node_modules/react')\r\n>       }\r\n> ```\r\n> \r\n> to `resolve` property in webpack config of my main app.\r\n> \r\n> It's was obviously my mistake of using two copies of React but I agree that it would be great if the error message was better. I think this is maybe similar to: #2402\r\n\r\nHow..?? My file doesn't have webpack config file. what should I do? I read dozens of documentation none of them helped. I get the error when I use \"useParamas\".","updated_at":"2022-06-04T22:47:03Z","created_at":"2022-06-04T22:47:03Z","creator_user_login":"WajihaHA61198"}
{"number":13991,"comment_id":"1146697172","body":"I made a project where only one react project exists, but when I call useParamas in one of the components it throws an error (the same react1 === react2 false). I don't know where it is importing that react from. Maybe it's getting from react-router-dom??","updated_at":"2022-06-04T22:52:22Z","created_at":"2022-06-04T22:52:22Z","creator_user_login":"WajihaHA61198"}
{"number":13991,"comment_id":"1146697396","body":"> This happened to me in a nextjs app with many nested packages (used as monorepo). The problem was that one of this packages had another `node_modules` folder inside.\r\n> \r\n> ```\r\n> components\r\n>     FooBarWidget.tsx -> is importing ../packages/foobar\r\n> node_modules\r\n> pages\r\n> packages\r\n>     foobar\r\n>         node_modules  -> remove this one\r\n>         index.tsx\r\n> ```\r\n> \r\n> This is probably a duplication or version mismatch issue, but It took a while to figure out that I had to delete the nested node_modules.\r\n> \r\n> It would be helpful to indicate this as possible solution in the [warning page](https://reactjs.org/warnings/invalid-hook-call-warning.html)\r\n> \r\n> So, make sure you don't have nested `node_modules` in whatever you are importing.\r\n\r\nwhere did you find that duplicate??","updated_at":"2022-06-04T22:55:05Z","created_at":"2022-06-04T22:55:05Z","creator_user_login":"WajihaHA61198"}
{"number":13991,"comment_id":"1155711407","body":"I have the same issue [there](https://github.com/fedeghe/react-vtable) when I try to import it elsewhere.\r\nI tried literally all the suggestions here and [here](https://reactjs.org/warnings/invalid-hook-call-warning.html).  \r\n \r\nIn a test `create-react-app` if I link it and try to render that table component I get the issue.\r\nAt the very beginning I thought it was a webpack problem but, \r\nwithin the table repo [minimal initial tests](https://github.com/fedeghe/react-vtable/tree/master/tests) I tried to switch from \r\n`import VTable from \"../source/VTable\";` to  `import VTable from \"../dist/index.js\";` which is the `main` pointed file in the _package.json_\r\nand everything is fine, and this seems to exclude the `webpack.prod` as a source of the problem (tried unsuccessfully also Webpack 4).\r\n\r\nIn addition if I add the dependency using `yarn add react-vtable@https://github.com/fedeghe/react-vtable.git`\r\n everything is fine! 🙄 \r\n\r\nThanks a lot in advance for any help","updated_at":"2022-06-27T20:53:42Z","created_at":"2022-06-14T21:04:25Z","creator_user_login":"fedeghe"}
{"number":13991,"comment_id":"1158950406","body":"> Não tenho certeza do que está acontecendo totalmente com o meu caso. Nada parece renderizar, e o console lança vários problemas de gancho inválido, mencionando os objetos.\r\n> \r\n> Olhando para npm ls react, vejo:\r\n> \r\n> `calculator@0.1.0 /Users/chris/Desktop/reactWebsite/calculator ├─┬ @reduxjs/toolkit@1.8.2 │ └── react@18.1.0 deduped ├─┬ @testing-library/react@13.3.0 │ └── react@18.1.0 deduped ├─┬ react-dom@18.1.0 │ └── react@18.1.0 deduped ├─┬ react-scripts@5.0.1 │ └── react@18.1.0 deduped └── react@18.1.0`\r\n> \r\n> Então, tudo parece bom nesse sentido (eu acho). Verifiquei e todos os meus componentes estão funcionais, e não acredito que estou usando ganchos em qualquer lugar que não deveria estar. O código está aqui por precaução: https://github.com/cmitch/calculator\r\n> \r\n> Também notei isso pela primeira vez ao instalar o MathJS e, enquanto o desinstalei, esse problema ainda está acontecendo, e não tenho certeza de como controlar a versão dos pacotes para este caso.\r\n> \r\n> Percebi que a instrução debug mostrada aqui falhou para mim (me dando false):\r\n> \r\n> `// Adicione isso em node_modules/react-dom/index.js window.React1 = require('react');\r\n> \r\n> // Adicione isso em seu arquivo de componente require('react-dom'); window.React2 = require('react'); console.log(window.React1 === window.React2);`\r\n> \r\n> Também notei ao logar que o React1 estava definido como indefinido. Qualquer dica de como resolver este problema seria apreciada\r\n\r\nmy problem is the same, please someone helps me :`)","updated_at":"2022-06-17T14:52:31Z","created_at":"2022-06-17T14:52:31Z","creator_user_login":"LiviaMartinss"}
{"number":13991,"comment_id":"1166762672","body":"For me problem was solved when:\r\n```console\r\ncd my-linked-package && rm -rf node_modules\r\nnpm i --legacy-peer-deps\r\n```\r\n\r\nThis way no react (which was a peerDependency) was installed","updated_at":"2022-06-27T02:28:21Z","created_at":"2022-06-27T02:28:21Z","creator_user_login":"Alex0007"}
{"number":13991,"comment_id":"1186579405","body":"@eps1lon , I created a sample client app https://github.com/anmdsystems/my-ts-app\r\nAll parts using same version of react. \r\n\r\nCloning app, npm install, build and start, results with the exact same error.\r\n\r\nIt will really be helpful if we can have a working example of a component library and a typescript react app, in addition to the documentation.\r\n\r\n","updated_at":"2022-07-17T17:47:35Z","created_at":"2022-07-17T17:47:16Z","creator_user_login":"anmdsystems"}
{"number":13991,"comment_id":"1189797588","body":"@anmdsystems \r\nmaybe, your error is caused by your library.\r\nyou can solve the error by changing package configuration in `rollup.config.js`. (`external`/ `globals`)\r\n\r\nsample configuration is in [my public template repository for npm-package](https://github.com/ysuzuki19/npm-package-template). you can use commented lines in my `rollup.config.js` (`external: ...`/ `globals: ...`).","updated_at":"2022-07-20T03:56:56Z","created_at":"2022-07-20T03:56:56Z","creator_user_login":"ysuzuki19"}
{"number":13991,"comment_id":"1190000201","body":"@ysuzuki19 that solves it for me.\r\n\r\nIt seems that when using rollup to bundle a library that uses react you have to explicitly tell rollup to not include react in the final build (using `external`), even when it's listed under `peerDependencies`.","updated_at":"2022-07-20T08:45:33Z","created_at":"2022-07-20T08:45:17Z","creator_user_login":"robfuscator"}
{"number":13991,"comment_id":"1190320061","body":"@ysuzuki19 that fixes it for me as well. Thanks a lot for your help.\r\n\r\nUpdated rollup.config\r\n\r\nimport resolve from \"@rollup/plugin-node-resolve\";\r\nimport commonjs from \"@rollup/plugin-commonjs\";\r\nimport typescript from \"@rollup/plugin-typescript\";\r\nimport postcss from \"rollup-plugin-postcss\";\r\nimport dts from \"rollup-plugin-dts\";\r\nimport babel from 'rollup-plugin-babel';\r\n\r\nconst packageJson = require(\"./package.json\");\r\n\r\nexport default [\r\n  {\r\n    external: ['react', 'react-dom'],\r\n    input: \"src/index.ts\",\r\n    output: [\r\n      {\r\n        file: packageJson.main,\r\n        format: \"cjs\",\r\n        sourcemap: true,\r\n      },\r\n      {\r\n        file: packageJson.module,\r\n        format: \"esm\",\r\n        sourcemap: true,\r\n      },\r\n    ],\r\n    plugins: [\r\n      babel({\r\n        presets: ['@babel/react']\r\n      }),\r\n      resolve(),\r\n      commonjs(),\r\n      typescript({ tsconfig: \"./tsconfig.json\" }),\r\n      postcss(),\r\n    ],\r\n  },\r\n  {\r\n    input: \"dist/esm/types/index.d.ts\",\r\n    output: [{ file: \"dist/index.d.ts\", format: \"esm\" }],\r\n    plugins: [dts()],\r\n    external: [/\\.(css|less|scss)$/],\r\n  },\r\n];","updated_at":"2022-07-20T13:57:38Z","created_at":"2022-07-20T13:56:03Z","creator_user_login":"anmdsystems"}
{"number":13991,"comment_id":"1211053858","body":"I am using redux-saga in a mobile app and I am implementing push notifications. I am not able to use hooks inside the notification listener to dispatch or navigate. It gives me the  \"Invalid hook call. Hooks can only be called inside of the body of a function component.\" error. Could you please shed some light on how the notification listener (event handler) should be implemented if the app is using redux-saga? Here is an example where I get the error:\r\nimport PushNotification from 'react-native-push-notification'; \r\nPushNotification.configure({\r\n    onNotification: function (notification: any ) {\r\n        console.log(NOTIFICATION:\", notification);\r\n        const dispatch = useDispatch();   ///////I get the error on this line\r\n        dispatch(fromNotification.viewNotificationRequested({ messageId: notification.data.MessageId}));\r\n    }\r\n});\r\n\r\nI read in some articles that the Redux-Saga channels could be used for this but I could not find any documentation that could help implementing  channels for push notifications. Any help is appreciated,","updated_at":"2022-08-10T17:51:13Z","created_at":"2022-08-10T17:51:13Z","creator_user_login":"faridseifi"}
{"number":13991,"comment_id":"1217970771","body":"I'm running into this issue while developing a library that uses React as an implementation detail (not in its public API) and hence has a dependency (not a peer dependency) on React. My library is what is called a \"third-party widget\" in the yellow box on [this page](https://reactjs.org/warnings/invalid-hook-call-warning.html). This is not to be confused with a library such as `react-bootstrap` that has React as part of its public API and has a peer dependency on React. In what follows, let's call the former _widget libraries_ and the latter _component libraries_.\r\n\r\nWhile I do understand the problem and have a working solution (see below), I'd still like to ask for best practices/recommendations for my use case here because I don't think my solution is the most elegant.\r\n\r\nLet's assume the following situation:\r\n* My library (let's call it `lib`) is a widget library with a dependency on React in some semver version range, say `react@^18`\r\n* `lib` further has a dependency on some component library in some semver version range, say `react-bootstrap@^2`\r\n* There is an application (let's call it `app`) that has a dependency on `lib`\r\n* `app` happens to have a dependency on React as well, but in a semver version range incompatible with the above, say `react@^17`\r\n* `app` also happens to have a dependency on the same component library as `lib` does, this time in a compatible semver version range, say `react-bootstrap@^2`\r\n\r\nThen `app` runs into the error explained [here](https://reactjs.org/warnings/invalid-hook-call-warning.html) as soon as `react-bootstrap` calls a hook from within `lib`.\r\n\r\nI created a reproducible example [here](https://github.com/ms-tng/react-instances-repro). You can see what happens here: Before the change in [this commit](https://github.com/ms-tng/react-instances-repro/commit/a2da9b6193352e42752fa915e8cfd8b4d5932f9b), a package manager (I tested it with Yarn) would produce this folder structure (irrelevant parts omitted):\r\n\r\n* `app`\r\n  * `node_modules`\r\n    * `react` (v17)\r\n    * `react-dom` (v17)\r\n    * `lib`\r\n      * `node_modules`\r\n        * `react` (v18)\r\n        * `react-dom` (v18)\r\n        * `react-bootstrap`\r\n\r\nHere, `react-bootstrap` imports the same version of `react` that `lib` does and everything works fine. After the change (which just adds a dependency on `react-bootstrap@^2` to `app`), the folder structure turns into this:\r\n\r\n* `app`\r\n  * `node_modules`\r\n    * `react` (v17)\r\n    * `react-dom` (v17)\r\n    * `react-bootstrap`\r\n    * `lib`\r\n      * `node_modules`\r\n        * `react` (v18)\r\n        * `react-dom` (v18)\r\n\r\nI.e. `react-bootstrap` is hoisted to the top-level `node_modules` folder. Consequently, `react-bootstrap` now imports the version of `react` that `app` uses, even when it is itself imported from `lib`, which is wrong.\r\n\r\nWhat would be the recommended change to `lib` to make it work in any application regardless of what that application's dependencies happen to be?\r\n\r\nSo far, the only solution I came up with is to include `react-bootstrap` (and all other component libraries it depends on) into the bundle of `lib` rather than declaring it as an external dependency, which is acceptable but in a way runs counter to the idea of package management. Any other ideas?\r\n\r\nThanks in advance.","updated_at":"2022-08-17T12:53:25Z","created_at":"2022-08-17T12:53:25Z","creator_user_login":"ms-tng"}
{"number":13991,"comment_id":"1224170629","body":"I do not see my issue addressed in the above comments (but please correct me if I'm missing it). My hooks are only used in the body of functional components and I do not have two versions of react running (per the window.react test, I get true). \r\nI am getting the same error message ('invalid hook call') but only when trying to implement react-router-dom. The nav component that utilizes react-router-dom does not use any hooks.","updated_at":"2022-08-23T14:39:05Z","created_at":"2022-08-23T14:39:05Z","creator_user_login":"laurynnlowe"}
{"number":13991,"comment_id":"1232018349","body":"I'm gonna say this in case anyone is so stupid like me and made the same mistake. I had a folder for back and front project and by mistake I installed a package in parent folder instead of front folder. that was the two versions I had of react. So remove node_modules in parent folder and package.json and installed the package in front folder.","updated_at":"2022-08-30T18:30:32Z","created_at":"2022-08-30T18:30:32Z","creator_user_login":"mbol8309"}
{"number":13991,"comment_id":"1249936457","body":"I tried all the troubleshooting tips listed on the React page but none of them worked. I tried doing window.React1 === window.React2 and it returns true. I checked with `npm ls react` as well and the React versions are the same between react and react-dom (18.2.0). I have created a minimal repo that produces the error. \r\nhttps://github.com/slcao2/react-error-minimal\r\nIt gives the following error\r\n```\r\nreact.production.min.js:25 Uncaught TypeError: Cannot read properties of null (reading 'useState')\r\n    at O (react.production.min.js:25:394)\r\n    at s (MockComp.jsx:4:29)\r\n    at index.js:10:3\r\n```\r\nAny ideas?","updated_at":"2022-09-16T23:35:11Z","created_at":"2022-09-16T23:35:11Z","creator_user_login":"slcao2"}
{"number":13991,"comment_id":"1249938828","body":"> Any ideas?\r\n\r\nTry:\r\n\r\n```tsx\r\nroot.render(\r\n  <MockComp />,\r\n);\r\n```\r\n\r\nNote the jsx instead of calling the function directly.","updated_at":"2022-09-16T23:42:23Z","created_at":"2022-09-16T23:42:23Z","creator_user_login":"mpeyper"}
{"number":13991,"comment_id":"1249944648","body":"> > Any ideas?\r\n> \r\n> Try:\r\n> \r\n> ```tsx\r\n> root.render(\r\n>   <MockComp />,\r\n> );\r\n> ```\r\n> \r\n> Note the jsx instead of calling the function directly.\r\n\r\nWorks. Thanks!","updated_at":"2022-09-17T00:00:22Z","created_at":"2022-09-17T00:00:22Z","creator_user_login":"slcao2"}
{"number":13991,"comment_id":"1273729151","body":"> Lerna monorepos suffer from this as well when a custom hook is defined in one package and used by another as the symlinked dependencies use their own copy of react.\r\n> \r\n> I have a (hacky) workaround at the moment using [`npm-link-shared`](https://www.npmjs.com/package/npm-link-shared) and a `prestart` npm script to essentially replace the one package's `react` dependency with a symlink to the other's, so they use the same instance.\r\n> \r\n> ```json\r\n> \"prestart\": \"npm-link-shared ./node_modules/<other package>/node_modules . react\"\r\n> ```\r\n\r\nAfter running `npm run prestart` I'm getting this\r\n\r\nWill be installing modules from `./node_modules/myLibrary/node_modules/` to `./`...\r\nRestricted to the following modules [ 'react' ]\r\nAbandoning linking, directory does not exist: `./node_modules/myLibrary/node_modules/`\r\n\r\nAny idea?","updated_at":"2022-10-10T19:35:43Z","created_at":"2022-10-10T19:33:21Z","creator_user_login":"arshak-grigoryan"}
{"number":13991,"comment_id":"1273794763","body":"> Any idea?\r\n\r\nIf that directory doesn’t exist then there are three possible reasons I can think of:\r\n\r\n1. node modules have not been installed for `myLibrary` (via `npm install` or `lerna bootstrap`)\r\n2. You are using lerna’s “hoisting” feature so it’s being installed into the root directory instead\r\n3. `myLibrary` is not the cause of the duplicate react installation and it’s coming from a different package\r\n\r\nThere’s probably other explanations as well that I’m not thinking of. Would be easier to help with a repo that demonstrates the issue.","updated_at":"2022-10-10T20:34:13Z","created_at":"2022-10-10T20:34:13Z","creator_user_login":"mpeyper"}
{"number":13991,"comment_id":"1274126734","body":"> I had the same issue and I resolved it by adding:\r\n> \r\n> ```\r\n>  alias: {\r\n>         react: path.resolve('./node_modules/react')\r\n>       }\r\n> ```\r\n> \r\n> to `resolve` property in webpack config of my main app.\r\n> \r\n> It's was obviously my mistake of using two copies of React but I agree that it would be great if the error message was better. I think this is maybe similar to: #2402\r\n\r\nI have react app created with create-react-app\r\nI installed react-app-rewired for having access to app configuration\r\nChanged start script to this\r\n`\"start\": \"react-app-rewired start\"`\r\nCreated config-overrides,js in the root directory and added this\r\n\r\n```\r\nconst path = require(\"path\");\r\n\r\nmodule.exports = function override(config, env) {\r\n  config.resolve.alias = {...config.resolve.alias, react: path.resolve('./node_modules/<package-name>/node_modules/react')}\r\n\r\n  return config;\r\n};\r\n```","updated_at":"2022-10-11T06:02:54Z","created_at":"2022-10-11T06:00:58Z","creator_user_login":"arshak-grigoryan"}
{"number":13991,"comment_id":"1274250382","body":"> I'm gonna say this in case anyone is so stupid like me and made the same mistake. I had a folder for back and front project and by mistake I installed a package in parent folder instead of front folder. that was the two versions I had of react. So remove node_modules in parent folder and package.json and installed the package in front folder.\r\n\r\nTurns out, I am a stupid person as well!\r\nThanks so much, this helped my case.","updated_at":"2022-10-11T07:55:16Z","created_at":"2022-10-11T07:55:16Z","creator_user_login":"CapedCrusader03"}
{"number":13991,"comment_id":"1281921986","body":"I got this warning after upgrading from v17 to v18\r\n![image](https://user-images.githubusercontent.com/74252743/196362885-08e80c1d-303f-4452-abba-1f0eb0db9e80.png)\r\n![image](https://user-images.githubusercontent.com/74252743/196363216-62695c81-4cd7-406b-b89c-d7e3c9e33da8.png)\r\n","updated_at":"2022-10-18T08:01:13Z","created_at":"2022-10-18T07:19:37Z","creator_user_login":"chienn1402"}
{"number":13991,"comment_id":"1281970948","body":"> I got this warning after upgrading from v17 to v18 ![image](https://user-images.githubusercontent.com/74252743/196362885-08e80c1d-303f-4452-abba-1f0eb0db9e80.png) ![image](https://user-images.githubusercontent.com/74252743/196363216-62695c81-4cd7-406b-b89c-d7e3c9e33da8.png) \r\n\r\nsame here","updated_at":"2022-10-18T08:01:27Z","created_at":"2022-10-18T08:00:55Z","creator_user_login":"marcushoang"}
{"number":13991,"comment_id":"1282076039","body":"I'm having a similar issue with an SPFX reactjs/TypeScript project. I have actually deployed the webpart to SharePoint and it was working for weeks without trouble. Then one day clicking within the WebPart (it loads and shows the start screen) it errors and shows:\r\n```\r\nInvalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons: 1. You might have mismatching versions of React and the renderer (such as React DOM) 2. ....and so forth.\r\n```\r\nIn the browser console I get:\r\n```\r\n        \r\n       Error: Minified React error #321; visit https://reactjs.org/docs/error-decoder.html?invariant=321 for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\r\n    at Object.ao (sp-webpart-workbench-assembly\r\n    at t.useRef (sp-webpart-workbench-assembly_\r\n    at office-ui-fabric-react-bundle_none_\r\n    at Yr (react-dom-16-bundle_none\r\n    at To (react-dom-16-bundle_none_\r\n    at ys (react-dom-16-bundle_none_\r\n    at pc (react-dom-16-bundle_none_\r\n    at uc (react-dom-16-bundle_none_\r\n    at ac (react-dom-16-bundle_none_\r\n    at react-dom-16-bundle_none\r\n        \r\n       Error: Minified React error #321; visit https://reactjs.org/docs/error-decoder.html?invariant=321 for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\r\n    at Object.ao (sp-webpart-workbench-assembly_)\r\n    at t.useRef (sp-webpart-workbench-assembly_)\r\n    at office-ui-fabric-react-bundle_none_\r\n    at Yr (react-dom-16-bundle_none_\r\n    at To (react-dom-16-bundle_none_\r\n    at ys (react-dom-16-bundle_none_\r\n    at pc (react-dom-16-bundle_none_\r\n    at uc (react-dom-16-bundle_none_\r\n    at ac (react-dom-16-bundle_none\r\n    at react-dom-16-bundle_none_\r\nns @ react-dom-16-bundle_none_\r\nn.callback @ react-dom-16-bundle_none_\r\npr @ react-dom-16-bundle_none_\r\nss @ react-dom-16-bundle_none_\r\nbc @ react-dom-16-bundle_none_\r\nt.unstable_runWithPriority @ react-dom-16-bundle_none_\r\nGi @ react-dom-16-bundle_none_\r\nhc @ react-dom-16-bundle_none_\r\nac @ react-dom-16-bundle_none_\r\n(anonymous) @ react-dom-16-bundle_none_\r\nt.unstable_runWithPriority @ react-dom-16-bundle_none_\r\nGi @ react-dom-16-bundle_none_\r\nQi @ react-dom-16-bundle_none_\r\nqi @ react-dom-16-bundle_none_\r\nU @ react-dom-16-bundle_none_\r\nQt @ react-dom-16-bundle_none_\r\n2react-dom-16-bundle_none_\r\n        \r\n       Error: Minified React error #321; visit https://reactjs.org/docs/error-decoder.html?invariant=321 for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\r\n    at Object.ao (sp-webpart-workbench-assembly_\r\n    at t.useEffect (sp-webpart-workbench-assembly_\r\n    at d (office-ui-fabric-react-bundle_none_\r\n    at l (office-ui-fabric-react-bundle_none_\r\n    at Yr (react-dom-16-bundle_none_\r\n    at ys (react-dom-16-bundle_none_\r\n    at pc (react-dom-16-bundle_none_\r\n    at uc (react-dom-16-bundle_none_\r\n    at ac (react-dom-16-bundle_none_\r\n    at react-dom-16-bundle_none_\r\n```\r\nI have tried pretty much everything in the above thread. The unique/odd thing is, after trying some of the things above it starts working, (webpart works entirely in workbench and when built, packaged and deployed) for a few hours but overnight it starts showing the error again.\r\n\r\nVersions I'm using:\r\n```\r\n \"dependencies\": {\r\n    \"@fluentui/react\": \"^8.62.4\",\r\n    \"@microsoft/rush-stack-compiler-4.2\": \"^0.1.2\",\r\n    \"@microsoft/sp-core-library\": \"1.13.1\",\r\n    \"@microsoft/sp-lodash-subset\": \"1.13.1\",\r\n    \"@microsoft/sp-office-ui-fabric-core\": \"1.13.1\",\r\n    \"@microsoft/sp-property-pane\": \"1.13.1\",\r\n    \"@microsoft/sp-webpart-base\": \"1.13.1\",\r\n    \"@pnp/graph\": \"^3.1.0\",\r\n    \"@pnp/sp\": \"^3.2.0\",\r\n    \"@pnp/spfx-controls-react\": \"3.6.0\",\r\n    \"@react-pdf/renderer\": \"^2.1.1\",\r\n    \"html-to-image\": \"^1.9.0\",\r\n    \"html2canvas\": \"^1.4.1\",\r\n    \"html2pdf.js\": \"^0.10.1\",\r\n    \"jspdf\": \"^2.5.1\",\r\n    \"office-ui-fabric-react\": \"7.174.1\",\r\n    \"react\": \"16.13.1\",\r\n    \"react-collapsible\": \"^2.10.0\",\r\n    \"react-csv\": \"^2.2.2\",\r\n    \"react-dom\": \"16.13.1\",\r\n    \"react-fade-in\": \"^2.0.1\",\r\n    \"react-icons\": \"^4.3.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@microsoft/sp-build-web\": \"1.13.1\",\r\n    \"@microsoft/sp-module-interfaces\": \"1.13.1\",\r\n    \"@microsoft/sp-tslint-rules\": \"1.13.1\",\r\n    \"@types/jquery\": \"^3.5.14\",\r\n    \"@types/react\": \"16.9.51\",\r\n    \"@types/react-dom\": \"16.9.8\",\r\n    \"@types/webpack-env\": \"1.13.1\",\r\n    \"ajv\": \"~5.2.2\",\r\n    \"gulp\": \"~4.0.2\",\r\n    \"spfx-fast-serve-helpers\": \"~1.13.0\"\r\n```\r\nThings I've tried:\r\n- made sure that there are no hooks used outside of functions.\r\n- matched react and react-dom versions.\r\n- updated fluent @fluentui/react/node_modules/@fluentui/react-hooks - could this be conflict?\r\n- Disabled any useEffect and useRef in use within the code.","updated_at":"2022-10-18T11:43:26Z","created_at":"2022-10-18T09:18:07Z","creator_user_login":"cardinalpipkin"}
{"number":13991,"comment_id":"1285715738","body":"In my case the problem was corrupted yarn links (altough I was using npm for the problematic project). Removing everything from `~/.config/yarn/link` and reinstalling project helped","updated_at":"2022-10-20T15:13:58Z","created_at":"2022-10-20T15:13:31Z","creator_user_login":"pabichw"}
{"number":13991,"comment_id":"1286590260","body":"In my case problem was that i called class component in render of function component","updated_at":"2022-10-21T07:48:34Z","created_at":"2022-10-21T07:48:34Z","creator_user_login":"Nevinia210"}
{"number":13991,"comment_id":"1287117352","body":"I had the same issue as @cardinalpipkin with SPFx,\r\n\r\nthis library: @microsoft/office-ui-fabric-react-bundle was retired and needed to be replaced with\r\nthis one: @fluentui/react\r\n\r\nI hope this helps someone","updated_at":"2022-10-21T15:23:29Z","created_at":"2022-10-21T15:23:29Z","creator_user_login":"g10112"}
{"number":13991,"comment_id":"1299008469","body":"Nothing worked for me. What fixed it for me was updating `styled-components` dependency to version 5.3.0","updated_at":"2022-11-01T19:27:47Z","created_at":"2022-11-01T19:27:47Z","creator_user_login":"jjjhill"}
{"number":13991,"comment_id":"1308981452","body":"To learn React I used create-react app to start project. Now I want to test my component:\r\nData.js\r\n```\r\nimport { useState } from \"react\"\r\n\r\nfunction Data(defaultValue, setValue) {\r\n    let value = defaultValue || null;\r\n    let setter = setValue || function(newValue){value = newValue;};\r\n\r\n    return {\r\n        get() {\r\n            return value;\r\n        },\r\n        set(value) {\r\n            setter(value);\r\n        }\r\n    }\r\n};\r\n\r\nfunction useData(defaultValue) {\r\n    let [value, setValue] = useState(defaultValue);\r\n    return new Data(value, setValue);\r\n}\r\n\r\nexport { useData };\r\n```\r\n\r\nData.test.js:\r\n```\r\nimport { render, screen } from '@testing-library/react';\r\nimport { useData } from './Data';\r\n\r\nconst value = 'standaard'\r\n\r\ntest('test useData', () => {\r\n    let data = useData(value);\r\n    expect(data.get()).toBe(value);\r\n});\r\n```\r\n\r\nresults in:\r\n FAIL  src/Data.test.js\r\n  ● Console\r\n\r\n    console.error\r\n      Warning: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\r\n      1. You might have mismatching versions of React and the renderer (such as React DOM)\r\n      2. You might be breaking the Rules of Hooks\r\n      3. You might have more than one copy of React in the same app\r\n      See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.\r\n\r\n      16 |\r\n      17 | function useData(defaultValue) {\r\n    > 18 |     let [value, setValue] = useState(defaultValue);\r\n         |                                     ^\r\n      19 |     return new Data(value, setValue);\r\n      20 | }\r\n      21 |\r\n\r\n      at printWarning (node_modules/react/cjs/react.development.js:209:30)\r\n      at error (node_modules/react/cjs/react.development.js:183:7)\r\n      at resolveDispatcher (node_modules/react/cjs/react.development.js:1592:7)\r\n      at useState (node_modules/react/cjs/react.development.js:1621:20)\r\n      at useData (src/Data.js:18:37)\r\n      at Object.<anonymous> (src/Data.test.js:7:23)\r\n\r\nBeing a dumb monkey trying to learn a new trick I don't know what I'm doing wrong.","updated_at":"2022-11-09T16:01:18Z","created_at":"2022-11-09T16:01:18Z","creator_user_login":"Machine-3R"}
{"number":13991,"comment_id":"1310290417","body":"> alias: {\r\n>         react: path.resolve('./node_modules/react')\r\n>       }\r\n\r\nHi! Where did u add this?","updated_at":"2022-11-10T13:34:52Z","created_at":"2022-11-10T13:34:52Z","creator_user_login":"2203798"}
{"number":13991,"comment_id":"1310588001","body":"> I'm gonna say this in case anyone is so stupid like me and made the same mistake. I had a folder for back and front project and by mistake I installed a package in parent folder instead of front folder. that was the two versions I had of react. So remove node_modules in parent folder and package.json and installed the package in front folder.\r\n\r\nThis was me too - esbuild  with a nested `node_modules` caused this issue. Thanks so much. Reposting for visibility.","updated_at":"2022-11-10T16:48:54Z","created_at":"2022-11-10T16:48:54Z","creator_user_login":"mikeldking"}
{"number":13991,"comment_id":"1320150219","body":"I cloned a node module project to my local system, installed its dependencies, built it and referenced it **locally** in the `package.json` of the React app (Next.js app, to be precise). When I ran `yarn` it installed this module by copying the entire folder including `node_modules` and `.git` instead of just the build output.\r\n\r\nThis is what caused the problem. It was resolved by deleting the `node_modules` folder **inside this module's copy** inside the React app's `node_modules` folder. To automatically resolve this, the following script had to be added to the **node module project's `package.json`:**\r\n\r\n```\r\n\"preinstall\": \"rm -rf node_modules .git\"\r\n```\r\n\r\nRun `yarn install --force` afterwards.","updated_at":"2022-11-18T15:08:11Z","created_at":"2022-11-18T15:07:17Z","creator_user_login":"ADTC"}
{"number":13991,"comment_id":"1350723802","body":"> \r\n\r\n\r\n\r\n> I had the same issue and I resolved it by adding:\r\n> \r\n> ```\r\n>  alias: {\r\n>         react: path.resolve('./node_modules/react')\r\n>       }\r\n> ```\r\n> \r\n> to `resolve` property in webpack config of my main app.\r\n> \r\n> It's was obviously my mistake of using two copies of React but I agree that it would be great if the error message was better. I think this is maybe similar to: #2402\r\n\r\nPlease where do I add this?","updated_at":"2022-12-14T09:32:00Z","created_at":"2022-12-14T09:32:00Z","creator_user_login":"thereal-osas"}
{"number":13991,"comment_id":"1354456868","body":"@thereal-osas @2203798 This is provided you're using webpack. In the webpack config you can define [resolve](https://webpack.js.org/configuration/resolve/) property - that's where added the `alias` section","updated_at":"2022-12-16T09:33:15Z","created_at":"2022-12-16T09:33:15Z","creator_user_login":"apieceofbart"}
{"number":13991,"comment_id":"1372944755","body":"For those who are working with very BASIC React applications with only 1-2 installed libraries, I recommend making sure you installed your libraries correctly and not in the wrong folder. I made this mistake about 5 times before I realized what I was doing wrong (very frustrating when you're a beginner making apps which are supposed to be very simple):\r\nShort React startup guide: https://github.com/CoreyWarren/react-startup-help\r\nThe above tutorial is relevant for the latest React atm, which is React 18.","updated_at":"2023-01-05T23:57:08Z","created_at":"2023-01-05T23:57:08Z","creator_user_login":"CoreyWarren"}
{"number":13991,"comment_id":"1377336874","body":"I was facing the OP's issue as well while trying to make a simple react component library with storybook documentation. I tried everything mentioned in this thread, including `react-app-rewire`. Since I had storybook installed in my component library I decided to use webpack as my bundler for the library. Turns out I was not correctly excluding `react` and `react-dom` from the build configurations in my component library. Who would have guessed webpack's config could be deceptively difficult? \r\n\r\nAnyway, [this SO thread](https://stackoverflow.com/questions/66488492/solve-having-more-than-one-copy-of-react-in-the-same-app) gave me the solution I needed.\r\n```javascript\r\n// webpack.config.js\r\nmodule.exports = {\r\n    /*\r\n    rest of config...\r\n    */\r\n    output: {\r\n        filename: \"index.js\",\r\n        pathinfo: false,\r\n        libraryTarget: 'umd', // In my case, I use libraryTarget as 'umd'. Not sure if relevant\r\n    },\r\n    externals: {\r\n        // Use external version of React\r\n        \"react\": {\r\n            \"commonjs\": \"react\",\r\n            \"commonjs2\": \"react\",\r\n            \"amd\": \"react\",\r\n            \"root\": \"React\"\r\n        },\r\n        \"react-dom\": {\r\n            \"commonjs\": \"react-dom\",\r\n            \"commonjs2\": \"react-dom\",\r\n            \"amd\": \"react-dom\",\r\n            \"root\": \"ReactDOM\"\r\n        }\r\n    },\r\n};\r\n```\r\nI still used `npm link` to link my app's copy of react and react-dom to my component library. Then I was able to link the component library back to the app.\r\n\r\nI'm using `react@18.2.0` for both my app and my library. My app was generated with `create-react-app@5.0.1`.","updated_at":"2023-01-10T14:12:38Z","created_at":"2023-01-10T14:07:11Z","creator_user_login":"frankieali"}
{"number":13991,"comment_id":"1378100192","body":"> I had the same issue and I resolved it by adding:\r\n> \r\n> ```\r\n>  alias: {\r\n>         react: path.resolve('./node_modules/react')\r\n>       }\r\n> ```\r\n> \r\n> to `resolve` property in webpack config of my main app.\r\n> \r\n> It's was obviously my mistake of using two copies of React but I agree that it would be great if the error message was better. I think this is maybe similar to: #2402\r\n\r\nWhere is the webpack.config.js file located? I'm working on Ubuntu Linux","updated_at":"2023-01-11T01:02:13Z","created_at":"2023-01-11T01:02:13Z","creator_user_login":"chibuzoio"}
{"number":13991,"comment_id":"1397920868","body":"this worked for me\r\n\r\nconst [mounted, setMounted] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setMounted(true);\r\n  }, []);\r\n\r\n  if (!mounted) return null;\r\n\r\n\r\n if(mounted) return component","updated_at":"2023-01-20T04:53:26Z","created_at":"2023-01-20T04:53:26Z","creator_user_login":"danmatlam"}
{"number":13991,"comment_id":"1397945473","body":"@danmatlam the second `if` is redundant - just `return component` without it. Also, shouldn't you have an undefined dependency list (not `[]` but just exclude the argument) so that the hook runs every time?","updated_at":"2023-01-20T05:39:53Z","created_at":"2023-01-20T05:39:53Z","creator_user_login":"ADTC"}
{"number":13991,"comment_id":"1405033862","body":"<details>\r\n<summary>react-native < 0.69 (probably)</summary>\r\n> ```\r\n> // metro.config.js\r\n> const path = require(\"path\")\r\n> const Resolver = require(\"metro-resolver\")\r\n> \r\n> module.exports = {\r\n>   // Default ReactNative transformer\r\n>   transformer: {\r\n>     getTransformOptions: async () => ({\r\n>       transform: {\r\n>         inlineRequires: true,\r\n>       },\r\n>     }),\r\n>   },\r\n>   resolver: {\r\n>     // This was added to enable Metro to handle the symlinks that yarn\r\n>     // workspaces places in the node_modules folder.\r\n>     extraNodeModules: new Proxy(\r\n>       {},\r\n>       {\r\n>         get: (target, name) => {\r\n>           return path.join(__dirname, `node_modules/${name}`)\r\n>         },\r\n>       },\r\n>     ),\r\n>     // Make sure we use the local copy of react and react-native\r\n>     resolveRequest: (context, realModuleName, platform, moduleName) => {\r\n>       const clearContext = { ...context, resolveRequest: undefined }\r\n>       const module = moduleName === \"react\" || moduleName === \"react-native\"\r\n>         ? path.join(__dirname, \"node_modules\", realModuleName)\r\n>         : realModuleName\r\n>       return Resolver.resolve(clearContext, module, platform)\r\n>     },\r\n>   },\r\n> }\r\n> ```\r\n</details>\r\n\r\nFor the react-native devs still sticking to this solution: As metro has been upgraded the resolve request also has [a different signature](https://facebook.github.io/metro/docs/configuration#resolverequest). Here is the adjusted code:\r\n\r\n```\r\nresolveRequest: (context, moduleName, platform) => {\r\n  const module =\r\n    moduleName === 'react' || moduleName === 'react-native'\r\n      ? path.join(__dirname, 'node_modules', moduleName)\r\n      : moduleName\r\n  return Resolver.resolve(context, module, platform)\r\n}\r\n```\r\n","updated_at":"2023-01-26T13:50:48Z","created_at":"2023-01-26T13:50:48Z","creator_user_login":"sarahsporck"}
{"number":13991,"comment_id":"1406479921","body":"i am struggling this problem plzz suggest me\r\n","updated_at":"2023-01-27T13:00:52Z","created_at":"2023-01-27T13:00:52Z","creator_user_login":"ramarupnar123"}
{"number":13991,"comment_id":"1406480727","body":"you have a any solution then help me me\r\n","updated_at":"2023-01-27T13:01:31Z","created_at":"2023-01-27T13:01:31Z","creator_user_login":"ramarupnar123"}
{"number":13991,"comment_id":"1413627668","body":"> I got this warning after upgrading from v17 to v18 ![image](https://user-images.githubusercontent.com/74252743/196362885-08e80c1d-303f-4452-abba-1f0eb0db9e80.png) ![image](https://user-images.githubusercontent.com/74252743/196363216-62695c81-4cd7-406b-b89c-d7e3c9e33da8.png)\r\n\r\nSame Here, and is there any remedy?","updated_at":"2023-02-02T12:02:15Z","created_at":"2023-02-02T12:02:15Z","creator_user_login":"technology-me"}
{"number":13991,"comment_id":"1413715548","body":"@technology-me try: https://github.com/facebook/react/issues/13991#issuecomment-1320150219\r\n\r\nAlso read: https://reactjs.org/warnings/invalid-hook-call-warning.html","updated_at":"2023-02-02T13:07:56Z","created_at":"2023-02-02T13:06:44Z","creator_user_login":"ADTC"}
{"number":13991,"comment_id":"1415715845","body":"Pretty sure nothing is wrong with your code (though I can suggest some improvements in a code review - do you want?).\r\n\r\nHave you tried `npm ls react` or `yarn list react`?","updated_at":"2023-02-03T11:05:03Z","created_at":"2023-02-03T11:05:03Z","creator_user_login":"ADTC"}
{"number":13991,"comment_id":"1415818905","body":"Yes, I did. The versions of packages that depend on React are all @18.2.0\r\njust like this:\r\n```\r\n+-- antd@5.1.7\r\n| +-- @ant-design/cssinjs@1.5.6\r\n| | `-- react@18.2.0 deduped\r\n| +-- @ant-design/icons@5.0.1\r\n| | `-- react@18.2.0 deduped\r\n... ...\r\n```\r\n\r\n(I just learned React for a week because of this project, and I'd love to take your advice.）","updated_at":"2023-02-03T12:40:39Z","created_at":"2023-02-03T12:40:39Z","creator_user_login":"technology-me"}
{"number":13991,"comment_id":"1436002549","body":"Thank you for your experience and suggestions, but this is a pure client-side and single-page project, and the directory location of React will not be wrong. I've done something similar to this when I started including React in my project, and no errors occurred.","updated_at":"2023-02-19T14:22:34Z","created_at":"2023-02-19T14:22:34Z","creator_user_login":"technology-me"}
{"number":13991,"comment_id":"1441565097","body":"> I had the same issue and I resolved it by adding:\r\n> \r\n> ```\r\n>  alias: {\r\n>         react: path.resolve('./node_modules/react')\r\n>       }\r\n> ```\r\n> \r\n> to `resolve` property in webpack config of my main app.\r\n> \r\n> It's was obviously my mistake of using two copies of React but I agree that it would be great if the error message was better. I think this is maybe similar to: #2402\r\n\r\nExcellent adding where? .babelrc, tsconfig, webpackconfig?","updated_at":"2023-02-23T11:03:48Z","created_at":"2023-02-23T11:03:48Z","creator_user_login":"ojemuyiwa"}
{"number":13991,"comment_id":"1441947166","body":"> Excellent adding where? .babelrc, tsconfig, webpackconfig?\r\n\r\n> to `resolve` property in webpack config of my main app.","updated_at":"2023-02-23T15:06:48Z","created_at":"2023-02-23T15:06:48Z","creator_user_login":"technology-me"}
{"number":13991,"comment_id":"1455562356","body":"Hi.  I'm wondering if someone can help me work through this.  I have just come across this issue for the first time.  I'm creating an spa with create-react-app.  Newish still to REact, so kinda lost as to my next steps.  The problem from what i can see is in the setup of my folder.  I've made sure to install the dependancies after cd into client.  \r\n\r\nMacBook-Pro client % npm ls react\r\nclient@0.1.0 /Users/peachez/Desktop/Brainstation/projects/PortfolioPage/client\r\n├─┬ @testing-library/react@13.4.0\r\n│ └── react@18.2.0 deduped\r\n├─┬ react-dom@18.2.0\r\n│ └── react@18.2.0 deduped\r\n├─┬ react-router-dom@6.8.2\r\n│ ├─┬ react-router@6.8.2\r\n│ │ └── react@18.2.0 deduped\r\n│ └── react@18.2.0 deduped\r\n├─┬ react-scripts@5.0.1\r\n│ └── react@18.2.0 deduped\r\n└── react@18.2.0\r\n\r\ndoes the above show a double install?  or is that looking right?  I have no hooks even used yet from what i know.  so i figure there can only be an issue with the way the dependencies are being installed.  thank you.  ","updated_at":"2023-03-06T07:08:28Z","created_at":"2023-03-06T07:06:38Z","creator_user_login":"MrPreachez"}
{"number":13991,"comment_id":"1462571320","body":"Throwing this out there in case it helps anyone avoid trying to debug this for a couple hours like I just did.  In my case, it was an error being thrown by a browser extension (the Loom extension specifically).  Turning that extension off made the error go away.","updated_at":"2023-03-09T18:31:25Z","created_at":"2023-03-09T18:31:25Z","creator_user_login":"wilstaley"}
{"number":13991,"comment_id":"1463242869","body":"> Turning that extension off made the error go away.\r\n\r\nWait, what? We'll have to ask our users to turn off certain extensions to use our site? 😂","updated_at":"2023-03-10T04:36:38Z","created_at":"2023-03-10T04:36:38Z","creator_user_login":"ADTC"}
{"number":13991,"comment_id":"1463785579","body":"Same as @wilstaley, debugging for last two days, then this morning a [new error](https://stackoverflow.com/questions/74780472/uncaught-in-promise-typeerror-cannot-convert-undefined-or-null-to-object\r\n) popped for unknown reasons and helped solve the issue\r\n","updated_at":"2023-03-10T13:11:36Z","created_at":"2023-03-10T13:11:36Z","creator_user_login":"muftic"}
{"number":13991,"comment_id":"1474758057","body":"Hi, I am running a backstage app and facing the similar issue of multiple versions of React. Been trying to sort it for the past few days. The above said methods have been tried or in some case not related to my configurations, so no luck yet. I don't have a webpack-config file or so. No hooks that could be altered. My error looks so, in my case I do have 2 versions of React, but not sure how to workaround this issue and make it work. \r\n\r\nError\r\nError\r\n\r\nMessage\r\nInvalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\r\n1. You might have mismatching versions of React and the renderer (such as React DOM)\r\n2. You might be breaking the Rules of Hooks\r\n3. You might have more than one copy of React in the same app\r\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.\r\n\r\nStack Trace\r\nError: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\r\n1. You might have mismatching versions of React and the renderer (such as React DOM)\r\n2. You might be breaking the Rules of Hooks\r\n3. You might have more than one copy of React in the same app\r\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.\r\n    at resolveDispatcher (webpack-internal:///../../node_modules/use-memo-one/node_modules/react/cjs/react.development.js:1465:13)\r\n    at useState (webpack-internal:///../../node_modules/use-memo-one/node_modules/react/cjs/react.development.js:1496:20)\r\n    at useMemoOne (webpack-internal:///../../node_modules/use-memo-one/dist/use-memo-one.esm.js:26:64)\r\n    at useInstanceCount (webpack-internal:///../../node_modules/react-beautiful-dnd/dist/react-beautiful-dnd.esm.js:6973:63)\r\n    at DragDropContext (webpack-internal:///../../node_modules/react-beautiful-dnd/dist/react-beautiful-dnd.esm.js:6983:19)\r\n    at renderWithHooks (webpack-internal:///../../node_modules/react-dom/cjs/react-dom.development.js:14985:18)\r\n    at mountIndeterminateComponent (webpack-internal:///../../node_modules/react-dom/cjs/react-dom.development.js:17811:13)\r\n    at beginWork (webpack-internal:///../../node_modules/react-dom/cjs/react-dom.development.js:19049:16)\r\n    at HTMLUnknownElement.callCallback (webpack-internal:///../../node_modules/react-dom/cjs/react-dom.development.js:3945:14)\r\n    at Object.invokeGuardedCallbackDev (webpack-internal:///../../node_modules/react-dom/cjs/react-dom.development.js:3994:16)","updated_at":"2023-03-18T07:20:35Z","created_at":"2023-03-18T07:20:35Z","creator_user_login":"Remyapraveen"}
{"number":13991,"comment_id":"1483755730","body":"### Don't forget to call the function instead of just referencing it.\r\n```\r\nconst dispatch = useDispatch()  \r\n\r\n/*versus*/  \r\nconst dispatch = useDispatch\r\n```\r\n\r\n- Forgetting the parenthesis on the the `useDispatch()` hook will cause the this error.  I was referencing the function, (`useDispatch`) instead of calling it (`useDispatch()`).\r\n\r\n\r\n- Hope this helps.","updated_at":"2023-03-25T07:48:55Z","created_at":"2023-03-25T07:48:55Z","creator_user_login":"TracyChacon"}
{"number":13991,"comment_id":"1540615415","body":"My issue was on how I was using Navigate when I changed to react-router 6. This was causing issues with my login. I changed it to useNavigate(). ","updated_at":"2023-05-09T17:55:04Z","created_at":"2023-05-09T17:55:04Z","creator_user_login":"billschnoebelen"}
{"number":13991,"comment_id":"1540717486","body":"I faced this issue in Gatsby 5 and the problem was because I violated the rule of hooks. I did not call it inside a React functional component which caused the error.","updated_at":"2023-05-09T18:50:33Z","created_at":"2023-05-09T18:50:33Z","creator_user_login":"adeleke5140"}
{"number":13991,"comment_id":"1552383965","body":"If you're facing this issue and you're:\r\n\r\n1. Using vite as your development server\r\n2. Also using cloudflare tunnel to serve your development server on a domain such as https://example.com.\r\n\r\nAnd you seems to only have this issue when going to the app at example.com, but the app is okay when going to localhost:5173, then do the following on example.com,\r\n\r\n1. Open up the dev tool\r\n2. Go to network tab\r\n3. Tick `disable cache`\r\n4. Full reload example.com by pressing F5.\r\n\r\nThis fixed the issue for me cause the browser is caching stuff on example.com, but not on localhost:5173.","updated_at":"2023-05-18T04:30:08Z","created_at":"2023-05-18T04:28:45Z","creator_user_login":"DoReVo"}
{"number":13991,"comment_id":"1565955700","body":"I have this same issue","updated_at":"2023-05-28T07:16:45Z","created_at":"2023-05-28T07:16:45Z","creator_user_login":"fepimentel"}
{"number":13991,"comment_id":"1597368524","body":"I have this issue too and already spend almost whole day to solve it.\r\nI try to follow the official guidance to find the reason, but nothing help.\r\nI print the react version, it prints `false`, but React1(index.js) is undefined. Hope someone can give me some help, thanks very much!\r\n\r\n\r\n\r\nps: I have to complain that i have no idea why it appear. My project work in React 16.14.x. sad.","updated_at":"2023-06-19T15:17:09Z","created_at":"2023-06-19T15:17:09Z","creator_user_login":"04756"}
{"number":13991,"comment_id":"1597433931","body":"> I have this issue too and already spend almost whole day to solve it. I try to follow the official guidance to find the reason, but nothing help. I print the react version, it prints `false`, but React1(index.js) is undefined. Hope someone can give me some help, thanks very much!\r\n> \r\n> ps: I have to complain that i have no idea why it appear. My project work in React 16.14.x. sad.\r\n\r\nTHANK GOD! I solve my problem in the last minutes of today.\r\nMy issue:\r\nWork nice in development, but can not work in product env. And the console gets Minified React error#321 .\r\n**I solve my issue by three steps(can't miss one of them in my case)**:\r\n1. add alias like [apieceofbart](https://github.com/apieceofbart)\r\n2. register global React in webpack plugin(I have to do this, or it will throw error \"React is undefined\")\r\n```\r\nnew webpack.ProvidePlugin({\r\n            React: 'react',\r\n        }),\r\n```\r\n3. upgrade all dependencies.(I suppose there are some dependencies need upgrade or it will cause some unexpected actions when deploy project)\r\n`pnpm upgrade`\r\n:)","updated_at":"2023-06-19T16:03:24Z","created_at":"2023-06-19T16:03:24Z","creator_user_login":"04756"}
{"number":13991,"comment_id":"1640652899","body":"Hi,\r\nI came across a scenario which is neither found in  https://legacy.reactjs.org/warnings/invalid-hook-call-warning.html nor here in this thread\r\nI have documented my use case here. https://medium.com/@murali.chepuri/invalid-hook-call-error-another-cause-5fb59710c269\r\nAnd here is the code that is causing this. https://github.com/mchepuri/InvalidHookCall/tree/main\r\nGithub README has all the steps how to reproduce. Wondering if the the way how we import the components could also cause the issue?\r\nWondering if this is a bug?","updated_at":"2023-07-18T17:24:20Z","created_at":"2023-07-18T17:23:03Z","creator_user_login":"mchepuri"}
{"number":13991,"comment_id":"1642095269","body":"> Hi,\r\n> \r\n> I came across a scenario which is neither found in  https://legacy.reactjs.org/warnings/invalid-hook-call-warning.html nor here in this thread\r\n> \r\n> I have documented my use case here. https://medium.com/@murali.chepuri/invalid-hook-call-error-another-cause-5fb59710c269\r\n> \r\n> And here is the code that is causing this. https://github.com/mchepuri/InvalidHookCall/tree/main\r\n> \r\n> Github README has all the steps how to reproduce. Wondering if the the way how we import the components could also cause the issue?\r\n> \r\n> Wondering if this is a bug?\r\n\r\nI'd take a look at it.\r\n\r\n@mchepuri I wasn't able to recreate the bug but what I noticed was that you were mixing up `default export` and `named export`\r\n\r\nDefault exports are in the format:\r\n```jsx\r\n//export\r\nconst Component = () => {}\r\n\r\nexport default Component\r\n\r\n//import\r\nimport Component from '@dir'\r\n```\r\n\r\nNamed export are in the format:\r\n```jsx\r\n//export\r\nconst Component = () => {}\r\n\r\nexport { Component }\r\n\r\n//import\r\nimport { Component } from '@dir'\r\n```\r\n\r\n~I got the landing component to work with that.~\r\nIt is still not working in Safari, weird.","updated_at":"2023-07-26T12:19:04Z","created_at":"2023-07-19T13:33:54Z","creator_user_login":"adeleke5140"}
{"number":13991,"comment_id":"1685063950","body":"I got this error by calling\r\n```js\r\nroot.render(MyComponent());\r\n```\r\ninstead of\r\n```js\r\nroot.render(<MyComponent />)\r\n```\r\n\r\nThe component being rendered is using `useState`, and it is defined in `MyComponent.tsx`, which is a TypeScript JSX module in a bundler context (webpack). TypeScript `jsx` option is set to `react`, so `import React from \"react\"` is necessary.\r\n\r\n```js\r\nimport React, {useState} from \"react\";\r\n\r\nexport default function MyComponent() {\r\n    const [myVar, setMyVar] = useState('testing...');\r\n\r\n   // ...\r\n}\r\n```\r\nIt's a silly mistake I made, and the resulting error message is very confusing, which made me lose hours trying to fix this.\r\n\r\nRelated: https://react.dev/reference/react-dom/client/createRoot#im-getting-an-error-functions-are-not-valid-as-a-react-child","updated_at":"2023-08-19T17:44:46Z","created_at":"2023-08-19T17:37:36Z","creator_user_login":"o-alquimista"}
{"number":13991,"comment_id":"1685068081","body":"Try this: Delete node_modules folder from any parent folders from your project\r\n________________________________\r\nFrom: Douglas Silva ***@***.***>\r\nSent: Saturday, August 19, 2023 10:37:50 AM\r\nTo: facebook/react ***@***.***>\r\nCc: Darren Rush ***@***.***>; Manual ***@***.***>\r\nSubject: Re: [facebook/react] Hooks + multiple instances of React (#13991)\r\n\r\n\r\nI got this error by calling\r\n\r\nroot.render(MyComponent());\r\n\r\ninstead of\r\n\r\nroot.render(<MyComponent />)\r\n\r\nThe component being rendered is using useState, and it is defined in MyComponent.tsx, which is a TypeScript JSX module in a bundler context (webpack). TypeScript jsx option is set to react, so import React from \"react\" is necessary.\r\n\r\nimport React, {useState} from \"react\";\r\n\r\nexport default function MyComponent() {\r\n    const [myVar, setMyVar] = useState('testing...');\r\n\r\n   // ...\r\n}\r\n\r\n—\r\nReply to this email directly, view it on GitHub<https://github.com/facebook/react/issues/13991#issuecomment-1685063950>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AAA23IJJFBSTYTBGCQOGDULXWD2W5ANCNFSM4F7UTLDA>.\r\nYou are receiving this because you are subscribed to this thread.Message ID: ***@***.***>\r\n","updated_at":"2023-08-19T17:39:37Z","created_at":"2023-08-19T17:39:37Z","creator_user_login":"drush"}
{"number":13991,"comment_id":"1690690162","body":"This keeps being flared as an incorrect usage of the 'useState' hook, although it doesn't seem to fall into any of the usual pitfalls to my eyes. I've tried some different strategies for removing duplicate Reacts and there's no mismatch in version. The closest I can think is that the function it's used in is later used as a constant, but I've tried ways of removing the constant with the same results. Again, this might just be a goof.\r\n\r\n```\r\nimport React, { useState } from 'react'\r\nimport { OptionsType } from '../types'\r\n\r\nconst Def = {\r\n    animation: true,\r\n}\r\n\r\nfunction Option<T, >(normParam: T): {get: Function, set: Function, reset: Function} {\r\n    const def: T = normParam;\r\n    const [value, setValue] = useState<T>(def);\r\n\r\n\r\n    const get = (): T => {\r\n        return value\r\n    }\r\n\r\n    const set = (newValue: T): void => {\r\n        console.log(newValue)\r\n        setValue(newValue)\r\n    }\r\n\r\n    const reset = (): void => {\r\n        setValue(def)\r\n    }\r\n\r\n    return {\r\n        get: () => get(),\r\n        set: (value: T) => set(value),\r\n        reset: () => reset(),\r\n    }\r\n}\r\n\r\nfunction Options(): OptionsType {\r\n    const animation = Option<boolean>(Def.animation)\r\n\r\n    return {\r\n        animation: animation\r\n    }\r\n}\r\n\r\nexport default Options()\r\n```","updated_at":"2023-08-23T21:48:18Z","created_at":"2023-08-23T21:48:18Z","creator_user_login":"J0EKW"}
{"number":13991,"comment_id":"1702512830","body":"Hello, I also have this issue. I read through the page carefully and checked everything and could not see anything amiss. \r\n\r\nI have a custom component library in **React 18.2.0** and a Project in **React 18.2.0**. Both use Vite for bundling. I am using serve side rendering with `vite-plugin-ssr`. I also asked the maintainer of VPS, but he said that it is a Dependency Injection issue of `react-dom` => https://github.com/brillout/vite-plugin-ssr/discussions/1101 \r\n\r\nThe issue is always occurring if I enable SSR, I don't see it if I only use client side rendering, which makes think that it might be due to that `import ReactDOMServer from 'react-dom/server';` is somehow using another React then my library does. \r\n\r\nIn my library I have created a dummy hook:\r\n\r\n```tsx\r\nfunction testHook() {\r\n  console.log('testHook: testHook');\r\n  console.log('testHook: React', React);\r\n  console.log('testHook: ReactDOM', ReactDOM);\r\n  console.log('testHook: testHook');\r\n  const [testBool, setTestBool] = useState(false);\r\n  useEffect(() => {}, []);\r\n}\r\n```\r\n\r\nI am calling this hook in my top level page component:\r\n\r\n```tsx\r\nfunction Page() {\r\n  //@ts-ignore\r\n  ReactDOM.testNew = 'testNew'; // I can see that this appended in my lib\r\n  //@ts-ignore\r\n  React.test = 'test';  // I can see that this appended in my lib\r\n  const test = testHook();\r\n  return <></>;\r\n}\r\n``` \r\n\r\nI also checked if `react-dom` is using the same `React`\r\n\r\n```tsx\r\n./node_modules/react-dom/index.js\r\n\r\nif (typeof window !== 'undefined') {\r\n  window.React1 = require('react');\r\n}\r\n\r\n./page/dummy.tsx\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n...\r\n\r\n  if (typeof window === 'undefined') {\r\n    return <></>;\r\n  }\r\n  @ts-ignore\r\n  window.React2 = require('react');\r\n  @ts-ignore\r\n  console.log(window.React1 === React); // true\r\n```\r\n\r\n**So It seems to me that I am doing everything correctly and still see this issue.** \r\n\r\n### I saw that the issue goes away if I do either:\r\n\r\n1. Use Client Side Rendering (not really an option)\r\n2. Redefine components and customHooks again in my project (not really an option)\r\n\r\n\r\n### Appendix:\r\n\r\nI am unsure if this helps but here are also my Vite bundling configs of my lib: \r\n\r\n```tsx\r\n/// <reference types=\"vitest\" />\r\nimport { defineConfig } from 'vite';\r\nimport react from '@vitejs/plugin-react';\r\nimport path from 'path';\r\nimport dts from 'vite-plugin-dts';\r\n\r\n// https://vitejs.dev/config/\r\nexport default defineConfig({\r\n  build: {\r\n    lib: {\r\n      entry: path.resolve(__dirname, 'src/index.ts'),\r\n      formats: ['es', 'cjs'],\r\n      name: '@workdigtital/component-library-react',\r\n      fileName: (format) => `index.${format}.js`\r\n    },\r\n    rollupOptions: {\r\n      external: ['react', 'react-dom'],\r\n      output: {\r\n        globals: {\r\n          react: 'React',\r\n          'react-dom': 'ReactDOM'\r\n        },\r\n        exports: 'named'\r\n      }\r\n    }\r\n  },\r\n  plugins: [react(), dts({ insertTypesEntry: true })],\r\n  test: {\r\n    globals: true,\r\n    environment: 'jsdom',\r\n    setupFiles: ['./src/tests/setup.ts'],\r\n    exclude: ['**/node_modules/**', '**/dist/**', '**/coverage/**', '**.stories**', '.storybook/**', '**.types**'],\r\n    coverage: {\r\n      all: true,\r\n      exclude: ['**/*.stories.tsx', '.storybook/**'],\r\n      provider: 'c8',\r\n      reporter: ['cobertura', 'html']\r\n    }\r\n  },\r\n  resolve: {\r\n    alias: {\r\n      '@': path.resolve(__dirname, './src'),\r\n      '@flaticon': path.resolve(__dirname, './node_modules/@flaticon')\r\n    }\r\n  }\r\n});\r\n```\r\nStack Trace:\r\n\r\n```\r\nreact-dom.development.js:20662 Uncaught Error: Cannot read properties of null (reading 'useState')\r\n    at updateDehydratedSuspenseComponent (react-dom.development.js:20662:17)\r\n    at updateSuspenseComponent (react-dom.development.js:20362:16)\r\n    at beginWork (react-dom.development.js:21624:14)\r\n    at beginWork$1 (react-dom.development.js:27426:14)\r\n    at performUnitOfWork (react-dom.development.js:26557:12)\r\n    at workLoopSync (react-dom.development.js:26466:5)\r\n    at renderRootSync (react-dom.development.js:26434:7)\r\n    at performConcurrentWorkOnRoot (react-dom.development.js:25738:74)\r\n    at workLoop (scheduler.development.js:266:34)\r\n    at flushWork (scheduler.development.js:239:14)\r\n```\r\n\r\n\r\n### Solution\r\n\r\nMy issue was with a third party plugin https://socket.dev/npm/package/vite-plugin-circular-dependency, removing it helped.","updated_at":"2023-09-01T12:15:14Z","created_at":"2023-09-01T10:13:28Z","creator_user_login":"snake-py"}
